

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jun 02 17:37:06 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           	psect	idataBANK0
    85  01661A                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _delay_quartz_frequency_value
    89  01661A  10                 	db	16
    90                           
    91                           	psect	mediumconst
    92  00FD74                     __pmediumconst:
    93                           	opt stack 0
    94  00FD74  00                 	db	0
    95  00FD75                     __npowers_:
    96                           	opt stack 0
    97  00FD75  0000               	dw	0
    98  00FD77  3F80               	dw	16256
    99  00FD79  CCCD               	dw	52429
   100  00FD7B  3DCC               	dw	15820
   101  00FD7D  D70A               	dw	55050
   102  00FD7F  3C23               	dw	15395
   103  00FD81  126F               	dw	4719
   104  00FD83  3A83               	dw	14979
   105  00FD85  B717               	dw	46871
   106  00FD87  38D1               	dw	14545
   107  00FD89  C5AC               	dw	50604
   108  00FD8B  3727               	dw	14119
   109  00FD8D  37BD               	dw	14269
   110  00FD8F  3586               	dw	13702
   111  00FD91  BF95               	dw	49045
   112  00FD93  33D6               	dw	13270
   113  00FD95  CC77               	dw	52343
   114  00FD97  322B               	dw	12843
   115  00FD99  705F               	dw	28767
   116  00FD9B  3089               	dw	12425
   117  00FD9D  E6FF               	dw	59135
   118  00FD9F  2EDB               	dw	11995
   119  00FDA1  E508               	dw	58632
   120  00FDA3  1E3C               	dw	7740
   121  00FDA5  4260               	dw	16992
   122  00FDA7  0DA2               	dw	3490
   123  00FDA9                     __end_of__npowers_:
   124                           	opt stack 0
   125  00FDA9                     __powers_:
   126                           	opt stack 0
   127  00FDA9  0000               	dw	0
   128  00FDAB  3F80               	dw	16256
   129  00FDAD  0000               	dw	0
   130  00FDAF  4120               	dw	16672
   131  00FDB1  0000               	dw	0
   132  00FDB3  42C8               	dw	17096
   133  00FDB5  0000               	dw	0
   134  00FDB7  447A               	dw	17530
   135  00FDB9  4000               	dw	16384
   136  00FDBB  461C               	dw	17948
   137  00FDBD  5000               	dw	20480
   138  00FDBF  47C3               	dw	18371
   139  00FDC1  2400               	dw	9216
   140  00FDC3  4974               	dw	18804
   141  00FDC5  9680               	dw	38528
   142  00FDC7  4B18               	dw	19224
   143  00FDC9  BC20               	dw	48160
   144  00FDCB  4CBE               	dw	19646
   145  00FDCD  6B28               	dw	27432
   146  00FDCF  4E6E               	dw	20078
   147  00FDD1  02F9               	dw	761
   148  00FDD3  5015               	dw	20501
   149  00FDD5  78EC               	dw	30956
   150  00FDD7  60AD               	dw	24749
   151  00FDD9  F2CA               	dw	62154
   152  00FDDB  7149               	dw	29001
   153  00FDDD                     __end_of__powers_:
   154                           	opt stack 0
   155  00FDDD                     _dpowers:
   156                           	opt stack 0
   157  00FDDD  0001               	dw	1
   158  00FDDF  0000               	dw	0
   159  00FDE1  000A               	dw	10
   160  00FDE3  0000               	dw	0
   161  00FDE5  0064               	dw	100
   162  00FDE7  0000               	dw	0
   163  00FDE9  03E8               	dw	1000
   164  00FDEB  0000               	dw	0
   165  00FDED  2710               	dw	10000
   166  00FDEF  0000               	dw	0
   167  00FDF1  86A0               	dw	34464
   168  00FDF3  0001               	dw	1
   169  00FDF5  4240               	dw	16960
   170  00FDF7  000F               	dw	15
   171  00FDF9  9680               	dw	38528
   172  00FDFB  0098               	dw	152
   173  00FDFD  E100               	dw	57600
   174  00FDFF  05F5               	dw	1525
   175  00FE01  CA00               	dw	51712
   176  00FE03  3B9A               	dw	15258
   177  00FE05                     __end_of_dpowers:
   178                           	opt stack 0
   179  0000                     _RXB1CON	set	3920
   180  0000                     _RXB1CONbits	set	3920
   181  0000                     _RXB1D0	set	3926
   182  0000                     _RXB1D1	set	3927
   183  0000                     _RXB1D2	set	3928
   184  0000                     _RXB1D3	set	3929
   185  0000                     _RXB1D4	set	3930
   186  0000                     _RXB1D5	set	3931
   187  0000                     _RXB1D6	set	3932
   188  0000                     _RXB1D7	set	3933
   189  0000                     _RXB1DLC	set	3925
   190  0000                     _RXB1DLCbits	set	3925
   191  0000                     _RXB1EIDH	set	3923
   192  0000                     _RXB1EIDL	set	3924
   193  0000                     _RXB1SIDH	set	3921
   194  0000                     _RXB1SIDL	set	3922
   195  0000                     _RXB1SIDLbits	set	3922
   196  0000                     _RXF0EIDH	set	3842
   197  0000                     _RXF0EIDL	set	3843
   198  0000                     _RXF0SIDH	set	3840
   199  0000                     _RXF0SIDL	set	3841
   200  0000                     _RXF0SIDLbits	set	3841
   201  0000                     _RXF1EIDH	set	3846
   202  0000                     _RXF1EIDL	set	3847
   203  0000                     _RXF1SIDH	set	3844
   204  0000                     _RXF1SIDL	set	3845
   205  0000                     _RXF1SIDLbits	set	3845
   206  0000                     _RXF2EIDH	set	3850
   207  0000                     _RXF2EIDL	set	3851
   208  0000                     _RXF2SIDH	set	3848
   209  0000                     _RXF2SIDL	set	3849
   210  0000                     _RXF2SIDLbits	set	3849
   211  0000                     _RXF3EIDH	set	3854
   212  0000                     _RXF3EIDL	set	3855
   213  0000                     _RXF3SIDH	set	3852
   214  0000                     _RXF3SIDL	set	3853
   215  0000                     _RXF3SIDLbits	set	3853
   216  0000                     _RXF4EIDH	set	3858
   217  0000                     _RXF4EIDL	set	3859
   218  0000                     _RXF4SIDH	set	3856
   219  0000                     _RXF4SIDL	set	3857
   220  0000                     _RXF4SIDLbits	set	3857
   221  0000                     _RXF5EIDH	set	3862
   222  0000                     _RXF5EIDL	set	3863
   223  0000                     _RXF5SIDH	set	3860
   224  0000                     _RXF5SIDL	set	3861
   225  0000                     _RXF5SIDLbits	set	3861
   226  0000                     _RXM0EIDH	set	3866
   227  0000                     _RXM0EIDL	set	3867
   228  0000                     _RXM0SIDH	set	3864
   229  0000                     _RXM0SIDL	set	3865
   230  0000                     _RXM0SIDLbits	set	3865
   231  0000                     _RXM1EIDH	set	3870
   232  0000                     _RXM1EIDL	set	3871
   233  0000                     _RXM1SIDH	set	3868
   234  0000                     _RXM1SIDL	set	3869
   235  0000                     _RXM1SIDLbits	set	3869
   236  0000                     _TXB0CONbits	set	3904
   237  0000                     _TXB0D0	set	3910
   238  0000                     _TXB0D1	set	3911
   239  0000                     _TXB0D2	set	3912
   240  0000                     _TXB0D3	set	3913
   241  0000                     _TXB0D4	set	3914
   242  0000                     _TXB0D5	set	3915
   243  0000                     _TXB0D6	set	3916
   244  0000                     _TXB0D7	set	3917
   245  0000                     _TXB0DLC	set	3909
   246  0000                     _TXB0DLCbits	set	3909
   247  0000                     _TXB0EIDH	set	3907
   248  0000                     _TXB0EIDL	set	3908
   249  0000                     _TXB0SIDH	set	3905
   250  0000                     _TXB0SIDL	set	3906
   251  0000                     _TXB0SIDLbits	set	3906
   252  0000                     _TXB1CONbits	set	3888
   253  0000                     _TXB1D0	set	3894
   254  0000                     _TXB1D1	set	3895
   255  0000                     _TXB1D2	set	3896
   256  0000                     _TXB1D3	set	3897
   257  0000                     _TXB1D4	set	3898
   258  0000                     _TXB1D5	set	3899
   259  0000                     _TXB1D6	set	3900
   260  0000                     _TXB1D7	set	3901
   261  0000                     _TXB1DLC	set	3893
   262  0000                     _TXB1DLCbits	set	3893
   263  0000                     _TXB1EIDH	set	3891
   264  0000                     _TXB1EIDL	set	3892
   265  0000                     _TXB1SIDH	set	3889
   266  0000                     _TXB1SIDL	set	3890
   267  0000                     _TXB1SIDLbits	set	3890
   268  0000                     _TXB2CONbits	set	3872
   269  0000                     _TXB2D0	set	3878
   270  0000                     _TXB2D1	set	3879
   271  0000                     _TXB2D2	set	3880
   272  0000                     _TXB2D3	set	3881
   273  0000                     _TXB2D4	set	3882
   274  0000                     _TXB2D5	set	3883
   275  0000                     _TXB2D6	set	3884
   276  0000                     _TXB2D7	set	3885
   277  0000                     _TXB2DLC	set	3877
   278  0000                     _TXB2DLCbits	set	3877
   279  0000                     _TXB2EIDH	set	3875
   280  0000                     _TXB2EIDL	set	3876
   281  0000                     _TXB2SIDH	set	3873
   282  0000                     _TXB2SIDL	set	3874
   283  0000                     _TXB2SIDLbits	set	3874
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _ADCON1	set	4033
   286  0000                     _ADCON2bits	set	4032
   287  0000                     _ADRESH	set	4036
   288  0000                     _BRGCON1	set	3952
   289  0000                     _BRGCON2	set	3953
   290  0000                     _BRGCON2bits	set	3953
   291  0000                     _BRGCON3	set	3954
   292  0000                     _BRGCON3bits	set	3954
   293  0000                     _CANCON	set	3951
   294  0000                     _CANCONbits	set	3951
   295  0000                     _CANSTAT	set	3950
   296  0000                     _COMSTATbits	set	3956
   297  0000                     _INTCONbits	set	4082
   298  0000                     _IPR2bits	set	4002
   299  0000                     _IPR3bits	set	4005
   300  0000                     _LATA	set	3977
   301  0000                     _LATB	set	3978
   302  0000                     _LATC	set	3979
   303  0000                     _LATCbits	set	3979
   304  0000                     _LATD	set	3980
   305  0000                     _LATDbits	set	3980
   306  0000                     _LATE	set	3981
   307  0000                     _LATEbits	set	3981
   308  0000                     _PIE2bits	set	4000
   309  0000                     _PIE3bits	set	4003
   310  0000                     _PIR2bits	set	4001
   311  0000                     _PIR3bits	set	4004
   312  0000                     _PORTAbits	set	3968
   313  0000                     _PORTBbits	set	3969
   314  0000                     _PORTDbits	set	3971
   315  0000                     _RCONbits	set	4048
   316  0000                     _RXB0CON	set	3936
   317  0000                     _RXB0CONbits	set	3936
   318  0000                     _RXB0D0	set	3942
   319  0000                     _RXB0D1	set	3943
   320  0000                     _RXB0D2	set	3944
   321  0000                     _RXB0D3	set	3945
   322  0000                     _RXB0D4	set	3946
   323  0000                     _RXB0D5	set	3947
   324  0000                     _RXB0D6	set	3948
   325  0000                     _RXB0D7	set	3949
   326  0000                     _RXB0DLC	set	3941
   327  0000                     _RXB0DLCbits	set	3941
   328  0000                     _RXB0EIDH	set	3939
   329  0000                     _RXB0EIDL	set	3940
   330  0000                     _RXB0SIDH	set	3937
   331  0000                     _RXB0SIDL	set	3938
   332  0000                     _RXB0SIDLbits	set	3938
   333  0000                     _RXERRCNT	set	3957
   334  0000                     _T3CON	set	4017
   335  0000                     _TMR3H	set	4019
   336  0000                     _TMR3L	set	4018
   337  0000                     _TRISA	set	3986
   338  0000                     _TRISB	set	3987
   339  0000                     _TRISC	set	3988
   340  0000                     _TRISD	set	3989
   341  0000                     _TRISE	set	3990
   342  0000                     _TXERRCNT	set	3958
   343  00FE05                     STR_11:
   344  00FE05  44                 	db	68	;'D'
   345  00FE06  69                 	db	105	;'i'
   346  00FE07  72                 	db	114	;'r'
   347  00FE08  65                 	db	101	;'e'
   348  00FE09  63                 	db	99	;'c'
   349  00FE0A  74                 	db	116	;'t'
   350  00FE0B  69                 	db	105	;'i'
   351  00FE0C  6F                 	db	111	;'o'
   352  00FE0D  6E                 	db	110	;'n'
   353  00FE0E  3A                 	db	58	;':'
   354  00FE0F  20                 	db	32
   355  00FE10  20                 	db	32
   356  00FE11  20                 	db	32
   357  00FE12  20                 	db	32
   358  00FE13  20                 	db	32
   359  00FE14  20                 	db	32
   360  00FE15  20                 	db	32
   361  00FE16  20                 	db	32
   362  00FE17  20                 	db	32
   363  00FE18  20                 	db	32
   364  00FE19  00                 	db	0
   365  00FE1A                     STR_36:
   366  00FE1A  20                 	db	32
   367  00FE1B  20                 	db	32
   368  00FE1C  20                 	db	32
   369  00FE1D  20                 	db	32
   370  00FE1E  20                 	db	32
   371  00FE1F  20                 	db	32
   372  00FE20  20                 	db	32
   373  00FE21  46                 	db	70	;'F'
   374  00FE22  41                 	db	65	;'A'
   375  00FE23  49                 	db	73	;'I'
   376  00FE24  4C                 	db	76	;'L'
   377  00FE25  45                 	db	69	;'E'
   378  00FE26  44                 	db	68	;'D'
   379  00FE27  21                 	db	33
   380  00FE28  20                 	db	32
   381  00FE29  20                 	db	32
   382  00FE2A  20                 	db	32
   383  00FE2B  20                 	db	32
   384  00FE2C  20                 	db	32
   385  00FE2D  20                 	db	32
   386  00FE2E  00                 	db	0
   387  00FE2F                     STR_33:
   388  00FE2F  20                 	db	32
   389  00FE30  20                 	db	32
   390  00FE31  20                 	db	32
   391  00FE32  20                 	db	32
   392  00FE33  20                 	db	32
   393  00FE34  43                 	db	67	;'C'
   394  00FE35  4F                 	db	79	;'O'
   395  00FE36  4D                 	db	77	;'M'
   396  00FE37  50                 	db	80	;'P'
   397  00FE38  4C                 	db	76	;'L'
   398  00FE39  45                 	db	69	;'E'
   399  00FE3A  54                 	db	84	;'T'
   400  00FE3B  45                 	db	69	;'E'
   401  00FE3C  44                 	db	68	;'D'
   402  00FE3D  21                 	db	33
   403  00FE3E  20                 	db	32
   404  00FE3F  20                 	db	32
   405  00FE40  20                 	db	32
   406  00FE41  20                 	db	32
   407  00FE42  20                 	db	32
   408  00FE43  00                 	db	0
   409  00FE44                     STR_32:
   410  00FE44  20                 	db	32
   411  00FE45  20                 	db	32
   412  00FE46  20                 	db	32
   413  00FE47  20                 	db	32
   414  00FE48  53                 	db	83	;'S'
   415  00FE49  55                 	db	85	;'U'
   416  00FE4A  43                 	db	67	;'C'
   417  00FE4B  43                 	db	67	;'C'
   418  00FE4C  45                 	db	69	;'E'
   419  00FE4D  53                 	db	83	;'S'
   420  00FE4E  53                 	db	83	;'S'
   421  00FE4F  46                 	db	70	;'F'
   422  00FE50  55                 	db	85	;'U'
   423  00FE51  4C                 	db	76	;'L'
   424  00FE52  4C                 	db	76	;'L'
   425  00FE53  59                 	db	89	;'Y'
   426  00FE54  20                 	db	32
   427  00FE55  20                 	db	32
   428  00FE56  20                 	db	32
   429  00FE57  20                 	db	32
   430  00FE58  00                 	db	0
   431  00FE59                     STR_25:
   432  00FE59  20                 	db	32
   433  00FE5A  20                 	db	32
   434  00FE5B  20                 	db	32
   435  00FE5C  73                 	db	115	;'s'
   436  00FE5D  74                 	db	116	;'t'
   437  00FE5E  61                 	db	97	;'a'
   438  00FE5F  72                 	db	114	;'r'
   439  00FE60  74                 	db	116	;'t'
   440  00FE61  20                 	db	32
   441  00FE62  70                 	db	112	;'p'
   442  00FE63  61                 	db	97	;'a'
   443  00FE64  72                 	db	114	;'r'
   444  00FE65  6B                 	db	107	;'k'
   445  00FE66  69                 	db	105	;'i'
   446  00FE67  6E                 	db	110	;'n'
   447  00FE68  67                 	db	103	;'g'
   448  00FE69  20                 	db	32
   449  00FE6A  20                 	db	32
   450  00FE6B  20                 	db	32
   451  00FE6C  20                 	db	32
   452  00FE6D  00                 	db	0
   453  00FE6E                     STR_3:
   454  00FE6E  20                 	db	32
   455  00FE6F  20                 	db	32
   456  00FE70  50                 	db	80	;'P'
   457  00FE71  72                 	db	114	;'r'
   458  00FE72  65                 	db	101	;'e'
   459  00FE73  73                 	db	115	;'s'
   460  00FE74  73                 	db	115	;'s'
   461  00FE75  20                 	db	32
   462  00FE76  74                 	db	116	;'t'
   463  00FE77  68                 	db	104	;'h'
   464  00FE78  65                 	db	101	;'e'
   465  00FE79  20                 	db	32
   466  00FE7A  62                 	db	98	;'b'
   467  00FE7B  75                 	db	117	;'u'
   468  00FE7C  74                 	db	116	;'t'
   469  00FE7D  74                 	db	116	;'t'
   470  00FE7E  6F                 	db	111	;'o'
   471  00FE7F  6E                 	db	110	;'n'
   472  00FE80  20                 	db	32
   473  00FE81  20                 	db	32
   474  00FE82  00                 	db	0
   475  00FE83                     STR_37:
   476  00FE83  20                 	db	32
   477  00FE84  20                 	db	32
   478  00FE85  20                 	db	32
   479  00FE86  64                 	db	100	;'d'
   480  00FE87  75                 	db	117	;'u'
   481  00FE88  65                 	db	101	;'e'
   482  00FE89  20                 	db	32
   483  00FE8A  74                 	db	116	;'t'
   484  00FE8B  6F                 	db	111	;'o'
   485  00FE8C  20                 	db	32
   486  00FE8D  61                 	db	97	;'a'
   487  00FE8E  6E                 	db	110	;'n'
   488  00FE8F  20                 	db	32
   489  00FE90  65                 	db	101	;'e'
   490  00FE91  72                 	db	114	;'r'
   491  00FE92  72                 	db	114	;'r'
   492  00FE93  6F                 	db	111	;'o'
   493  00FE94  72                 	db	114	;'r'
   494  00FE95  20                 	db	32
   495  00FE96  20                 	db	32
   496  00FE97  00                 	db	0
   497  00FE98                     STR_21:
   498  00FE98  20                 	db	32
   499  00FE99  75                 	db	117	;'u'
   500  00FE9A  6E                 	db	110	;'n'
   501  00FE9B  74                 	db	116	;'t'
   502  00FE9C  69                 	db	105	;'i'
   503  00FE9D  6C                 	db	108	;'l'
   504  00FE9E  20                 	db	32
   505  00FE9F  6E                 	db	110	;'n'
   506  00FEA0  65                 	db	101	;'e'
   507  00FEA1  78                 	db	120	;'x'
   508  00FEA2  74                 	db	116	;'t'
   509  00FEA3  20                 	db	32
   510  00FEA4  6D                 	db	109	;'m'
   511  00FEA5  65                 	db	101	;'e'
   512  00FEA6  73                 	db	115	;'s'
   513  00FEA7  73                 	db	115	;'s'
   514  00FEA8  61                 	db	97	;'a'
   515  00FEA9  67                 	db	103	;'g'
   516  00FEAA  65                 	db	101	;'e'
   517  00FEAB  20                 	db	32
   518  00FEAC  00                 	db	0
   519  00FEAD                     STR_24:
   520  00FEAD  50                 	db	80	;'P'
   521  00FEAE  72                 	db	114	;'r'
   522  00FEAF  65                 	db	101	;'e'
   523  00FEB0  73                 	db	115	;'s'
   524  00FEB1  73                 	db	115	;'s'
   525  00FEB2  20                 	db	32
   526  00FEB3  74                 	db	116	;'t'
   527  00FEB4  68                 	db	104	;'h'
   528  00FEB5  65                 	db	101	;'e'
   529  00FEB6  20                 	db	32
   530  00FEB7  42                 	db	66	;'B'
   531  00FEB8  55                 	db	85	;'U'
   532  00FEB9  54                 	db	84	;'T'
   533  00FEBA  54                 	db	84	;'T'
   534  00FEBB  4F                 	db	79	;'O'
   535  00FEBC  4E                 	db	78	;'N'
   536  00FEBD  20                 	db	32
   537  00FEBE  74                 	db	116	;'t'
   538  00FEBF  6F                 	db	111	;'o'
   539  00FEC0  20                 	db	32
   540  00FEC1  00                 	db	0
   541  00FEC2                     STR_31:
   542  00FEC2  20                 	db	32
   543  00FEC3  50                 	db	80	;'P'
   544  00FEC4  61                 	db	97	;'a'
   545  00FEC5  72                 	db	114	;'r'
   546  00FEC6  6B                 	db	107	;'k'
   547  00FEC7  69                 	db	105	;'i'
   548  00FEC8  6E                 	db	110	;'n'
   549  00FEC9  67                 	db	103	;'g'
   550  00FECA  20                 	db	32
   551  00FECB  70                 	db	112	;'p'
   552  00FECC  72                 	db	114	;'r'
   553  00FECD  6F                 	db	111	;'o'
   554  00FECE  63                 	db	99	;'c'
   555  00FECF  65                 	db	101	;'e'
   556  00FED0  64                 	db	100	;'d'
   557  00FED1  75                 	db	117	;'u'
   558  00FED2  72                 	db	114	;'r'
   559  00FED3  65                 	db	101	;'e'
   560  00FED4  73                 	db	115	;'s'
   561  00FED5  20                 	db	32
   562  00FED6  00                 	db	0
   563  00FED7                     STR_23:
   564  00FED7  2D                 	db	45
   565  00FED8  20                 	db	32
   566  00FED9  44                 	db	68	;'D'
   567  00FEDA  69                 	db	105	;'i'
   568  00FEDB  73                 	db	115	;'s'
   569  00FEDC  74                 	db	116	;'t'
   570  00FEDD  61                 	db	97	;'a'
   571  00FEDE  6E                 	db	110	;'n'
   572  00FEDF  63                 	db	99	;'c'
   573  00FEE0  65                 	db	101	;'e'
   574  00FEE1  20                 	db	32
   575  00FEE2  52                 	db	82	;'R'
   576  00FEE3  45                 	db	69	;'E'
   577  00FEE4  41                 	db	65	;'A'
   578  00FEE5  43                 	db	67	;'C'
   579  00FEE6  48                 	db	72	;'H'
   580  00FEE7  45                 	db	69	;'E'
   581  00FEE8  44                 	db	68	;'D'
   582  00FEE9  20                 	db	32
   583  00FEEA  2D                 	db	45
   584  00FEEB  00                 	db	0
   585  00FEEC                     STR_20:
   586  00FEEC  2D                 	db	45
   587  00FEED  3E                 	db	62	;'>'
   588  00FEEE  20                 	db	32
   589  00FEEF  20                 	db	32
   590  00FEF0  4B                 	db	75	;'K'
   591  00FEF1  45                 	db	69	;'E'
   592  00FEF2  45                 	db	69	;'E'
   593  00FEF3  50                 	db	80	;'P'
   594  00FEF4  20                 	db	32
   595  00FEF5  4D                 	db	77	;'M'
   596  00FEF6  4F                 	db	79	;'O'
   597  00FEF7  56                 	db	86	;'V'
   598  00FEF8  49                 	db	73	;'I'
   599  00FEF9  4E                 	db	78	;'N'
   600  00FEFA  47                 	db	71	;'G'
   601  00FEFB  20                 	db	32
   602  00FEFC  20                 	db	32
   603  00FEFD  20                 	db	32
   604  00FEFE  3C                 	db	60	;'<'
   605  00FEFF  2D                 	db	45
   606  00FF00  00                 	db	0
   607  00FF01                     STR_15:
   608  00FF01  2D                 	db	45
   609  00FF02  3E                 	db	62	;'>'
   610  00FF03  20                 	db	32
   611  00FF04  53                 	db	83	;'S'
   612  00FF05  61                 	db	97	;'a'
   613  00FF06  66                 	db	102	;'f'
   614  00FF07  65                 	db	101	;'e'
   615  00FF08  74                 	db	116	;'t'
   616  00FF09  79                 	db	121	;'y'
   617  00FF0A  20                 	db	32
   618  00FF0B  62                 	db	98	;'b'
   619  00FF0C  72                 	db	114	;'r'
   620  00FF0D  61                 	db	97	;'a'
   621  00FF0E  6B                 	db	107	;'k'
   622  00FF0F  65                 	db	101	;'e'
   623  00FF10  20                 	db	32
   624  00FF11  4F                 	db	79	;'O'
   625  00FF12  4E                 	db	78	;'N'
   626  00FF13  3C                 	db	60	;'<'
   627  00FF14  2D                 	db	45
   628  00FF15  00                 	db	0
   629  00FF16                     STR_27:
   630  00FF16  3D                 	db	61	;'='
   631  00FF17  20                 	db	32
   632  00FF18  20                 	db	32
   633  00FF19  20                 	db	32
   634  00FF1A  20                 	db	32
   635  00FF1B  50                 	db	80	;'P'
   636  00FF1C  61                 	db	97	;'a'
   637  00FF1D  72                 	db	114	;'r'
   638  00FF1E  6B                 	db	107	;'k'
   639  00FF1F  69                 	db	105	;'i'
   640  00FF20  6E                 	db	110	;'n'
   641  00FF21  67                 	db	103	;'g'
   642  00FF22  20                 	db	32
   643  00FF23  69                 	db	105	;'i'
   644  00FF24  6E                 	db	110	;'n'
   645  00FF25  20                 	db	32
   646  00FF26  20                 	db	32
   647  00FF27  20                 	db	32
   648  00FF28  20                 	db	32
   649  00FF29  3D                 	db	61	;'='
   650  00FF2A  00                 	db	0
   651  00FF2B                     STR_28:
   652  00FF2B  3D                 	db	61	;'='
   653  00FF2C  20                 	db	32
   654  00FF2D  20                 	db	32
   655  00FF2E  20                 	db	32
   656  00FF2F  20                 	db	32
   657  00FF30  70                 	db	112	;'p'
   658  00FF31  72                 	db	114	;'r'
   659  00FF32  6F                 	db	111	;'o'
   660  00FF33  67                 	db	103	;'g'
   661  00FF34  72                 	db	114	;'r'
   662  00FF35  65                 	db	101	;'e'
   663  00FF36  73                 	db	115	;'s'
   664  00FF37  73                 	db	115	;'s'
   665  00FF38  2E                 	db	46
   666  00FF39  2E                 	db	46
   667  00FF3A  2E                 	db	46
   668  00FF3B  20                 	db	32
   669  00FF3C  20                 	db	32
   670  00FF3D  20                 	db	32
   671  00FF3E  3D                 	db	61	;'='
   672  00FF3F  00                 	db	0
   673  00FF40                     STR_18:
   674  00FF40  3D                 	db	61	;'='
   675  00FF41  20                 	db	32
   676  00FF42  50                 	db	80	;'P'
   677  00FF43  41                 	db	65	;'A'
   678  00FF44  52                 	db	82	;'R'
   679  00FF45  4B                 	db	75	;'K'
   680  00FF46  49                 	db	73	;'I'
   681  00FF47  4E                 	db	78	;'N'
   682  00FF48  47                 	db	71	;'G'
   683  00FF49  20                 	db	32
   684  00FF4A  4D                 	db	77	;'M'
   685  00FF4B  45                 	db	69	;'E'
   686  00FF4C  53                 	db	83	;'S'
   687  00FF4D  53                 	db	83	;'S'
   688  00FF4E  41                 	db	65	;'A'
   689  00FF4F  47                 	db	71	;'G'
   690  00FF50  45                 	db	69	;'E'
   691  00FF51  53                 	db	83	;'S'
   692  00FF52  20                 	db	32
   693  00FF53  3D                 	db	61	;'='
   694  00FF54  00                 	db	0
   695  00FF55                     STR_2:
   696  00FF55  3D                 	db	61	;'='
   697  00FF56  3D                 	db	61	;'='
   698  00FF57  3E                 	db	62	;'>'
   699  00FF58  20                 	db	32
   700  00FF59  56                 	db	86	;'V'
   701  00FF5A  45                 	db	69	;'E'
   702  00FF5B  48                 	db	72	;'H'
   703  00FF5C  49                 	db	73	;'I'
   704  00FF5D  43                 	db	67	;'C'
   705  00FF5E  4C                 	db	76	;'L'
   706  00FF5F  45                 	db	69	;'E'
   707  00FF60  20                 	db	32
   708  00FF61  20                 	db	32
   709  00FF62  4F                 	db	79	;'O'
   710  00FF63  46                 	db	70	;'F'
   711  00FF64  46                 	db	70	;'F'
   712  00FF65  20                 	db	32
   713  00FF66  3C                 	db	60	;'<'
   714  00FF67  3D                 	db	61	;'='
   715  00FF68  3D                 	db	61	;'='
   716  00FF69  00                 	db	0
   717  00FF6A                     STR_6:
   718  00FF6A  3D                 	db	61	;'='
   719  00FF6B  3D                 	db	61	;'='
   720  00FF6C  3D                 	db	61	;'='
   721  00FF6D  20                 	db	32
   722  00FF6E  56                 	db	86	;'V'
   723  00FF6F  45                 	db	69	;'E'
   724  00FF70  48                 	db	72	;'H'
   725  00FF71  49                 	db	73	;'I'
   726  00FF72  43                 	db	67	;'C'
   727  00FF73  4C                 	db	76	;'L'
   728  00FF74  45                 	db	69	;'E'
   729  00FF75  20                 	db	32
   730  00FF76  44                 	db	68	;'D'
   731  00FF77  41                 	db	65	;'A'
   732  00FF78  54                 	db	84	;'T'
   733  00FF79  41                 	db	65	;'A'
   734  00FF7A  20                 	db	32
   735  00FF7B  3D                 	db	61	;'='
   736  00FF7C  3D                 	db	61	;'='
   737  00FF7D  3D                 	db	61	;'='
   738  00FF7E  00                 	db	0
   739  00FF7F                     STR_1:
   740  00FF7F  3D                 	db	61	;'='
   741  00FF80  3D                 	db	61	;'='
   742  00FF81  3D                 	db	61	;'='
   743  00FF82  3D                 	db	61	;'='
   744  00FF83  3D                 	db	61	;'='
   745  00FF84  3D                 	db	61	;'='
   746  00FF85  3D                 	db	61	;'='
   747  00FF86  3D                 	db	61	;'='
   748  00FF87  3D                 	db	61	;'='
   749  00FF88  3D                 	db	61	;'='
   750  00FF89  3D                 	db	61	;'='
   751  00FF8A  3D                 	db	61	;'='
   752  00FF8B  3D                 	db	61	;'='
   753  00FF8C  3D                 	db	61	;'='
   754  00FF8D  3D                 	db	61	;'='
   755  00FF8E  3D                 	db	61	;'='
   756  00FF8F  3D                 	db	61	;'='
   757  00FF90  3D                 	db	61	;'='
   758  00FF91  3D                 	db	61	;'='
   759  00FF92  3D                 	db	61	;'='
   760  00FF93  00                 	db	0
   761  00FF94                     STR_19:
   762  00FF94  20                 	db	32
   763  00FF95  50                 	db	80	;'P'
   764  00FF96  61                 	db	97	;'a'
   765  00FF97  72                 	db	114	;'r'
   766  00FF98  6B                 	db	107	;'k'
   767  00FF99  69                 	db	105	;'i'
   768  00FF9A  6E                 	db	110	;'n'
   769  00FF9B  67                 	db	103	;'g'
   770  00FF9C  20                 	db	32
   771  00FF9D  73                 	db	115	;'s'
   772  00FF9E  70                 	db	112	;'p'
   773  00FF9F  61                 	db	97	;'a'
   774  00FFA0  63                 	db	99	;'c'
   775  00FFA1  65                 	db	101	;'e'
   776  00FFA2  20                 	db	32
   777  00FFA3  46                 	db	70	;'F'
   778  00FFA4  4F                 	db	79	;'O'
   779  00FFA5  55                 	db	85	;'U'
   780  00FFA6  4E                 	db	78	;'N'
   781  00FFA7  44                 	db	68	;'D'
   782  00FFA8  00                 	db	0
   783  00FFA9                     STR_8:
   784  00FFA9  53                 	db	83	;'S'
   785  00FFAA  70                 	db	112	;'p'
   786  00FFAB  65                 	db	101	;'e'
   787  00FFAC  65                 	db	101	;'e'
   788  00FFAD  64                 	db	100	;'d'
   789  00FFAE  3A                 	db	58	;':'
   790  00FFAF  20                 	db	32
   791  00FFB0  30                 	db	48	;'0'
   792  00FFB1  2E                 	db	46
   793  00FFB2  30                 	db	48	;'0'
   794  00FFB3  30                 	db	48	;'0'
   795  00FFB4  20                 	db	32
   796  00FFB5  4B                 	db	75	;'K'
   797  00FFB6  6D                 	db	109	;'m'
   798  00FFB7  2F                 	db	47
   799  00FFB8  68                 	db	104	;'h'
   800  00FFB9  00                 	db	0
   801  00FFBA                     STR_9:
   802  00FFBA  50                 	db	80	;'P'
   803  00FFBB  61                 	db	97	;'a'
   804  00FFBC  72                 	db	114	;'r'
   805  00FFBD  6B                 	db	107	;'k'
   806  00FFBE  20                 	db	32
   807  00FFBF  61                 	db	97	;'a'
   808  00FFC0  73                 	db	115	;'s'
   809  00FFC1  73                 	db	115	;'s'
   810  00FFC2  69                 	db	105	;'i'
   811  00FFC3  73                 	db	115	;'s'
   812  00FFC4  74                 	db	116	;'t'
   813  00FFC5  3A                 	db	58	;':'
   814  00FFC6  20                 	db	32
   815  00FFC7  00                 	db	0
   816  00FFC8                     STR_7:
   817  00FFC8  44                 	db	68	;'D'
   818  00FFC9  69                 	db	105	;'i'
   819  00FFCA  72                 	db	114	;'r'
   820  00FFCB  65                 	db	101	;'e'
   821  00FFCC  63                 	db	99	;'c'
   822  00FFCD  74                 	db	116	;'t'
   823  00FFCE  69                 	db	105	;'i'
   824  00FFCF  6F                 	db	111	;'o'
   825  00FFD0  6E                 	db	110	;'n'
   826  00FFD1  3A                 	db	58	;':'
   827  00FFD2  20                 	db	32
   828  00FFD3  00                 	db	0
   829  00FFD4                     STR_16:
   830  00FFD4  4F                 	db	79	;'O'
   831  00FFD5  46                 	db	70	;'F'
   832  00FFD6  46                 	db	70	;'F'
   833  00FFD7  20                 	db	32
   834  00FFD8  20                 	db	32
   835  00FFD9  20                 	db	32
   836  00FFDA  20                 	db	32
   837  00FFDB  00                 	db	0
   838  00FFDC                     STR_17:
   839  00FFDC  53                 	db	83	;'S'
   840  00FFDD  45                 	db	69	;'E'
   841  00FFDE  41                 	db	65	;'A'
   842  00FFDF  52                 	db	82	;'R'
   843  00FFE0  43                 	db	67	;'C'
   844  00FFE1  48                 	db	72	;'H'
   845  00FFE2  20                 	db	32
   846  00FFE3  00                 	db	0
   847  00FFE4                     STR_10:
   848  00FFE4  44                 	db	68	;'D'
   849  00FFE5  61                 	db	97	;'a'
   850  00FFE6  74                 	db	116	;'t'
   851  00FFE7  61                 	db	97	;'a'
   852  00FFE8  3A                 	db	58	;':'
   853  00FFE9  20                 	db	32
   854  00FFEA  00                 	db	0
   855  00FFEB                     STR_14:
   856  00FFEB  50                 	db	80	;'P'
   857  00FFEC  20                 	db	32
   858  00FFED  20                 	db	32
   859  00FFEE  20                 	db	32
   860  00FFEF  00                 	db	0
   861  00FFF0                     STR_12:
   862  00FFF0  46                 	db	70	;'F'
   863  00FFF1  57                 	db	87	;'W'
   864  00FFF2  44                 	db	68	;'D'
   865  00FFF3  20                 	db	32
   866  00FFF4  00                 	db	0
   867  00FFF5                     STR_13:
   868  00FFF5  42                 	db	66	;'B'
   869  00FFF6  4B                 	db	75	;'K'
   870  00FFF7  57                 	db	87	;'W'
   871  00FFF8  44                 	db	68	;'D'
   872  00FFF9  00                 	db	0
   873  00FFFA                     STR_5:
   874  00FFFA  25                 	db	37
   875  00FFFB  2E                 	db	46
   876  00FFFC  32                 	db	50	;'2'
   877  00FFFD  66                 	db	102	;'f'
   878  00FFFE  00                 	db	0
   879  0000                     
   880                           ; #config settings
   881  00FFFF  00                 	db	0	; dummy byte at the end
   882  0000                     
   883                           	psect	cinit
   884  016300                     __pcinit:
   885                           	opt stack 0
   886  016300                     start_initialization:
   887                           	opt stack 0
   888  016300                     __initialization:
   889                           	opt stack 0
   890                           
   891                           ; Clear objects allocated to BANK1 (77 bytes)
   892  016300  EE01  F000         	lfsr	0,__pbssBANK1
   893  016304  0E4D               	movlw	77
   894  016306                     clear_0:
   895  016306  6AEE               	clrf	postinc0,c
   896  016308  06E8               	decf	wreg,f,c
   897  01630A  E1FD               	bnz	clear_0
   898                           
   899                           ; Clear objects allocated to BANK0 (34 bytes)
   900  01630C  EE00  F0CB         	lfsr	0,__pbssBANK0
   901  016310  0E22               	movlw	34
   902  016312                     clear_1:
   903  016312  6AEE               	clrf	postinc0,c
   904  016314  06E8               	decf	wreg,f,c
   905  016316  E1FD               	bnz	clear_1
   906                           
   907                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   908  016318  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   909  01631A  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   910  01631C  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   911                           
   912                           ; Clear objects allocated to COMRAM (41 bytes)
   913  01631E  EE00  F001         	lfsr	0,__pbssCOMRAM
   914  016322  0E29               	movlw	41
   915  016324                     clear_2:
   916  016324  6AEE               	clrf	postinc0,c
   917  016326  06E8               	decf	wreg,f,c
   918  016328  E1FD               	bnz	clear_2
   919                           
   920                           ; Initialize objects allocated to BANK0 (1 bytes)
   921                           ; load TBLPTR registers with __pidataBANK0
   922  01632A  0E1A               	movlw	low __pidataBANK0
   923  01632C  6EF6               	movwf	tblptrl,c
   924  01632E  0E66               	movlw	high __pidataBANK0
   925  016330  6EF7               	movwf	tblptrh,c
   926  016332  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   927  016334  6EF8               	movwf	tblptru,c
   928  016336  0009               	tblrd		*+	;fetch initializer
   929  016338  CFF5 F0ED          	movff	tablat,__pdataBANK0
   930  01633C                     end_of_initialization:
   931                           	opt stack 0
   932  01633C                     __end_of__initialization:
   933                           	opt stack 0
   934  01633C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   935  01633E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   936  016340  0100               	movlb	0
   937  016342  EFCD  F089         	goto	_main	;jump to C main() function
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           postinc0	equ	0xFEE
   943                           wreg	equ	0xFE8
   944                           
   945                           	psect	bitbssCOMRAM
   946  000258                     __pbitbssCOMRAM:
   947                           	opt stack 0
   948  000258                     _AbsFlag:
   949                           	opt stack 0
   950  000258                     	ds	1
   951  000259                     _Can_Tx_Force:
   952                           	opt stack 0
   953  000259                     	ds	1
   954  00025A                     _F1_switch:
   955                           	opt stack 0
   956  00025A                     	ds	1
   957  00025B                     _F2_switch:
   958                           	opt stack 0
   959  00025B                     	ds	1
   960  00025C                     _MotoreFlag:
   961                           	opt stack 0
   962  00025C                     	ds	1
   963  00025D                     _RTR_Flag:
   964                           	opt stack 0
   965  00025D                     	ds	1
   966  00025E                     _SterzoFlag:
   967                           	opt stack 0
   968  00025E                     	ds	1
   969  00025F                     _collision_msg:
   970                           	opt stack 0
   971  00025F                     	ds	1
   972  000260                     _display_refresh:
   973                           	opt stack 0
   974  000260                     	ds	1
   975  000261                     _newMessageCan:
   976                           	opt stack 0
   977  000261                     	ds	1
   978  000262                     _parking_error:
   979                           	opt stack 0
   980  000262                     	ds	1
   981  000263                     _parking_message_E:
   982                           	opt stack 0
   983  000263                     	ds	1
   984  000264                     _power_switch:
   985                           	opt stack 0
   986  000264                     	ds	1
   987  000265                     _row_refresh:
   988                           	opt stack 0
   989  000265                     	ds	1
   990  000266                     _space_available:
   991                           	opt stack 0
   992  000266                     	ds	1
   993  000267                     _space_gap_reached:
   994                           	opt stack 0
   995  000267                     	ds	1
   996  000268                     _steering_correction_dir:
   997                           	opt stack 0
   998  000268                     	ds	1
   999  000269                     _wait_low_1:
  1000                           	opt stack 0
  1001  000269                     	ds	1
  1002  00026A                     _wait_low_2:
  1003                           	opt stack 0
  1004  00026A                     	ds	1
  1005  00026B                     _wait_low_3:
  1006                           	opt stack 0
  1007  00026B                     	ds	1
  1008  00026C                     _x:
  1009                           	opt stack 0
  1010  00026C                     	ds	1
  1011  00026D                     _y:
  1012                           	opt stack 0
  1013  00026D                     	ds	1
  1014  00026E                     _z:
  1015                           	opt stack 0
  1016  00026E                     	ds	1
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           
  1024                           	psect	bssCOMRAM
  1025  000001                     __pbssCOMRAM:
  1026                           	opt stack 0
  1027  000001                     _data_speed_rx:
  1028                           	opt stack 0
  1029  000001                     	ds	7
  1030  000008                     _actual_speed_kmh:
  1031                           	opt stack 0
  1032  000008                     	ds	4
  1033  00000C                     _id:
  1034                           	opt stack 0
  1035  00000C                     	ds	4
  1036  000010                     _pr_time_3:
  1037                           	opt stack 0
  1038  000010                     	ds	4
  1039  000014                     _pr_time_5:
  1040                           	opt stack 0
  1041  000014                     	ds	4
  1042  000018                     _pr_time_6:
  1043                           	opt stack 0
  1044  000018                     	ds	4
  1045  00001C                     _time_counter:
  1046                           	opt stack 0
  1047  00001C                     	ds	4
  1048  000020                     _collision_sensor_distance:
  1049                           	opt stack 0
  1050  000020                     	ds	2
  1051  000022                     _left_speed:
  1052                           	opt stack 0
  1053  000022                     	ds	2
  1054  000024                     _right_speed:
  1055                           	opt stack 0
  1056  000024                     	ds	2
  1057  000026                     _user_data:
  1058                           	opt stack 0
  1059  000026                     	ds	2
  1060  000028                     _battery:
  1061                           	opt stack 0
  1062  000028                     	ds	1
  1063  000029                     _set_steering:
  1064                           	opt stack 0
  1065  000029                     	ds	1
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           
  1073                           	psect	bssBANK0
  1074  0000CB                     __pbssBANK0:
  1075                           	opt stack 0
  1076  0000CB                     _JoystickConstants:
  1077                           	opt stack 0
  1078  0000CB                     	ds	8
  1079  0000D3                     _check:
  1080                           	opt stack 0
  1081  0000D3                     	ds	4
  1082  0000D7                     _pr_time_1:
  1083                           	opt stack 0
  1084  0000D7                     	ds	4
  1085  0000DB                     _pr_time_2:
  1086                           	opt stack 0
  1087  0000DB                     	ds	4
  1088  0000DF                     _JoystickValues:
  1089                           	opt stack 0
  1090  0000DF                     	ds	2
  1091  0000E1                     _actual_speed:
  1092                           	opt stack 0
  1093  0000E1                     	ds	2
  1094  0000E3                     _clock_counter_reference:
  1095                           	opt stack 0
  1096  0000E3                     	ds	2
  1097  0000E5                     _set_speed:
  1098                           	opt stack 0
  1099  0000E5                     	ds	2
  1100  0000E7                     _collision_risk_value:
  1101                           	opt stack 0
  1102  0000E7                     	ds	1
  1103  0000E8                     _dir:
  1104                           	opt stack 0
  1105  0000E8                     	ds	1
  1106  0000E9                     _parking_message_ID:
  1107                           	opt stack 0
  1108  0000E9                     	ds	1
  1109  0000EA                     _parking_state:
  1110                           	opt stack 0
  1111  0000EA                     	ds	1
  1112  0000EB                     _steering_correction:
  1113                           	opt stack 0
  1114  0000EB                     	ds	1
  1115  0000EC                     _switch_position:
  1116                           	opt stack 0
  1117  0000EC                     	ds	1
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           
  1125                           	psect	dataBANK0
  1126  0000ED                     __pdataBANK0:
  1127                           	opt stack 0
  1128  0000ED                     _delay_quartz_frequency_value:
  1129                           	opt stack 0
  1130  0000ED                     	ds	1
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           
  1138                           	psect	bssBANK1
  1139  000100                     __pbssBANK1:
  1140                           	opt stack 0
  1141  000100                     LCD_write_integer@F17272:
  1142                           	opt stack 0
  1143  000100                     	ds	6
  1144  000106                     _pr_time_4:
  1145                           	opt stack 0
  1146  000106                     	ds	4
  1147  00010A                     _msg:
  1148                           	opt stack 0
  1149  00010A                     	ds	15
  1150  000119                     _str:
  1151                           	opt stack 0
  1152  000119                     	ds	12
  1153  000125                     _data:
  1154                           	opt stack 0
  1155  000125                     	ds	8
  1156  00012D                     _data_brake:
  1157                           	opt stack 0
  1158  00012D                     	ds	8
  1159  000135                     _data_speed:
  1160                           	opt stack 0
  1161  000135                     	ds	8
  1162  00013D                     _data_steering:
  1163                           	opt stack 0
  1164  00013D                     	ds	8
  1165  000145                     _park_assist_state:
  1166                           	opt stack 0
  1167  000145                     	ds	8
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           
  1175                           	psect	cstackBANK1
  1176  00014D                     __pcstackBANK1:
  1177                           	opt stack 0
  1178  00014D                     ??_sprintf:
  1179                           
  1180                           ; 0 bytes @ 0x0
  1181  00014D                     	ds	2
  1182  00014F                     _sprintf$4273:
  1183                           	opt stack 0
  1184                           
  1185                           ; 4 bytes @ 0x2
  1186  00014F                     	ds	4
  1187  000153                     sprintf@ap:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x6
  1191  000153                     	ds	2
  1192  000155                     sprintf@flag:
  1193                           	opt stack 0
  1194                           
  1195                           ; 2 bytes @ 0x8
  1196  000155                     	ds	2
  1197  000157                     sprintf@val:
  1198                           	opt stack 0
  1199                           
  1200                           ; 4 bytes @ 0xA
  1201  000157                     	ds	4
  1202  00015B                     sprintf@exp:
  1203                           	opt stack 0
  1204                           
  1205                           ; 2 bytes @ 0xE
  1206  00015B                     	ds	2
  1207  00015D                     sprintf@tmpval:
  1208                           	opt stack 0
  1209                           
  1210                           ; 4 bytes @ 0x10
  1211  00015D                     	ds	4
  1212  000161                     sprintf@prec:
  1213                           	opt stack 0
  1214                           
  1215                           ; 2 bytes @ 0x14
  1216  000161                     	ds	2
  1217  000163                     sprintf@fval:
  1218                           	opt stack 0
  1219                           
  1220                           ; 4 bytes @ 0x16
  1221  000163                     	ds	4
  1222  000167                     sprintf@c:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x1A
  1226  000167                     	ds	1
  1227  000168                     ??_main:
  1228                           
  1229                           ; 0 bytes @ 0x1B
  1230  000168                     	ds	8
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           postinc0	equ	0xFEE
  1236                           wreg	equ	0xFE8
  1237                           
  1238                           	psect	cstackBANK0
  1239  000060                     __pcstackBANK0:
  1240                           	opt stack 0
  1241  000060                     ??_ISR_alta:
  1242                           
  1243                           ; 0 bytes @ 0x0
  1244  000060                     	ds	16
  1245  000070                     ISR_alta@i:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x10
  1249  000070                     	ds	1
  1250  000071                     ??_Joystick_Polling:
  1251  000071                     ??_CAN_Rx:
  1252  000071                     ??_isdigit:
  1253  000071                     ?___wmul:
  1254                           	opt stack 0
  1255  000071                     ?___awmod:
  1256                           	opt stack 0
  1257  000071                     ?___lwdiv:
  1258                           	opt stack 0
  1259  000071                     ?___lwmod:
  1260                           	opt stack 0
  1261  000071                     ?__tdiv_to_l_:
  1262                           	opt stack 0
  1263  000071                     ?__div_to_l_:
  1264                           	opt stack 0
  1265  000071                     ?___lldiv:
  1266                           	opt stack 0
  1267  000071                     ?___llmod:
  1268                           	opt stack 0
  1269  000071                     ?___xxtofl:
  1270                           	opt stack 0
  1271  000071                     CANOperationMode@mode:
  1272                           	opt stack 0
  1273  000071                     _CANisTxReady$3255:
  1274                           	opt stack 0
  1275  000071                     delay_set_quartz@frequency:
  1276                           	opt stack 0
  1277  000071                     ___wmul@multiplier:
  1278                           	opt stack 0
  1279  000071                     ___awmod@dividend:
  1280                           	opt stack 0
  1281  000071                     ___lwdiv@dividend:
  1282                           	opt stack 0
  1283  000071                     ___lwmod@dividend:
  1284                           	opt stack 0
  1285  000071                     CANsendMessage@identifier:
  1286                           	opt stack 0
  1287  000071                     CANSetMask@mask:
  1288                           	opt stack 0
  1289  000071                     CANSetFilter@filter:
  1290                           	opt stack 0
  1291  000071                     __div_to_l_@f1:
  1292                           	opt stack 0
  1293  000071                     ___flge@ff1:
  1294                           	opt stack 0
  1295  000071                     __tdiv_to_l_@f1:
  1296                           	opt stack 0
  1297  000071                     ___lldiv@dividend:
  1298                           	opt stack 0
  1299  000071                     ___llmod@dividend:
  1300                           	opt stack 0
  1301  000071                     ___xxtofl@val:
  1302                           	opt stack 0
  1303                           
  1304                           ; 4 bytes @ 0x11
  1305  000071                     	ds	1
  1306  000072                     Joystick_Polling@i:
  1307                           	opt stack 0
  1308  000072                     _isdigit$3856:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x12
  1312  000072                     	ds	1
  1313  000073                     isdigit@c:
  1314                           	opt stack 0
  1315  000073                     ___wmul@multiplicand:
  1316                           	opt stack 0
  1317  000073                     ___awmod@divisor:
  1318                           	opt stack 0
  1319  000073                     ___lwdiv@divisor:
  1320                           	opt stack 0
  1321  000073                     ___lwmod@divisor:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x13
  1325  000073                     	ds	2
  1326  000075                     ??___xxtofl:
  1327  000075                     CANSetMask@type:
  1328                           	opt stack 0
  1329  000075                     CANSetFilter@type:
  1330                           	opt stack 0
  1331  000075                     ___awmod@counter:
  1332                           	opt stack 0
  1333  000075                     ___lwmod@counter:
  1334                           	opt stack 0
  1335  000075                     CANsendMessage@data:
  1336                           	opt stack 0
  1337  000075                     ___wmul@product:
  1338                           	opt stack 0
  1339  000075                     ___lwdiv@quotient:
  1340                           	opt stack 0
  1341  000075                     __div_to_l_@f2:
  1342                           	opt stack 0
  1343  000075                     ___flge@ff2:
  1344                           	opt stack 0
  1345  000075                     __tdiv_to_l_@f2:
  1346                           	opt stack 0
  1347  000075                     ___lldiv@divisor:
  1348                           	opt stack 0
  1349  000075                     ___llmod@divisor:
  1350                           	opt stack 0
  1351                           
  1352                           ; 4 bytes @ 0x15
  1353  000075                     	ds	1
  1354  000076                     ??_CANSetMask:
  1355  000076                     ??_CANSetFilter:
  1356  000076                     ___awmod@sign:
  1357                           	opt stack 0
  1358                           
  1359                           ; 1 bytes @ 0x16
  1360  000076                     	ds	1
  1361  000077                     ?___awdiv:
  1362                           	opt stack 0
  1363  000077                     CANsendMessage@dataLength:
  1364                           	opt stack 0
  1365  000077                     ___lwdiv@counter:
  1366                           	opt stack 0
  1367  000077                     delay_ms@value_ms:
  1368                           	opt stack 0
  1369  000077                     ___awdiv@dividend:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x17
  1373  000077                     	ds	1
  1374  000078                     CANsendMessage@flags:
  1375                           	opt stack 0
  1376  000078                     utoa@buf:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0x18
  1380  000078                     	ds	1
  1381  000079                     ??__tdiv_to_l_:
  1382  000079                     ??_CANsendMessage:
  1383  000079                     ??___flge:
  1384  000079                     LCD_send_command@D2:
  1385                           	opt stack 0
  1386  000079                     ___llmod@counter:
  1387                           	opt stack 0
  1388  000079                     ___xxtofl@sign:
  1389                           	opt stack 0
  1390  000079                     ___awdiv@divisor:
  1391                           	opt stack 0
  1392  000079                     __div_to_l_@quot:
  1393                           	opt stack 0
  1394  000079                     ___lldiv@quotient:
  1395                           	opt stack 0
  1396                           
  1397                           ; 4 bytes @ 0x19
  1398  000079                     	ds	1
  1399  00007A                     CANSetMask@numBuffer:
  1400                           	opt stack 0
  1401  00007A                     CANSetFilter@numBuffer:
  1402                           	opt stack 0
  1403  00007A                     LCD_send_command@D1:
  1404                           	opt stack 0
  1405  00007A                     ___xxtofl@exp:
  1406                           	opt stack 0
  1407  00007A                     utoa@val:
  1408                           	opt stack 0
  1409                           
  1410                           ; 2 bytes @ 0x1A
  1411  00007A                     	ds	1
  1412  00007B                     LCD_send_command@D0:
  1413                           	opt stack 0
  1414  00007B                     ___awdiv@counter:
  1415                           	opt stack 0
  1416  00007B                     CANSetMask@tamp:
  1417                           	opt stack 0
  1418  00007B                     CANSetFilter@tamp:
  1419                           	opt stack 0
  1420  00007B                     ___xxtofl@arg:
  1421                           	opt stack 0
  1422                           
  1423                           ; 4 bytes @ 0x1B
  1424  00007B                     	ds	1
  1425  00007C                     LCD_send_command@D3:
  1426                           	opt stack 0
  1427  00007C                     ___awdiv@sign:
  1428                           	opt stack 0
  1429  00007C                     utoa@base:
  1430                           	opt stack 0
  1431  00007C                     __tdiv_to_l_@quot:
  1432                           	opt stack 0
  1433                           
  1434                           ; 4 bytes @ 0x1C
  1435  00007C                     	ds	1
  1436  00007D                     LCD_shift_cursor@number_of_shift:
  1437                           	opt stack 0
  1438  00007D                     LCD_goto_line@line:
  1439                           	opt stack 0
  1440  00007D                     LCD_write_char@D3:
  1441                           	opt stack 0
  1442  00007D                     LCD_cursor@blinking:
  1443                           	opt stack 0
  1444  00007D                     __div_to_l_@cntr:
  1445                           	opt stack 0
  1446  00007D                     ___lldiv@counter:
  1447                           	opt stack 0
  1448  00007D                     ___awdiv@quotient:
  1449                           	opt stack 0
  1450  00007D                     CANsendMessage@tamp:
  1451                           	opt stack 0
  1452                           
  1453                           ; 4 bytes @ 0x1D
  1454  00007D                     	ds	1
  1455  00007E                     LCD_shift_cursor@shift:
  1456                           	opt stack 0
  1457  00007E                     LCD_write_char@D2:
  1458                           	opt stack 0
  1459  00007E                     LCD_cursor@active:
  1460                           	opt stack 0
  1461  00007E                     __div_to_l_@exp1:
  1462                           	opt stack 0
  1463  00007E                     utoa@v:
  1464                           	opt stack 0
  1465                           
  1466                           ; 2 bytes @ 0x1E
  1467  00007E                     	ds	1
  1468  00007F                     ?___fldiv:
  1469                           	opt stack 0
  1470  00007F                     ?___flmul:
  1471                           	opt stack 0
  1472  00007F                     CANInitialize@phaseSeg1:
  1473                           	opt stack 0
  1474  00007F                     LCD_shift_cursor@i:
  1475                           	opt stack 0
  1476  00007F                     LCD_write_char@D1:
  1477                           	opt stack 0
  1478  00007F                     LCD_initialize@quartz_frequency:
  1479                           	opt stack 0
  1480  00007F                     ___fldiv@b:
  1481                           	opt stack 0
  1482  00007F                     ___flmul@b:
  1483                           	opt stack 0
  1484                           
  1485                           ; 4 bytes @ 0x1F
  1486  00007F                     	ds	1
  1487  000080                     CANInitialize@phaseSeg2:
  1488                           	opt stack 0
  1489  000080                     LCD_goto_xy@y:
  1490                           	opt stack 0
  1491  000080                     LCD_write_char@D0:
  1492                           	opt stack 0
  1493  000080                     __tdiv_to_l_@cntr:
  1494                           	opt stack 0
  1495  000080                     utoa@c:
  1496                           	opt stack 0
  1497                           
  1498                           ; 1 bytes @ 0x20
  1499  000080                     	ds	1
  1500  000081                     CANInitialize@SJW:
  1501                           	opt stack 0
  1502  000081                     LCD_goto_xy@x:
  1503                           	opt stack 0
  1504  000081                     LCD_write_char@value:
  1505                           	opt stack 0
  1506  000081                     __tdiv_to_l_@exp1:
  1507                           	opt stack 0
  1508  000081                     itoa@buf:
  1509                           	opt stack 0
  1510                           
  1511                           ; 2 bytes @ 0x21
  1512  000081                     	ds	1
  1513  000082                     CANInitialize@BRP:
  1514                           	opt stack 0
  1515  000082                     LCD_write_message@buffer:
  1516                           	opt stack 0
  1517  000082                     LCD_write_string@buffer:
  1518                           	opt stack 0
  1519                           
  1520                           ; 2 bytes @ 0x22
  1521  000082                     	ds	1
  1522  000083                     CANInitialize@flags:
  1523                           	opt stack 0
  1524  000083                     itoa@val:
  1525                           	opt stack 0
  1526  000083                     ___fldiv@a:
  1527                           	opt stack 0
  1528  000083                     ___flmul@a:
  1529                           	opt stack 0
  1530                           
  1531                           ; 4 bytes @ 0x23
  1532  000083                     	ds	1
  1533  000084                     ??_CANInitialize:
  1534  000084                     
  1535                           ; 0 bytes @ 0x24
  1536  000084                     	ds	1
  1537  000085                     itoa@base:
  1538                           	opt stack 0
  1539                           
  1540                           ; 2 bytes @ 0x25
  1541  000085                     	ds	2
  1542  000087                     ??___fldiv:
  1543  000087                     ??___flmul:
  1544  000087                     itoa@cp:
  1545                           	opt stack 0
  1546                           
  1547                           ; 2 bytes @ 0x27
  1548  000087                     	ds	1
  1549  000088                     CANInitialize@propSeg:
  1550                           	opt stack 0
  1551                           
  1552                           ; 1 bytes @ 0x28
  1553  000088                     	ds	1
  1554  000089                     CANInitialize@FilterConfig1:
  1555                           	opt stack 0
  1556  000089                     LCD_write_integer@value:
  1557                           	opt stack 0
  1558                           
  1559                           ; 2 bytes @ 0x29
  1560  000089                     	ds	1
  1561  00008A                     CANInitialize@FilterConfig2:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x2A
  1565  00008A                     	ds	1
  1566  00008B                     LCD_write_integer@number_of_digits:
  1567                           	opt stack 0
  1568  00008B                     ___fldiv@sign:
  1569                           	opt stack 0
  1570  00008B                     ___flmul@sign:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x2B
  1574  00008B                     	ds	1
  1575  00008C                     LCD_write_integer@zero_cleaning:
  1576                           	opt stack 0
  1577  00008C                     ___flmul@aexp:
  1578                           	opt stack 0
  1579  00008C                     ___fldiv@rem:
  1580                           	opt stack 0
  1581                           
  1582                           ; 4 bytes @ 0x2C
  1583  00008C                     	ds	1
  1584  00008D                     ??_LCD_write_integer:
  1585  00008D                     ___flmul@grs:
  1586                           	opt stack 0
  1587                           
  1588                           ; 4 bytes @ 0x2D
  1589  00008D                     	ds	3
  1590  000090                     ___fldiv@new_exp:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0x30
  1594  000090                     	ds	1
  1595  000091                     ___flmul@bexp:
  1596                           	opt stack 0
  1597                           
  1598                           ; 1 bytes @ 0x31
  1599  000091                     	ds	1
  1600  000092                     ___fldiv@grs:
  1601                           	opt stack 0
  1602  000092                     ___flmul@prod:
  1603                           	opt stack 0
  1604  000092                     LCD_write_integer@convertedInt:
  1605                           	opt stack 0
  1606                           
  1607                           ; 6 bytes @ 0x32
  1608  000092                     	ds	4
  1609  000096                     ___fldiv@bexp:
  1610                           	opt stack 0
  1611  000096                     ___flmul@temp:
  1612                           	opt stack 0
  1613                           
  1614                           ; 2 bytes @ 0x36
  1615  000096                     	ds	1
  1616  000097                     ___fldiv@aexp:
  1617                           	opt stack 0
  1618                           
  1619                           ; 1 bytes @ 0x37
  1620  000097                     	ds	1
  1621  000098                     ?_fround:
  1622                           	opt stack 0
  1623  000098                     ?_scale:
  1624                           	opt stack 0
  1625  000098                     ?___flneg:
  1626                           	opt stack 0
  1627  000098                     LCD_write_integer@index:
  1628                           	opt stack 0
  1629  000098                     ___flneg@f1:
  1630                           	opt stack 0
  1631                           
  1632                           ; 4 bytes @ 0x38
  1633  000098                     	ds	4
  1634  00009C                     _fround$4271:
  1635                           	opt stack 0
  1636  00009C                     _scale$4272:
  1637                           	opt stack 0
  1638                           
  1639                           ; 4 bytes @ 0x3C
  1640  00009C                     	ds	4
  1641  0000A0                     scale@scl:
  1642                           	opt stack 0
  1643  0000A0                     _fround$4270:
  1644                           	opt stack 0
  1645                           
  1646                           ; 4 bytes @ 0x40
  1647  0000A0                     	ds	4
  1648  0000A4                     fround@prec:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x44
  1652  0000A4                     	ds	1
  1653  0000A5                     ?___fladd:
  1654                           	opt stack 0
  1655  0000A5                     ___fladd@b:
  1656                           	opt stack 0
  1657                           
  1658                           ; 4 bytes @ 0x45
  1659  0000A5                     	ds	4
  1660  0000A9                     ___fladd@a:
  1661                           	opt stack 0
  1662                           
  1663                           ; 4 bytes @ 0x49
  1664  0000A9                     	ds	4
  1665  0000AD                     ??___fladd:
  1666                           
  1667                           ; 0 bytes @ 0x4D
  1668  0000AD                     	ds	8
  1669  0000B5                     ___fladd@signs:
  1670                           	opt stack 0
  1671                           
  1672                           ; 1 bytes @ 0x55
  1673  0000B5                     	ds	1
  1674  0000B6                     ___fladd@aexp:
  1675                           	opt stack 0
  1676                           
  1677                           ; 1 bytes @ 0x56
  1678  0000B6                     	ds	1
  1679  0000B7                     ___fladd@bexp:
  1680                           	opt stack 0
  1681                           
  1682                           ; 1 bytes @ 0x57
  1683  0000B7                     	ds	1
  1684  0000B8                     ___fladd@grs:
  1685                           	opt stack 0
  1686                           
  1687                           ; 1 bytes @ 0x58
  1688  0000B8                     	ds	1
  1689  0000B9                     ?___flsub:
  1690                           	opt stack 0
  1691  0000B9                     ?___fltol:
  1692                           	opt stack 0
  1693  0000B9                     ___fltol@f1:
  1694                           	opt stack 0
  1695  0000B9                     ___flsub@b:
  1696                           	opt stack 0
  1697                           
  1698                           ; 4 bytes @ 0x59
  1699  0000B9                     	ds	4
  1700  0000BD                     ??___fltol:
  1701  0000BD                     ___flsub@a:
  1702                           	opt stack 0
  1703                           
  1704                           ; 4 bytes @ 0x5D
  1705  0000BD                     	ds	4
  1706  0000C1                     ___fltol@sign1:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0x61
  1710  0000C1                     	ds	1
  1711  0000C2                     ___fltol@exp1:
  1712                           	opt stack 0
  1713                           
  1714                           ; 1 bytes @ 0x62
  1715  0000C2                     	ds	1
  1716  0000C3                     ?_sprintf:
  1717                           	opt stack 0
  1718  0000C3                     sprintf@sp:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x63
  1722  0000C3                     	ds	2
  1723  0000C5                     sprintf@f:
  1724                           	opt stack 0
  1725                           
  1726                           ; 2 bytes @ 0x65
  1727  0000C5                     	ds	6
  1728  0000CB                     tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           postinc0	equ	0xFEE
  1733                           wreg	equ	0xFE8
  1734                           
  1735                           ; 0 bytes @ 0x6B
  1736                           
  1737                           	psect	cstackCOMRAM
  1738  00002A                     __pcstackCOMRAM:
  1739                           	opt stack 0
  1740  00002A                     ??_ISR_bassa:
  1741  00002A                     
  1742                           ; 1 bytes @ 0x0
  1743  00002A                     	ds	17
  1744  00003B                     _CANisRxReady$3257:
  1745                           	opt stack 0
  1746  00003B                     i2_CANisTxReady$3255:
  1747                           	opt stack 0
  1748  00003B                     CANreceiveMessage@msg:
  1749                           	opt stack 0
  1750  00003B                     i2CANsendMessage@identifier:
  1751                           	opt stack 0
  1752                           
  1753                           ; 4 bytes @ 0x11
  1754  00003B                     	ds	2
  1755  00003D                     ??_CANreceiveMessage:
  1756                           
  1757                           ; 0 bytes @ 0x13
  1758  00003D                     	ds	2
  1759  00003F                     i2CANsendMessage@data:
  1760                           	opt stack 0
  1761                           
  1762                           ; 2 bytes @ 0x15
  1763  00003F                     	ds	2
  1764  000041                     i2CANsendMessage@dataLength:
  1765                           	opt stack 0
  1766                           
  1767                           ; 1 bytes @ 0x17
  1768  000041                     	ds	1
  1769  000042                     i2CANsendMessage@flags:
  1770                           	opt stack 0
  1771                           
  1772                           ; 1 bytes @ 0x18
  1773  000042                     	ds	1
  1774  000043                     ??i2_CANsendMessage:
  1775                           
  1776                           ; 0 bytes @ 0x19
  1777  000043                     	ds	2
  1778  000045                     CANreceiveMessage@error:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x1B
  1782  000045                     	ds	1
  1783  000046                     CANreceiveMessage@tamp:
  1784                           	opt stack 0
  1785                           
  1786                           ; 1 bytes @ 0x1C
  1787  000046                     	ds	1
  1788  000047                     i2CANsendMessage@tamp:
  1789                           	opt stack 0
  1790                           
  1791                           ; 4 bytes @ 0x1D
  1792  000047                     	ds	4
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           
  1800 ;;
  1801 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1802 ;;
  1803 ;; *************** function _main *****************
  1804 ;; Defined at:
  1805 ;;		line 212 in file "RemoteCan.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;		None               void
  1812 ;; Registers used:
  1813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;Total ram usage:        8 bytes
  1824 ;; Hardware stack levels required when called:   11
  1825 ;; This function calls:
  1826 ;;		_CAN_Rx
  1827 ;;		_CAN_Tx
  1828 ;;		_CANisTxReady
  1829 ;;		_CANsendMessage
  1830 ;;		_F1_Button_Polling
  1831 ;;		_F2_Button_Polling
  1832 ;;		_Joystick_Polling
  1833 ;;		_LCD_End
  1834 ;;		_LCD_Error
  1835 ;;		_LCD_Gap
  1836 ;;		_LCD_Handler
  1837 ;;		_LCD_Park
  1838 ;;		_LCD_Parking
  1839 ;;		_LCD_goto_line
  1840 ;;		_LCD_initialize
  1841 ;;		_LCD_write_message
  1842 ;;		_PWR_Button_Polling
  1843 ;;		___awdiv
  1844 ;;		___fladd
  1845 ;;		___flmul
  1846 ;;		___flneg
  1847 ;;		___fltol
  1848 ;;		___xxtofl
  1849 ;;		_board_initialization
  1850 ;;		_delay_ms
  1851 ;; This function is called by:
  1852 ;;		Startup code after reset
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text0
  1857  01139A                     __ptext0:
  1858                           	opt stack 0
  1859  01139A                     _main:
  1860                           	opt stack 20
  1861                           
  1862                           ;RemoteCan.c: 213: board_initialization();
  1863                           
  1864                           ;incstack = 0
  1865  01139A  EC0D  F0AE         	call	_board_initialization	;wreg free
  1866                           
  1867                           ;RemoteCan.c: 215: JoystickConstants[0] = 0.703;
  1868  01139E  0ECF               	movlw	207
  1869  0113A0  0100               	movlb	0	; () banked
  1870  0113A2  6FCB               	movwf	_JoystickConstants& (0+255),b	;volatile
  1871  0113A4  0EF7               	movlw	247
  1872  0113A6  6FCC               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1873  0113A8  0E33               	movlw	51
  1874  0113AA  6FCD               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1875  0113AC  0E3F               	movlw	63
  1876  0113AE  6FCE               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;RemoteCan.c: 216: JoystickConstants[1] = 20;
  1880  0113B0  0E00               	movlw	0
  1881  0113B2  0100               	movlb	0	; () banked
  1882  0113B4  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1883  0113B6  0E00               	movlw	0
  1884  0113B8  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1885  0113BA  0EA0               	movlw	160
  1886  0113BC  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1887  0113BE  0E41               	movlw	65
  1888  0113C0  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;RemoteCan.c: 218: data_brake [1] = 0;
  1892  0113C2  0E00               	movlw	0
  1893  0113C4  0101               	movlb	1	; () banked
  1894  0113C6  6F2E               	movwf	(_data_brake+1)& (0+255),b
  1895  0113C8                     l9786:
  1896                           
  1897                           ;RemoteCan.c: 223: PWR_Button_Polling();
  1898  0113C8  ECBA  F0B2         	call	_PWR_Button_Polling	;wreg free
  1899                           
  1900                           ;RemoteCan.c: 224: F1_Button_Polling();
  1901  0113CC  ECE4  F0B2         	call	_F1_Button_Polling	;wreg free
  1902                           
  1903                           ;RemoteCan.c: 225: F2_Button_Polling();
  1904  0113D0  ECD6  F0B2         	call	_F2_Button_Polling	;wreg free
  1905                           
  1906                           ;RemoteCan.c: 228: if (power_switch == 0) {
  1907  0113D4  B84C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1908  0113D6  D09A               	goto	l818
  1909                           
  1910                           ;RemoteCan.c: 229: dir = 1;
  1911  0113D8  0E01               	movlw	1
  1912  0113DA  0100               	movlb	0	; () banked
  1913  0113DC  6FE8               	movwf	_dir& (0+255),b	;volatile
  1914                           
  1915                           ;RemoteCan.c: 230: set_speed = 0;
  1916  0113DE  0E00               	movlw	0
  1917  0113E0  0100               	movlb	0	; () banked
  1918  0113E2  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1919  0113E4  0E00               	movlw	0
  1920  0113E6  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  1921                           
  1922                           ;RemoteCan.c: 231: data_steering [0] = 90;
  1923  0113E8  0E5A               	movlw	90
  1924  0113EA  0101               	movlb	1	; () banked
  1925  0113EC  6F3D               	movwf	_data_steering& (0+255),b
  1926                           
  1927                           ;RemoteCan.c: 232: data_brake [0] = 0b00000000;
  1928  0113EE  0E00               	movlw	0
  1929  0113F0  0101               	movlb	1	; () banked
  1930  0113F2  6F2D               	movwf	_data_brake& (0+255),b
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;RemoteCan.c: 233: CAN_Tx();
  1934  0113F4  ECB0  F0AD         	call	_CAN_Tx	;wreg free
  1935                           
  1936                           ;RemoteCan.c: 234: PORTDbits.RD6 = 0;
  1937  0113F8  9C83               	bcf	3971,6,c	;volatile
  1938                           
  1939                           ;RemoteCan.c: 235: PORTDbits.RD5 = 0;
  1940  0113FA  9A83               	bcf	3971,5,c	;volatile
  1941                           
  1942                           ;RemoteCan.c: 236: LCD_initialize(16);
  1943  0113FC  0E10               	movlw	16
  1944  0113FE  ECE1  F0AA         	call	_LCD_initialize
  1945                           
  1946                           ;RemoteCan.c: 237: LCD_goto_line(1);
  1947  011402  0E01               	movlw	1
  1948  011404  EC1E  F0AC         	call	_LCD_goto_line
  1949                           
  1950                           ;RemoteCan.c: 238: LCD_write_message("====================");
  1951  011408  0E7F               	movlw	low STR_1
  1952  01140A  0100               	movlb	0	; () banked
  1953  01140C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1954  01140E  0EFF               	movlw	high STR_1
  1955  011410  0100               	movlb	0	; () banked
  1956  011412  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1957  011414  EC14  F0B2         	call	_LCD_write_message	;wreg free
  1958                           
  1959                           ;RemoteCan.c: 239: LCD_goto_line(2);
  1960  011418  0E02               	movlw	2
  1961  01141A  EC1E  F0AC         	call	_LCD_goto_line
  1962                           
  1963                           ;RemoteCan.c: 240: LCD_write_message("==> VEHICLE  OFF <==");
  1964  01141E  0E55               	movlw	low STR_2
  1965  011420  0100               	movlb	0	; () banked
  1966  011422  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1967  011424  0EFF               	movlw	high STR_2
  1968  011426  0100               	movlb	0	; () banked
  1969  011428  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1970  01142A  EC14  F0B2         	call	_LCD_write_message	;wreg free
  1971                           
  1972                           ;RemoteCan.c: 241: LCD_goto_line(3);
  1973  01142E  0E03               	movlw	3
  1974  011430  EC1E  F0AC         	call	_LCD_goto_line
  1975                           
  1976                           ;RemoteCan.c: 242: LCD_write_message("  Press the button  ");
  1977  011434  0E6E               	movlw	low STR_3
  1978  011436  0100               	movlb	0	; () banked
  1979  011438  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1980  01143A  0EFE               	movlw	high STR_3
  1981  01143C  0100               	movlb	0	; () banked
  1982  01143E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1983  011440  EC14  F0B2         	call	_LCD_write_message	;wreg free
  1984                           
  1985                           ;RemoteCan.c: 243: LCD_goto_line(4);
  1986  011444  0E04               	movlw	4
  1987  011446  EC1E  F0AC         	call	_LCD_goto_line
  1988                           
  1989                           ;RemoteCan.c: 244: LCD_write_message("====================");
  1990  01144A  0E7F               	movlw	low STR_1
  1991  01144C  0100               	movlb	0	; () banked
  1992  01144E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1993  011450  0EFF               	movlw	high STR_1
  1994  011452  0100               	movlb	0	; () banked
  1995  011454  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1996  011456  EC14  F0B2         	call	_LCD_write_message	;wreg free
  1997                           
  1998                           ;RemoteCan.c: 245: while (power_switch == 0) {
  1999  01145A  D054               	goto	l9830
  2000  01145C                     l9820:
  2001                           
  2002                           ;RemoteCan.c: 246: if ((time_counter - pr_time_1) >= 30) {
  2003  01145C  C0D7  F168         	movff	_pr_time_1,??_main	;volatile
  2004  011460  C0D8  F169         	movff	_pr_time_1+1,??_main+1	;volatile
  2005  011464  C0D9  F16A         	movff	_pr_time_1+2,??_main+2	;volatile
  2006  011468  C0DA  F16B         	movff	_pr_time_1+3,??_main+3	;volatile
  2007  01146C  0101               	movlb	1	; () banked
  2008  01146E  1F68               	comf	??_main& (0+255),f,b
  2009  011470  1F69               	comf	(??_main+1)& (0+255),f,b
  2010  011472  1F6A               	comf	(??_main+2)& (0+255),f,b
  2011  011474  1F6B               	comf	(??_main+3)& (0+255),f,b
  2012  011476  2B68               	incf	??_main& (0+255),f,b
  2013  011478  0E00               	movlw	0
  2014  01147A  2369               	addwfc	(??_main+1)& (0+255),f,b
  2015  01147C  236A               	addwfc	(??_main+2)& (0+255),f,b
  2016  01147E  236B               	addwfc	(??_main+3)& (0+255),f,b
  2017  011480  501C               	movf	_time_counter,w,c	;volatile
  2018  011482  0101               	movlb	1	; () banked
  2019  011484  2568               	addwf	??_main& (0+255),w,b
  2020  011486  0101               	movlb	1	; () banked
  2021  011488  6F6C               	movwf	(??_main+4)& (0+255),b
  2022  01148A  501D               	movf	_time_counter+1,w,c	;volatile
  2023  01148C  0101               	movlb	1	; () banked
  2024  01148E  2169               	addwfc	(??_main+1)& (0+255),w,b
  2025  011490  0101               	movlb	1	; () banked
  2026  011492  6F6D               	movwf	(??_main+5)& (0+255),b
  2027  011494  501E               	movf	_time_counter+2,w,c	;volatile
  2028  011496  0101               	movlb	1	; () banked
  2029  011498  216A               	addwfc	(??_main+2)& (0+255),w,b
  2030  01149A  0101               	movlb	1	; () banked
  2031  01149C  6F6E               	movwf	(??_main+6)& (0+255),b
  2032  01149E  501F               	movf	_time_counter+3,w,c	;volatile
  2033  0114A0  0101               	movlb	1	; () banked
  2034  0114A2  216B               	addwfc	(??_main+3)& (0+255),w,b
  2035  0114A4  0101               	movlb	1	; () banked
  2036  0114A6  6F6F               	movwf	(??_main+7)& (0+255),b
  2037  0114A8  0101               	movlb	1	; () banked
  2038  0114AA  516F               	movf	(??_main+7)& (0+255),w,b
  2039  0114AC  0101               	movlb	1	; () banked
  2040  0114AE  116E               	iorwf	(??_main+6)& (0+255),w,b
  2041  0114B0  0101               	movlb	1	; () banked
  2042  0114B2  116D               	iorwf	(??_main+5)& (0+255),w,b
  2043  0114B4  E105               	bnz	u13080
  2044  0114B6  0E1E               	movlw	30
  2045  0114B8  0101               	movlb	1	; () banked
  2046  0114BA  5D6C               	subwf	(??_main+4)& (0+255),w,b
  2047  0114BC  A0D8               	btfss	status,0,c
  2048  0114BE  D019               	goto	l9826
  2049  0114C0                     u13080:
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;RemoteCan.c: 247: pr_time_1 = time_counter;
  2053  0114C0  C01C  F0D7         	movff	_time_counter,_pr_time_1	;volatile
  2054  0114C4  C01D  F0D8         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2055  0114C8  C01E  F0D9         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2056  0114CC  C01F  F0DA         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2057                           
  2058                           ; BSR set to: 1
  2059                           ;RemoteCan.c: 248: PORTDbits.RD7 = ~PORTDbits.RD7;
  2060  0114D0  AE83               	btfss	3971,7,c	;volatile
  2061  0114D2  D002               	goto	u13090
  2062  0114D4  0E01               	movlw	1
  2063  0114D6  D001               	goto	u13096
  2064  0114D8                     u13090:
  2065  0114D8  0E00               	movlw	0
  2066  0114DA                     u13096:
  2067  0114DA  0AFF               	xorlw	255
  2068  0114DC  0101               	movlb	1	; () banked
  2069  0114DE  6F68               	movwf	??_main& (0+255),b
  2070  0114E0  0101               	movlb	1	; () banked
  2071  0114E2  3368               	rrcf	??_main& (0+255),f,b
  2072  0114E4  3368               	rrcf	??_main& (0+255),f,b
  2073  0114E6  5083               	movf	3971,w,c	;volatile
  2074  0114E8  0101               	movlb	1	; () banked
  2075  0114EA  1968               	xorwf	??_main& (0+255),w,b
  2076  0114EC  0B7F               	andlw	-129
  2077  0114EE  1968               	xorwf	??_main& (0+255),w,b
  2078  0114F0  6E83               	movwf	3971,c	;volatile
  2079  0114F2                     l9826:
  2080                           
  2081                           ; BSR set to: 1
  2082                           ;RemoteCan.c: 249: }
  2083                           ;RemoteCan.c: 250: PWR_Button_Polling();
  2084  0114F2  ECBA  F0B2         	call	_PWR_Button_Polling	;wreg free
  2085                           
  2086                           ;RemoteCan.c: 251: delay_ms(10);
  2087  0114F6  0E00               	movlw	0
  2088  0114F8  0100               	movlb	0	; () banked
  2089  0114FA  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2090  0114FC  0E0A               	movlw	10
  2091  0114FE  6F77               	movwf	delay_ms@value_ms& (0+255),b
  2092  011500  ECC0  F0B1         	call	_delay_ms	;wreg free
  2093  011504                     l9830:
  2094  011504  A84C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2095  011506  D7AA               	goto	l9820
  2096                           
  2097                           ;RemoteCan.c: 252: }
  2098                           ;RemoteCan.c: 253: PORTDbits.RD7 = 0;
  2099  011508  9E83               	bcf	3971,7,c	;volatile
  2100                           
  2101                           ;RemoteCan.c: 254: display_refresh = 1;
  2102  01150A  804C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2103  01150C                     l818:
  2104                           
  2105                           ;RemoteCan.c: 255: }
  2106                           ;RemoteCan.c: 258: if (PORTAbits.RA2 == 1) {
  2107  01150C  A480               	btfss	3968,2,c	;volatile
  2108  01150E  D004               	goto	l823
  2109                           
  2110                           ;RemoteCan.c: 259: switch_position = 0;
  2111  011510  0E00               	movlw	0
  2112  011512  0100               	movlb	0	; () banked
  2113  011514  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2114                           
  2115                           ;RemoteCan.c: 260: } else {
  2116  011516  D00D               	goto	l9838
  2117  011518                     l823:
  2118                           
  2119                           ;RemoteCan.c: 261: if (PORTAbits.RA3 == 0) {
  2120  011518  B680               	btfsc	3968,3,c	;volatile
  2121  01151A  D005               	goto	l9836
  2122                           
  2123                           ;RemoteCan.c: 262: switch_position = 1;
  2124  01151C  0E01               	movlw	1
  2125  01151E  0100               	movlb	0	; () banked
  2126  011520  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2127                           
  2128                           ;RemoteCan.c: 263: dir = 1;
  2129  011522  0E01               	movlw	1
  2130  011524  D004               	goto	L1
  2131  011526                     l9836:
  2132                           
  2133                           ;RemoteCan.c: 265: switch_position = 2;
  2134  011526  0E02               	movlw	2
  2135  011528  0100               	movlb	0	; () banked
  2136  01152A  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2137                           
  2138                           ;RemoteCan.c: 266: dir = 0;
  2139  01152C  0E00               	movlw	0
  2140  01152E                     L1:
  2141  01152E  0100               	movlb	0	; () banked
  2142  011530  6FE8               	movwf	_dir& (0+255),b	;volatile
  2143  011532                     l9838:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;RemoteCan.c: 267: }
  2147                           ;RemoteCan.c: 268: }
  2148                           ;RemoteCan.c: 271: if (F1_switch == 1) {
  2149  011532  A44B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2150  011534  D0C5               	goto	l827
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;RemoteCan.c: 272: y = 0;
  2154  011536  9A4D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2155                           
  2156                           ;RemoteCan.c: 273: if ((x == 0)&&(F2_switch == 0)) {
  2157  011538  A84D               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2158                           
  2159                           ; BSR set to: 0
  2160  01153A  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2161  01153C  D02D               	goto	l9856
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;RemoteCan.c: 274: space_available = 0;
  2165  01153E  9C4C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;RemoteCan.c: 275: parking_state = 1;
  2169  011540  0E01               	movlw	1
  2170  011542  0100               	movlb	0	; () banked
  2171  011544  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2172                           
  2173                           ;RemoteCan.c: 276: JoystickConstants[1] = 5;
  2174  011546  0E00               	movlw	0
  2175  011548  0100               	movlb	0	; () banked
  2176  01154A  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2177  01154C  0E00               	movlw	0
  2178  01154E  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2179  011550  0EA0               	movlw	160
  2180  011552  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2181  011554  0E40               	movlw	64
  2182  011556  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2183  011558                     l9848:
  2184  011558  EC88  F0B2         	call	_CANisTxReady	;wreg free
  2185  01155C  0900               	iorlw	0
  2186  01155E  B4D8               	btfsc	status,2,c
  2187  011560  D7FB               	goto	l9848
  2188                           
  2189                           ;RemoteCan.c: 278: park_assist_state[0] = 0b00000001;
  2190  011562  0E01               	movlw	1
  2191  011564  0101               	movlb	1	; () banked
  2192  011566  6F45               	movwf	_park_assist_state& (0+255),b
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;RemoteCan.c: 279: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2196  011568  0E0C               	movlw	12
  2197  01156A  0100               	movlb	0	; () banked
  2198  01156C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2199  01156E  0E00               	movlw	0
  2200  011570  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2201  011572  0E00               	movlw	0
  2202  011574  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2203  011576  0E00               	movlw	0
  2204  011578  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2205  01157A  0E45               	movlw	low _park_assist_state
  2206  01157C  0100               	movlb	0	; () banked
  2207  01157E  6F75               	movwf	CANsendMessage@data& (0+255),b
  2208  011580  0E01               	movlw	high _park_assist_state
  2209  011582  0100               	movlb	0	; () banked
  2210  011584  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2211  011586  0E08               	movlw	8
  2212  011588  0100               	movlb	0	; () banked
  2213  01158A  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2214  01158C  0EBC               	movlw	188
  2215  01158E  0100               	movlb	0	; () banked
  2216  011590  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2217  011592  ECDB  F08D         	call	_CANsendMessage	;wreg free
  2218                           
  2219                           ;RemoteCan.c: 280: x = 1;
  2220  011596  884D               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2221  011598                     l9856:
  2222                           
  2223                           ;RemoteCan.c: 281: }
  2224                           ;RemoteCan.c: 283: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2225  011598  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2226  01159A  AC4C               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2227  01159C  D029               	goto	l832
  2228  01159E  AE4C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2229  0115A0  D027               	goto	l832
  2230                           
  2231                           ;RemoteCan.c: 284: if (z == 0) {
  2232  0115A2  BC4D               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2233  0115A4  D026               	goto	l9874
  2234                           
  2235                           ;RemoteCan.c: 285: parking_message_ID = 4;
  2236  0115A6  0E04               	movlw	4
  2237  0115A8  0100               	movlb	0	; () banked
  2238  0115AA  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  2239                           
  2240                           ;RemoteCan.c: 286: parking_state = 2;
  2241  0115AC  0E02               	movlw	2
  2242  0115AE  0100               	movlb	0	; () banked
  2243  0115B0  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2244  0115B2                     l9866:
  2245  0115B2  EC88  F0B2         	call	_CANisTxReady	;wreg free
  2246  0115B6  0900               	iorlw	0
  2247  0115B8  B4D8               	btfsc	status,2,c
  2248  0115BA  D7FB               	goto	l9866
  2249                           
  2250                           ;RemoteCan.c: 288: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2251  0115BC  0E0E               	movlw	14
  2252  0115BE  0100               	movlb	0	; () banked
  2253  0115C0  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2254  0115C2  0E00               	movlw	0
  2255  0115C4  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2256  0115C6  0E00               	movlw	0
  2257  0115C8  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2258  0115CA  0E00               	movlw	0
  2259  0115CC  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2260  0115CE  0E25               	movlw	low _data
  2261  0115D0  0100               	movlb	0	; () banked
  2262  0115D2  6F75               	movwf	CANsendMessage@data& (0+255),b
  2263  0115D4  0E01               	movlw	high _data
  2264  0115D6  0100               	movlb	0	; () banked
  2265  0115D8  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2266  0115DA  0E08               	movlw	8
  2267  0115DC  0100               	movlb	0	; () banked
  2268  0115DE  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2269  0115E0  0EBC               	movlw	188
  2270  0115E2  0100               	movlb	0	; () banked
  2271  0115E4  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2272  0115E6  ECDB  F08D         	call	_CANsendMessage	;wreg free
  2273                           
  2274                           ;RemoteCan.c: 289: x = 0;
  2275  0115EA  984D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2276                           
  2277                           ;RemoteCan.c: 290: z = 1;
  2278  0115EC  8C4D               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2279                           
  2280                           ;RemoteCan.c: 291: }
  2281                           ;RemoteCan.c: 292: } else {
  2282  0115EE  D001               	goto	l9874
  2283  0115F0                     l832:
  2284                           
  2285                           ;RemoteCan.c: 293: z = 0;
  2286  0115F0  9C4D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2287  0115F2                     l9874:
  2288                           
  2289                           ;RemoteCan.c: 294: }
  2290                           ;RemoteCan.c: 296: if ((time_counter - pr_time_5) >= 30) {
  2291  0115F2  C014  F168         	movff	_pr_time_5,??_main	;volatile
  2292  0115F6  C015  F169         	movff	_pr_time_5+1,??_main+1	;volatile
  2293  0115FA  C016  F16A         	movff	_pr_time_5+2,??_main+2	;volatile
  2294  0115FE  C017  F16B         	movff	_pr_time_5+3,??_main+3	;volatile
  2295  011602  0101               	movlb	1	; () banked
  2296  011604  1F68               	comf	??_main& (0+255),f,b
  2297  011606  1F69               	comf	(??_main+1)& (0+255),f,b
  2298  011608  1F6A               	comf	(??_main+2)& (0+255),f,b
  2299  01160A  1F6B               	comf	(??_main+3)& (0+255),f,b
  2300  01160C  2B68               	incf	??_main& (0+255),f,b
  2301  01160E  0E00               	movlw	0
  2302  011610  2369               	addwfc	(??_main+1)& (0+255),f,b
  2303  011612  236A               	addwfc	(??_main+2)& (0+255),f,b
  2304  011614  236B               	addwfc	(??_main+3)& (0+255),f,b
  2305  011616  501C               	movf	_time_counter,w,c	;volatile
  2306  011618  0101               	movlb	1	; () banked
  2307  01161A  2568               	addwf	??_main& (0+255),w,b
  2308  01161C  0101               	movlb	1	; () banked
  2309  01161E  6F6C               	movwf	(??_main+4)& (0+255),b
  2310  011620  501D               	movf	_time_counter+1,w,c	;volatile
  2311  011622  0101               	movlb	1	; () banked
  2312  011624  2169               	addwfc	(??_main+1)& (0+255),w,b
  2313  011626  0101               	movlb	1	; () banked
  2314  011628  6F6D               	movwf	(??_main+5)& (0+255),b
  2315  01162A  501E               	movf	_time_counter+2,w,c	;volatile
  2316  01162C  0101               	movlb	1	; () banked
  2317  01162E  216A               	addwfc	(??_main+2)& (0+255),w,b
  2318  011630  0101               	movlb	1	; () banked
  2319  011632  6F6E               	movwf	(??_main+6)& (0+255),b
  2320  011634  501F               	movf	_time_counter+3,w,c	;volatile
  2321  011636  0101               	movlb	1	; () banked
  2322  011638  216B               	addwfc	(??_main+3)& (0+255),w,b
  2323  01163A  0101               	movlb	1	; () banked
  2324  01163C  6F6F               	movwf	(??_main+7)& (0+255),b
  2325  01163E  0101               	movlb	1	; () banked
  2326  011640  516F               	movf	(??_main+7)& (0+255),w,b
  2327  011642  0101               	movlb	1	; () banked
  2328  011644  116E               	iorwf	(??_main+6)& (0+255),w,b
  2329  011646  0101               	movlb	1	; () banked
  2330  011648  116D               	iorwf	(??_main+5)& (0+255),w,b
  2331  01164A  E105               	bnz	u13220
  2332  01164C  0E1E               	movlw	30
  2333  01164E  0101               	movlb	1	; () banked
  2334  011650  5D6C               	subwf	(??_main+4)& (0+255),w,b
  2335  011652  A0D8               	btfss	status,0,c
  2336  011654  D06D               	goto	l9902
  2337  011656                     u13220:
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;RemoteCan.c: 297: pr_time_5 = time_counter;
  2341  011656  C01C  F014         	movff	_time_counter,_pr_time_5	;volatile
  2342  01165A  C01D  F015         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2343  01165E  C01E  F016         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2344  011662  C01F  F017         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2345                           
  2346                           ;RemoteCan.c: 298: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2347  011666  BC4C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2348                           
  2349                           ; BSR set to: 1
  2350  011668  AE4C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2351  01166A  D017               	goto	l9884
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;RemoteCan.c: 299: PORTDbits.RD6 = 1;
  2355  01166C  8C83               	bsf	3971,6,c	;volatile
  2356                           
  2357                           ;RemoteCan.c: 300: if (F2_switch == 0) {
  2358  01166E  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2359  011670  D012               	goto	l840
  2360                           
  2361                           ; BSR set to: 1
  2362                           ;RemoteCan.c: 301: PORTDbits.RD5 = ~PORTDbits.RD5;
  2363  011672  AA83               	btfss	3971,5,c	;volatile
  2364  011674  D002               	goto	u13260
  2365  011676  0E01               	movlw	1
  2366  011678  D001               	goto	u13266
  2367  01167A                     u13260:
  2368  01167A  0E00               	movlw	0
  2369  01167C                     u13266:
  2370  01167C  0AFF               	xorlw	255
  2371  01167E  0101               	movlb	1	; () banked
  2372  011680  6F68               	movwf	??_main& (0+255),b
  2373  011682  0101               	movlb	1	; () banked
  2374  011684  3B68               	swapf	??_main& (0+255),f,b
  2375  011686  4768               	rlncf	??_main& (0+255),f,b
  2376  011688  5083               	movf	3971,w,c	;volatile
  2377  01168A  0101               	movlb	1	; () banked
  2378  01168C  1968               	xorwf	??_main& (0+255),w,b
  2379  01168E  0BDF               	andlw	-33
  2380  011690  1968               	xorwf	??_main& (0+255),w,b
  2381  011692  6E83               	movwf	3971,c	;volatile
  2382                           
  2383                           ;RemoteCan.c: 302: } else {
  2384  011694  D04D               	goto	l9902
  2385  011696                     l840:
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;RemoteCan.c: 303: PORTDbits.RD5 = 1;
  2389  011696  8A83               	bsf	3971,5,c	;volatile
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;RemoteCan.c: 304: }
  2393                           ;RemoteCan.c: 305: } else {
  2394  011698  D04B               	goto	l9902
  2395  01169A                     l9884:
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;RemoteCan.c: 306: PORTDbits.RD6 = ~PORTDbits.RD6;
  2399  01169A  AC83               	btfss	3971,6,c	;volatile
  2400  01169C  D002               	goto	u13270
  2401  01169E  0E01               	movlw	1
  2402  0116A0  D001               	goto	u13276
  2403  0116A2                     u13270:
  2404  0116A2  0E00               	movlw	0
  2405  0116A4                     u13276:
  2406  0116A4  0AFF               	xorlw	255
  2407  0116A6  0101               	movlb	1	; () banked
  2408  0116A8  6F68               	movwf	??_main& (0+255),b
  2409  0116AA  0101               	movlb	1	; () banked
  2410  0116AC  3B68               	swapf	??_main& (0+255),f,b
  2411  0116AE  4768               	rlncf	??_main& (0+255),f,b
  2412  0116B0  4768               	rlncf	??_main& (0+255),f,b
  2413  0116B2  5083               	movf	3971,w,c	;volatile
  2414  0116B4  0101               	movlb	1	; () banked
  2415  0116B6  1968               	xorwf	??_main& (0+255),w,b
  2416  0116B8  0BBF               	andlw	-65
  2417  0116BA  1968               	xorwf	??_main& (0+255),w,b
  2418  0116BC  6E83               	movwf	3971,c	;volatile
  2419  0116BE  D037               	goto	l9900
  2420  0116C0                     l827:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;RemoteCan.c: 311: x = 0;
  2424  0116C0  984D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2425                           
  2426                           ;RemoteCan.c: 312: z = 0;
  2427  0116C2  9C4D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2428                           
  2429                           ;RemoteCan.c: 313: parking_message_E = 0;
  2430  0116C4  964C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2431                           
  2432                           ;RemoteCan.c: 314: F2_switch = 0;
  2433  0116C6  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2434                           
  2435                           ;RemoteCan.c: 315: space_available = 0;
  2436  0116C8  9C4C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2437                           
  2438                           ;RemoteCan.c: 316: space_gap_reached = 0;
  2439  0116CA  9E4C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2440                           
  2441                           ;RemoteCan.c: 317: PORTDbits.RD5 = 0;
  2442  0116CC  9A83               	bcf	3971,5,c	;volatile
  2443                           
  2444                           ;RemoteCan.c: 318: PORTDbits.RD6 = 0;
  2445  0116CE  9C83               	bcf	3971,6,c	;volatile
  2446                           
  2447                           ;RemoteCan.c: 319: if (y == 0) {
  2448  0116D0  BA4D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2449  0116D2  D02C               	goto	l9898
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;RemoteCan.c: 320: parking_state = 0;
  2453  0116D4  0E00               	movlw	0
  2454  0116D6  0100               	movlb	0	; () banked
  2455  0116D8  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2456                           
  2457                           ;RemoteCan.c: 321: JoystickConstants[1] = 20;
  2458  0116DA  0E00               	movlw	0
  2459  0116DC  0100               	movlb	0	; () banked
  2460  0116DE  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2461  0116E0  0E00               	movlw	0
  2462  0116E2  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2463  0116E4  0EA0               	movlw	160
  2464  0116E6  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2465  0116E8  0E41               	movlw	65
  2466  0116EA  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2467  0116EC                     l9890:
  2468  0116EC  EC88  F0B2         	call	_CANisTxReady	;wreg free
  2469  0116F0  0900               	iorlw	0
  2470  0116F2  B4D8               	btfsc	status,2,c
  2471  0116F4  D7FB               	goto	l9890
  2472                           
  2473                           ;RemoteCan.c: 323: park_assist_state[0] = 0b00000000;
  2474  0116F6  0E00               	movlw	0
  2475  0116F8  0101               	movlb	1	; () banked
  2476  0116FA  6F45               	movwf	_park_assist_state& (0+255),b
  2477                           
  2478                           ; BSR set to: 1
  2479                           ;RemoteCan.c: 324: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2480  0116FC  0E0C               	movlw	12
  2481  0116FE  0100               	movlb	0	; () banked
  2482  011700  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2483  011702  0E00               	movlw	0
  2484  011704  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2485  011706  0E00               	movlw	0
  2486  011708  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2487  01170A  0E00               	movlw	0
  2488  01170C  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2489  01170E  0E45               	movlw	low _park_assist_state
  2490  011710  0100               	movlb	0	; () banked
  2491  011712  6F75               	movwf	CANsendMessage@data& (0+255),b
  2492  011714  0E01               	movlw	high _park_assist_state
  2493  011716  0100               	movlb	0	; () banked
  2494  011718  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2495  01171A  0E08               	movlw	8
  2496  01171C  0100               	movlb	0	; () banked
  2497  01171E  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2498  011720  0EBC               	movlw	188
  2499  011722  0100               	movlb	0	; () banked
  2500  011724  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2501  011726  ECDB  F08D         	call	_CANsendMessage	;wreg free
  2502                           
  2503                           ;RemoteCan.c: 325: y = 1;
  2504  01172A  8A4D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2505  01172C                     l9898:
  2506                           
  2507                           ;RemoteCan.c: 326: }
  2508                           ;RemoteCan.c: 327: PORTDbits.RD6 = 0;
  2509  01172C  9C83               	bcf	3971,6,c	;volatile
  2510  01172E                     l9900:
  2511                           
  2512                           ;RemoteCan.c: 328: PORTDbits.RD5 = 0;
  2513  01172E  9A83               	bcf	3971,5,c	;volatile
  2514  011730                     l9902:
  2515                           
  2516                           ;RemoteCan.c: 329: }
  2517                           ;RemoteCan.c: 331: Joystick_Polling();
  2518  011730  ECE8  F0B0         	call	_Joystick_Polling	;wreg free
  2519                           
  2520                           ;RemoteCan.c: 334: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2521  011734  0E00               	movlw	0
  2522  011736  0100               	movlb	0	; () banked
  2523  011738  6FA9               	movwf	___fladd@a& (0+255),b
  2524  01173A  0E00               	movlw	0
  2525  01173C  6FAA               	movwf	(___fladd@a+1)& (0+255),b
  2526  01173E  0E34               	movlw	52
  2527  011740  6FAB               	movwf	(___fladd@a+2)& (0+255),b
  2528  011742  0E43               	movlw	67
  2529  011744  6FAC               	movwf	(___fladd@a+3)& (0+255),b
  2530  011746  C0CB  F083         	movff	_JoystickConstants,___flmul@a	;volatile
  2531  01174A  C0CC  F084         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2532  01174E  C0CD  F085         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2533  011752  C0CE  F086         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2534  011756  0100               	movlb	0	; () banked
  2535  011758  51DF               	movf	_JoystickValues& (0+255),w,b	;volatile
  2536  01175A  0100               	movlb	0	; () banked
  2537  01175C  6F71               	movwf	___xxtofl@val& (0+255),b
  2538  01175E  6B72               	clrf	(___xxtofl@val+1)& (0+255),b
  2539  011760  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  2540  011762  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  2541  011764  0E00               	movlw	0
  2542  011766  ECDC  F0A5         	call	___xxtofl
  2543  01176A  C071  F07F         	movff	?___xxtofl,___flmul@b
  2544  01176E  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2545  011772  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2546  011776  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2547  01177A  EC50  F09C         	call	___flmul	;wreg free
  2548  01177E  C07F  F098         	movff	?___flmul,___flneg@f1
  2549  011782  C080  F099         	movff	?___flmul+1,___flneg@f1+1
  2550  011786  C081  F09A         	movff	?___flmul+2,___flneg@f1+2
  2551  01178A  C082  F09B         	movff	?___flmul+3,___flneg@f1+3
  2552  01178E  ECDD  F0B1         	call	___flneg	;wreg free
  2553  011792  C098  F0A5         	movff	?___flneg,___fladd@b
  2554  011796  C099  F0A6         	movff	?___flneg+1,___fladd@b+1
  2555  01179A  C09A  F0A7         	movff	?___flneg+2,___fladd@b+2
  2556  01179E  C09B  F0A8         	movff	?___flneg+3,___fladd@b+3
  2557  0117A2  ECFC  F099         	call	___fladd	;wreg free
  2558  0117A6  C0A5  F0B9         	movff	?___fladd,___fltol@f1
  2559  0117AA  C0A6  F0BA         	movff	?___fladd+1,___fltol@f1+1
  2560  0117AE  C0A7  F0BB         	movff	?___fladd+2,___fltol@f1+2
  2561  0117B2  C0A8  F0BC         	movff	?___fladd+3,___fltol@f1+3
  2562  0117B6  EC98  F0AB         	call	___fltol	;wreg free
  2563  0117BA  0100               	movlb	0	; () banked
  2564  0117BC  51B9               	movf	?___fltol& (0+255),w,b
  2565  0117BE  0101               	movlb	1	; () banked
  2566  0117C0  6F3D               	movwf	_data_steering& (0+255),b
  2567                           
  2568                           ; BSR set to: 1
  2569                           ;RemoteCan.c: 335: if (parking_state == 1) {
  2570  0117C2  0100               	movlb	0	; () banked
  2571  0117C4  05EA               	decf	_parking_state& (0+255),w,b	;volatile
  2572  0117C6  A4D8               	btfss	status,2,c
  2573  0117C8  D05C               	goto	l848
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;RemoteCan.c: 336: if (steering_correction_dir == 1) {
  2577  0117CA  A04D               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2578  0117CC  D00F               	goto	l9912
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;RemoteCan.c: 337: check = data_steering[0] + steering_correction;
  2582  0117CE  0100               	movlb	0	; () banked
  2583  0117D0  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2584  0117D2  C13D  F168         	movff	_data_steering,??_main
  2585  0117D6  0101               	movlb	1	; () banked
  2586  0117D8  6B69               	clrf	(??_main+1)& (0+255),b
  2587  0117DA  0101               	movlb	1	; () banked
  2588  0117DC  2768               	addwf	??_main& (0+255),f,b
  2589  0117DE  0E00               	movlw	0
  2590  0117E0  2369               	addwfc	(??_main+1)& (0+255),f,b
  2591  0117E2  C168  F0D3         	movff	??_main,_check	;volatile
  2592  0117E6  C169  F0D4         	movff	??_main+1,_check+1	;volatile
  2593  0117EA  D01B               	goto	L2
  2594  0117EC                     l9912:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;RemoteCan.c: 339: check = data_steering[0] - steering_correction;
  2598  0117EC  0100               	movlb	0	; () banked
  2599  0117EE  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2600  0117F0  0101               	movlb	1	; () banked
  2601  0117F2  6F68               	movwf	??_main& (0+255),b
  2602  0117F4  6B69               	clrf	(??_main+1)& (0+255),b
  2603  0117F6  0101               	movlb	1	; () banked
  2604  0117F8  1F68               	comf	??_main& (0+255),f,b
  2605  0117FA  1F69               	comf	(??_main+1)& (0+255),f,b
  2606  0117FC  4B68               	infsnz	??_main& (0+255),f,b
  2607  0117FE  2B69               	incf	(??_main+1)& (0+255),f,b
  2608  011800  0101               	movlb	1	; () banked
  2609  011802  513D               	movf	_data_steering& (0+255),w,b
  2610  011804  0101               	movlb	1	; () banked
  2611  011806  6F6A               	movwf	(??_main+2)& (0+255),b
  2612  011808  6B6B               	clrf	(??_main+3)& (0+255),b
  2613  01180A  0101               	movlb	1	; () banked
  2614  01180C  5168               	movf	??_main& (0+255),w,b
  2615  01180E  0101               	movlb	1	; () banked
  2616  011810  276A               	addwf	(??_main+2)& (0+255),f,b
  2617  011812  0101               	movlb	1	; () banked
  2618  011814  5169               	movf	(??_main+1)& (0+255),w,b
  2619  011816  0101               	movlb	1	; () banked
  2620  011818  236B               	addwfc	(??_main+3)& (0+255),f,b
  2621  01181A  C16A  F0D3         	movff	??_main+2,_check	;volatile
  2622  01181E  C16B  F0D4         	movff	??_main+3,_check+1	;volatile
  2623  011822                     L2:
  2624  011822  0100               	movlb	0	; () banked
  2625  011824  0E00               	movlw	0
  2626  011826  BFD4               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2627  011828  0EFF               	movlw	-1
  2628  01182A  6FD5               	movwf	(_check+2)& (0+255),b	;volatile
  2629  01182C  6FD6               	movwf	(_check+3)& (0+255),b	;volatile
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;RemoteCan.c: 340: }
  2633                           ;RemoteCan.c: 341: if ((check >= 0)&&(check <= 180)) {
  2634  01182E  0100               	movlb	0	; () banked
  2635  011830  BFD6               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2636  011832  D012               	goto	l9918
  2637                           
  2638                           ; BSR set to: 0
  2639  011834  0100               	movlb	0	; () banked
  2640  011836  BFD6               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2641  011838  D00C               	goto	l9916
  2642  01183A  0100               	movlb	0	; () banked
  2643  01183C  51D6               	movf	(_check+3)& (0+255),w,b	;volatile
  2644  01183E  0100               	movlb	0	; () banked
  2645  011840  11D5               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2646  011842  0100               	movlb	0	; () banked
  2647  011844  11D4               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2648  011846  E108               	bnz	l9918
  2649  011848  0EB5               	movlw	181
  2650  01184A  0100               	movlb	0	; () banked
  2651  01184C  5DD3               	subwf	_check& (0+255),w,b	;volatile
  2652  01184E  B0D8               	btfsc	status,0,c
  2653  011850  D003               	goto	l9918
  2654  011852                     l9916:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;RemoteCan.c: 342: data_steering[0] = check;
  2658  011852  C0D3  F13D         	movff	_check,_data_steering	;volatile
  2659                           
  2660                           ;RemoteCan.c: 343: } else {
  2661  011856  D019               	goto	l855
  2662  011858                     l9918:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;RemoteCan.c: 344: if (check > 180) {
  2666  011858  0100               	movlb	0	; () banked
  2667  01185A  BFD6               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2668  01185C  D00E               	goto	l9922
  2669  01185E  0100               	movlb	0	; () banked
  2670  011860  51D6               	movf	(_check+3)& (0+255),w,b	;volatile
  2671  011862  0100               	movlb	0	; () banked
  2672  011864  11D5               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2673  011866  0100               	movlb	0	; () banked
  2674  011868  11D4               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2675  01186A  E105               	bnz	u13340
  2676  01186C  0EB5               	movlw	181
  2677  01186E  0100               	movlb	0	; () banked
  2678  011870  5DD3               	subwf	_check& (0+255),w,b	;volatile
  2679  011872  A0D8               	btfss	status,0,c
  2680  011874  D002               	goto	l9922
  2681  011876                     u13340:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;RemoteCan.c: 345: data_steering[0] = 180;
  2685  011876  0EB4               	movlw	180
  2686  011878  D001               	goto	L3
  2687  01187A                     l9922:
  2688                           
  2689                           ;RemoteCan.c: 347: data_steering[0] = 0;
  2690  01187A  0E00               	movlw	0
  2691  01187C                     L3:
  2692  01187C  0101               	movlb	1	; () banked
  2693  01187E  6F3D               	movwf	_data_steering& (0+255),b
  2694                           
  2695                           ; BSR set to: 1
  2696                           ;RemoteCan.c: 348: }
  2697                           ;RemoteCan.c: 349: }
  2698                           ;RemoteCan.c: 350: } else {
  2699                           
  2700                           ; BSR set to: 1
  2701  011880  D004               	goto	l855
  2702  011882                     l848:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;RemoteCan.c: 351: steering_correction_dir = 0;
  2706  011882  904D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;RemoteCan.c: 352: steering_correction = 0;
  2710  011884  0E00               	movlw	0
  2711  011886  0100               	movlb	0	; () banked
  2712  011888  6FEB               	movwf	_steering_correction& (0+255),b	;volatile
  2713  01188A                     l855:
  2714                           
  2715                           ;RemoteCan.c: 353: }
  2716                           ;RemoteCan.c: 356: if (switch_position != 0) {
  2717  01188A  0100               	movlb	0	; () banked
  2718  01188C  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  2719  01188E  B4D8               	btfsc	status,2,c
  2720  011890  D09C               	goto	l9956
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;RemoteCan.c: 357: if (JoystickValues[1] > 132) {
  2724  011892  0E84               	movlw	132
  2725  011894  0100               	movlb	0	; () banked
  2726  011896  65E0               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2727  011898  D074               	goto	l9942
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;RemoteCan.c: 358: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2731  01189A  C0CF  F083         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2732  01189E  C0D0  F084         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2733  0118A2  C0D1  F085         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2734  0118A6  C0D2  F086         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2735  0118AA  0E7E               	movlw	126
  2736  0118AC  0101               	movlb	1	; () banked
  2737  0118AE  6F68               	movwf	??_main& (0+255),b
  2738  0118B0  0EFF               	movlw	255
  2739  0118B2  0101               	movlb	1	; () banked
  2740  0118B4  6F69               	movwf	(??_main+1)& (0+255),b
  2741  0118B6  0100               	movlb	0	; () banked
  2742  0118B8  51E0               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2743  0118BA  0101               	movlb	1	; () banked
  2744  0118BC  6F6A               	movwf	(??_main+2)& (0+255),b
  2745  0118BE  6B6B               	clrf	(??_main+3)& (0+255),b
  2746  0118C0  0101               	movlb	1	; () banked
  2747  0118C2  5168               	movf	??_main& (0+255),w,b
  2748  0118C4  0101               	movlb	1	; () banked
  2749  0118C6  276A               	addwf	(??_main+2)& (0+255),f,b
  2750  0118C8  0101               	movlb	1	; () banked
  2751  0118CA  5169               	movf	(??_main+1)& (0+255),w,b
  2752  0118CC  0101               	movlb	1	; () banked
  2753  0118CE  236B               	addwfc	(??_main+3)& (0+255),f,b
  2754  0118D0  C16A  F071         	movff	??_main+2,___xxtofl@val
  2755  0118D4  C16B  F072         	movff	??_main+3,___xxtofl@val+1
  2756  0118D8  0100               	movlb	0	; () banked
  2757  0118DA  0E00               	movlw	0
  2758  0118DC  BF72               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2759  0118DE  0EFF               	movlw	-1
  2760  0118E0  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
  2761  0118E2  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
  2762  0118E4  0E01               	movlw	1
  2763  0118E6  ECDC  F0A5         	call	___xxtofl
  2764  0118EA  C071  F07F         	movff	?___xxtofl,___flmul@b
  2765  0118EE  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2766  0118F2  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2767  0118F6  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2768  0118FA  EC50  F09C         	call	___flmul	;wreg free
  2769  0118FE  C07F  F0B9         	movff	?___flmul,___fltol@f1
  2770  011902  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  2771  011906  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  2772  01190A  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  2773  01190E  EC98  F0AB         	call	___fltol	;wreg free
  2774  011912  C0B9  F0E5         	movff	?___fltol,_set_speed	;volatile
  2775  011916  C0BA  F0E6         	movff	?___fltol+1,_set_speed+1	;volatile
  2776                           
  2777                           ;RemoteCan.c: 359: data_brake [0] = 3;
  2778  01191A  0E03               	movlw	3
  2779  01191C  0101               	movlb	1	; () banked
  2780  01191E  6F2D               	movwf	_data_brake& (0+255),b
  2781                           
  2782                           ; BSR set to: 1
  2783                           ;RemoteCan.c: 360: data_brake [1] = 0;
  2784  011920  0E00               	movlw	0
  2785  011922  0101               	movlb	1	; () banked
  2786  011924  6F2E               	movwf	(_data_brake+1)& (0+255),b
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;RemoteCan.c: 363: collision_risk_value = (JoystickValues[1] - 130) / 10;
  2790  011926  0E7E               	movlw	126
  2791  011928  0100               	movlb	0	; () banked
  2792  01192A  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2793  01192C  0100               	movlb	0	; () banked
  2794  01192E  6F77               	movwf	___awdiv@dividend& (0+255),b
  2795  011930  0100               	movlb	0	; () banked
  2796  011932  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  2797  011934  0EFF               	movlw	255
  2798  011936  2378               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  2799  011938  0E00               	movlw	0
  2800  01193A  0100               	movlb	0	; () banked
  2801  01193C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  2802  01193E  0E0A               	movlw	10
  2803  011940  6F79               	movwf	___awdiv@divisor& (0+255),b
  2804  011942  EC94  F0AC         	call	___awdiv	;wreg free
  2805  011946  0100               	movlb	0	; () banked
  2806  011948  5177               	movf	?___awdiv& (0+255),w,b
  2807  01194A  0100               	movlb	0	; () banked
  2808  01194C  6FE7               	movwf	_collision_risk_value& (0+255),b	;volatile
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;RemoteCan.c: 364: if (collision_sensor_distance[dir] < collision_risk_value) {
  2812  01194E  0100               	movlb	0	; () banked
  2813  011950  51E8               	movf	_dir& (0+255),w,b	;volatile
  2814  011952  0D01               	mullw	1
  2815  011954  0E20               	movlw	low _collision_sensor_distance
  2816  011956  24F3               	addwf	prodl,w,c
  2817  011958  6ED9               	movwf	fsr2l,c
  2818  01195A  0E00               	movlw	high _collision_sensor_distance
  2819  01195C  20F4               	addwfc	prodh,w,c
  2820  01195E  6EDA               	movwf	fsr2h,c
  2821  011960  0100               	movlb	0	; () banked
  2822  011962  51E7               	movf	_collision_risk_value& (0+255),w,b	;volatile
  2823  011964  5CDE               	subwf	postinc2,w,c
  2824  011966  B0D8               	btfsc	status,0,c
  2825  011968  D00A               	goto	l858
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;RemoteCan.c: 365: set_speed = 0;
  2829  01196A  0E00               	movlw	0
  2830  01196C  0100               	movlb	0	; () banked
  2831  01196E  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2832  011970  0E00               	movlw	0
  2833  011972  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2834                           
  2835                           ;RemoteCan.c: 366: data_brake [0] = 0b00000000;
  2836  011974  0E00               	movlw	0
  2837  011976  0101               	movlb	1	; () banked
  2838  011978  6F2D               	movwf	_data_brake& (0+255),b
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;RemoteCan.c: 367: collision_msg = 1;
  2842  01197A  8E4B               	bsf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  2843                           
  2844                           ;RemoteCan.c: 368: } else {
  2845  01197C  D02E               	goto	l9958
  2846  01197E                     l858:
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;RemoteCan.c: 369: collision_msg = 0;
  2850  01197E  9E4B               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;RemoteCan.c: 370: }
  2854                           ;RemoteCan.c: 371: } else {
  2855  011980  D02C               	goto	l9958
  2856  011982                     l9942:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;RemoteCan.c: 372: set_speed = 0;
  2860  011982  0E00               	movlw	0
  2861  011984  0100               	movlb	0	; () banked
  2862  011986  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2863  011988  0E00               	movlw	0
  2864  01198A  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;RemoteCan.c: 373: if (JoystickValues[1] <= 65) {
  2868  01198C  0E42               	movlw	66
  2869  01198E  0100               	movlb	0	; () banked
  2870  011990  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2871  011992  D006               	goto	l9948
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;RemoteCan.c: 374: data_brake [0] = 0b00000010;
  2875  011994  0E02               	movlw	2
  2876  011996  0101               	movlb	1	; () banked
  2877  011998  6F2D               	movwf	_data_brake& (0+255),b
  2878                           
  2879                           ;RemoteCan.c: 375: data_brake [1] = 0;
  2880  01199A  0E00               	movlw	0
  2881  01199C  0101               	movlb	1	; () banked
  2882  01199E  6F2E               	movwf	(_data_brake+1)& (0+255),b
  2883  0119A0                     l9948:
  2884                           
  2885                           ;RemoteCan.c: 376: }
  2886                           ;RemoteCan.c: 377: if (JoystickValues[1] <= 20) {
  2887  0119A0  0E15               	movlw	21
  2888  0119A2  0100               	movlb	0	; () banked
  2889  0119A4  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2890  0119A6  D006               	goto	l9952
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;RemoteCan.c: 378: data_brake [0] = 0b00000001;
  2894  0119A8  0E01               	movlw	1
  2895  0119AA  0101               	movlb	1	; () banked
  2896  0119AC  6F2D               	movwf	_data_brake& (0+255),b
  2897                           
  2898                           ;RemoteCan.c: 379: data_brake [1] = 0;
  2899  0119AE  0E00               	movlw	0
  2900  0119B0  0101               	movlb	1	; () banked
  2901  0119B2  6F2E               	movwf	(_data_brake+1)& (0+255),b
  2902  0119B4                     l9952:
  2903                           
  2904                           ;RemoteCan.c: 380: }
  2905                           ;RemoteCan.c: 381: if (JoystickValues[1] <= 5) {
  2906  0119B4  0E06               	movlw	6
  2907  0119B6  0100               	movlb	0	; () banked
  2908  0119B8  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2909  0119BA  D00F               	goto	l9958
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;RemoteCan.c: 382: data_brake [0] = 0b00000000;
  2913  0119BC  0E00               	movlw	0
  2914  0119BE  0101               	movlb	1	; () banked
  2915  0119C0  6F2D               	movwf	_data_brake& (0+255),b
  2916                           
  2917                           ;RemoteCan.c: 383: data_brake [1] = 0;
  2918  0119C2  0E00               	movlw	0
  2919  0119C4  0101               	movlb	1	; () banked
  2920  0119C6  6F2E               	movwf	(_data_brake+1)& (0+255),b
  2921                           
  2922                           ; BSR set to: 1
  2923                           ;RemoteCan.c: 384: }
  2924                           ;RemoteCan.c: 385: }
  2925                           ;RemoteCan.c: 386: } else {
  2926                           
  2927                           ; BSR set to: 1
  2928  0119C8  D008               	goto	l9958
  2929  0119CA                     l9956:
  2930                           
  2931                           ;RemoteCan.c: 387: set_speed = 0;
  2932  0119CA  0E00               	movlw	0
  2933  0119CC  0100               	movlb	0	; () banked
  2934  0119CE  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2935  0119D0  0E00               	movlw	0
  2936  0119D2  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2937                           
  2938                           ;RemoteCan.c: 388: data_brake [0] = 0b00000000;
  2939  0119D4  0E00               	movlw	0
  2940  0119D6  0101               	movlb	1	; () banked
  2941  0119D8  6F2D               	movwf	_data_brake& (0+255),b
  2942  0119DA                     l9958:
  2943                           
  2944                           ;RemoteCan.c: 389: }
  2945                           ;RemoteCan.c: 391: if (newMessageCan == 1) {
  2946  0119DA  A24C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2947  0119DC  D003               	goto	l9964
  2948                           
  2949                           ;RemoteCan.c: 392: CAN_Rx();
  2950  0119DE  EC84  F0AF         	call	_CAN_Rx	;wreg free
  2951                           
  2952                           ;RemoteCan.c: 393: newMessageCan = 0;
  2953  0119E2  924C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2954  0119E4                     l9964:
  2955                           
  2956                           ;RemoteCan.c: 394: }
  2957                           ;RemoteCan.c: 396: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2958  0119E4  C0DB  F168         	movff	_pr_time_2,??_main	;volatile
  2959  0119E8  C0DC  F169         	movff	_pr_time_2+1,??_main+1	;volatile
  2960  0119EC  C0DD  F16A         	movff	_pr_time_2+2,??_main+2	;volatile
  2961  0119F0  C0DE  F16B         	movff	_pr_time_2+3,??_main+3	;volatile
  2962  0119F4  0101               	movlb	1	; () banked
  2963  0119F6  1F68               	comf	??_main& (0+255),f,b
  2964  0119F8  1F69               	comf	(??_main+1)& (0+255),f,b
  2965  0119FA  1F6A               	comf	(??_main+2)& (0+255),f,b
  2966  0119FC  1F6B               	comf	(??_main+3)& (0+255),f,b
  2967  0119FE  2B68               	incf	??_main& (0+255),f,b
  2968  011A00  0E00               	movlw	0
  2969  011A02  2369               	addwfc	(??_main+1)& (0+255),f,b
  2970  011A04  236A               	addwfc	(??_main+2)& (0+255),f,b
  2971  011A06  236B               	addwfc	(??_main+3)& (0+255),f,b
  2972  011A08  501C               	movf	_time_counter,w,c	;volatile
  2973  011A0A  0101               	movlb	1	; () banked
  2974  011A0C  2568               	addwf	??_main& (0+255),w,b
  2975  011A0E  0101               	movlb	1	; () banked
  2976  011A10  6F6C               	movwf	(??_main+4)& (0+255),b
  2977  011A12  501D               	movf	_time_counter+1,w,c	;volatile
  2978  011A14  0101               	movlb	1	; () banked
  2979  011A16  2169               	addwfc	(??_main+1)& (0+255),w,b
  2980  011A18  0101               	movlb	1	; () banked
  2981  011A1A  6F6D               	movwf	(??_main+5)& (0+255),b
  2982  011A1C  501E               	movf	_time_counter+2,w,c	;volatile
  2983  011A1E  0101               	movlb	1	; () banked
  2984  011A20  216A               	addwfc	(??_main+2)& (0+255),w,b
  2985  011A22  0101               	movlb	1	; () banked
  2986  011A24  6F6E               	movwf	(??_main+6)& (0+255),b
  2987  011A26  501F               	movf	_time_counter+3,w,c	;volatile
  2988  011A28  0101               	movlb	1	; () banked
  2989  011A2A  216B               	addwfc	(??_main+3)& (0+255),w,b
  2990  011A2C  0101               	movlb	1	; () banked
  2991  011A2E  6F6F               	movwf	(??_main+7)& (0+255),b
  2992  011A30  0101               	movlb	1	; () banked
  2993  011A32  516F               	movf	(??_main+7)& (0+255),w,b
  2994  011A34  0101               	movlb	1	; () banked
  2995  011A36  116E               	iorwf	(??_main+6)& (0+255),w,b
  2996  011A38  0101               	movlb	1	; () banked
  2997  011A3A  116D               	iorwf	(??_main+5)& (0+255),w,b
  2998  011A3C  E105               	bnz	u13420
  2999  011A3E  0E02               	movlw	2
  3000  011A40  0101               	movlb	1	; () banked
  3001  011A42  5D6C               	subwf	(??_main+4)& (0+255),w,b
  3002  011A44  A0D8               	btfss	status,0,c
  3003  011A46  D004               	goto	l870
  3004  011A48                     u13420:
  3005                           
  3006                           ; BSR set to: 1
  3007  011A48  0E01               	movlw	1
  3008  011A4A  0100               	movlb	0	; () banked
  3009  011A4C  65E9               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  3010  011A4E  D002               	goto	l868
  3011  011A50                     l870:
  3012  011A50  A24B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3013  011A52  D01B               	goto	l9976
  3014  011A54                     l868:
  3015                           
  3016                           ;RemoteCan.c: 397: if (Can_Tx_Force == 1) {
  3017  011A54  A24B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3018  011A56  D00F               	goto	l9972
  3019                           
  3020                           ;RemoteCan.c: 398: dir = 1;
  3021  011A58  0E01               	movlw	1
  3022  011A5A  0100               	movlb	0	; () banked
  3023  011A5C  6FE8               	movwf	_dir& (0+255),b	;volatile
  3024                           
  3025                           ;RemoteCan.c: 399: set_speed = 0;
  3026  011A5E  0E00               	movlw	0
  3027  011A60  0100               	movlb	0	; () banked
  3028  011A62  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3029  011A64  0E00               	movlw	0
  3030  011A66  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  3031                           
  3032                           ;RemoteCan.c: 400: data_steering [0] = 90;
  3033  011A68  0E5A               	movlw	90
  3034  011A6A  0101               	movlb	1	; () banked
  3035  011A6C  6F3D               	movwf	_data_steering& (0+255),b
  3036                           
  3037                           ;RemoteCan.c: 401: data_brake [0] = 0b00000000;
  3038  011A6E  0E00               	movlw	0
  3039  011A70  0101               	movlb	1	; () banked
  3040  011A72  6F2D               	movwf	_data_brake& (0+255),b
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;RemoteCan.c: 402: Can_Tx_Force = 0;
  3044  011A74  924B               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3045  011A76                     l9972:
  3046                           
  3047                           ;RemoteCan.c: 403: }
  3048                           ;RemoteCan.c: 404: pr_time_2 = time_counter;
  3049  011A76  C01C  F0DB         	movff	_time_counter,_pr_time_2	;volatile
  3050  011A7A  C01D  F0DC         	movff	_time_counter+1,_pr_time_2+1	;volatile
  3051  011A7E  C01E  F0DD         	movff	_time_counter+2,_pr_time_2+2	;volatile
  3052  011A82  C01F  F0DE         	movff	_time_counter+3,_pr_time_2+3	;volatile
  3053                           
  3054                           ;RemoteCan.c: 405: CAN_Tx();
  3055  011A86  ECB0  F0AD         	call	_CAN_Tx	;wreg free
  3056  011A8A                     l9976:
  3057                           
  3058                           ;RemoteCan.c: 406: }
  3059                           ;RemoteCan.c: 409: if (time_counter >= pr_time_6) {
  3060  011A8A  5018               	movf	_pr_time_6,w,c	;volatile
  3061  011A8C  5C1C               	subwf	_time_counter,w,c	;volatile
  3062  011A8E  5019               	movf	_pr_time_6+1,w,c	;volatile
  3063  011A90  581D               	subwfb	_time_counter+1,w,c	;volatile
  3064  011A92  501A               	movf	_pr_time_6+2,w,c	;volatile
  3065  011A94  581E               	subwfb	_time_counter+2,w,c	;volatile
  3066  011A96  501B               	movf	_pr_time_6+3,w,c	;volatile
  3067  011A98  581F               	subwfb	_time_counter+3,w,c	;volatile
  3068  011A9A  A0D8               	btfss	status,0,c
  3069  011A9C  D05B               	goto	l10004
  3070                           
  3071                           ;RemoteCan.c: 410: if ((time_counter - pr_time_3) >= (100 / 10)) {
  3072  011A9E  C010  F168         	movff	_pr_time_3,??_main	;volatile
  3073  011AA2  C011  F169         	movff	_pr_time_3+1,??_main+1	;volatile
  3074  011AA6  C012  F16A         	movff	_pr_time_3+2,??_main+2	;volatile
  3075  011AAA  C013  F16B         	movff	_pr_time_3+3,??_main+3	;volatile
  3076  011AAE  0101               	movlb	1	; () banked
  3077  011AB0  1F68               	comf	??_main& (0+255),f,b
  3078  011AB2  1F69               	comf	(??_main+1)& (0+255),f,b
  3079  011AB4  1F6A               	comf	(??_main+2)& (0+255),f,b
  3080  011AB6  1F6B               	comf	(??_main+3)& (0+255),f,b
  3081  011AB8  2B68               	incf	??_main& (0+255),f,b
  3082  011ABA  0E00               	movlw	0
  3083  011ABC  2369               	addwfc	(??_main+1)& (0+255),f,b
  3084  011ABE  236A               	addwfc	(??_main+2)& (0+255),f,b
  3085  011AC0  236B               	addwfc	(??_main+3)& (0+255),f,b
  3086  011AC2  501C               	movf	_time_counter,w,c	;volatile
  3087  011AC4  0101               	movlb	1	; () banked
  3088  011AC6  2568               	addwf	??_main& (0+255),w,b
  3089  011AC8  0101               	movlb	1	; () banked
  3090  011ACA  6F6C               	movwf	(??_main+4)& (0+255),b
  3091  011ACC  501D               	movf	_time_counter+1,w,c	;volatile
  3092  011ACE  0101               	movlb	1	; () banked
  3093  011AD0  2169               	addwfc	(??_main+1)& (0+255),w,b
  3094  011AD2  0101               	movlb	1	; () banked
  3095  011AD4  6F6D               	movwf	(??_main+5)& (0+255),b
  3096  011AD6  501E               	movf	_time_counter+2,w,c	;volatile
  3097  011AD8  0101               	movlb	1	; () banked
  3098  011ADA  216A               	addwfc	(??_main+2)& (0+255),w,b
  3099  011ADC  0101               	movlb	1	; () banked
  3100  011ADE  6F6E               	movwf	(??_main+6)& (0+255),b
  3101  011AE0  501F               	movf	_time_counter+3,w,c	;volatile
  3102  011AE2  0101               	movlb	1	; () banked
  3103  011AE4  216B               	addwfc	(??_main+3)& (0+255),w,b
  3104  011AE6  0101               	movlb	1	; () banked
  3105  011AE8  6F6F               	movwf	(??_main+7)& (0+255),b
  3106  011AEA  0101               	movlb	1	; () banked
  3107  011AEC  516F               	movf	(??_main+7)& (0+255),w,b
  3108  011AEE  0101               	movlb	1	; () banked
  3109  011AF0  116E               	iorwf	(??_main+6)& (0+255),w,b
  3110  011AF2  0101               	movlb	1	; () banked
  3111  011AF4  116D               	iorwf	(??_main+5)& (0+255),w,b
  3112  011AF6  E105               	bnz	u13470
  3113  011AF8  0E0A               	movlw	10
  3114  011AFA  0101               	movlb	1	; () banked
  3115  011AFC  5D6C               	subwf	(??_main+4)& (0+255),w,b
  3116  011AFE  A0D8               	btfss	status,0,c
  3117  011B00  D463               	goto	l9786
  3118  011B02                     u13470:
  3119                           
  3120                           ; BSR set to: 1
  3121                           ;RemoteCan.c: 411: pr_time_3 = time_counter;
  3122  011B02  C01C  F010         	movff	_time_counter,_pr_time_3	;volatile
  3123  011B06  C01D  F011         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3124  011B0A  C01E  F012         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3125  011B0E  C01F  F013         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3126                           
  3127                           ;RemoteCan.c: 412: if (parking_message_E == 1) {
  3128  011B12  A64C               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3129  011B14  D01C               	goto	l10002
  3130                           
  3131                           ; BSR set to: 1
  3132                           ;RemoteCan.c: 413: display_refresh = 1;
  3133  011B16  804C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3134                           
  3135                           ; BSR set to: 1
  3136                           ;RemoteCan.c: 414: if (parking_message_ID == 0) {
  3137  011B18  0100               	movlb	0	; () banked
  3138  011B1A  51E9               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3139  011B1C  A4D8               	btfss	status,2,c
  3140  011B1E  D004               	goto	l9990
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;RemoteCan.c: 415: LCD_Gap();
  3144  011B20  EC21  F0B0         	call	_LCD_Gap	;wreg free
  3145                           
  3146                           ;RemoteCan.c: 416: parking_message_ID++;
  3147  011B24  0100               	movlb	0	; () banked
  3148  011B26  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3149  011B28                     l9990:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;RemoteCan.c: 417: }
  3153                           ;RemoteCan.c: 418: if (parking_message_ID == 2) {
  3154  011B28  0E02               	movlw	2
  3155  011B2A  0100               	movlb	0	; () banked
  3156  011B2C  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3157  011B2E  A4D8               	btfss	status,2,c
  3158  011B30  D004               	goto	l9996
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;RemoteCan.c: 419: LCD_Park();
  3162  011B32  ECEF  F0AF         	call	_LCD_Park	;wreg free
  3163                           
  3164                           ;RemoteCan.c: 420: parking_message_ID++;
  3165  011B36  0100               	movlb	0	; () banked
  3166  011B38  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3167  011B3A                     l9996:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;RemoteCan.c: 421: }
  3171                           ;RemoteCan.c: 422: if (parking_message_ID == 4) {
  3172  011B3A  0E04               	movlw	4
  3173  011B3C  0100               	movlb	0	; () banked
  3174  011B3E  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3175  011B40  A4D8               	btfss	status,2,c
  3176  011B42  D442               	goto	l9786
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;RemoteCan.c: 423: LCD_Parking();
  3180  011B44  ECBD  F0AF         	call	_LCD_Parking	;wreg free
  3181                           
  3182                           ;RemoteCan.c: 424: parking_message_ID++;
  3183  011B48  0100               	movlb	0	; () banked
  3184  011B4A  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;RemoteCan.c: 425: }
  3188                           ;RemoteCan.c: 426: } else {
  3189  011B4C  D43D               	goto	l9786
  3190  011B4E                     l10002:
  3191                           
  3192                           ;RemoteCan.c: 427: LCD_Handler();
  3193  011B4E  ECEB  F0A4         	call	_LCD_Handler	;wreg free
  3194                           
  3195                           ;RemoteCan.c: 428: }
  3196                           ;RemoteCan.c: 429: }
  3197                           ;RemoteCan.c: 430: } else {
  3198  011B52  D43A               	goto	l9786
  3199  011B54                     l10004:
  3200                           
  3201                           ;RemoteCan.c: 431: if (parking_message_ID == 6) {
  3202  011B54  0E06               	movlw	6
  3203  011B56  0100               	movlb	0	; () banked
  3204  011B58  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3205  011B5A  A4D8               	btfss	status,2,c
  3206  011B5C  D435               	goto	l9786
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;RemoteCan.c: 432: if (parking_error == 1) {
  3210  011B5E  A44C               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3211  011B60  D023               	goto	l10018
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;RemoteCan.c: 433: parking_error = 0;
  3215  011B62  944C               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;RemoteCan.c: 434: LCD_Error();
  3219  011B64  EC53  F0B0         	call	_LCD_Error	;wreg free
  3220  011B68                     l10012:
  3221  011B68  EC88  F0B2         	call	_CANisTxReady	;wreg free
  3222  011B6C  06E8               	decf	wreg,f,c
  3223  011B6E  A4D8               	btfss	status,2,c
  3224  011B70  D7FB               	goto	l10012
  3225                           
  3226                           ;RemoteCan.c: 436: data_brake [0] = 0b00000000;
  3227  011B72  0E00               	movlw	0
  3228  011B74  0101               	movlb	1	; () banked
  3229  011B76  6F2D               	movwf	_data_brake& (0+255),b
  3230                           
  3231                           ; BSR set to: 1
  3232                           ;RemoteCan.c: 437: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3233  011B78  0E06               	movlw	6
  3234  011B7A  0100               	movlb	0	; () banked
  3235  011B7C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  3236  011B7E  0E00               	movlw	0
  3237  011B80  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3238  011B82  0E00               	movlw	0
  3239  011B84  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3240  011B86  0E00               	movlw	0
  3241  011B88  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3242  011B8A  0E2D               	movlw	low _data_brake
  3243  011B8C  0100               	movlb	0	; () banked
  3244  011B8E  6F75               	movwf	CANsendMessage@data& (0+255),b
  3245  011B90  0E01               	movlw	high _data_brake
  3246  011B92  0100               	movlb	0	; () banked
  3247  011B94  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  3248  011B96  0E08               	movlw	8
  3249  011B98  0100               	movlb	0	; () banked
  3250  011B9A  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  3251  011B9C  0EBC               	movlw	188
  3252  011B9E  0100               	movlb	0	; () banked
  3253  011BA0  6F78               	movwf	CANsendMessage@flags& (0+255),b
  3254  011BA2  ECDB  F08D         	call	_CANsendMessage	;wreg free
  3255                           
  3256                           ;RemoteCan.c: 438: } else {
  3257  011BA6  D002               	goto	l10020
  3258  011BA8                     l10018:
  3259                           
  3260                           ;RemoteCan.c: 439: LCD_End();
  3261  011BA8  EC85  F0B0         	call	_LCD_End	;wreg free
  3262  011BAC                     l10020:
  3263                           
  3264                           ;RemoteCan.c: 440: }
  3265                           ;RemoteCan.c: 441: parking_message_ID = 0;
  3266  011BAC  0E00               	movlw	0
  3267  011BAE  0100               	movlb	0	; () banked
  3268  011BB0  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;RemoteCan.c: 442: parking_message_E = 0;
  3272  011BB2  964C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3273                           
  3274                           ; BSR set to: 0
  3275                           
  3276                           ; BSR set to: 0
  3277                           
  3278                           ; BSR set to: 0
  3279  011BB4  D409               	goto	l9786
  3280  011BB6                     __end_of_main:
  3281                           	opt stack 0
  3282                           tblptru	equ	0xFF8
  3283                           tblptrh	equ	0xFF7
  3284                           tblptrl	equ	0xFF6
  3285                           tablat	equ	0xFF5
  3286                           prodh	equ	0xFF4
  3287                           prodl	equ	0xFF3
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           postinc2	equ	0xFDE
  3291                           fsr2h	equ	0xFDA
  3292                           fsr2l	equ	0xFD9
  3293                           status	equ	0xFD8
  3294                           
  3295 ;; *************** function _board_initialization *****************
  3296 ;; Defined at:
  3297 ;;		line 672 in file "RemoteCan.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;		None               void
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    9
  3318 ;; This function calls:
  3319 ;;		_CANInitialize
  3320 ;;		_LCD_clear
  3321 ;;		_LCD_goto_line
  3322 ;;		_LCD_initialize
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text1
  3329  015C1A                     __ptext1:
  3330                           	opt stack 0
  3331  015C1A                     _board_initialization:
  3332                           	opt stack 21
  3333                           
  3334                           ;RemoteCan.c: 674: LATA = 0x00;
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;incstack = 0
  3338  015C1A  0E00               	movlw	0
  3339  015C1C  6E89               	movwf	3977,c	;volatile
  3340                           
  3341                           ;RemoteCan.c: 675: TRISA = 0b00011111;
  3342  015C1E  0E1F               	movlw	31
  3343  015C20  6E92               	movwf	3986,c	;volatile
  3344                           
  3345                           ;RemoteCan.c: 676: LATB = 0x00;
  3346  015C22  0E00               	movlw	0
  3347  015C24  6E8A               	movwf	3978,c	;volatile
  3348                           
  3349                           ;RemoteCan.c: 677: TRISB = 0b11111011;
  3350  015C26  0EFB               	movlw	251
  3351  015C28  6E93               	movwf	3987,c	;volatile
  3352                           
  3353                           ;RemoteCan.c: 678: LATC = 0x00;
  3354  015C2A  0E00               	movlw	0
  3355  015C2C  6E8B               	movwf	3979,c	;volatile
  3356                           
  3357                           ;RemoteCan.c: 679: TRISC = 0b11110000;
  3358  015C2E  0EF0               	movlw	240
  3359  015C30  6E94               	movwf	3988,c	;volatile
  3360                           
  3361                           ;RemoteCan.c: 680: LATD = 0x00;
  3362  015C32  0E00               	movlw	0
  3363  015C34  6E8C               	movwf	3980,c	;volatile
  3364                           
  3365                           ;RemoteCan.c: 681: TRISD = 0x00;
  3366  015C36  0E00               	movlw	0
  3367  015C38  6E95               	movwf	3989,c	;volatile
  3368                           
  3369                           ;RemoteCan.c: 682: LATE = 0x00;
  3370  015C3A  0E00               	movlw	0
  3371  015C3C  6E8D               	movwf	3981,c	;volatile
  3372                           
  3373                           ;RemoteCan.c: 683: TRISE = 0x00;
  3374  015C3E  0E00               	movlw	0
  3375  015C40  6E96               	movwf	3990,c	;volatile
  3376                           
  3377                           ;RemoteCan.c: 685: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3378  015C42  0E06               	movlw	6
  3379  015C44  0100               	movlb	0	; () banked
  3380  015C46  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3381  015C48  0E05               	movlw	5
  3382  015C4A  0100               	movlb	0	; () banked
  3383  015C4C  6F80               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3384  015C4E  0E01               	movlw	1
  3385  015C50  0100               	movlb	0	; () banked
  3386  015C52  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3387  015C54  0E03               	movlw	3
  3388  015C56  0100               	movlb	0	; () banked
  3389  015C58  6F82               	movwf	CANInitialize@BRP& (0+255),b
  3390  015C5A  0E9D               	movlw	157
  3391  015C5C  0100               	movlb	0	; () banked
  3392  015C5E  6F83               	movwf	CANInitialize@flags& (0+255),b
  3393  015C60  0E04               	movlw	4
  3394  015C62  ECC3  F0A6         	call	_CANInitialize
  3395                           
  3396                           ;RemoteCan.c: 689: PIR2bits.TMR3IF = 0;
  3397  015C66  92A1               	bcf	4001,1,c	;volatile
  3398                           
  3399                           ;RemoteCan.c: 690: PIR3bits.RXB1IF = 0;
  3400  015C68  92A4               	bcf	4004,1,c	;volatile
  3401                           
  3402                           ;RemoteCan.c: 691: PIR3bits.RXB0IF = 0;
  3403  015C6A  90A4               	bcf	4004,0,c	;volatile
  3404                           
  3405                           ;RemoteCan.c: 694: RCONbits.IPEN = 1;
  3406  015C6C  8ED0               	bsf	4048,7,c	;volatile
  3407                           
  3408                           ;RemoteCan.c: 695: IPR3bits.RXB1IP = 1;
  3409  015C6E  82A5               	bsf	4005,1,c	;volatile
  3410                           
  3411                           ;RemoteCan.c: 696: IPR3bits.RXB0IP = 1;
  3412  015C70  80A5               	bsf	4005,0,c	;volatile
  3413                           
  3414                           ;RemoteCan.c: 697: IPR2bits.TMR3IP = 0;
  3415  015C72  92A2               	bcf	4002,1,c	;volatile
  3416                           
  3417                           ;RemoteCan.c: 700: ADCON1 = 0b00001101;
  3418  015C74  0E0D               	movlw	13
  3419  015C76  6EC1               	movwf	4033,c	;volatile
  3420                           
  3421                           ;RemoteCan.c: 701: ADCON0bits.CHS2 = 0;
  3422  015C78  98C2               	bcf	4034,4,c	;volatile
  3423                           
  3424                           ;RemoteCan.c: 702: ADCON0bits.CHS1 = 0;
  3425  015C7A  96C2               	bcf	4034,3,c	;volatile
  3426                           
  3427                           ;RemoteCan.c: 703: ADCON0bits.CHS0 = 0;
  3428  015C7C  94C2               	bcf	4034,2,c	;volatile
  3429                           
  3430                           ;RemoteCan.c: 704: ADCON2bits.ACQT2 = 1;
  3431  015C7E  8AC0               	bsf	4032,5,c	;volatile
  3432                           
  3433                           ;RemoteCan.c: 705: ADCON2bits.ACQT1 = 1;
  3434  015C80  88C0               	bsf	4032,4,c	;volatile
  3435                           
  3436                           ;RemoteCan.c: 706: ADCON2bits.ACQT0 = 0;
  3437  015C82  96C0               	bcf	4032,3,c	;volatile
  3438                           
  3439                           ;RemoteCan.c: 707: ADCON2bits.ADCS2 = 1;
  3440  015C84  84C0               	bsf	4032,2,c	;volatile
  3441                           
  3442                           ;RemoteCan.c: 708: ADCON2bits.ADCS1 = 0;
  3443  015C86  92C0               	bcf	4032,1,c	;volatile
  3444                           
  3445                           ;RemoteCan.c: 709: ADCON2bits.ADCS0 = 1;
  3446  015C88  80C0               	bsf	4032,0,c	;volatile
  3447                           
  3448                           ;RemoteCan.c: 710: ADCON2bits.ADFM = 0;
  3449  015C8A  9EC0               	bcf	4032,7,c	;volatile
  3450                           
  3451                           ;RemoteCan.c: 711: ADCON0bits.ADON = 1;
  3452  015C8C  80C2               	bsf	4034,0,c	;volatile
  3453                           
  3454                           ;RemoteCan.c: 714: LCD_initialize(16);
  3455  015C8E  0E10               	movlw	16
  3456  015C90  ECE1  F0AA         	call	_LCD_initialize
  3457                           
  3458                           ;RemoteCan.c: 716: LCD_clear();
  3459  015C94  EC47  F0B2         	call	_LCD_clear	;wreg free
  3460                           
  3461                           ;RemoteCan.c: 717: LCD_goto_line(1);
  3462  015C98  0E01               	movlw	1
  3463  015C9A  EC1E  F0AC         	call	_LCD_goto_line
  3464                           
  3465                           ;RemoteCan.c: 721: PORTDbits.RD2 = 0;
  3466  015C9E  9483               	bcf	3971,2,c	;volatile
  3467                           
  3468                           ;RemoteCan.c: 722: PORTDbits.RD3 = 0;
  3469  015CA0  9683               	bcf	3971,3,c	;volatile
  3470                           
  3471                           ;RemoteCan.c: 725: TMR3H = 0x63;
  3472  015CA2  0E63               	movlw	99
  3473  015CA4  6EB3               	movwf	4019,c	;volatile
  3474                           
  3475                           ;RemoteCan.c: 726: TMR3L = 0xC0;
  3476  015CA6  0EC0               	movlw	192
  3477  015CA8  6EB2               	movwf	4018,c	;volatile
  3478                           
  3479                           ;RemoteCan.c: 729: PIE3bits.RXB1IE = 1;
  3480  015CAA  82A3               	bsf	4003,1,c	;volatile
  3481                           
  3482                           ;RemoteCan.c: 730: PIE3bits.RXB0IE = 1;
  3483  015CAC  80A3               	bsf	4003,0,c	;volatile
  3484                           
  3485                           ;RemoteCan.c: 731: PIE2bits.TMR3IE = 1;
  3486  015CAE  82A0               	bsf	4000,1,c	;volatile
  3487                           
  3488                           ;RemoteCan.c: 734: T3CON = 0x01;
  3489  015CB0  0E01               	movlw	1
  3490  015CB2  6EB1               	movwf	4017,c	;volatile
  3491                           
  3492                           ;RemoteCan.c: 735: LCD_clear();
  3493  015CB4  EC47  F0B2         	call	_LCD_clear	;wreg free
  3494                           
  3495                           ;RemoteCan.c: 736: INTCONbits.GIEH = 1;
  3496  015CB8  8EF2               	bsf	intcon,7,c	;volatile
  3497                           
  3498                           ;RemoteCan.c: 737: INTCONbits.GIEL = 1;
  3499  015CBA  8CF2               	bsf	intcon,6,c	;volatile
  3500  015CBC  0012               	return		;funcret
  3501  015CBE                     __end_of_board_initialization:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           intcon	equ	0xFF2
  3510                           postinc0	equ	0xFEE
  3511                           wreg	equ	0xFE8
  3512                           postinc2	equ	0xFDE
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _CANInitialize *****************
  3518 ;; Defined at:
  3519 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  propSeg         1    wreg     unsigned char 
  3522 ;;  phaseSeg1       1   31[BANK0 ] unsigned char 
  3523 ;;  phaseSeg2       1   32[BANK0 ] unsigned char 
  3524 ;;  SJW             1   33[BANK0 ] unsigned char 
  3525 ;;  BRP             1   34[BANK0 ] unsigned char 
  3526 ;;  flags           1   35[BANK0 ] enum E16887
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  propSeg         1   40[BANK0 ] unsigned char 
  3529 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3530 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3540 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;Total ram usage:       12 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    4
  3547 ;; This function calls:
  3548 ;;		_CANOperationMode
  3549 ;;		_CANSetFilter
  3550 ;;		_CANSetMask
  3551 ;; This function is called by:
  3552 ;;		_board_initialization
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text2
  3557  014D86                     __ptext2:
  3558                           	opt stack 0
  3559  014D86                     _CANInitialize:
  3560                           	opt stack 25
  3561                           
  3562                           ;incstack = 0
  3563                           ;CANInitialize@propSeg stored from wreg
  3564  014D86  0100               	movlb	0	; () banked
  3565  014D88  6F88               	movwf	CANInitialize@propSeg& (0+255),b
  3566                           
  3567                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3568                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3569                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3570  014D8A  0E80               	movlw	128
  3571  014D8C  ECF2  F0B2         	call	_CANOperationMode
  3572                           
  3573                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3574  014D90  0E00               	movlw	0
  3575  014D92  6E70               	movwf	3952,c	;volatile
  3576                           
  3577                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3578  014D94  0E00               	movlw	0
  3579  014D96  6E71               	movwf	3953,c	;volatile
  3580                           
  3581                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3582  014D98  0E00               	movlw	0
  3583  014D9A  6E72               	movwf	3954,c	;volatile
  3584                           
  3585                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3586  014D9C  0100               	movlb	0	; () banked
  3587  014D9E  4181               	rrncf	CANInitialize@SJW& (0+255),w,b
  3588  014DA0  42E8               	rrncf	wreg,f,c
  3589  014DA2  0BC0               	andlw	192
  3590  014DA4  0100               	movlb	0	; () banked
  3591  014DA6  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3595  014DA8  0100               	movlb	0	; () banked
  3596  014DAA  5181               	movf	CANInitialize@SJW& (0+255),w,b
  3597  014DAC  1270               	iorwf	3952,f,c	;volatile
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3601  014DAE  0100               	movlb	0	; () banked
  3602  014DB0  5182               	movf	CANInitialize@BRP& (0+255),w,b
  3603  014DB2  1270               	iorwf	3952,f,c	;volatile
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3607  014DB4  0100               	movlb	0	; () banked
  3608  014DB6  5188               	movf	CANInitialize@propSeg& (0+255),w,b
  3609  014DB8  1271               	iorwf	3953,f,c	;volatile
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3613  014DBA  0100               	movlb	0	; () banked
  3614  014DBC  397F               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3615  014DBE  42E8               	rrncf	wreg,f,c
  3616  014DC0  0BF8               	andlw	248
  3617  014DC2  0100               	movlb	0	; () banked
  3618  014DC4  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3622  014DC6  0100               	movlb	0	; () banked
  3623  014DC8  517F               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3624  014DCA  1271               	iorwf	3953,f,c	;volatile
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3628  014DCC  0100               	movlb	0	; () banked
  3629  014DCE  A583               	btfss	CANInitialize@flags& (0+255),2,b
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3633  014DD0  8C71               	bsf	3953,6,c	;volatile
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3637  014DD2  0100               	movlb	0	; () banked
  3638  014DD4  B183               	btfsc	CANInitialize@flags& (0+255),0,b
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3642  014DD6  8E71               	bsf	3953,7,c	;volatile
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3646                           
  3647                           ; BSR set to: 0
  3648  014DD8  0100               	movlb	0	; () banked
  3649  014DDA  5180               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3650  014DDC  1272               	iorwf	3954,f,c	;volatile
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3654  014DDE  0100               	movlb	0	; () banked
  3655  014DE0  B383               	btfsc	CANInitialize@flags& (0+255),1,b
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3659  014DE2  8C72               	bsf	3954,6,c	;volatile
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3663                           
  3664                           ; BSR set to: 0
  3665  014DE4  0100               	movlb	0	; () banked
  3666  014DE6  5183               	movf	CANInitialize@flags& (0+255),w,b
  3667  014DE8  0B60               	andlw	96
  3668  014DEA  6E60               	movwf	3936,c	;volatile
  3669                           
  3670                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3671  014DEC  0100               	movlb	0	; () banked
  3672  014DEE  5183               	movf	CANInitialize@flags& (0+255),w,b
  3673  014DF0  0B10               	andlw	16
  3674  014DF2  0AFF               	xorlw	255
  3675  014DF4  B4D8               	btfsc	status,2,c
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3679  014DF6  8460               	bsf	3936,2,c	;volatile
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3683  014DF8  CF60 FF50          	movff	3936,3920	;volatile
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3687  014DFC  0E00               	movlw	0
  3688  014DFE  0100               	movlb	0	; () banked
  3689  014E00  6F71               	movwf	CANSetMask@mask& (0+255),b
  3690  014E02  0E00               	movlw	0
  3691  014E04  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3692  014E06  0E00               	movlw	0
  3693  014E08  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3694  014E0A  0E00               	movlw	0
  3695  014E0C  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3696  014E0E  0EF7               	movlw	247
  3697  014E10  0100               	movlb	0	; () banked
  3698  014E12  6F75               	movwf	CANSetMask@type& (0+255),b
  3699  014E14  0E01               	movlw	1
  3700  014E16  EC83  F0A0         	call	_CANSetMask
  3701                           
  3702                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3703  014E1A  0E00               	movlw	0
  3704  014E1C  0100               	movlb	0	; () banked
  3705  014E1E  6F71               	movwf	CANSetMask@mask& (0+255),b
  3706  014E20  0E00               	movlw	0
  3707  014E22  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3708  014E24  0E00               	movlw	0
  3709  014E26  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3710  014E28  0E00               	movlw	0
  3711  014E2A  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3712  014E2C  0EF7               	movlw	247
  3713  014E2E  0100               	movlb	0	; () banked
  3714  014E30  6F75               	movwf	CANSetMask@type& (0+255),b
  3715  014E32  0E02               	movlw	2
  3716  014E34  EC83  F0A0         	call	_CANSetMask
  3717                           
  3718                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3719  014E38  D00F               	goto	l6244
  3720  014E3A                     l6238:
  3721                           
  3722                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3723  014E3A  0EF7               	movlw	247
  3724  014E3C  0100               	movlb	0	; () banked
  3725  014E3E  6F89               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3726  014E40  D007               	goto	l6240
  3727  014E42                     l380:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3731  014E42  0100               	movlb	0	; () banked
  3732  014E44  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3733                           
  3734                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3735  014E46  0100               	movlb	0	; () banked
  3736  014E48  698A               	setf	CANInitialize@FilterConfig2& (0+255),b
  3737                           
  3738                           ;inc\CANlib.h: 273: break;
  3739  014E4A  D028               	goto	l6246
  3740  014E4C                     l381:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3744  014E4C  0100               	movlb	0	; () banked
  3745  014E4E  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3746  014E50                     l6240:
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3750  014E50  0EF7               	movlw	247
  3751  014E52  0100               	movlb	0	; () banked
  3752  014E54  6F8A               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;inc\CANlib.h: 278: }
  3756                           
  3757                           ;inc\CANlib.h: 277: break;
  3758  014E56  D022               	goto	l6246
  3759  014E58                     l6244:
  3760  014E58  0E9F               	movlw	159
  3761  014E5A  0100               	movlb	0	; () banked
  3762  014E5C  6F84               	movwf	??_CANInitialize& (0+255),b
  3763  014E5E  0EFF               	movlw	255
  3764  014E60  0100               	movlb	0	; () banked
  3765  014E62  6F85               	movwf	(??_CANInitialize+1)& (0+255),b
  3766  014E64  0100               	movlb	0	; () banked
  3767  014E66  5183               	movf	CANInitialize@flags& (0+255),w,b
  3768  014E68  0B60               	andlw	96
  3769  014E6A  0100               	movlb	0	; () banked
  3770  014E6C  6F86               	movwf	(??_CANInitialize+2)& (0+255),b
  3771  014E6E  6B87               	clrf	(??_CANInitialize+3)& (0+255),b
  3772  014E70  0100               	movlb	0	; () banked
  3773  014E72  5184               	movf	??_CANInitialize& (0+255),w,b
  3774  014E74  0100               	movlb	0	; () banked
  3775  014E76  1386               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3776  014E78  0100               	movlb	0	; () banked
  3777  014E7A  5185               	movf	(??_CANInitialize+1)& (0+255),w,b
  3778  014E7C  0100               	movlb	0	; () banked
  3779  014E7E  1387               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3780                           
  3781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3782                           ; Switch size 1, requested type "space"
  3783                           ; Number of cases is 1, Range of values is 0 to 0
  3784                           ; switch strategies available:
  3785                           ; Name         Instructions Cycles
  3786                           ; simple_byte            4     3 (average)
  3787                           ;	Chosen strategy is simple_byte
  3788  014E80  0100               	movlb	0	; () banked
  3789  014E82  5187               	movf	(??_CANInitialize+3)& (0+255),w,b
  3790  014E84  0A00               	xorlw	0	; case 0
  3791  014E86  A4D8               	btfss	status,2,c
  3792  014E88  D7E1               	goto	l381
  3793                           
  3794                           ; BSR set to: 0
  3795                           ; Switch size 1, requested type "space"
  3796                           ; Number of cases is 2, Range of values is 191 to 223
  3797                           ; switch strategies available:
  3798                           ; Name         Instructions Cycles
  3799                           ; simple_byte            7     4 (average)
  3800                           ;	Chosen strategy is simple_byte
  3801  014E8A  0100               	movlb	0	; () banked
  3802  014E8C  5186               	movf	(??_CANInitialize+2)& (0+255),w,b
  3803  014E8E  0ABF               	xorlw	191	; case 191
  3804  014E90  B4D8               	btfsc	status,2,c
  3805  014E92  D7D7               	goto	l380
  3806  014E94  0A60               	xorlw	96	; case 223
  3807  014E96  B4D8               	btfsc	status,2,c
  3808  014E98  D7D0               	goto	l6238
  3809  014E9A  D7D8               	goto	l381
  3810  014E9C                     l6246:
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3814  014E9C  0E00               	movlw	0
  3815  014E9E  0100               	movlb	0	; () banked
  3816  014EA0  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3817  014EA2  0E00               	movlw	0
  3818  014EA4  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3819  014EA6  0E00               	movlw	0
  3820  014EA8  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3821  014EAA  0E00               	movlw	0
  3822  014EAC  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3823  014EAE  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3824  014EB2  0E00               	movlw	0
  3825  014EB4  EC00  F080         	call	_CANSetFilter
  3826                           
  3827                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3828  014EB8  0E00               	movlw	0
  3829  014EBA  0100               	movlb	0	; () banked
  3830  014EBC  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3831  014EBE  0E00               	movlw	0
  3832  014EC0  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3833  014EC2  0E00               	movlw	0
  3834  014EC4  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3835  014EC6  0E00               	movlw	0
  3836  014EC8  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3837  014ECA  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3838  014ECE  0E01               	movlw	1
  3839  014ED0  EC00  F080         	call	_CANSetFilter
  3840                           
  3841                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3842  014ED4  0E00               	movlw	0
  3843  014ED6  0100               	movlb	0	; () banked
  3844  014ED8  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3845  014EDA  0E00               	movlw	0
  3846  014EDC  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3847  014EDE  0E00               	movlw	0
  3848  014EE0  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3849  014EE2  0E00               	movlw	0
  3850  014EE4  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3851  014EE6  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3852  014EEA  0E02               	movlw	2
  3853  014EEC  EC00  F080         	call	_CANSetFilter
  3854                           
  3855                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3856  014EF0  0E00               	movlw	0
  3857  014EF2  0100               	movlb	0	; () banked
  3858  014EF4  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3859  014EF6  0E00               	movlw	0
  3860  014EF8  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3861  014EFA  0E00               	movlw	0
  3862  014EFC  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3863  014EFE  0E00               	movlw	0
  3864  014F00  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3865  014F02  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3866  014F06  0E03               	movlw	3
  3867  014F08  EC00  F080         	call	_CANSetFilter
  3868                           
  3869                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3870  014F0C  0E00               	movlw	0
  3871  014F0E  0100               	movlb	0	; () banked
  3872  014F10  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3873  014F12  0E00               	movlw	0
  3874  014F14  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3875  014F16  0E00               	movlw	0
  3876  014F18  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3877  014F1A  0E00               	movlw	0
  3878  014F1C  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3879  014F1E  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3880  014F22  0E04               	movlw	4
  3881  014F24  EC00  F080         	call	_CANSetFilter
  3882                           
  3883                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3884  014F28  0E00               	movlw	0
  3885  014F2A  0100               	movlb	0	; () banked
  3886  014F2C  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3887  014F2E  0E00               	movlw	0
  3888  014F30  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3889  014F32  0E00               	movlw	0
  3890  014F34  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3891  014F36  0E00               	movlw	0
  3892  014F38  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3893  014F3A  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3894  014F3E  0E05               	movlw	5
  3895  014F40  EC00  F080         	call	_CANSetFilter
  3896                           
  3897                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3898  014F44  0E00               	movlw	0
  3899  014F46  ECF2  F0B2         	call	_CANOperationMode
  3900  014F4A  0012               	return		;funcret
  3901  014F4C                     __end_of_CANInitialize:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           intcon	equ	0xFF2
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           postinc2	equ	0xFDE
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _CANSetMask *****************
  3918 ;; Defined at:
  3919 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  numBuffer       1    wreg     enum E16921
  3922 ;;  mask            4   17[BANK0 ] unsigned long 
  3923 ;;  type            1   21[BANK0 ] enum E16887
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  numBuffer       1   26[BANK0 ] enum E16921
  3926 ;;  tamp            4   27[BANK0 ] unsigned long 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3936 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;Total ram usage:       14 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    3
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_CANInitialize
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text3
  3951  014106                     __ptext3:
  3952                           	opt stack 0
  3953  014106                     _CANSetMask:
  3954                           	opt stack 25
  3955                           
  3956                           ;incstack = 0
  3957                           ;CANSetMask@numBuffer stored from wreg
  3958  014106  0100               	movlb	0	; () banked
  3959  014108  6F7A               	movwf	CANSetMask@numBuffer& (0+255),b
  3960                           
  3961                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3962  01410A  0100               	movlb	0	; () banked
  3963  01410C  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  3964  01410E  A4D8               	btfss	status,2,c
  3965  014110  D056               	goto	l5414
  3966                           
  3967                           ; BSR set to: 0
  3968  014112  0100               	movlb	0	; () banked
  3969  014114  2975               	incf	CANSetMask@type& (0+255),w,b
  3970  014116  A4D8               	btfss	status,2,c
  3971  014118  D052               	goto	l5414
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;inc\CANlib.h: 644: {
  3975                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3976  01411A  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3977  01411E  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3978  014122  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3979  014126  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3980  01412A  0E04               	movlw	4
  3981  01412C  D006               	goto	u6070
  3982  01412E                     u6075:
  3983  01412E  0100               	movlb	0	; () banked
  3984  014130  90D8               	bcf	status,0,c
  3985  014132  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3986  014134  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3987  014136  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3988  014138  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3989  01413A                     u6070:
  3990  01413A  2EE8               	decfsz	wreg,f,c
  3991  01413C  D7F8               	goto	u6075
  3992  01413E  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3993  014142  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3994  014146  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3995  01414A  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3999  01414E  0100               	movlb	0	; () banked
  4000  014150  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4001  014152  0100               	movlb	0	; () banked
  4002  014154  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4003  014156  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4004  014158  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4005  01415A  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4009  01415C  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4013  014160  0E07               	movlw	7
  4014  014162  0100               	movlb	0	; () banked
  4015  014164  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4016  014166  0100               	movlb	0	; () banked
  4017  014168  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4018  01416A  0E00               	movlw	0
  4019  01416C  0100               	movlb	0	; () banked
  4020  01416E  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4021  014170  0100               	movlb	0	; () banked
  4022  014172  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4023  014174  0E00               	movlw	0
  4024  014176  0100               	movlb	0	; () banked
  4025  014178  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4026  01417A  0100               	movlb	0	; () banked
  4027  01417C  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4028  01417E  0E00               	movlw	0
  4029  014180  0100               	movlb	0	; () banked
  4030  014182  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4031  014184  0100               	movlb	0	; () banked
  4032  014186  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4036  014188  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4037  01418C  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4038  014190  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4039  014194  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4040  014198  0E05               	movlw	5
  4041  01419A                     u6085:
  4042  01419A  90D8               	bcf	status,0,c
  4043  01419C  0100               	movlb	0	; () banked
  4044  01419E  3776               	rlcf	??_CANSetMask& (0+255),f,b
  4045  0141A0  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4046  0141A2  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4047  0141A4  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4048  0141A6  2EE8               	decfsz	wreg,f,c
  4049  0141A8  D7F8               	goto	u6085
  4050  0141AA  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4051  0141AE  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4052  0141B2  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4053  0141B6  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4057  0141BA  C07B  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4058  0141BE                     l5414:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;inc\CANlib.h: 652: }
  4062                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4063  0141BE  0E02               	movlw	2
  4064  0141C0  0100               	movlb	0	; () banked
  4065  0141C2  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4066  0141C4  A4D8               	btfss	status,2,c
  4067  0141C6  D056               	goto	l5430
  4068                           
  4069                           ; BSR set to: 0
  4070  0141C8  0100               	movlb	0	; () banked
  4071  0141CA  2975               	incf	CANSetMask@type& (0+255),w,b
  4072  0141CC  A4D8               	btfss	status,2,c
  4073  0141CE  D052               	goto	l5430
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;inc\CANlib.h: 655: {
  4077                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4078  0141D0  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4079  0141D4  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4080  0141D8  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4081  0141DC  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4082  0141E0  0E04               	movlw	4
  4083  0141E2  D006               	goto	u6110
  4084  0141E4                     u6115:
  4085  0141E4  0100               	movlb	0	; () banked
  4086  0141E6  90D8               	bcf	status,0,c
  4087  0141E8  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4088  0141EA  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4089  0141EC  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4090  0141EE  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4091  0141F0                     u6110:
  4092  0141F0  2EE8               	decfsz	wreg,f,c
  4093  0141F2  D7F8               	goto	u6115
  4094  0141F4  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4095  0141F8  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4096  0141FC  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4097  014200  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4101  014204  0100               	movlb	0	; () banked
  4102  014206  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4103  014208  0100               	movlb	0	; () banked
  4104  01420A  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4105  01420C  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4106  01420E  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4107  014210  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4111  014212  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4115  014216  0E07               	movlw	7
  4116  014218  0100               	movlb	0	; () banked
  4117  01421A  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4118  01421C  0100               	movlb	0	; () banked
  4119  01421E  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4120  014220  0E00               	movlw	0
  4121  014222  0100               	movlb	0	; () banked
  4122  014224  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4123  014226  0100               	movlb	0	; () banked
  4124  014228  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4125  01422A  0E00               	movlw	0
  4126  01422C  0100               	movlb	0	; () banked
  4127  01422E  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4128  014230  0100               	movlb	0	; () banked
  4129  014232  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4130  014234  0E00               	movlw	0
  4131  014236  0100               	movlb	0	; () banked
  4132  014238  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4133  01423A  0100               	movlb	0	; () banked
  4134  01423C  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4138  01423E  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4139  014242  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4140  014246  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4141  01424A  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4142  01424E  0E05               	movlw	5
  4143  014250                     u6125:
  4144  014250  90D8               	bcf	status,0,c
  4145  014252  0100               	movlb	0	; () banked
  4146  014254  3776               	rlcf	??_CANSetMask& (0+255),f,b
  4147  014256  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4148  014258  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4149  01425A  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4150  01425C  2EE8               	decfsz	wreg,f,c
  4151  01425E  D7F8               	goto	u6125
  4152  014260  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4153  014264  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4154  014268  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4155  01426C  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4159  014270  C07B  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4160  014274                     l5430:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 663: }
  4164                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4165  014274  0100               	movlb	0	; () banked
  4166  014276  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  4167  014278  A4D8               	btfss	status,2,c
  4168  01427A  D087               	goto	l5462
  4169                           
  4170                           ; BSR set to: 0
  4171  01427C  0EF7               	movlw	247
  4172  01427E  0100               	movlb	0	; () banked
  4173  014280  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4174  014282  A4D8               	btfss	status,2,c
  4175  014284  D082               	goto	l5462
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 666: {
  4179                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4180  014286  0100               	movlb	0	; () banked
  4181  014288  5171               	movf	CANSetMask@mask& (0+255),w,b
  4182  01428A  0100               	movlb	0	; () banked
  4183  01428C  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4184  01428E  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4185  014290  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4186  014292  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4190  014294  C07B  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4194  014298  0E00               	movlw	0
  4195  01429A  0100               	movlb	0	; () banked
  4196  01429C  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4197  01429E  0100               	movlb	0	; () banked
  4198  0142A0  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4199  0142A2  0EFF               	movlw	255
  4200  0142A4  0100               	movlb	0	; () banked
  4201  0142A6  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4202  0142A8  0100               	movlb	0	; () banked
  4203  0142AA  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4204  0142AC  0E00               	movlw	0
  4205  0142AE  0100               	movlb	0	; () banked
  4206  0142B0  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4207  0142B2  0100               	movlb	0	; () banked
  4208  0142B4  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4209  0142B6  0E00               	movlw	0
  4210  0142B8  0100               	movlb	0	; () banked
  4211  0142BA  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4212  0142BC  0100               	movlb	0	; () banked
  4213  0142BE  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4217  0142C0  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4218  0142C4  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4219  0142C8  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4220  0142CC  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4221  0142D0  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4222  0142D4  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4223  0142D8  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4224  0142DC  0100               	movlb	0	; () banked
  4225  0142DE  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4226  0142E0  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4227  0142E4  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4228  0142E8  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4229  0142EC  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4233  0142F0  C07B  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4237  0142F4  0100               	movlb	0	; () banked
  4238  0142F6  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4239  0142F8  D003               	goto	l454
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4243  0142FA  010F               	movlb	15	; () banked
  4244  0142FC  8119               	bsf	25,0,b	;volatile
  4245  0142FE  D002               	goto	l455
  4246  014300                     l454:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;inc\CANlib.h: 676: else
  4250                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4251  014300  010F               	movlb	15	; () banked
  4252  014302  9119               	bcf	25,0,b	;volatile
  4253  014304                     l455:
  4254                           
  4255                           ; BSR set to: 15
  4256                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4257  014304  0100               	movlb	0	; () banked
  4258  014306  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4259  014308  D003               	goto	l456
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4263  01430A  010F               	movlb	15	; () banked
  4264  01430C  8319               	bsf	25,1,b	;volatile
  4265  01430E  D002               	goto	l457
  4266  014310                     l456:
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 681: else
  4270                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4271  014310  010F               	movlb	15	; () banked
  4272  014312  9319               	bcf	25,1,b	;volatile
  4273  014314                     l457:
  4274                           
  4275                           ; BSR set to: 15
  4276                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4277  014314  0100               	movlb	0	; () banked
  4278  014316  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4279  014318  D003               	goto	l458
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4283  01431A  010F               	movlb	15	; () banked
  4284  01431C  8B19               	bsf	25,5,b	;volatile
  4285  01431E  D002               	goto	l459
  4286  014320                     l458:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 686: else
  4290                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4291  014320  010F               	movlb	15	; () banked
  4292  014322  9B19               	bcf	25,5,b	;volatile
  4293  014324                     l459:
  4294                           
  4295                           ; BSR set to: 15
  4296                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4297  014324  0100               	movlb	0	; () banked
  4298  014326  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4299  014328  D003               	goto	l460
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4303  01432A  010F               	movlb	15	; () banked
  4304  01432C  8D19               	bsf	25,6,b	;volatile
  4305  01432E  D002               	goto	l461
  4306  014330                     l460:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;inc\CANlib.h: 691: else
  4310                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4311  014330  010F               	movlb	15	; () banked
  4312  014332  9D19               	bcf	25,6,b	;volatile
  4313  014334                     l461:
  4314                           
  4315                           ; BSR set to: 15
  4316                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4317  014334  0100               	movlb	0	; () banked
  4318  014336  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4319  014338  D003               	goto	l462
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4323  01433A  010F               	movlb	15	; () banked
  4324  01433C  8F19               	bsf	25,7,b	;volatile
  4325  01433E  D002               	goto	l5456
  4326  014340                     l462:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 696: else
  4330                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4331  014340  010F               	movlb	15	; () banked
  4332  014342  9F19               	bcf	25,7,b	;volatile
  4333  014344                     l5456:
  4334                           
  4335                           ; BSR set to: 15
  4336                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4337  014344  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4338  014348  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4339  01434C  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4340  014350  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4341  014354  0E16               	movlw	22
  4342  014356  D006               	goto	u6200
  4343  014358                     u6205:
  4344  014358  0100               	movlb	0	; () banked
  4345  01435A  90D8               	bcf	status,0,c
  4346  01435C  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4347  01435E  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4348  014360  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4349  014362  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4350  014364                     u6200:
  4351  014364  2EE8               	decfsz	wreg,f,c
  4352  014366  D7F8               	goto	u6205
  4353  014368  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4354  01436C  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4355  014370  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4356  014374  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4360  014378  0100               	movlb	0	; () banked
  4361  01437A  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4362  01437C  0100               	movlb	0	; () banked
  4363  01437E  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4364  014380  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4365  014382  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4366  014384  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4370  014386  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4371  01438A                     l5462:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;inc\CANlib.h: 702: }
  4375                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4376  01438A  0E02               	movlw	2
  4377  01438C  0100               	movlb	0	; () banked
  4378  01438E  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4379  014390  A4D8               	btfss	status,2,c
  4380  014392  0012               	return	
  4381                           
  4382                           ; BSR set to: 0
  4383  014394  0EF7               	movlw	247
  4384  014396  0100               	movlb	0	; () banked
  4385  014398  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4386  01439A  A4D8               	btfss	status,2,c
  4387  01439C  0012               	return	
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;inc\CANlib.h: 705: {
  4391                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4392  01439E  0100               	movlb	0	; () banked
  4393  0143A0  5171               	movf	CANSetMask@mask& (0+255),w,b
  4394  0143A2  0100               	movlb	0	; () banked
  4395  0143A4  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4396  0143A6  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4397  0143A8  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4398  0143AA  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4402  0143AC  C07B  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4406  0143B0  0E00               	movlw	0
  4407  0143B2  0100               	movlb	0	; () banked
  4408  0143B4  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4409  0143B6  0100               	movlb	0	; () banked
  4410  0143B8  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4411  0143BA  0EFF               	movlw	255
  4412  0143BC  0100               	movlb	0	; () banked
  4413  0143BE  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4414  0143C0  0100               	movlb	0	; () banked
  4415  0143C2  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4416  0143C4  0E00               	movlw	0
  4417  0143C6  0100               	movlb	0	; () banked
  4418  0143C8  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4419  0143CA  0100               	movlb	0	; () banked
  4420  0143CC  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4421  0143CE  0E00               	movlw	0
  4422  0143D0  0100               	movlb	0	; () banked
  4423  0143D2  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4424  0143D4  0100               	movlb	0	; () banked
  4425  0143D6  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4429  0143D8  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4430  0143DC  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4431  0143E0  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4432  0143E4  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4433  0143E8  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4434  0143EC  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4435  0143F0  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4436  0143F4  0100               	movlb	0	; () banked
  4437  0143F6  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4438  0143F8  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4439  0143FC  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4440  014400  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4441  014404  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4445  014408  C07B  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4449  01440C  0100               	movlb	0	; () banked
  4450  01440E  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4451  014410  D003               	goto	l465
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4455  014412  010F               	movlb	15	; () banked
  4456  014414  811D               	bsf	29,0,b	;volatile
  4457  014416  D002               	goto	l466
  4458  014418                     l465:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;inc\CANlib.h: 715: else
  4462                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4463  014418  010F               	movlb	15	; () banked
  4464  01441A  911D               	bcf	29,0,b	;volatile
  4465  01441C                     l466:
  4466                           
  4467                           ; BSR set to: 15
  4468                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4469  01441C  0100               	movlb	0	; () banked
  4470  01441E  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4471  014420  D003               	goto	l467
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4475  014422  010F               	movlb	15	; () banked
  4476  014424  831D               	bsf	29,1,b	;volatile
  4477  014426  D002               	goto	l468
  4478  014428                     l467:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;inc\CANlib.h: 720: else
  4482                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4483  014428  010F               	movlb	15	; () banked
  4484  01442A  931D               	bcf	29,1,b	;volatile
  4485  01442C                     l468:
  4486                           
  4487                           ; BSR set to: 15
  4488                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4489  01442C  0100               	movlb	0	; () banked
  4490  01442E  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4491  014430  D003               	goto	l469
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4495  014432  010F               	movlb	15	; () banked
  4496  014434  8B1D               	bsf	29,5,b	;volatile
  4497  014436  D002               	goto	l470
  4498  014438                     l469:
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;inc\CANlib.h: 725: else
  4502                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4503  014438  010F               	movlb	15	; () banked
  4504  01443A  9B1D               	bcf	29,5,b	;volatile
  4505  01443C                     l470:
  4506                           
  4507                           ; BSR set to: 15
  4508                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4509  01443C  0100               	movlb	0	; () banked
  4510  01443E  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4511  014440  D003               	goto	l471
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4515  014442  010F               	movlb	15	; () banked
  4516  014444  8D1D               	bsf	29,6,b	;volatile
  4517  014446  D002               	goto	l472
  4518  014448                     l471:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;inc\CANlib.h: 730: else
  4522                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4523  014448  010F               	movlb	15	; () banked
  4524  01444A  9D1D               	bcf	29,6,b	;volatile
  4525  01444C                     l472:
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4529  01444C  0100               	movlb	0	; () banked
  4530  01444E  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4531  014450  D003               	goto	l473
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4535  014452  010F               	movlb	15	; () banked
  4536  014454  8F1D               	bsf	29,7,b	;volatile
  4537  014456  D002               	goto	l5488
  4538  014458                     l473:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;inc\CANlib.h: 735: else
  4542                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4543  014458  010F               	movlb	15	; () banked
  4544  01445A  9F1D               	bcf	29,7,b	;volatile
  4545  01445C                     l5488:
  4546                           
  4547                           ; BSR set to: 15
  4548                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4549  01445C  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4550  014460  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4551  014464  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4552  014468  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4553  01446C  0E16               	movlw	22
  4554  01446E  D006               	goto	u6280
  4555  014470                     u6285:
  4556  014470  0100               	movlb	0	; () banked
  4557  014472  90D8               	bcf	status,0,c
  4558  014474  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4559  014476  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4560  014478  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4561  01447A  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4562  01447C                     u6280:
  4563  01447C  2EE8               	decfsz	wreg,f,c
  4564  01447E  D7F8               	goto	u6285
  4565  014480  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4566  014484  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4567  014488  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4568  01448C  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4572  014490  0100               	movlb	0	; () banked
  4573  014492  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4574  014494  0100               	movlb	0	; () banked
  4575  014496  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4576  014498  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4577  01449A  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4578  01449C  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4582  01449E  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4583  0144A2  0012               	return	
  4584  0144A4                     __end_of_CANSetMask:
  4585                           	opt stack 0
  4586                           tblptru	equ	0xFF8
  4587                           tblptrh	equ	0xFF7
  4588                           tblptrl	equ	0xFF6
  4589                           tablat	equ	0xFF5
  4590                           prodh	equ	0xFF4
  4591                           prodl	equ	0xFF3
  4592                           intcon	equ	0xFF2
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           postinc2	equ	0xFDE
  4596                           fsr2h	equ	0xFDA
  4597                           fsr2l	equ	0xFD9
  4598                           status	equ	0xFD8
  4599                           
  4600 ;; *************** function _CANSetFilter *****************
  4601 ;; Defined at:
  4602 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  numBuffer       1    wreg     enum E16924
  4605 ;;  filter          4   17[BANK0 ] unsigned long 
  4606 ;;  type            1   21[BANK0 ] enum E16887
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  numBuffer       1   26[BANK0 ] enum E16924
  4609 ;;  tamp            4   27[BANK0 ] unsigned long 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;		None               void
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4619 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;Total ram usage:       14 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    3
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_CANInitialize
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text4
  4634  010000                     __ptext4:
  4635                           	opt stack 0
  4636  010000                     _CANSetFilter:
  4637                           	opt stack 25
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;incstack = 0
  4641                           ;CANSetFilter@numBuffer stored from wreg
  4642  010000  0100               	movlb	0	; () banked
  4643  010002  6F7A               	movwf	CANSetFilter@numBuffer& (0+255),b
  4644                           
  4645                           ;inc\CANlib.h: 750: unsigned long tamp;
  4646                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4647  010004  0100               	movlb	0	; () banked
  4648  010006  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4649  010008  0100               	movlb	0	; () banked
  4650  01000A  A4D8               	btfss	status,2,c
  4651  01000C  D058               	goto	l5512
  4652                           
  4653                           ; BSR set to: 0
  4654  01000E  0100               	movlb	0	; () banked
  4655  010010  2975               	incf	CANSetFilter@type& (0+255),w,b
  4656  010012  A4D8               	btfss	status,2,c
  4657  010014  D054               	goto	l5512
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;inc\CANlib.h: 753: {
  4661                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4662  010016  010F               	movlb	15	; () banked
  4663  010018  9701               	bcf	1,3,b	;volatile
  4664                           
  4665                           ; BSR set to: 15
  4666                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4667  01001A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4668  01001E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4669  010022  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4670  010026  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4671  01002A  0E04               	movlw	4
  4672  01002C  D006               	goto	u6310
  4673  01002E                     u6315:
  4674  01002E  0100               	movlb	0	; () banked
  4675  010030  90D8               	bcf	status,0,c
  4676  010032  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4677  010034  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4678  010036  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4679  010038  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4680  01003A                     u6310:
  4681  01003A  2EE8               	decfsz	wreg,f,c
  4682  01003C  D7F8               	goto	u6315
  4683  01003E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4684  010042  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4685  010046  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4686  01004A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4690  01004E  0100               	movlb	0	; () banked
  4691  010050  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4692  010052  0100               	movlb	0	; () banked
  4693  010054  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4694  010056  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4695  010058  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4696  01005A  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4700  01005C  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4704  010060  0E07               	movlw	7
  4705  010062  0100               	movlb	0	; () banked
  4706  010064  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4707  010066  0100               	movlb	0	; () banked
  4708  010068  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4709  01006A  0E00               	movlw	0
  4710  01006C  0100               	movlb	0	; () banked
  4711  01006E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4712  010070  0100               	movlb	0	; () banked
  4713  010072  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4714  010074  0E00               	movlw	0
  4715  010076  0100               	movlb	0	; () banked
  4716  010078  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4717  01007A  0100               	movlb	0	; () banked
  4718  01007C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4719  01007E  0E00               	movlw	0
  4720  010080  0100               	movlb	0	; () banked
  4721  010082  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4722  010084  0100               	movlb	0	; () banked
  4723  010086  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4727  010088  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4728  01008C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4729  010090  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4730  010094  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4731  010098  0E05               	movlw	5
  4732  01009A                     u6325:
  4733  01009A  90D8               	bcf	status,0,c
  4734  01009C  0100               	movlb	0	; () banked
  4735  01009E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4736  0100A0  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4737  0100A2  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4738  0100A4  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4739  0100A6  2EE8               	decfsz	wreg,f,c
  4740  0100A8  D7F8               	goto	u6325
  4741  0100AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4742  0100AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4743  0100B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4744  0100B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4748  0100BA  C07B  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4749  0100BE                     l5512:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;inc\CANlib.h: 763: }
  4753                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4754  0100BE  0100               	movlb	0	; () banked
  4755  0100C0  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4756  0100C2  A4D8               	btfss	status,2,c
  4757  0100C4  D058               	goto	l5530
  4758                           
  4759                           ; BSR set to: 0
  4760  0100C6  0100               	movlb	0	; () banked
  4761  0100C8  2975               	incf	CANSetFilter@type& (0+255),w,b
  4762  0100CA  A4D8               	btfss	status,2,c
  4763  0100CC  D054               	goto	l5530
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 766: {
  4767                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4768  0100CE  010F               	movlb	15	; () banked
  4769  0100D0  9705               	bcf	5,3,b	;volatile
  4770                           
  4771                           ; BSR set to: 15
  4772                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4773  0100D2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4774  0100D6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4775  0100DA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4776  0100DE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4777  0100E2  0E04               	movlw	4
  4778  0100E4  D006               	goto	u6350
  4779  0100E6                     u6355:
  4780  0100E6  0100               	movlb	0	; () banked
  4781  0100E8  90D8               	bcf	status,0,c
  4782  0100EA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4783  0100EC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4784  0100EE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4785  0100F0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4786  0100F2                     u6350:
  4787  0100F2  2EE8               	decfsz	wreg,f,c
  4788  0100F4  D7F8               	goto	u6355
  4789  0100F6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4790  0100FA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4791  0100FE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4792  010102  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4796  010106  0100               	movlb	0	; () banked
  4797  010108  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4798  01010A  0100               	movlb	0	; () banked
  4799  01010C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4800  01010E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4801  010110  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4802  010112  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4806  010114  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4810  010118  0E07               	movlw	7
  4811  01011A  0100               	movlb	0	; () banked
  4812  01011C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4813  01011E  0100               	movlb	0	; () banked
  4814  010120  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4815  010122  0E00               	movlw	0
  4816  010124  0100               	movlb	0	; () banked
  4817  010126  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4818  010128  0100               	movlb	0	; () banked
  4819  01012A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4820  01012C  0E00               	movlw	0
  4821  01012E  0100               	movlb	0	; () banked
  4822  010130  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4823  010132  0100               	movlb	0	; () banked
  4824  010134  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4825  010136  0E00               	movlw	0
  4826  010138  0100               	movlb	0	; () banked
  4827  01013A  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4828  01013C  0100               	movlb	0	; () banked
  4829  01013E  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4833  010140  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4834  010144  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4835  010148  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4836  01014C  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4837  010150  0E05               	movlw	5
  4838  010152                     u6365:
  4839  010152  90D8               	bcf	status,0,c
  4840  010154  0100               	movlb	0	; () banked
  4841  010156  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4842  010158  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4843  01015A  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4844  01015C  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4845  01015E  2EE8               	decfsz	wreg,f,c
  4846  010160  D7F8               	goto	u6365
  4847  010162  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4848  010166  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4849  01016A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4850  01016E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4854  010172  C07B  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4855  010176                     l5530:
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;inc\CANlib.h: 776: }
  4859                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4860  010176  0E02               	movlw	2
  4861  010178  0100               	movlb	0	; () banked
  4862  01017A  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4863  01017C  A4D8               	btfss	status,2,c
  4864  01017E  D058               	goto	l5548
  4865                           
  4866                           ; BSR set to: 0
  4867  010180  0100               	movlb	0	; () banked
  4868  010182  2975               	incf	CANSetFilter@type& (0+255),w,b
  4869  010184  A4D8               	btfss	status,2,c
  4870  010186  D054               	goto	l5548
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;inc\CANlib.h: 779: {
  4874                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4875  010188  010F               	movlb	15	; () banked
  4876  01018A  9709               	bcf	9,3,b	;volatile
  4877                           
  4878                           ; BSR set to: 15
  4879                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4880  01018C  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4881  010190  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4882  010194  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4883  010198  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4884  01019C  0E04               	movlw	4
  4885  01019E  D006               	goto	u6390
  4886  0101A0                     u6395:
  4887  0101A0  0100               	movlb	0	; () banked
  4888  0101A2  90D8               	bcf	status,0,c
  4889  0101A4  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4890  0101A6  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4891  0101A8  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4892  0101AA  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4893  0101AC                     u6390:
  4894  0101AC  2EE8               	decfsz	wreg,f,c
  4895  0101AE  D7F8               	goto	u6395
  4896  0101B0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4897  0101B4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4898  0101B8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4899  0101BC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4903  0101C0  0100               	movlb	0	; () banked
  4904  0101C2  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4905  0101C4  0100               	movlb	0	; () banked
  4906  0101C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4907  0101C8  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4908  0101CA  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4909  0101CC  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4913  0101CE  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4917  0101D2  0E07               	movlw	7
  4918  0101D4  0100               	movlb	0	; () banked
  4919  0101D6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4920  0101D8  0100               	movlb	0	; () banked
  4921  0101DA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4922  0101DC  0E00               	movlw	0
  4923  0101DE  0100               	movlb	0	; () banked
  4924  0101E0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4925  0101E2  0100               	movlb	0	; () banked
  4926  0101E4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4927  0101E6  0E00               	movlw	0
  4928  0101E8  0100               	movlb	0	; () banked
  4929  0101EA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4930  0101EC  0100               	movlb	0	; () banked
  4931  0101EE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4932  0101F0  0E00               	movlw	0
  4933  0101F2  0100               	movlb	0	; () banked
  4934  0101F4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4935  0101F6  0100               	movlb	0	; () banked
  4936  0101F8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4940  0101FA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4941  0101FE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4942  010202  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4943  010206  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4944  01020A  0E05               	movlw	5
  4945  01020C                     u6405:
  4946  01020C  90D8               	bcf	status,0,c
  4947  01020E  0100               	movlb	0	; () banked
  4948  010210  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4949  010212  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4950  010214  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4951  010216  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4952  010218  2EE8               	decfsz	wreg,f,c
  4953  01021A  D7F8               	goto	u6405
  4954  01021C  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4955  010220  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4956  010224  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4957  010228  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4961  01022C  C07B  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4962  010230                     l5548:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;inc\CANlib.h: 789: }
  4966                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4967  010230  0E03               	movlw	3
  4968  010232  0100               	movlb	0	; () banked
  4969  010234  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4970  010236  A4D8               	btfss	status,2,c
  4971  010238  D058               	goto	l5566
  4972                           
  4973                           ; BSR set to: 0
  4974  01023A  0100               	movlb	0	; () banked
  4975  01023C  2975               	incf	CANSetFilter@type& (0+255),w,b
  4976  01023E  A4D8               	btfss	status,2,c
  4977  010240  D054               	goto	l5566
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;inc\CANlib.h: 792: {
  4981                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4982  010242  010F               	movlb	15	; () banked
  4983  010244  970D               	bcf	13,3,b	;volatile
  4984                           
  4985                           ; BSR set to: 15
  4986                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4987  010246  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4988  01024A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4989  01024E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4990  010252  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4991  010256  0E04               	movlw	4
  4992  010258  D006               	goto	u6430
  4993  01025A                     u6435:
  4994  01025A  0100               	movlb	0	; () banked
  4995  01025C  90D8               	bcf	status,0,c
  4996  01025E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4997  010260  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4998  010262  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4999  010264  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5000  010266                     u6430:
  5001  010266  2EE8               	decfsz	wreg,f,c
  5002  010268  D7F8               	goto	u6435
  5003  01026A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5004  01026E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5005  010272  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5006  010276  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5010  01027A  0100               	movlb	0	; () banked
  5011  01027C  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5012  01027E  0100               	movlb	0	; () banked
  5013  010280  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5014  010282  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5015  010284  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5016  010286  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5020  010288  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5024  01028C  0E07               	movlw	7
  5025  01028E  0100               	movlb	0	; () banked
  5026  010290  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5027  010292  0100               	movlb	0	; () banked
  5028  010294  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5029  010296  0E00               	movlw	0
  5030  010298  0100               	movlb	0	; () banked
  5031  01029A  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5032  01029C  0100               	movlb	0	; () banked
  5033  01029E  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5034  0102A0  0E00               	movlw	0
  5035  0102A2  0100               	movlb	0	; () banked
  5036  0102A4  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5037  0102A6  0100               	movlb	0	; () banked
  5038  0102A8  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5039  0102AA  0E00               	movlw	0
  5040  0102AC  0100               	movlb	0	; () banked
  5041  0102AE  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5042  0102B0  0100               	movlb	0	; () banked
  5043  0102B2  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5047  0102B4  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5048  0102B8  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5049  0102BC  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5050  0102C0  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5051  0102C4  0E05               	movlw	5
  5052  0102C6                     u6445:
  5053  0102C6  90D8               	bcf	status,0,c
  5054  0102C8  0100               	movlb	0	; () banked
  5055  0102CA  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5056  0102CC  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5057  0102CE  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5058  0102D0  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5059  0102D2  2EE8               	decfsz	wreg,f,c
  5060  0102D4  D7F8               	goto	u6445
  5061  0102D6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5062  0102DA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5063  0102DE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5064  0102E2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5068  0102E6  C07B  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5069  0102EA                     l5566:
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;inc\CANlib.h: 802: }
  5073                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5074  0102EA  0E04               	movlw	4
  5075  0102EC  0100               	movlb	0	; () banked
  5076  0102EE  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5077  0102F0  A4D8               	btfss	status,2,c
  5078  0102F2  D058               	goto	l5584
  5079                           
  5080                           ; BSR set to: 0
  5081  0102F4  0100               	movlb	0	; () banked
  5082  0102F6  2975               	incf	CANSetFilter@type& (0+255),w,b
  5083  0102F8  A4D8               	btfss	status,2,c
  5084  0102FA  D054               	goto	l5584
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;inc\CANlib.h: 805: {
  5088                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5089  0102FC  010F               	movlb	15	; () banked
  5090  0102FE  9711               	bcf	17,3,b	;volatile
  5091                           
  5092                           ; BSR set to: 15
  5093                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5094  010300  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5095  010304  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5096  010308  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5097  01030C  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5098  010310  0E04               	movlw	4
  5099  010312  D006               	goto	u6470
  5100  010314                     u6475:
  5101  010314  0100               	movlb	0	; () banked
  5102  010316  90D8               	bcf	status,0,c
  5103  010318  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5104  01031A  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5105  01031C  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5106  01031E  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5107  010320                     u6470:
  5108  010320  2EE8               	decfsz	wreg,f,c
  5109  010322  D7F8               	goto	u6475
  5110  010324  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5111  010328  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5112  01032C  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5113  010330  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5117  010334  0100               	movlb	0	; () banked
  5118  010336  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5119  010338  0100               	movlb	0	; () banked
  5120  01033A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5121  01033C  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5122  01033E  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5123  010340  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5127  010342  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5131  010346  0E07               	movlw	7
  5132  010348  0100               	movlb	0	; () banked
  5133  01034A  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5134  01034C  0100               	movlb	0	; () banked
  5135  01034E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5136  010350  0E00               	movlw	0
  5137  010352  0100               	movlb	0	; () banked
  5138  010354  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5139  010356  0100               	movlb	0	; () banked
  5140  010358  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5141  01035A  0E00               	movlw	0
  5142  01035C  0100               	movlb	0	; () banked
  5143  01035E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5144  010360  0100               	movlb	0	; () banked
  5145  010362  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5146  010364  0E00               	movlw	0
  5147  010366  0100               	movlb	0	; () banked
  5148  010368  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5149  01036A  0100               	movlb	0	; () banked
  5150  01036C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5154  01036E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5155  010372  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5156  010376  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5157  01037A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5158  01037E  0E05               	movlw	5
  5159  010380                     u6485:
  5160  010380  90D8               	bcf	status,0,c
  5161  010382  0100               	movlb	0	; () banked
  5162  010384  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5163  010386  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5164  010388  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5165  01038A  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5166  01038C  2EE8               	decfsz	wreg,f,c
  5167  01038E  D7F8               	goto	u6485
  5168  010390  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5169  010394  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5170  010398  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5171  01039C  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5175  0103A0  C07B  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5176  0103A4                     l5584:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;inc\CANlib.h: 815: }
  5180                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5181  0103A4  0E05               	movlw	5
  5182  0103A6  0100               	movlb	0	; () banked
  5183  0103A8  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5184  0103AA  A4D8               	btfss	status,2,c
  5185  0103AC  D058               	goto	l5602
  5186                           
  5187                           ; BSR set to: 0
  5188  0103AE  0100               	movlb	0	; () banked
  5189  0103B0  2975               	incf	CANSetFilter@type& (0+255),w,b
  5190  0103B2  A4D8               	btfss	status,2,c
  5191  0103B4  D054               	goto	l5602
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;inc\CANlib.h: 818: {
  5195                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5196  0103B6  010F               	movlb	15	; () banked
  5197  0103B8  9715               	bcf	21,3,b	;volatile
  5198                           
  5199                           ; BSR set to: 15
  5200                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5201  0103BA  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5202  0103BE  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5203  0103C2  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5204  0103C6  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5205  0103CA  0E04               	movlw	4
  5206  0103CC  D006               	goto	u6510
  5207  0103CE                     u6515:
  5208  0103CE  0100               	movlb	0	; () banked
  5209  0103D0  90D8               	bcf	status,0,c
  5210  0103D2  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5211  0103D4  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5212  0103D6  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5213  0103D8  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5214  0103DA                     u6510:
  5215  0103DA  2EE8               	decfsz	wreg,f,c
  5216  0103DC  D7F8               	goto	u6515
  5217  0103DE  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5218  0103E2  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5219  0103E6  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5220  0103EA  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5224  0103EE  0100               	movlb	0	; () banked
  5225  0103F0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5226  0103F2  0100               	movlb	0	; () banked
  5227  0103F4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5228  0103F6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5229  0103F8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5230  0103FA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5234  0103FC  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5238  010400  0E07               	movlw	7
  5239  010402  0100               	movlb	0	; () banked
  5240  010404  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5241  010406  0100               	movlb	0	; () banked
  5242  010408  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5243  01040A  0E00               	movlw	0
  5244  01040C  0100               	movlb	0	; () banked
  5245  01040E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5246  010410  0100               	movlb	0	; () banked
  5247  010412  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5248  010414  0E00               	movlw	0
  5249  010416  0100               	movlb	0	; () banked
  5250  010418  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5251  01041A  0100               	movlb	0	; () banked
  5252  01041C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5253  01041E  0E00               	movlw	0
  5254  010420  0100               	movlb	0	; () banked
  5255  010422  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5256  010424  0100               	movlb	0	; () banked
  5257  010426  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5261  010428  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5262  01042C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5263  010430  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5264  010434  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5265  010438  0E05               	movlw	5
  5266  01043A                     u6525:
  5267  01043A  90D8               	bcf	status,0,c
  5268  01043C  0100               	movlb	0	; () banked
  5269  01043E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5270  010440  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5271  010442  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5272  010444  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5273  010446  2EE8               	decfsz	wreg,f,c
  5274  010448  D7F8               	goto	u6525
  5275  01044A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5276  01044E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5277  010452  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5278  010456  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5282  01045A  C07B  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5283  01045E                     l5602:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;inc\CANlib.h: 828: }
  5287                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5288  01045E  0100               	movlb	0	; () banked
  5289  010460  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5290  010462  0100               	movlb	0	; () banked
  5291  010464  A4D8               	btfss	status,2,c
  5292  010466  D089               	goto	l5636
  5293                           
  5294                           ; BSR set to: 0
  5295  010468  0EF7               	movlw	247
  5296  01046A  0100               	movlb	0	; () banked
  5297  01046C  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5298  01046E  A4D8               	btfss	status,2,c
  5299  010470  D084               	goto	l5636
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;inc\CANlib.h: 832: {
  5303                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5304  010472  010F               	movlb	15	; () banked
  5305  010474  8701               	bsf	1,3,b	;volatile
  5306                           
  5307                           ; BSR set to: 15
  5308                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5309  010476  0100               	movlb	0	; () banked
  5310  010478  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5311  01047A  0100               	movlb	0	; () banked
  5312  01047C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5313  01047E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5314  010480  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5315  010482  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5319  010484  C07B  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5323  010488  0E00               	movlw	0
  5324  01048A  0100               	movlb	0	; () banked
  5325  01048C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5326  01048E  0100               	movlb	0	; () banked
  5327  010490  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5328  010492  0EFF               	movlw	255
  5329  010494  0100               	movlb	0	; () banked
  5330  010496  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5331  010498  0100               	movlb	0	; () banked
  5332  01049A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5333  01049C  0E00               	movlw	0
  5334  01049E  0100               	movlb	0	; () banked
  5335  0104A0  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5336  0104A2  0100               	movlb	0	; () banked
  5337  0104A4  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5338  0104A6  0E00               	movlw	0
  5339  0104A8  0100               	movlb	0	; () banked
  5340  0104AA  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5341  0104AC  0100               	movlb	0	; () banked
  5342  0104AE  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5346  0104B0  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5347  0104B4  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5348  0104B8  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5349  0104BC  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5350  0104C0  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5351  0104C4  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5352  0104C8  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5353  0104CC  0100               	movlb	0	; () banked
  5354  0104CE  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5355  0104D0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5356  0104D4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5357  0104D8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5358  0104DC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5362  0104E0  C07B  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5366  0104E4  0100               	movlb	0	; () banked
  5367  0104E6  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5368  0104E8  D003               	goto	l485
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5372  0104EA  010F               	movlb	15	; () banked
  5373  0104EC  8101               	bsf	1,0,b	;volatile
  5374  0104EE  D002               	goto	l486
  5375  0104F0                     l485:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;inc\CANlib.h: 844: else
  5379                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5380  0104F0  010F               	movlb	15	; () banked
  5381  0104F2  9101               	bcf	1,0,b	;volatile
  5382  0104F4                     l486:
  5383                           
  5384                           ; BSR set to: 15
  5385                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5386  0104F4  0100               	movlb	0	; () banked
  5387  0104F6  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5388  0104F8  D003               	goto	l487
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5392  0104FA  010F               	movlb	15	; () banked
  5393  0104FC  8301               	bsf	1,1,b	;volatile
  5394  0104FE  D002               	goto	l488
  5395  010500                     l487:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;inc\CANlib.h: 849: else
  5399                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5400  010500  010F               	movlb	15	; () banked
  5401  010502  9301               	bcf	1,1,b	;volatile
  5402  010504                     l488:
  5403                           
  5404                           ; BSR set to: 15
  5405                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5406  010504  0100               	movlb	0	; () banked
  5407  010506  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5408  010508  D003               	goto	l489
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5412  01050A  010F               	movlb	15	; () banked
  5413  01050C  8B01               	bsf	1,5,b	;volatile
  5414  01050E  D002               	goto	l490
  5415  010510                     l489:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;inc\CANlib.h: 854: else
  5419                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5420  010510  010F               	movlb	15	; () banked
  5421  010512  9B01               	bcf	1,5,b	;volatile
  5422  010514                     l490:
  5423                           
  5424                           ; BSR set to: 15
  5425                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5426  010514  0100               	movlb	0	; () banked
  5427  010516  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5428  010518  D003               	goto	l491
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5432  01051A  010F               	movlb	15	; () banked
  5433  01051C  8D01               	bsf	1,6,b	;volatile
  5434  01051E  D002               	goto	l492
  5435  010520                     l491:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;inc\CANlib.h: 859: else
  5439                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5440  010520  010F               	movlb	15	; () banked
  5441  010522  9D01               	bcf	1,6,b	;volatile
  5442  010524                     l492:
  5443                           
  5444                           ; BSR set to: 15
  5445                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5446  010524  0100               	movlb	0	; () banked
  5447  010526  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5448  010528  D003               	goto	l493
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5452  01052A  010F               	movlb	15	; () banked
  5453  01052C  8F01               	bsf	1,7,b	;volatile
  5454  01052E  D002               	goto	l5630
  5455  010530                     l493:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 864: else
  5459                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5460  010530  010F               	movlb	15	; () banked
  5461  010532  9F01               	bcf	1,7,b	;volatile
  5462  010534                     l5630:
  5463                           
  5464                           ; BSR set to: 15
  5465                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5466  010534  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5467  010538  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5468  01053C  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5469  010540  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5470  010544  0E16               	movlw	22
  5471  010546  D006               	goto	u6600
  5472  010548                     u6605:
  5473  010548  0100               	movlb	0	; () banked
  5474  01054A  90D8               	bcf	status,0,c
  5475  01054C  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5476  01054E  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5477  010550  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5478  010552  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5479  010554                     u6600:
  5480  010554  2EE8               	decfsz	wreg,f,c
  5481  010556  D7F8               	goto	u6605
  5482  010558  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5483  01055C  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5484  010560  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5485  010564  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5489  010568  0100               	movlb	0	; () banked
  5490  01056A  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5491  01056C  0100               	movlb	0	; () banked
  5492  01056E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5493  010570  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5494  010572  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5495  010574  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5499  010576  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5500  01057A                     l5636:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;inc\CANlib.h: 870: }
  5504                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5505  01057A  0100               	movlb	0	; () banked
  5506  01057C  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5507  01057E  A4D8               	btfss	status,2,c
  5508  010580  D089               	goto	l5670
  5509                           
  5510                           ; BSR set to: 0
  5511  010582  0EF7               	movlw	247
  5512  010584  0100               	movlb	0	; () banked
  5513  010586  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5514  010588  A4D8               	btfss	status,2,c
  5515  01058A  D084               	goto	l5670
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 873: {
  5519                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5520  01058C  010F               	movlb	15	; () banked
  5521  01058E  8705               	bsf	5,3,b	;volatile
  5522                           
  5523                           ; BSR set to: 15
  5524                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5525  010590  0100               	movlb	0	; () banked
  5526  010592  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5527  010594  0100               	movlb	0	; () banked
  5528  010596  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5529  010598  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5530  01059A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5531  01059C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5535  01059E  C07B  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5539  0105A2  0E00               	movlw	0
  5540  0105A4  0100               	movlb	0	; () banked
  5541  0105A6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5542  0105A8  0100               	movlb	0	; () banked
  5543  0105AA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5544  0105AC  0EFF               	movlw	255
  5545  0105AE  0100               	movlb	0	; () banked
  5546  0105B0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5547  0105B2  0100               	movlb	0	; () banked
  5548  0105B4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5549  0105B6  0E00               	movlw	0
  5550  0105B8  0100               	movlb	0	; () banked
  5551  0105BA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5552  0105BC  0100               	movlb	0	; () banked
  5553  0105BE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5554  0105C0  0E00               	movlw	0
  5555  0105C2  0100               	movlb	0	; () banked
  5556  0105C4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5557  0105C6  0100               	movlb	0	; () banked
  5558  0105C8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5562  0105CA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5563  0105CE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5564  0105D2  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5565  0105D6  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5566  0105DA  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5567  0105DE  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5568  0105E2  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5569  0105E6  0100               	movlb	0	; () banked
  5570  0105E8  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5571  0105EA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5572  0105EE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5573  0105F2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5574  0105F6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5578  0105FA  C07B  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5582  0105FE  0100               	movlb	0	; () banked
  5583  010600  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5584  010602  D003               	goto	l496
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5588  010604  010F               	movlb	15	; () banked
  5589  010606  8105               	bsf	5,0,b	;volatile
  5590  010608  D002               	goto	l497
  5591  01060A                     l496:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 885: else
  5595                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5596  01060A  010F               	movlb	15	; () banked
  5597  01060C  9105               	bcf	5,0,b	;volatile
  5598  01060E                     l497:
  5599                           
  5600                           ; BSR set to: 15
  5601                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5602  01060E  0100               	movlb	0	; () banked
  5603  010610  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5604  010612  D003               	goto	l498
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5608  010614  010F               	movlb	15	; () banked
  5609  010616  8305               	bsf	5,1,b	;volatile
  5610  010618  D002               	goto	l499
  5611  01061A                     l498:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 890: else
  5615                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5616  01061A  010F               	movlb	15	; () banked
  5617  01061C  9305               	bcf	5,1,b	;volatile
  5618  01061E                     l499:
  5619                           
  5620                           ; BSR set to: 15
  5621                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5622  01061E  0100               	movlb	0	; () banked
  5623  010620  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5624  010622  D003               	goto	l500
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5628  010624  010F               	movlb	15	; () banked
  5629  010626  8B05               	bsf	5,5,b	;volatile
  5630  010628  D002               	goto	l501
  5631  01062A                     l500:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 895: else
  5635                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5636  01062A  010F               	movlb	15	; () banked
  5637  01062C  9B05               	bcf	5,5,b	;volatile
  5638  01062E                     l501:
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5642  01062E  0100               	movlb	0	; () banked
  5643  010630  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5644  010632  D003               	goto	l502
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5648  010634  010F               	movlb	15	; () banked
  5649  010636  8D05               	bsf	5,6,b	;volatile
  5650  010638  D002               	goto	l503
  5651  01063A                     l502:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;inc\CANlib.h: 900: else
  5655                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5656  01063A  010F               	movlb	15	; () banked
  5657  01063C  9D05               	bcf	5,6,b	;volatile
  5658  01063E                     l503:
  5659                           
  5660                           ; BSR set to: 15
  5661                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5662  01063E  0100               	movlb	0	; () banked
  5663  010640  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5664  010642  D003               	goto	l504
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5668  010644  010F               	movlb	15	; () banked
  5669  010646  8F05               	bsf	5,7,b	;volatile
  5670  010648  D002               	goto	l5664
  5671  01064A                     l504:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;inc\CANlib.h: 905: else
  5675                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5676  01064A  010F               	movlb	15	; () banked
  5677  01064C  9F05               	bcf	5,7,b	;volatile
  5678  01064E                     l5664:
  5679                           
  5680                           ; BSR set to: 15
  5681                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5682  01064E  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5683  010652  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5684  010656  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5685  01065A  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5686  01065E  0E16               	movlw	22
  5687  010660  D006               	goto	u6680
  5688  010662                     u6685:
  5689  010662  0100               	movlb	0	; () banked
  5690  010664  90D8               	bcf	status,0,c
  5691  010666  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5692  010668  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5693  01066A  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5694  01066C  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5695  01066E                     u6680:
  5696  01066E  2EE8               	decfsz	wreg,f,c
  5697  010670  D7F8               	goto	u6685
  5698  010672  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5699  010676  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5700  01067A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5701  01067E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5705  010682  0100               	movlb	0	; () banked
  5706  010684  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5707  010686  0100               	movlb	0	; () banked
  5708  010688  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5709  01068A  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5710  01068C  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5711  01068E  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5715  010690  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5716  010694                     l5670:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;inc\CANlib.h: 911: }
  5720                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5721  010694  0E02               	movlw	2
  5722  010696  0100               	movlb	0	; () banked
  5723  010698  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5724  01069A  A4D8               	btfss	status,2,c
  5725  01069C  D089               	goto	l5704
  5726                           
  5727                           ; BSR set to: 0
  5728  01069E  0EF7               	movlw	247
  5729  0106A0  0100               	movlb	0	; () banked
  5730  0106A2  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5731  0106A4  A4D8               	btfss	status,2,c
  5732  0106A6  D084               	goto	l5704
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 915: {
  5736                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5737  0106A8  010F               	movlb	15	; () banked
  5738  0106AA  8709               	bsf	9,3,b	;volatile
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5742  0106AC  0100               	movlb	0	; () banked
  5743  0106AE  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5744  0106B0  0100               	movlb	0	; () banked
  5745  0106B2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5746  0106B4  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5747  0106B6  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5748  0106B8  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5752  0106BA  C07B  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5756  0106BE  0E00               	movlw	0
  5757  0106C0  0100               	movlb	0	; () banked
  5758  0106C2  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5759  0106C4  0100               	movlb	0	; () banked
  5760  0106C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5761  0106C8  0EFF               	movlw	255
  5762  0106CA  0100               	movlb	0	; () banked
  5763  0106CC  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5764  0106CE  0100               	movlb	0	; () banked
  5765  0106D0  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5766  0106D2  0E00               	movlw	0
  5767  0106D4  0100               	movlb	0	; () banked
  5768  0106D6  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5769  0106D8  0100               	movlb	0	; () banked
  5770  0106DA  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5771  0106DC  0E00               	movlw	0
  5772  0106DE  0100               	movlb	0	; () banked
  5773  0106E0  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5774  0106E2  0100               	movlb	0	; () banked
  5775  0106E4  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5779  0106E6  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5780  0106EA  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5781  0106EE  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5782  0106F2  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5783  0106F6  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5784  0106FA  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5785  0106FE  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5786  010702  0100               	movlb	0	; () banked
  5787  010704  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5788  010706  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5789  01070A  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5790  01070E  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5791  010712  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5795  010716  C07B  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5799  01071A  0100               	movlb	0	; () banked
  5800  01071C  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5801  01071E  D003               	goto	l507
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5805  010720  010F               	movlb	15	; () banked
  5806  010722  8109               	bsf	9,0,b	;volatile
  5807  010724  D002               	goto	l508
  5808  010726                     l507:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 927: else
  5812                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5813  010726  010F               	movlb	15	; () banked
  5814  010728  9109               	bcf	9,0,b	;volatile
  5815  01072A                     l508:
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5819  01072A  0100               	movlb	0	; () banked
  5820  01072C  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5821  01072E  D003               	goto	l509
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5825  010730  010F               	movlb	15	; () banked
  5826  010732  8309               	bsf	9,1,b	;volatile
  5827  010734  D002               	goto	l510
  5828  010736                     l509:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 932: else
  5832                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5833  010736  010F               	movlb	15	; () banked
  5834  010738  9309               	bcf	9,1,b	;volatile
  5835  01073A                     l510:
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5839  01073A  0100               	movlb	0	; () banked
  5840  01073C  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5841  01073E  D003               	goto	l511
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5845  010740  010F               	movlb	15	; () banked
  5846  010742  8B09               	bsf	9,5,b	;volatile
  5847  010744  D002               	goto	l512
  5848  010746                     l511:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;inc\CANlib.h: 937: else
  5852                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5853  010746  010F               	movlb	15	; () banked
  5854  010748  9B09               	bcf	9,5,b	;volatile
  5855  01074A                     l512:
  5856                           
  5857                           ; BSR set to: 15
  5858                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5859  01074A  0100               	movlb	0	; () banked
  5860  01074C  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5861  01074E  D003               	goto	l513
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5865  010750  010F               	movlb	15	; () banked
  5866  010752  8D09               	bsf	9,6,b	;volatile
  5867  010754  D002               	goto	l514
  5868  010756                     l513:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;inc\CANlib.h: 942: else
  5872                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5873  010756  010F               	movlb	15	; () banked
  5874  010758  9D09               	bcf	9,6,b	;volatile
  5875  01075A                     l514:
  5876                           
  5877                           ; BSR set to: 15
  5878                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5879  01075A  0100               	movlb	0	; () banked
  5880  01075C  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5881  01075E  D003               	goto	l515
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5885  010760  010F               	movlb	15	; () banked
  5886  010762  8F09               	bsf	9,7,b	;volatile
  5887  010764  D002               	goto	l5698
  5888  010766                     l515:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 947: else
  5892                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5893  010766  010F               	movlb	15	; () banked
  5894  010768  9F09               	bcf	9,7,b	;volatile
  5895  01076A                     l5698:
  5896                           
  5897                           ; BSR set to: 15
  5898                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5899  01076A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5900  01076E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5901  010772  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5902  010776  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5903  01077A  0E16               	movlw	22
  5904  01077C  D006               	goto	u6760
  5905  01077E                     u6765:
  5906  01077E  0100               	movlb	0	; () banked
  5907  010780  90D8               	bcf	status,0,c
  5908  010782  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5909  010784  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5910  010786  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5911  010788  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5912  01078A                     u6760:
  5913  01078A  2EE8               	decfsz	wreg,f,c
  5914  01078C  D7F8               	goto	u6765
  5915  01078E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5916  010792  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5917  010796  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5918  01079A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5922  01079E  0100               	movlb	0	; () banked
  5923  0107A0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5924  0107A2  0100               	movlb	0	; () banked
  5925  0107A4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5926  0107A6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5927  0107A8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5928  0107AA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5932  0107AC  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5933  0107B0                     l5704:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;inc\CANlib.h: 953: }
  5937                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5938  0107B0  0E03               	movlw	3
  5939  0107B2  0100               	movlb	0	; () banked
  5940  0107B4  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5941  0107B6  A4D8               	btfss	status,2,c
  5942  0107B8  D089               	goto	l5738
  5943                           
  5944                           ; BSR set to: 0
  5945  0107BA  0EF7               	movlw	247
  5946  0107BC  0100               	movlb	0	; () banked
  5947  0107BE  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5948  0107C0  A4D8               	btfss	status,2,c
  5949  0107C2  D084               	goto	l5738
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;inc\CANlib.h: 956: {
  5953                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5954  0107C4  010F               	movlb	15	; () banked
  5955  0107C6  870D               	bsf	13,3,b	;volatile
  5956                           
  5957                           ; BSR set to: 15
  5958                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5959  0107C8  0100               	movlb	0	; () banked
  5960  0107CA  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5961  0107CC  0100               	movlb	0	; () banked
  5962  0107CE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5963  0107D0  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5964  0107D2  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5965  0107D4  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5969  0107D6  C07B  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5973  0107DA  0E00               	movlw	0
  5974  0107DC  0100               	movlb	0	; () banked
  5975  0107DE  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5976  0107E0  0100               	movlb	0	; () banked
  5977  0107E2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5978  0107E4  0EFF               	movlw	255
  5979  0107E6  0100               	movlb	0	; () banked
  5980  0107E8  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5981  0107EA  0100               	movlb	0	; () banked
  5982  0107EC  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5983  0107EE  0E00               	movlw	0
  5984  0107F0  0100               	movlb	0	; () banked
  5985  0107F2  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5986  0107F4  0100               	movlb	0	; () banked
  5987  0107F6  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5988  0107F8  0E00               	movlw	0
  5989  0107FA  0100               	movlb	0	; () banked
  5990  0107FC  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5991  0107FE  0100               	movlb	0	; () banked
  5992  010800  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5996  010802  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5997  010806  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5998  01080A  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5999  01080E  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6000  010812  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6001  010816  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6002  01081A  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6003  01081E  0100               	movlb	0	; () banked
  6004  010820  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6005  010822  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6006  010826  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6007  01082A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6008  01082E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6012  010832  C07B  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6016  010836  0100               	movlb	0	; () banked
  6017  010838  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6018  01083A  D003               	goto	l518
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6022  01083C  010F               	movlb	15	; () banked
  6023  01083E  810D               	bsf	13,0,b	;volatile
  6024  010840  D002               	goto	l519
  6025  010842                     l518:
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;inc\CANlib.h: 968: else
  6029                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6030  010842  010F               	movlb	15	; () banked
  6031  010844  910D               	bcf	13,0,b	;volatile
  6032  010846                     l519:
  6033                           
  6034                           ; BSR set to: 15
  6035                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6036  010846  0100               	movlb	0	; () banked
  6037  010848  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6038  01084A  D003               	goto	l520
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6042  01084C  010F               	movlb	15	; () banked
  6043  01084E  830D               	bsf	13,1,b	;volatile
  6044  010850  D002               	goto	l521
  6045  010852                     l520:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;inc\CANlib.h: 973: else
  6049                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6050  010852  010F               	movlb	15	; () banked
  6051  010854  930D               	bcf	13,1,b	;volatile
  6052  010856                     l521:
  6053                           
  6054                           ; BSR set to: 15
  6055                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6056  010856  0100               	movlb	0	; () banked
  6057  010858  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6058  01085A  D003               	goto	l522
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6062  01085C  010F               	movlb	15	; () banked
  6063  01085E  8B0D               	bsf	13,5,b	;volatile
  6064  010860  D002               	goto	l523
  6065  010862                     l522:
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;inc\CANlib.h: 978: else
  6069                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6070  010862  010F               	movlb	15	; () banked
  6071  010864  9B0D               	bcf	13,5,b	;volatile
  6072  010866                     l523:
  6073                           
  6074                           ; BSR set to: 15
  6075                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6076  010866  0100               	movlb	0	; () banked
  6077  010868  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6078  01086A  D003               	goto	l524
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6082  01086C  010F               	movlb	15	; () banked
  6083  01086E  8D0D               	bsf	13,6,b	;volatile
  6084  010870  D002               	goto	l525
  6085  010872                     l524:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;inc\CANlib.h: 983: else
  6089                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6090  010872  010F               	movlb	15	; () banked
  6091  010874  9D0D               	bcf	13,6,b	;volatile
  6092  010876                     l525:
  6093                           
  6094                           ; BSR set to: 15
  6095                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6096  010876  0100               	movlb	0	; () banked
  6097  010878  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6098  01087A  D003               	goto	l526
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6102  01087C  010F               	movlb	15	; () banked
  6103  01087E  8F0D               	bsf	13,7,b	;volatile
  6104  010880  D002               	goto	l5732
  6105  010882                     l526:
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;inc\CANlib.h: 988: else
  6109                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6110  010882  010F               	movlb	15	; () banked
  6111  010884  9F0D               	bcf	13,7,b	;volatile
  6112  010886                     l5732:
  6113                           
  6114                           ; BSR set to: 15
  6115                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6116  010886  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6117  01088A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6118  01088E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6119  010892  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6120  010896  0E16               	movlw	22
  6121  010898  D006               	goto	u6840
  6122  01089A                     u6845:
  6123  01089A  0100               	movlb	0	; () banked
  6124  01089C  90D8               	bcf	status,0,c
  6125  01089E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6126  0108A0  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6127  0108A2  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6128  0108A4  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6129  0108A6                     u6840:
  6130  0108A6  2EE8               	decfsz	wreg,f,c
  6131  0108A8  D7F8               	goto	u6845
  6132  0108AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6133  0108AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6134  0108B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6135  0108B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6139  0108BA  0100               	movlb	0	; () banked
  6140  0108BC  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6141  0108BE  0100               	movlb	0	; () banked
  6142  0108C0  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6143  0108C2  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6144  0108C4  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6145  0108C6  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6149  0108C8  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6150  0108CC                     l5738:
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;inc\CANlib.h: 994: }
  6154                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6155  0108CC  0E04               	movlw	4
  6156  0108CE  0100               	movlb	0	; () banked
  6157  0108D0  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6158  0108D2  A4D8               	btfss	status,2,c
  6159  0108D4  D089               	goto	l5772
  6160                           
  6161                           ; BSR set to: 0
  6162  0108D6  0EF7               	movlw	247
  6163  0108D8  0100               	movlb	0	; () banked
  6164  0108DA  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6165  0108DC  A4D8               	btfss	status,2,c
  6166  0108DE  D084               	goto	l5772
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;inc\CANlib.h: 997: {
  6170                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6171  0108E0  010F               	movlb	15	; () banked
  6172  0108E2  8711               	bsf	17,3,b	;volatile
  6173                           
  6174                           ; BSR set to: 15
  6175                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6176  0108E4  0100               	movlb	0	; () banked
  6177  0108E6  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6178  0108E8  0100               	movlb	0	; () banked
  6179  0108EA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6180  0108EC  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6181  0108EE  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6182  0108F0  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6186  0108F2  C07B  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6190  0108F6  0E00               	movlw	0
  6191  0108F8  0100               	movlb	0	; () banked
  6192  0108FA  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6193  0108FC  0100               	movlb	0	; () banked
  6194  0108FE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6195  010900  0EFF               	movlw	255
  6196  010902  0100               	movlb	0	; () banked
  6197  010904  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6198  010906  0100               	movlb	0	; () banked
  6199  010908  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6200  01090A  0E00               	movlw	0
  6201  01090C  0100               	movlb	0	; () banked
  6202  01090E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6203  010910  0100               	movlb	0	; () banked
  6204  010912  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6205  010914  0E00               	movlw	0
  6206  010916  0100               	movlb	0	; () banked
  6207  010918  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6208  01091A  0100               	movlb	0	; () banked
  6209  01091C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6213  01091E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6214  010922  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6215  010926  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6216  01092A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6217  01092E  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6218  010932  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6219  010936  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6220  01093A  0100               	movlb	0	; () banked
  6221  01093C  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6222  01093E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6223  010942  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6224  010946  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6225  01094A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6229  01094E  C07B  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6233  010952  0100               	movlb	0	; () banked
  6234  010954  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6235  010956  D003               	goto	l529
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6239  010958  010F               	movlb	15	; () banked
  6240  01095A  8111               	bsf	17,0,b	;volatile
  6241  01095C  D002               	goto	l530
  6242  01095E                     l529:
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;inc\CANlib.h: 1009: else
  6246                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6247  01095E  010F               	movlb	15	; () banked
  6248  010960  9111               	bcf	17,0,b	;volatile
  6249  010962                     l530:
  6250                           
  6251                           ; BSR set to: 15
  6252                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6253  010962  0100               	movlb	0	; () banked
  6254  010964  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6255  010966  D003               	goto	l531
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6259  010968  010F               	movlb	15	; () banked
  6260  01096A  8311               	bsf	17,1,b	;volatile
  6261  01096C  D002               	goto	l532
  6262  01096E                     l531:
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;inc\CANlib.h: 1014: else
  6266                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6267  01096E  010F               	movlb	15	; () banked
  6268  010970  9311               	bcf	17,1,b	;volatile
  6269  010972                     l532:
  6270                           
  6271                           ; BSR set to: 15
  6272                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6273  010972  0100               	movlb	0	; () banked
  6274  010974  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6275  010976  D003               	goto	l533
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6279  010978  010F               	movlb	15	; () banked
  6280  01097A  8B11               	bsf	17,5,b	;volatile
  6281  01097C  D002               	goto	l534
  6282  01097E                     l533:
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;inc\CANlib.h: 1019: else
  6286                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6287  01097E  010F               	movlb	15	; () banked
  6288  010980  9B11               	bcf	17,5,b	;volatile
  6289  010982                     l534:
  6290                           
  6291                           ; BSR set to: 15
  6292                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6293  010982  0100               	movlb	0	; () banked
  6294  010984  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6295  010986  D003               	goto	l535
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6299  010988  010F               	movlb	15	; () banked
  6300  01098A  8D11               	bsf	17,6,b	;volatile
  6301  01098C  D002               	goto	l536
  6302  01098E                     l535:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;inc\CANlib.h: 1024: else
  6306                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6307  01098E  010F               	movlb	15	; () banked
  6308  010990  9D11               	bcf	17,6,b	;volatile
  6309  010992                     l536:
  6310                           
  6311                           ; BSR set to: 15
  6312                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6313  010992  0100               	movlb	0	; () banked
  6314  010994  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6315  010996  D003               	goto	l537
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6319  010998  010F               	movlb	15	; () banked
  6320  01099A  8F11               	bsf	17,7,b	;volatile
  6321  01099C  D002               	goto	l5766
  6322  01099E                     l537:
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;inc\CANlib.h: 1029: else
  6326                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6327  01099E  010F               	movlb	15	; () banked
  6328  0109A0  9F11               	bcf	17,7,b	;volatile
  6329  0109A2                     l5766:
  6330                           
  6331                           ; BSR set to: 15
  6332                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6333  0109A2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6334  0109A6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6335  0109AA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6336  0109AE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6337  0109B2  0E16               	movlw	22
  6338  0109B4  D006               	goto	u6920
  6339  0109B6                     u6925:
  6340  0109B6  0100               	movlb	0	; () banked
  6341  0109B8  90D8               	bcf	status,0,c
  6342  0109BA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6343  0109BC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6344  0109BE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6345  0109C0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6346  0109C2                     u6920:
  6347  0109C2  2EE8               	decfsz	wreg,f,c
  6348  0109C4  D7F8               	goto	u6925
  6349  0109C6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6350  0109CA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6351  0109CE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6352  0109D2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6356  0109D6  0100               	movlb	0	; () banked
  6357  0109D8  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6358  0109DA  0100               	movlb	0	; () banked
  6359  0109DC  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6360  0109DE  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6361  0109E0  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6362  0109E2  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6366  0109E4  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6367  0109E8                     l5772:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;inc\CANlib.h: 1035: }
  6371                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6372  0109E8  0E05               	movlw	5
  6373  0109EA  0100               	movlb	0	; () banked
  6374  0109EC  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6375  0109EE  A4D8               	btfss	status,2,c
  6376  0109F0  0012               	return	
  6377                           
  6378                           ; BSR set to: 0
  6379  0109F2  0EF7               	movlw	247
  6380  0109F4  0100               	movlb	0	; () banked
  6381  0109F6  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6382  0109F8  A4D8               	btfss	status,2,c
  6383  0109FA  0012               	return	
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;inc\CANlib.h: 1038: {
  6387                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6388  0109FC  010F               	movlb	15	; () banked
  6389  0109FE  8715               	bsf	21,3,b	;volatile
  6390                           
  6391                           ; BSR set to: 15
  6392                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6393  010A00  0100               	movlb	0	; () banked
  6394  010A02  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6395  010A04  0100               	movlb	0	; () banked
  6396  010A06  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6397  010A08  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6398  010A0A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6399  010A0C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6403  010A0E  C07B  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6407  010A12  0E00               	movlw	0
  6408  010A14  0100               	movlb	0	; () banked
  6409  010A16  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6410  010A18  0100               	movlb	0	; () banked
  6411  010A1A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6412  010A1C  0EFF               	movlw	255
  6413  010A1E  0100               	movlb	0	; () banked
  6414  010A20  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6415  010A22  0100               	movlb	0	; () banked
  6416  010A24  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6417  010A26  0E00               	movlw	0
  6418  010A28  0100               	movlb	0	; () banked
  6419  010A2A  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6420  010A2C  0100               	movlb	0	; () banked
  6421  010A2E  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6422  010A30  0E00               	movlw	0
  6423  010A32  0100               	movlb	0	; () banked
  6424  010A34  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6425  010A36  0100               	movlb	0	; () banked
  6426  010A38  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6430  010A3A  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6431  010A3E  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6432  010A42  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6433  010A46  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6434  010A4A  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6435  010A4E  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6436  010A52  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6437  010A56  0100               	movlb	0	; () banked
  6438  010A58  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6439  010A5A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6440  010A5E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6441  010A62  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6442  010A66  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6446  010A6A  C07B  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6450  010A6E  0100               	movlb	0	; () banked
  6451  010A70  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6452  010A72  D003               	goto	l540
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6456  010A74  010F               	movlb	15	; () banked
  6457  010A76  8115               	bsf	21,0,b	;volatile
  6458  010A78  D002               	goto	l541
  6459  010A7A                     l540:
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;inc\CANlib.h: 1050: else
  6463                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6464  010A7A  010F               	movlb	15	; () banked
  6465  010A7C  9115               	bcf	21,0,b	;volatile
  6466  010A7E                     l541:
  6467                           
  6468                           ; BSR set to: 15
  6469                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6470  010A7E  0100               	movlb	0	; () banked
  6471  010A80  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6472  010A82  D003               	goto	l542
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6476  010A84  010F               	movlb	15	; () banked
  6477  010A86  8315               	bsf	21,1,b	;volatile
  6478  010A88  D002               	goto	l543
  6479  010A8A                     l542:
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;inc\CANlib.h: 1055: else
  6483                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6484  010A8A  010F               	movlb	15	; () banked
  6485  010A8C  9315               	bcf	21,1,b	;volatile
  6486  010A8E                     l543:
  6487                           
  6488                           ; BSR set to: 15
  6489                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6490  010A8E  0100               	movlb	0	; () banked
  6491  010A90  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6492  010A92  D003               	goto	l544
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6496  010A94  010F               	movlb	15	; () banked
  6497  010A96  8B15               	bsf	21,5,b	;volatile
  6498  010A98  D002               	goto	l545
  6499  010A9A                     l544:
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;inc\CANlib.h: 1060: else
  6503                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6504  010A9A  010F               	movlb	15	; () banked
  6505  010A9C  9B15               	bcf	21,5,b	;volatile
  6506  010A9E                     l545:
  6507                           
  6508                           ; BSR set to: 15
  6509                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6510  010A9E  0100               	movlb	0	; () banked
  6511  010AA0  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6512  010AA2  D003               	goto	l546
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6516  010AA4  010F               	movlb	15	; () banked
  6517  010AA6  8D15               	bsf	21,6,b	;volatile
  6518  010AA8  D002               	goto	l547
  6519  010AAA                     l546:
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;inc\CANlib.h: 1065: else
  6523                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6524  010AAA  010F               	movlb	15	; () banked
  6525  010AAC  9D15               	bcf	21,6,b	;volatile
  6526  010AAE                     l547:
  6527                           
  6528                           ; BSR set to: 15
  6529                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6530  010AAE  0100               	movlb	0	; () banked
  6531  010AB0  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6532  010AB2  D003               	goto	l548
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6536  010AB4  010F               	movlb	15	; () banked
  6537  010AB6  8F15               	bsf	21,7,b	;volatile
  6538  010AB8  D002               	goto	l5800
  6539  010ABA                     l548:
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;inc\CANlib.h: 1070: else
  6543                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6544  010ABA  010F               	movlb	15	; () banked
  6545  010ABC  9F15               	bcf	21,7,b	;volatile
  6546  010ABE                     l5800:
  6547                           
  6548                           ; BSR set to: 15
  6549                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6550  010ABE  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6551  010AC2  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6552  010AC6  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6553  010ACA  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6554  010ACE  0E16               	movlw	22
  6555  010AD0  D006               	goto	u7000
  6556  010AD2                     u7005:
  6557  010AD2  0100               	movlb	0	; () banked
  6558  010AD4  90D8               	bcf	status,0,c
  6559  010AD6  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6560  010AD8  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6561  010ADA  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6562  010ADC  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6563  010ADE                     u7000:
  6564  010ADE  2EE8               	decfsz	wreg,f,c
  6565  010AE0  D7F8               	goto	u7005
  6566  010AE2  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6567  010AE6  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6568  010AEA  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6569  010AEE  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6573  010AF2  0100               	movlb	0	; () banked
  6574  010AF4  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6575  010AF6  0100               	movlb	0	; () banked
  6576  010AF8  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6577  010AFA  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6578  010AFC  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6579  010AFE  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6583  010B00  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6584  010B04  0012               	return	
  6585  010B06                     __end_of_CANSetFilter:
  6586                           	opt stack 0
  6587                           tblptru	equ	0xFF8
  6588                           tblptrh	equ	0xFF7
  6589                           tblptrl	equ	0xFF6
  6590                           tablat	equ	0xFF5
  6591                           prodh	equ	0xFF4
  6592                           prodl	equ	0xFF3
  6593                           intcon	equ	0xFF2
  6594                           postinc0	equ	0xFEE
  6595                           wreg	equ	0xFE8
  6596                           postinc2	equ	0xFDE
  6597                           fsr2h	equ	0xFDA
  6598                           fsr2l	equ	0xFD9
  6599                           status	equ	0xFD8
  6600                           
  6601 ;; *************** function _CANOperationMode *****************
  6602 ;; Defined at:
  6603 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  mode            1    wreg     enum E16881
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  mode            1   17[BANK0 ] enum E16881
  6608 ;; Return value:  Size  Location     Type
  6609 ;;		None               void
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;Total ram usage:        1 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    3
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_CANInitialize
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text5
  6632  0165E4                     __ptext5:
  6633                           	opt stack 0
  6634  0165E4                     _CANOperationMode:
  6635                           	opt stack 25
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;incstack = 0
  6639                           ;CANOperationMode@mode stored from wreg
  6640  0165E4  0100               	movlb	0	; () banked
  6641  0165E6  6F71               	movwf	CANOperationMode@mode& (0+255),b
  6642                           
  6643                           ;inc\CANlib.h: 208: CANCON = mode;
  6644  0165E8  C071  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6645  0165EC                     l5396:
  6646  0165EC  506E               	movf	3950,w,c	;volatile
  6647  0165EE  0BE0               	andlw	224
  6648  0165F0  0100               	movlb	0	; () banked
  6649  0165F2  1971               	xorwf	CANOperationMode@mode& (0+255),w,b
  6650  0165F4  B4D8               	btfsc	status,2,c
  6651  0165F6  0012               	return	
  6652  0165F8  D7F9               	goto	l5396
  6653  0165FA                     __end_of_CANOperationMode:
  6654                           	opt stack 0
  6655                           tblptru	equ	0xFF8
  6656                           tblptrh	equ	0xFF7
  6657                           tblptrl	equ	0xFF6
  6658                           tablat	equ	0xFF5
  6659                           prodh	equ	0xFF4
  6660                           prodl	equ	0xFF3
  6661                           intcon	equ	0xFF2
  6662                           postinc0	equ	0xFEE
  6663                           wreg	equ	0xFE8
  6664                           postinc2	equ	0xFDE
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _PWR_Button_Polling *****************
  6670 ;; Defined at:
  6671 ;;		line 581 in file "RemoteCan.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		None
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    3
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text6
  6700  016574                     __ptext6:
  6701                           	opt stack 0
  6702  016574                     _PWR_Button_Polling:
  6703                           	opt stack 27
  6704                           
  6705                           ;RemoteCan.c: 582: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;incstack = 0
  6709  016574  AA81               	btfss	3969,5,c	;volatile
  6710  016576  D002               	goto	l928
  6711  016578  B24D               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6712  01657A  0012               	return	
  6713  01657C                     l928:
  6714                           
  6715                           ;RemoteCan.c: 583: wait_low_1 = 0;
  6716  01657C  924D               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6717                           
  6718                           ;RemoteCan.c: 584: if (PORTBbits.RB5 == 1) {
  6719  01657E  AA81               	btfss	3969,5,c	;volatile
  6720  016580  0012               	return	
  6721                           
  6722                           ;RemoteCan.c: 585: power_switch = ~power_switch;
  6723  016582  B84C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6724  016584  D002               	goto	u8960
  6725  016586  884C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6726  016588  D001               	goto	u8975
  6727  01658A                     u8960:
  6728  01658A  984C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6729  01658C                     u8975:
  6730                           
  6731                           ;RemoteCan.c: 586: wait_low_1 = 1;
  6732  01658C  824D               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6733  01658E  0012               	return	
  6734  016590                     __end_of_PWR_Button_Polling:
  6735                           	opt stack 0
  6736                           tblptru	equ	0xFF8
  6737                           tblptrh	equ	0xFF7
  6738                           tblptrl	equ	0xFF6
  6739                           tablat	equ	0xFF5
  6740                           prodh	equ	0xFF4
  6741                           prodl	equ	0xFF3
  6742                           intcon	equ	0xFF2
  6743                           postinc0	equ	0xFEE
  6744                           wreg	equ	0xFE8
  6745                           postinc2	equ	0xFDE
  6746                           fsr2h	equ	0xFDA
  6747                           fsr2l	equ	0xFD9
  6748                           status	equ	0xFD8
  6749                           
  6750 ;; *************** function _LCD_Parking *****************
  6751 ;; Defined at:
  6752 ;;		line 542 in file "RemoteCan.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;		None               void
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    9
  6773 ;; This function calls:
  6774 ;;		_LCD_clear
  6775 ;;		_LCD_goto_line
  6776 ;;		_LCD_initialize
  6777 ;;		_LCD_write_message
  6778 ;; This function is called by:
  6779 ;;		_main
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text7
  6784  015F7A                     __ptext7:
  6785                           	opt stack 0
  6786  015F7A                     _LCD_Parking:
  6787                           	opt stack 21
  6788                           
  6789                           ;RemoteCan.c: 543: LCD_initialize(16);
  6790                           
  6791                           ;incstack = 0
  6792  015F7A  0E10               	movlw	16
  6793  015F7C  ECE1  F0AA         	call	_LCD_initialize
  6794                           
  6795                           ;RemoteCan.c: 544: LCD_clear();
  6796  015F80  EC47  F0B2         	call	_LCD_clear	;wreg free
  6797                           
  6798                           ;RemoteCan.c: 545: LCD_goto_line(1);
  6799  015F84  0E01               	movlw	1
  6800  015F86  EC1E  F0AC         	call	_LCD_goto_line
  6801                           
  6802                           ;RemoteCan.c: 546: LCD_write_message("= PARKING MESSAGES =");
  6803  015F8A  0E40               	movlw	low STR_18
  6804  015F8C  0100               	movlb	0	; () banked
  6805  015F8E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6806  015F90  0EFF               	movlw	high STR_18
  6807  015F92  0100               	movlb	0	; () banked
  6808  015F94  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6809  015F96  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6810                           
  6811                           ;RemoteCan.c: 547: LCD_goto_line(2);
  6812  015F9A  0E02               	movlw	2
  6813  015F9C  EC1E  F0AC         	call	_LCD_goto_line
  6814                           
  6815                           ;RemoteCan.c: 548: LCD_write_message("=    Parking in    =");
  6816  015FA0  0E16               	movlw	low STR_27
  6817  015FA2  0100               	movlb	0	; () banked
  6818  015FA4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6819  015FA6  0EFF               	movlw	high STR_27
  6820  015FA8  0100               	movlb	0	; () banked
  6821  015FAA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6822  015FAC  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6823                           
  6824                           ;RemoteCan.c: 549: LCD_goto_line(3);
  6825  015FB0  0E03               	movlw	3
  6826  015FB2  EC1E  F0AC         	call	_LCD_goto_line
  6827                           
  6828                           ;RemoteCan.c: 550: LCD_write_message("=    progress...   =");
  6829  015FB6  0E2B               	movlw	low STR_28
  6830  015FB8  0100               	movlb	0	; () banked
  6831  015FBA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6832  015FBC  0EFF               	movlw	high STR_28
  6833  015FBE  0100               	movlb	0	; () banked
  6834  015FC0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6835  015FC2  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6836                           
  6837                           ;RemoteCan.c: 551: LCD_goto_line(4);
  6838  015FC6  0E04               	movlw	4
  6839  015FC8  EC1E  F0AC         	call	_LCD_goto_line
  6840                           
  6841                           ;RemoteCan.c: 552: LCD_write_message("====================");
  6842  015FCC  0E7F               	movlw	low STR_1
  6843  015FCE  0100               	movlb	0	; () banked
  6844  015FD0  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6845  015FD2  0EFF               	movlw	high STR_1
  6846  015FD4  0100               	movlb	0	; () banked
  6847  015FD6  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6848  015FD8  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6849  015FDC  0012               	return		;funcret
  6850  015FDE                     __end_of_LCD_Parking:
  6851                           	opt stack 0
  6852                           tblptru	equ	0xFF8
  6853                           tblptrh	equ	0xFF7
  6854                           tblptrl	equ	0xFF6
  6855                           tablat	equ	0xFF5
  6856                           prodh	equ	0xFF4
  6857                           prodl	equ	0xFF3
  6858                           intcon	equ	0xFF2
  6859                           postinc0	equ	0xFEE
  6860                           wreg	equ	0xFE8
  6861                           postinc2	equ	0xFDE
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function _LCD_Park *****************
  6867 ;; Defined at:
  6868 ;;		line 529 in file "RemoteCan.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;		None
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;		None               void
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;Total ram usage:        0 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    9
  6889 ;; This function calls:
  6890 ;;		_LCD_clear
  6891 ;;		_LCD_goto_line
  6892 ;;		_LCD_initialize
  6893 ;;		_LCD_write_message
  6894 ;; This function is called by:
  6895 ;;		_main
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text8
  6900  015FDE                     __ptext8:
  6901                           	opt stack 0
  6902  015FDE                     _LCD_Park:
  6903                           	opt stack 21
  6904                           
  6905                           ;RemoteCan.c: 530: LCD_initialize(16);
  6906                           
  6907                           ;incstack = 0
  6908  015FDE  0E10               	movlw	16
  6909  015FE0  ECE1  F0AA         	call	_LCD_initialize
  6910                           
  6911                           ;RemoteCan.c: 531: LCD_clear();
  6912  015FE4  EC47  F0B2         	call	_LCD_clear	;wreg free
  6913                           
  6914                           ;RemoteCan.c: 532: LCD_goto_line(1);
  6915  015FE8  0E01               	movlw	1
  6916  015FEA  EC1E  F0AC         	call	_LCD_goto_line
  6917                           
  6918                           ;RemoteCan.c: 533: LCD_write_message("= PARKING MESSAGES =");
  6919  015FEE  0E40               	movlw	low STR_18
  6920  015FF0  0100               	movlb	0	; () banked
  6921  015FF2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6922  015FF4  0EFF               	movlw	high STR_18
  6923  015FF6  0100               	movlb	0	; () banked
  6924  015FF8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6925  015FFA  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6926                           
  6927                           ;RemoteCan.c: 534: LCD_goto_line(2);
  6928  015FFE  0E02               	movlw	2
  6929  016000  EC1E  F0AC         	call	_LCD_goto_line
  6930                           
  6931                           ;RemoteCan.c: 535: LCD_write_message("- Distance REACHED -");
  6932  016004  0ED7               	movlw	low STR_23
  6933  016006  0100               	movlb	0	; () banked
  6934  016008  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6935  01600A  0EFE               	movlw	high STR_23
  6936  01600C  0100               	movlb	0	; () banked
  6937  01600E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6938  016010  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6939                           
  6940                           ;RemoteCan.c: 536: LCD_goto_line(3);
  6941  016014  0E03               	movlw	3
  6942  016016  EC1E  F0AC         	call	_LCD_goto_line
  6943                           
  6944                           ;RemoteCan.c: 537: LCD_write_message("Press the BUTTON to ");
  6945  01601A  0EAD               	movlw	low STR_24
  6946  01601C  0100               	movlb	0	; () banked
  6947  01601E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6948  016020  0EFE               	movlw	high STR_24
  6949  016022  0100               	movlb	0	; () banked
  6950  016024  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6951  016026  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6952                           
  6953                           ;RemoteCan.c: 538: LCD_goto_line(4);
  6954  01602A  0E04               	movlw	4
  6955  01602C  EC1E  F0AC         	call	_LCD_goto_line
  6956                           
  6957                           ;RemoteCan.c: 539: LCD_write_message("   start parking    ");
  6958  016030  0E59               	movlw	low STR_25
  6959  016032  0100               	movlb	0	; () banked
  6960  016034  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6961  016036  0EFE               	movlw	high STR_25
  6962  016038  0100               	movlb	0	; () banked
  6963  01603A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6964  01603C  EC14  F0B2         	call	_LCD_write_message	;wreg free
  6965  016040  0012               	return		;funcret
  6966  016042                     __end_of_LCD_Park:
  6967                           	opt stack 0
  6968                           tblptru	equ	0xFF8
  6969                           tblptrh	equ	0xFF7
  6970                           tblptrl	equ	0xFF6
  6971                           tablat	equ	0xFF5
  6972                           prodh	equ	0xFF4
  6973                           prodl	equ	0xFF3
  6974                           intcon	equ	0xFF2
  6975                           postinc0	equ	0xFEE
  6976                           wreg	equ	0xFE8
  6977                           postinc2	equ	0xFDE
  6978                           fsr2h	equ	0xFDA
  6979                           fsr2l	equ	0xFD9
  6980                           status	equ	0xFD8
  6981                           
  6982 ;; *************** function _LCD_Handler *****************
  6983 ;; Defined at:
  6984 ;;		line 448 in file "RemoteCan.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;		None               void
  6991 ;; Registers used:
  6992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;Total ram usage:        0 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:   10
  7005 ;; This function calls:
  7006 ;;		_CANisTxReady
  7007 ;;		_CANsendMessage
  7008 ;;		_LCD_clear
  7009 ;;		_LCD_goto_line
  7010 ;;		_LCD_goto_xy
  7011 ;;		_LCD_initialize
  7012 ;;		_LCD_write_integer
  7013 ;;		_LCD_write_message
  7014 ;;		_LCD_write_string
  7015 ;;		___fldiv
  7016 ;;		___xxtofl
  7017 ;;		_sprintf
  7018 ;; This function is called by:
  7019 ;;		_main
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text9
  7024  0149D6                     __ptext9:
  7025                           	opt stack 0
  7026  0149D6                     _LCD_Handler:
  7027                           	opt stack 20
  7028  0149D6                     l9334:
  7029  0149D6  EC88  F0B2         	call	_CANisTxReady	;wreg free
  7030  0149DA  06E8               	decf	wreg,f,c
  7031  0149DC  A4D8               	btfss	status,2,c
  7032  0149DE  D7FB               	goto	l9334
  7033                           
  7034                           ;RemoteCan.c: 451: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7035  0149E0  0E08               	movlw	8
  7036  0149E2  0100               	movlb	0	; () banked
  7037  0149E4  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  7038  0149E6  0E00               	movlw	0
  7039  0149E8  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7040  0149EA  0E00               	movlw	0
  7041  0149EC  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7042  0149EE  0E00               	movlw	0
  7043  0149F0  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7044  0149F2  0E35               	movlw	low _data_speed
  7045  0149F4  0100               	movlb	0	; () banked
  7046  0149F6  6F75               	movwf	CANsendMessage@data& (0+255),b
  7047  0149F8  0E01               	movlw	high _data_speed
  7048  0149FA  0100               	movlb	0	; () banked
  7049  0149FC  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  7050  0149FE  0E08               	movlw	8
  7051  014A00  0100               	movlb	0	; () banked
  7052  014A02  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  7053  014A04  0EFC               	movlw	252
  7054  014A06  0100               	movlb	0	; () banked
  7055  014A08  6F78               	movwf	CANsendMessage@flags& (0+255),b
  7056  014A0A  ECDB  F08D         	call	_CANsendMessage	;wreg free
  7057                           
  7058                           ;RemoteCan.c: 453: actual_speed_kmh = ((actual_speed) / 278.0);
  7059  014A0E  C0E1  F071         	movff	_actual_speed,___xxtofl@val	;volatile
  7060  014A12  C0E2  F072         	movff	_actual_speed+1,___xxtofl@val+1	;volatile
  7061  014A16  0100               	movlb	0	; () banked
  7062  014A18  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  7063  014A1A  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  7064  014A1C  0E00               	movlw	0
  7065  014A1E  ECDC  F0A5         	call	___xxtofl
  7066  014A22  C071  F07F         	movff	?___xxtofl,___fldiv@b
  7067  014A26  C072  F080         	movff	?___xxtofl+1,___fldiv@b+1
  7068  014A2A  C073  F081         	movff	?___xxtofl+2,___fldiv@b+2
  7069  014A2E  C074  F082         	movff	?___xxtofl+3,___fldiv@b+3
  7070  014A32  0E00               	movlw	0
  7071  014A34  0100               	movlb	0	; () banked
  7072  014A36  6F83               	movwf	___fldiv@a& (0+255),b
  7073  014A38  0E00               	movlw	0
  7074  014A3A  6F84               	movwf	(___fldiv@a+1)& (0+255),b
  7075  014A3C  0E8B               	movlw	139
  7076  014A3E  6F85               	movwf	(___fldiv@a+2)& (0+255),b
  7077  014A40  0E43               	movlw	67
  7078  014A42  6F86               	movwf	(___fldiv@a+3)& (0+255),b
  7079  014A44  ECA3  F09E         	call	___fldiv	;wreg free
  7080  014A48  C07F  F008         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7081  014A4C  C080  F009         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7082  014A50  C081  F00A         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7083  014A54  C082  F00B         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7084                           
  7085                           ;RemoteCan.c: 454: sprintf(str, "%.2f", actual_speed_kmh);
  7086  014A58  0E19               	movlw	low _str
  7087  014A5A  0100               	movlb	0	; () banked
  7088  014A5C  6FC3               	movwf	sprintf@sp& (0+255),b
  7089  014A5E  0E01               	movlw	high _str
  7090  014A60  0100               	movlb	0	; () banked
  7091  014A62  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  7092  014A64  0EFA               	movlw	low STR_5
  7093  014A66  0100               	movlb	0	; () banked
  7094  014A68  6FC5               	movwf	sprintf@f& (0+255),b
  7095  014A6A  0EFF               	movlw	high STR_5
  7096  014A6C  0100               	movlb	0	; () banked
  7097  014A6E  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  7098  014A70  C008  F0C7         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7099  014A74  C009  F0C8         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7100  014A78  C00A  F0C9         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7101  014A7C  C00B  F0CA         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7102  014A80  EC83  F085         	call	_sprintf	;wreg free
  7103                           
  7104                           ;RemoteCan.c: 455: str[11] = '\0';
  7105  014A84  0E00               	movlw	0
  7106  014A86  0101               	movlb	1	; () banked
  7107  014A88  6F24               	movwf	(_str+11)& (0+255),b	;volatile
  7108                           
  7109                           ; BSR set to: 1
  7110                           ;RemoteCan.c: 457: if (display_refresh == 1) {
  7111  014A8A  A04C               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7112  014A8C  D032               	goto	l9362
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;RemoteCan.c: 458: LCD_initialize(16);
  7116  014A8E  0E10               	movlw	16
  7117  014A90  ECE1  F0AA         	call	_LCD_initialize
  7118                           
  7119                           ;RemoteCan.c: 459: LCD_clear();
  7120  014A94  EC47  F0B2         	call	_LCD_clear	;wreg free
  7121                           
  7122                           ;RemoteCan.c: 460: LCD_goto_line(1);
  7123  014A98  0E01               	movlw	1
  7124  014A9A  EC1E  F0AC         	call	_LCD_goto_line
  7125                           
  7126                           ;RemoteCan.c: 461: LCD_write_message("=== VEHICLE DATA ===");
  7127  014A9E  0E6A               	movlw	low STR_6
  7128  014AA0  0100               	movlb	0	; () banked
  7129  014AA2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7130  014AA4  0EFF               	movlw	high STR_6
  7131  014AA6  0100               	movlb	0	; () banked
  7132  014AA8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7133  014AAA  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7134                           
  7135                           ;RemoteCan.c: 462: LCD_goto_line(2);
  7136  014AAE  0E02               	movlw	2
  7137  014AB0  EC1E  F0AC         	call	_LCD_goto_line
  7138                           
  7139                           ;RemoteCan.c: 463: LCD_write_message("Direction: ");
  7140  014AB4  0EC8               	movlw	low STR_7
  7141  014AB6  0100               	movlb	0	; () banked
  7142  014AB8  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7143  014ABA  0EFF               	movlw	high STR_7
  7144  014ABC  0100               	movlb	0	; () banked
  7145  014ABE  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7146  014AC0  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7147                           
  7148                           ;RemoteCan.c: 464: LCD_goto_line(3);
  7149  014AC4  0E03               	movlw	3
  7150  014AC6  EC1E  F0AC         	call	_LCD_goto_line
  7151                           
  7152                           ;RemoteCan.c: 465: LCD_write_message("Speed: 0.00 Km/h");
  7153  014ACA  0EA9               	movlw	low STR_8
  7154  014ACC  0100               	movlb	0	; () banked
  7155  014ACE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7156  014AD0  0EFF               	movlw	high STR_8
  7157  014AD2  0100               	movlb	0	; () banked
  7158  014AD4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7159  014AD6  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7160                           
  7161                           ;RemoteCan.c: 466: LCD_goto_line(4);
  7162  014ADA  0E04               	movlw	4
  7163  014ADC  EC1E  F0AC         	call	_LCD_goto_line
  7164                           
  7165                           ;RemoteCan.c: 470: LCD_write_message("Data: ");
  7166                           
  7167                           ;RemoteCan.c: 469: } else {
  7168                           
  7169                           ;RemoteCan.c: 468: LCD_write_message("Park assist: ");
  7170                           
  7171                           ;RemoteCan.c: 467: if (1 == 0) {
  7172  014AE0  0EE4               	movlw	low STR_10
  7173  014AE2  0100               	movlb	0	; () banked
  7174  014AE4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7175  014AE6  0EFF               	movlw	high STR_10
  7176  014AE8  0100               	movlb	0	; () banked
  7177  014AEA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7178  014AEC  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7179                           
  7180                           ;RemoteCan.c: 471: }
  7181                           ;RemoteCan.c: 472: display_refresh = 0;
  7182  014AF0  904C               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7183  014AF2                     l9362:
  7184                           
  7185                           ;RemoteCan.c: 473: }
  7186                           ;RemoteCan.c: 475: if (collision_msg == 0) {
  7187  014AF2  BE4B               	btfsc	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  7188  014AF4  D037               	goto	l897
  7189                           
  7190                           ;RemoteCan.c: 476: if (row_refresh == 1) {
  7191  014AF6  AA4C               	btfss	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7192  014AF8  D00C               	goto	l9372
  7193                           
  7194                           ;RemoteCan.c: 477: LCD_goto_line(2);
  7195  014AFA  0E02               	movlw	2
  7196  014AFC  EC1E  F0AC         	call	_LCD_goto_line
  7197                           
  7198                           ;RemoteCan.c: 478: LCD_write_message("Direction:          ");
  7199  014B00  0E05               	movlw	low STR_11
  7200  014B02  0100               	movlb	0	; () banked
  7201  014B04  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7202  014B06  0EFE               	movlw	high STR_11
  7203  014B08  0100               	movlb	0	; () banked
  7204  014B0A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7205  014B0C  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7206                           
  7207                           ;RemoteCan.c: 479: row_refresh = 0;
  7208  014B10  9A4C               	bcf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7209  014B12                     l9372:
  7210                           
  7211                           ;RemoteCan.c: 480: }
  7212                           ;RemoteCan.c: 482: LCD_goto_xy(12, 2);
  7213  014B12  0E02               	movlw	2
  7214  014B14  0100               	movlb	0	; () banked
  7215  014B16  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7216  014B18  0E0C               	movlw	12
  7217  014B1A  ECC8  F0B2         	call	_LCD_goto_xy
  7218                           
  7219                           ;RemoteCan.c: 483: if (switch_position != 0) {
  7220  014B1E  0100               	movlb	0	; () banked
  7221  014B20  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  7222  014B22  B4D8               	btfsc	status,2,c
  7223  014B24  D016               	goto	l9382
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;RemoteCan.c: 484: if (dir == 1) {
  7227  014B26  0100               	movlb	0	; () banked
  7228  014B28  05E8               	decf	_dir& (0+255),w,b	;volatile
  7229  014B2A  A4D8               	btfss	status,2,c
  7230  014B2C  D009               	goto	l9380
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;RemoteCan.c: 485: LCD_write_message("FWD ");
  7234  014B2E  0EF0               	movlw	low STR_12
  7235  014B30  0100               	movlb	0	; () banked
  7236  014B32  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7237  014B34  0EFF               	movlw	high STR_12
  7238  014B36  0100               	movlb	0	; () banked
  7239  014B38  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7240  014B3A  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7241                           
  7242                           ;RemoteCan.c: 486: } else {
  7243  014B3E  D01B               	goto	l9386
  7244  014B40                     l9380:
  7245                           
  7246                           ;RemoteCan.c: 487: LCD_write_message("BKWD");
  7247  014B40  0EF5               	movlw	low STR_13
  7248  014B42  0100               	movlb	0	; () banked
  7249  014B44  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7250  014B46  0EFF               	movlw	high STR_13
  7251  014B48  0100               	movlb	0	; () banked
  7252  014B4A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7253  014B4C  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7254                           
  7255                           ;RemoteCan.c: 488: }
  7256                           ;RemoteCan.c: 489: } else {
  7257  014B50  D012               	goto	l9386
  7258  014B52                     l9382:
  7259                           
  7260                           ;RemoteCan.c: 490: LCD_write_message("P   ");
  7261  014B52  0EEB               	movlw	low STR_14
  7262  014B54  0100               	movlb	0	; () banked
  7263  014B56  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7264  014B58  0EFF               	movlw	high STR_14
  7265  014B5A  0100               	movlb	0	; () banked
  7266  014B5C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7267  014B5E  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7268                           
  7269                           ;RemoteCan.c: 491: }
  7270                           ;RemoteCan.c: 492: } else {
  7271  014B62  D009               	goto	l9386
  7272  014B64                     l897:
  7273                           
  7274                           ;RemoteCan.c: 493: row_refresh = 1;
  7275  014B64  8A4C               	bsf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7276                           
  7277                           ;RemoteCan.c: 494: LCD_write_message("-> Safety brake ON<-");
  7278  014B66  0E01               	movlw	low STR_15
  7279  014B68  0100               	movlb	0	; () banked
  7280  014B6A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7281  014B6C  0EFF               	movlw	high STR_15
  7282  014B6E  0100               	movlb	0	; () banked
  7283  014B70  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7284  014B72  EC14  F0B2         	call	_LCD_write_message	;wreg free
  7285  014B76                     l9386:
  7286                           
  7287                           ;RemoteCan.c: 495: }
  7288                           ;RemoteCan.c: 498: LCD_goto_xy(8, 3);
  7289  014B76  0E03               	movlw	3
  7290  014B78  0100               	movlb	0	; () banked
  7291  014B7A  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7292  014B7C  0E08               	movlw	8
  7293  014B7E  ECC8  F0B2         	call	_LCD_goto_xy
  7294                           
  7295                           ;RemoteCan.c: 499: LCD_write_string(str);
  7296  014B82  0E19               	movlw	low _str
  7297  014B84  0100               	movlb	0	; () banked
  7298  014B86  6F82               	movwf	LCD_write_string@buffer& (0+255),b
  7299  014B88  0E01               	movlw	high _str
  7300  014B8A  0100               	movlb	0	; () banked
  7301  014B8C  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7302  014B8E  EC75  F0B2         	call	_LCD_write_string	;wreg free
  7303                           
  7304                           ;RemoteCan.c: 511: LCD_goto_xy(7, 4);
  7305                           
  7306                           ;RemoteCan.c: 508: }
  7307                           ;RemoteCan.c: 509: } else {
  7308                           
  7309                           ;RemoteCan.c: 507: LCD_write_message("SEARCH ");
  7310                           
  7311                           ;RemoteCan.c: 506: } else {
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;RemoteCan.c: 505: LCD_write_message("OFF    ");
  7315                           
  7316                           ;RemoteCan.c: 504: if (parking_state == 0) {
  7317                           
  7318                           ;RemoteCan.c: 503: LCD_goto_xy(14, 4);
  7319                           
  7320                           ;RemoteCan.c: 501: if (1 == 0) {
  7321  014B92  0E04               	movlw	4
  7322  014B94  0100               	movlb	0	; () banked
  7323  014B96  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7324  014B98  0E07               	movlw	7
  7325  014B9A  ECC8  F0B2         	call	_LCD_goto_xy
  7326                           
  7327                           ;RemoteCan.c: 512: LCD_write_integer(user_data, 0, 0x01);
  7328  014B9E  C026  F089         	movff	_user_data,LCD_write_integer@value	;volatile
  7329  014BA2  C027  F08A         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7330  014BA6  0E00               	movlw	0
  7331  014BA8  0100               	movlb	0	; () banked
  7332  014BAA  6F8B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7333  014BAC  0E01               	movlw	1
  7334  014BAE  0100               	movlb	0	; () banked
  7335  014BB0  6F8C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7336  014BB2  ECA6  F0A7         	call	_LCD_write_integer	;wreg free
  7337  014BB6  0012               	return	
  7338  014BB8                     __end_of_LCD_Handler:
  7339                           	opt stack 0
  7340                           tblptru	equ	0xFF8
  7341                           tblptrh	equ	0xFF7
  7342                           tblptrl	equ	0xFF6
  7343                           tablat	equ	0xFF5
  7344                           prodh	equ	0xFF4
  7345                           prodl	equ	0xFF3
  7346                           intcon	equ	0xFF2
  7347                           postinc0	equ	0xFEE
  7348                           wreg	equ	0xFE8
  7349                           postinc2	equ	0xFDE
  7350                           fsr2h	equ	0xFDA
  7351                           fsr2l	equ	0xFD9
  7352                           status	equ	0xFD8
  7353                           
  7354 ;; *************** function _sprintf *****************
  7355 ;; Defined at:
  7356 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  sp              2   99[BANK0 ] PTR unsigned char 
  7359 ;;		 -> str(12), 
  7360 ;;  f               2  101[BANK0 ] PTR const unsigned char 
  7361 ;;		 -> STR_5(5), 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  fval            4   22[BANK1 ] PTR const unsigned char 
  7364 ;;  tmpval          4   16[BANK1 ] struct .
  7365 ;;  val             4   10[BANK1 ] unsigned long 
  7366 ;;  cp              3    0        PTR const unsigned char 
  7367 ;;  prec            2   20[BANK1 ] int 
  7368 ;;  exp             2   14[BANK1 ] int 
  7369 ;;  flag            2    8[BANK1 ] unsigned short 
  7370 ;;  ap              2    6[BANK1 ] PTR void [1]
  7371 ;;		 -> ?_sprintf(2), 
  7372 ;;  len             2    0        unsigned int 
  7373 ;;  width           2    0        int 
  7374 ;;  c               1   26[BANK1 ] char 
  7375 ;;  d               1    0        unsigned char 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  2   99[BANK0 ] int 
  7378 ;; Registers used:
  7379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7385 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Totals:         0       8      27       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;Total ram usage:       35 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:    5
  7392 ;; This function calls:
  7393 ;;		___awdiv
  7394 ;;		___fladd
  7395 ;;		___flge
  7396 ;;		___flmul
  7397 ;;		___flneg
  7398 ;;		___flsub
  7399 ;;		___fltol
  7400 ;;		___lldiv
  7401 ;;		___llmod
  7402 ;;		___wmul
  7403 ;;		___xxtofl
  7404 ;;		__div_to_l_
  7405 ;;		__tdiv_to_l_
  7406 ;;		_fround
  7407 ;;		_isdigit
  7408 ;;		_scale
  7409 ;; This function is called by:
  7410 ;;		_LCD_Handler
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text10
  7415  010B06                     __ptext10:
  7416                           	opt stack 0
  7417  010B06                     _sprintf:
  7418                           	opt stack 24
  7419                           
  7420                           ;doprnt.c: 494: va_list ap;
  7421                           ;doprnt.c: 499: signed char c;
  7422                           ;doprnt.c: 501: int width;
  7423                           ;doprnt.c: 504: int prec;
  7424                           ;doprnt.c: 508: unsigned short flag;
  7425                           ;doprnt.c: 515: char d;
  7426                           ;doprnt.c: 516: double fval;
  7427                           ;doprnt.c: 517: int exp;
  7428                           ;doprnt.c: 523: union {
  7429                           ;doprnt.c: 524: unsigned long vd;
  7430                           ;doprnt.c: 525: double integ;
  7431                           ;doprnt.c: 526: } tmpval;
  7432                           ;doprnt.c: 528: unsigned long val;
  7433                           ;doprnt.c: 529: unsigned len;
  7434                           ;doprnt.c: 530: const char * cp;
  7435                           ;doprnt.c: 533: *ap = __va_start();
  7436                           
  7437                           ;incstack = 0
  7438  010B06  0EC7               	movlw	low (?_sprintf+4)
  7439  010B08  0101               	movlb	1	; () banked
  7440  010B0A  6F53               	movwf	sprintf@ap& (0+255),b
  7441  010B0C  0E00               	movlw	high (?_sprintf+4)
  7442  010B0E  0101               	movlb	1	; () banked
  7443  010B10  6F54               	movwf	(sprintf@ap+1)& (0+255),b
  7444                           
  7445                           ;doprnt.c: 536: while(c = *f++) {
  7446  010B12  EFB5  F089         	goto	l9074
  7447  010B16                     l8876:
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;doprnt.c: 538: if(c != '%')
  7451  010B16  0E25               	movlw	37
  7452  010B18  0101               	movlb	1	; () banked
  7453  010B1A  1967               	xorwf	sprintf@c& (0+255),w,b
  7454  010B1C  B4D8               	btfsc	status,2,c
  7455  010B1E  D008               	goto	l8882
  7456                           
  7457                           ; BSR set to: 1
  7458                           ;doprnt.c: 540: {
  7459                           ;doprnt.c: 541: ((*sp++ = (c)));
  7460  010B20  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7461  010B24  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7462  010B28  C167  FFDF         	movff	sprintf@c,indf2
  7463  010B2C  EFB2  F089         	goto	l9072
  7464  010B30                     l8882:
  7465                           
  7466                           ;doprnt.c: 543: }
  7467                           ;doprnt.c: 548: flag = 0;
  7468  010B30  0E00               	movlw	0
  7469  010B32  0101               	movlb	1	; () banked
  7470  010B34  6F56               	movwf	(sprintf@flag+1)& (0+255),b
  7471  010B36  0E00               	movlw	0
  7472  010B38  6F55               	movwf	sprintf@flag& (0+255),b
  7473                           
  7474                           ; BSR set to: 1
  7475                           ;doprnt.c: 611: if(*f == '.') {
  7476  010B3A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7477  010B3E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7478  010B42                     	if	0	;tblptru may be non-zero
  7479  010B42                     	endif
  7480  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7481  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  7482  010B44  6EF8               	movwf	tblptru,c
  7483  010B46                     	endif
  7484  010B46  0008               	tblrd		*
  7485  010B48  50F5               	movf	tablat,w,c
  7486  010B4A  0A2E               	xorlw	46
  7487  010B4C  A4D8               	btfss	status,2,c
  7488  010B4E  D03D               	goto	l8896
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;doprnt.c: 612: flag |= 0x4000;
  7492  010B50  0101               	movlb	1	; () banked
  7493  010B52  8D56               	bsf	(sprintf@flag+1)& (0+255),6,b
  7494                           
  7495                           ;doprnt.c: 613: f++;
  7496  010B54  0100               	movlb	0	; () banked
  7497  010B56  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7498  010B58  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;doprnt.c: 620: {
  7502                           ;doprnt.c: 621: prec = 0;
  7503  010B5A  0E00               	movlw	0
  7504  010B5C  0101               	movlb	1	; () banked
  7505  010B5E  6F62               	movwf	(sprintf@prec+1)& (0+255),b
  7506  010B60  0E00               	movlw	0
  7507  010B62  6F61               	movwf	sprintf@prec& (0+255),b
  7508                           
  7509                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7510  010B64  D025               	goto	l8894
  7511  010B66                     l8890:
  7512                           
  7513                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7514  010B66  C161  F071         	movff	sprintf@prec,___wmul@multiplier
  7515  010B6A  C162  F072         	movff	sprintf@prec+1,___wmul@multiplier+1
  7516  010B6E  0E00               	movlw	0
  7517  010B70  0100               	movlb	0	; () banked
  7518  010B72  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7519  010B74  0E0A               	movlw	10
  7520  010B76  6F73               	movwf	___wmul@multiplicand& (0+255),b
  7521  010B78  ECF9  F0B1         	call	___wmul	;wreg free
  7522  010B7C  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7523  010B80  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7524  010B84                     	if	0	;tblptru may be non-zero
  7525  010B84                     	endif
  7526  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7527  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  7528  010B86  6EF8               	movwf	tblptru,c
  7529  010B88                     	endif
  7530  010B88  0008               	tblrd		*
  7531  010B8A  50F5               	movf	tablat,w,c
  7532  010B8C  0100               	movlb	0	; () banked
  7533  010B8E  2771               	addwf	?___wmul& (0+255),f,b
  7534  010B90  0E00               	movlw	0
  7535  010B92  0100               	movlb	0	; () banked
  7536  010B94  2372               	addwfc	(?___wmul+1)& (0+255),f,b
  7537  010B96  0ED0               	movlw	208
  7538  010B98  0100               	movlb	0	; () banked
  7539  010B9A  2571               	addwf	?___wmul& (0+255),w,b
  7540  010B9C  0101               	movlb	1	; () banked
  7541  010B9E  6F61               	movwf	sprintf@prec& (0+255),b
  7542  010BA0  0EFF               	movlw	255
  7543  010BA2  0100               	movlb	0	; () banked
  7544  010BA4  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  7545  010BA6  0101               	movlb	1	; () banked
  7546  010BA8  6F62               	movwf	(sprintf@prec+1)& (0+255),b
  7547                           
  7548                           ; BSR set to: 1
  7549  010BAA  0100               	movlb	0	; () banked
  7550  010BAC  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7551  010BAE  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7552  010BB0                     l8894:
  7553  010BB0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7554  010BB4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7555  010BB8                     	if	0	;tblptru may be non-zero
  7556  010BB8                     	endif
  7557  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7558  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  7559  010BBA  6EF8               	movwf	tblptru,c
  7560  010BBC                     	endif
  7561  010BBC  0008               	tblrd		*
  7562  010BBE  50F5               	movf	tablat,w,c
  7563  010BC0  EC60  F0B2         	call	_isdigit
  7564  010BC4  A0D8               	btfss	status,0,c
  7565  010BC6  D00C               	goto	l8904
  7566  010BC8  D7CE               	goto	l8890
  7567  010BCA                     l8896:
  7568                           
  7569                           ;doprnt.c: 626: prec = 0;
  7570  010BCA  0E00               	movlw	0
  7571  010BCC  0101               	movlb	1	; () banked
  7572  010BCE  6F62               	movwf	(sprintf@prec+1)& (0+255),b
  7573  010BD0  0E00               	movlw	0
  7574  010BD2  6F61               	movwf	sprintf@prec& (0+255),b
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;doprnt.c: 628: flag |= 0x1000;
  7578  010BD4  0101               	movlb	1	; () banked
  7579  010BD6  8956               	bsf	(sprintf@flag+1)& (0+255),4,b
  7580                           
  7581                           ; BSR set to: 1
  7582                           ;doprnt.c: 630: }
  7583                           ;doprnt.c: 635: switch(c = *f++) {
  7584  010BD8  D003               	goto	l8904
  7585  010BDA                     l8900:
  7586                           
  7587                           ; BSR set to: 1
  7588                           ;doprnt.c: 663: flag |= 0x400;
  7589  010BDA  0101               	movlb	1	; () banked
  7590  010BDC  8556               	bsf	(sprintf@flag+1)& (0+255),2,b
  7591                           
  7592                           ;doprnt.c: 664: break;
  7593  010BDE  D015               	goto	l8906
  7594  010BE0                     l8904:
  7595  010BE0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7596  010BE4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7597  010BE8  0100               	movlb	0	; () banked
  7598  010BEA  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7599  010BEC  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7600  010BEE                     	if	0	;tblptru may be non-zero
  7601  010BEE                     	endif
  7602  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7603  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7604  010BF0  6EF8               	movwf	tblptru,c
  7605  010BF2                     	endif
  7606  010BF2  0008               	tblrd		*
  7607  010BF4  CFF5 F167          	movff	tablat,sprintf@c
  7608  010BF8  0101               	movlb	1	; () banked
  7609  010BFA  5167               	movf	sprintf@c& (0+255),w,b
  7610                           
  7611                           ; Switch size 1, requested type "space"
  7612                           ; Number of cases is 2, Range of values is 0 to 102
  7613                           ; switch strategies available:
  7614                           ; Name         Instructions Cycles
  7615                           ; simple_byte            7     4 (average)
  7616                           ;	Chosen strategy is simple_byte
  7617  010BFC  0A00               	xorlw	0	; case 0
  7618  010BFE  B4D8               	btfsc	status,2,c
  7619  010C00  D3C5               	goto	l9076
  7620  010C02  0A66               	xorlw	102	; case 102
  7621  010C04  B4D8               	btfsc	status,2,c
  7622  010C06  D7E9               	goto	l8900
  7623  010C08  D3B0               	goto	l9074
  7624  010C0A                     l8906:
  7625                           
  7626                           ; BSR set to: 1
  7627                           ;doprnt.c: 825: if(flag & (0x700)) {
  7628  010C0A  0E07               	movlw	7
  7629  010C0C  0101               	movlb	1	; () banked
  7630  010C0E  1556               	andwf	(sprintf@flag+1)& (0+255),w,b
  7631  010C10  B4D8               	btfsc	status,2,c
  7632  010C12  D353               	goto	l9054
  7633                           
  7634                           ; BSR set to: 1
  7635                           ;doprnt.c: 827: if(flag & 0x1000)
  7636  010C14  0101               	movlb	1	; () banked
  7637  010C16  A956               	btfss	(sprintf@flag+1)& (0+255),4,b
  7638  010C18  D005               	goto	l8912
  7639                           
  7640                           ; BSR set to: 1
  7641                           ;doprnt.c: 829: prec = 6;
  7642  010C1A  0E00               	movlw	0
  7643  010C1C  0101               	movlb	1	; () banked
  7644  010C1E  6F62               	movwf	(sprintf@prec+1)& (0+255),b
  7645  010C20  0E06               	movlw	6
  7646  010C22  6F61               	movwf	sprintf@prec& (0+255),b
  7647  010C24                     l8912:
  7648                           
  7649                           ; BSR set to: 1
  7650                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7651  010C24  C153  FFD9         	movff	sprintf@ap,fsr2l
  7652  010C28  C154  FFDA         	movff	sprintf@ap+1,fsr2h
  7653  010C2C  CFDE F163          	movff	postinc2,sprintf@fval
  7654  010C30  CFDE F164          	movff	postinc2,sprintf@fval+1
  7655  010C34  CFDE F165          	movff	postinc2,sprintf@fval+2
  7656  010C38  CFDE F166          	movff	postinc2,sprintf@fval+3
  7657                           
  7658                           ; BSR set to: 1
  7659  010C3C  0E04               	movlw	4
  7660  010C3E  0101               	movlb	1	; () banked
  7661  010C40  2753               	addwf	sprintf@ap& (0+255),f,b
  7662  010C42  0E00               	movlw	0
  7663  010C44  2354               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7664                           
  7665                           ; BSR set to: 1
  7666                           ;doprnt.c: 831: if(fval < 0.0) {
  7667  010C46  0101               	movlb	1	; () banked
  7668  010C48  AF66               	btfss	(sprintf@fval+3)& (0+255),7,b
  7669  010C4A  D015               	goto	l8922
  7670                           
  7671                           ; BSR set to: 1
  7672                           ;doprnt.c: 832: fval = -fval;
  7673  010C4C  C163  F098         	movff	sprintf@fval,___flneg@f1
  7674  010C50  C164  F099         	movff	sprintf@fval+1,___flneg@f1+1
  7675  010C54  C165  F09A         	movff	sprintf@fval+2,___flneg@f1+2
  7676  010C58  C166  F09B         	movff	sprintf@fval+3,___flneg@f1+3
  7677  010C5C  ECDD  F0B1         	call	___flneg	;wreg free
  7678  010C60  C098  F163         	movff	?___flneg,sprintf@fval
  7679  010C64  C099  F164         	movff	?___flneg+1,sprintf@fval+1
  7680  010C68  C09A  F165         	movff	?___flneg+2,sprintf@fval+2
  7681  010C6C  C09B  F166         	movff	?___flneg+3,sprintf@fval+3
  7682                           
  7683                           ;doprnt.c: 833: flag |= 0x03;
  7684  010C70  0E03               	movlw	3
  7685  010C72  0101               	movlb	1	; () banked
  7686  010C74  1355               	iorwf	sprintf@flag& (0+255),f,b
  7687  010C76                     l8922:
  7688                           
  7689                           ; BSR set to: 1
  7690                           ;doprnt.c: 834: }
  7691                           ;doprnt.c: 835: exp = 0;
  7692  010C76  0E00               	movlw	0
  7693  010C78  0101               	movlb	1	; () banked
  7694  010C7A  6F5C               	movwf	(sprintf@exp+1)& (0+255),b
  7695  010C7C  0E00               	movlw	0
  7696  010C7E  6F5B               	movwf	sprintf@exp& (0+255),b
  7697                           
  7698                           ; BSR set to: 1
  7699                           ;doprnt.c: 836: if( fval!=0) {
  7700  010C80  0101               	movlb	1	; () banked
  7701  010C82  5163               	movf	sprintf@fval& (0+255),w,b
  7702  010C84  0101               	movlb	1	; () banked
  7703  010C86  1164               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7704  010C88  0101               	movlb	1	; () banked
  7705  010C8A  1165               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7706  010C8C  0101               	movlb	1	; () banked
  7707  010C8E  1166               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7708  010C90  B4D8               	btfsc	status,2,c
  7709  010C92  D08E               	goto	l8950
  7710                           
  7711                           ; BSR set to: 1
  7712                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7713  010C94  0101               	movlb	1	; () banked
  7714  010C96  3565               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7715  010C98  3566               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7716  010C9A  0F82               	addlw	130
  7717  010C9C  0101               	movlb	1	; () banked
  7718  010C9E  6F5B               	movwf	sprintf@exp& (0+255),b
  7719  010CA0  0101               	movlb	1	; () banked
  7720  010CA2  6B5C               	clrf	(sprintf@exp+1)& (0+255),b
  7721  010CA4  0EFF               	movlw	255
  7722  010CA6  235C               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7723                           
  7724                           ; BSR set to: 1
  7725                           ;doprnt.c: 838: exp--;
  7726  010CA8  0101               	movlb	1	; () banked
  7727  010CAA  075B               	decf	sprintf@exp& (0+255),f,b
  7728  010CAC  A0D8               	btfss	status,0,c
  7729  010CAE  075C               	decf	(sprintf@exp+1)& (0+255),f,b
  7730                           
  7731                           ; BSR set to: 1
  7732                           ;doprnt.c: 839: exp *= 3;
  7733  010CB0  C15B  F071         	movff	sprintf@exp,___wmul@multiplier
  7734  010CB4  C15C  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
  7735  010CB8  0E00               	movlw	0
  7736  010CBA  0100               	movlb	0	; () banked
  7737  010CBC  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7738  010CBE  0E03               	movlw	3
  7739  010CC0  6F73               	movwf	___wmul@multiplicand& (0+255),b
  7740  010CC2  ECF9  F0B1         	call	___wmul	;wreg free
  7741  010CC6  C071  F15B         	movff	?___wmul,sprintf@exp
  7742  010CCA  C072  F15C         	movff	?___wmul+1,sprintf@exp+1
  7743                           
  7744                           ;doprnt.c: 840: exp /= 10;
  7745  010CCE  C15B  F077         	movff	sprintf@exp,___awdiv@dividend
  7746  010CD2  C15C  F078         	movff	sprintf@exp+1,___awdiv@dividend+1
  7747  010CD6  0E00               	movlw	0
  7748  010CD8  0100               	movlb	0	; () banked
  7749  010CDA  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  7750  010CDC  0E0A               	movlw	10
  7751  010CDE  6F79               	movwf	___awdiv@divisor& (0+255),b
  7752  010CE0  EC94  F0AC         	call	___awdiv	;wreg free
  7753  010CE4  C077  F15B         	movff	?___awdiv,sprintf@exp
  7754  010CE8  C078  F15C         	movff	?___awdiv+1,sprintf@exp+1
  7755                           
  7756                           ;doprnt.c: 841: if(exp < 0)
  7757  010CEC  0101               	movlb	1	; () banked
  7758  010CEE  AF5C               	btfss	(sprintf@exp+1)& (0+255),7,b
  7759  010CF0  D004               	goto	l8938
  7760                           
  7761                           ; BSR set to: 1
  7762                           ;doprnt.c: 842: exp--;
  7763  010CF2  0101               	movlb	1	; () banked
  7764  010CF4  075B               	decf	sprintf@exp& (0+255),f,b
  7765  010CF6  A0D8               	btfss	status,0,c
  7766  010CF8  075C               	decf	(sprintf@exp+1)& (0+255),f,b
  7767  010CFA                     l8938:
  7768                           
  7769                           ; BSR set to: 1
  7770                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7771  010CFA  0101               	movlb	1	; () banked
  7772  010CFC  515B               	movf	sprintf@exp& (0+255),w,b
  7773  010CFE  0800               	sublw	0
  7774  010D00  ECE9  F094         	call	_scale
  7775  010D04  C098  F15D         	movff	?_scale,sprintf@tmpval
  7776  010D08  C099  F15E         	movff	?_scale+1,sprintf@tmpval+1
  7777  010D0C  C09A  F15F         	movff	?_scale+2,sprintf@tmpval+2
  7778  010D10  C09B  F160         	movff	?_scale+3,sprintf@tmpval+3
  7779                           
  7780                           ;doprnt.c: 847: tmpval.integ *= fval;
  7781  010D14  C15D  F07F         	movff	sprintf@tmpval,___flmul@b
  7782  010D18  C15E  F080         	movff	sprintf@tmpval+1,___flmul@b+1
  7783  010D1C  C15F  F081         	movff	sprintf@tmpval+2,___flmul@b+2
  7784  010D20  C160  F082         	movff	sprintf@tmpval+3,___flmul@b+3
  7785  010D24  C163  F083         	movff	sprintf@fval,___flmul@a
  7786  010D28  C164  F084         	movff	sprintf@fval+1,___flmul@a+1
  7787  010D2C  C165  F085         	movff	sprintf@fval+2,___flmul@a+2
  7788  010D30  C166  F086         	movff	sprintf@fval+3,___flmul@a+3
  7789  010D34  EC50  F09C         	call	___flmul	;wreg free
  7790  010D38  C07F  F15D         	movff	?___flmul,sprintf@tmpval
  7791  010D3C  C080  F15E         	movff	?___flmul+1,sprintf@tmpval+1
  7792  010D40  C081  F15F         	movff	?___flmul+2,sprintf@tmpval+2
  7793  010D44  C082  F160         	movff	?___flmul+3,sprintf@tmpval+3
  7794                           
  7795                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7796  010D48  C15D  F071         	movff	sprintf@tmpval,___flge@ff1
  7797  010D4C  C15E  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7798  010D50  C15F  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7799  010D54  C160  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7800  010D58  0E00               	movlw	0
  7801  010D5A  0100               	movlb	0	; () banked
  7802  010D5C  6F75               	movwf	___flge@ff2& (0+255),b
  7803  010D5E  0E00               	movlw	0
  7804  010D60  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7805  010D62  0E80               	movlw	128
  7806  010D64  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7807  010D66  0E3F               	movlw	63
  7808  010D68  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7809  010D6A  EC55  F0A9         	call	___flge	;wreg free
  7810  010D6E  0100               	movlb	0	; () banked
  7811  010D70  B0D8               	btfsc	status,0,c
  7812  010D72  D005               	goto	l8946
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;doprnt.c: 849: exp--;
  7816  010D74  0101               	movlb	1	; () banked
  7817  010D76  075B               	decf	sprintf@exp& (0+255),f,b
  7818  010D78  A0D8               	btfss	status,0,c
  7819  010D7A  075C               	decf	(sprintf@exp+1)& (0+255),f,b
  7820  010D7C  D019               	goto	l8950
  7821  010D7E                     l8946:
  7822                           
  7823                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7824  010D7E  C15D  F071         	movff	sprintf@tmpval,___flge@ff1
  7825  010D82  C15E  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7826  010D86  C15F  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7827  010D8A  C160  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7828  010D8E  0E00               	movlw	0
  7829  010D90  0100               	movlb	0	; () banked
  7830  010D92  6F75               	movwf	___flge@ff2& (0+255),b
  7831  010D94  0E00               	movlw	0
  7832  010D96  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7833  010D98  0E20               	movlw	32
  7834  010D9A  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7835  010D9C  0E41               	movlw	65
  7836  010D9E  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7837  010DA0  EC55  F0A9         	call	___flge	;wreg free
  7838  010DA4  0100               	movlb	0	; () banked
  7839  010DA6  A0D8               	btfss	status,0,c
  7840  010DA8  D003               	goto	l8950
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;doprnt.c: 851: exp++;
  7844  010DAA  0101               	movlb	1	; () banked
  7845  010DAC  4B5B               	infsnz	sprintf@exp& (0+255),f,b
  7846  010DAE  2B5C               	incf	(sprintf@exp+1)& (0+255),f,b
  7847  010DB0                     l8950:
  7848                           
  7849                           ;doprnt.c: 852: }
  7850                           ;doprnt.c: 1112: if(prec <= 12)
  7851  010DB0  0101               	movlb	1	; () banked
  7852  010DB2  BF62               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7853  010DB4  D008               	goto	l8952
  7854  010DB6  0101               	movlb	1	; () banked
  7855  010DB8  5162               	movf	(sprintf@prec+1)& (0+255),w,b
  7856  010DBA  E123               	bnz	l8954
  7857  010DBC  0E0D               	movlw	13
  7858  010DBE  0101               	movlb	1	; () banked
  7859  010DC0  5D61               	subwf	sprintf@prec& (0+255),w,b
  7860  010DC2  B0D8               	btfsc	status,0,c
  7861  010DC4  D01E               	goto	l8954
  7862  010DC6                     l8952:
  7863                           
  7864                           ; BSR set to: 1
  7865                           ;doprnt.c: 1113: fval += fround(prec);
  7866  010DC6  C163  F0A5         	movff	sprintf@fval,___fladd@b
  7867  010DCA  C164  F0A6         	movff	sprintf@fval+1,___fladd@b+1
  7868  010DCE  C165  F0A7         	movff	sprintf@fval+2,___fladd@b+2
  7869  010DD2  C166  F0A8         	movff	sprintf@fval+3,___fladd@b+3
  7870  010DD6  0101               	movlb	1	; () banked
  7871  010DD8  5161               	movf	sprintf@prec& (0+255),w,b
  7872  010DDA  EC52  F0A2         	call	_fround
  7873  010DDE  C098  F0A9         	movff	?_fround,___fladd@a
  7874  010DE2  C099  F0AA         	movff	?_fround+1,___fladd@a+1
  7875  010DE6  C09A  F0AB         	movff	?_fround+2,___fladd@a+2
  7876  010DEA  C09B  F0AC         	movff	?_fround+3,___fladd@a+3
  7877  010DEE  ECFC  F099         	call	___fladd	;wreg free
  7878  010DF2  C0A5  F163         	movff	?___fladd,sprintf@fval
  7879  010DF6  C0A6  F164         	movff	?___fladd+1,sprintf@fval+1
  7880  010DFA  C0A7  F165         	movff	?___fladd+2,sprintf@fval+2
  7881  010DFE  C0A8  F166         	movff	?___fladd+3,sprintf@fval+3
  7882  010E02                     l8954:
  7883                           
  7884                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7885  010E02  0101               	movlb	1	; () banked
  7886  010E04  BF5C               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7887  010E06  D008               	goto	l8956
  7888  010E08  0101               	movlb	1	; () banked
  7889  010E0A  515C               	movf	(sprintf@exp+1)& (0+255),w,b
  7890  010E0C  E12E               	bnz	l8962
  7891  010E0E  0E0A               	movlw	10
  7892  010E10  0101               	movlb	1	; () banked
  7893  010E12  5D5B               	subwf	sprintf@exp& (0+255),w,b
  7894  010E14  B0D8               	btfsc	status,0,c
  7895  010E16  D029               	goto	l8962
  7896  010E18                     l8956:
  7897                           
  7898                           ; BSR set to: 1
  7899  010E18  0101               	movlb	1	; () banked
  7900  010E1A  5163               	movf	sprintf@fval& (0+255),w,b
  7901  010E1C  0101               	movlb	1	; () banked
  7902  010E1E  1164               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7903  010E20  0101               	movlb	1	; () banked
  7904  010E22  1165               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7905  010E24  0101               	movlb	1	; () banked
  7906  010E26  1166               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7907  010E28  B4D8               	btfsc	status,2,c
  7908  010E2A  D06D               	goto	l8976
  7909                           
  7910                           ; BSR set to: 1
  7911  010E2C  C163  F0B9         	movff	sprintf@fval,___fltol@f1
  7912  010E30  C164  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  7913  010E34  C165  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  7914  010E38  C166  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  7915  010E3C  EC98  F0AB         	call	___fltol	;wreg free
  7916  010E40  0100               	movlb	0	; () banked
  7917  010E42  51B9               	movf	?___fltol& (0+255),w,b
  7918  010E44  0100               	movlb	0	; () banked
  7919  010E46  11BA               	iorwf	(?___fltol+1)& (0+255),w,b
  7920  010E48  0100               	movlb	0	; () banked
  7921  010E4A  11BB               	iorwf	(?___fltol+2)& (0+255),w,b
  7922  010E4C  0100               	movlb	0	; () banked
  7923  010E4E  11BC               	iorwf	(?___fltol+3)& (0+255),w,b
  7924  010E50  A4D8               	btfss	status,2,c
  7925  010E52  D059               	goto	l8976
  7926                           
  7927                           ; BSR set to: 0
  7928  010E54  0101               	movlb	1	; () banked
  7929  010E56  BF5C               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7930  010E58  D056               	goto	l8976
  7931  010E5A  0101               	movlb	1	; () banked
  7932  010E5C  515C               	movf	(sprintf@exp+1)& (0+255),w,b
  7933  010E5E  E105               	bnz	l8962
  7934  010E60  0E02               	movlw	2
  7935  010E62  0101               	movlb	1	; () banked
  7936  010E64  5D5B               	subwf	sprintf@exp& (0+255),w,b
  7937  010E66  A0D8               	btfss	status,0,c
  7938  010E68  D04E               	goto	l8976
  7939  010E6A                     l8962:
  7940                           
  7941                           ; BSR set to: 1
  7942                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7943  010E6A  C15D  F071         	movff	sprintf@tmpval,___flge@ff1
  7944  010E6E  C15E  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7945  010E72  C15F  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7946  010E76  C160  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7947  010E7A  0E5F               	movlw	95
  7948  010E7C  0100               	movlb	0	; () banked
  7949  010E7E  6F75               	movwf	___flge@ff2& (0+255),b
  7950  010E80  0E70               	movlw	112
  7951  010E82  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7952  010E84  0E89               	movlw	137
  7953  010E86  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7954  010E88  0E40               	movlw	64
  7955  010E8A  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7956  010E8C  EC55  F0A9         	call	___flge	;wreg free
  7957  010E90  0100               	movlb	0	; () banked
  7958  010E92  B0D8               	btfsc	status,0,c
  7959  010E94  D003               	goto	l8966
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7963  010E96  0101               	movlb	1	; () banked
  7964  010E98  0EF7               	movlw	247
  7965  010E9A  D002               	goto	L4
  7966  010E9C                     l8966:
  7967                           
  7968                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7969  010E9C  0101               	movlb	1	; () banked
  7970  010E9E  0EF8               	movlw	248
  7971  010EA0                     L4:
  7972  010EA0  275B               	addwf	sprintf@exp& (0+255),f,b
  7973  010EA2  0EFF               	movlw	255
  7974  010EA4  235C               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7978                           
  7979                           ; BSR set to: 1
  7980  010EA6  0101               	movlb	1	; () banked
  7981  010EA8  515B               	movf	sprintf@exp& (0+255),w,b
  7982  010EAA  ECE9  F094         	call	_scale
  7983  010EAE  C098  F15D         	movff	?_scale,sprintf@tmpval
  7984  010EB2  C099  F15E         	movff	?_scale+1,sprintf@tmpval+1
  7985  010EB6  C09A  F15F         	movff	?_scale+2,sprintf@tmpval+2
  7986  010EBA  C09B  F160         	movff	?_scale+3,sprintf@tmpval+3
  7987  010EBE  C163  F071         	movff	sprintf@fval,__div_to_l_@f1
  7988  010EC2  C164  F072         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7989  010EC6  C165  F073         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7990  010ECA  C166  F074         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7991  010ECE  C15D  F075         	movff	sprintf@tmpval,__div_to_l_@f2
  7992  010ED2  C15E  F076         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7993  010ED6  C15F  F077         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7994  010EDA  C160  F078         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7995  010EDE  EC1D  F0AA         	call	__div_to_l_	;wreg free
  7996  010EE2  C071  F157         	movff	?__div_to_l_,sprintf@val
  7997  010EE6  C072  F158         	movff	?__div_to_l_+1,sprintf@val+1
  7998  010EEA  C073  F159         	movff	?__div_to_l_+2,sprintf@val+2
  7999  010EEE  C074  F15A         	movff	?__div_to_l_+3,sprintf@val+3
  8000                           
  8001                           ;doprnt.c: 1129: fval = 0.0;
  8002  010EF2  0E00               	movlw	0
  8003  010EF4  0101               	movlb	1	; () banked
  8004  010EF6  6F63               	movwf	sprintf@fval& (0+255),b
  8005  010EF8  0E00               	movlw	0
  8006  010EFA  6F64               	movwf	(sprintf@fval+1)& (0+255),b
  8007  010EFC  0E00               	movlw	0
  8008  010EFE  6F65               	movwf	(sprintf@fval+2)& (0+255),b
  8009  010F00  0E00               	movlw	0
  8010  010F02  6F66               	movwf	(sprintf@fval+3)& (0+255),b
  8011                           
  8012                           ;doprnt.c: 1130: } else {
  8013  010F04  D03C               	goto	l8980
  8014  010F06                     l8976:
  8015                           
  8016                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8017  010F06  C163  F0B9         	movff	sprintf@fval,___fltol@f1
  8018  010F0A  C164  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  8019  010F0E  C165  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  8020  010F12  C166  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  8021  010F16  EC98  F0AB         	call	___fltol	;wreg free
  8022  010F1A  C0B9  F157         	movff	?___fltol,sprintf@val
  8023  010F1E  C0BA  F158         	movff	?___fltol+1,sprintf@val+1
  8024  010F22  C0BB  F159         	movff	?___fltol+2,sprintf@val+2
  8025  010F26  C0BC  F15A         	movff	?___fltol+3,sprintf@val+3
  8026                           
  8027                           ;doprnt.c: 1132: fval -= (double)val;
  8028  010F2A  C163  F0B9         	movff	sprintf@fval,___flsub@b
  8029  010F2E  C164  F0BA         	movff	sprintf@fval+1,___flsub@b+1
  8030  010F32  C165  F0BB         	movff	sprintf@fval+2,___flsub@b+2
  8031  010F36  C166  F0BC         	movff	sprintf@fval+3,___flsub@b+3
  8032  010F3A  C157  F071         	movff	sprintf@val,___xxtofl@val
  8033  010F3E  C158  F072         	movff	sprintf@val+1,___xxtofl@val+1
  8034  010F42  C159  F073         	movff	sprintf@val+2,___xxtofl@val+2
  8035  010F46  C15A  F074         	movff	sprintf@val+3,___xxtofl@val+3
  8036  010F4A  0E00               	movlw	0
  8037  010F4C  ECDC  F0A5         	call	___xxtofl
  8038  010F50  C071  F0BD         	movff	?___xxtofl,___flsub@a
  8039  010F54  C072  F0BE         	movff	?___xxtofl+1,___flsub@a+1
  8040  010F58  C073  F0BF         	movff	?___xxtofl+2,___flsub@a+2
  8041  010F5C  C074  F0C0         	movff	?___xxtofl+3,___flsub@a+3
  8042  010F60  EC38  F0B1         	call	___flsub	;wreg free
  8043  010F64  C0B9  F163         	movff	?___flsub,sprintf@fval
  8044  010F68  C0BA  F164         	movff	?___flsub+1,sprintf@fval+1
  8045  010F6C  C0BB  F165         	movff	?___flsub+2,sprintf@fval+2
  8046  010F70  C0BC  F166         	movff	?___flsub+3,sprintf@fval+3
  8047                           
  8048                           ;doprnt.c: 1133: exp = 0;
  8049  010F74  0E00               	movlw	0
  8050  010F76  0101               	movlb	1	; () banked
  8051  010F78  6F5C               	movwf	(sprintf@exp+1)& (0+255),b
  8052  010F7A  0E00               	movlw	0
  8053  010F7C  6F5B               	movwf	sprintf@exp& (0+255),b
  8054  010F7E                     l8980:
  8055                           
  8056                           ; BSR set to: 1
  8057                           ;doprnt.c: 1134: }
  8058                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8059  010F7E  0E01               	movlw	1
  8060  010F80  0101               	movlb	1	; () banked
  8061  010F82  6F67               	movwf	sprintf@c& (0+255),b
  8062  010F84                     l8982:
  8063                           
  8064                           ; BSR set to: 1
  8065  010F84  0E0A               	movlw	10
  8066  010F86  0101               	movlb	1	; () banked
  8067  010F88  1967               	xorwf	sprintf@c& (0+255),w,b
  8068  010F8A  B4D8               	btfsc	status,2,c
  8069  010F8C  D021               	goto	l8994
  8070                           
  8071                           ; BSR set to: 1
  8072                           ;doprnt.c: 1137: if(val < dpowers[c])
  8073                           
  8074                           ; BSR set to: 1
  8075                           
  8076                           ; BSR set to: 1
  8077  010F8E  0101               	movlb	1	; () banked
  8078  010F90  5167               	movf	sprintf@c& (0+255),w,b
  8079  010F92  0D04               	mullw	4
  8080  010F94  0EDD               	movlw	low _dpowers
  8081  010F96  24F3               	addwf	prodl,w,c
  8082  010F98  6EF6               	movwf	tblptrl,c
  8083  010F9A  0EFD               	movlw	high _dpowers
  8084  010F9C  20F4               	addwfc	prodh,w,c
  8085  010F9E  6EF7               	movwf	tblptrh,c
  8086  010FA0                     	if	1	;There are 3 active tblptr bytes
  8087  010FA0  6AF8               	clrf	tblptru,c
  8088  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  8089  010FA4  22F8               	addwfc	tblptru,f,c
  8090  010FA6                     	endif
  8091  010FA6  0009               	tblrd		*+
  8092  010FA8  50F5               	movf	tablat,w,c
  8093  010FAA  0101               	movlb	1	; () banked
  8094  010FAC  5D57               	subwf	sprintf@val& (0+255),w,b
  8095  010FAE  0009               	tblrd		*+
  8096  010FB0  50F5               	movf	tablat,w,c
  8097  010FB2  0101               	movlb	1	; () banked
  8098  010FB4  5958               	subwfb	(sprintf@val+1)& (0+255),w,b
  8099  010FB6  0009               	tblrd		*+
  8100  010FB8  50F5               	movf	tablat,w,c
  8101  010FBA  0101               	movlb	1	; () banked
  8102  010FBC  5959               	subwfb	(sprintf@val+2)& (0+255),w,b
  8103  010FBE  0009               	tblrd		*+
  8104  010FC0  50F5               	movf	tablat,w,c
  8105  010FC2  0101               	movlb	1	; () banked
  8106  010FC4  595A               	subwfb	(sprintf@val+3)& (0+255),w,b
  8107  010FC6  A0D8               	btfss	status,0,c
  8108  010FC8  D003               	goto	l8994
  8109                           
  8110                           ; BSR set to: 1
  8111                           
  8112                           ; BSR set to: 1
  8113                           
  8114                           ; BSR set to: 1
  8115                           ;doprnt.c: 1138: break;
  8116  010FCA  0101               	movlb	1	; () banked
  8117  010FCC  2B67               	incf	sprintf@c& (0+255),f,b
  8118  010FCE  D7DA               	goto	l8982
  8119  010FD0                     l8994:
  8120                           
  8121                           ; BSR set to: 1
  8122                           ;doprnt.c: 1175: {
  8123                           ;doprnt.c: 1188: if(flag & 0x03)
  8124  010FD0  0E03               	movlw	3
  8125  010FD2  0101               	movlb	1	; () banked
  8126  010FD4  1555               	andwf	sprintf@flag& (0+255),w,b
  8127  010FD6  0101               	movlb	1	; () banked
  8128  010FD8  6F4D               	movwf	??_sprintf& (0+255),b
  8129  010FDA  0E00               	movlw	0
  8130  010FDC  0101               	movlb	1	; () banked
  8131  010FDE  1556               	andwf	(sprintf@flag+1)& (0+255),w,b
  8132  010FE0  0101               	movlb	1	; () banked
  8133  010FE2  6F4E               	movwf	(??_sprintf+1)& (0+255),b
  8134  010FE4  0101               	movlb	1	; () banked
  8135  010FE6  514D               	movf	??_sprintf& (0+255),w,b
  8136  010FE8  0101               	movlb	1	; () banked
  8137  010FEA  114E               	iorwf	(??_sprintf+1)& (0+255),w,b
  8138  010FEC  B4D8               	btfsc	status,2,c
  8139  010FEE  D058               	goto	l9008
  8140                           
  8141                           ; BSR set to: 1
  8142                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8143  010FF0  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8144  010FF4  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8145  010FF8  0E2D               	movlw	45
  8146  010FFA  D050               	goto	L5
  8147  010FFC                     l8998:
  8148                           
  8149                           ; BSR set to: 1
  8150  010FFC  0100               	movlb	0	; () banked
  8151  010FFE  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8152  011000  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;doprnt.c: 1195: }
  8156                           ;doprnt.c: 1196: while(c--) {
  8157  011002  D04E               	goto	l9008
  8158  011004                     l9000:
  8159                           
  8160                           ;doprnt.c: 1200: {
  8161                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8162  011004  C157  F071         	movff	sprintf@val,___lldiv@dividend
  8163  011008  C158  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8164  01100C  C159  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8165  011010  C15A  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8166  011014  0101               	movlb	1	; () banked
  8167  011016  5167               	movf	sprintf@c& (0+255),w,b
  8168  011018  0D04               	mullw	4
  8169  01101A  0EDD               	movlw	low _dpowers
  8170  01101C  24F3               	addwf	prodl,w,c
  8171  01101E  6EF6               	movwf	tblptrl,c
  8172  011020  0EFD               	movlw	high _dpowers
  8173  011022  20F4               	addwfc	prodh,w,c
  8174  011024  6EF7               	movwf	tblptrh,c
  8175  011026                     	if	1	;There are 3 active tblptr bytes
  8176  011026  6AF8               	clrf	tblptru,c
  8177  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  8178  01102A  22F8               	addwfc	tblptru,f,c
  8179  01102C                     	endif
  8180  01102C  0009               	tblrd		*+
  8181  01102E  CFF5 F075          	movff	tablat,___lldiv@divisor
  8182  011032  0009               	tblrd		*+
  8183  011034  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8184  011038  0009               	tblrd		*+
  8185  01103A  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8186  01103E  000A               	tblrd		*-
  8187  011040  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8188  011044  EC52  F0AD         	call	___lldiv	;wreg free
  8189  011048  C071  F15D         	movff	?___lldiv,sprintf@tmpval
  8190  01104C  C072  F15E         	movff	?___lldiv+1,sprintf@tmpval+1
  8191  011050  C073  F15F         	movff	?___lldiv+2,sprintf@tmpval+2
  8192  011054  C074  F160         	movff	?___lldiv+3,sprintf@tmpval+3
  8193                           
  8194                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8195  011058  C15D  F071         	movff	sprintf@tmpval,___llmod@dividend
  8196  01105C  C15E  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8197  011060  C15F  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8198  011064  C160  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8199  011068  0E0A               	movlw	10
  8200  01106A  0100               	movlb	0	; () banked
  8201  01106C  6F75               	movwf	___llmod@divisor& (0+255),b
  8202  01106E  0E00               	movlw	0
  8203  011070  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8204  011072  0E00               	movlw	0
  8205  011074  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8206  011076  0E00               	movlw	0
  8207  011078  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8208  01107A  ECB0  F0AE         	call	___llmod	;wreg free
  8209  01107E  C071  F15D         	movff	?___llmod,sprintf@tmpval
  8210  011082  C072  F15E         	movff	?___llmod+1,sprintf@tmpval+1
  8211  011086  C073  F15F         	movff	?___llmod+2,sprintf@tmpval+2
  8212  01108A  C074  F160         	movff	?___llmod+3,sprintf@tmpval+3
  8213                           
  8214                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8215  01108E  0101               	movlb	1	; () banked
  8216  011090  515D               	movf	sprintf@tmpval& (0+255),w,b
  8217  011092  0F30               	addlw	48
  8218  011094  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8219  011098  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8220  01109C                     L5:
  8221  01109C  6EDF               	movwf	indf2,c
  8222  01109E  D7AE               	goto	l8998
  8223  0110A0                     l9008:
  8224  0110A0  0101               	movlb	1	; () banked
  8225  0110A2  0767               	decf	sprintf@c& (0+255),f,b
  8226  0110A4  0101               	movlb	1	; () banked
  8227  0110A6  2967               	incf	sprintf@c& (0+255),w,b
  8228  0110A8  B4D8               	btfsc	status,2,c
  8229  0110AA  D00E               	goto	l9016
  8230  0110AC  D7AB               	goto	l9000
  8231  0110AE                     l9010:
  8232                           
  8233                           ; BSR set to: 1
  8234                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8235  0110AE  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8236  0110B2  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8237  0110B6  0E30               	movlw	48
  8238  0110B8  6EDF               	movwf	indf2,c
  8239                           
  8240                           ; BSR set to: 1
  8241  0110BA  0100               	movlb	0	; () banked
  8242  0110BC  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8243  0110BE  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;doprnt.c: 1209: exp--;
  8247  0110C0  0101               	movlb	1	; () banked
  8248  0110C2  075B               	decf	sprintf@exp& (0+255),f,b
  8249  0110C4  A0D8               	btfss	status,0,c
  8250  0110C6  075C               	decf	(sprintf@exp+1)& (0+255),f,b
  8251  0110C8                     l9016:
  8252                           
  8253                           ; BSR set to: 1
  8254  0110C8  0101               	movlb	1	; () banked
  8255  0110CA  BF5C               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8256  0110CC  D007               	goto	l9018
  8257  0110CE  0101               	movlb	1	; () banked
  8258  0110D0  515C               	movf	(sprintf@exp+1)& (0+255),w,b
  8259  0110D2  E1ED               	bnz	l9010
  8260  0110D4  0101               	movlb	1	; () banked
  8261  0110D6  055B               	decf	sprintf@exp& (0+255),w,b
  8262  0110D8  B0D8               	btfsc	status,0,c
  8263  0110DA  D7E9               	goto	l9010
  8264  0110DC                     l9018:
  8265                           
  8266                           ; BSR set to: 1
  8267                           ;doprnt.c: 1210: }
  8268                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8269  0110DC  0101               	movlb	1	; () banked
  8270  0110DE  BF62               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8271  0110E0  D00C               	goto	l1050
  8272  0110E2  0101               	movlb	1	; () banked
  8273  0110E4  5162               	movf	(sprintf@prec+1)& (0+255),w,b
  8274  0110E6  E105               	bnz	u11990
  8275  0110E8  0E09               	movlw	9
  8276  0110EA  0101               	movlb	1	; () banked
  8277  0110EC  5D61               	subwf	sprintf@prec& (0+255),w,b
  8278  0110EE  A0D8               	btfss	status,0,c
  8279  0110F0  D004               	goto	l1050
  8280  0110F2                     u11990:
  8281                           
  8282                           ; BSR set to: 1
  8283                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8284  0110F2  0E08               	movlw	8
  8285  0110F4  0101               	movlb	1	; () banked
  8286  0110F6  6F67               	movwf	sprintf@c& (0+255),b
  8287  0110F8  D002               	goto	l9022
  8288  0110FA                     l1050:
  8289                           
  8290                           ; BSR set to: 1
  8291                           ;doprnt.c: 1213: else
  8292                           ;doprnt.c: 1214: c = prec;
  8293  0110FA  C161  F167         	movff	sprintf@prec,sprintf@c
  8294  0110FE                     l9022:
  8295                           
  8296                           ; BSR set to: 1
  8297                           ;doprnt.c: 1215: prec -= c;
  8298  0110FE  0101               	movlb	1	; () banked
  8299  011100  5167               	movf	sprintf@c& (0+255),w,b
  8300  011102  0101               	movlb	1	; () banked
  8301  011104  5F61               	subwf	sprintf@prec& (0+255),f,b
  8302  011106  0E00               	movlw	0
  8303  011108  0101               	movlb	1	; () banked
  8304  01110A  BF67               	btfsc	sprintf@c& (0+255),7,b
  8305  01110C  0EFF               	movlw	255
  8306  01110E  0101               	movlb	1	; () banked
  8307  011110  5B62               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8308                           
  8309                           ; BSR set to: 1
  8310                           ;doprnt.c: 1219: if(c)
  8311  011112  0101               	movlb	1	; () banked
  8312  011114  5167               	movf	sprintf@c& (0+255),w,b
  8313  011116  0101               	movlb	1	; () banked
  8314  011118  B4D8               	btfsc	status,2,c
  8315  01111A  D009               	goto	l9030
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8319  01111C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8320  011120  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8321  011124  0E2E               	movlw	46
  8322  011126  6EDF               	movwf	indf2,c
  8323                           
  8324                           ; BSR set to: 1
  8325  011128  0100               	movlb	0	; () banked
  8326  01112A  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8327  01112C  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8328  01112E                     l9030:
  8329                           
  8330                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8331  01112E  0101               	movlb	1	; () banked
  8332  011130  5167               	movf	sprintf@c& (0+255),w,b
  8333  011132  ECE9  F094         	call	_scale
  8334  011136  C098  F14F         	movff	?_scale,_sprintf$4273
  8335  01113A  C099  F150         	movff	?_scale+1,_sprintf$4273+1
  8336  01113E  C09A  F151         	movff	?_scale+2,_sprintf$4273+2
  8337  011142  C09B  F152         	movff	?_scale+3,_sprintf$4273+3
  8338                           
  8339                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8340  011146  C163  F083         	movff	sprintf@fval,___flmul@a
  8341  01114A  C164  F084         	movff	sprintf@fval+1,___flmul@a+1
  8342  01114E  C165  F085         	movff	sprintf@fval+2,___flmul@a+2
  8343  011152  C166  F086         	movff	sprintf@fval+3,___flmul@a+3
  8344  011156  C14F  F07F         	movff	_sprintf$4273,___flmul@b
  8345  01115A  C150  F080         	movff	_sprintf$4273+1,___flmul@b+1
  8346  01115E  C151  F081         	movff	_sprintf$4273+2,___flmul@b+2
  8347  011162  C152  F082         	movff	_sprintf$4273+3,___flmul@b+3
  8348  011166  EC50  F09C         	call	___flmul	;wreg free
  8349  01116A  C07F  F0B9         	movff	?___flmul,___fltol@f1
  8350  01116E  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  8351  011172  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  8352  011176  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  8353  01117A  EC98  F0AB         	call	___fltol	;wreg free
  8354  01117E  C0B9  F157         	movff	?___fltol,sprintf@val
  8355  011182  C0BA  F158         	movff	?___fltol+1,sprintf@val+1
  8356  011186  C0BB  F159         	movff	?___fltol+2,sprintf@val+2
  8357  01118A  C0BC  F15A         	movff	?___fltol+3,sprintf@val+3
  8358                           
  8359                           ;doprnt.c: 1228: while(c--) {
  8360  01118E  D07A               	goto	l9044
  8361  011190                     l9034:
  8362                           
  8363                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8364  011190  C157  F071         	movff	sprintf@val,___lldiv@dividend
  8365  011194  C158  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8366  011198  C159  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8367  01119C  C15A  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8368  0111A0  0101               	movlb	1	; () banked
  8369  0111A2  5167               	movf	sprintf@c& (0+255),w,b
  8370  0111A4  0D04               	mullw	4
  8371  0111A6  0EDD               	movlw	low _dpowers
  8372  0111A8  24F3               	addwf	prodl,w,c
  8373  0111AA  6EF6               	movwf	tblptrl,c
  8374  0111AC  0EFD               	movlw	high _dpowers
  8375  0111AE  20F4               	addwfc	prodh,w,c
  8376  0111B0  6EF7               	movwf	tblptrh,c
  8377  0111B2                     	if	1	;There are 3 active tblptr bytes
  8378  0111B2  6AF8               	clrf	tblptru,c
  8379  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  8380  0111B6  22F8               	addwfc	tblptru,f,c
  8381  0111B8                     	endif
  8382  0111B8  0009               	tblrd		*+
  8383  0111BA  CFF5 F075          	movff	tablat,___lldiv@divisor
  8384  0111BE  0009               	tblrd		*+
  8385  0111C0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8386  0111C4  0009               	tblrd		*+
  8387  0111C6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8388  0111CA  000A               	tblrd		*-
  8389  0111CC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8390  0111D0  EC52  F0AD         	call	___lldiv	;wreg free
  8391  0111D4  C071  F15D         	movff	?___lldiv,sprintf@tmpval
  8392  0111D8  C072  F15E         	movff	?___lldiv+1,sprintf@tmpval+1
  8393  0111DC  C073  F15F         	movff	?___lldiv+2,sprintf@tmpval+2
  8394  0111E0  C074  F160         	movff	?___lldiv+3,sprintf@tmpval+3
  8395                           
  8396                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8397  0111E4  C15D  F071         	movff	sprintf@tmpval,___llmod@dividend
  8398  0111E8  C15E  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8399  0111EC  C15F  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8400  0111F0  C160  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8401  0111F4  0E0A               	movlw	10
  8402  0111F6  0100               	movlb	0	; () banked
  8403  0111F8  6F75               	movwf	___llmod@divisor& (0+255),b
  8404  0111FA  0E00               	movlw	0
  8405  0111FC  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8406  0111FE  0E00               	movlw	0
  8407  011200  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8408  011202  0E00               	movlw	0
  8409  011204  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8410  011206  ECB0  F0AE         	call	___llmod	;wreg free
  8411  01120A  C071  F15D         	movff	?___llmod,sprintf@tmpval
  8412  01120E  C072  F15E         	movff	?___llmod+1,sprintf@tmpval+1
  8413  011212  C073  F15F         	movff	?___llmod+2,sprintf@tmpval+2
  8414  011216  C074  F160         	movff	?___llmod+3,sprintf@tmpval+3
  8415                           
  8416                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8417  01121A  0101               	movlb	1	; () banked
  8418  01121C  515D               	movf	sprintf@tmpval& (0+255),w,b
  8419  01121E  0F30               	addlw	48
  8420  011220  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8421  011224  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8422  011228  6EDF               	movwf	indf2,c
  8423                           
  8424                           ; BSR set to: 1
  8425  01122A  0100               	movlb	0	; () banked
  8426  01122C  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8427  01122E  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;doprnt.c: 1232: val %= dpowers[c];
  8431  011230  C157  F071         	movff	sprintf@val,___llmod@dividend
  8432  011234  C158  F072         	movff	sprintf@val+1,___llmod@dividend+1
  8433  011238  C159  F073         	movff	sprintf@val+2,___llmod@dividend+2
  8434  01123C  C15A  F074         	movff	sprintf@val+3,___llmod@dividend+3
  8435  011240  0101               	movlb	1	; () banked
  8436  011242  5167               	movf	sprintf@c& (0+255),w,b
  8437  011244  0D04               	mullw	4
  8438  011246  0EDD               	movlw	low _dpowers
  8439  011248  24F3               	addwf	prodl,w,c
  8440  01124A  6EF6               	movwf	tblptrl,c
  8441  01124C  0EFD               	movlw	high _dpowers
  8442  01124E  20F4               	addwfc	prodh,w,c
  8443  011250  6EF7               	movwf	tblptrh,c
  8444  011252                     	if	1	;There are 3 active tblptr bytes
  8445  011252  6AF8               	clrf	tblptru,c
  8446  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  8447  011256  22F8               	addwfc	tblptru,f,c
  8448  011258                     	endif
  8449  011258  0009               	tblrd		*+
  8450  01125A  CFF5 F075          	movff	tablat,___llmod@divisor
  8451  01125E  0009               	tblrd		*+
  8452  011260  CFF5 F076          	movff	tablat,___llmod@divisor+1
  8453  011264  0009               	tblrd		*+
  8454  011266  CFF5 F077          	movff	tablat,___llmod@divisor+2
  8455  01126A  000A               	tblrd		*-
  8456  01126C  CFF5 F078          	movff	tablat,___llmod@divisor+3
  8457  011270  ECB0  F0AE         	call	___llmod	;wreg free
  8458  011274  C071  F157         	movff	?___llmod,sprintf@val
  8459  011278  C072  F158         	movff	?___llmod+1,sprintf@val+1
  8460  01127C  C073  F159         	movff	?___llmod+2,sprintf@val+2
  8461  011280  C074  F15A         	movff	?___llmod+3,sprintf@val+3
  8462  011284                     l9044:
  8463  011284  0101               	movlb	1	; () banked
  8464  011286  0767               	decf	sprintf@c& (0+255),f,b
  8465  011288  0101               	movlb	1	; () banked
  8466  01128A  2967               	incf	sprintf@c& (0+255),w,b
  8467  01128C  B4D8               	btfsc	status,2,c
  8468  01128E  D00E               	goto	l9052
  8469  011290  D77F               	goto	l9034
  8470  011292                     l9046:
  8471                           
  8472                           ; BSR set to: 1
  8473                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8474  011292  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8475  011296  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8476  01129A  0E30               	movlw	48
  8477  01129C  6EDF               	movwf	indf2,c
  8478                           
  8479                           ; BSR set to: 1
  8480  01129E  0100               	movlb	0	; () banked
  8481  0112A0  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8482  0112A2  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;doprnt.c: 1237: prec--;
  8486  0112A4  0101               	movlb	1	; () banked
  8487  0112A6  0761               	decf	sprintf@prec& (0+255),f,b
  8488  0112A8  A0D8               	btfss	status,0,c
  8489  0112AA  0762               	decf	(sprintf@prec+1)& (0+255),f,b
  8490  0112AC                     l9052:
  8491                           
  8492                           ; BSR set to: 1
  8493  0112AC  0101               	movlb	1	; () banked
  8494  0112AE  5161               	movf	sprintf@prec& (0+255),w,b
  8495  0112B0  0101               	movlb	1	; () banked
  8496  0112B2  1162               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8497  0112B4  B4D8               	btfsc	status,2,c
  8498  0112B6  D059               	goto	l9074
  8499  0112B8  D7EC               	goto	l9046
  8500  0112BA                     l9054:
  8501                           
  8502                           ; BSR set to: 1
  8503                           ;doprnt.c: 1246: }
  8504                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8505  0112BA  0101               	movlb	1	; () banked
  8506  0112BC  5161               	movf	sprintf@prec& (0+255),w,b
  8507  0112BE  0101               	movlb	1	; () banked
  8508  0112C0  1162               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8509  0112C2  A4D8               	btfss	status,2,c
  8510  0112C4  D00D               	goto	l9060
  8511                           
  8512                           ; BSR set to: 1
  8513  0112C6  0101               	movlb	1	; () banked
  8514  0112C8  5157               	movf	sprintf@val& (0+255),w,b
  8515  0112CA  0101               	movlb	1	; () banked
  8516  0112CC  1158               	iorwf	(sprintf@val+1)& (0+255),w,b
  8517  0112CE  0101               	movlb	1	; () banked
  8518  0112D0  1159               	iorwf	(sprintf@val+2)& (0+255),w,b
  8519  0112D2  0101               	movlb	1	; () banked
  8520  0112D4  115A               	iorwf	(sprintf@val+3)& (0+255),w,b
  8521  0112D6  A4D8               	btfss	status,2,c
  8522  0112D8  D003               	goto	l9060
  8523                           
  8524                           ; BSR set to: 1
  8525                           ;doprnt.c: 1291: prec++;
  8526  0112DA  0101               	movlb	1	; () banked
  8527  0112DC  4B61               	infsnz	sprintf@prec& (0+255),f,b
  8528  0112DE  2B62               	incf	(sprintf@prec+1)& (0+255),f,b
  8529  0112E0                     l9060:
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;doprnt.c: 1339: if(c < prec)
  8533  0112E0  0E80               	movlw	128
  8534  0112E2  0101               	movlb	1	; () banked
  8535  0112E4  BF67               	btfsc	sprintf@c& (0+255),7,b
  8536  0112E6  0E7F               	movlw	127
  8537  0112E8  0101               	movlb	1	; () banked
  8538  0112EA  6F4D               	movwf	??_sprintf& (0+255),b
  8539  0112EC  0101               	movlb	1	; () banked
  8540  0112EE  5161               	movf	sprintf@prec& (0+255),w,b
  8541  0112F0  0101               	movlb	1	; () banked
  8542  0112F2  5D67               	subwf	sprintf@c& (0+255),w,b
  8543  0112F4  0101               	movlb	1	; () banked
  8544  0112F6  5162               	movf	(sprintf@prec+1)& (0+255),w,b
  8545  0112F8  0A80               	xorlw	128
  8546  0112FA  0101               	movlb	1	; () banked
  8547  0112FC  594D               	subwfb	??_sprintf& (0+255),w,b
  8548  0112FE  B0D8               	btfsc	status,0,c
  8549  011300  D003               	goto	l9064
  8550                           
  8551                           ; BSR set to: 1
  8552                           ;doprnt.c: 1340: c = prec;
  8553  011302  C161  F167         	movff	sprintf@prec,sprintf@c
  8554  011306  D018               	goto	l9068
  8555  011308                     l9064:
  8556                           
  8557                           ; BSR set to: 1
  8558                           ;doprnt.c: 1341: else if(prec < c)
  8559  011308  0101               	movlb	1	; () banked
  8560  01130A  5162               	movf	(sprintf@prec+1)& (0+255),w,b
  8561  01130C  0A80               	xorlw	128
  8562  01130E  0101               	movlb	1	; () banked
  8563  011310  6F4D               	movwf	??_sprintf& (0+255),b
  8564  011312  0101               	movlb	1	; () banked
  8565  011314  5167               	movf	sprintf@c& (0+255),w,b
  8566  011316  0101               	movlb	1	; () banked
  8567  011318  5D61               	subwf	sprintf@prec& (0+255),w,b
  8568  01131A  0E80               	movlw	128
  8569  01131C  0101               	movlb	1	; () banked
  8570  01131E  BF67               	btfsc	sprintf@c& (0+255),7,b
  8571  011320  0E7F               	movlw	127
  8572  011322  0101               	movlb	1	; () banked
  8573  011324  594D               	subwfb	??_sprintf& (0+255),w,b
  8574  011326  B0D8               	btfsc	status,0,c
  8575  011328  D007               	goto	l9068
  8576                           
  8577                           ; BSR set to: 1
  8578                           ;doprnt.c: 1342: prec = c;
  8579  01132A  0101               	movlb	1	; () banked
  8580  01132C  5167               	movf	sprintf@c& (0+255),w,b
  8581  01132E  0101               	movlb	1	; () banked
  8582  011330  6F61               	movwf	sprintf@prec& (0+255),b
  8583  011332  6B62               	clrf	(sprintf@prec+1)& (0+255),b
  8584  011334  BF61               	btfsc	sprintf@prec& (0+255),7,b
  8585  011336  0762               	decf	(sprintf@prec+1)& (0+255),f,b
  8586  011338                     l9068:
  8587                           
  8588                           ; BSR set to: 1
  8589                           ;doprnt.c: 1422: {
  8590                           ;doprnt.c: 1438: if(flag & 0x03)
  8591  011338  0E03               	movlw	3
  8592  01133A  0101               	movlb	1	; () banked
  8593  01133C  1555               	andwf	sprintf@flag& (0+255),w,b
  8594  01133E  0101               	movlb	1	; () banked
  8595  011340  6F4D               	movwf	??_sprintf& (0+255),b
  8596  011342  0E00               	movlw	0
  8597  011344  0101               	movlb	1	; () banked
  8598  011346  1556               	andwf	(sprintf@flag+1)& (0+255),w,b
  8599  011348  0101               	movlb	1	; () banked
  8600  01134A  6F4E               	movwf	(??_sprintf+1)& (0+255),b
  8601  01134C  0101               	movlb	1	; () banked
  8602  01134E  514D               	movf	??_sprintf& (0+255),w,b
  8603  011350  0101               	movlb	1	; () banked
  8604  011352  114E               	iorwf	(??_sprintf+1)& (0+255),w,b
  8605  011354  B4D8               	btfsc	status,2,c
  8606  011356  D009               	goto	l9074
  8607                           
  8608                           ; BSR set to: 1
  8609                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8610  011358  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8611  01135C  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8612  011360  0E2D               	movlw	45
  8613  011362  6EDF               	movwf	indf2,c
  8614  011364                     l9072:
  8615                           
  8616                           ; BSR set to: 1
  8617  011364  0100               	movlb	0	; () banked
  8618  011366  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8619  011368  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8620  01136A                     l9074:
  8621  01136A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8622  01136E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8623  011372  0100               	movlb	0	; () banked
  8624  011374  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8625  011376  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8626  011378                     	if	0	;tblptru may be non-zero
  8627  011378                     	endif
  8628  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8629  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  8630  01137A  6EF8               	movwf	tblptru,c
  8631  01137C                     	endif
  8632  01137C  0008               	tblrd		*
  8633  01137E  CFF5 F167          	movff	tablat,sprintf@c
  8634  011382  0101               	movlb	1	; () banked
  8635  011384  5167               	movf	sprintf@c& (0+255),w,b
  8636  011386  A4D8               	btfss	status,2,c
  8637  011388  EF8B  F085         	goto	l8876
  8638  01138C                     l9076:
  8639                           
  8640                           ; BSR set to: 1
  8641                           ;doprnt.c: 1538: *sp = 0;
  8642  01138C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8643  011390  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8644  011394  0E00               	movlw	0
  8645  011396  6EDF               	movwf	indf2,c
  8646  011398  0012               	return	
  8647  01139A                     __end_of_sprintf:
  8648                           	opt stack 0
  8649                           tblptru	equ	0xFF8
  8650                           tblptrh	equ	0xFF7
  8651                           tblptrl	equ	0xFF6
  8652                           tablat	equ	0xFF5
  8653                           prodh	equ	0xFF4
  8654                           prodl	equ	0xFF3
  8655                           intcon	equ	0xFF2
  8656                           postinc0	equ	0xFEE
  8657                           wreg	equ	0xFE8
  8658                           indf2	equ	0xFDF
  8659                           postinc2	equ	0xFDE
  8660                           fsr2h	equ	0xFDA
  8661                           fsr2l	equ	0xFD9
  8662                           status	equ	0xFD8
  8663                           
  8664 ;; *************** function _scale *****************
  8665 ;; Defined at:
  8666 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  scl             1    wreg     char 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  scl             1   64[BANK0 ] char 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  4   56[BANK0 ] char 
  8673 ;; Registers used:
  8674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;Total ram usage:        9 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    4
  8687 ;; This function calls:
  8688 ;;		___awdiv
  8689 ;;		___awmod
  8690 ;;		___flmul
  8691 ;; This function is called by:
  8692 ;;		_sprintf
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text11
  8697  0129D2                     __ptext11:
  8698                           	opt stack 0
  8699  0129D2                     _scale:
  8700                           	opt stack 24
  8701                           
  8702                           ; BSR set to: 1
  8703                           ;incstack = 0
  8704                           ;scale@scl stored from wreg
  8705  0129D2  0100               	movlb	0	; () banked
  8706  0129D4  6FA0               	movwf	scale@scl& (0+255),b
  8707                           
  8708                           ;doprnt.c: 428: if(scl < 0) {
  8709  0129D6  0100               	movlb	0	; () banked
  8710  0129D8  AFA0               	btfss	scale@scl& (0+255),7,b
  8711  0129DA  D145               	goto	l8484
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;doprnt.c: 429: scl = -scl;
  8715  0129DC  0100               	movlb	0	; () banked
  8716  0129DE  6DA0               	negf	scale@scl& (0+255),b
  8717                           
  8718                           ;doprnt.c: 430: if(scl>=110)
  8719  0129E0  0100               	movlb	0	; () banked
  8720  0129E2  51A0               	movf	scale@scl& (0+255),w,b
  8721  0129E4  0A80               	xorlw	128
  8722  0129E6  0F12               	addlw	-238
  8723  0129E8  A0D8               	btfss	status,0,c
  8724  0129EA  D0BB               	goto	l8474
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8728  0129EC  0E00               	movlw	0
  8729  0129EE  0100               	movlb	0	; () banked
  8730  0129F0  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8731  0129F2  0E0A               	movlw	10
  8732  0129F4  6F79               	movwf	___awdiv@divisor& (0+255),b
  8733  0129F6  0E00               	movlw	0
  8734  0129F8  0100               	movlb	0	; () banked
  8735  0129FA  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8736  0129FC  0E64               	movlw	100
  8737  0129FE  6F73               	movwf	___awmod@divisor& (0+255),b
  8738  012A00  0100               	movlb	0	; () banked
  8739  012A02  51A0               	movf	scale@scl& (0+255),w,b
  8740  012A04  0100               	movlb	0	; () banked
  8741  012A06  6F71               	movwf	___awmod@dividend& (0+255),b
  8742  012A08  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8743  012A0A  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8744  012A0C  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8745  012A0E  EC5F  F0AE         	call	___awmod	;wreg free
  8746  012A12  C071  F077         	movff	?___awmod,___awdiv@dividend
  8747  012A16  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8748  012A1A  EC94  F0AC         	call	___awdiv	;wreg free
  8749  012A1E  0100               	movlb	0	; () banked
  8750  012A20  90D8               	bcf	status,0,c
  8751  012A22  3777               	rlcf	?___awdiv& (0+255),f,b
  8752  012A24  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8753  012A26  0100               	movlb	0	; () banked
  8754  012A28  90D8               	bcf	status,0,c
  8755  012A2A  3777               	rlcf	?___awdiv& (0+255),f,b
  8756  012A2C  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8757  012A2E  0E24               	movlw	36
  8758  012A30  0100               	movlb	0	; () banked
  8759  012A32  2777               	addwf	?___awdiv& (0+255),f,b
  8760  012A34  0E00               	movlw	0
  8761  012A36  0100               	movlb	0	; () banked
  8762  012A38  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8763  012A3A  0E75               	movlw	low __npowers_
  8764  012A3C  0100               	movlb	0	; () banked
  8765  012A3E  2577               	addwf	?___awdiv& (0+255),w,b
  8766  012A40  6EF6               	movwf	tblptrl,c
  8767  012A42  0EFD               	movlw	high __npowers_
  8768  012A44  0100               	movlb	0	; () banked
  8769  012A46  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8770  012A48  6EF7               	movwf	tblptrh,c
  8771  012A4A                     	if	1	;There are 3 active tblptr bytes
  8772  012A4A  6AF8               	clrf	tblptru,c
  8773  012A4C  0E00               	movlw	low (__mediumconst shr (0+16))
  8774  012A4E  22F8               	addwfc	tblptru,f,c
  8775  012A50                     	endif
  8776  012A50  0009               	tblrd		*+
  8777  012A52  CFF5 F083          	movff	tablat,___flmul@a
  8778  012A56  0009               	tblrd		*+
  8779  012A58  CFF5 F084          	movff	tablat,___flmul@a+1
  8780  012A5C  0009               	tblrd		*+
  8781  012A5E  CFF5 F085          	movff	tablat,___flmul@a+2
  8782  012A62  000A               	tblrd		*-
  8783  012A64  CFF5 F086          	movff	tablat,___flmul@a+3
  8784  012A68  0E00               	movlw	0
  8785  012A6A  0100               	movlb	0	; () banked
  8786  012A6C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8787  012A6E  0E64               	movlw	100
  8788  012A70  6F79               	movwf	___awdiv@divisor& (0+255),b
  8789  012A72  0100               	movlb	0	; () banked
  8790  012A74  51A0               	movf	scale@scl& (0+255),w,b
  8791  012A76  0100               	movlb	0	; () banked
  8792  012A78  6F77               	movwf	___awdiv@dividend& (0+255),b
  8793  012A7A  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8794  012A7C  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8795  012A7E  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8796  012A80  EC94  F0AC         	call	___awdiv	;wreg free
  8797  012A84  0100               	movlb	0	; () banked
  8798  012A86  90D8               	bcf	status,0,c
  8799  012A88  3777               	rlcf	?___awdiv& (0+255),f,b
  8800  012A8A  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8801  012A8C  0100               	movlb	0	; () banked
  8802  012A8E  90D8               	bcf	status,0,c
  8803  012A90  3777               	rlcf	?___awdiv& (0+255),f,b
  8804  012A92  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8805  012A94  0E48               	movlw	72
  8806  012A96  0100               	movlb	0	; () banked
  8807  012A98  2777               	addwf	?___awdiv& (0+255),f,b
  8808  012A9A  0E00               	movlw	0
  8809  012A9C  0100               	movlb	0	; () banked
  8810  012A9E  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8811  012AA0  0E75               	movlw	low __npowers_
  8812  012AA2  0100               	movlb	0	; () banked
  8813  012AA4  2577               	addwf	?___awdiv& (0+255),w,b
  8814  012AA6  6EF6               	movwf	tblptrl,c
  8815  012AA8  0EFD               	movlw	high __npowers_
  8816  012AAA  0100               	movlb	0	; () banked
  8817  012AAC  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8818  012AAE  6EF7               	movwf	tblptrh,c
  8819  012AB0                     	if	1	;There are 3 active tblptr bytes
  8820  012AB0  6AF8               	clrf	tblptru,c
  8821  012AB2  0E00               	movlw	low (__mediumconst shr (0+16))
  8822  012AB4  22F8               	addwfc	tblptru,f,c
  8823  012AB6                     	endif
  8824  012AB6  0009               	tblrd		*+
  8825  012AB8  CFF5 F07F          	movff	tablat,___flmul@b
  8826  012ABC  0009               	tblrd		*+
  8827  012ABE  CFF5 F080          	movff	tablat,___flmul@b+1
  8828  012AC2  0009               	tblrd		*+
  8829  012AC4  CFF5 F081          	movff	tablat,___flmul@b+2
  8830  012AC8  000A               	tblrd		*-
  8831  012ACA  CFF5 F082          	movff	tablat,___flmul@b+3
  8832  012ACE  EC50  F09C         	call	___flmul	;wreg free
  8833  012AD2  C07F  F09C         	movff	?___flmul,_scale$4272
  8834  012AD6  C080  F09D         	movff	?___flmul+1,_scale$4272+1
  8835  012ADA  C081  F09E         	movff	?___flmul+2,_scale$4272+2
  8836  012ADE  C082  F09F         	movff	?___flmul+3,_scale$4272+3
  8837                           
  8838                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8839  012AE2  C09C  F07F         	movff	_scale$4272,___flmul@b
  8840  012AE6  C09D  F080         	movff	_scale$4272+1,___flmul@b+1
  8841  012AEA  C09E  F081         	movff	_scale$4272+2,___flmul@b+2
  8842  012AEE  C09F  F082         	movff	_scale$4272+3,___flmul@b+3
  8843  012AF2  0E00               	movlw	0
  8844  012AF4  0100               	movlb	0	; () banked
  8845  012AF6  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8846  012AF8  0E0A               	movlw	10
  8847  012AFA  6F73               	movwf	___awmod@divisor& (0+255),b
  8848  012AFC  0100               	movlb	0	; () banked
  8849  012AFE  51A0               	movf	scale@scl& (0+255),w,b
  8850  012B00  0100               	movlb	0	; () banked
  8851  012B02  6F71               	movwf	___awmod@dividend& (0+255),b
  8852  012B04  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8853  012B06  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8854  012B08  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8855  012B0A  EC5F  F0AE         	call	___awmod	;wreg free
  8856  012B0E  0100               	movlb	0	; () banked
  8857  012B10  90D8               	bcf	status,0,c
  8858  012B12  3771               	rlcf	?___awmod& (0+255),f,b
  8859  012B14  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8860  012B16  0100               	movlb	0	; () banked
  8861  012B18  90D8               	bcf	status,0,c
  8862  012B1A  3771               	rlcf	?___awmod& (0+255),f,b
  8863  012B1C  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8864  012B1E  0E75               	movlw	low __npowers_
  8865  012B20  0100               	movlb	0	; () banked
  8866  012B22  2571               	addwf	?___awmod& (0+255),w,b
  8867  012B24  6EF6               	movwf	tblptrl,c
  8868  012B26  0EFD               	movlw	high __npowers_
  8869  012B28  0100               	movlb	0	; () banked
  8870  012B2A  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8871  012B2C  6EF7               	movwf	tblptrh,c
  8872  012B2E                     	if	1	;There are 3 active tblptr bytes
  8873  012B2E  6AF8               	clrf	tblptru,c
  8874  012B30  0E00               	movlw	low (__mediumconst shr (0+16))
  8875  012B32  22F8               	addwfc	tblptru,f,c
  8876  012B34                     	endif
  8877  012B34  0009               	tblrd		*+
  8878  012B36  CFF5 F083          	movff	tablat,___flmul@a
  8879  012B3A  0009               	tblrd		*+
  8880  012B3C  CFF5 F084          	movff	tablat,___flmul@a+1
  8881  012B40  0009               	tblrd		*+
  8882  012B42  CFF5 F085          	movff	tablat,___flmul@a+2
  8883  012B46  000A               	tblrd		*-
  8884  012B48  CFF5 F086          	movff	tablat,___flmul@a+3
  8885  012B4C  EC50  F09C         	call	___flmul	;wreg free
  8886  012B50  C07F  F098         	movff	?___flmul,?_scale
  8887  012B54  C080  F099         	movff	?___flmul+1,?_scale+1
  8888  012B58  C081  F09A         	movff	?___flmul+2,?_scale+2
  8889  012B5C  C082  F09B         	movff	?___flmul+3,?_scale+3
  8890  012B60  0012               	return	
  8891  012B62                     l8474:
  8892                           
  8893                           ;doprnt.c: 432: else if(scl > 10)
  8894  012B62  0100               	movlb	0	; () banked
  8895  012B64  51A0               	movf	scale@scl& (0+255),w,b
  8896  012B66  0A80               	xorlw	128
  8897  012B68  0F75               	addlw	-139
  8898  012B6A  A0D8               	btfss	status,0,c
  8899  012B6C  D063               	goto	l8480
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8903  012B6E  0E00               	movlw	0
  8904  012B70  0100               	movlb	0	; () banked
  8905  012B72  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8906  012B74  0E0A               	movlw	10
  8907  012B76  6F79               	movwf	___awdiv@divisor& (0+255),b
  8908  012B78  0100               	movlb	0	; () banked
  8909  012B7A  51A0               	movf	scale@scl& (0+255),w,b
  8910  012B7C  0100               	movlb	0	; () banked
  8911  012B7E  6F77               	movwf	___awdiv@dividend& (0+255),b
  8912  012B80  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8913  012B82  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8914  012B84  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8915  012B86  EC94  F0AC         	call	___awdiv	;wreg free
  8916  012B8A  0100               	movlb	0	; () banked
  8917  012B8C  90D8               	bcf	status,0,c
  8918  012B8E  3777               	rlcf	?___awdiv& (0+255),f,b
  8919  012B90  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8920  012B92  0100               	movlb	0	; () banked
  8921  012B94  90D8               	bcf	status,0,c
  8922  012B96  3777               	rlcf	?___awdiv& (0+255),f,b
  8923  012B98  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8924  012B9A  0E24               	movlw	36
  8925  012B9C  0100               	movlb	0	; () banked
  8926  012B9E  2777               	addwf	?___awdiv& (0+255),f,b
  8927  012BA0  0E00               	movlw	0
  8928  012BA2  0100               	movlb	0	; () banked
  8929  012BA4  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8930  012BA6  0E75               	movlw	low __npowers_
  8931  012BA8  0100               	movlb	0	; () banked
  8932  012BAA  2577               	addwf	?___awdiv& (0+255),w,b
  8933  012BAC  6EF6               	movwf	tblptrl,c
  8934  012BAE  0EFD               	movlw	high __npowers_
  8935  012BB0  0100               	movlb	0	; () banked
  8936  012BB2  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8937  012BB4  6EF7               	movwf	tblptrh,c
  8938  012BB6                     	if	1	;There are 3 active tblptr bytes
  8939  012BB6  6AF8               	clrf	tblptru,c
  8940  012BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  8941  012BBA  22F8               	addwfc	tblptru,f,c
  8942  012BBC                     	endif
  8943  012BBC  0009               	tblrd		*+
  8944  012BBE  CFF5 F07F          	movff	tablat,___flmul@b
  8945  012BC2  0009               	tblrd		*+
  8946  012BC4  CFF5 F080          	movff	tablat,___flmul@b+1
  8947  012BC8  0009               	tblrd		*+
  8948  012BCA  CFF5 F081          	movff	tablat,___flmul@b+2
  8949  012BCE  000A               	tblrd		*-
  8950  012BD0  CFF5 F082          	movff	tablat,___flmul@b+3
  8951  012BD4  0E00               	movlw	0
  8952  012BD6  0100               	movlb	0	; () banked
  8953  012BD8  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8954  012BDA  0E0A               	movlw	10
  8955  012BDC  6F73               	movwf	___awmod@divisor& (0+255),b
  8956  012BDE  0100               	movlb	0	; () banked
  8957  012BE0  51A0               	movf	scale@scl& (0+255),w,b
  8958  012BE2  0100               	movlb	0	; () banked
  8959  012BE4  6F71               	movwf	___awmod@dividend& (0+255),b
  8960  012BE6  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8961  012BE8  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8962  012BEA  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8963  012BEC  EC5F  F0AE         	call	___awmod	;wreg free
  8964  012BF0  0100               	movlb	0	; () banked
  8965  012BF2  90D8               	bcf	status,0,c
  8966  012BF4  3771               	rlcf	?___awmod& (0+255),f,b
  8967  012BF6  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8968  012BF8  0100               	movlb	0	; () banked
  8969  012BFA  90D8               	bcf	status,0,c
  8970  012BFC  3771               	rlcf	?___awmod& (0+255),f,b
  8971  012BFE  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8972  012C00  0E75               	movlw	low __npowers_
  8973  012C02  0100               	movlb	0	; () banked
  8974  012C04  2571               	addwf	?___awmod& (0+255),w,b
  8975  012C06  6EF6               	movwf	tblptrl,c
  8976  012C08  0EFD               	movlw	high __npowers_
  8977  012C0A  0100               	movlb	0	; () banked
  8978  012C0C  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8979  012C0E  6EF7               	movwf	tblptrh,c
  8980  012C10                     	if	1	;There are 3 active tblptr bytes
  8981  012C10  6AF8               	clrf	tblptru,c
  8982  012C12  0E00               	movlw	low (__mediumconst shr (0+16))
  8983  012C14  22F8               	addwfc	tblptru,f,c
  8984  012C16                     	endif
  8985  012C16  0009               	tblrd		*+
  8986  012C18  CFF5 F083          	movff	tablat,___flmul@a
  8987  012C1C  0009               	tblrd		*+
  8988  012C1E  CFF5 F084          	movff	tablat,___flmul@a+1
  8989  012C22  0009               	tblrd		*+
  8990  012C24  CFF5 F085          	movff	tablat,___flmul@a+2
  8991  012C28  000A               	tblrd		*-
  8992  012C2A  CFF5 F086          	movff	tablat,___flmul@a+3
  8993  012C2E  EC50  F09C         	call	___flmul	;wreg free
  8994  012C32  D78E               	goto	L6
  8995  012C34                     l8480:
  8996                           
  8997                           ;doprnt.c: 434: return _npowers_[scl];
  8998  012C34  0100               	movlb	0	; () banked
  8999  012C36  51A0               	movf	scale@scl& (0+255),w,b
  9000  012C38  0D04               	mullw	4
  9001  012C3A  0E75               	movlw	low __npowers_
  9002  012C3C  24F3               	addwf	prodl,w,c
  9003  012C3E  6EF6               	movwf	tblptrl,c
  9004  012C40  0EFD               	movlw	high __npowers_
  9005  012C42  20F4               	addwfc	prodh,w,c
  9006  012C44  6EF7               	movwf	tblptrh,c
  9007  012C46                     	if	1	;There are 3 active tblptr bytes
  9008  012C46  6AF8               	clrf	tblptru,c
  9009  012C48  0E00               	movlw	low (__mediumconst shr (0+16))
  9010  012C4A  22F8               	addwfc	tblptru,f,c
  9011  012C4C                     	endif
  9012  012C4C  0009               	tblrd		*+
  9013  012C4E  CFF5 F098          	movff	tablat,?_scale
  9014  012C52  0009               	tblrd		*+
  9015  012C54  CFF5 F099          	movff	tablat,?_scale+1
  9016  012C58  0009               	tblrd		*+
  9017  012C5A  CFF5 F09A          	movff	tablat,?_scale+2
  9018  012C5E  000A               	tblrd		*-
  9019  012C60  CFF5 F09B          	movff	tablat,?_scale+3
  9020                           
  9021                           ; BSR set to: 0
  9022  012C64  0012               	return	
  9023  012C66                     l8484:
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;doprnt.c: 435: }
  9027                           ;doprnt.c: 436: if(scl>=110)
  9028  012C66  0100               	movlb	0	; () banked
  9029  012C68  51A0               	movf	scale@scl& (0+255),w,b
  9030  012C6A  0A80               	xorlw	128
  9031  012C6C  0F12               	addlw	-238
  9032  012C6E  A0D8               	btfss	status,0,c
  9033  012C70  D0BB               	goto	l8492
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9037  012C72  0E00               	movlw	0
  9038  012C74  0100               	movlb	0	; () banked
  9039  012C76  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9040  012C78  0E0A               	movlw	10
  9041  012C7A  6F79               	movwf	___awdiv@divisor& (0+255),b
  9042  012C7C  0E00               	movlw	0
  9043  012C7E  0100               	movlb	0	; () banked
  9044  012C80  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9045  012C82  0E64               	movlw	100
  9046  012C84  6F73               	movwf	___awmod@divisor& (0+255),b
  9047  012C86  0100               	movlb	0	; () banked
  9048  012C88  51A0               	movf	scale@scl& (0+255),w,b
  9049  012C8A  0100               	movlb	0	; () banked
  9050  012C8C  6F71               	movwf	___awmod@dividend& (0+255),b
  9051  012C8E  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9052  012C90  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9053  012C92  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9054  012C94  EC5F  F0AE         	call	___awmod	;wreg free
  9055  012C98  C071  F077         	movff	?___awmod,___awdiv@dividend
  9056  012C9C  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9057  012CA0  EC94  F0AC         	call	___awdiv	;wreg free
  9058  012CA4  0100               	movlb	0	; () banked
  9059  012CA6  90D8               	bcf	status,0,c
  9060  012CA8  3777               	rlcf	?___awdiv& (0+255),f,b
  9061  012CAA  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9062  012CAC  0100               	movlb	0	; () banked
  9063  012CAE  90D8               	bcf	status,0,c
  9064  012CB0  3777               	rlcf	?___awdiv& (0+255),f,b
  9065  012CB2  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9066  012CB4  0E24               	movlw	36
  9067  012CB6  0100               	movlb	0	; () banked
  9068  012CB8  2777               	addwf	?___awdiv& (0+255),f,b
  9069  012CBA  0E00               	movlw	0
  9070  012CBC  0100               	movlb	0	; () banked
  9071  012CBE  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9072  012CC0  0EA9               	movlw	low __powers_
  9073  012CC2  0100               	movlb	0	; () banked
  9074  012CC4  2577               	addwf	?___awdiv& (0+255),w,b
  9075  012CC6  6EF6               	movwf	tblptrl,c
  9076  012CC8  0EFD               	movlw	high __powers_
  9077  012CCA  0100               	movlb	0	; () banked
  9078  012CCC  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9079  012CCE  6EF7               	movwf	tblptrh,c
  9080  012CD0                     	if	1	;There are 3 active tblptr bytes
  9081  012CD0  6AF8               	clrf	tblptru,c
  9082  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
  9083  012CD4  22F8               	addwfc	tblptru,f,c
  9084  012CD6                     	endif
  9085  012CD6  0009               	tblrd		*+
  9086  012CD8  CFF5 F083          	movff	tablat,___flmul@a
  9087  012CDC  0009               	tblrd		*+
  9088  012CDE  CFF5 F084          	movff	tablat,___flmul@a+1
  9089  012CE2  0009               	tblrd		*+
  9090  012CE4  CFF5 F085          	movff	tablat,___flmul@a+2
  9091  012CE8  000A               	tblrd		*-
  9092  012CEA  CFF5 F086          	movff	tablat,___flmul@a+3
  9093  012CEE  0E00               	movlw	0
  9094  012CF0  0100               	movlb	0	; () banked
  9095  012CF2  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9096  012CF4  0E64               	movlw	100
  9097  012CF6  6F79               	movwf	___awdiv@divisor& (0+255),b
  9098  012CF8  0100               	movlb	0	; () banked
  9099  012CFA  51A0               	movf	scale@scl& (0+255),w,b
  9100  012CFC  0100               	movlb	0	; () banked
  9101  012CFE  6F77               	movwf	___awdiv@dividend& (0+255),b
  9102  012D00  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9103  012D02  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9104  012D04  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9105  012D06  EC94  F0AC         	call	___awdiv	;wreg free
  9106  012D0A  0100               	movlb	0	; () banked
  9107  012D0C  90D8               	bcf	status,0,c
  9108  012D0E  3777               	rlcf	?___awdiv& (0+255),f,b
  9109  012D10  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9110  012D12  0100               	movlb	0	; () banked
  9111  012D14  90D8               	bcf	status,0,c
  9112  012D16  3777               	rlcf	?___awdiv& (0+255),f,b
  9113  012D18  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9114  012D1A  0E48               	movlw	72
  9115  012D1C  0100               	movlb	0	; () banked
  9116  012D1E  2777               	addwf	?___awdiv& (0+255),f,b
  9117  012D20  0E00               	movlw	0
  9118  012D22  0100               	movlb	0	; () banked
  9119  012D24  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9120  012D26  0EA9               	movlw	low __powers_
  9121  012D28  0100               	movlb	0	; () banked
  9122  012D2A  2577               	addwf	?___awdiv& (0+255),w,b
  9123  012D2C  6EF6               	movwf	tblptrl,c
  9124  012D2E  0EFD               	movlw	high __powers_
  9125  012D30  0100               	movlb	0	; () banked
  9126  012D32  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9127  012D34  6EF7               	movwf	tblptrh,c
  9128  012D36                     	if	1	;There are 3 active tblptr bytes
  9129  012D36  6AF8               	clrf	tblptru,c
  9130  012D38  0E00               	movlw	low (__mediumconst shr (0+16))
  9131  012D3A  22F8               	addwfc	tblptru,f,c
  9132  012D3C                     	endif
  9133  012D3C  0009               	tblrd		*+
  9134  012D3E  CFF5 F07F          	movff	tablat,___flmul@b
  9135  012D42  0009               	tblrd		*+
  9136  012D44  CFF5 F080          	movff	tablat,___flmul@b+1
  9137  012D48  0009               	tblrd		*+
  9138  012D4A  CFF5 F081          	movff	tablat,___flmul@b+2
  9139  012D4E  000A               	tblrd		*-
  9140  012D50  CFF5 F082          	movff	tablat,___flmul@b+3
  9141  012D54  EC50  F09C         	call	___flmul	;wreg free
  9142  012D58  C07F  F09C         	movff	?___flmul,_scale$4272
  9143  012D5C  C080  F09D         	movff	?___flmul+1,_scale$4272+1
  9144  012D60  C081  F09E         	movff	?___flmul+2,_scale$4272+2
  9145  012D64  C082  F09F         	movff	?___flmul+3,_scale$4272+3
  9146                           
  9147                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9148  012D68  C09C  F07F         	movff	_scale$4272,___flmul@b
  9149  012D6C  C09D  F080         	movff	_scale$4272+1,___flmul@b+1
  9150  012D70  C09E  F081         	movff	_scale$4272+2,___flmul@b+2
  9151  012D74  C09F  F082         	movff	_scale$4272+3,___flmul@b+3
  9152  012D78  0E00               	movlw	0
  9153  012D7A  0100               	movlb	0	; () banked
  9154  012D7C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9155  012D7E  0E0A               	movlw	10
  9156  012D80  6F73               	movwf	___awmod@divisor& (0+255),b
  9157  012D82  0100               	movlb	0	; () banked
  9158  012D84  51A0               	movf	scale@scl& (0+255),w,b
  9159  012D86  0100               	movlb	0	; () banked
  9160  012D88  6F71               	movwf	___awmod@dividend& (0+255),b
  9161  012D8A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9162  012D8C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9163  012D8E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9164  012D90  EC5F  F0AE         	call	___awmod	;wreg free
  9165  012D94  0100               	movlb	0	; () banked
  9166  012D96  90D8               	bcf	status,0,c
  9167  012D98  3771               	rlcf	?___awmod& (0+255),f,b
  9168  012D9A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9169  012D9C  0100               	movlb	0	; () banked
  9170  012D9E  90D8               	bcf	status,0,c
  9171  012DA0  3771               	rlcf	?___awmod& (0+255),f,b
  9172  012DA2  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9173  012DA4  0EA9               	movlw	low __powers_
  9174  012DA6  0100               	movlb	0	; () banked
  9175  012DA8  2571               	addwf	?___awmod& (0+255),w,b
  9176  012DAA  6EF6               	movwf	tblptrl,c
  9177  012DAC  0EFD               	movlw	high __powers_
  9178  012DAE  0100               	movlb	0	; () banked
  9179  012DB0  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9180  012DB2  6EF7               	movwf	tblptrh,c
  9181  012DB4                     	if	1	;There are 3 active tblptr bytes
  9182  012DB4  6AF8               	clrf	tblptru,c
  9183  012DB6  0E00               	movlw	low (__mediumconst shr (0+16))
  9184  012DB8  22F8               	addwfc	tblptru,f,c
  9185  012DBA                     	endif
  9186  012DBA  0009               	tblrd		*+
  9187  012DBC  CFF5 F083          	movff	tablat,___flmul@a
  9188  012DC0  0009               	tblrd		*+
  9189  012DC2  CFF5 F084          	movff	tablat,___flmul@a+1
  9190  012DC6  0009               	tblrd		*+
  9191  012DC8  CFF5 F085          	movff	tablat,___flmul@a+2
  9192  012DCC  000A               	tblrd		*-
  9193  012DCE  CFF5 F086          	movff	tablat,___flmul@a+3
  9194  012DD2  EC50  F09C         	call	___flmul	;wreg free
  9195  012DD6  C07F  F098         	movff	?___flmul,?_scale
  9196  012DDA  C080  F099         	movff	?___flmul+1,?_scale+1
  9197  012DDE  C081  F09A         	movff	?___flmul+2,?_scale+2
  9198  012DE2  C082  F09B         	movff	?___flmul+3,?_scale+3
  9199  012DE6  0012               	return	
  9200  012DE8                     l8492:
  9201                           
  9202                           ;doprnt.c: 438: else if(scl > 10)
  9203  012DE8  0100               	movlb	0	; () banked
  9204  012DEA  51A0               	movf	scale@scl& (0+255),w,b
  9205  012DEC  0A80               	xorlw	128
  9206  012DEE  0F75               	addlw	-139
  9207  012DF0  A0D8               	btfss	status,0,c
  9208  012DF2  D063               	goto	l8498
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9212  012DF4  0E00               	movlw	0
  9213  012DF6  0100               	movlb	0	; () banked
  9214  012DF8  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9215  012DFA  0E0A               	movlw	10
  9216  012DFC  6F79               	movwf	___awdiv@divisor& (0+255),b
  9217  012DFE  0100               	movlb	0	; () banked
  9218  012E00  51A0               	movf	scale@scl& (0+255),w,b
  9219  012E02  0100               	movlb	0	; () banked
  9220  012E04  6F77               	movwf	___awdiv@dividend& (0+255),b
  9221  012E06  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9222  012E08  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9223  012E0A  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9224  012E0C  EC94  F0AC         	call	___awdiv	;wreg free
  9225  012E10  0100               	movlb	0	; () banked
  9226  012E12  90D8               	bcf	status,0,c
  9227  012E14  3777               	rlcf	?___awdiv& (0+255),f,b
  9228  012E16  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9229  012E18  0100               	movlb	0	; () banked
  9230  012E1A  90D8               	bcf	status,0,c
  9231  012E1C  3777               	rlcf	?___awdiv& (0+255),f,b
  9232  012E1E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9233  012E20  0E24               	movlw	36
  9234  012E22  0100               	movlb	0	; () banked
  9235  012E24  2777               	addwf	?___awdiv& (0+255),f,b
  9236  012E26  0E00               	movlw	0
  9237  012E28  0100               	movlb	0	; () banked
  9238  012E2A  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9239  012E2C  0EA9               	movlw	low __powers_
  9240  012E2E  0100               	movlb	0	; () banked
  9241  012E30  2577               	addwf	?___awdiv& (0+255),w,b
  9242  012E32  6EF6               	movwf	tblptrl,c
  9243  012E34  0EFD               	movlw	high __powers_
  9244  012E36  0100               	movlb	0	; () banked
  9245  012E38  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9246  012E3A  6EF7               	movwf	tblptrh,c
  9247  012E3C                     	if	1	;There are 3 active tblptr bytes
  9248  012E3C  6AF8               	clrf	tblptru,c
  9249  012E3E  0E00               	movlw	low (__mediumconst shr (0+16))
  9250  012E40  22F8               	addwfc	tblptru,f,c
  9251  012E42                     	endif
  9252  012E42  0009               	tblrd		*+
  9253  012E44  CFF5 F07F          	movff	tablat,___flmul@b
  9254  012E48  0009               	tblrd		*+
  9255  012E4A  CFF5 F080          	movff	tablat,___flmul@b+1
  9256  012E4E  0009               	tblrd		*+
  9257  012E50  CFF5 F081          	movff	tablat,___flmul@b+2
  9258  012E54  000A               	tblrd		*-
  9259  012E56  CFF5 F082          	movff	tablat,___flmul@b+3
  9260  012E5A  0E00               	movlw	0
  9261  012E5C  0100               	movlb	0	; () banked
  9262  012E5E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9263  012E60  0E0A               	movlw	10
  9264  012E62  6F73               	movwf	___awmod@divisor& (0+255),b
  9265  012E64  0100               	movlb	0	; () banked
  9266  012E66  51A0               	movf	scale@scl& (0+255),w,b
  9267  012E68  0100               	movlb	0	; () banked
  9268  012E6A  6F71               	movwf	___awmod@dividend& (0+255),b
  9269  012E6C  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9270  012E6E  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9271  012E70  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9272  012E72  EC5F  F0AE         	call	___awmod	;wreg free
  9273  012E76  0100               	movlb	0	; () banked
  9274  012E78  90D8               	bcf	status,0,c
  9275  012E7A  3771               	rlcf	?___awmod& (0+255),f,b
  9276  012E7C  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9277  012E7E  0100               	movlb	0	; () banked
  9278  012E80  90D8               	bcf	status,0,c
  9279  012E82  3771               	rlcf	?___awmod& (0+255),f,b
  9280  012E84  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9281  012E86  0EA9               	movlw	low __powers_
  9282  012E88  0100               	movlb	0	; () banked
  9283  012E8A  2571               	addwf	?___awmod& (0+255),w,b
  9284  012E8C  6EF6               	movwf	tblptrl,c
  9285  012E8E  0EFD               	movlw	high __powers_
  9286  012E90  0100               	movlb	0	; () banked
  9287  012E92  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9288  012E94  6EF7               	movwf	tblptrh,c
  9289  012E96                     	if	1	;There are 3 active tblptr bytes
  9290  012E96  6AF8               	clrf	tblptru,c
  9291  012E98  0E00               	movlw	low (__mediumconst shr (0+16))
  9292  012E9A  22F8               	addwfc	tblptru,f,c
  9293  012E9C                     	endif
  9294  012E9C  0009               	tblrd		*+
  9295  012E9E  CFF5 F083          	movff	tablat,___flmul@a
  9296  012EA2  0009               	tblrd		*+
  9297  012EA4  CFF5 F084          	movff	tablat,___flmul@a+1
  9298  012EA8  0009               	tblrd		*+
  9299  012EAA  CFF5 F085          	movff	tablat,___flmul@a+2
  9300  012EAE  000A               	tblrd		*-
  9301  012EB0  CFF5 F086          	movff	tablat,___flmul@a+3
  9302  012EB4  EC50  F09C         	call	___flmul	;wreg free
  9303  012EB8  D78E               	goto	L7
  9304  012EBA                     l8498:
  9305                           
  9306                           ;doprnt.c: 440: return _powers_[scl];
  9307  012EBA  0100               	movlb	0	; () banked
  9308  012EBC  51A0               	movf	scale@scl& (0+255),w,b
  9309  012EBE  0D04               	mullw	4
  9310  012EC0  0EA9               	movlw	low __powers_
  9311  012EC2  24F3               	addwf	prodl,w,c
  9312  012EC4  6EF6               	movwf	tblptrl,c
  9313  012EC6  0EFD               	movlw	high __powers_
  9314  012EC8  20F4               	addwfc	prodh,w,c
  9315  012ECA  6EF7               	movwf	tblptrh,c
  9316  012ECC                     	if	1	;There are 3 active tblptr bytes
  9317  012ECC  6AF8               	clrf	tblptru,c
  9318  012ECE  0E00               	movlw	low (__mediumconst shr (0+16))
  9319  012ED0  22F8               	addwfc	tblptru,f,c
  9320  012ED2                     	endif
  9321  012ED2  0009               	tblrd		*+
  9322  012ED4  CFF5 F098          	movff	tablat,?_scale
  9323  012ED8  0009               	tblrd		*+
  9324  012EDA  CFF5 F099          	movff	tablat,?_scale+1
  9325  012EDE  0009               	tblrd		*+
  9326  012EE0  CFF5 F09A          	movff	tablat,?_scale+2
  9327  012EE4  000A               	tblrd		*-
  9328  012EE6  CFF5 F09B          	movff	tablat,?_scale+3
  9329  012EEA  0012               	return	
  9330  012EEC                     __end_of_scale:
  9331                           	opt stack 0
  9332                           tblptru	equ	0xFF8
  9333                           tblptrh	equ	0xFF7
  9334                           tblptrl	equ	0xFF6
  9335                           tablat	equ	0xFF5
  9336                           prodh	equ	0xFF4
  9337                           prodl	equ	0xFF3
  9338                           intcon	equ	0xFF2
  9339                           postinc0	equ	0xFEE
  9340                           wreg	equ	0xFE8
  9341                           indf2	equ	0xFDF
  9342                           postinc2	equ	0xFDE
  9343                           fsr2h	equ	0xFDA
  9344                           fsr2l	equ	0xFD9
  9345                           status	equ	0xFD8
  9346                           
  9347 ;; *************** function _isdigit *****************
  9348 ;; Defined at:
  9349 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;  c               1    wreg     unsigned char 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  c               1   19[BANK0 ] unsigned char 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;		None               void
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9364 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;Total ram usage:        3 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    3
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_sprintf
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text12
  9378  0164C0                     __ptext12:
  9379                           	opt stack 0
  9380  0164C0                     _isdigit:
  9381                           	opt stack 25
  9382                           
  9383                           ;incstack = 0
  9384                           ;isdigit@c stored from wreg
  9385  0164C0  0100               	movlb	0	; () banked
  9386  0164C2  6F73               	movwf	isdigit@c& (0+255),b
  9387  0164C4  0E00               	movlw	0
  9388  0164C6  0100               	movlb	0	; () banked
  9389  0164C8  6F72               	movwf	_isdigit$3856& (0+255),b
  9390                           
  9391                           ; BSR set to: 0
  9392  0164CA  0E3A               	movlw	58
  9393  0164CC  0100               	movlb	0	; () banked
  9394  0164CE  6173               	cpfslt	isdigit@c& (0+255),b
  9395  0164D0  D007               	goto	l8510
  9396                           
  9397                           ; BSR set to: 0
  9398  0164D2  0E2F               	movlw	47
  9399  0164D4  0100               	movlb	0	; () banked
  9400  0164D6  6573               	cpfsgt	isdigit@c& (0+255),b
  9401  0164D8  D003               	goto	l8510
  9402                           
  9403                           ; BSR set to: 0
  9404  0164DA  0E01               	movlw	1
  9405  0164DC  0100               	movlb	0	; () banked
  9406  0164DE  6F72               	movwf	_isdigit$3856& (0+255),b
  9407  0164E0                     l8510:
  9408                           
  9409                           ; BSR set to: 0
  9410  0164E0  C072  F071         	movff	_isdigit$3856,??_isdigit
  9411  0164E4  0100               	movlb	0	; () banked
  9412  0164E6  3171               	rrcf	??_isdigit& (0+255),w,b
  9413  0164E8  0012               	return	
  9414  0164EA                     __end_of_isdigit:
  9415                           	opt stack 0
  9416                           tblptru	equ	0xFF8
  9417                           tblptrh	equ	0xFF7
  9418                           tblptrl	equ	0xFF6
  9419                           tablat	equ	0xFF5
  9420                           prodh	equ	0xFF4
  9421                           prodl	equ	0xFF3
  9422                           intcon	equ	0xFF2
  9423                           postinc0	equ	0xFEE
  9424                           wreg	equ	0xFE8
  9425                           indf2	equ	0xFDF
  9426                           postinc2	equ	0xFDE
  9427                           fsr2h	equ	0xFDA
  9428                           fsr2l	equ	0xFD9
  9429                           status	equ	0xFD8
  9430                           
  9431 ;; *************** function _fround *****************
  9432 ;; Defined at:
  9433 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  prec            1    wreg     unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  prec            1   68[BANK0 ] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  4   56[BANK0 ] unsigned char 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;Total ram usage:       13 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    4
  9454 ;; This function calls:
  9455 ;;		___awdiv
  9456 ;;		___awmod
  9457 ;;		___flmul
  9458 ;; This function is called by:
  9459 ;;		_sprintf
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text13
  9464  0144A4                     __ptext13:
  9465                           	opt stack 0
  9466  0144A4                     _fround:
  9467                           	opt stack 24
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;incstack = 0
  9471                           ;fround@prec stored from wreg
  9472  0144A4  0100               	movlb	0	; () banked
  9473  0144A6  6FA4               	movwf	fround@prec& (0+255),b
  9474                           
  9475                           ;doprnt.c: 413: if(prec>=110)
  9476  0144A8  0E6D               	movlw	109
  9477  0144AA  0100               	movlb	0	; () banked
  9478  0144AC  65A4               	cpfsgt	fround@prec& (0+255),b
  9479  0144AE  D0CD               	goto	l8452
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9483  0144B0  0E00               	movlw	0
  9484  0144B2  0100               	movlb	0	; () banked
  9485  0144B4  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9486  0144B6  0E0A               	movlw	10
  9487  0144B8  6F79               	movwf	___awdiv@divisor& (0+255),b
  9488  0144BA  0E00               	movlw	0
  9489  0144BC  0100               	movlb	0	; () banked
  9490  0144BE  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9491  0144C0  0E64               	movlw	100
  9492  0144C2  6F73               	movwf	___awmod@divisor& (0+255),b
  9493  0144C4  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9494  0144C8  0100               	movlb	0	; () banked
  9495  0144CA  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9496  0144CC  EC5F  F0AE         	call	___awmod	;wreg free
  9497  0144D0  C071  F077         	movff	?___awmod,___awdiv@dividend
  9498  0144D4  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9499  0144D8  EC94  F0AC         	call	___awdiv	;wreg free
  9500  0144DC  0100               	movlb	0	; () banked
  9501  0144DE  90D8               	bcf	status,0,c
  9502  0144E0  3777               	rlcf	?___awdiv& (0+255),f,b
  9503  0144E2  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9504  0144E4  0100               	movlb	0	; () banked
  9505  0144E6  90D8               	bcf	status,0,c
  9506  0144E8  3777               	rlcf	?___awdiv& (0+255),f,b
  9507  0144EA  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9508  0144EC  0E24               	movlw	36
  9509  0144EE  0100               	movlb	0	; () banked
  9510  0144F0  2777               	addwf	?___awdiv& (0+255),f,b
  9511  0144F2  0E00               	movlw	0
  9512  0144F4  0100               	movlb	0	; () banked
  9513  0144F6  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9514  0144F8  0E75               	movlw	low __npowers_
  9515  0144FA  0100               	movlb	0	; () banked
  9516  0144FC  2577               	addwf	?___awdiv& (0+255),w,b
  9517  0144FE  6EF6               	movwf	tblptrl,c
  9518  014500  0EFD               	movlw	high __npowers_
  9519  014502  0100               	movlb	0	; () banked
  9520  014504  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9521  014506  6EF7               	movwf	tblptrh,c
  9522  014508                     	if	1	;There are 3 active tblptr bytes
  9523  014508  6AF8               	clrf	tblptru,c
  9524  01450A  0E00               	movlw	low (__mediumconst shr (0+16))
  9525  01450C  22F8               	addwfc	tblptru,f,c
  9526  01450E                     	endif
  9527  01450E  0009               	tblrd		*+
  9528  014510  CFF5 F083          	movff	tablat,___flmul@a
  9529  014514  0009               	tblrd		*+
  9530  014516  CFF5 F084          	movff	tablat,___flmul@a+1
  9531  01451A  0009               	tblrd		*+
  9532  01451C  CFF5 F085          	movff	tablat,___flmul@a+2
  9533  014520  000A               	tblrd		*-
  9534  014522  CFF5 F086          	movff	tablat,___flmul@a+3
  9535  014526  0E00               	movlw	0
  9536  014528  0100               	movlb	0	; () banked
  9537  01452A  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9538  01452C  0E64               	movlw	100
  9539  01452E  6F79               	movwf	___awdiv@divisor& (0+255),b
  9540  014530  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  9541  014534  0100               	movlb	0	; () banked
  9542  014536  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9543  014538  EC94  F0AC         	call	___awdiv	;wreg free
  9544  01453C  0100               	movlb	0	; () banked
  9545  01453E  90D8               	bcf	status,0,c
  9546  014540  3777               	rlcf	?___awdiv& (0+255),f,b
  9547  014542  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9548  014544  0100               	movlb	0	; () banked
  9549  014546  90D8               	bcf	status,0,c
  9550  014548  3777               	rlcf	?___awdiv& (0+255),f,b
  9551  01454A  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9552  01454C  0E48               	movlw	72
  9553  01454E  0100               	movlb	0	; () banked
  9554  014550  2777               	addwf	?___awdiv& (0+255),f,b
  9555  014552  0E00               	movlw	0
  9556  014554  0100               	movlb	0	; () banked
  9557  014556  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9558  014558  0E75               	movlw	low __npowers_
  9559  01455A  0100               	movlb	0	; () banked
  9560  01455C  2577               	addwf	?___awdiv& (0+255),w,b
  9561  01455E  6EF6               	movwf	tblptrl,c
  9562  014560  0EFD               	movlw	high __npowers_
  9563  014562  0100               	movlb	0	; () banked
  9564  014564  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9565  014566  6EF7               	movwf	tblptrh,c
  9566  014568                     	if	1	;There are 3 active tblptr bytes
  9567  014568  6AF8               	clrf	tblptru,c
  9568  01456A  0E00               	movlw	low (__mediumconst shr (0+16))
  9569  01456C  22F8               	addwfc	tblptru,f,c
  9570  01456E                     	endif
  9571  01456E  0009               	tblrd		*+
  9572  014570  CFF5 F07F          	movff	tablat,___flmul@b
  9573  014574  0009               	tblrd		*+
  9574  014576  CFF5 F080          	movff	tablat,___flmul@b+1
  9575  01457A  0009               	tblrd		*+
  9576  01457C  CFF5 F081          	movff	tablat,___flmul@b+2
  9577  014580  000A               	tblrd		*-
  9578  014582  CFF5 F082          	movff	tablat,___flmul@b+3
  9579  014586  EC50  F09C         	call	___flmul	;wreg free
  9580  01458A  C07F  F0A0         	movff	?___flmul,_fround$4270
  9581  01458E  C080  F0A1         	movff	?___flmul+1,_fround$4270+1
  9582  014592  C081  F0A2         	movff	?___flmul+2,_fround$4270+2
  9583  014596  C082  F0A3         	movff	?___flmul+3,_fround$4270+3
  9584                           
  9585                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9586  01459A  0E00               	movlw	0
  9587  01459C  0100               	movlb	0	; () banked
  9588  01459E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9589  0145A0  0E0A               	movlw	10
  9590  0145A2  6F73               	movwf	___awmod@divisor& (0+255),b
  9591  0145A4  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9592  0145A8  0100               	movlb	0	; () banked
  9593  0145AA  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9594  0145AC  EC5F  F0AE         	call	___awmod	;wreg free
  9595  0145B0  0100               	movlb	0	; () banked
  9596  0145B2  90D8               	bcf	status,0,c
  9597  0145B4  3771               	rlcf	?___awmod& (0+255),f,b
  9598  0145B6  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9599  0145B8  0100               	movlb	0	; () banked
  9600  0145BA  90D8               	bcf	status,0,c
  9601  0145BC  3771               	rlcf	?___awmod& (0+255),f,b
  9602  0145BE  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9603  0145C0  0E75               	movlw	low __npowers_
  9604  0145C2  0100               	movlb	0	; () banked
  9605  0145C4  2571               	addwf	?___awmod& (0+255),w,b
  9606  0145C6  6EF6               	movwf	tblptrl,c
  9607  0145C8  0EFD               	movlw	high __npowers_
  9608  0145CA  0100               	movlb	0	; () banked
  9609  0145CC  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9610  0145CE  6EF7               	movwf	tblptrh,c
  9611  0145D0                     	if	1	;There are 3 active tblptr bytes
  9612  0145D0  6AF8               	clrf	tblptru,c
  9613  0145D2  0E00               	movlw	low (__mediumconst shr (0+16))
  9614  0145D4  22F8               	addwfc	tblptru,f,c
  9615  0145D6                     	endif
  9616  0145D6  0009               	tblrd		*+
  9617  0145D8  CFF5 F083          	movff	tablat,___flmul@a
  9618  0145DC  0009               	tblrd		*+
  9619  0145DE  CFF5 F084          	movff	tablat,___flmul@a+1
  9620  0145E2  0009               	tblrd		*+
  9621  0145E4  CFF5 F085          	movff	tablat,___flmul@a+2
  9622  0145E8  000A               	tblrd		*-
  9623  0145EA  CFF5 F086          	movff	tablat,___flmul@a+3
  9624  0145EE  C0A0  F07F         	movff	_fround$4270,___flmul@b
  9625  0145F2  C0A1  F080         	movff	_fround$4270+1,___flmul@b+1
  9626  0145F6  C0A2  F081         	movff	_fround$4270+2,___flmul@b+2
  9627  0145FA  C0A3  F082         	movff	_fround$4270+3,___flmul@b+3
  9628  0145FE  EC50  F09C         	call	___flmul	;wreg free
  9629  014602  C07F  F09C         	movff	?___flmul,_fround$4271
  9630  014606  C080  F09D         	movff	?___flmul+1,_fround$4271+1
  9631  01460A  C081  F09E         	movff	?___flmul+2,_fround$4271+2
  9632  01460E  C082  F09F         	movff	?___flmul+3,_fround$4271+3
  9633                           
  9634                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9635  014612  C09C  F07F         	movff	_fround$4271,___flmul@b
  9636  014616  C09D  F080         	movff	_fround$4271+1,___flmul@b+1
  9637  01461A  C09E  F081         	movff	_fround$4271+2,___flmul@b+2
  9638  01461E  C09F  F082         	movff	_fround$4271+3,___flmul@b+3
  9639  014622  0E00               	movlw	0
  9640  014624  0100               	movlb	0	; () banked
  9641  014626  6F83               	movwf	___flmul@a& (0+255),b
  9642  014628  0E00               	movlw	0
  9643  01462A  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9644  01462C  0E00               	movlw	0
  9645  01462E  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9646  014630  0E3F               	movlw	63
  9647  014632  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9648  014634  EC50  F09C         	call	___flmul	;wreg free
  9649  014638  C07F  F098         	movff	?___flmul,?_fround
  9650  01463C  C080  F099         	movff	?___flmul+1,?_fround+1
  9651  014640  C081  F09A         	movff	?___flmul+2,?_fround+2
  9652  014644  C082  F09B         	movff	?___flmul+3,?_fround+3
  9653  014648  0012               	return	
  9654  01464A                     l8452:
  9655                           
  9656                           ;doprnt.c: 415: else if(prec > 10)
  9657  01464A  0E0A               	movlw	10
  9658  01464C  0100               	movlb	0	; () banked
  9659  01464E  65A4               	cpfsgt	fround@prec& (0+255),b
  9660  014650  D078               	goto	l8460
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9664  014652  0E00               	movlw	0
  9665  014654  0100               	movlb	0	; () banked
  9666  014656  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9667  014658  0E0A               	movlw	10
  9668  01465A  6F73               	movwf	___awmod@divisor& (0+255),b
  9669  01465C  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9670  014660  0100               	movlb	0	; () banked
  9671  014662  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9672  014664  EC5F  F0AE         	call	___awmod	;wreg free
  9673  014668  0100               	movlb	0	; () banked
  9674  01466A  90D8               	bcf	status,0,c
  9675  01466C  3771               	rlcf	?___awmod& (0+255),f,b
  9676  01466E  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9677  014670  0100               	movlb	0	; () banked
  9678  014672  90D8               	bcf	status,0,c
  9679  014674  3771               	rlcf	?___awmod& (0+255),f,b
  9680  014676  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9681  014678  0E75               	movlw	low __npowers_
  9682  01467A  0100               	movlb	0	; () banked
  9683  01467C  2571               	addwf	?___awmod& (0+255),w,b
  9684  01467E  6EF6               	movwf	tblptrl,c
  9685  014680  0EFD               	movlw	high __npowers_
  9686  014682  0100               	movlb	0	; () banked
  9687  014684  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9688  014686  6EF7               	movwf	tblptrh,c
  9689  014688                     	if	1	;There are 3 active tblptr bytes
  9690  014688  6AF8               	clrf	tblptru,c
  9691  01468A  0E00               	movlw	low (__mediumconst shr (0+16))
  9692  01468C  22F8               	addwfc	tblptru,f,c
  9693  01468E                     	endif
  9694  01468E  0009               	tblrd		*+
  9695  014690  CFF5 F083          	movff	tablat,___flmul@a
  9696  014694  0009               	tblrd		*+
  9697  014696  CFF5 F084          	movff	tablat,___flmul@a+1
  9698  01469A  0009               	tblrd		*+
  9699  01469C  CFF5 F085          	movff	tablat,___flmul@a+2
  9700  0146A0  000A               	tblrd		*-
  9701  0146A2  CFF5 F086          	movff	tablat,___flmul@a+3
  9702  0146A6  0E00               	movlw	0
  9703  0146A8  0100               	movlb	0	; () banked
  9704  0146AA  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9705  0146AC  0E0A               	movlw	10
  9706  0146AE  6F79               	movwf	___awdiv@divisor& (0+255),b
  9707  0146B0  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  9708  0146B4  0100               	movlb	0	; () banked
  9709  0146B6  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9710  0146B8  EC94  F0AC         	call	___awdiv	;wreg free
  9711  0146BC  0100               	movlb	0	; () banked
  9712  0146BE  90D8               	bcf	status,0,c
  9713  0146C0  3777               	rlcf	?___awdiv& (0+255),f,b
  9714  0146C2  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9715  0146C4  0100               	movlb	0	; () banked
  9716  0146C6  90D8               	bcf	status,0,c
  9717  0146C8  3777               	rlcf	?___awdiv& (0+255),f,b
  9718  0146CA  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9719  0146CC  0E24               	movlw	36
  9720  0146CE  0100               	movlb	0	; () banked
  9721  0146D0  2777               	addwf	?___awdiv& (0+255),f,b
  9722  0146D2  0E00               	movlw	0
  9723  0146D4  0100               	movlb	0	; () banked
  9724  0146D6  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9725  0146D8  0E75               	movlw	low __npowers_
  9726  0146DA  0100               	movlb	0	; () banked
  9727  0146DC  2577               	addwf	?___awdiv& (0+255),w,b
  9728  0146DE  6EF6               	movwf	tblptrl,c
  9729  0146E0  0EFD               	movlw	high __npowers_
  9730  0146E2  0100               	movlb	0	; () banked
  9731  0146E4  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9732  0146E6  6EF7               	movwf	tblptrh,c
  9733  0146E8                     	if	1	;There are 3 active tblptr bytes
  9734  0146E8  6AF8               	clrf	tblptru,c
  9735  0146EA  0E00               	movlw	low (__mediumconst shr (0+16))
  9736  0146EC  22F8               	addwfc	tblptru,f,c
  9737  0146EE                     	endif
  9738  0146EE  0009               	tblrd		*+
  9739  0146F0  CFF5 F07F          	movff	tablat,___flmul@b
  9740  0146F4  0009               	tblrd		*+
  9741  0146F6  CFF5 F080          	movff	tablat,___flmul@b+1
  9742  0146FA  0009               	tblrd		*+
  9743  0146FC  CFF5 F081          	movff	tablat,___flmul@b+2
  9744  014700  000A               	tblrd		*-
  9745  014702  CFF5 F082          	movff	tablat,___flmul@b+3
  9746  014706  EC50  F09C         	call	___flmul	;wreg free
  9747  01470A  C07F  F0A0         	movff	?___flmul,_fround$4270
  9748  01470E  C080  F0A1         	movff	?___flmul+1,_fround$4270+1
  9749  014712  C081  F0A2         	movff	?___flmul+2,_fround$4270+2
  9750  014716  C082  F0A3         	movff	?___flmul+3,_fround$4270+3
  9751                           
  9752                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9753  01471A  C0A0  F07F         	movff	_fround$4270,___flmul@b
  9754  01471E  C0A1  F080         	movff	_fround$4270+1,___flmul@b+1
  9755  014722  C0A2  F081         	movff	_fround$4270+2,___flmul@b+2
  9756  014726  C0A3  F082         	movff	_fround$4270+3,___flmul@b+3
  9757  01472A  0E00               	movlw	0
  9758  01472C  0100               	movlb	0	; () banked
  9759  01472E  6F83               	movwf	___flmul@a& (0+255),b
  9760  014730  0E00               	movlw	0
  9761  014732  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9762  014734  0E00               	movlw	0
  9763  014736  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9764  014738  0E3F               	movlw	63
  9765  01473A  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9766  01473C  EC50  F09C         	call	___flmul	;wreg free
  9767  014740  D77B               	goto	L8
  9768  014742                     l8460:
  9769                           
  9770                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9771  014742  0100               	movlb	0	; () banked
  9772  014744  51A4               	movf	fround@prec& (0+255),w,b
  9773  014746  0D04               	mullw	4
  9774  014748  0E75               	movlw	low __npowers_
  9775  01474A  24F3               	addwf	prodl,w,c
  9776  01474C  6EF6               	movwf	tblptrl,c
  9777  01474E  0EFD               	movlw	high __npowers_
  9778  014750  20F4               	addwfc	prodh,w,c
  9779  014752  6EF7               	movwf	tblptrh,c
  9780  014754                     	if	1	;There are 3 active tblptr bytes
  9781  014754  6AF8               	clrf	tblptru,c
  9782  014756  0E00               	movlw	low (__mediumconst shr (0+16))
  9783  014758  22F8               	addwfc	tblptru,f,c
  9784  01475A                     	endif
  9785  01475A  0009               	tblrd		*+
  9786  01475C  CFF5 F07F          	movff	tablat,___flmul@b
  9787  014760  0009               	tblrd		*+
  9788  014762  CFF5 F080          	movff	tablat,___flmul@b+1
  9789  014766  0009               	tblrd		*+
  9790  014768  CFF5 F081          	movff	tablat,___flmul@b+2
  9791  01476C  000A               	tblrd		*-
  9792  01476E  CFF5 F082          	movff	tablat,___flmul@b+3
  9793  014772  0E00               	movlw	0
  9794  014774  0100               	movlb	0	; () banked
  9795  014776  6F83               	movwf	___flmul@a& (0+255),b
  9796  014778  0E00               	movlw	0
  9797  01477A  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9798  01477C  0E00               	movlw	0
  9799  01477E  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9800  014780  0E3F               	movlw	63
  9801  014782  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9802  014784  EC50  F09C         	call	___flmul	;wreg free
  9803  014788  C07F  F098         	movff	?___flmul,?_fround
  9804  01478C  C080  F099         	movff	?___flmul+1,?_fround+1
  9805  014790  C081  F09A         	movff	?___flmul+2,?_fround+2
  9806  014794  C082  F09B         	movff	?___flmul+3,?_fround+3
  9807  014798  0012               	return	
  9808  01479A                     __end_of_fround:
  9809                           	opt stack 0
  9810                           tblptru	equ	0xFF8
  9811                           tblptrh	equ	0xFF7
  9812                           tblptrl	equ	0xFF6
  9813                           tablat	equ	0xFF5
  9814                           prodh	equ	0xFF4
  9815                           prodl	equ	0xFF3
  9816                           intcon	equ	0xFF2
  9817                           postinc0	equ	0xFEE
  9818                           wreg	equ	0xFE8
  9819                           indf2	equ	0xFDF
  9820                           postinc2	equ	0xFDE
  9821                           fsr2h	equ	0xFDA
  9822                           fsr2l	equ	0xFD9
  9823                           status	equ	0xFD8
  9824                           
  9825 ;; *************** function ___flmul *****************
  9826 ;; Defined at:
  9827 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  b               4   31[BANK0 ] unsigned char 
  9830 ;;  a               4   35[BANK0 ] unsigned char 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;  prod            4   50[BANK0 ] struct .
  9833 ;;  grs             4   45[BANK0 ] unsigned long 
  9834 ;;  temp            2   54[BANK0 ] struct .
  9835 ;;  bexp            1   49[BANK0 ] unsigned char 
  9836 ;;  aexp            1   44[BANK0 ] unsigned char 
  9837 ;;  sign            1   43[BANK0 ] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  4   31[BANK0 ] unsigned char 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0, prodl, prodh
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9850 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;Total ram usage:       25 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:    3
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_main
  9858 ;;		_fround
  9859 ;;		_scale
  9860 ;;		_sprintf
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text14
  9865  0138A0                     __ptext14:
  9866                           	opt stack 0
  9867  0138A0                     ___flmul:
  9868                           	opt stack 27
  9869                           
  9870                           ;incstack = 0
  9871  0138A0  0100               	movlb	0	; () banked
  9872  0138A2  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9873  0138A4  0B80               	andlw	128
  9874  0138A6  0100               	movlb	0	; () banked
  9875  0138A8  6F8B               	movwf	___flmul@sign& (0+255),b
  9876  0138AA  0100               	movlb	0	; () banked
  9877  0138AC  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9878  0138AE  2582               	addwf	(___flmul@b+3)& (0+255),w,b
  9879  0138B0  0100               	movlb	0	; () banked
  9880  0138B2  6F91               	movwf	___flmul@bexp& (0+255),b
  9881                           
  9882                           ; BSR set to: 0
  9883  0138B4  0100               	movlb	0	; () banked
  9884  0138B6  AF81               	btfss	(___flmul@b+2)& (0+255),7,b
  9885  0138B8  D002               	goto	l8206
  9886                           
  9887                           ; BSR set to: 0
  9888  0138BA  0100               	movlb	0	; () banked
  9889  0138BC  8191               	bsf	___flmul@bexp& (0+255),0,b
  9890  0138BE                     l8206:
  9891                           
  9892                           ; BSR set to: 0
  9893  0138BE  0100               	movlb	0	; () banked
  9894  0138C0  5191               	movf	___flmul@bexp& (0+255),w,b
  9895  0138C2  0100               	movlb	0	; () banked
  9896  0138C4  B4D8               	btfsc	status,2,c
  9897  0138C6  D010               	goto	l8214
  9898                           
  9899                           ; BSR set to: 0
  9900  0138C8  0100               	movlb	0	; () banked
  9901  0138CA  2991               	incf	___flmul@bexp& (0+255),w,b
  9902  0138CC  A4D8               	btfss	status,2,c
  9903  0138CE  D009               	goto	l8212
  9904                           
  9905                           ; BSR set to: 0
  9906  0138D0  0E00               	movlw	0
  9907  0138D2  0100               	movlb	0	; () banked
  9908  0138D4  6F7F               	movwf	___flmul@b& (0+255),b
  9909  0138D6  0E00               	movlw	0
  9910  0138D8  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9911  0138DA  0E00               	movlw	0
  9912  0138DC  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9913  0138DE  0E00               	movlw	0
  9914  0138E0  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9915  0138E2                     l8212:
  9916                           
  9917                           ; BSR set to: 0
  9918  0138E2  0100               	movlb	0	; () banked
  9919  0138E4  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
  9920  0138E6  D009               	goto	l8216
  9921  0138E8                     l8214:
  9922                           
  9923                           ; BSR set to: 0
  9924  0138E8  0E00               	movlw	0
  9925  0138EA  0100               	movlb	0	; () banked
  9926  0138EC  6F7F               	movwf	___flmul@b& (0+255),b
  9927  0138EE  0E00               	movlw	0
  9928  0138F0  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9929  0138F2  0E00               	movlw	0
  9930  0138F4  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9931  0138F6  0E00               	movlw	0
  9932  0138F8  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9933  0138FA                     l8216:
  9934                           
  9935                           ; BSR set to: 0
  9936  0138FA  0100               	movlb	0	; () banked
  9937  0138FC  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9938  0138FE  0B80               	andlw	128
  9939  013900  0100               	movlb	0	; () banked
  9940  013902  1B8B               	xorwf	___flmul@sign& (0+255),f,b
  9941                           
  9942                           ; BSR set to: 0
  9943  013904  0100               	movlb	0	; () banked
  9944  013906  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9945  013908  2586               	addwf	(___flmul@a+3)& (0+255),w,b
  9946  01390A  0100               	movlb	0	; () banked
  9947  01390C  6F8C               	movwf	___flmul@aexp& (0+255),b
  9948                           
  9949                           ; BSR set to: 0
  9950  01390E  0100               	movlb	0	; () banked
  9951  013910  AF85               	btfss	(___flmul@a+2)& (0+255),7,b
  9952  013912  D002               	goto	l8224
  9953                           
  9954                           ; BSR set to: 0
  9955  013914  0100               	movlb	0	; () banked
  9956  013916  818C               	bsf	___flmul@aexp& (0+255),0,b
  9957  013918                     l8224:
  9958                           
  9959                           ; BSR set to: 0
  9960  013918  0100               	movlb	0	; () banked
  9961  01391A  518C               	movf	___flmul@aexp& (0+255),w,b
  9962  01391C  0100               	movlb	0	; () banked
  9963  01391E  B4D8               	btfsc	status,2,c
  9964  013920  D010               	goto	l8232
  9965                           
  9966                           ; BSR set to: 0
  9967  013922  0100               	movlb	0	; () banked
  9968  013924  298C               	incf	___flmul@aexp& (0+255),w,b
  9969  013926  A4D8               	btfss	status,2,c
  9970  013928  D009               	goto	l8230
  9971                           
  9972                           ; BSR set to: 0
  9973  01392A  0E00               	movlw	0
  9974  01392C  0100               	movlb	0	; () banked
  9975  01392E  6F83               	movwf	___flmul@a& (0+255),b
  9976  013930  0E00               	movlw	0
  9977  013932  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9978  013934  0E00               	movlw	0
  9979  013936  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9980  013938  0E00               	movlw	0
  9981  01393A  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9982  01393C                     l8230:
  9983                           
  9984                           ; BSR set to: 0
  9985  01393C  0100               	movlb	0	; () banked
  9986  01393E  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
  9987  013940  D009               	goto	l1648
  9988  013942                     l8232:
  9989                           
  9990                           ; BSR set to: 0
  9991  013942  0E00               	movlw	0
  9992  013944  0100               	movlb	0	; () banked
  9993  013946  6F83               	movwf	___flmul@a& (0+255),b
  9994  013948  0E00               	movlw	0
  9995  01394A  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9996  01394C  0E00               	movlw	0
  9997  01394E  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9998  013950  0E00               	movlw	0
  9999  013952  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10000  013954                     l1648:
 10001                           
 10002                           ; BSR set to: 0
 10003  013954  0100               	movlb	0	; () banked
 10004  013956  518C               	movf	___flmul@aexp& (0+255),w,b
 10005  013958  0100               	movlb	0	; () banked
 10006  01395A  B4D8               	btfsc	status,2,c
 10007  01395C  D005               	goto	l8236
 10008                           
 10009                           ; BSR set to: 0
 10010  01395E  0100               	movlb	0	; () banked
 10011  013960  5191               	movf	___flmul@bexp& (0+255),w,b
 10012  013962  0100               	movlb	0	; () banked
 10013  013964  A4D8               	btfss	status,2,c
 10014  013966  D00A               	goto	l8240
 10015  013968                     l8236:
 10016                           
 10017                           ; BSR set to: 0
 10018  013968  0E00               	movlw	0
 10019  01396A  0100               	movlb	0	; () banked
 10020  01396C  6F7F               	movwf	?___flmul& (0+255),b
 10021  01396E  0E00               	movlw	0
 10022  013970  6F80               	movwf	(?___flmul+1)& (0+255),b
 10023  013972  0E00               	movlw	0
 10024  013974  6F81               	movwf	(?___flmul+2)& (0+255),b
 10025  013976  0E00               	movlw	0
 10026  013978  6F82               	movwf	(?___flmul+3)& (0+255),b
 10027                           
 10028                           ; BSR set to: 0
 10029  01397A  0012               	return	
 10030  01397C                     l8240:
 10031                           
 10032                           ; BSR set to: 0
 10033  01397C  0100               	movlb	0	; () banked
 10034  01397E  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10035  013980  0100               	movlb	0	; () banked
 10036  013982  037F               	mulwf	___flmul@b& (0+255),b
 10037  013984  CFF3 F096          	movff	prodl,___flmul@temp
 10038  013988  CFF4 F097          	movff	prodh,___flmul@temp+1
 10039                           
 10040                           ; BSR set to: 0
 10041  01398C  0100               	movlb	0	; () banked
 10042  01398E  5196               	movf	___flmul@temp& (0+255),w,b
 10043  013990  0100               	movlb	0	; () banked
 10044  013992  6F8D               	movwf	___flmul@grs& (0+255),b
 10045  013994  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
 10046  013996  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
 10047  013998  6B90               	clrf	(___flmul@grs+3)& (0+255),b
 10048                           
 10049                           ; BSR set to: 0
 10050  01399A  0100               	movlb	0	; () banked
 10051  01399C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10052  01399E  0100               	movlb	0	; () banked
 10053  0139A0  6F92               	movwf	___flmul@prod& (0+255),b
 10054  0139A2  6B93               	clrf	(___flmul@prod+1)& (0+255),b
 10055  0139A4  6B94               	clrf	(___flmul@prod+2)& (0+255),b
 10056  0139A6  6B95               	clrf	(___flmul@prod+3)& (0+255),b
 10057  0139A8  0100               	movlb	0	; () banked
 10058  0139AA  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10059  0139AC  0100               	movlb	0	; () banked
 10060  0139AE  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10061  0139B0  CFF3 F096          	movff	prodl,___flmul@temp
 10062  0139B4  CFF4 F097          	movff	prodh,___flmul@temp+1
 10063                           
 10064                           ; BSR set to: 0
 10065  0139B8  0100               	movlb	0	; () banked
 10066  0139BA  5196               	movf	___flmul@temp& (0+255),w,b
 10067  0139BC  0100               	movlb	0	; () banked
 10068  0139BE  278D               	addwf	___flmul@grs& (0+255),f,b
 10069  0139C0  0E00               	movlw	0
 10070  0139C2  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10071  0139C4  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10072  0139C6  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10073                           
 10074                           ; BSR set to: 0
 10075  0139C8  0100               	movlb	0	; () banked
 10076  0139CA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10077  0139CC  0100               	movlb	0	; () banked
 10078  0139CE  2792               	addwf	___flmul@prod& (0+255),f,b
 10079  0139D0  0E00               	movlw	0
 10080  0139D2  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10081  0139D4  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10082  0139D6  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10083  0139D8  0100               	movlb	0	; () banked
 10084  0139DA  5183               	movf	___flmul@a& (0+255),w,b
 10085  0139DC  0100               	movlb	0	; () banked
 10086  0139DE  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10087  0139E0  CFF3 F096          	movff	prodl,___flmul@temp
 10088  0139E4  CFF4 F097          	movff	prodh,___flmul@temp+1
 10089                           
 10090                           ; BSR set to: 0
 10091  0139E8  0100               	movlb	0	; () banked
 10092  0139EA  5196               	movf	___flmul@temp& (0+255),w,b
 10093  0139EC  0100               	movlb	0	; () banked
 10094  0139EE  278D               	addwf	___flmul@grs& (0+255),f,b
 10095  0139F0  0E00               	movlw	0
 10096  0139F2  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10097  0139F4  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10098  0139F6  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10099                           
 10100                           ; BSR set to: 0
 10101  0139F8  0100               	movlb	0	; () banked
 10102  0139FA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10103  0139FC  0100               	movlb	0	; () banked
 10104  0139FE  2792               	addwf	___flmul@prod& (0+255),f,b
 10105  013A00  0E00               	movlw	0
 10106  013A02  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10107  013A04  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10108  013A06  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10109                           
 10110                           ; BSR set to: 0
 10111  013A08  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10112  013A0C  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10113  013A10  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10114  013A14  0100               	movlb	0	; () banked
 10115  013A16  6B8D               	clrf	___flmul@grs& (0+255),b
 10116                           
 10117                           ; BSR set to: 0
 10118  013A18  0100               	movlb	0	; () banked
 10119  013A1A  5183               	movf	___flmul@a& (0+255),w,b
 10120  013A1C  0100               	movlb	0	; () banked
 10121  013A1E  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10122  013A20  CFF3 F096          	movff	prodl,___flmul@temp
 10123  013A24  CFF4 F097          	movff	prodh,___flmul@temp+1
 10124                           
 10125                           ; BSR set to: 0
 10126  013A28  0100               	movlb	0	; () banked
 10127  013A2A  5196               	movf	___flmul@temp& (0+255),w,b
 10128  013A2C  0100               	movlb	0	; () banked
 10129  013A2E  278D               	addwf	___flmul@grs& (0+255),f,b
 10130  013A30  0100               	movlb	0	; () banked
 10131  013A32  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10132  013A34  0100               	movlb	0	; () banked
 10133  013A36  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10134  013A38  0E00               	movlw	0
 10135  013A3A  0100               	movlb	0	; () banked
 10136  013A3C  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10137  013A3E  0E00               	movlw	0
 10138  013A40  0100               	movlb	0	; () banked
 10139  013A42  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10140                           
 10141                           ; BSR set to: 0
 10142  013A44  0100               	movlb	0	; () banked
 10143  013A46  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10144  013A48  0100               	movlb	0	; () banked
 10145  013A4A  037F               	mulwf	___flmul@b& (0+255),b
 10146  013A4C  CFF3 F096          	movff	prodl,___flmul@temp
 10147  013A50  CFF4 F097          	movff	prodh,___flmul@temp+1
 10148                           
 10149                           ; BSR set to: 0
 10150  013A54  0100               	movlb	0	; () banked
 10151  013A56  5196               	movf	___flmul@temp& (0+255),w,b
 10152  013A58  0100               	movlb	0	; () banked
 10153  013A5A  278D               	addwf	___flmul@grs& (0+255),f,b
 10154  013A5C  0100               	movlb	0	; () banked
 10155  013A5E  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10156  013A60  0100               	movlb	0	; () banked
 10157  013A62  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10158  013A64  0E00               	movlw	0
 10159  013A66  0100               	movlb	0	; () banked
 10160  013A68  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10161  013A6A  0E00               	movlw	0
 10162  013A6C  0100               	movlb	0	; () banked
 10163  013A6E  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10164                           
 10165                           ; BSR set to: 0
 10166  013A70  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10167  013A74  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10168  013A78  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10169  013A7C  0100               	movlb	0	; () banked
 10170  013A7E  6B8D               	clrf	___flmul@grs& (0+255),b
 10171  013A80  0100               	movlb	0	; () banked
 10172  013A82  5183               	movf	___flmul@a& (0+255),w,b
 10173  013A84  0100               	movlb	0	; () banked
 10174  013A86  037F               	mulwf	___flmul@b& (0+255),b
 10175  013A88  CFF3 F096          	movff	prodl,___flmul@temp
 10176  013A8C  CFF4 F097          	movff	prodh,___flmul@temp+1
 10177                           
 10178                           ; BSR set to: 0
 10179  013A90  0100               	movlb	0	; () banked
 10180  013A92  5196               	movf	___flmul@temp& (0+255),w,b
 10181  013A94  0100               	movlb	0	; () banked
 10182  013A96  278D               	addwf	___flmul@grs& (0+255),f,b
 10183  013A98  0100               	movlb	0	; () banked
 10184  013A9A  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10185  013A9C  0100               	movlb	0	; () banked
 10186  013A9E  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10187  013AA0  0E00               	movlw	0
 10188  013AA2  0100               	movlb	0	; () banked
 10189  013AA4  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10190  013AA6  0E00               	movlw	0
 10191  013AA8  0100               	movlb	0	; () banked
 10192  013AAA  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10193                           
 10194                           ; BSR set to: 0
 10195  013AAC  0100               	movlb	0	; () banked
 10196  013AAE  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10197  013AB0  0100               	movlb	0	; () banked
 10198  013AB2  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10199  013AB4  CFF3 F096          	movff	prodl,___flmul@temp
 10200  013AB8  CFF4 F097          	movff	prodh,___flmul@temp+1
 10201  013ABC  0100               	movlb	0	; () banked
 10202  013ABE  5196               	movf	___flmul@temp& (0+255),w,b
 10203  013AC0  0100               	movlb	0	; () banked
 10204  013AC2  2792               	addwf	___flmul@prod& (0+255),f,b
 10205  013AC4  0100               	movlb	0	; () banked
 10206  013AC6  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10207  013AC8  0100               	movlb	0	; () banked
 10208  013ACA  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10209  013ACC  0E00               	movlw	0
 10210  013ACE  0100               	movlb	0	; () banked
 10211  013AD0  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10212  013AD2  0E00               	movlw	0
 10213  013AD4  0100               	movlb	0	; () banked
 10214  013AD6  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10215                           
 10216                           ; BSR set to: 0
 10217  013AD8  0100               	movlb	0	; () banked
 10218  013ADA  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10219  013ADC  0100               	movlb	0	; () banked
 10220  013ADE  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10221  013AE0  CFF3 F096          	movff	prodl,___flmul@temp
 10222  013AE4  CFF4 F097          	movff	prodh,___flmul@temp+1
 10223                           
 10224                           ; BSR set to: 0
 10225  013AE8  0100               	movlb	0	; () banked
 10226  013AEA  5196               	movf	___flmul@temp& (0+255),w,b
 10227  013AEC  0100               	movlb	0	; () banked
 10228  013AEE  2792               	addwf	___flmul@prod& (0+255),f,b
 10229  013AF0  0100               	movlb	0	; () banked
 10230  013AF2  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10231  013AF4  0100               	movlb	0	; () banked
 10232  013AF6  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10233  013AF8  0E00               	movlw	0
 10234  013AFA  0100               	movlb	0	; () banked
 10235  013AFC  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10236  013AFE  0E00               	movlw	0
 10237  013B00  0100               	movlb	0	; () banked
 10238  013B02  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10239  013B04  0100               	movlb	0	; () banked
 10240  013B06  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10241  013B08  0100               	movlb	0	; () banked
 10242  013B0A  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10243  013B0C  CFF3 F096          	movff	prodl,___flmul@temp
 10244  013B10  CFF4 F097          	movff	prodh,___flmul@temp+1
 10245                           
 10246                           ; BSR set to: 0
 10247  013B14  0100               	movlb	0	; () banked
 10248  013B16  5196               	movf	___flmul@temp& (0+255),w,b
 10249  013B18  0100               	movlb	0	; () banked
 10250  013B1A  6F87               	movwf	??___flmul& (0+255),b
 10251  013B1C  0100               	movlb	0	; () banked
 10252  013B1E  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10253  013B20  0100               	movlb	0	; () banked
 10254  013B22  6F88               	movwf	(??___flmul+1)& (0+255),b
 10255  013B24  0100               	movlb	0	; () banked
 10256  013B26  6B89               	clrf	(??___flmul+2)& (0+255),b
 10257  013B28  0100               	movlb	0	; () banked
 10258  013B2A  6B8A               	clrf	(??___flmul+3)& (0+255),b
 10259  013B2C  C089  F08A         	movff	??___flmul+2,??___flmul+3
 10260  013B30  C088  F089         	movff	??___flmul+1,??___flmul+2
 10261  013B34  C087  F088         	movff	??___flmul,??___flmul+1
 10262  013B38  0100               	movlb	0	; () banked
 10263  013B3A  6B87               	clrf	??___flmul& (0+255),b
 10264  013B3C  0100               	movlb	0	; () banked
 10265  013B3E  5187               	movf	??___flmul& (0+255),w,b
 10266  013B40  0100               	movlb	0	; () banked
 10267  013B42  2792               	addwf	___flmul@prod& (0+255),f,b
 10268  013B44  0100               	movlb	0	; () banked
 10269  013B46  5188               	movf	(??___flmul+1)& (0+255),w,b
 10270  013B48  0100               	movlb	0	; () banked
 10271  013B4A  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10272  013B4C  0100               	movlb	0	; () banked
 10273  013B4E  5189               	movf	(??___flmul+2)& (0+255),w,b
 10274  013B50  0100               	movlb	0	; () banked
 10275  013B52  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10276  013B54  0100               	movlb	0	; () banked
 10277  013B56  518A               	movf	(??___flmul+3)& (0+255),w,b
 10278  013B58  0100               	movlb	0	; () banked
 10279  013B5A  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10280                           
 10281                           ; BSR set to: 0
 10282  013B5C  C08D  F087         	movff	___flmul@grs,??___flmul
 10283  013B60  C08E  F088         	movff	___flmul@grs+1,??___flmul+1
 10284  013B64  C08F  F089         	movff	___flmul@grs+2,??___flmul+2
 10285  013B68  C090  F08A         	movff	___flmul@grs+3,??___flmul+3
 10286  013B6C  0E19               	movlw	25
 10287  013B6E  D006               	goto	u10900
 10288  013B70                     u10905:
 10289  013B70  0100               	movlb	0	; () banked
 10290  013B72  90D8               	bcf	status,0,c
 10291  013B74  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 10292  013B76  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 10293  013B78  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 10294  013B7A  3387               	rrcf	??___flmul& (0+255),f,b
 10295  013B7C                     u10900:
 10296  013B7C  2EE8               	decfsz	wreg,f,c
 10297  013B7E  D7F8               	goto	u10905
 10298  013B80  0100               	movlb	0	; () banked
 10299  013B82  5187               	movf	??___flmul& (0+255),w,b
 10300  013B84  0100               	movlb	0	; () banked
 10301  013B86  2792               	addwf	___flmul@prod& (0+255),f,b
 10302  013B88  0100               	movlb	0	; () banked
 10303  013B8A  5188               	movf	(??___flmul+1)& (0+255),w,b
 10304  013B8C  0100               	movlb	0	; () banked
 10305  013B8E  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10306  013B90  0100               	movlb	0	; () banked
 10307  013B92  5189               	movf	(??___flmul+2)& (0+255),w,b
 10308  013B94  0100               	movlb	0	; () banked
 10309  013B96  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10310  013B98  0100               	movlb	0	; () banked
 10311  013B9A  518A               	movf	(??___flmul+3)& (0+255),w,b
 10312  013B9C  0100               	movlb	0	; () banked
 10313  013B9E  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10314                           
 10315                           ; BSR set to: 0
 10316  013BA0  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10317  013BA4  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10318  013BA8  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10319  013BAC  0100               	movlb	0	; () banked
 10320  013BAE  6B8D               	clrf	___flmul@grs& (0+255),b
 10321                           
 10322                           ; BSR set to: 0
 10323  013BB0  0100               	movlb	0	; () banked
 10324  013BB2  518C               	movf	___flmul@aexp& (0+255),w,b
 10325  013BB4  C091  F087         	movff	___flmul@bexp,??___flmul
 10326  013BB8  0100               	movlb	0	; () banked
 10327  013BBA  6B88               	clrf	(??___flmul+1)& (0+255),b
 10328  013BBC  0100               	movlb	0	; () banked
 10329  013BBE  2787               	addwf	??___flmul& (0+255),f,b
 10330  013BC0  0E00               	movlw	0
 10331  013BC2  2388               	addwfc	(??___flmul+1)& (0+255),f,b
 10332  013BC4  0E82               	movlw	130
 10333  013BC6  0100               	movlb	0	; () banked
 10334  013BC8  2587               	addwf	??___flmul& (0+255),w,b
 10335  013BCA  0100               	movlb	0	; () banked
 10336  013BCC  6F96               	movwf	___flmul@temp& (0+255),b
 10337  013BCE  0EFF               	movlw	255
 10338  013BD0  0100               	movlb	0	; () banked
 10339  013BD2  2188               	addwfc	(??___flmul+1)& (0+255),w,b
 10340  013BD4  0100               	movlb	0	; () banked
 10341  013BD6  6F97               	movwf	(___flmul@temp+1)& (0+255),b
 10342  013BD8  D015               	goto	l8288
 10343  013BDA                     l8282:
 10344                           
 10345                           ; BSR set to: 0
 10346  013BDA  0100               	movlb	0	; () banked
 10347  013BDC  90D8               	bcf	status,0,c
 10348  013BDE  3792               	rlcf	___flmul@prod& (0+255),f,b
 10349  013BE0  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10350  013BE2  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10351  013BE4  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10352                           
 10353                           ; BSR set to: 0
 10354  013BE6  0100               	movlb	0	; () banked
 10355  013BE8  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10356  013BEA  D002               	goto	l1655
 10357                           
 10358                           ; BSR set to: 0
 10359  013BEC  0100               	movlb	0	; () banked
 10360  013BEE  8192               	bsf	___flmul@prod& (0+255),0,b
 10361  013BF0                     l1655:
 10362                           
 10363                           ; BSR set to: 0
 10364  013BF0  0100               	movlb	0	; () banked
 10365  013BF2  90D8               	bcf	status,0,c
 10366  013BF4  378D               	rlcf	___flmul@grs& (0+255),f,b
 10367  013BF6  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10368  013BF8  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10369  013BFA  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10370  013BFC  0100               	movlb	0	; () banked
 10371  013BFE  0796               	decf	___flmul@temp& (0+255),f,b
 10372  013C00  A0D8               	btfss	status,0,c
 10373  013C02  0797               	decf	(___flmul@temp+1)& (0+255),f,b
 10374  013C04                     l8288:
 10375                           
 10376                           ; BSR set to: 0
 10377  013C04  0100               	movlb	0	; () banked
 10378  013C06  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
 10379  013C08  D7E8               	goto	l8282
 10380                           
 10381                           ; BSR set to: 0
 10382                           
 10383                           ; BSR set to: 0
 10384  013C0A  0E00               	movlw	0
 10385  013C0C  0100               	movlb	0	; () banked
 10386  013C0E  6F8C               	movwf	___flmul@aexp& (0+255),b
 10387                           
 10388                           ; BSR set to: 0
 10389  013C10  0100               	movlb	0	; () banked
 10390  013C12  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10391  013C14  D024               	goto	l1657
 10392                           
 10393                           ; BSR set to: 0
 10394  013C16  0EFF               	movlw	255
 10395  013C18  0100               	movlb	0	; () banked
 10396  013C1A  158D               	andwf	___flmul@grs& (0+255),w,b
 10397  013C1C  0100               	movlb	0	; () banked
 10398  013C1E  6F87               	movwf	??___flmul& (0+255),b
 10399  013C20  0EFF               	movlw	255
 10400  013C22  0100               	movlb	0	; () banked
 10401  013C24  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
 10402  013C26  0100               	movlb	0	; () banked
 10403  013C28  6F88               	movwf	(??___flmul+1)& (0+255),b
 10404  013C2A  0EFF               	movlw	255
 10405  013C2C  0100               	movlb	0	; () banked
 10406  013C2E  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
 10407  013C30  0100               	movlb	0	; () banked
 10408  013C32  6F89               	movwf	(??___flmul+2)& (0+255),b
 10409  013C34  0E7F               	movlw	127
 10410  013C36  0100               	movlb	0	; () banked
 10411  013C38  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
 10412  013C3A  0100               	movlb	0	; () banked
 10413  013C3C  6F8A               	movwf	(??___flmul+3)& (0+255),b
 10414  013C3E  0100               	movlb	0	; () banked
 10415  013C40  5187               	movf	??___flmul& (0+255),w,b
 10416  013C42  0100               	movlb	0	; () banked
 10417  013C44  1188               	iorwf	(??___flmul+1)& (0+255),w,b
 10418  013C46  0100               	movlb	0	; () banked
 10419  013C48  1189               	iorwf	(??___flmul+2)& (0+255),w,b
 10420  013C4A  0100               	movlb	0	; () banked
 10421  013C4C  118A               	iorwf	(??___flmul+3)& (0+255),w,b
 10422  013C4E  A4D8               	btfss	status,2,c
 10423  013C50  D003               	goto	l8298
 10424                           
 10425                           ; BSR set to: 0
 10426                           
 10427                           ; BSR set to: 0
 10428  013C52  0100               	movlb	0	; () banked
 10429  013C54  A192               	btfss	___flmul@prod& (0+255),0,b
 10430  013C56  D003               	goto	l1657
 10431  013C58                     l8298:
 10432                           
 10433                           ; BSR set to: 0
 10434  013C58  0E01               	movlw	1
 10435  013C5A  0100               	movlb	0	; () banked
 10436  013C5C  6F8C               	movwf	___flmul@aexp& (0+255),b
 10437  013C5E                     l1657:
 10438                           
 10439                           ; BSR set to: 0
 10440  013C5E  0100               	movlb	0	; () banked
 10441  013C60  518C               	movf	___flmul@aexp& (0+255),w,b
 10442  013C62  0100               	movlb	0	; () banked
 10443  013C64  B4D8               	btfsc	status,2,c
 10444  013C66  D023               	goto	l8308
 10445                           
 10446                           ; BSR set to: 0
 10447  013C68  0E01               	movlw	1
 10448  013C6A  0100               	movlb	0	; () banked
 10449  013C6C  2792               	addwf	___flmul@prod& (0+255),f,b
 10450  013C6E  0E00               	movlw	0
 10451  013C70  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10452  013C72  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10453  013C74  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10454                           
 10455                           ; BSR set to: 0
 10456  013C76  0100               	movlb	0	; () banked
 10457  013C78  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
 10458  013C7A  D019               	goto	l8308
 10459                           
 10460                           ; BSR set to: 0
 10461  013C7C  C092  F087         	movff	___flmul@prod,??___flmul
 10462  013C80  C093  F088         	movff	___flmul@prod+1,??___flmul+1
 10463  013C84  C094  F089         	movff	___flmul@prod+2,??___flmul+2
 10464  013C88  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
 10465  013C8C  0100               	movlb	0	; () banked
 10466  013C8E  358A               	rlcf	(??___flmul+3)& (0+255),w,b
 10467  013C90  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 10468  013C92  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 10469  013C94  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 10470  013C96  3387               	rrcf	??___flmul& (0+255),f,b
 10471  013C98  C087  F092         	movff	??___flmul,___flmul@prod
 10472  013C9C  C088  F093         	movff	??___flmul+1,___flmul@prod+1
 10473  013CA0  C089  F094         	movff	??___flmul+2,___flmul@prod+2
 10474  013CA4  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
 10475                           
 10476                           ; BSR set to: 0
 10477  013CA8  0100               	movlb	0	; () banked
 10478  013CAA  4B96               	infsnz	___flmul@temp& (0+255),f,b
 10479  013CAC  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
 10480  013CAE                     l8308:
 10481                           
 10482                           ; BSR set to: 0
 10483  013CAE  0100               	movlb	0	; () banked
 10484  013CB0  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10485  013CB2  D010               	goto	l8312
 10486  013CB4  0100               	movlb	0	; () banked
 10487  013CB6  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10488  013CB8  E104               	bnz	u10980
 10489  013CBA  0100               	movlb	0	; () banked
 10490  013CBC  2996               	incf	___flmul@temp& (0+255),w,b
 10491  013CBE  A0D8               	btfss	status,0,c
 10492  013CC0  D009               	goto	l8312
 10493  013CC2                     u10980:
 10494                           
 10495                           ; BSR set to: 0
 10496  013CC2  0E00               	movlw	0
 10497  013CC4  0100               	movlb	0	; () banked
 10498  013CC6  6F92               	movwf	___flmul@prod& (0+255),b
 10499  013CC8  0E00               	movlw	0
 10500  013CCA  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 10501  013CCC  0E80               	movlw	128
 10502  013CCE  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 10503  013CD0  0E7F               	movlw	127
 10504  013CD2  D02B               	goto	L9
 10505  013CD4                     l8312:
 10506                           
 10507                           ; BSR set to: 0
 10508  013CD4  0100               	movlb	0	; () banked
 10509  013CD6  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10510  013CD8  D007               	goto	l8314
 10511  013CDA  0100               	movlb	0	; () banked
 10512  013CDC  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10513  013CDE  E111               	bnz	l1665
 10514  013CE0  0100               	movlb	0	; () banked
 10515  013CE2  0596               	decf	___flmul@temp& (0+255),w,b
 10516  013CE4  B0D8               	btfsc	status,0,c
 10517  013CE6  D00D               	goto	l1665
 10518  013CE8                     l8314:
 10519                           
 10520                           ; BSR set to: 0
 10521  013CE8  0E00               	movlw	0
 10522  013CEA  0100               	movlb	0	; () banked
 10523  013CEC  6F92               	movwf	___flmul@prod& (0+255),b
 10524  013CEE  0E00               	movlw	0
 10525  013CF0  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 10526  013CF2  0E00               	movlw	0
 10527  013CF4  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 10528  013CF6  0E00               	movlw	0
 10529  013CF8  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 10530  013CFA  0E00               	movlw	0
 10531  013CFC  0100               	movlb	0	; () banked
 10532  013CFE  6F8B               	movwf	___flmul@sign& (0+255),b
 10533  013D00  D015               	goto	l8324
 10534  013D02                     l1665:
 10535                           
 10536                           ; BSR set to: 0
 10537  013D02  C096  F091         	movff	___flmul@temp,___flmul@bexp
 10538                           
 10539                           ; BSR set to: 0
 10540  013D06  0EFF               	movlw	255
 10541  013D08  0100               	movlb	0	; () banked
 10542  013D0A  1792               	andwf	___flmul@prod& (0+255),f,b
 10543  013D0C  0EFF               	movlw	255
 10544  013D0E  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
 10545  013D10  0E7F               	movlw	127
 10546  013D12  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
 10547  013D14  0E00               	movlw	0
 10548  013D16  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
 10549                           
 10550                           ; BSR set to: 0
 10551  013D18  0100               	movlb	0	; () banked
 10552  013D1A  A191               	btfss	___flmul@bexp& (0+255),0,b
 10553  013D1C  D002               	goto	l8322
 10554                           
 10555                           ; BSR set to: 0
 10556  013D1E  0100               	movlb	0	; () banked
 10557  013D20  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
 10558  013D22                     l8322:
 10559                           
 10560                           ; BSR set to: 0
 10561  013D22  0100               	movlb	0	; () banked
 10562  013D24  90D8               	bcf	status,0,c
 10563  013D26  3191               	rrcf	___flmul@bexp& (0+255),w,b
 10564  013D28  0100               	movlb	0	; () banked
 10565  013D2A                     L9:
 10566  013D2A  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 10567  013D2C                     l8324:
 10568                           
 10569                           ; BSR set to: 0
 10570  013D2C  0100               	movlb	0	; () banked
 10571  013D2E  518B               	movf	___flmul@sign& (0+255),w,b
 10572  013D30  0100               	movlb	0	; () banked
 10573  013D32  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10574                           
 10575                           ; BSR set to: 0
 10576  013D34  C092  F07F         	movff	___flmul@prod,?___flmul
 10577  013D38  C093  F080         	movff	___flmul@prod+1,?___flmul+1
 10578  013D3C  C094  F081         	movff	___flmul@prod+2,?___flmul+2
 10579  013D40  C095  F082         	movff	___flmul@prod+3,?___flmul+3
 10580  013D44  0012               	return	
 10581  013D46                     __end_of___flmul:
 10582                           	opt stack 0
 10583                           tblptru	equ	0xFF8
 10584                           tblptrh	equ	0xFF7
 10585                           tblptrl	equ	0xFF6
 10586                           tablat	equ	0xFF5
 10587                           prodh	equ	0xFF4
 10588                           prodl	equ	0xFF3
 10589                           intcon	equ	0xFF2
 10590                           postinc0	equ	0xFEE
 10591                           wreg	equ	0xFE8
 10592                           indf2	equ	0xFDF
 10593                           postinc2	equ	0xFDE
 10594                           fsr2h	equ	0xFDA
 10595                           fsr2l	equ	0xFD9
 10596                           status	equ	0xFD8
 10597                           
 10598 ;; *************** function ___awmod *****************
 10599 ;; Defined at:
 10600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  dividend        2   17[BANK0 ] int 
 10603 ;;  divisor         2   19[BANK0 ] int 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  sign            1   22[BANK0 ] unsigned char 
 10606 ;;  counter         1   21[BANK0 ] unsigned char 
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  2   17[BANK0 ] int 
 10609 ;; Registers used:
 10610 ;;		wreg, status,2, status,0
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10616 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;Total ram usage:        6 bytes
 10621 ;; Hardware stack levels used:    1
 10622 ;; Hardware stack levels required when called:    3
 10623 ;; This function calls:
 10624 ;;		Nothing
 10625 ;; This function is called by:
 10626 ;;		_fround
 10627 ;;		_scale
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text15
 10632  015CBE                     __ptext15:
 10633                           	opt stack 0
 10634  015CBE                     ___awmod:
 10635                           	opt stack 24
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;incstack = 0
 10639  015CBE  0E00               	movlw	0
 10640  015CC0  0100               	movlb	0	; () banked
 10641  015CC2  6F76               	movwf	___awmod@sign& (0+255),b
 10642                           
 10643                           ; BSR set to: 0
 10644  015CC4  0100               	movlb	0	; () banked
 10645  015CC6  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10646  015CC8  D008               	goto	l8382
 10647                           
 10648                           ; BSR set to: 0
 10649  015CCA  0100               	movlb	0	; () banked
 10650  015CCC  6D71               	negf	___awmod@dividend& (0+255),b
 10651  015CCE  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10652  015CD0  B0D8               	btfsc	status,0,c
 10653  015CD2  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10654                           
 10655                           ; BSR set to: 0
 10656  015CD4  0E01               	movlw	1
 10657  015CD6  0100               	movlb	0	; () banked
 10658  015CD8  6F76               	movwf	___awmod@sign& (0+255),b
 10659  015CDA                     l8382:
 10660                           
 10661                           ; BSR set to: 0
 10662  015CDA  0100               	movlb	0	; () banked
 10663  015CDC  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10664  015CDE  D005               	goto	l8386
 10665                           
 10666                           ; BSR set to: 0
 10667  015CE0  0100               	movlb	0	; () banked
 10668  015CE2  6D73               	negf	___awmod@divisor& (0+255),b
 10669  015CE4  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 10670  015CE6  B0D8               	btfsc	status,0,c
 10671  015CE8  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 10672  015CEA                     l8386:
 10673                           
 10674                           ; BSR set to: 0
 10675  015CEA  0100               	movlb	0	; () banked
 10676  015CEC  5173               	movf	___awmod@divisor& (0+255),w,b
 10677  015CEE  0100               	movlb	0	; () banked
 10678  015CF0  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10679  015CF2  B4D8               	btfsc	status,2,c
 10680  015CF4  D026               	goto	l8402
 10681                           
 10682                           ; BSR set to: 0
 10683  015CF6  0E01               	movlw	1
 10684  015CF8  0100               	movlb	0	; () banked
 10685  015CFA  6F75               	movwf	___awmod@counter& (0+255),b
 10686  015CFC  D006               	goto	l8392
 10687  015CFE                     l8390:
 10688                           
 10689                           ; BSR set to: 0
 10690  015CFE  0100               	movlb	0	; () banked
 10691  015D00  90D8               	bcf	status,0,c
 10692  015D02  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10693  015D04  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10694  015D06  0100               	movlb	0	; () banked
 10695  015D08  2B75               	incf	___awmod@counter& (0+255),f,b
 10696  015D0A                     l8392:
 10697                           
 10698                           ; BSR set to: 0
 10699  015D0A  0100               	movlb	0	; () banked
 10700  015D0C  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10701  015D0E  D7F7               	goto	l8390
 10702  015D10                     l8394:
 10703                           
 10704                           ; BSR set to: 0
 10705  015D10  0100               	movlb	0	; () banked
 10706  015D12  5173               	movf	___awmod@divisor& (0+255),w,b
 10707  015D14  0100               	movlb	0	; () banked
 10708  015D16  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10709  015D18  0100               	movlb	0	; () banked
 10710  015D1A  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10711  015D1C  0100               	movlb	0	; () banked
 10712  015D1E  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10713  015D20  A0D8               	btfss	status,0,c
 10714  015D22  D008               	goto	l8398
 10715                           
 10716                           ; BSR set to: 0
 10717  015D24  0100               	movlb	0	; () banked
 10718  015D26  5173               	movf	___awmod@divisor& (0+255),w,b
 10719  015D28  0100               	movlb	0	; () banked
 10720  015D2A  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10721  015D2C  0100               	movlb	0	; () banked
 10722  015D2E  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10723  015D30  0100               	movlb	0	; () banked
 10724  015D32  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10725  015D34                     l8398:
 10726                           
 10727                           ; BSR set to: 0
 10728  015D34  0100               	movlb	0	; () banked
 10729  015D36  90D8               	bcf	status,0,c
 10730  015D38  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10731  015D3A  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10732                           
 10733                           ; BSR set to: 0
 10734  015D3C  0100               	movlb	0	; () banked
 10735  015D3E  2F75               	decfsz	___awmod@counter& (0+255),f,b
 10736  015D40  D7E7               	goto	l8394
 10737  015D42                     l8402:
 10738                           
 10739                           ; BSR set to: 0
 10740  015D42  0100               	movlb	0	; () banked
 10741  015D44  5176               	movf	___awmod@sign& (0+255),w,b
 10742  015D46  0100               	movlb	0	; () banked
 10743  015D48  B4D8               	btfsc	status,2,c
 10744  015D4A  D005               	goto	l8406
 10745                           
 10746                           ; BSR set to: 0
 10747  015D4C  0100               	movlb	0	; () banked
 10748  015D4E  6D71               	negf	___awmod@dividend& (0+255),b
 10749  015D50  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10750  015D52  B0D8               	btfsc	status,0,c
 10751  015D54  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10752  015D56                     l8406:
 10753                           
 10754                           ; BSR set to: 0
 10755  015D56  C071  F071         	movff	___awmod@dividend,?___awmod
 10756  015D5A  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10757  015D5E  0012               	return	
 10758  015D60                     __end_of___awmod:
 10759                           	opt stack 0
 10760                           tblptru	equ	0xFF8
 10761                           tblptrh	equ	0xFF7
 10762                           tblptrl	equ	0xFF6
 10763                           tablat	equ	0xFF5
 10764                           prodh	equ	0xFF4
 10765                           prodl	equ	0xFF3
 10766                           intcon	equ	0xFF2
 10767                           postinc0	equ	0xFEE
 10768                           wreg	equ	0xFE8
 10769                           indf2	equ	0xFDF
 10770                           postinc2	equ	0xFDE
 10771                           fsr2h	equ	0xFDA
 10772                           fsr2l	equ	0xFD9
 10773                           status	equ	0xFD8
 10774                           
 10775 ;; *************** function ___awdiv *****************
 10776 ;; Defined at:
 10777 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  dividend        2   23[BANK0 ] int 
 10780 ;;  divisor         2   25[BANK0 ] int 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  quotient        2   29[BANK0 ] int 
 10783 ;;  sign            1   28[BANK0 ] unsigned char 
 10784 ;;  counter         1   27[BANK0 ] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  2   23[BANK0 ] int 
 10787 ;; Registers used:
 10788 ;;		wreg, status,2, status,0
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        8 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    3
 10801 ;; This function calls:
 10802 ;;		Nothing
 10803 ;; This function is called by:
 10804 ;;		_main
 10805 ;;		_fround
 10806 ;;		_scale
 10807 ;;		_sprintf
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text16
 10812  015928                     __ptext16:
 10813                           	opt stack 0
 10814  015928                     ___awdiv:
 10815                           	opt stack 27
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;incstack = 0
 10819  015928  0E00               	movlw	0
 10820  01592A  0100               	movlb	0	; () banked
 10821  01592C  6F7C               	movwf	___awdiv@sign& (0+255),b
 10822                           
 10823                           ; BSR set to: 0
 10824  01592E  0100               	movlb	0	; () banked
 10825  015930  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10826  015932  D008               	goto	l8338
 10827                           
 10828                           ; BSR set to: 0
 10829  015934  0100               	movlb	0	; () banked
 10830  015936  6D79               	negf	___awdiv@divisor& (0+255),b
 10831  015938  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10832  01593A  B0D8               	btfsc	status,0,c
 10833  01593C  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10834                           
 10835                           ; BSR set to: 0
 10836  01593E  0E01               	movlw	1
 10837  015940  0100               	movlb	0	; () banked
 10838  015942  6F7C               	movwf	___awdiv@sign& (0+255),b
 10839  015944                     l8338:
 10840                           
 10841                           ; BSR set to: 0
 10842  015944  0100               	movlb	0	; () banked
 10843  015946  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10844  015948  D008               	goto	l8344
 10845                           
 10846                           ; BSR set to: 0
 10847  01594A  0100               	movlb	0	; () banked
 10848  01594C  6D77               	negf	___awdiv@dividend& (0+255),b
 10849  01594E  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10850  015950  B0D8               	btfsc	status,0,c
 10851  015952  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10852                           
 10853                           ; BSR set to: 0
 10854  015954  0E01               	movlw	1
 10855  015956  0100               	movlb	0	; () banked
 10856  015958  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
 10857  01595A                     l8344:
 10858                           
 10859                           ; BSR set to: 0
 10860  01595A  0E00               	movlw	0
 10861  01595C  0100               	movlb	0	; () banked
 10862  01595E  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
 10863  015960  0E00               	movlw	0
 10864  015962  6F7D               	movwf	___awdiv@quotient& (0+255),b
 10865                           
 10866                           ; BSR set to: 0
 10867  015964  0100               	movlb	0	; () banked
 10868  015966  5179               	movf	___awdiv@divisor& (0+255),w,b
 10869  015968  0100               	movlb	0	; () banked
 10870  01596A  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10871  01596C  B4D8               	btfsc	status,2,c
 10872  01596E  D02C               	goto	l8366
 10873                           
 10874                           ; BSR set to: 0
 10875  015970  0E01               	movlw	1
 10876  015972  0100               	movlb	0	; () banked
 10877  015974  6F7B               	movwf	___awdiv@counter& (0+255),b
 10878  015976  D006               	goto	l8352
 10879  015978                     l8350:
 10880                           
 10881                           ; BSR set to: 0
 10882  015978  0100               	movlb	0	; () banked
 10883  01597A  90D8               	bcf	status,0,c
 10884  01597C  3779               	rlcf	___awdiv@divisor& (0+255),f,b
 10885  01597E  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10886  015980  0100               	movlb	0	; () banked
 10887  015982  2B7B               	incf	___awdiv@counter& (0+255),f,b
 10888  015984                     l8352:
 10889                           
 10890                           ; BSR set to: 0
 10891  015984  0100               	movlb	0	; () banked
 10892  015986  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10893  015988  D7F7               	goto	l8350
 10894  01598A                     l8354:
 10895                           
 10896                           ; BSR set to: 0
 10897  01598A  0100               	movlb	0	; () banked
 10898  01598C  90D8               	bcf	status,0,c
 10899  01598E  377D               	rlcf	___awdiv@quotient& (0+255),f,b
 10900  015990  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10901                           
 10902                           ; BSR set to: 0
 10903  015992  0100               	movlb	0	; () banked
 10904  015994  5179               	movf	___awdiv@divisor& (0+255),w,b
 10905  015996  0100               	movlb	0	; () banked
 10906  015998  5D77               	subwf	___awdiv@dividend& (0+255),w,b
 10907  01599A  0100               	movlb	0	; () banked
 10908  01599C  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10909  01599E  0100               	movlb	0	; () banked
 10910  0159A0  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10911  0159A2  A0D8               	btfss	status,0,c
 10912  0159A4  D00A               	goto	l8362
 10913                           
 10914                           ; BSR set to: 0
 10915  0159A6  0100               	movlb	0	; () banked
 10916  0159A8  5179               	movf	___awdiv@divisor& (0+255),w,b
 10917  0159AA  0100               	movlb	0	; () banked
 10918  0159AC  5F77               	subwf	___awdiv@dividend& (0+255),f,b
 10919  0159AE  0100               	movlb	0	; () banked
 10920  0159B0  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10921  0159B2  0100               	movlb	0	; () banked
 10922  0159B4  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10923                           
 10924                           ; BSR set to: 0
 10925  0159B6  0100               	movlb	0	; () banked
 10926  0159B8  817D               	bsf	___awdiv@quotient& (0+255),0,b
 10927  0159BA                     l8362:
 10928                           
 10929                           ; BSR set to: 0
 10930  0159BA  0100               	movlb	0	; () banked
 10931  0159BC  90D8               	bcf	status,0,c
 10932  0159BE  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10933  0159C0  3379               	rrcf	___awdiv@divisor& (0+255),f,b
 10934                           
 10935                           ; BSR set to: 0
 10936  0159C2  0100               	movlb	0	; () banked
 10937  0159C4  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
 10938  0159C6  D7E1               	goto	l8354
 10939  0159C8                     l8366:
 10940                           
 10941                           ; BSR set to: 0
 10942  0159C8  0100               	movlb	0	; () banked
 10943  0159CA  517C               	movf	___awdiv@sign& (0+255),w,b
 10944  0159CC  0100               	movlb	0	; () banked
 10945  0159CE  B4D8               	btfsc	status,2,c
 10946  0159D0  D005               	goto	l8370
 10947                           
 10948                           ; BSR set to: 0
 10949  0159D2  0100               	movlb	0	; () banked
 10950  0159D4  6D7D               	negf	___awdiv@quotient& (0+255),b
 10951  0159D6  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10952  0159D8  B0D8               	btfsc	status,0,c
 10953  0159DA  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10954  0159DC                     l8370:
 10955                           
 10956                           ; BSR set to: 0
 10957  0159DC  C07D  F077         	movff	___awdiv@quotient,?___awdiv
 10958  0159E0  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
 10959  0159E4  0012               	return	
 10960  0159E6                     __end_of___awdiv:
 10961                           	opt stack 0
 10962                           tblptru	equ	0xFF8
 10963                           tblptrh	equ	0xFF7
 10964                           tblptrl	equ	0xFF6
 10965                           tablat	equ	0xFF5
 10966                           prodh	equ	0xFF4
 10967                           prodl	equ	0xFF3
 10968                           intcon	equ	0xFF2
 10969                           postinc0	equ	0xFEE
 10970                           wreg	equ	0xFE8
 10971                           indf2	equ	0xFDF
 10972                           postinc2	equ	0xFDE
 10973                           fsr2h	equ	0xFDA
 10974                           fsr2l	equ	0xFD9
 10975                           status	equ	0xFD8
 10976                           
 10977 ;; *************** function __tdiv_to_l_ *****************
 10978 ;; Defined at:
 10979 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  f1              4   17[BANK0 ] float 
 10982 ;;  f2              4   21[BANK0 ] float 
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;  quot            4   28[BANK0 ] unsigned long 
 10985 ;;  exp1            1   33[BANK0 ] unsigned char 
 10986 ;;  cntr            1   32[BANK0 ] unsigned char 
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  4   17[BANK0 ] unsigned long 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10996 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;Total ram usage:       17 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    3
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_sprintf
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text17
 11011  01510C                     __ptext17:
 11012                           	opt stack 0
 11013  01510C                     __tdiv_to_l_:
 11014                           	opt stack 25
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;incstack = 0
 11018  01510C  C073  F079         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11019  015110  0100               	movlb	0	; () banked
 11020  015112  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11021  015114  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11022  015116  0100               	movlb	0	; () banked
 11023  015118  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11024  01511A  0100               	movlb	0	; () banked
 11025  01511C  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11026  01511E  E301               	bnc	u11241
 11027  015120  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11028  015122                     u11241:
 11029  015122  0100               	movlb	0	; () banked
 11030  015124  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 11031  015126  0100               	movlb	0	; () banked
 11032  015128  6F81               	movwf	__tdiv_to_l_@exp1& (0+255),b
 11033  01512A  0100               	movlb	0	; () banked
 11034  01512C  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11035  01512E  A4D8               	btfss	status,2,c
 11036  015130  D00A               	goto	l8520
 11037                           
 11038                           ; BSR set to: 0
 11039  015132  0E00               	movlw	0
 11040  015134  0100               	movlb	0	; () banked
 11041  015136  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11042  015138  0E00               	movlw	0
 11043  01513A  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11044  01513C  0E00               	movlw	0
 11045  01513E  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11046  015140  0E00               	movlw	0
 11047  015142  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11048                           
 11049                           ; BSR set to: 0
 11050  015144  0012               	return	
 11051  015146                     l8520:
 11052                           
 11053                           ; BSR set to: 0
 11054  015146  C077  F079         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11055  01514A  0100               	movlb	0	; () banked
 11056  01514C  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11057  01514E  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11058  015150  0100               	movlb	0	; () banked
 11059  015152  3576               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11060  015154  0100               	movlb	0	; () banked
 11061  015156  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11062  015158  E301               	bnc	u11261
 11063  01515A  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11064  01515C                     u11261:
 11065  01515C  0100               	movlb	0	; () banked
 11066  01515E  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 11067  015160  0100               	movlb	0	; () banked
 11068  015162  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11069  015164  0100               	movlb	0	; () banked
 11070  015166  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11071  015168  A4D8               	btfss	status,2,c
 11072  01516A  D00A               	goto	l8526
 11073                           
 11074                           ; BSR set to: 0
 11075  01516C  0E00               	movlw	0
 11076  01516E  0100               	movlb	0	; () banked
 11077  015170  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11078  015172  0E00               	movlw	0
 11079  015174  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11080  015176  0E00               	movlw	0
 11081  015178  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11082  01517A  0E00               	movlw	0
 11083  01517C  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11084                           
 11085                           ; BSR set to: 0
 11086  01517E  0012               	return	
 11087  015180                     l8526:
 11088                           
 11089                           ; BSR set to: 0
 11090  015180  0100               	movlb	0	; () banked
 11091  015182  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11092                           
 11093                           ; BSR set to: 0
 11094  015184  0EFF               	movlw	255
 11095  015186  0100               	movlb	0	; () banked
 11096  015188  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11097  01518A  0EFF               	movlw	255
 11098  01518C  0100               	movlb	0	; () banked
 11099  01518E  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11100  015190  0E00               	movlw	0
 11101  015192  0100               	movlb	0	; () banked
 11102  015194  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11103  015196  0100               	movlb	0	; () banked
 11104  015198  8F76               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11105                           
 11106                           ; BSR set to: 0
 11107  01519A  0EFF               	movlw	255
 11108  01519C  0100               	movlb	0	; () banked
 11109  01519E  1775               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11110  0151A0  0EFF               	movlw	255
 11111  0151A2  0100               	movlb	0	; () banked
 11112  0151A4  1776               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11113  0151A6  0E00               	movlw	0
 11114  0151A8  0100               	movlb	0	; () banked
 11115  0151AA  1777               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11116                           
 11117                           ; BSR set to: 0
 11118  0151AC  0E00               	movlw	0
 11119  0151AE  0100               	movlb	0	; () banked
 11120  0151B0  6F7C               	movwf	__tdiv_to_l_@quot& (0+255),b
 11121  0151B2  0E00               	movlw	0
 11122  0151B4  6F7D               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11123  0151B6  0E00               	movlw	0
 11124  0151B8  6F7E               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11125  0151BA  0E00               	movlw	0
 11126  0151BC  6F7F               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11127                           
 11128                           ; BSR set to: 0
 11129  0151BE  0E7F               	movlw	127
 11130  0151C0  0100               	movlb	0	; () banked
 11131  0151C2  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11132                           
 11133                           ; BSR set to: 0
 11134  0151C4  0100               	movlb	0	; () banked
 11135  0151C6  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11136  0151C8  0F98               	addlw	152
 11137  0151CA  0100               	movlb	0	; () banked
 11138  0151CC  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11139                           
 11140                           ; BSR set to: 0
 11141  0151CE  0E18               	movlw	24
 11142  0151D0  0100               	movlb	0	; () banked
 11143  0151D2  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11144  0151D4                     l1372:
 11145                           
 11146                           ; BSR set to: 0
 11147  0151D4  0100               	movlb	0	; () banked
 11148  0151D6  90D8               	bcf	status,0,c
 11149  0151D8  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11150  0151DA  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11151  0151DC  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11152  0151DE  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11153                           
 11154                           ; BSR set to: 0
 11155  0151E0  0100               	movlb	0	; () banked
 11156  0151E2  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11157  0151E4  0100               	movlb	0	; () banked
 11158  0151E6  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11159  0151E8  0100               	movlb	0	; () banked
 11160  0151EA  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11161  0151EC  0100               	movlb	0	; () banked
 11162  0151EE  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11163  0151F0  0100               	movlb	0	; () banked
 11164  0151F2  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11165  0151F4  0100               	movlb	0	; () banked
 11166  0151F6  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11167  0151F8  A0D8               	btfss	status,0,c
 11168  0151FA  D00E               	goto	l1373
 11169                           
 11170                           ; BSR set to: 0
 11171  0151FC  0100               	movlb	0	; () banked
 11172  0151FE  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11173  015200  0100               	movlb	0	; () banked
 11174  015202  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11175  015204  0100               	movlb	0	; () banked
 11176  015206  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11177  015208  0100               	movlb	0	; () banked
 11178  01520A  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11179  01520C  0100               	movlb	0	; () banked
 11180  01520E  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11181  015210  0100               	movlb	0	; () banked
 11182  015212  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11183                           
 11184                           ; BSR set to: 0
 11185  015214  0100               	movlb	0	; () banked
 11186  015216  817C               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11187  015218                     l1373:
 11188                           
 11189                           ; BSR set to: 0
 11190  015218  0100               	movlb	0	; () banked
 11191  01521A  90D8               	bcf	status,0,c
 11192  01521C  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11193  01521E  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11194  015220  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11195                           
 11196                           ; BSR set to: 0
 11197  015222  0100               	movlb	0	; () banked
 11198  015224  2F80               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11199  015226  D7D6               	goto	l1372
 11200                           
 11201                           ; BSR set to: 0
 11202                           
 11203                           ; BSR set to: 0
 11204  015228  0100               	movlb	0	; () banked
 11205  01522A  AF81               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11206  01522C  D01A               	goto	l8560
 11207                           
 11208                           ; BSR set to: 0
 11209  01522E  0100               	movlb	0	; () banked
 11210  015230  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11211  015232  0A80               	xorlw	128
 11212  015234  0F97               	addlw	151
 11213  015236  B0D8               	btfsc	status,0,c
 11214  015238  D00A               	goto	l8556
 11215                           
 11216                           ; BSR set to: 0
 11217  01523A  0E00               	movlw	0
 11218  01523C  0100               	movlb	0	; () banked
 11219  01523E  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11220  015240  0E00               	movlw	0
 11221  015242  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11222  015244  0E00               	movlw	0
 11223  015246  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11224  015248  0E00               	movlw	0
 11225  01524A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11226                           
 11227                           ; BSR set to: 0
 11228  01524C  0012               	return	
 11229  01524E                     l8556:
 11230                           
 11231                           ; BSR set to: 0
 11232  01524E  0100               	movlb	0	; () banked
 11233  015250  90D8               	bcf	status,0,c
 11234  015252  337F               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11235  015254  337E               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11236  015256  337D               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11237  015258  337C               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11238                           
 11239                           ; BSR set to: 0
 11240  01525A  0100               	movlb	0	; () banked
 11241  01525C  3F81               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11242  01525E  D7F7               	goto	l8556
 11243                           
 11244                           ; BSR set to: 0
 11245  015260  D01B               	goto	l1379
 11246  015262                     l8560:
 11247                           
 11248                           ; BSR set to: 0
 11249  015262  0E17               	movlw	23
 11250  015264  0100               	movlb	0	; () banked
 11251  015266  6581               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11252  015268  D012               	goto	l8568
 11253                           
 11254                           ; BSR set to: 0
 11255  01526A  0E00               	movlw	0
 11256  01526C  0100               	movlb	0	; () banked
 11257  01526E  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11258  015270  0E00               	movlw	0
 11259  015272  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11260  015274  0E00               	movlw	0
 11261  015276  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11262  015278  0E00               	movlw	0
 11263  01527A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11264                           
 11265                           ; BSR set to: 0
 11266  01527C  0012               	return	
 11267  01527E                     l8566:
 11268                           
 11269                           ; BSR set to: 0
 11270  01527E  0100               	movlb	0	; () banked
 11271  015280  90D8               	bcf	status,0,c
 11272  015282  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11273  015284  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11274  015286  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11275  015288  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11276  01528A  0100               	movlb	0	; () banked
 11277  01528C  0781               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11278  01528E                     l8568:
 11279                           
 11280                           ; BSR set to: 0
 11281  01528E  0100               	movlb	0	; () banked
 11282  015290  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11283  015292  0100               	movlb	0	; () banked
 11284  015294  A4D8               	btfss	status,2,c
 11285  015296  D7F3               	goto	l8566
 11286  015298                     l1379:
 11287                           
 11288                           ; BSR set to: 0
 11289  015298  C07C  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11290  01529C  C07D  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11291  0152A0  C07E  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11292  0152A4  C07F  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11293                           
 11294                           ; BSR set to: 0
 11295  0152A8  0012               	return		;funcret
 11296  0152AA                     __end_of__tdiv_to_l_:
 11297                           	opt stack 0
 11298                           tblptru	equ	0xFF8
 11299                           tblptrh	equ	0xFF7
 11300                           tblptrl	equ	0xFF6
 11301                           tablat	equ	0xFF5
 11302                           prodh	equ	0xFF4
 11303                           prodl	equ	0xFF3
 11304                           intcon	equ	0xFF2
 11305                           postinc0	equ	0xFEE
 11306                           wreg	equ	0xFE8
 11307                           indf2	equ	0xFDF
 11308                           postinc2	equ	0xFDE
 11309                           fsr2h	equ	0xFDA
 11310                           fsr2l	equ	0xFD9
 11311                           status	equ	0xFD8
 11312                           
 11313 ;; *************** function __div_to_l_ *****************
 11314 ;; Defined at:
 11315 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  f1              4   17[BANK0 ] unsigned long 
 11318 ;;  f2              4   21[BANK0 ] unsigned long 
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;  quot            4   25[BANK0 ] unsigned long 
 11321 ;;  exp1            1   30[BANK0 ] unsigned char 
 11322 ;;  cntr            1   29[BANK0 ] unsigned char 
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  4   17[BANK0 ] unsigned long 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2, status,0
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11332 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;Total ram usage:       14 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:    3
 11339 ;; This function calls:
 11340 ;;		Nothing
 11341 ;; This function is called by:
 11342 ;;		_sprintf
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           	psect	text18
 11347  01543A                     __ptext18:
 11348                           	opt stack 0
 11349  01543A                     __div_to_l_:
 11350                           	opt stack 25
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;incstack = 0
 11354  01543A  0100               	movlb	0	; () banked
 11355  01543C  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11356  01543E  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11357  015440  0100               	movlb	0	; () banked
 11358  015442  6F7E               	movwf	__div_to_l_@exp1& (0+255),b
 11359  015444  0100               	movlb	0	; () banked
 11360  015446  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11361  015448  A4D8               	btfss	status,2,c
 11362  01544A  D00A               	goto	l8576
 11363                           
 11364                           ; BSR set to: 0
 11365  01544C  0E00               	movlw	0
 11366  01544E  0100               	movlb	0	; () banked
 11367  015450  6F71               	movwf	?__div_to_l_& (0+255),b
 11368  015452  0E00               	movlw	0
 11369  015454  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11370  015456  0E00               	movlw	0
 11371  015458  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11372  01545A  0E00               	movlw	0
 11373  01545C  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11374                           
 11375                           ; BSR set to: 0
 11376  01545E  0012               	return	
 11377  015460                     l8576:
 11378                           
 11379                           ; BSR set to: 0
 11380  015460  0100               	movlb	0	; () banked
 11381  015462  3577               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11382  015464  3578               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11383  015466  0100               	movlb	0	; () banked
 11384  015468  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11385  01546A  0100               	movlb	0	; () banked
 11386  01546C  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11387  01546E  A4D8               	btfss	status,2,c
 11388  015470  D00A               	goto	l8582
 11389                           
 11390                           ; BSR set to: 0
 11391  015472  0E00               	movlw	0
 11392  015474  0100               	movlb	0	; () banked
 11393  015476  6F71               	movwf	?__div_to_l_& (0+255),b
 11394  015478  0E00               	movlw	0
 11395  01547A  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11396  01547C  0E00               	movlw	0
 11397  01547E  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11398  015480  0E00               	movlw	0
 11399  015482  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11400                           
 11401                           ; BSR set to: 0
 11402  015484  0012               	return	
 11403  015486                     l8582:
 11404                           
 11405                           ; BSR set to: 0
 11406  015486  0100               	movlb	0	; () banked
 11407  015488  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11408                           
 11409                           ; BSR set to: 0
 11410  01548A  0EFF               	movlw	255
 11411  01548C  0100               	movlb	0	; () banked
 11412  01548E  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 11413  015490  0EFF               	movlw	255
 11414  015492  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11415  015494  0EFF               	movlw	255
 11416  015496  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11417  015498  0E00               	movlw	0
 11418  01549A  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11419                           
 11420                           ; BSR set to: 0
 11421  01549C  0100               	movlb	0	; () banked
 11422  01549E  8F77               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11423  0154A0  0EFF               	movlw	255
 11424  0154A2  0100               	movlb	0	; () banked
 11425  0154A4  1775               	andwf	__div_to_l_@f2& (0+255),f,b
 11426  0154A6  0EFF               	movlw	255
 11427  0154A8  1776               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11428  0154AA  0EFF               	movlw	255
 11429  0154AC  1777               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11430  0154AE  0E00               	movlw	0
 11431  0154B0  1778               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11432                           
 11433                           ; BSR set to: 0
 11434  0154B2  0E00               	movlw	0
 11435  0154B4  0100               	movlb	0	; () banked
 11436  0154B6  6F79               	movwf	__div_to_l_@quot& (0+255),b
 11437  0154B8  0E00               	movlw	0
 11438  0154BA  6F7A               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11439  0154BC  0E00               	movlw	0
 11440  0154BE  6F7B               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11441  0154C0  0E00               	movlw	0
 11442  0154C2  6F7C               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11443                           
 11444                           ; BSR set to: 0
 11445  0154C4  0E7F               	movlw	127
 11446  0154C6  0100               	movlb	0	; () banked
 11447  0154C8  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11448                           
 11449                           ; BSR set to: 0
 11450  0154CA  0100               	movlb	0	; () banked
 11451  0154CC  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11452  0154CE  0FA0               	addlw	160
 11453  0154D0  0100               	movlb	0	; () banked
 11454  0154D2  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11455                           
 11456                           ; BSR set to: 0
 11457  0154D4  0E20               	movlw	32
 11458  0154D6  0100               	movlb	0	; () banked
 11459  0154D8  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11460  0154DA                     l8596:
 11461                           
 11462                           ; BSR set to: 0
 11463  0154DA  0100               	movlb	0	; () banked
 11464  0154DC  90D8               	bcf	status,0,c
 11465  0154DE  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 11466  0154E0  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11467  0154E2  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11468  0154E4  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11469                           
 11470                           ; BSR set to: 0
 11471  0154E6  0100               	movlb	0	; () banked
 11472  0154E8  5175               	movf	__div_to_l_@f2& (0+255),w,b
 11473  0154EA  0100               	movlb	0	; () banked
 11474  0154EC  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 11475  0154EE  0100               	movlb	0	; () banked
 11476  0154F0  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11477  0154F2  0100               	movlb	0	; () banked
 11478  0154F4  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11479  0154F6  0100               	movlb	0	; () banked
 11480  0154F8  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11481  0154FA  0100               	movlb	0	; () banked
 11482  0154FC  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11483  0154FE  0100               	movlb	0	; () banked
 11484  015500  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11485  015502  0100               	movlb	0	; () banked
 11486  015504  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11487  015506  A0D8               	btfss	status,0,c
 11488  015508  D012               	goto	l8604
 11489                           
 11490                           ; BSR set to: 0
 11491  01550A  0100               	movlb	0	; () banked
 11492  01550C  5175               	movf	__div_to_l_@f2& (0+255),w,b
 11493  01550E  0100               	movlb	0	; () banked
 11494  015510  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 11495  015512  0100               	movlb	0	; () banked
 11496  015514  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11497  015516  0100               	movlb	0	; () banked
 11498  015518  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11499  01551A  0100               	movlb	0	; () banked
 11500  01551C  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11501  01551E  0100               	movlb	0	; () banked
 11502  015520  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11503  015522  0100               	movlb	0	; () banked
 11504  015524  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11505  015526  0100               	movlb	0	; () banked
 11506  015528  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11507                           
 11508                           ; BSR set to: 0
 11509  01552A  0100               	movlb	0	; () banked
 11510  01552C  8179               	bsf	__div_to_l_@quot& (0+255),0,b
 11511  01552E                     l8604:
 11512                           
 11513                           ; BSR set to: 0
 11514  01552E  0100               	movlb	0	; () banked
 11515  015530  90D8               	bcf	status,0,c
 11516  015532  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 11517  015534  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11518  015536  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11519  015538  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11520                           
 11521                           ; BSR set to: 0
 11522  01553A  0100               	movlb	0	; () banked
 11523  01553C  2F7D               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11524  01553E  D7CD               	goto	l8596
 11525                           
 11526                           ; BSR set to: 0
 11527                           
 11528                           ; BSR set to: 0
 11529  015540  0100               	movlb	0	; () banked
 11530  015542  AF7E               	btfss	__div_to_l_@exp1& (0+255),7,b
 11531  015544  D01A               	goto	l8620
 11532                           
 11533                           ; BSR set to: 0
 11534  015546  0100               	movlb	0	; () banked
 11535  015548  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11536  01554A  0A80               	xorlw	128
 11537  01554C  0F9F               	addlw	159
 11538  01554E  B0D8               	btfsc	status,0,c
 11539  015550  D00A               	goto	l8616
 11540                           
 11541                           ; BSR set to: 0
 11542  015552  0E00               	movlw	0
 11543  015554  0100               	movlb	0	; () banked
 11544  015556  6F71               	movwf	?__div_to_l_& (0+255),b
 11545  015558  0E00               	movlw	0
 11546  01555A  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11547  01555C  0E00               	movlw	0
 11548  01555E  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11549  015560  0E00               	movlw	0
 11550  015562  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11551                           
 11552                           ; BSR set to: 0
 11553  015564  0012               	return	
 11554  015566                     l8616:
 11555                           
 11556                           ; BSR set to: 0
 11557  015566  0100               	movlb	0	; () banked
 11558  015568  90D8               	bcf	status,0,c
 11559  01556A  337C               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11560  01556C  337B               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11561  01556E  337A               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11562  015570  3379               	rrcf	__div_to_l_@quot& (0+255),f,b
 11563                           
 11564                           ; BSR set to: 0
 11565  015572  0100               	movlb	0	; () banked
 11566  015574  3F7E               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11567  015576  D7F7               	goto	l8616
 11568                           
 11569                           ; BSR set to: 0
 11570  015578  D01B               	goto	l1275
 11571  01557A                     l8620:
 11572                           
 11573                           ; BSR set to: 0
 11574  01557A  0E1F               	movlw	31
 11575  01557C  0100               	movlb	0	; () banked
 11576  01557E  657E               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11577  015580  D012               	goto	l8628
 11578                           
 11579                           ; BSR set to: 0
 11580  015582  0E00               	movlw	0
 11581  015584  0100               	movlb	0	; () banked
 11582  015586  6F71               	movwf	?__div_to_l_& (0+255),b
 11583  015588  0E00               	movlw	0
 11584  01558A  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11585  01558C  0E00               	movlw	0
 11586  01558E  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11587  015590  0E00               	movlw	0
 11588  015592  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11589                           
 11590                           ; BSR set to: 0
 11591  015594  0012               	return	
 11592  015596                     l8626:
 11593                           
 11594                           ; BSR set to: 0
 11595  015596  0100               	movlb	0	; () banked
 11596  015598  90D8               	bcf	status,0,c
 11597  01559A  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 11598  01559C  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11599  01559E  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11600  0155A0  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11601  0155A2  0100               	movlb	0	; () banked
 11602  0155A4  077E               	decf	__div_to_l_@exp1& (0+255),f,b
 11603  0155A6                     l8628:
 11604                           
 11605                           ; BSR set to: 0
 11606  0155A6  0100               	movlb	0	; () banked
 11607  0155A8  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11608  0155AA  0100               	movlb	0	; () banked
 11609  0155AC  A4D8               	btfss	status,2,c
 11610  0155AE  D7F3               	goto	l8626
 11611  0155B0                     l1275:
 11612                           
 11613                           ; BSR set to: 0
 11614  0155B0  C079  F071         	movff	__div_to_l_@quot,?__div_to_l_
 11615  0155B4  C07A  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11616  0155B8  C07B  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11617  0155BC  C07C  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11618                           
 11619                           ; BSR set to: 0
 11620  0155C0  0012               	return		;funcret
 11621  0155C2                     __end_of__div_to_l_:
 11622                           	opt stack 0
 11623                           tblptru	equ	0xFF8
 11624                           tblptrh	equ	0xFF7
 11625                           tblptrl	equ	0xFF6
 11626                           tablat	equ	0xFF5
 11627                           prodh	equ	0xFF4
 11628                           prodl	equ	0xFF3
 11629                           intcon	equ	0xFF2
 11630                           postinc0	equ	0xFEE
 11631                           wreg	equ	0xFE8
 11632                           indf2	equ	0xFDF
 11633                           postinc2	equ	0xFDE
 11634                           fsr2h	equ	0xFDA
 11635                           fsr2l	equ	0xFD9
 11636                           status	equ	0xFD8
 11637                           
 11638 ;; *************** function ___xxtofl *****************
 11639 ;; Defined at:
 11640 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;  sign            1    wreg     unsigned char 
 11643 ;;  val             4   17[BANK0 ] long 
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;  sign            1   25[BANK0 ] unsigned char 
 11646 ;;  arg             4   27[BANK0 ] unsigned long 
 11647 ;;  exp             1   26[BANK0 ] unsigned char 
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  4   17[BANK0 ] unsigned char 
 11650 ;; Registers used:
 11651 ;;		wreg, status,2, status,0
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;Total ram usage:       14 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    3
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_main
 11668 ;;		_LCD_Handler
 11669 ;;		_sprintf
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           	psect	text19
 11674  014BB8                     __ptext19:
 11675                           	opt stack 0
 11676  014BB8                     ___xxtofl:
 11677                           	opt stack 27
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;incstack = 0
 11681                           ;___xxtofl@sign stored from wreg
 11682  014BB8  0100               	movlb	0	; () banked
 11683  014BBA  6F79               	movwf	___xxtofl@sign& (0+255),b
 11684  014BBC  0100               	movlb	0	; () banked
 11685  014BBE  5179               	movf	___xxtofl@sign& (0+255),w,b
 11686  014BC0  0100               	movlb	0	; () banked
 11687  014BC2  B4D8               	btfsc	status,2,c
 11688  014BC4  D01E               	goto	l1670
 11689                           
 11690                           ; BSR set to: 0
 11691  014BC6  0100               	movlb	0	; () banked
 11692  014BC8  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11693  014BCA  D01B               	goto	l1670
 11694                           
 11695                           ; BSR set to: 0
 11696  014BCC  C071  F075         	movff	___xxtofl@val,??___xxtofl
 11697  014BD0  C072  F076         	movff	___xxtofl@val+1,??___xxtofl+1
 11698  014BD4  C073  F077         	movff	___xxtofl@val+2,??___xxtofl+2
 11699  014BD8  C074  F078         	movff	___xxtofl@val+3,??___xxtofl+3
 11700  014BDC  0100               	movlb	0	; () banked
 11701  014BDE  1F75               	comf	??___xxtofl& (0+255),f,b
 11702  014BE0  1F76               	comf	(??___xxtofl+1)& (0+255),f,b
 11703  014BE2  1F77               	comf	(??___xxtofl+2)& (0+255),f,b
 11704  014BE4  1F78               	comf	(??___xxtofl+3)& (0+255),f,b
 11705  014BE6  2B75               	incf	??___xxtofl& (0+255),f,b
 11706  014BE8  0E00               	movlw	0
 11707  014BEA  2376               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11708  014BEC  2377               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11709  014BEE  2378               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11710  014BF0  C075  F07B         	movff	??___xxtofl,___xxtofl@arg
 11711  014BF4  C076  F07C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11712  014BF8  C077  F07D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11713  014BFC  C078  F07E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11714  014C00  D008               	goto	l8754
 11715  014C02                     l1670:
 11716                           
 11717                           ; BSR set to: 0
 11718  014C02  C071  F07B         	movff	___xxtofl@val,___xxtofl@arg
 11719  014C06  C072  F07C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11720  014C0A  C073  F07D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11721  014C0E  C074  F07E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11722  014C12                     l8754:
 11723                           
 11724                           ; BSR set to: 0
 11725  014C12  0100               	movlb	0	; () banked
 11726  014C14  5171               	movf	___xxtofl@val& (0+255),w,b
 11727  014C16  0100               	movlb	0	; () banked
 11728  014C18  1172               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11729  014C1A  0100               	movlb	0	; () banked
 11730  014C1C  1173               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11731  014C1E  0100               	movlb	0	; () banked
 11732  014C20  1174               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11733  014C22  A4D8               	btfss	status,2,c
 11734  014C24  D00A               	goto	l8760
 11735                           
 11736                           ; BSR set to: 0
 11737  014C26  0E00               	movlw	0
 11738  014C28  0100               	movlb	0	; () banked
 11739  014C2A  6F71               	movwf	?___xxtofl& (0+255),b
 11740  014C2C  0E00               	movlw	0
 11741  014C2E  6F72               	movwf	(?___xxtofl+1)& (0+255),b
 11742  014C30  0E00               	movlw	0
 11743  014C32  6F73               	movwf	(?___xxtofl+2)& (0+255),b
 11744  014C34  0E00               	movlw	0
 11745  014C36  6F74               	movwf	(?___xxtofl+3)& (0+255),b
 11746                           
 11747                           ; BSR set to: 0
 11748  014C38  0012               	return	
 11749  014C3A                     l8760:
 11750                           
 11751                           ; BSR set to: 0
 11752  014C3A  0E96               	movlw	150
 11753  014C3C  0100               	movlb	0	; () banked
 11754  014C3E  6F7A               	movwf	___xxtofl@exp& (0+255),b
 11755  014C40  D008               	goto	l8764
 11756  014C42                     l8762:
 11757                           
 11758                           ; BSR set to: 0
 11759  014C42  0100               	movlb	0	; () banked
 11760  014C44  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11761  014C46  0100               	movlb	0	; () banked
 11762  014C48  90D8               	bcf	status,0,c
 11763  014C4A  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11764  014C4C  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11765  014C4E  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11766  014C50  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11767  014C52                     l8764:
 11768                           
 11769                           ; BSR set to: 0
 11770  014C52  0E00               	movlw	0
 11771  014C54  0100               	movlb	0	; () banked
 11772  014C56  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11773  014C58  0100               	movlb	0	; () banked
 11774  014C5A  6F75               	movwf	??___xxtofl& (0+255),b
 11775  014C5C  0E00               	movlw	0
 11776  014C5E  0100               	movlb	0	; () banked
 11777  014C60  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11778  014C62  0100               	movlb	0	; () banked
 11779  014C64  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11780  014C66  0E00               	movlw	0
 11781  014C68  0100               	movlb	0	; () banked
 11782  014C6A  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11783  014C6C  0100               	movlb	0	; () banked
 11784  014C6E  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11785  014C70  0EFE               	movlw	254
 11786  014C72  0100               	movlb	0	; () banked
 11787  014C74  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11788  014C76  0100               	movlb	0	; () banked
 11789  014C78  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11790  014C7A  0100               	movlb	0	; () banked
 11791  014C7C  5175               	movf	??___xxtofl& (0+255),w,b
 11792  014C7E  0100               	movlb	0	; () banked
 11793  014C80  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11794  014C82  0100               	movlb	0	; () banked
 11795  014C84  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11796  014C86  0100               	movlb	0	; () banked
 11797  014C88  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11798  014C8A  B4D8               	btfsc	status,2,c
 11799  014C8C  D010               	goto	l1677
 11800  014C8E  D7D9               	goto	l8762
 11801  014C90                     l8766:
 11802                           
 11803                           ; BSR set to: 0
 11804  014C90  0100               	movlb	0	; () banked
 11805  014C92  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11806                           
 11807                           ; BSR set to: 0
 11808  014C94  0E01               	movlw	1
 11809  014C96  0100               	movlb	0	; () banked
 11810  014C98  277B               	addwf	___xxtofl@arg& (0+255),f,b
 11811  014C9A  0E00               	movlw	0
 11812  014C9C  237C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11813  014C9E  237D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11814  014CA0  237E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11815                           
 11816                           ; BSR set to: 0
 11817  014CA2  0100               	movlb	0	; () banked
 11818  014CA4  90D8               	bcf	status,0,c
 11819  014CA6  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11820  014CA8  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11821  014CAA  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11822  014CAC  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11823  014CAE                     l1677:
 11824                           
 11825                           ; BSR set to: 0
 11826  014CAE  0E00               	movlw	0
 11827  014CB0  0100               	movlb	0	; () banked
 11828  014CB2  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11829  014CB4  0100               	movlb	0	; () banked
 11830  014CB6  6F75               	movwf	??___xxtofl& (0+255),b
 11831  014CB8  0E00               	movlw	0
 11832  014CBA  0100               	movlb	0	; () banked
 11833  014CBC  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11834  014CBE  0100               	movlb	0	; () banked
 11835  014CC0  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11836  014CC2  0E00               	movlw	0
 11837  014CC4  0100               	movlb	0	; () banked
 11838  014CC6  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11839  014CC8  0100               	movlb	0	; () banked
 11840  014CCA  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11841  014CCC  0EFF               	movlw	255
 11842  014CCE  0100               	movlb	0	; () banked
 11843  014CD0  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11844  014CD2  0100               	movlb	0	; () banked
 11845  014CD4  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11846  014CD6  0100               	movlb	0	; () banked
 11847  014CD8  5175               	movf	??___xxtofl& (0+255),w,b
 11848  014CDA  0100               	movlb	0	; () banked
 11849  014CDC  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11850  014CDE  0100               	movlb	0	; () banked
 11851  014CE0  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11852  014CE2  0100               	movlb	0	; () banked
 11853  014CE4  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11854  014CE6  B4D8               	btfsc	status,2,c
 11855  014CE8  D009               	goto	l8774
 11856  014CEA  D7D2               	goto	l8766
 11857  014CEC                     l8772:
 11858                           
 11859                           ; BSR set to: 0
 11860  014CEC  0100               	movlb	0	; () banked
 11861  014CEE  077A               	decf	___xxtofl@exp& (0+255),f,b
 11862  014CF0  0100               	movlb	0	; () banked
 11863  014CF2  90D8               	bcf	status,0,c
 11864  014CF4  377B               	rlcf	___xxtofl@arg& (0+255),f,b
 11865  014CF6  377C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11866  014CF8  377D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11867  014CFA  377E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11868  014CFC                     l8774:
 11869                           
 11870                           ; BSR set to: 0
 11871  014CFC  0100               	movlb	0	; () banked
 11872  014CFE  BF7D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11873  014D00  D004               	goto	l1684
 11874                           
 11875                           ; BSR set to: 0
 11876  014D02  0E02               	movlw	2
 11877  014D04  0100               	movlb	0	; () banked
 11878  014D06  617A               	cpfslt	___xxtofl@exp& (0+255),b
 11879  014D08  D7F1               	goto	l8772
 11880  014D0A                     l1684:
 11881                           
 11882                           ; BSR set to: 0
 11883  014D0A  0100               	movlb	0	; () banked
 11884  014D0C  B17A               	btfsc	___xxtofl@exp& (0+255),0,b
 11885  014D0E  D009               	goto	l1685
 11886                           
 11887                           ; BSR set to: 0
 11888  014D10  0EFF               	movlw	255
 11889  014D12  0100               	movlb	0	; () banked
 11890  014D14  177B               	andwf	___xxtofl@arg& (0+255),f,b
 11891  014D16  0EFF               	movlw	255
 11892  014D18  177C               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 11893  014D1A  0E7F               	movlw	127
 11894  014D1C  177D               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 11895  014D1E  0EFF               	movlw	255
 11896  014D20  177E               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 11897  014D22                     l1685:
 11898                           
 11899                           ; BSR set to: 0
 11900  014D22  0100               	movlb	0	; () banked
 11901  014D24  90D8               	bcf	status,0,c
 11902  014D26  337A               	rrcf	___xxtofl@exp& (0+255),f,b
 11903  014D28  C07A  F075         	movff	___xxtofl@exp,??___xxtofl
 11904  014D2C  0100               	movlb	0	; () banked
 11905  014D2E  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11906  014D30  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11907  014D32  6B78               	clrf	(??___xxtofl+3)& (0+255),b
 11908  014D34  C075  F078         	movff	??___xxtofl,??___xxtofl+3
 11909  014D38  0100               	movlb	0	; () banked
 11910  014D3A  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11911  014D3C  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11912  014D3E  6B75               	clrf	??___xxtofl& (0+255),b
 11913  014D40  0100               	movlb	0	; () banked
 11914  014D42  5175               	movf	??___xxtofl& (0+255),w,b
 11915  014D44  0100               	movlb	0	; () banked
 11916  014D46  137B               	iorwf	___xxtofl@arg& (0+255),f,b
 11917  014D48  0100               	movlb	0	; () banked
 11918  014D4A  5176               	movf	(??___xxtofl+1)& (0+255),w,b
 11919  014D4C  0100               	movlb	0	; () banked
 11920  014D4E  137C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11921  014D50  0100               	movlb	0	; () banked
 11922  014D52  5177               	movf	(??___xxtofl+2)& (0+255),w,b
 11923  014D54  0100               	movlb	0	; () banked
 11924  014D56  137D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11925  014D58  0100               	movlb	0	; () banked
 11926  014D5A  5178               	movf	(??___xxtofl+3)& (0+255),w,b
 11927  014D5C  0100               	movlb	0	; () banked
 11928  014D5E  137E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11929                           
 11930                           ; BSR set to: 0
 11931  014D60  0100               	movlb	0	; () banked
 11932  014D62  5179               	movf	___xxtofl@sign& (0+255),w,b
 11933  014D64  0100               	movlb	0	; () banked
 11934  014D66  B4D8               	btfsc	status,2,c
 11935  014D68  D005               	goto	l8786
 11936                           
 11937                           ; BSR set to: 0
 11938  014D6A  0100               	movlb	0	; () banked
 11939  014D6C  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11940  014D6E  D002               	goto	l8786
 11941                           
 11942                           ; BSR set to: 0
 11943  014D70  0100               	movlb	0	; () banked
 11944  014D72  8F7E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11945  014D74                     l8786:
 11946                           
 11947                           ; BSR set to: 0
 11948  014D74  C07B  F071         	movff	___xxtofl@arg,?___xxtofl
 11949  014D78  C07C  F072         	movff	___xxtofl@arg+1,?___xxtofl+1
 11950  014D7C  C07D  F073         	movff	___xxtofl@arg+2,?___xxtofl+2
 11951  014D80  C07E  F074         	movff	___xxtofl@arg+3,?___xxtofl+3
 11952  014D84  0012               	return	
 11953  014D86                     __end_of___xxtofl:
 11954                           	opt stack 0
 11955                           tblptru	equ	0xFF8
 11956                           tblptrh	equ	0xFF7
 11957                           tblptrl	equ	0xFF6
 11958                           tablat	equ	0xFF5
 11959                           prodh	equ	0xFF4
 11960                           prodl	equ	0xFF3
 11961                           intcon	equ	0xFF2
 11962                           postinc0	equ	0xFEE
 11963                           wreg	equ	0xFE8
 11964                           indf2	equ	0xFDF
 11965                           postinc2	equ	0xFDE
 11966                           fsr2h	equ	0xFDA
 11967                           fsr2l	equ	0xFD9
 11968                           status	equ	0xFD8
 11969                           
 11970 ;; *************** function ___llmod *****************
 11971 ;; Defined at:
 11972 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  dividend        4   17[BANK0 ] unsigned long 
 11975 ;;  divisor         4   21[BANK0 ] unsigned long 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  counter         1   25[BANK0 ] unsigned char 
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  4   17[BANK0 ] unsigned long 
 11980 ;; Registers used:
 11981 ;;		wreg, status,2, status,0
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11987 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;Total ram usage:        9 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:    3
 11994 ;; This function calls:
 11995 ;;		Nothing
 11996 ;; This function is called by:
 11997 ;;		_sprintf
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text20
 12002  015D60                     __ptext20:
 12003                           	opt stack 0
 12004  015D60                     ___llmod:
 12005                           	opt stack 25
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;incstack = 0
 12009  015D60  0100               	movlb	0	; () banked
 12010  015D62  5175               	movf	___llmod@divisor& (0+255),w,b
 12011  015D64  0100               	movlb	0	; () banked
 12012  015D66  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12013  015D68  0100               	movlb	0	; () banked
 12014  015D6A  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12015  015D6C  0100               	movlb	0	; () banked
 12016  015D6E  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12017  015D70  B4D8               	btfsc	status,2,c
 12018  015D72  D03A               	goto	l1478
 12019                           
 12020                           ; BSR set to: 0
 12021  015D74  0E01               	movlw	1
 12022  015D76  0100               	movlb	0	; () banked
 12023  015D78  6F79               	movwf	___llmod@counter& (0+255),b
 12024  015D7A  D008               	goto	l8738
 12025  015D7C                     l8736:
 12026                           
 12027                           ; BSR set to: 0
 12028  015D7C  0100               	movlb	0	; () banked
 12029  015D7E  90D8               	bcf	status,0,c
 12030  015D80  3775               	rlcf	___llmod@divisor& (0+255),f,b
 12031  015D82  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12032  015D84  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12033  015D86  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12034  015D88  0100               	movlb	0	; () banked
 12035  015D8A  2B79               	incf	___llmod@counter& (0+255),f,b
 12036  015D8C                     l8738:
 12037                           
 12038                           ; BSR set to: 0
 12039  015D8C  0100               	movlb	0	; () banked
 12040  015D8E  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12041  015D90  D7F5               	goto	l8736
 12042  015D92                     l8740:
 12043                           
 12044                           ; BSR set to: 0
 12045  015D92  0100               	movlb	0	; () banked
 12046  015D94  5175               	movf	___llmod@divisor& (0+255),w,b
 12047  015D96  0100               	movlb	0	; () banked
 12048  015D98  5D71               	subwf	___llmod@dividend& (0+255),w,b
 12049  015D9A  0100               	movlb	0	; () banked
 12050  015D9C  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 12051  015D9E  0100               	movlb	0	; () banked
 12052  015DA0  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12053  015DA2  0100               	movlb	0	; () banked
 12054  015DA4  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 12055  015DA6  0100               	movlb	0	; () banked
 12056  015DA8  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12057  015DAA  0100               	movlb	0	; () banked
 12058  015DAC  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 12059  015DAE  0100               	movlb	0	; () banked
 12060  015DB0  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12061  015DB2  A0D8               	btfss	status,0,c
 12062  015DB4  D010               	goto	l8744
 12063                           
 12064                           ; BSR set to: 0
 12065  015DB6  0100               	movlb	0	; () banked
 12066  015DB8  5175               	movf	___llmod@divisor& (0+255),w,b
 12067  015DBA  0100               	movlb	0	; () banked
 12068  015DBC  5F71               	subwf	___llmod@dividend& (0+255),f,b
 12069  015DBE  0100               	movlb	0	; () banked
 12070  015DC0  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 12071  015DC2  0100               	movlb	0	; () banked
 12072  015DC4  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12073  015DC6  0100               	movlb	0	; () banked
 12074  015DC8  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 12075  015DCA  0100               	movlb	0	; () banked
 12076  015DCC  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12077  015DCE  0100               	movlb	0	; () banked
 12078  015DD0  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 12079  015DD2  0100               	movlb	0	; () banked
 12080  015DD4  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12081  015DD6                     l8744:
 12082                           
 12083                           ; BSR set to: 0
 12084  015DD6  0100               	movlb	0	; () banked
 12085  015DD8  90D8               	bcf	status,0,c
 12086  015DDA  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12087  015DDC  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12088  015DDE  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12089  015DE0  3375               	rrcf	___llmod@divisor& (0+255),f,b
 12090                           
 12091                           ; BSR set to: 0
 12092  015DE2  0100               	movlb	0	; () banked
 12093  015DE4  2F79               	decfsz	___llmod@counter& (0+255),f,b
 12094  015DE6  D7D5               	goto	l8740
 12095  015DE8                     l1478:
 12096                           
 12097                           ; BSR set to: 0
 12098  015DE8  C071  F071         	movff	___llmod@dividend,?___llmod
 12099  015DEC  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 12100  015DF0  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 12101  015DF4  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 12102                           
 12103                           ; BSR set to: 0
 12104  015DF8  0012               	return		;funcret
 12105  015DFA                     __end_of___llmod:
 12106                           	opt stack 0
 12107                           tblptru	equ	0xFF8
 12108                           tblptrh	equ	0xFF7
 12109                           tblptrl	equ	0xFF6
 12110                           tablat	equ	0xFF5
 12111                           prodh	equ	0xFF4
 12112                           prodl	equ	0xFF3
 12113                           intcon	equ	0xFF2
 12114                           postinc0	equ	0xFEE
 12115                           wreg	equ	0xFE8
 12116                           indf2	equ	0xFDF
 12117                           postinc2	equ	0xFDE
 12118                           fsr2h	equ	0xFDA
 12119                           fsr2l	equ	0xFD9
 12120                           status	equ	0xFD8
 12121                           
 12122 ;; *************** function ___lldiv *****************
 12123 ;; Defined at:
 12124 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;  dividend        4   17[BANK0 ] unsigned long 
 12127 ;;  divisor         4   21[BANK0 ] unsigned long 
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;  quotient        4   25[BANK0 ] unsigned long 
 12130 ;;  counter         1   29[BANK0 ] unsigned char 
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  4   17[BANK0 ] unsigned long 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12140 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12141 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;Total ram usage:       13 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    3
 12147 ;; This function calls:
 12148 ;;		Nothing
 12149 ;; This function is called by:
 12150 ;;		_sprintf
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           	psect	text21
 12155  015AA4                     __ptext21:
 12156                           	opt stack 0
 12157  015AA4                     ___lldiv:
 12158                           	opt stack 25
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;incstack = 0
 12162  015AA4  0E00               	movlw	0
 12163  015AA6  0100               	movlb	0	; () banked
 12164  015AA8  6F79               	movwf	___lldiv@quotient& (0+255),b
 12165  015AAA  0E00               	movlw	0
 12166  015AAC  6F7A               	movwf	(___lldiv@quotient+1)& (0+255),b
 12167  015AAE  0E00               	movlw	0
 12168  015AB0  6F7B               	movwf	(___lldiv@quotient+2)& (0+255),b
 12169  015AB2  0E00               	movlw	0
 12170  015AB4  6F7C               	movwf	(___lldiv@quotient+3)& (0+255),b
 12171                           
 12172                           ; BSR set to: 0
 12173  015AB6  0100               	movlb	0	; () banked
 12174  015AB8  5175               	movf	___lldiv@divisor& (0+255),w,b
 12175  015ABA  0100               	movlb	0	; () banked
 12176  015ABC  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12177  015ABE  0100               	movlb	0	; () banked
 12178  015AC0  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12179  015AC2  0100               	movlb	0	; () banked
 12180  015AC4  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12181  015AC6  B4D8               	btfsc	status,2,c
 12182  015AC8  D042               	goto	l1468
 12183                           
 12184                           ; BSR set to: 0
 12185  015ACA  0E01               	movlw	1
 12186  015ACC  0100               	movlb	0	; () banked
 12187  015ACE  6F7D               	movwf	___lldiv@counter& (0+255),b
 12188  015AD0  D008               	goto	l8718
 12189  015AD2                     l8716:
 12190                           
 12191                           ; BSR set to: 0
 12192  015AD2  0100               	movlb	0	; () banked
 12193  015AD4  90D8               	bcf	status,0,c
 12194  015AD6  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 12195  015AD8  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12196  015ADA  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12197  015ADC  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12198  015ADE  0100               	movlb	0	; () banked
 12199  015AE0  2B7D               	incf	___lldiv@counter& (0+255),f,b
 12200  015AE2                     l8718:
 12201                           
 12202                           ; BSR set to: 0
 12203  015AE2  0100               	movlb	0	; () banked
 12204  015AE4  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12205  015AE6  D7F5               	goto	l8716
 12206  015AE8                     l8720:
 12207                           
 12208                           ; BSR set to: 0
 12209  015AE8  0100               	movlb	0	; () banked
 12210  015AEA  90D8               	bcf	status,0,c
 12211  015AEC  3779               	rlcf	___lldiv@quotient& (0+255),f,b
 12212  015AEE  377A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12213  015AF0  377B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12214  015AF2  377C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12215                           
 12216                           ; BSR set to: 0
 12217  015AF4  0100               	movlb	0	; () banked
 12218  015AF6  5175               	movf	___lldiv@divisor& (0+255),w,b
 12219  015AF8  0100               	movlb	0	; () banked
 12220  015AFA  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 12221  015AFC  0100               	movlb	0	; () banked
 12222  015AFE  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12223  015B00  0100               	movlb	0	; () banked
 12224  015B02  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12225  015B04  0100               	movlb	0	; () banked
 12226  015B06  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12227  015B08  0100               	movlb	0	; () banked
 12228  015B0A  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12229  015B0C  0100               	movlb	0	; () banked
 12230  015B0E  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12231  015B10  0100               	movlb	0	; () banked
 12232  015B12  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12233  015B14  A0D8               	btfss	status,0,c
 12234  015B16  D012               	goto	l8728
 12235                           
 12236                           ; BSR set to: 0
 12237  015B18  0100               	movlb	0	; () banked
 12238  015B1A  5175               	movf	___lldiv@divisor& (0+255),w,b
 12239  015B1C  0100               	movlb	0	; () banked
 12240  015B1E  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 12241  015B20  0100               	movlb	0	; () banked
 12242  015B22  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12243  015B24  0100               	movlb	0	; () banked
 12244  015B26  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12245  015B28  0100               	movlb	0	; () banked
 12246  015B2A  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12247  015B2C  0100               	movlb	0	; () banked
 12248  015B2E  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12249  015B30  0100               	movlb	0	; () banked
 12250  015B32  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12251  015B34  0100               	movlb	0	; () banked
 12252  015B36  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12253                           
 12254                           ; BSR set to: 0
 12255  015B38  0100               	movlb	0	; () banked
 12256  015B3A  8179               	bsf	___lldiv@quotient& (0+255),0,b
 12257  015B3C                     l8728:
 12258                           
 12259                           ; BSR set to: 0
 12260  015B3C  0100               	movlb	0	; () banked
 12261  015B3E  90D8               	bcf	status,0,c
 12262  015B40  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12263  015B42  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12264  015B44  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12265  015B46  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 12266                           
 12267                           ; BSR set to: 0
 12268  015B48  0100               	movlb	0	; () banked
 12269  015B4A  2F7D               	decfsz	___lldiv@counter& (0+255),f,b
 12270  015B4C  D7CD               	goto	l8720
 12271  015B4E                     l1468:
 12272                           
 12273                           ; BSR set to: 0
 12274  015B4E  C079  F071         	movff	___lldiv@quotient,?___lldiv
 12275  015B52  C07A  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 12276  015B56  C07B  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 12277  015B5A  C07C  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 12278                           
 12279                           ; BSR set to: 0
 12280  015B5E  0012               	return		;funcret
 12281  015B60                     __end_of___lldiv:
 12282                           	opt stack 0
 12283                           tblptru	equ	0xFF8
 12284                           tblptrh	equ	0xFF7
 12285                           tblptrl	equ	0xFF6
 12286                           tablat	equ	0xFF5
 12287                           prodh	equ	0xFF4
 12288                           prodl	equ	0xFF3
 12289                           intcon	equ	0xFF2
 12290                           postinc0	equ	0xFEE
 12291                           wreg	equ	0xFE8
 12292                           indf2	equ	0xFDF
 12293                           postinc2	equ	0xFDE
 12294                           fsr2h	equ	0xFDA
 12295                           fsr2l	equ	0xFD9
 12296                           status	equ	0xFD8
 12297                           
 12298 ;; *************** function ___fltol *****************
 12299 ;; Defined at:
 12300 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;  f1              4   89[BANK0 ] unsigned long 
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;  exp1            1   98[BANK0 ] unsigned char 
 12305 ;;  sign1           1   97[BANK0 ] unsigned char 
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  4   89[BANK0 ] long 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2, status,0
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12315 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;Total ram usage:       10 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    3
 12322 ;; This function calls:
 12323 ;;		Nothing
 12324 ;; This function is called by:
 12325 ;;		_main
 12326 ;;		_sprintf
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           	psect	text22
 12331  015730                     __ptext22:
 12332                           	opt stack 0
 12333  015730                     ___fltol:
 12334                           	opt stack 27
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;incstack = 0
 12338  015730  0100               	movlb	0	; () banked
 12339  015732  35BB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12340  015734  35BC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12341  015736  0100               	movlb	0	; () banked
 12342  015738  6FC2               	movwf	___fltol@exp1& (0+255),b
 12343  01573A  0100               	movlb	0	; () banked
 12344  01573C  51C2               	movf	___fltol@exp1& (0+255),w,b
 12345  01573E  A4D8               	btfss	status,2,c
 12346  015740  D00A               	goto	l8672
 12347                           
 12348                           ; BSR set to: 0
 12349  015742  0E00               	movlw	0
 12350  015744  0100               	movlb	0	; () banked
 12351  015746  6FB9               	movwf	?___fltol& (0+255),b
 12352  015748  0E00               	movlw	0
 12353  01574A  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12354  01574C  0E00               	movlw	0
 12355  01574E  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12356  015750  0E00               	movlw	0
 12357  015752  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12358                           
 12359                           ; BSR set to: 0
 12360  015754  0012               	return	
 12361  015756                     l8672:
 12362                           
 12363                           ; BSR set to: 0
 12364  015756  C0B9  F0BD         	movff	___fltol@f1,??___fltol
 12365  01575A  C0BA  F0BE         	movff	___fltol@f1+1,??___fltol+1
 12366  01575E  C0BB  F0BF         	movff	___fltol@f1+2,??___fltol+2
 12367  015762  C0BC  F0C0         	movff	___fltol@f1+3,??___fltol+3
 12368  015766  0E20               	movlw	32
 12369  015768  D006               	goto	u11470
 12370  01576A                     u11475:
 12371  01576A  0100               	movlb	0	; () banked
 12372  01576C  90D8               	bcf	status,0,c
 12373  01576E  33C0               	rrcf	(??___fltol+3)& (0+255),f,b
 12374  015770  33BF               	rrcf	(??___fltol+2)& (0+255),f,b
 12375  015772  33BE               	rrcf	(??___fltol+1)& (0+255),f,b
 12376  015774  33BD               	rrcf	??___fltol& (0+255),f,b
 12377  015776                     u11470:
 12378  015776  2EE8               	decfsz	wreg,f,c
 12379  015778  D7F8               	goto	u11475
 12380  01577A  0100               	movlb	0	; () banked
 12381  01577C  51BD               	movf	??___fltol& (0+255),w,b
 12382  01577E  0100               	movlb	0	; () banked
 12383  015780  6FC1               	movwf	___fltol@sign1& (0+255),b
 12384                           
 12385                           ; BSR set to: 0
 12386  015782  0100               	movlb	0	; () banked
 12387  015784  8FBB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12388                           
 12389                           ; BSR set to: 0
 12390  015786  0EFF               	movlw	255
 12391  015788  0100               	movlb	0	; () banked
 12392  01578A  17B9               	andwf	___fltol@f1& (0+255),f,b
 12393  01578C  0EFF               	movlw	255
 12394  01578E  17BA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12395  015790  0EFF               	movlw	255
 12396  015792  17BB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12397  015794  0E00               	movlw	0
 12398  015796  17BC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12399                           
 12400                           ; BSR set to: 0
 12401  015798  0E96               	movlw	150
 12402  01579A  0100               	movlb	0	; () banked
 12403  01579C  5FC2               	subwf	___fltol@exp1& (0+255),f,b
 12404                           
 12405                           ; BSR set to: 0
 12406  01579E  0100               	movlb	0	; () banked
 12407  0157A0  AFC2               	btfss	___fltol@exp1& (0+255),7,b
 12408  0157A2  D01A               	goto	l8692
 12409                           
 12410                           ; BSR set to: 0
 12411  0157A4  0100               	movlb	0	; () banked
 12412  0157A6  51C2               	movf	___fltol@exp1& (0+255),w,b
 12413  0157A8  0A80               	xorlw	128
 12414  0157AA  0F97               	addlw	151
 12415  0157AC  B0D8               	btfsc	status,0,c
 12416  0157AE  D00A               	goto	l8688
 12417                           
 12418                           ; BSR set to: 0
 12419  0157B0  0E00               	movlw	0
 12420  0157B2  0100               	movlb	0	; () banked
 12421  0157B4  6FB9               	movwf	?___fltol& (0+255),b
 12422  0157B6  0E00               	movlw	0
 12423  0157B8  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12424  0157BA  0E00               	movlw	0
 12425  0157BC  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12426  0157BE  0E00               	movlw	0
 12427  0157C0  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12428                           
 12429                           ; BSR set to: 0
 12430  0157C2  0012               	return	
 12431  0157C4                     l8688:
 12432                           
 12433                           ; BSR set to: 0
 12434  0157C4  0100               	movlb	0	; () banked
 12435  0157C6  90D8               	bcf	status,0,c
 12436  0157C8  33BC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12437  0157CA  33BB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12438  0157CC  33BA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12439  0157CE  33B9               	rrcf	___fltol@f1& (0+255),f,b
 12440                           
 12441                           ; BSR set to: 0
 12442  0157D0  0100               	movlb	0	; () banked
 12443  0157D2  3FC2               	incfsz	___fltol@exp1& (0+255),f,b
 12444  0157D4  D7F7               	goto	l8688
 12445                           
 12446                           ; BSR set to: 0
 12447  0157D6  D01B               	goto	l8702
 12448  0157D8                     l8692:
 12449                           
 12450                           ; BSR set to: 0
 12451  0157D8  0E1F               	movlw	31
 12452  0157DA  0100               	movlb	0	; () banked
 12453  0157DC  65C2               	cpfsgt	___fltol@exp1& (0+255),b
 12454  0157DE  D012               	goto	l8700
 12455                           
 12456                           ; BSR set to: 0
 12457  0157E0  0E00               	movlw	0
 12458  0157E2  0100               	movlb	0	; () banked
 12459  0157E4  6FB9               	movwf	?___fltol& (0+255),b
 12460  0157E6  0E00               	movlw	0
 12461  0157E8  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12462  0157EA  0E00               	movlw	0
 12463  0157EC  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12464  0157EE  0E00               	movlw	0
 12465  0157F0  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12466                           
 12467                           ; BSR set to: 0
 12468  0157F2  0012               	return	
 12469  0157F4                     l8698:
 12470                           
 12471                           ; BSR set to: 0
 12472  0157F4  0100               	movlb	0	; () banked
 12473  0157F6  90D8               	bcf	status,0,c
 12474  0157F8  37B9               	rlcf	___fltol@f1& (0+255),f,b
 12475  0157FA  37BA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12476  0157FC  37BB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12477  0157FE  37BC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12478  015800  0100               	movlb	0	; () banked
 12479  015802  07C2               	decf	___fltol@exp1& (0+255),f,b
 12480  015804                     l8700:
 12481                           
 12482                           ; BSR set to: 0
 12483  015804  0100               	movlb	0	; () banked
 12484  015806  51C2               	movf	___fltol@exp1& (0+255),w,b
 12485  015808  0100               	movlb	0	; () banked
 12486  01580A  A4D8               	btfss	status,2,c
 12487  01580C  D7F3               	goto	l8698
 12488  01580E                     l8702:
 12489                           
 12490                           ; BSR set to: 0
 12491  01580E  0100               	movlb	0	; () banked
 12492  015810  51C1               	movf	___fltol@sign1& (0+255),w,b
 12493  015812  0100               	movlb	0	; () banked
 12494  015814  B4D8               	btfsc	status,2,c
 12495  015816  D009               	goto	l8706
 12496                           
 12497                           ; BSR set to: 0
 12498  015818  0100               	movlb	0	; () banked
 12499  01581A  1FBC               	comf	(___fltol@f1+3)& (0+255),f,b
 12500  01581C  1FBB               	comf	(___fltol@f1+2)& (0+255),f,b
 12501  01581E  1FBA               	comf	(___fltol@f1+1)& (0+255),f,b
 12502  015820  6DB9               	negf	___fltol@f1& (0+255),b
 12503  015822  0E00               	movlw	0
 12504  015824  23BA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12505  015826  23BB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12506  015828  23BC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12507  01582A                     l8706:
 12508                           
 12509                           ; BSR set to: 0
 12510  01582A  C0B9  F0B9         	movff	___fltol@f1,?___fltol
 12511  01582E  C0BA  F0BA         	movff	___fltol@f1+1,?___fltol+1
 12512  015832  C0BB  F0BB         	movff	___fltol@f1+2,?___fltol+2
 12513  015836  C0BC  F0BC         	movff	___fltol@f1+3,?___fltol+3
 12514  01583A  0012               	return	
 12515  01583C                     __end_of___fltol:
 12516                           	opt stack 0
 12517                           tblptru	equ	0xFF8
 12518                           tblptrh	equ	0xFF7
 12519                           tblptrl	equ	0xFF6
 12520                           tablat	equ	0xFF5
 12521                           prodh	equ	0xFF4
 12522                           prodl	equ	0xFF3
 12523                           intcon	equ	0xFF2
 12524                           postinc0	equ	0xFEE
 12525                           wreg	equ	0xFE8
 12526                           indf2	equ	0xFDF
 12527                           postinc2	equ	0xFDE
 12528                           fsr2h	equ	0xFDA
 12529                           fsr2l	equ	0xFD9
 12530                           status	equ	0xFD8
 12531                           
 12532 ;; *************** function ___flsub *****************
 12533 ;; Defined at:
 12534 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12535 ;; Parameters:    Size  Location     Type
 12536 ;;  b               4   89[BANK0 ] long 
 12537 ;;  a               4   93[BANK0 ] long 
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;		None
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  4   89[BANK0 ] long 
 12542 ;; Registers used:
 12543 ;;		wreg, status,2, status,0, cstack
 12544 ;; Tracked objects:
 12545 ;;		On entry : 0/0
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12549 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;Total ram usage:        8 bytes
 12554 ;; Hardware stack levels used:    1
 12555 ;; Hardware stack levels required when called:    4
 12556 ;; This function calls:
 12557 ;;		___fladd
 12558 ;; This function is called by:
 12559 ;;		_sprintf
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text23
 12564  016270                     __ptext23:
 12565                           	opt stack 0
 12566  016270                     ___flsub:
 12567                           	opt stack 24
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;incstack = 0
 12571  016270  0E00               	movlw	0
 12572  016272  0100               	movlb	0	; () banked
 12573  016274  1BBD               	xorwf	___flsub@a& (0+255),f,b
 12574  016276  0E00               	movlw	0
 12575  016278  1BBE               	xorwf	(___flsub@a+1)& (0+255),f,b
 12576  01627A  0E00               	movlw	0
 12577  01627C  1BBF               	xorwf	(___flsub@a+2)& (0+255),f,b
 12578  01627E  0E80               	movlw	128
 12579  016280  1BC0               	xorwf	(___flsub@a+3)& (0+255),f,b
 12580                           
 12581                           ; BSR set to: 0
 12582  016282  C0B9  F0A5         	movff	___flsub@b,___fladd@b
 12583  016286  C0BA  F0A6         	movff	___flsub@b+1,___fladd@b+1
 12584  01628A  C0BB  F0A7         	movff	___flsub@b+2,___fladd@b+2
 12585  01628E  C0BC  F0A8         	movff	___flsub@b+3,___fladd@b+3
 12586  016292  C0BD  F0A9         	movff	___flsub@a,___fladd@a
 12587  016296  C0BE  F0AA         	movff	___flsub@a+1,___fladd@a+1
 12588  01629A  C0BF  F0AB         	movff	___flsub@a+2,___fladd@a+2
 12589  01629E  C0C0  F0AC         	movff	___flsub@a+3,___fladd@a+3
 12590  0162A2  ECFC  F099         	call	___fladd	;wreg free
 12591  0162A6  C0A5  F0B9         	movff	?___fladd,?___flsub
 12592  0162AA  C0A6  F0BA         	movff	?___fladd+1,?___flsub+1
 12593  0162AE  C0A7  F0BB         	movff	?___fladd+2,?___flsub+2
 12594  0162B2  C0A8  F0BC         	movff	?___fladd+3,?___flsub+3
 12595  0162B6  0012               	return	
 12596  0162B8                     __end_of___flsub:
 12597                           	opt stack 0
 12598                           tblptru	equ	0xFF8
 12599                           tblptrh	equ	0xFF7
 12600                           tblptrl	equ	0xFF6
 12601                           tablat	equ	0xFF5
 12602                           prodh	equ	0xFF4
 12603                           prodl	equ	0xFF3
 12604                           intcon	equ	0xFF2
 12605                           postinc0	equ	0xFEE
 12606                           wreg	equ	0xFE8
 12607                           indf2	equ	0xFDF
 12608                           postinc2	equ	0xFDE
 12609                           fsr2h	equ	0xFDA
 12610                           fsr2l	equ	0xFD9
 12611                           status	equ	0xFD8
 12612                           
 12613 ;; *************** function ___fladd *****************
 12614 ;; Defined at:
 12615 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12616 ;; Parameters:    Size  Location     Type
 12617 ;;  b               4   69[BANK0 ] long 
 12618 ;;  a               4   73[BANK0 ] long 
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;  grs             1   88[BANK0 ] unsigned char 
 12621 ;;  bexp            1   87[BANK0 ] unsigned char 
 12622 ;;  aexp            1   86[BANK0 ] unsigned char 
 12623 ;;  signs           1   85[BANK0 ] unsigned char 
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  4   69[BANK0 ] unsigned char 
 12626 ;; Registers used:
 12627 ;;		wreg, status,2, status,0
 12628 ;; Tracked objects:
 12629 ;;		On entry : 0/0
 12630 ;;		On exit  : 0/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;Total ram usage:       20 bytes
 12638 ;; Hardware stack levels used:    1
 12639 ;; Hardware stack levels required when called:    3
 12640 ;; This function calls:
 12641 ;;		Nothing
 12642 ;; This function is called by:
 12643 ;;		_main
 12644 ;;		_sprintf
 12645 ;;		___flsub
 12646 ;; This function uses a non-reentrant model
 12647 ;;
 12648                           
 12649                           	psect	text24
 12650  0133F8                     __ptext24:
 12651                           	opt stack 0
 12652  0133F8                     ___fladd:
 12653                           	opt stack 27
 12654                           
 12655                           ;incstack = 0
 12656  0133F8  0100               	movlb	0	; () banked
 12657  0133FA  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12658  0133FC  0B80               	andlw	128
 12659  0133FE  0100               	movlb	0	; () banked
 12660  013400  6FB5               	movwf	___fladd@signs& (0+255),b
 12661  013402  0100               	movlb	0	; () banked
 12662  013404  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12663  013406  25A8               	addwf	(___fladd@b+3)& (0+255),w,b
 12664  013408  0100               	movlb	0	; () banked
 12665  01340A  6FB7               	movwf	___fladd@bexp& (0+255),b
 12666                           
 12667                           ; BSR set to: 0
 12668  01340C  0100               	movlb	0	; () banked
 12669  01340E  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 12670  013410  D002               	goto	l8004
 12671                           
 12672                           ; BSR set to: 0
 12673  013412  0100               	movlb	0	; () banked
 12674  013414  81B7               	bsf	___fladd@bexp& (0+255),0,b
 12675  013416                     l8004:
 12676                           
 12677                           ; BSR set to: 0
 12678  013416  0100               	movlb	0	; () banked
 12679  013418  51B7               	movf	___fladd@bexp& (0+255),w,b
 12680  01341A  0100               	movlb	0	; () banked
 12681  01341C  B4D8               	btfsc	status,2,c
 12682  01341E  D012               	goto	l8014
 12683                           
 12684                           ; BSR set to: 0
 12685  013420  0100               	movlb	0	; () banked
 12686  013422  29B7               	incf	___fladd@bexp& (0+255),w,b
 12687  013424  A4D8               	btfss	status,2,c
 12688  013426  D009               	goto	l8010
 12689                           
 12690                           ; BSR set to: 0
 12691  013428  0E00               	movlw	0
 12692  01342A  0100               	movlb	0	; () banked
 12693  01342C  6FA5               	movwf	___fladd@b& (0+255),b
 12694  01342E  0E00               	movlw	0
 12695  013430  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12696  013432  0E00               	movlw	0
 12697  013434  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12698  013436  0E00               	movlw	0
 12699  013438  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12700  01343A                     l8010:
 12701                           
 12702                           ; BSR set to: 0
 12703  01343A  0100               	movlb	0	; () banked
 12704  01343C  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 12705                           
 12706                           ; BSR set to: 0
 12707  01343E  0E00               	movlw	0
 12708  013440  0100               	movlb	0	; () banked
 12709  013442  D008               	goto	L10
 12710  013444                     l8014:
 12711                           
 12712                           ; BSR set to: 0
 12713  013444  0E00               	movlw	0
 12714  013446  0100               	movlb	0	; () banked
 12715  013448  6FA5               	movwf	___fladd@b& (0+255),b
 12716  01344A  0E00               	movlw	0
 12717  01344C  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12718  01344E  0E00               	movlw	0
 12719  013450  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12720  013452  0E00               	movlw	0
 12721  013454                     L10:
 12722  013454  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12723                           
 12724                           ; BSR set to: 0
 12725                           
 12726                           ; BSR set to: 0
 12727  013456  0100               	movlb	0	; () banked
 12728  013458  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12729  01345A  0B80               	andlw	128
 12730  01345C  0100               	movlb	0	; () banked
 12731  01345E  6FB6               	movwf	___fladd@aexp& (0+255),b
 12732                           
 12733                           ; BSR set to: 0
 12734  013460  0100               	movlb	0	; () banked
 12735  013462  51B5               	movf	___fladd@signs& (0+255),w,b
 12736  013464  0100               	movlb	0	; () banked
 12737  013466  19B6               	xorwf	___fladd@aexp& (0+255),w,b
 12738  013468  B4D8               	btfsc	status,2,c
 12739  01346A  D002               	goto	l8022
 12740                           
 12741                           ; BSR set to: 0
 12742  01346C  0100               	movlb	0	; () banked
 12743  01346E  8DB5               	bsf	___fladd@signs& (0+255),6,b
 12744  013470                     l8022:
 12745                           
 12746                           ; BSR set to: 0
 12747  013470  0100               	movlb	0	; () banked
 12748  013472  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12749  013474  25AC               	addwf	(___fladd@a+3)& (0+255),w,b
 12750  013476  0100               	movlb	0	; () banked
 12751  013478  6FB6               	movwf	___fladd@aexp& (0+255),b
 12752                           
 12753                           ; BSR set to: 0
 12754  01347A  0100               	movlb	0	; () banked
 12755  01347C  AFAB               	btfss	(___fladd@a+2)& (0+255),7,b
 12756  01347E  D002               	goto	l8028
 12757                           
 12758                           ; BSR set to: 0
 12759  013480  0100               	movlb	0	; () banked
 12760  013482  81B6               	bsf	___fladd@aexp& (0+255),0,b
 12761  013484                     l8028:
 12762                           
 12763                           ; BSR set to: 0
 12764  013484  0100               	movlb	0	; () banked
 12765  013486  51B6               	movf	___fladd@aexp& (0+255),w,b
 12766  013488  0100               	movlb	0	; () banked
 12767  01348A  B4D8               	btfsc	status,2,c
 12768  01348C  D012               	goto	l8038
 12769                           
 12770                           ; BSR set to: 0
 12771  01348E  0100               	movlb	0	; () banked
 12772  013490  29B6               	incf	___fladd@aexp& (0+255),w,b
 12773  013492  A4D8               	btfss	status,2,c
 12774  013494  D009               	goto	l8034
 12775                           
 12776                           ; BSR set to: 0
 12777  013496  0E00               	movlw	0
 12778  013498  0100               	movlb	0	; () banked
 12779  01349A  6FA9               	movwf	___fladd@a& (0+255),b
 12780  01349C  0E00               	movlw	0
 12781  01349E  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12782  0134A0  0E00               	movlw	0
 12783  0134A2  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12784  0134A4  0E00               	movlw	0
 12785  0134A6  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12786  0134A8                     l8034:
 12787                           
 12788                           ; BSR set to: 0
 12789  0134A8  0100               	movlb	0	; () banked
 12790  0134AA  8FAB               	bsf	(___fladd@a+2)& (0+255),7,b
 12791                           
 12792                           ; BSR set to: 0
 12793  0134AC  0E00               	movlw	0
 12794  0134AE  0100               	movlb	0	; () banked
 12795  0134B0  D008               	goto	L11
 12796  0134B2                     l8038:
 12797                           
 12798                           ; BSR set to: 0
 12799  0134B2  0E00               	movlw	0
 12800  0134B4  0100               	movlb	0	; () banked
 12801  0134B6  6FA9               	movwf	___fladd@a& (0+255),b
 12802  0134B8  0E00               	movlw	0
 12803  0134BA  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12804  0134BC  0E00               	movlw	0
 12805  0134BE  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12806  0134C0  0E00               	movlw	0
 12807  0134C2                     L11:
 12808  0134C2  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12809                           
 12810                           ; BSR set to: 0
 12811                           
 12812                           ; BSR set to: 0
 12813  0134C4  0100               	movlb	0	; () banked
 12814  0134C6  51B7               	movf	___fladd@bexp& (0+255),w,b
 12815  0134C8  0100               	movlb	0	; () banked
 12816  0134CA  5DB6               	subwf	___fladd@aexp& (0+255),w,b
 12817  0134CC  B0D8               	btfsc	status,0,c
 12818  0134CE  D024               	goto	l8076
 12819                           
 12820                           ; BSR set to: 0
 12821  0134D0  0100               	movlb	0	; () banked
 12822  0134D2  ADB5               	btfss	___fladd@signs& (0+255),6,b
 12823  0134D4  D003               	goto	l8046
 12824                           
 12825                           ; BSR set to: 0
 12826  0134D6  0E80               	movlw	128
 12827  0134D8  0100               	movlb	0	; () banked
 12828  0134DA  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 12829  0134DC                     l8046:
 12830                           
 12831                           ; BSR set to: 0
 12832  0134DC  C0B7  F0B8         	movff	___fladd@bexp,___fladd@grs
 12833                           
 12834                           ; BSR set to: 0
 12835  0134E0  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12836                           
 12837                           ; BSR set to: 0
 12838  0134E4  C0B8  F0B6         	movff	___fladd@grs,___fladd@aexp
 12839                           
 12840                           ; BSR set to: 0
 12841  0134E8  C0A5  F0B8         	movff	___fladd@b,___fladd@grs
 12842                           
 12843                           ; BSR set to: 0
 12844  0134EC  C0A9  F0A5         	movff	___fladd@a,___fladd@b
 12845                           
 12846                           ; BSR set to: 0
 12847  0134F0  C0B8  F0A9         	movff	___fladd@grs,___fladd@a
 12848                           
 12849                           ; BSR set to: 0
 12850  0134F4  C0A6  F0B8         	movff	___fladd@b+1,___fladd@grs
 12851                           
 12852                           ; BSR set to: 0
 12853  0134F8  C0AA  F0A6         	movff	___fladd@a+1,___fladd@b+1
 12854                           
 12855                           ; BSR set to: 0
 12856  0134FC  C0B8  F0AA         	movff	___fladd@grs,___fladd@a+1
 12857                           
 12858                           ; BSR set to: 0
 12859  013500  C0A7  F0B8         	movff	___fladd@b+2,___fladd@grs
 12860                           
 12861                           ; BSR set to: 0
 12862  013504  C0AB  F0A7         	movff	___fladd@a+2,___fladd@b+2
 12863                           
 12864                           ; BSR set to: 0
 12865  013508  C0B8  F0AB         	movff	___fladd@grs,___fladd@a+2
 12866                           
 12867                           ; BSR set to: 0
 12868  01350C  C0A8  F0B8         	movff	___fladd@b+3,___fladd@grs
 12869                           
 12870                           ; BSR set to: 0
 12871  013510  C0AC  F0A8         	movff	___fladd@a+3,___fladd@b+3
 12872                           
 12873                           ; BSR set to: 0
 12874  013514  C0B8  F0AC         	movff	___fladd@grs,___fladd@a+3
 12875  013518                     l8076:
 12876                           
 12877                           ; BSR set to: 0
 12878  013518  0E00               	movlw	0
 12879  01351A  0100               	movlb	0	; () banked
 12880  01351C  6FB8               	movwf	___fladd@grs& (0+255),b
 12881                           
 12882                           ; BSR set to: 0
 12883  01351E  0100               	movlb	0	; () banked
 12884  013520  51B7               	movf	___fladd@bexp& (0+255),w,b
 12885  013522  0100               	movlb	0	; () banked
 12886  013524  6FAD               	movwf	??___fladd& (0+255),b
 12887  013526  6BAE               	clrf	(??___fladd+1)& (0+255),b
 12888  013528  0100               	movlb	0	; () banked
 12889  01352A  1FAD               	comf	??___fladd& (0+255),f,b
 12890  01352C  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 12891  01352E  4BAD               	infsnz	??___fladd& (0+255),f,b
 12892  013530  2BAE               	incf	(??___fladd+1)& (0+255),f,b
 12893  013532  0100               	movlb	0	; () banked
 12894  013534  51B6               	movf	___fladd@aexp& (0+255),w,b
 12895  013536  0100               	movlb	0	; () banked
 12896  013538  6FAF               	movwf	(??___fladd+2)& (0+255),b
 12897  01353A  6BB0               	clrf	(??___fladd+3)& (0+255),b
 12898  01353C  0100               	movlb	0	; () banked
 12899  01353E  51AD               	movf	??___fladd& (0+255),w,b
 12900  013540  0100               	movlb	0	; () banked
 12901  013542  27AF               	addwf	(??___fladd+2)& (0+255),f,b
 12902  013544  0100               	movlb	0	; () banked
 12903  013546  51AE               	movf	(??___fladd+1)& (0+255),w,b
 12904  013548  0100               	movlb	0	; () banked
 12905  01354A  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 12906  01354C  0100               	movlb	0	; () banked
 12907  01354E  BFB0               	btfsc	(??___fladd+3)& (0+255),7,b
 12908  013550  D03D               	goto	l1563
 12909  013552  0100               	movlb	0	; () banked
 12910  013554  51B0               	movf	(??___fladd+3)& (0+255),w,b
 12911  013556  E105               	bnz	u10520
 12912  013558  0E1A               	movlw	26
 12913  01355A  0100               	movlb	0	; () banked
 12914  01355C  5DAF               	subwf	(??___fladd+2)& (0+255),w,b
 12915  01355E  A0D8               	btfss	status,0,c
 12916  013560  D035               	goto	l1563
 12917  013562                     u10520:
 12918                           
 12919                           ; BSR set to: 0
 12920  013562  0100               	movlb	0	; () banked
 12921  013564  51A5               	movf	___fladd@b& (0+255),w,b
 12922  013566  0100               	movlb	0	; () banked
 12923  013568  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 12924  01356A  0100               	movlb	0	; () banked
 12925  01356C  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 12926  01356E  0100               	movlb	0	; () banked
 12927  013570  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 12928  013572  B4D8               	btfsc	status,2,c
 12929  013574  D002               	goto	u10530
 12930  013576  0E01               	movlw	1
 12931  013578  D001               	goto	u10540
 12932  01357A                     u10530:
 12933  01357A  0E00               	movlw	0
 12934  01357C                     u10540:
 12935  01357C  0100               	movlb	0	; () banked
 12936  01357E  6FB8               	movwf	___fladd@grs& (0+255),b
 12937                           
 12938                           ; BSR set to: 0
 12939  013580  0E00               	movlw	0
 12940  013582  0100               	movlb	0	; () banked
 12941  013584  6FA5               	movwf	___fladd@b& (0+255),b
 12942  013586  0E00               	movlw	0
 12943  013588  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12944  01358A  0E00               	movlw	0
 12945  01358C  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12946  01358E  0E00               	movlw	0
 12947  013590  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12948                           
 12949                           ; BSR set to: 0
 12950  013592  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12951  013596  D020               	goto	l1562
 12952  013598                     l1564:
 12953                           
 12954                           ; BSR set to: 0
 12955  013598  0100               	movlb	0	; () banked
 12956  01359A  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12957  01359C  D007               	goto	l8088
 12958                           
 12959                           ; BSR set to: 0
 12960  01359E  0100               	movlb	0	; () banked
 12961  0135A0  90D8               	bcf	status,0,c
 12962  0135A2  31B8               	rrcf	___fladd@grs& (0+255),w,b
 12963  0135A4  0901               	iorlw	1
 12964  0135A6  0100               	movlb	0	; () banked
 12965  0135A8  6FB8               	movwf	___fladd@grs& (0+255),b
 12966  0135AA  D003               	goto	l8090
 12967  0135AC                     l8088:
 12968                           
 12969                           ; BSR set to: 0
 12970  0135AC  0100               	movlb	0	; () banked
 12971  0135AE  90D8               	bcf	status,0,c
 12972  0135B0  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12973  0135B2                     l8090:
 12974                           
 12975                           ; BSR set to: 0
 12976  0135B2  0100               	movlb	0	; () banked
 12977  0135B4  A1A5               	btfss	___fladd@b& (0+255),0,b
 12978  0135B6  D002               	goto	l8094
 12979                           
 12980                           ; BSR set to: 0
 12981  0135B8  0100               	movlb	0	; () banked
 12982  0135BA  8FB8               	bsf	___fladd@grs& (0+255),7,b
 12983  0135BC                     l8094:
 12984                           
 12985                           ; BSR set to: 0
 12986  0135BC  0100               	movlb	0	; () banked
 12987  0135BE  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 12988  0135C0  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 12989  0135C2  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 12990  0135C4  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 12991  0135C6  33A5               	rrcf	___fladd@b& (0+255),f,b
 12992                           
 12993                           ; BSR set to: 0
 12994  0135C8  0100               	movlb	0	; () banked
 12995  0135CA  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12996  0135CC                     l1563:
 12997                           
 12998                           ; BSR set to: 0
 12999  0135CC  0100               	movlb	0	; () banked
 13000  0135CE  51B6               	movf	___fladd@aexp& (0+255),w,b
 13001  0135D0  0100               	movlb	0	; () banked
 13002  0135D2  5DB7               	subwf	___fladd@bexp& (0+255),w,b
 13003  0135D4  A0D8               	btfss	status,0,c
 13004  0135D6  D7E0               	goto	l1564
 13005  0135D8                     l1562:
 13006                           
 13007                           ; BSR set to: 0
 13008  0135D8  0100               	movlb	0	; () banked
 13009  0135DA  BDB5               	btfsc	___fladd@signs& (0+255),6,b
 13010  0135DC  D03F               	goto	l8122
 13011                           
 13012                           ; BSR set to: 0
 13013  0135DE  0100               	movlb	0	; () banked
 13014  0135E0  51B7               	movf	___fladd@bexp& (0+255),w,b
 13015  0135E2  0100               	movlb	0	; () banked
 13016  0135E4  A4D8               	btfss	status,2,c
 13017  0135E6  D00A               	goto	l8104
 13018                           
 13019                           ; BSR set to: 0
 13020  0135E8  0E00               	movlw	0
 13021  0135EA  0100               	movlb	0	; () banked
 13022  0135EC  6FA5               	movwf	?___fladd& (0+255),b
 13023  0135EE  0E00               	movlw	0
 13024  0135F0  6FA6               	movwf	(?___fladd+1)& (0+255),b
 13025  0135F2  0E00               	movlw	0
 13026  0135F4  6FA7               	movwf	(?___fladd+2)& (0+255),b
 13027  0135F6  0E00               	movlw	0
 13028  0135F8  6FA8               	movwf	(?___fladd+3)& (0+255),b
 13029                           
 13030                           ; BSR set to: 0
 13031  0135FA  0012               	return	
 13032  0135FC                     l8104:
 13033                           
 13034                           ; BSR set to: 0
 13035  0135FC  0100               	movlb	0	; () banked
 13036  0135FE  51A9               	movf	___fladd@a& (0+255),w,b
 13037  013600  0100               	movlb	0	; () banked
 13038  013602  27A5               	addwf	___fladd@b& (0+255),f,b
 13039  013604  0100               	movlb	0	; () banked
 13040  013606  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13041  013608  0100               	movlb	0	; () banked
 13042  01360A  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13043  01360C  0100               	movlb	0	; () banked
 13044  01360E  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13045  013610  0100               	movlb	0	; () banked
 13046  013612  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13047  013614  0100               	movlb	0	; () banked
 13048  013616  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13049  013618  0100               	movlb	0	; () banked
 13050  01361A  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13051                           
 13052                           ; BSR set to: 0
 13053  01361C  0100               	movlb	0	; () banked
 13054  01361E  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13055  013620  D0CC               	goto	l8158
 13056                           
 13057                           ; BSR set to: 0
 13058  013622  0100               	movlb	0	; () banked
 13059  013624  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13060  013626  D009               	goto	l8112
 13061                           
 13062                           ; BSR set to: 0
 13063  013628  0100               	movlb	0	; () banked
 13064  01362A  90D8               	bcf	status,0,c
 13065  01362C  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13066  01362E  0100               	movlb	0	; () banked
 13067  013630  51B8               	movf	___fladd@grs& (0+255),w,b
 13068  013632  0901               	iorlw	1
 13069  013634  0100               	movlb	0	; () banked
 13070  013636  6FB8               	movwf	___fladd@grs& (0+255),b
 13071  013638  D003               	goto	l8114
 13072  01363A                     l8112:
 13073                           
 13074                           ; BSR set to: 0
 13075  01363A  0100               	movlb	0	; () banked
 13076  01363C  90D8               	bcf	status,0,c
 13077  01363E  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13078  013640                     l8114:
 13079                           
 13080                           ; BSR set to: 0
 13081  013640  0100               	movlb	0	; () banked
 13082  013642  A1A5               	btfss	___fladd@b& (0+255),0,b
 13083  013644  D002               	goto	l8118
 13084                           
 13085                           ; BSR set to: 0
 13086  013646  0100               	movlb	0	; () banked
 13087  013648  8FB8               	bsf	___fladd@grs& (0+255),7,b
 13088  01364A                     l8118:
 13089                           
 13090                           ; BSR set to: 0
 13091  01364A  0100               	movlb	0	; () banked
 13092  01364C  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 13093  01364E  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 13094  013650  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 13095  013652  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 13096  013654  33A5               	rrcf	___fladd@b& (0+255),f,b
 13097                           
 13098                           ; BSR set to: 0
 13099  013656  0100               	movlb	0	; () banked
 13100  013658  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13101                           
 13102                           ; BSR set to: 0
 13103  01365A  D0AF               	goto	l8158
 13104  01365C                     l8122:
 13105                           
 13106                           ; BSR set to: 0
 13107  01365C  0100               	movlb	0	; () banked
 13108  01365E  51A9               	movf	___fladd@a& (0+255),w,b
 13109  013660  0100               	movlb	0	; () banked
 13110  013662  5DA5               	subwf	___fladd@b& (0+255),w,b
 13111  013664  0100               	movlb	0	; () banked
 13112  013666  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13113  013668  0100               	movlb	0	; () banked
 13114  01366A  59A6               	subwfb	(___fladd@b+1)& (0+255),w,b
 13115  01366C  0100               	movlb	0	; () banked
 13116  01366E  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13117  013670  0100               	movlb	0	; () banked
 13118  013672  59A7               	subwfb	(___fladd@b+2)& (0+255),w,b
 13119  013674  0100               	movlb	0	; () banked
 13120  013676  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 13121  013678  0A80               	xorlw	128
 13122  01367A  0100               	movlb	0	; () banked
 13123  01367C  6FAD               	movwf	??___fladd& (0+255),b
 13124  01367E  0100               	movlb	0	; () banked
 13125  013680  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13126  013682  0A80               	xorlw	128
 13127  013684  0100               	movlb	0	; () banked
 13128  013686  59AD               	subwfb	??___fladd& (0+255),w,b
 13129  013688  B0D8               	btfsc	status,0,c
 13130  01368A  D050               	goto	l8132
 13131                           
 13132                           ; BSR set to: 0
 13133  01368C  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13134  013690  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13135  013694  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13136  013698  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13137  01369C  0100               	movlb	0	; () banked
 13138  01369E  1FAD               	comf	??___fladd& (0+255),f,b
 13139  0136A0  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 13140  0136A2  1FAF               	comf	(??___fladd+2)& (0+255),f,b
 13141  0136A4  1FB0               	comf	(??___fladd+3)& (0+255),f,b
 13142  0136A6  2BAD               	incf	??___fladd& (0+255),f,b
 13143  0136A8  0E00               	movlw	0
 13144  0136AA  23AE               	addwfc	(??___fladd+1)& (0+255),f,b
 13145  0136AC  23AF               	addwfc	(??___fladd+2)& (0+255),f,b
 13146  0136AE  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 13147  0136B0  0100               	movlb	0	; () banked
 13148  0136B2  51A9               	movf	___fladd@a& (0+255),w,b
 13149  0136B4  0100               	movlb	0	; () banked
 13150  0136B6  25AD               	addwf	??___fladd& (0+255),w,b
 13151  0136B8  0100               	movlb	0	; () banked
 13152  0136BA  6FB1               	movwf	(??___fladd+4)& (0+255),b
 13153  0136BC  0100               	movlb	0	; () banked
 13154  0136BE  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13155  0136C0  0100               	movlb	0	; () banked
 13156  0136C2  21AE               	addwfc	(??___fladd+1)& (0+255),w,b
 13157  0136C4  0100               	movlb	0	; () banked
 13158  0136C6  6FB2               	movwf	(??___fladd+5)& (0+255),b
 13159  0136C8  0100               	movlb	0	; () banked
 13160  0136CA  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13161  0136CC  0100               	movlb	0	; () banked
 13162  0136CE  21AF               	addwfc	(??___fladd+2)& (0+255),w,b
 13163  0136D0  0100               	movlb	0	; () banked
 13164  0136D2  6FB3               	movwf	(??___fladd+6)& (0+255),b
 13165  0136D4  0100               	movlb	0	; () banked
 13166  0136D6  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13167  0136D8  0100               	movlb	0	; () banked
 13168  0136DA  21B0               	addwfc	(??___fladd+3)& (0+255),w,b
 13169  0136DC  0100               	movlb	0	; () banked
 13170  0136DE  6FB4               	movwf	(??___fladd+7)& (0+255),b
 13171  0136E0  0EFF               	movlw	255
 13172  0136E2  0100               	movlb	0	; () banked
 13173  0136E4  25B1               	addwf	(??___fladd+4)& (0+255),w,b
 13174  0136E6  0100               	movlb	0	; () banked
 13175  0136E8  6FA5               	movwf	___fladd@b& (0+255),b
 13176  0136EA  0EFF               	movlw	255
 13177  0136EC  0100               	movlb	0	; () banked
 13178  0136EE  21B2               	addwfc	(??___fladd+5)& (0+255),w,b
 13179  0136F0  0100               	movlb	0	; () banked
 13180  0136F2  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13181  0136F4  0EFF               	movlw	255
 13182  0136F6  0100               	movlb	0	; () banked
 13183  0136F8  21B3               	addwfc	(??___fladd+6)& (0+255),w,b
 13184  0136FA  0100               	movlb	0	; () banked
 13185  0136FC  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13186  0136FE  0EFF               	movlw	255
 13187  013700  0100               	movlb	0	; () banked
 13188  013702  21B4               	addwfc	(??___fladd+7)& (0+255),w,b
 13189  013704  0100               	movlb	0	; () banked
 13190  013706  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13191  013708  0E80               	movlw	128
 13192  01370A  0100               	movlb	0	; () banked
 13193  01370C  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 13194                           
 13195                           ; BSR set to: 0
 13196  01370E  0100               	movlb	0	; () banked
 13197  013710  6DB8               	negf	___fladd@grs& (0+255),b
 13198                           
 13199                           ; BSR set to: 0
 13200  013712  0100               	movlb	0	; () banked
 13201  013714  51B8               	movf	___fladd@grs& (0+255),w,b
 13202  013716  0100               	movlb	0	; () banked
 13203  013718  A4D8               	btfss	status,2,c
 13204  01371A  D018               	goto	l1579
 13205                           
 13206                           ; BSR set to: 0
 13207  01371C  0E01               	movlw	1
 13208  01371E  0100               	movlb	0	; () banked
 13209  013720  27A5               	addwf	___fladd@b& (0+255),f,b
 13210  013722  0E00               	movlw	0
 13211  013724  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13212  013726  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13213  013728  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13214                           
 13215                           ; BSR set to: 0
 13216  01372A  D010               	goto	l1579
 13217  01372C                     l8132:
 13218                           
 13219                           ; BSR set to: 0
 13220  01372C  0100               	movlb	0	; () banked
 13221  01372E  51A9               	movf	___fladd@a& (0+255),w,b
 13222  013730  0100               	movlb	0	; () banked
 13223  013732  5FA5               	subwf	___fladd@b& (0+255),f,b
 13224  013734  0100               	movlb	0	; () banked
 13225  013736  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13226  013738  0100               	movlb	0	; () banked
 13227  01373A  5BA6               	subwfb	(___fladd@b+1)& (0+255),f,b
 13228  01373C  0100               	movlb	0	; () banked
 13229  01373E  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13230  013740  0100               	movlb	0	; () banked
 13231  013742  5BA7               	subwfb	(___fladd@b+2)& (0+255),f,b
 13232  013744  0100               	movlb	0	; () banked
 13233  013746  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13234  013748  0100               	movlb	0	; () banked
 13235  01374A  5BA8               	subwfb	(___fladd@b+3)& (0+255),f,b
 13236  01374C                     l1579:
 13237                           
 13238                           ; BSR set to: 0
 13239  01374C  0100               	movlb	0	; () banked
 13240  01374E  51A5               	movf	___fladd@b& (0+255),w,b
 13241  013750  0100               	movlb	0	; () banked
 13242  013752  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 13243  013754  0100               	movlb	0	; () banked
 13244  013756  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 13245  013758  0100               	movlb	0	; () banked
 13246  01375A  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 13247  01375C  A4D8               	btfss	status,2,c
 13248  01375E  D02A               	goto	l8156
 13249                           
 13250                           ; BSR set to: 0
 13251  013760  0100               	movlb	0	; () banked
 13252  013762  51B8               	movf	___fladd@grs& (0+255),w,b
 13253  013764  0100               	movlb	0	; () banked
 13254  013766  A4D8               	btfss	status,2,c
 13255  013768  D025               	goto	l8156
 13256                           
 13257                           ; BSR set to: 0
 13258  01376A  0E00               	movlw	0
 13259  01376C  0100               	movlb	0	; () banked
 13260  01376E  6FA5               	movwf	?___fladd& (0+255),b
 13261  013770  0E00               	movlw	0
 13262  013772  6FA6               	movwf	(?___fladd+1)& (0+255),b
 13263  013774  0E00               	movlw	0
 13264  013776  6FA7               	movwf	(?___fladd+2)& (0+255),b
 13265  013778  0E00               	movlw	0
 13266  01377A  6FA8               	movwf	(?___fladd+3)& (0+255),b
 13267                           
 13268                           ; BSR set to: 0
 13269  01377C  0012               	return	
 13270  01377E                     l8140:
 13271                           
 13272                           ; BSR set to: 0
 13273  01377E  0100               	movlb	0	; () banked
 13274  013780  90D8               	bcf	status,0,c
 13275  013782  37A5               	rlcf	___fladd@b& (0+255),f,b
 13276  013784  37A6               	rlcf	(___fladd@b+1)& (0+255),f,b
 13277  013786  37A7               	rlcf	(___fladd@b+2)& (0+255),f,b
 13278  013788  37A8               	rlcf	(___fladd@b+3)& (0+255),f,b
 13279                           
 13280                           ; BSR set to: 0
 13281  01378A  0100               	movlb	0	; () banked
 13282  01378C  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13283  01378E  D002               	goto	l8146
 13284                           
 13285                           ; BSR set to: 0
 13286  013790  0100               	movlb	0	; () banked
 13287  013792  81A5               	bsf	___fladd@b& (0+255),0,b
 13288  013794                     l8146:
 13289                           
 13290                           ; BSR set to: 0
 13291  013794  0100               	movlb	0	; () banked
 13292  013796  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13293  013798  D003               	goto	l8150
 13294                           
 13295                           ; BSR set to: 0
 13296  01379A  80D8               	bsf	status,0,c
 13297  01379C  0100               	movlb	0	; () banked
 13298  01379E  D002               	goto	L12
 13299  0137A0                     l8150:
 13300                           
 13301                           ; BSR set to: 0
 13302  0137A0  0100               	movlb	0	; () banked
 13303  0137A2  90D8               	bcf	status,0,c
 13304  0137A4                     L12:
 13305  0137A4  37B8               	rlcf	___fladd@grs& (0+255),f,b
 13306                           
 13307                           ; BSR set to: 0
 13308                           
 13309                           ; BSR set to: 0
 13310  0137A6  0100               	movlb	0	; () banked
 13311  0137A8  51B7               	movf	___fladd@bexp& (0+255),w,b
 13312  0137AA  0100               	movlb	0	; () banked
 13313  0137AC  B4D8               	btfsc	status,2,c
 13314  0137AE  D002               	goto	l8156
 13315                           
 13316                           ; BSR set to: 0
 13317  0137B0  0100               	movlb	0	; () banked
 13318  0137B2  07B7               	decf	___fladd@bexp& (0+255),f,b
 13319  0137B4                     l8156:
 13320                           
 13321                           ; BSR set to: 0
 13322  0137B4  0100               	movlb	0	; () banked
 13323  0137B6  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 13324  0137B8  D7E2               	goto	l8140
 13325  0137BA                     l8158:
 13326                           
 13327                           ; BSR set to: 0
 13328  0137BA  0E00               	movlw	0
 13329  0137BC  0100               	movlb	0	; () banked
 13330  0137BE  6FB6               	movwf	___fladd@aexp& (0+255),b
 13331                           
 13332                           ; BSR set to: 0
 13333  0137C0  0100               	movlb	0	; () banked
 13334  0137C2  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13335  0137C4  D00D               	goto	l1588
 13336                           
 13337                           ; BSR set to: 0
 13338  0137C6  C0B8  F0AD         	movff	___fladd@grs,??___fladd
 13339  0137CA  0E7F               	movlw	127
 13340  0137CC  0100               	movlb	0	; () banked
 13341  0137CE  17AD               	andwf	??___fladd& (0+255),f,b
 13342  0137D0  A4D8               	btfss	status,2,c
 13343  0137D2  D003               	goto	l8166
 13344                           
 13345                           ; BSR set to: 0
 13346                           
 13347                           ; BSR set to: 0
 13348  0137D4  0100               	movlb	0	; () banked
 13349  0137D6  A1A5               	btfss	___fladd@b& (0+255),0,b
 13350  0137D8  D003               	goto	l1588
 13351  0137DA                     l8166:
 13352                           
 13353                           ; BSR set to: 0
 13354  0137DA  0E01               	movlw	1
 13355  0137DC  0100               	movlb	0	; () banked
 13356  0137DE  6FB6               	movwf	___fladd@aexp& (0+255),b
 13357  0137E0                     l1588:
 13358                           
 13359                           ; BSR set to: 0
 13360  0137E0  0100               	movlb	0	; () banked
 13361  0137E2  51B6               	movf	___fladd@aexp& (0+255),w,b
 13362  0137E4  0100               	movlb	0	; () banked
 13363  0137E6  B4D8               	btfsc	status,2,c
 13364  0137E8  D026               	goto	l8176
 13365                           
 13366                           ; BSR set to: 0
 13367  0137EA  0E01               	movlw	1
 13368  0137EC  0100               	movlb	0	; () banked
 13369  0137EE  27A5               	addwf	___fladd@b& (0+255),f,b
 13370  0137F0  0E00               	movlw	0
 13371  0137F2  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13372  0137F4  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13373  0137F6  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13374                           
 13375                           ; BSR set to: 0
 13376  0137F8  0100               	movlb	0	; () banked
 13377  0137FA  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13378  0137FC  D01C               	goto	l8176
 13379                           
 13380                           ; BSR set to: 0
 13381  0137FE  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13382  013802  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13383  013806  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13384  01380A  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13385  01380E  0100               	movlb	0	; () banked
 13386  013810  35B0               	rlcf	(??___fladd+3)& (0+255),w,b
 13387  013812  33B0               	rrcf	(??___fladd+3)& (0+255),f,b
 13388  013814  33AF               	rrcf	(??___fladd+2)& (0+255),f,b
 13389  013816  33AE               	rrcf	(??___fladd+1)& (0+255),f,b
 13390  013818  33AD               	rrcf	??___fladd& (0+255),f,b
 13391  01381A  C0AD  F0A5         	movff	??___fladd,___fladd@b
 13392  01381E  C0AE  F0A6         	movff	??___fladd+1,___fladd@b+1
 13393  013822  C0AF  F0A7         	movff	??___fladd+2,___fladd@b+2
 13394  013826  C0B0  F0A8         	movff	??___fladd+3,___fladd@b+3
 13395  01382A  0100               	movlb	0	; () banked
 13396  01382C  29B7               	incf	___fladd@bexp& (0+255),w,b
 13397  01382E  B4D8               	btfsc	status,2,c
 13398  013830  D002               	goto	l8176
 13399                           
 13400                           ; BSR set to: 0
 13401  013832  0100               	movlb	0	; () banked
 13402  013834  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13403  013836                     l8176:
 13404                           
 13405                           ; BSR set to: 0
 13406  013836  0100               	movlb	0	; () banked
 13407  013838  29B7               	incf	___fladd@bexp& (0+255),w,b
 13408  01383A  B4D8               	btfsc	status,2,c
 13409  01383C  D005               	goto	l8180
 13410                           
 13411                           ; BSR set to: 0
 13412  01383E  0100               	movlb	0	; () banked
 13413  013840  51B7               	movf	___fladd@bexp& (0+255),w,b
 13414  013842  0100               	movlb	0	; () banked
 13415  013844  A4D8               	btfss	status,2,c
 13416  013846  D011               	goto	l8184
 13417  013848                     l8180:
 13418                           
 13419                           ; BSR set to: 0
 13420  013848  0E00               	movlw	0
 13421  01384A  0100               	movlb	0	; () banked
 13422  01384C  6FA5               	movwf	___fladd@b& (0+255),b
 13423  01384E  0E00               	movlw	0
 13424  013850  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13425  013852  0E00               	movlw	0
 13426  013854  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13427  013856  0E00               	movlw	0
 13428  013858  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13429  01385A  0100               	movlb	0	; () banked
 13430  01385C  51B7               	movf	___fladd@bexp& (0+255),w,b
 13431  01385E  0100               	movlb	0	; () banked
 13432  013860  A4D8               	btfss	status,2,c
 13433  013862  D003               	goto	l8184
 13434                           
 13435                           ; BSR set to: 0
 13436  013864  0E00               	movlw	0
 13437  013866  0100               	movlb	0	; () banked
 13438  013868  6FB5               	movwf	___fladd@signs& (0+255),b
 13439  01386A                     l8184:
 13440                           
 13441                           ; BSR set to: 0
 13442  01386A  0100               	movlb	0	; () banked
 13443  01386C  A1B7               	btfss	___fladd@bexp& (0+255),0,b
 13444  01386E  D003               	goto	l8188
 13445                           
 13446                           ; BSR set to: 0
 13447  013870  0100               	movlb	0	; () banked
 13448  013872  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 13449  013874  D002               	goto	l8190
 13450  013876                     l8188:
 13451                           
 13452                           ; BSR set to: 0
 13453  013876  0100               	movlb	0	; () banked
 13454  013878  9FA7               	bcf	(___fladd@b+2)& (0+255),7,b
 13455  01387A                     l8190:
 13456                           
 13457                           ; BSR set to: 0
 13458  01387A  0100               	movlb	0	; () banked
 13459  01387C  90D8               	bcf	status,0,c
 13460  01387E  31B7               	rrcf	___fladd@bexp& (0+255),w,b
 13461  013880  0100               	movlb	0	; () banked
 13462  013882  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13463                           
 13464                           ; BSR set to: 0
 13465  013884  0100               	movlb	0	; () banked
 13466  013886  AFB5               	btfss	___fladd@signs& (0+255),7,b
 13467  013888  D002               	goto	l8196
 13468                           
 13469                           ; BSR set to: 0
 13470  01388A  0100               	movlb	0	; () banked
 13471  01388C  8FA8               	bsf	(___fladd@b+3)& (0+255),7,b
 13472  01388E                     l8196:
 13473                           
 13474                           ; BSR set to: 0
 13475  01388E  C0A5  F0A5         	movff	___fladd@b,?___fladd
 13476  013892  C0A6  F0A6         	movff	___fladd@b+1,?___fladd+1
 13477  013896  C0A7  F0A7         	movff	___fladd@b+2,?___fladd+2
 13478  01389A  C0A8  F0A8         	movff	___fladd@b+3,?___fladd+3
 13479  01389E  0012               	return	
 13480  0138A0                     __end_of___fladd:
 13481                           	opt stack 0
 13482                           tblptru	equ	0xFF8
 13483                           tblptrh	equ	0xFF7
 13484                           tblptrl	equ	0xFF6
 13485                           tablat	equ	0xFF5
 13486                           prodh	equ	0xFF4
 13487                           prodl	equ	0xFF3
 13488                           intcon	equ	0xFF2
 13489                           postinc0	equ	0xFEE
 13490                           wreg	equ	0xFE8
 13491                           indf2	equ	0xFDF
 13492                           postinc2	equ	0xFDE
 13493                           fsr2h	equ	0xFDA
 13494                           fsr2l	equ	0xFD9
 13495                           status	equ	0xFD8
 13496                           
 13497 ;; *************** function ___flneg *****************
 13498 ;; Defined at:
 13499 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  f1              4   56[BANK0 ] unsigned char 
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  4   56[BANK0 ] unsigned char 
 13506 ;; Registers used:
 13507 ;;		wreg, status,2, status,0
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;Total ram usage:        4 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    3
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_main
 13524 ;;		_sprintf
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528                           	psect	text25
 13529  0163BA                     __ptext25:
 13530                           	opt stack 0
 13531  0163BA                     ___flneg:
 13532                           	opt stack 27
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;incstack = 0
 13536  0163BA  0100               	movlb	0	; () banked
 13537  0163BC  5198               	movf	___flneg@f1& (0+255),w,b
 13538  0163BE  0100               	movlb	0	; () banked
 13539  0163C0  1199               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13540  0163C2  0100               	movlb	0	; () banked
 13541  0163C4  119A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13542  0163C6  0100               	movlb	0	; () banked
 13543  0163C8  119B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13544  0163CA  B4D8               	btfsc	status,2,c
 13545  0163CC  D009               	goto	l8662
 13546                           
 13547                           ; BSR set to: 0
 13548  0163CE  0E00               	movlw	0
 13549  0163D0  0100               	movlb	0	; () banked
 13550  0163D2  1B98               	xorwf	___flneg@f1& (0+255),f,b
 13551  0163D4  0E00               	movlw	0
 13552  0163D6  1B99               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13553  0163D8  0E00               	movlw	0
 13554  0163DA  1B9A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13555  0163DC  0E80               	movlw	128
 13556  0163DE  1B9B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13557  0163E0                     l8662:
 13558                           
 13559                           ; BSR set to: 0
 13560  0163E0  C098  F098         	movff	___flneg@f1,?___flneg
 13561  0163E4  C099  F099         	movff	___flneg@f1+1,?___flneg+1
 13562  0163E8  C09A  F09A         	movff	___flneg@f1+2,?___flneg+2
 13563  0163EC  C09B  F09B         	movff	___flneg@f1+3,?___flneg+3
 13564  0163F0  0012               	return	
 13565  0163F2                     __end_of___flneg:
 13566                           	opt stack 0
 13567                           tblptru	equ	0xFF8
 13568                           tblptrh	equ	0xFF7
 13569                           tblptrl	equ	0xFF6
 13570                           tablat	equ	0xFF5
 13571                           prodh	equ	0xFF4
 13572                           prodl	equ	0xFF3
 13573                           intcon	equ	0xFF2
 13574                           postinc0	equ	0xFEE
 13575                           wreg	equ	0xFE8
 13576                           indf2	equ	0xFDF
 13577                           postinc2	equ	0xFDE
 13578                           fsr2h	equ	0xFDA
 13579                           fsr2l	equ	0xFD9
 13580                           status	equ	0xFD8
 13581                           
 13582 ;; *************** function ___flge *****************
 13583 ;; Defined at:
 13584 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  ff1             4   17[BANK0 ] unsigned char 
 13587 ;;  ff2             4   21[BANK0 ] unsigned char 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;		None               void
 13592 ;; Registers used:
 13593 ;;		wreg, status,2, status,0
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13599 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13602 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13603 ;;Total ram usage:       12 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; Hardware stack levels required when called:    3
 13606 ;; This function calls:
 13607 ;;		Nothing
 13608 ;; This function is called by:
 13609 ;;		_sprintf
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           	psect	text26
 13614  0152AA                     __ptext26:
 13615                           	opt stack 0
 13616  0152AA                     ___flge:
 13617                           	opt stack 25
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;incstack = 0
 13621  0152AA  0E00               	movlw	0
 13622  0152AC  0100               	movlb	0	; () banked
 13623  0152AE  1571               	andwf	___flge@ff1& (0+255),w,b
 13624  0152B0  0100               	movlb	0	; () banked
 13625  0152B2  6F79               	movwf	??___flge& (0+255),b
 13626  0152B4  0E00               	movlw	0
 13627  0152B6  0100               	movlb	0	; () banked
 13628  0152B8  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
 13629  0152BA  0100               	movlb	0	; () banked
 13630  0152BC  6F7A               	movwf	(??___flge+1)& (0+255),b
 13631  0152BE  0E80               	movlw	128
 13632  0152C0  0100               	movlb	0	; () banked
 13633  0152C2  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
 13634  0152C4  0100               	movlb	0	; () banked
 13635  0152C6  6F7B               	movwf	(??___flge+2)& (0+255),b
 13636  0152C8  0E7F               	movlw	127
 13637  0152CA  0100               	movlb	0	; () banked
 13638  0152CC  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
 13639  0152CE  0100               	movlb	0	; () banked
 13640  0152D0  6F7C               	movwf	(??___flge+3)& (0+255),b
 13641  0152D2  0100               	movlb	0	; () banked
 13642  0152D4  5179               	movf	??___flge& (0+255),w,b
 13643  0152D6  0100               	movlb	0	; () banked
 13644  0152D8  117A               	iorwf	(??___flge+1)& (0+255),w,b
 13645  0152DA  0100               	movlb	0	; () banked
 13646  0152DC  117B               	iorwf	(??___flge+2)& (0+255),w,b
 13647  0152DE  0100               	movlb	0	; () banked
 13648  0152E0  117C               	iorwf	(??___flge+3)& (0+255),w,b
 13649  0152E2  A4D8               	btfss	status,2,c
 13650  0152E4  D009               	goto	l8640
 13651                           
 13652                           ; BSR set to: 0
 13653  0152E6  0E00               	movlw	0
 13654  0152E8  0100               	movlb	0	; () banked
 13655  0152EA  6F71               	movwf	___flge@ff1& (0+255),b
 13656  0152EC  0E00               	movlw	0
 13657  0152EE  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 13658  0152F0  0E00               	movlw	0
 13659  0152F2  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 13660  0152F4  0E00               	movlw	0
 13661  0152F6  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 13662  0152F8                     l8640:
 13663                           
 13664                           ; BSR set to: 0
 13665  0152F8  0E00               	movlw	0
 13666  0152FA  0100               	movlb	0	; () banked
 13667  0152FC  1575               	andwf	___flge@ff2& (0+255),w,b
 13668  0152FE  0100               	movlb	0	; () banked
 13669  015300  6F79               	movwf	??___flge& (0+255),b
 13670  015302  0E00               	movlw	0
 13671  015304  0100               	movlb	0	; () banked
 13672  015306  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
 13673  015308  0100               	movlb	0	; () banked
 13674  01530A  6F7A               	movwf	(??___flge+1)& (0+255),b
 13675  01530C  0E80               	movlw	128
 13676  01530E  0100               	movlb	0	; () banked
 13677  015310  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
 13678  015312  0100               	movlb	0	; () banked
 13679  015314  6F7B               	movwf	(??___flge+2)& (0+255),b
 13680  015316  0E7F               	movlw	127
 13681  015318  0100               	movlb	0	; () banked
 13682  01531A  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
 13683  01531C  0100               	movlb	0	; () banked
 13684  01531E  6F7C               	movwf	(??___flge+3)& (0+255),b
 13685  015320  0100               	movlb	0	; () banked
 13686  015322  5179               	movf	??___flge& (0+255),w,b
 13687  015324  0100               	movlb	0	; () banked
 13688  015326  117A               	iorwf	(??___flge+1)& (0+255),w,b
 13689  015328  0100               	movlb	0	; () banked
 13690  01532A  117B               	iorwf	(??___flge+2)& (0+255),w,b
 13691  01532C  0100               	movlb	0	; () banked
 13692  01532E  117C               	iorwf	(??___flge+3)& (0+255),w,b
 13693  015330  A4D8               	btfss	status,2,c
 13694  015332  D009               	goto	l8644
 13695                           
 13696                           ; BSR set to: 0
 13697  015334  0E00               	movlw	0
 13698  015336  0100               	movlb	0	; () banked
 13699  015338  6F75               	movwf	___flge@ff2& (0+255),b
 13700  01533A  0E00               	movlw	0
 13701  01533C  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 13702  01533E  0E00               	movlw	0
 13703  015340  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 13704  015342  0E00               	movlw	0
 13705  015344  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 13706  015346                     l8644:
 13707                           
 13708                           ; BSR set to: 0
 13709  015346  0100               	movlb	0	; () banked
 13710  015348  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
 13711  01534A  D026               	goto	l8648
 13712                           
 13713                           ; BSR set to: 0
 13714  01534C  C071  F079         	movff	___flge@ff1,??___flge
 13715  015350  C072  F07A         	movff	___flge@ff1+1,??___flge+1
 13716  015354  C073  F07B         	movff	___flge@ff1+2,??___flge+2
 13717  015358  C074  F07C         	movff	___flge@ff1+3,??___flge+3
 13718  01535C  0100               	movlb	0	; () banked
 13719  01535E  1F79               	comf	??___flge& (0+255),f,b
 13720  015360  1F7A               	comf	(??___flge+1)& (0+255),f,b
 13721  015362  1F7B               	comf	(??___flge+2)& (0+255),f,b
 13722  015364  1F7C               	comf	(??___flge+3)& (0+255),f,b
 13723  015366  2B79               	incf	??___flge& (0+255),f,b
 13724  015368  0E00               	movlw	0
 13725  01536A  237A               	addwfc	(??___flge+1)& (0+255),f,b
 13726  01536C  237B               	addwfc	(??___flge+2)& (0+255),f,b
 13727  01536E  237C               	addwfc	(??___flge+3)& (0+255),f,b
 13728  015370  0E00               	movlw	0
 13729  015372  0100               	movlb	0	; () banked
 13730  015374  2579               	addwf	??___flge& (0+255),w,b
 13731  015376  0100               	movlb	0	; () banked
 13732  015378  6F71               	movwf	___flge@ff1& (0+255),b
 13733  01537A  0E00               	movlw	0
 13734  01537C  0100               	movlb	0	; () banked
 13735  01537E  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13736  015380  0100               	movlb	0	; () banked
 13737  015382  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 13738  015384  0E00               	movlw	0
 13739  015386  0100               	movlb	0	; () banked
 13740  015388  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13741  01538A  0100               	movlb	0	; () banked
 13742  01538C  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 13743  01538E  0E80               	movlw	128
 13744  015390  0100               	movlb	0	; () banked
 13745  015392  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13746  015394  0100               	movlb	0	; () banked
 13747  015396  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 13748  015398                     l8648:
 13749                           
 13750                           ; BSR set to: 0
 13751  015398  0100               	movlb	0	; () banked
 13752  01539A  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
 13753  01539C  D026               	goto	l1285
 13754                           
 13755                           ; BSR set to: 0
 13756  01539E  C075  F079         	movff	___flge@ff2,??___flge
 13757  0153A2  C076  F07A         	movff	___flge@ff2+1,??___flge+1
 13758  0153A6  C077  F07B         	movff	___flge@ff2+2,??___flge+2
 13759  0153AA  C078  F07C         	movff	___flge@ff2+3,??___flge+3
 13760  0153AE  0100               	movlb	0	; () banked
 13761  0153B0  1F79               	comf	??___flge& (0+255),f,b
 13762  0153B2  1F7A               	comf	(??___flge+1)& (0+255),f,b
 13763  0153B4  1F7B               	comf	(??___flge+2)& (0+255),f,b
 13764  0153B6  1F7C               	comf	(??___flge+3)& (0+255),f,b
 13765  0153B8  2B79               	incf	??___flge& (0+255),f,b
 13766  0153BA  0E00               	movlw	0
 13767  0153BC  237A               	addwfc	(??___flge+1)& (0+255),f,b
 13768  0153BE  237B               	addwfc	(??___flge+2)& (0+255),f,b
 13769  0153C0  237C               	addwfc	(??___flge+3)& (0+255),f,b
 13770  0153C2  0E00               	movlw	0
 13771  0153C4  0100               	movlb	0	; () banked
 13772  0153C6  2579               	addwf	??___flge& (0+255),w,b
 13773  0153C8  0100               	movlb	0	; () banked
 13774  0153CA  6F75               	movwf	___flge@ff2& (0+255),b
 13775  0153CC  0E00               	movlw	0
 13776  0153CE  0100               	movlb	0	; () banked
 13777  0153D0  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13778  0153D2  0100               	movlb	0	; () banked
 13779  0153D4  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 13780  0153D6  0E00               	movlw	0
 13781  0153D8  0100               	movlb	0	; () banked
 13782  0153DA  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13783  0153DC  0100               	movlb	0	; () banked
 13784  0153DE  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 13785  0153E0  0E80               	movlw	128
 13786  0153E2  0100               	movlb	0	; () banked
 13787  0153E4  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13788  0153E6  0100               	movlb	0	; () banked
 13789  0153E8  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 13790  0153EA                     l1285:
 13791                           
 13792                           ; BSR set to: 0
 13793  0153EA  0E00               	movlw	0
 13794  0153EC  0100               	movlb	0	; () banked
 13795  0153EE  1B71               	xorwf	___flge@ff1& (0+255),f,b
 13796  0153F0  0E00               	movlw	0
 13797  0153F2  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13798  0153F4  0E00               	movlw	0
 13799  0153F6  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13800  0153F8  0E80               	movlw	128
 13801  0153FA  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13802  0153FC  0E00               	movlw	0
 13803  0153FE  0100               	movlb	0	; () banked
 13804  015400  1B75               	xorwf	___flge@ff2& (0+255),f,b
 13805  015402  0E00               	movlw	0
 13806  015404  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13807  015406  0E00               	movlw	0
 13808  015408  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13809  01540A  0E80               	movlw	128
 13810  01540C  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13811  01540E  0100               	movlb	0	; () banked
 13812  015410  5175               	movf	___flge@ff2& (0+255),w,b
 13813  015412  0100               	movlb	0	; () banked
 13814  015414  5D71               	subwf	___flge@ff1& (0+255),w,b
 13815  015416  0100               	movlb	0	; () banked
 13816  015418  5176               	movf	(___flge@ff2+1)& (0+255),w,b
 13817  01541A  0100               	movlb	0	; () banked
 13818  01541C  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13819  01541E  0100               	movlb	0	; () banked
 13820  015420  5177               	movf	(___flge@ff2+2)& (0+255),w,b
 13821  015422  0100               	movlb	0	; () banked
 13822  015424  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13823  015426  0100               	movlb	0	; () banked
 13824  015428  5178               	movf	(___flge@ff2+3)& (0+255),w,b
 13825  01542A  0100               	movlb	0	; () banked
 13826  01542C  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13827  01542E  B0D8               	btfsc	status,0,c
 13828  015430  D002               	goto	l8654
 13829                           
 13830                           ; BSR set to: 0
 13831  015432  90D8               	bcf	status,0,c
 13832  015434  0012               	return	
 13833  015436                     l8654:
 13834                           
 13835                           ; BSR set to: 0
 13836  015436  80D8               	bsf	status,0,c
 13837                           
 13838                           ; BSR set to: 0
 13839  015438  0012               	return	
 13840  01543A                     __end_of___flge:
 13841                           	opt stack 0
 13842                           tblptru	equ	0xFF8
 13843                           tblptrh	equ	0xFF7
 13844                           tblptrl	equ	0xFF6
 13845                           tablat	equ	0xFF5
 13846                           prodh	equ	0xFF4
 13847                           prodl	equ	0xFF3
 13848                           intcon	equ	0xFF2
 13849                           postinc0	equ	0xFEE
 13850                           wreg	equ	0xFE8
 13851                           indf2	equ	0xFDF
 13852                           postinc2	equ	0xFDE
 13853                           fsr2h	equ	0xFDA
 13854                           fsr2l	equ	0xFD9
 13855                           status	equ	0xFD8
 13856                           
 13857 ;; *************** function ___fldiv *****************
 13858 ;; Defined at:
 13859 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  b               4   31[BANK0 ] unsigned char 
 13862 ;;  a               4   35[BANK0 ] unsigned char 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  grs             4   50[BANK0 ] unsigned long 
 13865 ;;  rem             4   44[BANK0 ] unsigned long 
 13866 ;;  new_exp         2   48[BANK0 ] int 
 13867 ;;  aexp            1   55[BANK0 ] unsigned char 
 13868 ;;  bexp            1   54[BANK0 ] unsigned char 
 13869 ;;  sign            1   43[BANK0 ] unsigned char 
 13870 ;; Return value:  Size  Location     Type
 13871 ;;                  4   31[BANK0 ] unsigned char 
 13872 ;; Registers used:
 13873 ;;		wreg, status,2, status,0
 13874 ;; Tracked objects:
 13875 ;;		On entry : 0/0
 13876 ;;		On exit  : 0/0
 13877 ;;		Unchanged: 0/0
 13878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13879 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;Total ram usage:       25 bytes
 13884 ;; Hardware stack levels used:    1
 13885 ;; Hardware stack levels required when called:    3
 13886 ;; This function calls:
 13887 ;;		Nothing
 13888 ;; This function is called by:
 13889 ;;		_LCD_Handler
 13890 ;; This function uses a non-reentrant model
 13891 ;;
 13892                           
 13893                           	psect	text27
 13894  013D46                     __ptext27:
 13895                           	opt stack 0
 13896  013D46                     ___fldiv:
 13897                           	opt stack 26
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;incstack = 0
 13901  013D46  0100               	movlb	0	; () banked
 13902  013D48  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13903  013D4A  0B80               	andlw	128
 13904  013D4C  0100               	movlb	0	; () banked
 13905  013D4E  6F8B               	movwf	___fldiv@sign& (0+255),b
 13906  013D50  0100               	movlb	0	; () banked
 13907  013D52  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13908  013D54  2582               	addwf	(___fldiv@b+3)& (0+255),w,b
 13909  013D56  0100               	movlb	0	; () banked
 13910  013D58  6F96               	movwf	___fldiv@bexp& (0+255),b
 13911                           
 13912                           ; BSR set to: 0
 13913  013D5A  0100               	movlb	0	; () banked
 13914  013D5C  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 13915  013D5E  D002               	goto	l6790
 13916                           
 13917                           ; BSR set to: 0
 13918  013D60  0100               	movlb	0	; () banked
 13919  013D62  8196               	bsf	___fldiv@bexp& (0+255),0,b
 13920  013D64                     l6790:
 13921                           
 13922                           ; BSR set to: 0
 13923  013D64  0100               	movlb	0	; () banked
 13924  013D66  5196               	movf	___fldiv@bexp& (0+255),w,b
 13925  013D68  0100               	movlb	0	; () banked
 13926  013D6A  B4D8               	btfsc	status,2,c
 13927  013D6C  D012               	goto	l6800
 13928                           
 13929                           ; BSR set to: 0
 13930  013D6E  0100               	movlb	0	; () banked
 13931  013D70  2996               	incf	___fldiv@bexp& (0+255),w,b
 13932  013D72  A4D8               	btfss	status,2,c
 13933  013D74  D009               	goto	l6796
 13934                           
 13935                           ; BSR set to: 0
 13936  013D76  0E00               	movlw	0
 13937  013D78  0100               	movlb	0	; () banked
 13938  013D7A  6F7F               	movwf	___fldiv@b& (0+255),b
 13939  013D7C  0E00               	movlw	0
 13940  013D7E  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13941  013D80  0E00               	movlw	0
 13942  013D82  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13943  013D84  0E00               	movlw	0
 13944  013D86  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13945  013D88                     l6796:
 13946                           
 13947                           ; BSR set to: 0
 13948  013D88  0100               	movlb	0	; () banked
 13949  013D8A  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 13950                           
 13951                           ; BSR set to: 0
 13952  013D8C  0E00               	movlw	0
 13953  013D8E  0100               	movlb	0	; () banked
 13954  013D90  D008               	goto	L13
 13955  013D92                     l6800:
 13956                           
 13957                           ; BSR set to: 0
 13958  013D92  0E00               	movlw	0
 13959  013D94  0100               	movlb	0	; () banked
 13960  013D96  6F7F               	movwf	___fldiv@b& (0+255),b
 13961  013D98  0E00               	movlw	0
 13962  013D9A  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13963  013D9C  0E00               	movlw	0
 13964  013D9E  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13965  013DA0  0E00               	movlw	0
 13966  013DA2                     L13:
 13967  013DA2  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13968                           
 13969                           ; BSR set to: 0
 13970                           
 13971                           ; BSR set to: 0
 13972  013DA4  0100               	movlb	0	; () banked
 13973  013DA6  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13974  013DA8  0B80               	andlw	128
 13975  013DAA  0100               	movlb	0	; () banked
 13976  013DAC  1B8B               	xorwf	___fldiv@sign& (0+255),f,b
 13977                           
 13978                           ; BSR set to: 0
 13979  013DAE  0100               	movlb	0	; () banked
 13980  013DB0  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13981  013DB2  2586               	addwf	(___fldiv@a+3)& (0+255),w,b
 13982  013DB4  0100               	movlb	0	; () banked
 13983  013DB6  6F97               	movwf	___fldiv@aexp& (0+255),b
 13984                           
 13985                           ; BSR set to: 0
 13986  013DB8  0100               	movlb	0	; () banked
 13987  013DBA  AF85               	btfss	(___fldiv@a+2)& (0+255),7,b
 13988  013DBC  D002               	goto	l6810
 13989                           
 13990                           ; BSR set to: 0
 13991  013DBE  0100               	movlb	0	; () banked
 13992  013DC0  8197               	bsf	___fldiv@aexp& (0+255),0,b
 13993  013DC2                     l6810:
 13994                           
 13995                           ; BSR set to: 0
 13996  013DC2  0100               	movlb	0	; () banked
 13997  013DC4  5197               	movf	___fldiv@aexp& (0+255),w,b
 13998  013DC6  0100               	movlb	0	; () banked
 13999  013DC8  B4D8               	btfsc	status,2,c
 14000  013DCA  D012               	goto	l6820
 14001                           
 14002                           ; BSR set to: 0
 14003  013DCC  0100               	movlb	0	; () banked
 14004  013DCE  2997               	incf	___fldiv@aexp& (0+255),w,b
 14005  013DD0  A4D8               	btfss	status,2,c
 14006  013DD2  D009               	goto	l6816
 14007                           
 14008                           ; BSR set to: 0
 14009  013DD4  0E00               	movlw	0
 14010  013DD6  0100               	movlb	0	; () banked
 14011  013DD8  6F83               	movwf	___fldiv@a& (0+255),b
 14012  013DDA  0E00               	movlw	0
 14013  013DDC  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 14014  013DDE  0E00               	movlw	0
 14015  013DE0  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 14016  013DE2  0E00               	movlw	0
 14017  013DE4  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 14018  013DE6                     l6816:
 14019                           
 14020                           ; BSR set to: 0
 14021  013DE6  0100               	movlb	0	; () banked
 14022  013DE8  8F85               	bsf	(___fldiv@a+2)& (0+255),7,b
 14023                           
 14024                           ; BSR set to: 0
 14025  013DEA  0E00               	movlw	0
 14026  013DEC  0100               	movlb	0	; () banked
 14027  013DEE  D008               	goto	L14
 14028  013DF0                     l6820:
 14029                           
 14030                           ; BSR set to: 0
 14031  013DF0  0E00               	movlw	0
 14032  013DF2  0100               	movlb	0	; () banked
 14033  013DF4  6F83               	movwf	___fldiv@a& (0+255),b
 14034  013DF6  0E00               	movlw	0
 14035  013DF8  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 14036  013DFA  0E00               	movlw	0
 14037  013DFC  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 14038  013DFE  0E00               	movlw	0
 14039  013E00                     L14:
 14040  013E00  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 14041                           
 14042                           ; BSR set to: 0
 14043                           
 14044                           ; BSR set to: 0
 14045  013E02  0100               	movlb	0	; () banked
 14046  013E04  5183               	movf	___fldiv@a& (0+255),w,b
 14047  013E06  0100               	movlb	0	; () banked
 14048  013E08  1184               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14049  013E0A  0100               	movlb	0	; () banked
 14050  013E0C  1185               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14051  013E0E  0100               	movlb	0	; () banked
 14052  013E10  1186               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14053  013E12  A4D8               	btfss	status,2,c
 14054  013E14  D017               	goto	l6832
 14055                           
 14056                           ; BSR set to: 0
 14057  013E16  0E00               	movlw	0
 14058  013E18  0100               	movlb	0	; () banked
 14059  013E1A  6F7F               	movwf	___fldiv@b& (0+255),b
 14060  013E1C  0E00               	movlw	0
 14061  013E1E  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14062  013E20  0E00               	movlw	0
 14063  013E22  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14064  013E24  0E00               	movlw	0
 14065  013E26  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14066                           
 14067                           ; BSR set to: 0
 14068  013E28  0100               	movlb	0	; () banked
 14069  013E2A  0E80               	movlw	128
 14070  013E2C  1381               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14071  013E2E  0E7F               	movlw	127
 14072  013E30  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14073                           
 14074                           ; BSR set to: 0
 14075  013E32  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14076  013E36  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14077  013E3A  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14078  013E3E  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14079                           
 14080                           ; BSR set to: 0
 14081  013E42  0012               	return	
 14082  013E44                     l6832:
 14083                           
 14084                           ; BSR set to: 0
 14085  013E44  0100               	movlb	0	; () banked
 14086  013E46  5196               	movf	___fldiv@bexp& (0+255),w,b
 14087  013E48  0100               	movlb	0	; () banked
 14088  013E4A  A4D8               	btfss	status,2,c
 14089  013E4C  D012               	goto	l6840
 14090                           
 14091                           ; BSR set to: 0
 14092  013E4E  0E00               	movlw	0
 14093  013E50  0100               	movlb	0	; () banked
 14094  013E52  6F7F               	movwf	___fldiv@b& (0+255),b
 14095  013E54  0E00               	movlw	0
 14096  013E56  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14097  013E58  0E00               	movlw	0
 14098  013E5A  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14099  013E5C  0E00               	movlw	0
 14100  013E5E  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14101                           
 14102                           ; BSR set to: 0
 14103  013E60  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14104  013E64  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14105  013E68  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14106  013E6C  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14107                           
 14108                           ; BSR set to: 0
 14109  013E70  0012               	return	
 14110  013E72                     l6840:
 14111                           
 14112                           ; BSR set to: 0
 14113  013E72  0100               	movlb	0	; () banked
 14114  013E74  5197               	movf	___fldiv@aexp& (0+255),w,b
 14115  013E76  0100               	movlb	0	; () banked
 14116  013E78  6F87               	movwf	??___fldiv& (0+255),b
 14117  013E7A  6B88               	clrf	(??___fldiv+1)& (0+255),b
 14118  013E7C  0100               	movlb	0	; () banked
 14119  013E7E  1F87               	comf	??___fldiv& (0+255),f,b
 14120  013E80  1F88               	comf	(??___fldiv+1)& (0+255),f,b
 14121  013E82  4B87               	infsnz	??___fldiv& (0+255),f,b
 14122  013E84  2B88               	incf	(??___fldiv+1)& (0+255),f,b
 14123  013E86  0100               	movlb	0	; () banked
 14124  013E88  5196               	movf	___fldiv@bexp& (0+255),w,b
 14125  013E8A  0100               	movlb	0	; () banked
 14126  013E8C  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14127  013E8E  6B8A               	clrf	(??___fldiv+3)& (0+255),b
 14128  013E90  0100               	movlb	0	; () banked
 14129  013E92  5187               	movf	??___fldiv& (0+255),w,b
 14130  013E94  0100               	movlb	0	; () banked
 14131  013E96  2789               	addwf	(??___fldiv+2)& (0+255),f,b
 14132  013E98  0100               	movlb	0	; () banked
 14133  013E9A  5188               	movf	(??___fldiv+1)& (0+255),w,b
 14134  013E9C  0100               	movlb	0	; () banked
 14135  013E9E  238A               	addwfc	(??___fldiv+3)& (0+255),f,b
 14136  013EA0  0E7F               	movlw	127
 14137  013EA2  0100               	movlb	0	; () banked
 14138  013EA4  2589               	addwf	(??___fldiv+2)& (0+255),w,b
 14139  013EA6  0100               	movlb	0	; () banked
 14140  013EA8  6F90               	movwf	___fldiv@new_exp& (0+255),b
 14141  013EAA  0E00               	movlw	0
 14142  013EAC  0100               	movlb	0	; () banked
 14143  013EAE  218A               	addwfc	(??___fldiv+3)& (0+255),w,b
 14144  013EB0  0100               	movlb	0	; () banked
 14145  013EB2  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14146                           
 14147                           ; BSR set to: 0
 14148  013EB4  C07F  F08C         	movff	___fldiv@b,___fldiv@rem
 14149  013EB8  C080  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
 14150  013EBC  C081  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
 14151  013EC0  C082  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
 14152                           
 14153                           ; BSR set to: 0
 14154  013EC4  0E00               	movlw	0
 14155  013EC6  0100               	movlb	0	; () banked
 14156  013EC8  6F7F               	movwf	___fldiv@b& (0+255),b
 14157  013ECA  0E00               	movlw	0
 14158  013ECC  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14159  013ECE  0E00               	movlw	0
 14160  013ED0  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14161  013ED2  0E00               	movlw	0
 14162  013ED4  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14163                           
 14164                           ; BSR set to: 0
 14165  013ED6  0E00               	movlw	0
 14166  013ED8  0100               	movlb	0	; () banked
 14167  013EDA  6F92               	movwf	___fldiv@grs& (0+255),b
 14168  013EDC  0E00               	movlw	0
 14169  013EDE  6F93               	movwf	(___fldiv@grs+1)& (0+255),b
 14170  013EE0  0E00               	movlw	0
 14171  013EE2  6F94               	movwf	(___fldiv@grs+2)& (0+255),b
 14172  013EE4  0E00               	movlw	0
 14173  013EE6  6F95               	movwf	(___fldiv@grs+3)& (0+255),b
 14174                           
 14175                           ; BSR set to: 0
 14176  013EE8  0E00               	movlw	0
 14177  013EEA  0100               	movlb	0	; () banked
 14178  013EEC  6F97               	movwf	___fldiv@aexp& (0+255),b
 14179  013EEE  D042               	goto	l1618
 14180  013EF0                     l6850:
 14181                           
 14182                           ; BSR set to: 0
 14183  013EF0  0100               	movlb	0	; () banked
 14184  013EF2  5197               	movf	___fldiv@aexp& (0+255),w,b
 14185  013EF4  0100               	movlb	0	; () banked
 14186  013EF6  B4D8               	btfsc	status,2,c
 14187  013EF8  D017               	goto	l6858
 14188                           
 14189                           ; BSR set to: 0
 14190  013EFA  0100               	movlb	0	; () banked
 14191  013EFC  90D8               	bcf	status,0,c
 14192  013EFE  378C               	rlcf	___fldiv@rem& (0+255),f,b
 14193  013F00  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14194  013F02  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14195  013F04  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14196  013F06  0100               	movlb	0	; () banked
 14197  013F08  90D8               	bcf	status,0,c
 14198  013F0A  377F               	rlcf	___fldiv@b& (0+255),f,b
 14199  013F0C  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14200  013F0E  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14201  013F10  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14202                           
 14203                           ; BSR set to: 0
 14204  013F12  0100               	movlb	0	; () banked
 14205  013F14  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14206  013F16  D002               	goto	l1621
 14207                           
 14208                           ; BSR set to: 0
 14209  013F18  0100               	movlb	0	; () banked
 14210  013F1A  817F               	bsf	___fldiv@b& (0+255),0,b
 14211  013F1C                     l1621:
 14212                           
 14213                           ; BSR set to: 0
 14214  013F1C  0100               	movlb	0	; () banked
 14215  013F1E  90D8               	bcf	status,0,c
 14216  013F20  3792               	rlcf	___fldiv@grs& (0+255),f,b
 14217  013F22  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14218  013F24  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14219  013F26  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14220  013F28                     l6858:
 14221                           
 14222                           ; BSR set to: 0
 14223  013F28  0100               	movlb	0	; () banked
 14224  013F2A  5183               	movf	___fldiv@a& (0+255),w,b
 14225  013F2C  0100               	movlb	0	; () banked
 14226  013F2E  5D8C               	subwf	___fldiv@rem& (0+255),w,b
 14227  013F30  0100               	movlb	0	; () banked
 14228  013F32  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 14229  013F34  0100               	movlb	0	; () banked
 14230  013F36  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14231  013F38  0100               	movlb	0	; () banked
 14232  013F3A  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 14233  013F3C  0100               	movlb	0	; () banked
 14234  013F3E  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14235  013F40  0100               	movlb	0	; () banked
 14236  013F42  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14237  013F44  0100               	movlb	0	; () banked
 14238  013F46  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14239  013F48  A0D8               	btfss	status,0,c
 14240  013F4A  D012               	goto	l6864
 14241                           
 14242                           ; BSR set to: 0
 14243  013F4C  0100               	movlb	0	; () banked
 14244  013F4E  8D95               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14245                           
 14246                           ; BSR set to: 0
 14247  013F50  0100               	movlb	0	; () banked
 14248  013F52  5183               	movf	___fldiv@a& (0+255),w,b
 14249  013F54  0100               	movlb	0	; () banked
 14250  013F56  5F8C               	subwf	___fldiv@rem& (0+255),f,b
 14251  013F58  0100               	movlb	0	; () banked
 14252  013F5A  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 14253  013F5C  0100               	movlb	0	; () banked
 14254  013F5E  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14255  013F60  0100               	movlb	0	; () banked
 14256  013F62  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 14257  013F64  0100               	movlb	0	; () banked
 14258  013F66  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14259  013F68  0100               	movlb	0	; () banked
 14260  013F6A  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14261  013F6C  0100               	movlb	0	; () banked
 14262  013F6E  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14263  013F70                     l6864:
 14264                           
 14265                           ; BSR set to: 0
 14266  013F70  0100               	movlb	0	; () banked
 14267  013F72  2B97               	incf	___fldiv@aexp& (0+255),f,b
 14268  013F74                     l1618:
 14269                           
 14270                           ; BSR set to: 0
 14271  013F74  0E19               	movlw	25
 14272  013F76  0100               	movlb	0	; () banked
 14273  013F78  6597               	cpfsgt	___fldiv@aexp& (0+255),b
 14274  013F7A  D7BA               	goto	l6850
 14275                           
 14276                           ; BSR set to: 0
 14277                           
 14278                           ; BSR set to: 0
 14279  013F7C  0100               	movlb	0	; () banked
 14280  013F7E  518C               	movf	___fldiv@rem& (0+255),w,b
 14281  013F80  0100               	movlb	0	; () banked
 14282  013F82  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14283  013F84  0100               	movlb	0	; () banked
 14284  013F86  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14285  013F88  0100               	movlb	0	; () banked
 14286  013F8A  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14287  013F8C  B4D8               	btfsc	status,2,c
 14288  013F8E  D018               	goto	l6876
 14289                           
 14290                           ; BSR set to: 0
 14291  013F90  0100               	movlb	0	; () banked
 14292  013F92  8192               	bsf	___fldiv@grs& (0+255),0,b
 14293                           
 14294                           ; BSR set to: 0
 14295  013F94  D015               	goto	l6876
 14296  013F96                     l6870:
 14297                           
 14298                           ; BSR set to: 0
 14299  013F96  0100               	movlb	0	; () banked
 14300  013F98  90D8               	bcf	status,0,c
 14301  013F9A  377F               	rlcf	___fldiv@b& (0+255),f,b
 14302  013F9C  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14303  013F9E  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14304  013FA0  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14305                           
 14306                           ; BSR set to: 0
 14307  013FA2  0100               	movlb	0	; () banked
 14308  013FA4  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14309  013FA6  D002               	goto	l1627
 14310                           
 14311                           ; BSR set to: 0
 14312  013FA8  0100               	movlb	0	; () banked
 14313  013FAA  817F               	bsf	___fldiv@b& (0+255),0,b
 14314  013FAC                     l1627:
 14315                           
 14316                           ; BSR set to: 0
 14317  013FAC  0100               	movlb	0	; () banked
 14318  013FAE  90D8               	bcf	status,0,c
 14319  013FB0  3792               	rlcf	___fldiv@grs& (0+255),f,b
 14320  013FB2  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14321  013FB4  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14322  013FB6  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14323  013FB8  0100               	movlb	0	; () banked
 14324  013FBA  0790               	decf	___fldiv@new_exp& (0+255),f,b
 14325  013FBC  A0D8               	btfss	status,0,c
 14326  013FBE  0791               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14327  013FC0                     l6876:
 14328                           
 14329                           ; BSR set to: 0
 14330  013FC0  0100               	movlb	0	; () banked
 14331  013FC2  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 14332  013FC4  D7E8               	goto	l6870
 14333                           
 14334                           ; BSR set to: 0
 14335                           
 14336                           ; BSR set to: 0
 14337  013FC6  0E00               	movlw	0
 14338  013FC8  0100               	movlb	0	; () banked
 14339  013FCA  6F97               	movwf	___fldiv@aexp& (0+255),b
 14340                           
 14341                           ; BSR set to: 0
 14342  013FCC  0100               	movlb	0	; () banked
 14343  013FCE  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14344  013FD0  D024               	goto	l1629
 14345                           
 14346                           ; BSR set to: 0
 14347  013FD2  0EFF               	movlw	255
 14348  013FD4  0100               	movlb	0	; () banked
 14349  013FD6  1592               	andwf	___fldiv@grs& (0+255),w,b
 14350  013FD8  0100               	movlb	0	; () banked
 14351  013FDA  6F87               	movwf	??___fldiv& (0+255),b
 14352  013FDC  0EFF               	movlw	255
 14353  013FDE  0100               	movlb	0	; () banked
 14354  013FE0  1593               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14355  013FE2  0100               	movlb	0	; () banked
 14356  013FE4  6F88               	movwf	(??___fldiv+1)& (0+255),b
 14357  013FE6  0EFF               	movlw	255
 14358  013FE8  0100               	movlb	0	; () banked
 14359  013FEA  1594               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14360  013FEC  0100               	movlb	0	; () banked
 14361  013FEE  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14362  013FF0  0E7F               	movlw	127
 14363  013FF2  0100               	movlb	0	; () banked
 14364  013FF4  1595               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14365  013FF6  0100               	movlb	0	; () banked
 14366  013FF8  6F8A               	movwf	(??___fldiv+3)& (0+255),b
 14367  013FFA  0100               	movlb	0	; () banked
 14368  013FFC  5187               	movf	??___fldiv& (0+255),w,b
 14369  013FFE  0100               	movlb	0	; () banked
 14370  014000  1188               	iorwf	(??___fldiv+1)& (0+255),w,b
 14371  014002  0100               	movlb	0	; () banked
 14372  014004  1189               	iorwf	(??___fldiv+2)& (0+255),w,b
 14373  014006  0100               	movlb	0	; () banked
 14374  014008  118A               	iorwf	(??___fldiv+3)& (0+255),w,b
 14375  01400A  A4D8               	btfss	status,2,c
 14376  01400C  D003               	goto	l6886
 14377                           
 14378                           ; BSR set to: 0
 14379                           
 14380                           ; BSR set to: 0
 14381  01400E  0100               	movlb	0	; () banked
 14382  014010  A17F               	btfss	___fldiv@b& (0+255),0,b
 14383  014012  D003               	goto	l1629
 14384  014014                     l6886:
 14385                           
 14386                           ; BSR set to: 0
 14387  014014  0E01               	movlw	1
 14388  014016  0100               	movlb	0	; () banked
 14389  014018  6F97               	movwf	___fldiv@aexp& (0+255),b
 14390  01401A                     l1629:
 14391                           
 14392                           ; BSR set to: 0
 14393  01401A  0100               	movlb	0	; () banked
 14394  01401C  5197               	movf	___fldiv@aexp& (0+255),w,b
 14395  01401E  0100               	movlb	0	; () banked
 14396  014020  B4D8               	btfsc	status,2,c
 14397  014022  D023               	goto	l6896
 14398                           
 14399                           ; BSR set to: 0
 14400  014024  0E01               	movlw	1
 14401  014026  0100               	movlb	0	; () banked
 14402  014028  277F               	addwf	___fldiv@b& (0+255),f,b
 14403  01402A  0E00               	movlw	0
 14404  01402C  2380               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14405  01402E  2381               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14406  014030  2382               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14407                           
 14408                           ; BSR set to: 0
 14409  014032  0100               	movlb	0	; () banked
 14410  014034  A182               	btfss	(___fldiv@b+3)& (0+255),0,b
 14411  014036  D019               	goto	l6896
 14412                           
 14413                           ; BSR set to: 0
 14414  014038  C07F  F087         	movff	___fldiv@b,??___fldiv
 14415  01403C  C080  F088         	movff	___fldiv@b+1,??___fldiv+1
 14416  014040  C081  F089         	movff	___fldiv@b+2,??___fldiv+2
 14417  014044  C082  F08A         	movff	___fldiv@b+3,??___fldiv+3
 14418  014048  0100               	movlb	0	; () banked
 14419  01404A  358A               	rlcf	(??___fldiv+3)& (0+255),w,b
 14420  01404C  338A               	rrcf	(??___fldiv+3)& (0+255),f,b
 14421  01404E  3389               	rrcf	(??___fldiv+2)& (0+255),f,b
 14422  014050  3388               	rrcf	(??___fldiv+1)& (0+255),f,b
 14423  014052  3387               	rrcf	??___fldiv& (0+255),f,b
 14424  014054  C087  F07F         	movff	??___fldiv,___fldiv@b
 14425  014058  C088  F080         	movff	??___fldiv+1,___fldiv@b+1
 14426  01405C  C089  F081         	movff	??___fldiv+2,___fldiv@b+2
 14427  014060  C08A  F082         	movff	??___fldiv+3,___fldiv@b+3
 14428                           
 14429                           ; BSR set to: 0
 14430  014064  0100               	movlb	0	; () banked
 14431  014066  4B90               	infsnz	___fldiv@new_exp& (0+255),f,b
 14432  014068  2B91               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14433  01406A                     l6896:
 14434                           
 14435                           ; BSR set to: 0
 14436  01406A  0100               	movlb	0	; () banked
 14437  01406C  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14438  01406E  D014               	goto	l6900
 14439  014070  0100               	movlb	0	; () banked
 14440  014072  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14441  014074  E104               	bnz	u8640
 14442  014076  0100               	movlb	0	; () banked
 14443  014078  2990               	incf	___fldiv@new_exp& (0+255),w,b
 14444  01407A  A0D8               	btfss	status,0,c
 14445  01407C  D00D               	goto	l6900
 14446  01407E                     u8640:
 14447                           
 14448                           ; BSR set to: 0
 14449  01407E  0E00               	movlw	0
 14450  014080  0100               	movlb	0	; () banked
 14451  014082  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14452  014084  6990               	setf	___fldiv@new_exp& (0+255),b
 14453  014086  0E00               	movlw	0
 14454  014088  0100               	movlb	0	; () banked
 14455  01408A  6F7F               	movwf	___fldiv@b& (0+255),b
 14456  01408C  0E00               	movlw	0
 14457  01408E  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14458  014090  0E00               	movlw	0
 14459  014092  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14460  014094  0E00               	movlw	0
 14461  014096  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14462  014098                     l6900:
 14463                           
 14464                           ; BSR set to: 0
 14465  014098  0100               	movlb	0	; () banked
 14466  01409A  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14467  01409C  D007               	goto	l6902
 14468  01409E  0100               	movlb	0	; () banked
 14469  0140A0  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14470  0140A2  E115               	bnz	l6904
 14471  0140A4  0100               	movlb	0	; () banked
 14472  0140A6  0590               	decf	___fldiv@new_exp& (0+255),w,b
 14473  0140A8  B0D8               	btfsc	status,0,c
 14474  0140AA  D011               	goto	l6904
 14475  0140AC                     l6902:
 14476                           
 14477                           ; BSR set to: 0
 14478  0140AC  0E00               	movlw	0
 14479  0140AE  0100               	movlb	0	; () banked
 14480  0140B0  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14481  0140B2  0E00               	movlw	0
 14482  0140B4  6F90               	movwf	___fldiv@new_exp& (0+255),b
 14483  0140B6  0E00               	movlw	0
 14484  0140B8  0100               	movlb	0	; () banked
 14485  0140BA  6F7F               	movwf	___fldiv@b& (0+255),b
 14486  0140BC  0E00               	movlw	0
 14487  0140BE  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14488  0140C0  0E00               	movlw	0
 14489  0140C2  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14490  0140C4  0E00               	movlw	0
 14491  0140C6  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14492  0140C8  0E00               	movlw	0
 14493  0140CA  0100               	movlb	0	; () banked
 14494  0140CC  6F8B               	movwf	___fldiv@sign& (0+255),b
 14495  0140CE                     l6904:
 14496                           
 14497                           ; BSR set to: 0
 14498  0140CE  C090  F096         	movff	___fldiv@new_exp,___fldiv@bexp
 14499                           
 14500                           ; BSR set to: 0
 14501  0140D2  0100               	movlb	0	; () banked
 14502  0140D4  A196               	btfss	___fldiv@bexp& (0+255),0,b
 14503  0140D6  D003               	goto	l6910
 14504                           
 14505                           ; BSR set to: 0
 14506  0140D8  0100               	movlb	0	; () banked
 14507  0140DA  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 14508  0140DC  D002               	goto	l6912
 14509  0140DE                     l6910:
 14510                           
 14511                           ; BSR set to: 0
 14512  0140DE  0100               	movlb	0	; () banked
 14513  0140E0  9F81               	bcf	(___fldiv@b+2)& (0+255),7,b
 14514  0140E2                     l6912:
 14515                           
 14516                           ; BSR set to: 0
 14517  0140E2  0100               	movlb	0	; () banked
 14518  0140E4  90D8               	bcf	status,0,c
 14519  0140E6  3196               	rrcf	___fldiv@bexp& (0+255),w,b
 14520  0140E8  0100               	movlb	0	; () banked
 14521  0140EA  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14522                           
 14523                           ; BSR set to: 0
 14524  0140EC  0100               	movlb	0	; () banked
 14525  0140EE  518B               	movf	___fldiv@sign& (0+255),w,b
 14526  0140F0  0100               	movlb	0	; () banked
 14527  0140F2  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14528                           
 14529                           ; BSR set to: 0
 14530  0140F4  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14531  0140F8  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14532  0140FC  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14533  014100  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14534  014104  0012               	return	
 14535  014106                     __end_of___fldiv:
 14536                           	opt stack 0
 14537                           tblptru	equ	0xFF8
 14538                           tblptrh	equ	0xFF7
 14539                           tblptrl	equ	0xFF6
 14540                           tablat	equ	0xFF5
 14541                           prodh	equ	0xFF4
 14542                           prodl	equ	0xFF3
 14543                           intcon	equ	0xFF2
 14544                           postinc0	equ	0xFEE
 14545                           wreg	equ	0xFE8
 14546                           indf2	equ	0xFDF
 14547                           postinc2	equ	0xFDE
 14548                           fsr2h	equ	0xFDA
 14549                           fsr2l	equ	0xFD9
 14550                           status	equ	0xFD8
 14551                           
 14552 ;; *************** function _LCD_write_integer *****************
 14553 ;; Defined at:
 14554 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;  value           2   41[BANK0 ] int 
 14557 ;;  number_of_di    1   43[BANK0 ] unsigned char 
 14558 ;;  zero_cleanin    1   44[BANK0 ] unsigned char 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  convertedInt    6   50[BANK0 ] unsigned char [6]
 14561 ;;  index           1   56[BANK0 ] unsigned char 
 14562 ;; Return value:  Size  Location     Type
 14563 ;;		None               void
 14564 ;; Registers used:
 14565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14566 ;; Tracked objects:
 14567 ;;		On entry : 0/0
 14568 ;;		On exit  : 0/0
 14569 ;;		Unchanged: 0/0
 14570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14572 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14573 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14574 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14575 ;;Total ram usage:       16 bytes
 14576 ;; Hardware stack levels used:    1
 14577 ;; Hardware stack levels required when called:    9
 14578 ;; This function calls:
 14579 ;;		_LCD_write_string
 14580 ;;		_itoa
 14581 ;; This function is called by:
 14582 ;;		_LCD_Handler
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text28
 14587  014F4C                     __ptext28:
 14588                           	opt stack 0
 14589  014F4C                     _LCD_write_integer:
 14590                           	opt stack 20
 14591                           
 14592                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 14593                           
 14594                           ; BSR set to: 0
 14595                           ;incstack = 0
 14596  014F4C  EE21  F000         	lfsr	2,LCD_write_integer@F17272
 14597  014F50  EE10  F092         	lfsr	1,LCD_write_integer@convertedInt
 14598  014F54  0E05               	movlw	5
 14599  014F56                     u11701:
 14600  014F56  CFDB FFE3          	movff	plusw2,plusw1
 14601  014F5A  06E8               	decf	wreg,f,c
 14602  014F5C  E2FC               	bc	u11701
 14603                           
 14604                           ;src\LCD_44780.c: 216: unsigned char index;
 14605                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 14606  014F5E  0E92               	movlw	low LCD_write_integer@convertedInt
 14607  014F60  0100               	movlb	0	; () banked
 14608  014F62  6F81               	movwf	itoa@buf& (0+255),b
 14609  014F64  0E00               	movlw	high LCD_write_integer@convertedInt
 14610  014F66  0100               	movlb	0	; () banked
 14611  014F68  6F82               	movwf	(itoa@buf+1)& (0+255),b
 14612  014F6A  C089  F083         	movff	LCD_write_integer@value,itoa@val
 14613  014F6E  C08A  F084         	movff	LCD_write_integer@value+1,itoa@val+1
 14614  014F72  0E00               	movlw	0
 14615  014F74  0100               	movlb	0	; () banked
 14616  014F76  6F86               	movwf	(itoa@base+1)& (0+255),b
 14617  014F78  0E0A               	movlw	10
 14618  014F7A  6F85               	movwf	itoa@base& (0+255),b
 14619  014F7C  EC5C  F0B1         	call	_itoa	;wreg free
 14620                           
 14621                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 14622  014F80  0100               	movlb	0	; () banked
 14623  014F82  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14624  014F84  0100               	movlb	0	; () banked
 14625  014F86  B4D8               	btfsc	status,2,c
 14626  014F88  D0B8               	goto	l8830
 14627                           
 14628                           ; BSR set to: 0
 14629                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 14630  014F8A  0100               	movlb	0	; () banked
 14631  014F8C  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14632  014F8E  0D01               	mullw	1
 14633  014F90  0E92               	movlw	low LCD_write_integer@convertedInt
 14634  014F92  24F3               	addwf	prodl,w,c
 14635  014F94  6ED9               	movwf	fsr2l,c
 14636  014F96  0E00               	movlw	high LCD_write_integer@convertedInt
 14637  014F98  20F4               	addwfc	prodh,w,c
 14638  014F9A  6EDA               	movwf	fsr2h,c
 14639  014F9C  0E00               	movlw	0
 14640  014F9E  6EDF               	movwf	indf2,c
 14641                           
 14642                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14643  014FA0  D070               	goto	l8826
 14644  014FA2                     l8808:
 14645                           
 14646                           ; BSR set to: 0
 14647                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14648  014FA2  0100               	movlb	0	; () banked
 14649  014FA4  058B               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14650  014FA6  0100               	movlb	0	; () banked
 14651  014FA8  6F98               	movwf	LCD_write_integer@index& (0+255),b
 14652  014FAA                     l8810:
 14653                           
 14654                           ; BSR set to: 0
 14655  014FAA  0100               	movlb	0	; () banked
 14656  014FAC  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14657  014FAE  0100               	movlb	0	; () banked
 14658  014FB0  B4D8               	btfsc	status,2,c
 14659  014FB2  D067               	goto	l8826
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14663                           
 14664                           ; BSR set to: 0
 14665                           
 14666                           ; BSR set to: 0
 14667  014FB4  0EFF               	movlw	255
 14668  014FB6  0100               	movlb	0	; () banked
 14669  014FB8  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14670  014FBA  0EFF               	movlw	255
 14671  014FBC  0100               	movlb	0	; () banked
 14672  014FBE  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14673  014FC0  0100               	movlb	0	; () banked
 14674  014FC2  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14675  014FC4  0100               	movlb	0	; () banked
 14676  014FC6  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14677  014FC8  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14678  014FCA  0100               	movlb	0	; () banked
 14679  014FCC  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14680  014FCE  0100               	movlb	0	; () banked
 14681  014FD0  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14682  014FD2  0100               	movlb	0	; () banked
 14683  014FD4  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14684  014FD6  0100               	movlb	0	; () banked
 14685  014FD8  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14686  014FDA  0E92               	movlw	low LCD_write_integer@convertedInt
 14687  014FDC  0100               	movlb	0	; () banked
 14688  014FDE  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14689  014FE0  6ED9               	movwf	fsr2l,c
 14690  014FE2  0E00               	movlw	high LCD_write_integer@convertedInt
 14691  014FE4  0100               	movlb	0	; () banked
 14692  014FE6  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14693  014FE8  6EDA               	movwf	fsr2h,c
 14694  014FEA  0100               	movlb	0	; () banked
 14695  014FEC  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14696  014FEE  0D01               	mullw	1
 14697  014FF0  0E92               	movlw	low LCD_write_integer@convertedInt
 14698  014FF2  24F3               	addwf	prodl,w,c
 14699  014FF4  6EE1               	movwf	fsr1l,c
 14700  014FF6  0E00               	movlw	high LCD_write_integer@convertedInt
 14701  014FF8  20F4               	addwfc	prodh,w,c
 14702  014FFA  6EE2               	movwf	fsr1h,c
 14703  014FFC  CFDF FFE7          	movff	indf2,indf1
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14707  015000  0100               	movlb	0	; () banked
 14708  015002  058C               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14709  015004  A4D8               	btfss	status,2,c
 14710  015006  D01D               	goto	l8820
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14714  015008  0EFF               	movlw	255
 14715  01500A  0100               	movlb	0	; () banked
 14716  01500C  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14717  01500E  0EFF               	movlw	255
 14718  015010  0100               	movlb	0	; () banked
 14719  015012  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14720  015014  0100               	movlb	0	; () banked
 14721  015016  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14722  015018  0100               	movlb	0	; () banked
 14723  01501A  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14724  01501C  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14725  01501E  0100               	movlb	0	; () banked
 14726  015020  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14727  015022  0100               	movlb	0	; () banked
 14728  015024  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14729  015026  0100               	movlb	0	; () banked
 14730  015028  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14731  01502A  0100               	movlb	0	; () banked
 14732  01502C  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14733  01502E  0E92               	movlw	low LCD_write_integer@convertedInt
 14734  015030  0100               	movlb	0	; () banked
 14735  015032  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14736  015034  6ED9               	movwf	fsr2l,c
 14737  015036  0E00               	movlw	high LCD_write_integer@convertedInt
 14738  015038  0100               	movlb	0	; () banked
 14739  01503A  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14740  01503C  6EDA               	movwf	fsr2h,c
 14741  01503E  0E20               	movlw	32
 14742  015040  D01C               	goto	L15
 14743  015042                     l8820:
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14747  015042  0EFF               	movlw	255
 14748  015044  0100               	movlb	0	; () banked
 14749  015046  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14750  015048  0EFF               	movlw	255
 14751  01504A  0100               	movlb	0	; () banked
 14752  01504C  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14753  01504E  0100               	movlb	0	; () banked
 14754  015050  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14755  015052  0100               	movlb	0	; () banked
 14756  015054  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14757  015056  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14758  015058  0100               	movlb	0	; () banked
 14759  01505A  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14760  01505C  0100               	movlb	0	; () banked
 14761  01505E  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14762  015060  0100               	movlb	0	; () banked
 14763  015062  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14764  015064  0100               	movlb	0	; () banked
 14765  015066  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14766  015068  0E92               	movlw	low LCD_write_integer@convertedInt
 14767  01506A  0100               	movlb	0	; () banked
 14768  01506C  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14769  01506E  6ED9               	movwf	fsr2l,c
 14770  015070  0E00               	movlw	high LCD_write_integer@convertedInt
 14771  015072  0100               	movlb	0	; () banked
 14772  015074  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14773  015076  6EDA               	movwf	fsr2h,c
 14774  015078  0E30               	movlw	48
 14775  01507A                     L15:
 14776  01507A  6EDF               	movwf	indf2,c
 14777                           
 14778                           ; BSR set to: 0
 14779                           
 14780                           ; BSR set to: 0
 14781  01507C  0100               	movlb	0	; () banked
 14782  01507E  0798               	decf	LCD_write_integer@index& (0+255),f,b
 14783  015080  D794               	goto	l8810
 14784  015082                     l8826:
 14785                           
 14786                           ; BSR set to: 0
 14787  015082  0EFF               	movlw	255
 14788  015084  0100               	movlb	0	; () banked
 14789  015086  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14790  015088  0EFF               	movlw	255
 14791  01508A  0100               	movlb	0	; () banked
 14792  01508C  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14793  01508E  0100               	movlb	0	; () banked
 14794  015090  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14795  015092  0100               	movlb	0	; () banked
 14796  015094  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14797  015096  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14798  015098  0100               	movlb	0	; () banked
 14799  01509A  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14800  01509C  0100               	movlb	0	; () banked
 14801  01509E  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14802  0150A0  0100               	movlb	0	; () banked
 14803  0150A2  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14804  0150A4  0100               	movlb	0	; () banked
 14805  0150A6  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14806  0150A8  0E92               	movlw	low LCD_write_integer@convertedInt
 14807  0150AA  0100               	movlb	0	; () banked
 14808  0150AC  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14809  0150AE  6ED9               	movwf	fsr2l,c
 14810  0150B0  0E00               	movlw	high LCD_write_integer@convertedInt
 14811  0150B2  0100               	movlb	0	; () banked
 14812  0150B4  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14813  0150B6  6EDA               	movwf	fsr2h,c
 14814  0150B8  0E3A               	movlw	58
 14815  0150BA  60DF               	cpfslt	indf2,c
 14816  0150BC  D772               	goto	l8808
 14817                           
 14818                           ; BSR set to: 0
 14819  0150BE  0EFF               	movlw	255
 14820  0150C0  0100               	movlb	0	; () banked
 14821  0150C2  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14822  0150C4  0EFF               	movlw	255
 14823  0150C6  0100               	movlb	0	; () banked
 14824  0150C8  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14825  0150CA  0100               	movlb	0	; () banked
 14826  0150CC  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14827  0150CE  0100               	movlb	0	; () banked
 14828  0150D0  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14829  0150D2  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14830  0150D4  0100               	movlb	0	; () banked
 14831  0150D6  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14832  0150D8  0100               	movlb	0	; () banked
 14833  0150DA  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14834  0150DC  0100               	movlb	0	; () banked
 14835  0150DE  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14836  0150E0  0100               	movlb	0	; () banked
 14837  0150E2  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14838  0150E4  0E92               	movlw	low LCD_write_integer@convertedInt
 14839  0150E6  0100               	movlb	0	; () banked
 14840  0150E8  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14841  0150EA  6ED9               	movwf	fsr2l,c
 14842  0150EC  0E00               	movlw	high LCD_write_integer@convertedInt
 14843  0150EE  0100               	movlb	0	; () banked
 14844  0150F0  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14845  0150F2  6EDA               	movwf	fsr2h,c
 14846  0150F4  0E2F               	movlw	47
 14847  0150F6  64DF               	cpfsgt	indf2,c
 14848  0150F8  D754               	goto	l8808
 14849  0150FA                     l8830:
 14850                           
 14851                           ; BSR set to: 0
 14852                           ;src\LCD_44780.c: 243: }
 14853                           ;src\LCD_44780.c: 245: }
 14854                           ;src\LCD_44780.c: 246: }
 14855                           ;src\LCD_44780.c: 247: }
 14856                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14857  0150FA  0E92               	movlw	low LCD_write_integer@convertedInt
 14858  0150FC  0100               	movlb	0	; () banked
 14859  0150FE  6F82               	movwf	LCD_write_string@buffer& (0+255),b
 14860  015100  0E00               	movlw	high LCD_write_integer@convertedInt
 14861  015102  0100               	movlb	0	; () banked
 14862  015104  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14863  015106  EC75  F0B2         	call	_LCD_write_string	;wreg free
 14864  01510A  0012               	return		;funcret
 14865  01510C                     __end_of_LCD_write_integer:
 14866                           	opt stack 0
 14867                           tblptru	equ	0xFF8
 14868                           tblptrh	equ	0xFF7
 14869                           tblptrl	equ	0xFF6
 14870                           tablat	equ	0xFF5
 14871                           prodh	equ	0xFF4
 14872                           prodl	equ	0xFF3
 14873                           intcon	equ	0xFF2
 14874                           postinc0	equ	0xFEE
 14875                           wreg	equ	0xFE8
 14876                           indf1	equ	0xFE7
 14877                           plusw1	equ	0xFE3
 14878                           fsr1h	equ	0xFE2
 14879                           fsr1l	equ	0xFE1
 14880                           indf2	equ	0xFDF
 14881                           postinc2	equ	0xFDE
 14882                           plusw2	equ	0xFDB
 14883                           fsr2h	equ	0xFDA
 14884                           fsr2l	equ	0xFD9
 14885                           status	equ	0xFD8
 14886                           
 14887 ;; *************** function _itoa *****************
 14888 ;; Defined at:
 14889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14890 ;; Parameters:    Size  Location     Type
 14891 ;;  buf             2   33[BANK0 ] PTR unsigned char 
 14892 ;;		 -> LCD_write_integer@convertedInt(6), 
 14893 ;;  val             2   35[BANK0 ] int 
 14894 ;;  base            2   37[BANK0 ] int 
 14895 ;; Auto vars:     Size  Location     Type
 14896 ;;  cp              2   39[BANK0 ] PTR unsigned char 
 14897 ;;		 -> LCD_write_integer@convertedInt(6), 
 14898 ;; Return value:  Size  Location     Type
 14899 ;;                  2   33[BANK0 ] PTR unsigned char 
 14900 ;; Registers used:
 14901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14902 ;; Tracked objects:
 14903 ;;		On entry : 0/0
 14904 ;;		On exit  : 0/0
 14905 ;;		Unchanged: 0/0
 14906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14907 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14910 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14911 ;;Total ram usage:        8 bytes
 14912 ;; Hardware stack levels used:    1
 14913 ;; Hardware stack levels required when called:    5
 14914 ;; This function calls:
 14915 ;;		_utoa
 14916 ;; This function is called by:
 14917 ;;		_LCD_write_integer
 14918 ;; This function uses a non-reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text29
 14922  0162B8                     __ptext29:
 14923                           	opt stack 0
 14924  0162B8                     _itoa:
 14925                           	opt stack 23
 14926                           
 14927                           ;incstack = 0
 14928  0162B8  C081  F087         	movff	itoa@buf,itoa@cp
 14929  0162BC  C082  F088         	movff	itoa@buf+1,itoa@cp+1
 14930  0162C0  0100               	movlb	0	; () banked
 14931  0162C2  AF84               	btfss	(itoa@val+1)& (0+255),7,b
 14932  0162C4  D00E               	goto	l5844
 14933                           
 14934                           ; BSR set to: 0
 14935  0162C6  C081  FFD9         	movff	itoa@buf,fsr2l
 14936  0162CA  C082  FFDA         	movff	itoa@buf+1,fsr2h
 14937  0162CE  0E2D               	movlw	45
 14938  0162D0  6EDF               	movwf	indf2,c
 14939                           
 14940                           ; BSR set to: 0
 14941  0162D2  0100               	movlb	0	; () banked
 14942  0162D4  4B81               	infsnz	itoa@buf& (0+255),f,b
 14943  0162D6  2B82               	incf	(itoa@buf+1)& (0+255),f,b
 14944                           
 14945                           ; BSR set to: 0
 14946  0162D8  0100               	movlb	0	; () banked
 14947  0162DA  6D83               	negf	itoa@val& (0+255),b
 14948  0162DC  1F84               	comf	(itoa@val+1)& (0+255),f,b
 14949  0162DE  B0D8               	btfsc	status,0,c
 14950  0162E0  2B84               	incf	(itoa@val+1)& (0+255),f,b
 14951  0162E2                     l5844:
 14952                           
 14953                           ; BSR set to: 0
 14954  0162E2  C081  F078         	movff	itoa@buf,utoa@buf
 14955  0162E6  C082  F079         	movff	itoa@buf+1,utoa@buf+1
 14956  0162EA  C083  F07A         	movff	itoa@val,utoa@val
 14957  0162EE  C084  F07B         	movff	itoa@val+1,utoa@val+1
 14958  0162F2  C085  F07C         	movff	itoa@base,utoa@base
 14959  0162F6  C086  F07D         	movff	itoa@base+1,utoa@base+1
 14960  0162FA  ECF3  F0AC         	call	_utoa	;wreg free
 14961  0162FE  0012               	return	
 14962  016300                     __end_of_itoa:
 14963                           	opt stack 0
 14964                           tblptru	equ	0xFF8
 14965                           tblptrh	equ	0xFF7
 14966                           tblptrl	equ	0xFF6
 14967                           tablat	equ	0xFF5
 14968                           prodh	equ	0xFF4
 14969                           prodl	equ	0xFF3
 14970                           intcon	equ	0xFF2
 14971                           postinc0	equ	0xFEE
 14972                           wreg	equ	0xFE8
 14973                           indf1	equ	0xFE7
 14974                           plusw1	equ	0xFE3
 14975                           fsr1h	equ	0xFE2
 14976                           fsr1l	equ	0xFE1
 14977                           indf2	equ	0xFDF
 14978                           postinc2	equ	0xFDE
 14979                           plusw2	equ	0xFDB
 14980                           fsr2h	equ	0xFDA
 14981                           fsr2l	equ	0xFD9
 14982                           status	equ	0xFD8
 14983                           
 14984 ;; *************** function _utoa *****************
 14985 ;; Defined at:
 14986 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  buf             2   24[BANK0 ] PTR unsigned char 
 14989 ;;		 -> LCD_write_integer@convertedInt(6), 
 14990 ;;  val             2   26[BANK0 ] unsigned int 
 14991 ;;  base            2   28[BANK0 ] int 
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;  v               2   30[BANK0 ] unsigned int 
 14994 ;;  c               1   32[BANK0 ] unsigned char 
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  2   24[BANK0 ] PTR unsigned char 
 14997 ;; Registers used:
 14998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15004 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15005 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15007 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15008 ;;Total ram usage:        9 bytes
 15009 ;; Hardware stack levels used:    1
 15010 ;; Hardware stack levels required when called:    4
 15011 ;; This function calls:
 15012 ;;		___lwdiv
 15013 ;;		___lwmod
 15014 ;; This function is called by:
 15015 ;;		_itoa
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019                           	psect	text30
 15020  0159E6                     __ptext30:
 15021                           	opt stack 0
 15022  0159E6                     _utoa:
 15023                           	opt stack 23
 15024                           
 15025                           ;incstack = 0
 15026  0159E6  C07A  F07E         	movff	utoa@val,utoa@v
 15027  0159EA  C07B  F07F         	movff	utoa@val+1,utoa@v+1
 15028  0159EE                     l5366:
 15029  0159EE  C07E  F071         	movff	utoa@v,___lwdiv@dividend
 15030  0159F2  C07F  F072         	movff	utoa@v+1,___lwdiv@dividend+1
 15031  0159F6  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 15032  0159FA  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 15033  0159FE  EC48  F0AF         	call	___lwdiv	;wreg free
 15034  015A02  C071  F07E         	movff	?___lwdiv,utoa@v
 15035  015A06  C072  F07F         	movff	?___lwdiv+1,utoa@v+1
 15036  015A0A  0100               	movlb	0	; () banked
 15037  015A0C  4B78               	infsnz	utoa@buf& (0+255),f,b
 15038  015A0E  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 15039                           
 15040                           ; BSR set to: 0
 15041  015A10  0100               	movlb	0	; () banked
 15042  015A12  517E               	movf	utoa@v& (0+255),w,b
 15043  015A14  0100               	movlb	0	; () banked
 15044  015A16  117F               	iorwf	(utoa@v+1)& (0+255),w,b
 15045  015A18  A4D8               	btfss	status,2,c
 15046  015A1A  D7E9               	goto	l5366
 15047                           
 15048                           ; BSR set to: 0
 15049                           
 15050                           ; BSR set to: 0
 15051  015A1C  C078  FFD9         	movff	utoa@buf,fsr2l
 15052  015A20  C079  FFDA         	movff	utoa@buf+1,fsr2h
 15053  015A24  0E00               	movlw	0
 15054  015A26  6EDF               	movwf	indf2,c
 15055                           
 15056                           ; BSR set to: 0
 15057  015A28  0100               	movlb	0	; () banked
 15058  015A2A  0778               	decf	utoa@buf& (0+255),f,b
 15059  015A2C  A0D8               	btfss	status,0,c
 15060  015A2E  0779               	decf	(utoa@buf+1)& (0+255),f,b
 15061  015A30                     l5376:
 15062                           
 15063                           ; BSR set to: 0
 15064  015A30  C07A  F071         	movff	utoa@val,___lwmod@dividend
 15065  015A34  C07B  F072         	movff	utoa@val+1,___lwmod@dividend+1
 15066  015A38  C07C  F073         	movff	utoa@base,___lwmod@divisor
 15067  015A3C  C07D  F074         	movff	utoa@base+1,___lwmod@divisor+1
 15068  015A40  ECB7  F0B0         	call	___lwmod	;wreg free
 15069  015A44  0100               	movlb	0	; () banked
 15070  015A46  5171               	movf	?___lwmod& (0+255),w,b
 15071  015A48  0100               	movlb	0	; () banked
 15072  015A4A  6F80               	movwf	utoa@c& (0+255),b
 15073                           
 15074                           ; BSR set to: 0
 15075  015A4C  C07A  F071         	movff	utoa@val,___lwdiv@dividend
 15076  015A50  C07B  F072         	movff	utoa@val+1,___lwdiv@dividend+1
 15077  015A54  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 15078  015A58  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 15079  015A5C  EC48  F0AF         	call	___lwdiv	;wreg free
 15080  015A60  C071  F07A         	movff	?___lwdiv,utoa@val
 15081  015A64  C072  F07B         	movff	?___lwdiv+1,utoa@val+1
 15082  015A68  0E09               	movlw	9
 15083  015A6A  0100               	movlb	0	; () banked
 15084  015A6C  6580               	cpfsgt	utoa@c& (0+255),b
 15085  015A6E  D003               	goto	l1442
 15086                           
 15087                           ; BSR set to: 0
 15088  015A70  0E07               	movlw	7
 15089  015A72  0100               	movlb	0	; () banked
 15090  015A74  2780               	addwf	utoa@c& (0+255),f,b
 15091  015A76                     l1442:
 15092                           
 15093                           ; BSR set to: 0
 15094  015A76  0E30               	movlw	48
 15095  015A78  0100               	movlb	0	; () banked
 15096  015A7A  2780               	addwf	utoa@c& (0+255),f,b
 15097                           
 15098                           ; BSR set to: 0
 15099  015A7C  C078  FFD9         	movff	utoa@buf,fsr2l
 15100  015A80  C079  FFDA         	movff	utoa@buf+1,fsr2h
 15101  015A84  C080  FFDF         	movff	utoa@c,indf2
 15102                           
 15103                           ; BSR set to: 0
 15104  015A88  0100               	movlb	0	; () banked
 15105  015A8A  0778               	decf	utoa@buf& (0+255),f,b
 15106  015A8C  A0D8               	btfss	status,0,c
 15107  015A8E  0779               	decf	(utoa@buf+1)& (0+255),f,b
 15108                           
 15109                           ; BSR set to: 0
 15110  015A90  0100               	movlb	0	; () banked
 15111  015A92  517A               	movf	utoa@val& (0+255),w,b
 15112  015A94  0100               	movlb	0	; () banked
 15113  015A96  117B               	iorwf	(utoa@val+1)& (0+255),w,b
 15114  015A98  A4D8               	btfss	status,2,c
 15115  015A9A  D7CA               	goto	l5376
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;	Return value of _utoa is never used
 15119                           
 15120                           ; BSR set to: 0
 15121  015A9C  0100               	movlb	0	; () banked
 15122  015A9E  4B78               	infsnz	utoa@buf& (0+255),f,b
 15123  015AA0  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 15124  015AA2  0012               	return	
 15125  015AA4                     __end_of_utoa:
 15126                           	opt stack 0
 15127                           tblptru	equ	0xFF8
 15128                           tblptrh	equ	0xFF7
 15129                           tblptrl	equ	0xFF6
 15130                           tablat	equ	0xFF5
 15131                           prodh	equ	0xFF4
 15132                           prodl	equ	0xFF3
 15133                           intcon	equ	0xFF2
 15134                           postinc0	equ	0xFEE
 15135                           wreg	equ	0xFE8
 15136                           indf1	equ	0xFE7
 15137                           plusw1	equ	0xFE3
 15138                           fsr1h	equ	0xFE2
 15139                           fsr1l	equ	0xFE1
 15140                           indf2	equ	0xFDF
 15141                           postinc2	equ	0xFDE
 15142                           plusw2	equ	0xFDB
 15143                           fsr2h	equ	0xFDA
 15144                           fsr2l	equ	0xFD9
 15145                           status	equ	0xFD8
 15146                           
 15147 ;; *************** function ___lwmod *****************
 15148 ;; Defined at:
 15149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;  dividend        2   17[BANK0 ] unsigned int 
 15152 ;;  divisor         2   19[BANK0 ] unsigned int 
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;  counter         1   21[BANK0 ] unsigned char 
 15155 ;; Return value:  Size  Location     Type
 15156 ;;                  2   17[BANK0 ] unsigned int 
 15157 ;; Registers used:
 15158 ;;		wreg, status,2, status,0
 15159 ;; Tracked objects:
 15160 ;;		On entry : 0/0
 15161 ;;		On exit  : 0/0
 15162 ;;		Unchanged: 0/0
 15163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15167 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15168 ;;Total ram usage:        5 bytes
 15169 ;; Hardware stack levels used:    1
 15170 ;; Hardware stack levels required when called:    3
 15171 ;; This function calls:
 15172 ;;		Nothing
 15173 ;; This function is called by:
 15174 ;;		_utoa
 15175 ;; This function uses a non-reentrant model
 15176 ;;
 15177                           
 15178                           	psect	text31
 15179  01616E                     __ptext31:
 15180                           	opt stack 0
 15181  01616E                     ___lwmod:
 15182                           	opt stack 23
 15183                           
 15184                           ; BSR set to: 0
 15185                           ;incstack = 0
 15186  01616E  0100               	movlb	0	; () banked
 15187  016170  5173               	movf	___lwmod@divisor& (0+255),w,b
 15188  016172  0100               	movlb	0	; () banked
 15189  016174  1174               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15190  016176  B4D8               	btfsc	status,2,c
 15191  016178  D026               	goto	l1531
 15192                           
 15193                           ; BSR set to: 0
 15194  01617A  0E01               	movlw	1
 15195  01617C  0100               	movlb	0	; () banked
 15196  01617E  6F75               	movwf	___lwmod@counter& (0+255),b
 15197  016180  D006               	goto	l4924
 15198  016182                     l4922:
 15199                           
 15200                           ; BSR set to: 0
 15201  016182  0100               	movlb	0	; () banked
 15202  016184  90D8               	bcf	status,0,c
 15203  016186  3773               	rlcf	___lwmod@divisor& (0+255),f,b
 15204  016188  3774               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15205  01618A  0100               	movlb	0	; () banked
 15206  01618C  2B75               	incf	___lwmod@counter& (0+255),f,b
 15207  01618E                     l4924:
 15208                           
 15209                           ; BSR set to: 0
 15210  01618E  0100               	movlb	0	; () banked
 15211  016190  AF74               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15212  016192  D7F7               	goto	l4922
 15213  016194                     l4926:
 15214                           
 15215                           ; BSR set to: 0
 15216  016194  0100               	movlb	0	; () banked
 15217  016196  5173               	movf	___lwmod@divisor& (0+255),w,b
 15218  016198  0100               	movlb	0	; () banked
 15219  01619A  5D71               	subwf	___lwmod@dividend& (0+255),w,b
 15220  01619C  0100               	movlb	0	; () banked
 15221  01619E  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15222  0161A0  0100               	movlb	0	; () banked
 15223  0161A2  5972               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15224  0161A4  A0D8               	btfss	status,0,c
 15225  0161A6  D008               	goto	l4930
 15226                           
 15227                           ; BSR set to: 0
 15228  0161A8  0100               	movlb	0	; () banked
 15229  0161AA  5173               	movf	___lwmod@divisor& (0+255),w,b
 15230  0161AC  0100               	movlb	0	; () banked
 15231  0161AE  5F71               	subwf	___lwmod@dividend& (0+255),f,b
 15232  0161B0  0100               	movlb	0	; () banked
 15233  0161B2  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15234  0161B4  0100               	movlb	0	; () banked
 15235  0161B6  5B72               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15236  0161B8                     l4930:
 15237                           
 15238                           ; BSR set to: 0
 15239  0161B8  0100               	movlb	0	; () banked
 15240  0161BA  90D8               	bcf	status,0,c
 15241  0161BC  3374               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15242  0161BE  3373               	rrcf	___lwmod@divisor& (0+255),f,b
 15243                           
 15244                           ; BSR set to: 0
 15245  0161C0  0100               	movlb	0	; () banked
 15246  0161C2  2F75               	decfsz	___lwmod@counter& (0+255),f,b
 15247  0161C4  D7E7               	goto	l4926
 15248  0161C6                     l1531:
 15249                           
 15250                           ; BSR set to: 0
 15251  0161C6  C071  F071         	movff	___lwmod@dividend,?___lwmod
 15252  0161CA  C072  F072         	movff	___lwmod@dividend+1,?___lwmod+1
 15253                           
 15254                           ; BSR set to: 0
 15255  0161CE  0012               	return		;funcret
 15256  0161D0                     __end_of___lwmod:
 15257                           	opt stack 0
 15258                           tblptru	equ	0xFF8
 15259                           tblptrh	equ	0xFF7
 15260                           tblptrl	equ	0xFF6
 15261                           tablat	equ	0xFF5
 15262                           prodh	equ	0xFF4
 15263                           prodl	equ	0xFF3
 15264                           intcon	equ	0xFF2
 15265                           postinc0	equ	0xFEE
 15266                           wreg	equ	0xFE8
 15267                           indf1	equ	0xFE7
 15268                           plusw1	equ	0xFE3
 15269                           fsr1h	equ	0xFE2
 15270                           fsr1l	equ	0xFE1
 15271                           indf2	equ	0xFDF
 15272                           postinc2	equ	0xFDE
 15273                           plusw2	equ	0xFDB
 15274                           fsr2h	equ	0xFDA
 15275                           fsr2l	equ	0xFD9
 15276                           status	equ	0xFD8
 15277                           
 15278 ;; *************** function ___lwdiv *****************
 15279 ;; Defined at:
 15280 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15281 ;; Parameters:    Size  Location     Type
 15282 ;;  dividend        2   17[BANK0 ] unsigned int 
 15283 ;;  divisor         2   19[BANK0 ] unsigned int 
 15284 ;; Auto vars:     Size  Location     Type
 15285 ;;  quotient        2   21[BANK0 ] unsigned int 
 15286 ;;  counter         1   23[BANK0 ] unsigned char 
 15287 ;; Return value:  Size  Location     Type
 15288 ;;                  2   17[BANK0 ] unsigned int 
 15289 ;; Registers used:
 15290 ;;		wreg, status,2, status,0
 15291 ;; Tracked objects:
 15292 ;;		On entry : 0/0
 15293 ;;		On exit  : 0/0
 15294 ;;		Unchanged: 0/0
 15295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15296 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15297 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15299 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15300 ;;Total ram usage:        7 bytes
 15301 ;; Hardware stack levels used:    1
 15302 ;; Hardware stack levels required when called:    3
 15303 ;; This function calls:
 15304 ;;		Nothing
 15305 ;; This function is called by:
 15306 ;;		_utoa
 15307 ;; This function uses a non-reentrant model
 15308 ;;
 15309                           
 15310                           	psect	text32
 15311  015E90                     __ptext32:
 15312                           	opt stack 0
 15313  015E90                     ___lwdiv:
 15314                           	opt stack 23
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;incstack = 0
 15318  015E90  0E00               	movlw	0
 15319  015E92  0100               	movlb	0	; () banked
 15320  015E94  6F76               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15321  015E96  0E00               	movlw	0
 15322  015E98  6F75               	movwf	___lwdiv@quotient& (0+255),b
 15323                           
 15324                           ; BSR set to: 0
 15325  015E9A  0100               	movlb	0	; () banked
 15326  015E9C  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15327  015E9E  0100               	movlb	0	; () banked
 15328  015EA0  1174               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15329  015EA2  B4D8               	btfsc	status,2,c
 15330  015EA4  D02C               	goto	l1521
 15331                           
 15332                           ; BSR set to: 0
 15333  015EA6  0E01               	movlw	1
 15334  015EA8  0100               	movlb	0	; () banked
 15335  015EAA  6F77               	movwf	___lwdiv@counter& (0+255),b
 15336  015EAC  D006               	goto	l4904
 15337  015EAE                     l4902:
 15338                           
 15339                           ; BSR set to: 0
 15340  015EAE  0100               	movlb	0	; () banked
 15341  015EB0  90D8               	bcf	status,0,c
 15342  015EB2  3773               	rlcf	___lwdiv@divisor& (0+255),f,b
 15343  015EB4  3774               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15344  015EB6  0100               	movlb	0	; () banked
 15345  015EB8  2B77               	incf	___lwdiv@counter& (0+255),f,b
 15346  015EBA                     l4904:
 15347                           
 15348                           ; BSR set to: 0
 15349  015EBA  0100               	movlb	0	; () banked
 15350  015EBC  AF74               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15351  015EBE  D7F7               	goto	l4902
 15352  015EC0                     l4906:
 15353                           
 15354                           ; BSR set to: 0
 15355  015EC0  0100               	movlb	0	; () banked
 15356  015EC2  90D8               	bcf	status,0,c
 15357  015EC4  3775               	rlcf	___lwdiv@quotient& (0+255),f,b
 15358  015EC6  3776               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15359                           
 15360                           ; BSR set to: 0
 15361  015EC8  0100               	movlb	0	; () banked
 15362  015ECA  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15363  015ECC  0100               	movlb	0	; () banked
 15364  015ECE  5D71               	subwf	___lwdiv@dividend& (0+255),w,b
 15365  015ED0  0100               	movlb	0	; () banked
 15366  015ED2  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15367  015ED4  0100               	movlb	0	; () banked
 15368  015ED6  5972               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15369  015ED8  A0D8               	btfss	status,0,c
 15370  015EDA  D00A               	goto	l4914
 15371                           
 15372                           ; BSR set to: 0
 15373  015EDC  0100               	movlb	0	; () banked
 15374  015EDE  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15375  015EE0  0100               	movlb	0	; () banked
 15376  015EE2  5F71               	subwf	___lwdiv@dividend& (0+255),f,b
 15377  015EE4  0100               	movlb	0	; () banked
 15378  015EE6  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15379  015EE8  0100               	movlb	0	; () banked
 15380  015EEA  5B72               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15381                           
 15382                           ; BSR set to: 0
 15383  015EEC  0100               	movlb	0	; () banked
 15384  015EEE  8175               	bsf	___lwdiv@quotient& (0+255),0,b
 15385  015EF0                     l4914:
 15386                           
 15387                           ; BSR set to: 0
 15388  015EF0  0100               	movlb	0	; () banked
 15389  015EF2  90D8               	bcf	status,0,c
 15390  015EF4  3374               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15391  015EF6  3373               	rrcf	___lwdiv@divisor& (0+255),f,b
 15392                           
 15393                           ; BSR set to: 0
 15394  015EF8  0100               	movlb	0	; () banked
 15395  015EFA  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 15396  015EFC  D7E1               	goto	l4906
 15397  015EFE                     l1521:
 15398                           
 15399                           ; BSR set to: 0
 15400  015EFE  C075  F071         	movff	___lwdiv@quotient,?___lwdiv
 15401  015F02  C076  F072         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15402                           
 15403                           ; BSR set to: 0
 15404  015F06  0012               	return		;funcret
 15405  015F08                     __end_of___lwdiv:
 15406                           	opt stack 0
 15407                           tblptru	equ	0xFF8
 15408                           tblptrh	equ	0xFF7
 15409                           tblptrl	equ	0xFF6
 15410                           tablat	equ	0xFF5
 15411                           prodh	equ	0xFF4
 15412                           prodl	equ	0xFF3
 15413                           intcon	equ	0xFF2
 15414                           postinc0	equ	0xFEE
 15415                           wreg	equ	0xFE8
 15416                           indf1	equ	0xFE7
 15417                           plusw1	equ	0xFE3
 15418                           fsr1h	equ	0xFE2
 15419                           fsr1l	equ	0xFE1
 15420                           indf2	equ	0xFDF
 15421                           postinc2	equ	0xFDE
 15422                           plusw2	equ	0xFDB
 15423                           fsr2h	equ	0xFDA
 15424                           fsr2l	equ	0xFD9
 15425                           status	equ	0xFD8
 15426                           
 15427 ;; *************** function _LCD_write_string *****************
 15428 ;; Defined at:
 15429 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;  buffer          2   34[BANK0 ] PTR unsigned char 
 15432 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;		None
 15435 ;; Return value:  Size  Location     Type
 15436 ;;		None               void
 15437 ;; Registers used:
 15438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;Total ram usage:        2 bytes
 15449 ;; Hardware stack levels used:    1
 15450 ;; Hardware stack levels required when called:    8
 15451 ;; This function calls:
 15452 ;;		_LCD_write_char
 15453 ;; This function is called by:
 15454 ;;		_LCD_write_integer
 15455 ;;		_LCD_Handler
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459                           	psect	text33
 15460  0164EA                     __ptext33:
 15461                           	opt stack 0
 15462  0164EA                     _LCD_write_string:
 15463                           	opt stack 21
 15464                           
 15465                           ;src\LCD_44780.c: 197: while(*buffer){
 15466                           
 15467                           ; BSR set to: 0
 15468                           ;incstack = 0
 15469  0164EA  D00A               	goto	l8436
 15470  0164EC                     l8432:
 15471                           
 15472                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 15473  0164EC  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15474  0164F0  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15475  0164F4  50DF               	movf	indf2,w,c
 15476  0164F6  ECFD  F0AE         	call	_LCD_write_char
 15477                           
 15478                           ;src\LCD_44780.c: 202: buffer++;
 15479  0164FA  0100               	movlb	0	; () banked
 15480  0164FC  4B82               	infsnz	LCD_write_string@buffer& (0+255),f,b
 15481  0164FE  2B83               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 15482  016500                     l8436:
 15483  016500  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15484  016504  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15485  016508  50DF               	movf	indf2,w,c
 15486  01650A  B4D8               	btfsc	status,2,c
 15487  01650C  0012               	return	
 15488  01650E  D7EE               	goto	l8432
 15489  016510                     __end_of_LCD_write_string:
 15490                           	opt stack 0
 15491                           tblptru	equ	0xFF8
 15492                           tblptrh	equ	0xFF7
 15493                           tblptrl	equ	0xFF6
 15494                           tablat	equ	0xFF5
 15495                           prodh	equ	0xFF4
 15496                           prodl	equ	0xFF3
 15497                           intcon	equ	0xFF2
 15498                           postinc0	equ	0xFEE
 15499                           wreg	equ	0xFE8
 15500                           indf1	equ	0xFE7
 15501                           plusw1	equ	0xFE3
 15502                           fsr1h	equ	0xFE2
 15503                           fsr1l	equ	0xFE1
 15504                           indf2	equ	0xFDF
 15505                           postinc2	equ	0xFDE
 15506                           plusw2	equ	0xFDB
 15507                           fsr2h	equ	0xFDA
 15508                           fsr2l	equ	0xFD9
 15509                           status	equ	0xFD8
 15510                           
 15511 ;; *************** function _LCD_goto_xy *****************
 15512 ;; Defined at:
 15513 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15514 ;; Parameters:    Size  Location     Type
 15515 ;;  x               1    wreg     unsigned char 
 15516 ;;  y               1   32[BANK0 ] unsigned char 
 15517 ;; Auto vars:     Size  Location     Type
 15518 ;;  x               1   33[BANK0 ] unsigned char 
 15519 ;; Return value:  Size  Location     Type
 15520 ;;		None               void
 15521 ;; Registers used:
 15522 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15523 ;; Tracked objects:
 15524 ;;		On entry : 0/0
 15525 ;;		On exit  : 0/0
 15526 ;;		Unchanged: 0/0
 15527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15528 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15531 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15532 ;;Total ram usage:        2 bytes
 15533 ;; Hardware stack levels used:    1
 15534 ;; Hardware stack levels required when called:    8
 15535 ;; This function calls:
 15536 ;;		_LCD_goto_line
 15537 ;;		_LCD_shift_cursor
 15538 ;; This function is called by:
 15539 ;;		_LCD_Handler
 15540 ;; This function uses a non-reentrant model
 15541 ;;
 15542                           
 15543                           	psect	text34
 15544  016590                     __ptext34:
 15545                           	opt stack 0
 15546  016590                     _LCD_goto_xy:
 15547                           	opt stack 21
 15548                           
 15549                           ;incstack = 0
 15550                           ;LCD_goto_xy@x stored from wreg
 15551  016590  0100               	movlb	0	; () banked
 15552  016592  6F81               	movwf	LCD_goto_xy@x& (0+255),b
 15553                           
 15554                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15555  016594  0100               	movlb	0	; () banked
 15556  016596  5180               	movf	LCD_goto_xy@y& (0+255),w,b
 15557  016598  EC1E  F0AC         	call	_LCD_goto_line
 15558                           
 15559                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15560  01659C  0100               	movlb	0	; () banked
 15561  01659E  0581               	decf	LCD_goto_xy@x& (0+255),w,b
 15562  0165A0  0100               	movlb	0	; () banked
 15563  0165A2  6F7D               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15564  0165A4  0E01               	movlw	1
 15565  0165A6  EC12  F0B1         	call	_LCD_shift_cursor
 15566  0165AA  0012               	return		;funcret
 15567  0165AC                     __end_of_LCD_goto_xy:
 15568                           	opt stack 0
 15569                           tblptru	equ	0xFF8
 15570                           tblptrh	equ	0xFF7
 15571                           tblptrl	equ	0xFF6
 15572                           tablat	equ	0xFF5
 15573                           prodh	equ	0xFF4
 15574                           prodl	equ	0xFF3
 15575                           intcon	equ	0xFF2
 15576                           postinc0	equ	0xFEE
 15577                           wreg	equ	0xFE8
 15578                           indf1	equ	0xFE7
 15579                           plusw1	equ	0xFE3
 15580                           fsr1h	equ	0xFE2
 15581                           fsr1l	equ	0xFE1
 15582                           indf2	equ	0xFDF
 15583                           postinc2	equ	0xFDE
 15584                           plusw2	equ	0xFDB
 15585                           fsr2h	equ	0xFDA
 15586                           fsr2l	equ	0xFD9
 15587                           status	equ	0xFD8
 15588                           
 15589 ;; *************** function _LCD_shift_cursor *****************
 15590 ;; Defined at:
 15591 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;  shift           1    wreg     unsigned char 
 15594 ;;  number_of_sh    1   29[BANK0 ] unsigned char 
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;  shift           1   30[BANK0 ] unsigned char 
 15597 ;;  i               1   31[BANK0 ] unsigned char 
 15598 ;; Return value:  Size  Location     Type
 15599 ;;		None               void
 15600 ;; Registers used:
 15601 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15602 ;; Tracked objects:
 15603 ;;		On entry : 0/0
 15604 ;;		On exit  : 0/0
 15605 ;;		Unchanged: 0/0
 15606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15607 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15611 ;;Total ram usage:        3 bytes
 15612 ;; Hardware stack levels used:    1
 15613 ;; Hardware stack levels required when called:    7
 15614 ;; This function calls:
 15615 ;;		_LCD_send_command
 15616 ;; This function is called by:
 15617 ;;		_LCD_goto_xy
 15618 ;; This function uses a non-reentrant model
 15619 ;;
 15620                           
 15621                           	psect	text35
 15622  016224                     __ptext35:
 15623                           	opt stack 0
 15624  016224                     _LCD_shift_cursor:
 15625                           	opt stack 21
 15626                           
 15627                           ;incstack = 0
 15628                           ;LCD_shift_cursor@shift stored from wreg
 15629  016224  0100               	movlb	0	; () banked
 15630  016226  6F7E               	movwf	LCD_shift_cursor@shift& (0+255),b
 15631                           
 15632                           ;src\LCD_44780.c: 100: unsigned char i;
 15633                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15634  016228  0E00               	movlw	0
 15635  01622A  0100               	movlb	0	; () banked
 15636  01622C  6F7F               	movwf	LCD_shift_cursor@i& (0+255),b
 15637  01622E  D019               	goto	l8416
 15638  016230                     l8412:
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15642  016230  0E00               	movlw	0
 15643  016232  0100               	movlb	0	; () banked
 15644  016234  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15645  016236  0E00               	movlw	0
 15646  016238  0100               	movlb	0	; () banked
 15647  01623A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15648  01623C  0E01               	movlw	1
 15649  01623E  0100               	movlb	0	; () banked
 15650  016240  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15651  016242  0E00               	movlw	0
 15652  016244  ECA3  F0B1         	call	_LCD_send_command
 15653                           
 15654                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15655  016248  C07E  F079         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15656  01624C  0E00               	movlw	0
 15657  01624E  0100               	movlb	0	; () banked
 15658  016250  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15659  016252  0E00               	movlw	0
 15660  016254  0100               	movlb	0	; () banked
 15661  016256  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15662  016258  0E00               	movlw	0
 15663  01625A  ECA3  F0B1         	call	_LCD_send_command
 15664  01625E  0100               	movlb	0	; () banked
 15665  016260  2B7F               	incf	LCD_shift_cursor@i& (0+255),f,b
 15666  016262                     l8416:
 15667                           
 15668                           ; BSR set to: 0
 15669  016262  0100               	movlb	0	; () banked
 15670  016264  517D               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15671  016266  0100               	movlb	0	; () banked
 15672  016268  5D7F               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15673  01626A  B0D8               	btfsc	status,0,c
 15674  01626C  0012               	return	
 15675  01626E  D7E0               	goto	l8412
 15676  016270                     __end_of_LCD_shift_cursor:
 15677                           	opt stack 0
 15678                           tblptru	equ	0xFF8
 15679                           tblptrh	equ	0xFF7
 15680                           tblptrl	equ	0xFF6
 15681                           tablat	equ	0xFF5
 15682                           prodh	equ	0xFF4
 15683                           prodl	equ	0xFF3
 15684                           intcon	equ	0xFF2
 15685                           postinc0	equ	0xFEE
 15686                           wreg	equ	0xFE8
 15687                           indf1	equ	0xFE7
 15688                           plusw1	equ	0xFE3
 15689                           fsr1h	equ	0xFE2
 15690                           fsr1l	equ	0xFE1
 15691                           indf2	equ	0xFDF
 15692                           postinc2	equ	0xFDE
 15693                           plusw2	equ	0xFDB
 15694                           fsr2h	equ	0xFDA
 15695                           fsr2l	equ	0xFD9
 15696                           status	equ	0xFD8
 15697                           
 15698 ;; *************** function _LCD_Gap *****************
 15699 ;; Defined at:
 15700 ;;		line 516 in file "RemoteCan.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;		None               void
 15707 ;; Registers used:
 15708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; Hardware stack levels required when called:    9
 15721 ;; This function calls:
 15722 ;;		_LCD_clear
 15723 ;;		_LCD_goto_line
 15724 ;;		_LCD_initialize
 15725 ;;		_LCD_write_message
 15726 ;; This function is called by:
 15727 ;;		_main
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           	psect	text36
 15732  016042                     __ptext36:
 15733                           	opt stack 0
 15734  016042                     _LCD_Gap:
 15735                           	opt stack 21
 15736                           
 15737                           ;RemoteCan.c: 517: LCD_initialize(16);
 15738                           
 15739                           ; BSR set to: 0
 15740                           ;incstack = 0
 15741  016042  0E10               	movlw	16
 15742  016044  ECE1  F0AA         	call	_LCD_initialize
 15743                           
 15744                           ;RemoteCan.c: 518: LCD_clear();
 15745  016048  EC47  F0B2         	call	_LCD_clear	;wreg free
 15746                           
 15747                           ;RemoteCan.c: 519: LCD_goto_line(1);
 15748  01604C  0E01               	movlw	1
 15749  01604E  EC1E  F0AC         	call	_LCD_goto_line
 15750                           
 15751                           ;RemoteCan.c: 520: LCD_write_message("= PARKING MESSAGES =");
 15752  016052  0E40               	movlw	low STR_18
 15753  016054  0100               	movlb	0	; () banked
 15754  016056  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15755  016058  0EFF               	movlw	high STR_18
 15756  01605A  0100               	movlb	0	; () banked
 15757  01605C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15758  01605E  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15759                           
 15760                           ;RemoteCan.c: 521: LCD_goto_line(2);
 15761  016062  0E02               	movlw	2
 15762  016064  EC1E  F0AC         	call	_LCD_goto_line
 15763                           
 15764                           ;RemoteCan.c: 522: LCD_write_message(" Parking space FOUND");
 15765  016068  0E94               	movlw	low STR_19
 15766  01606A  0100               	movlb	0	; () banked
 15767  01606C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15768  01606E  0EFF               	movlw	high STR_19
 15769  016070  0100               	movlb	0	; () banked
 15770  016072  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15771  016074  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15772                           
 15773                           ;RemoteCan.c: 523: LCD_goto_line(3);
 15774  016078  0E03               	movlw	3
 15775  01607A  EC1E  F0AC         	call	_LCD_goto_line
 15776                           
 15777                           ;RemoteCan.c: 524: LCD_write_message("->  KEEP MOVING   <-");
 15778  01607E  0EEC               	movlw	low STR_20
 15779  016080  0100               	movlb	0	; () banked
 15780  016082  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15781  016084  0EFE               	movlw	high STR_20
 15782  016086  0100               	movlb	0	; () banked
 15783  016088  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15784  01608A  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15785                           
 15786                           ;RemoteCan.c: 525: LCD_goto_line(4);
 15787  01608E  0E04               	movlw	4
 15788  016090  EC1E  F0AC         	call	_LCD_goto_line
 15789                           
 15790                           ;RemoteCan.c: 526: LCD_write_message(" until next message ");
 15791  016094  0E98               	movlw	low STR_21
 15792  016096  0100               	movlb	0	; () banked
 15793  016098  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15794  01609A  0EFE               	movlw	high STR_21
 15795  01609C  0100               	movlb	0	; () banked
 15796  01609E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15797  0160A0  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15798  0160A4  0012               	return		;funcret
 15799  0160A6                     __end_of_LCD_Gap:
 15800                           	opt stack 0
 15801                           tblptru	equ	0xFF8
 15802                           tblptrh	equ	0xFF7
 15803                           tblptrl	equ	0xFF6
 15804                           tablat	equ	0xFF5
 15805                           prodh	equ	0xFF4
 15806                           prodl	equ	0xFF3
 15807                           intcon	equ	0xFF2
 15808                           postinc0	equ	0xFEE
 15809                           wreg	equ	0xFE8
 15810                           indf1	equ	0xFE7
 15811                           plusw1	equ	0xFE3
 15812                           fsr1h	equ	0xFE2
 15813                           fsr1l	equ	0xFE1
 15814                           indf2	equ	0xFDF
 15815                           postinc2	equ	0xFDE
 15816                           plusw2	equ	0xFDB
 15817                           fsr2h	equ	0xFDA
 15818                           fsr2l	equ	0xFD9
 15819                           status	equ	0xFD8
 15820                           
 15821 ;; *************** function _LCD_Error *****************
 15822 ;; Defined at:
 15823 ;;		line 568 in file "RemoteCan.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;		None
 15826 ;; Auto vars:     Size  Location     Type
 15827 ;;		None
 15828 ;; Return value:  Size  Location     Type
 15829 ;;		None               void
 15830 ;; Registers used:
 15831 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15832 ;; Tracked objects:
 15833 ;;		On entry : 0/0
 15834 ;;		On exit  : 0/0
 15835 ;;		Unchanged: 0/0
 15836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;Total ram usage:        0 bytes
 15842 ;; Hardware stack levels used:    1
 15843 ;; Hardware stack levels required when called:    9
 15844 ;; This function calls:
 15845 ;;		_LCD_clear
 15846 ;;		_LCD_goto_line
 15847 ;;		_LCD_initialize
 15848 ;;		_LCD_write_message
 15849 ;; This function is called by:
 15850 ;;		_main
 15851 ;; This function uses a non-reentrant model
 15852 ;;
 15853                           
 15854                           	psect	text37
 15855  0160A6                     __ptext37:
 15856                           	opt stack 0
 15857  0160A6                     _LCD_Error:
 15858                           	opt stack 21
 15859                           
 15860                           ;RemoteCan.c: 569: LCD_initialize(16);
 15861                           
 15862                           ;incstack = 0
 15863  0160A6  0E10               	movlw	16
 15864  0160A8  ECE1  F0AA         	call	_LCD_initialize
 15865                           
 15866                           ;RemoteCan.c: 570: LCD_clear();
 15867  0160AC  EC47  F0B2         	call	_LCD_clear	;wreg free
 15868                           
 15869                           ;RemoteCan.c: 571: LCD_goto_line(1);
 15870  0160B0  0E01               	movlw	1
 15871  0160B2  EC1E  F0AC         	call	_LCD_goto_line
 15872                           
 15873                           ;RemoteCan.c: 572: LCD_write_message("= PARKING MESSAGES =");
 15874  0160B6  0E40               	movlw	low STR_18
 15875  0160B8  0100               	movlb	0	; () banked
 15876  0160BA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15877  0160BC  0EFF               	movlw	high STR_18
 15878  0160BE  0100               	movlb	0	; () banked
 15879  0160C0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15880  0160C2  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15881                           
 15882                           ;RemoteCan.c: 573: LCD_goto_line(2);
 15883  0160C6  0E02               	movlw	2
 15884  0160C8  EC1E  F0AC         	call	_LCD_goto_line
 15885                           
 15886                           ;RemoteCan.c: 574: LCD_write_message(" Parking procedures ");
 15887  0160CC  0EC2               	movlw	low STR_31
 15888  0160CE  0100               	movlb	0	; () banked
 15889  0160D0  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15890  0160D2  0EFE               	movlw	high STR_31
 15891  0160D4  0100               	movlb	0	; () banked
 15892  0160D6  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15893  0160D8  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15894                           
 15895                           ;RemoteCan.c: 575: LCD_goto_line(3);
 15896  0160DC  0E03               	movlw	3
 15897  0160DE  EC1E  F0AC         	call	_LCD_goto_line
 15898                           
 15899                           ;RemoteCan.c: 576: LCD_write_message("       FAILED!      ");
 15900  0160E2  0E1A               	movlw	low STR_36
 15901  0160E4  0100               	movlb	0	; () banked
 15902  0160E6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15903  0160E8  0EFE               	movlw	high STR_36
 15904  0160EA  0100               	movlb	0	; () banked
 15905  0160EC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15906  0160EE  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15907                           
 15908                           ;RemoteCan.c: 577: LCD_goto_line(4);
 15909  0160F2  0E04               	movlw	4
 15910  0160F4  EC1E  F0AC         	call	_LCD_goto_line
 15911                           
 15912                           ;RemoteCan.c: 578: LCD_write_message("   due to an error  ");
 15913  0160F8  0E83               	movlw	low STR_37
 15914  0160FA  0100               	movlb	0	; () banked
 15915  0160FC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15916  0160FE  0EFE               	movlw	high STR_37
 15917  016100  0100               	movlb	0	; () banked
 15918  016102  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15919  016104  EC14  F0B2         	call	_LCD_write_message	;wreg free
 15920  016108  0012               	return		;funcret
 15921  01610A                     __end_of_LCD_Error:
 15922                           	opt stack 0
 15923                           tblptru	equ	0xFF8
 15924                           tblptrh	equ	0xFF7
 15925                           tblptrl	equ	0xFF6
 15926                           tablat	equ	0xFF5
 15927                           prodh	equ	0xFF4
 15928                           prodl	equ	0xFF3
 15929                           intcon	equ	0xFF2
 15930                           postinc0	equ	0xFEE
 15931                           wreg	equ	0xFE8
 15932                           indf1	equ	0xFE7
 15933                           plusw1	equ	0xFE3
 15934                           fsr1h	equ	0xFE2
 15935                           fsr1l	equ	0xFE1
 15936                           indf2	equ	0xFDF
 15937                           postinc2	equ	0xFDE
 15938                           plusw2	equ	0xFDB
 15939                           fsr2h	equ	0xFDA
 15940                           fsr2l	equ	0xFD9
 15941                           status	equ	0xFD8
 15942                           
 15943 ;; *************** function _LCD_End *****************
 15944 ;; Defined at:
 15945 ;;		line 555 in file "RemoteCan.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;		None
 15948 ;; Auto vars:     Size  Location     Type
 15949 ;;		None
 15950 ;; Return value:  Size  Location     Type
 15951 ;;		None               void
 15952 ;; Registers used:
 15953 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15954 ;; Tracked objects:
 15955 ;;		On entry : 0/0
 15956 ;;		On exit  : 0/0
 15957 ;;		Unchanged: 0/0
 15958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15963 ;;Total ram usage:        0 bytes
 15964 ;; Hardware stack levels used:    1
 15965 ;; Hardware stack levels required when called:    9
 15966 ;; This function calls:
 15967 ;;		_LCD_clear
 15968 ;;		_LCD_goto_line
 15969 ;;		_LCD_initialize
 15970 ;;		_LCD_write_message
 15971 ;; This function is called by:
 15972 ;;		_main
 15973 ;; This function uses a non-reentrant model
 15974 ;;
 15975                           
 15976                           	psect	text38
 15977  01610A                     __ptext38:
 15978                           	opt stack 0
 15979  01610A                     _LCD_End:
 15980                           	opt stack 21
 15981                           
 15982                           ;RemoteCan.c: 556: LCD_initialize(16);
 15983                           
 15984                           ;incstack = 0
 15985  01610A  0E10               	movlw	16
 15986  01610C  ECE1  F0AA         	call	_LCD_initialize
 15987                           
 15988                           ;RemoteCan.c: 557: LCD_clear();
 15989  016110  EC47  F0B2         	call	_LCD_clear	;wreg free
 15990                           
 15991                           ;RemoteCan.c: 558: LCD_goto_line(1);
 15992  016114  0E01               	movlw	1
 15993  016116  EC1E  F0AC         	call	_LCD_goto_line
 15994                           
 15995                           ;RemoteCan.c: 559: LCD_write_message("= PARKING MESSAGES =");
 15996  01611A  0E40               	movlw	low STR_18
 15997  01611C  0100               	movlb	0	; () banked
 15998  01611E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15999  016120  0EFF               	movlw	high STR_18
 16000  016122  0100               	movlb	0	; () banked
 16001  016124  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16002  016126  EC14  F0B2         	call	_LCD_write_message	;wreg free
 16003                           
 16004                           ;RemoteCan.c: 560: LCD_goto_line(2);
 16005  01612A  0E02               	movlw	2
 16006  01612C  EC1E  F0AC         	call	_LCD_goto_line
 16007                           
 16008                           ;RemoteCan.c: 561: LCD_write_message(" Parking procedures ");
 16009  016130  0EC2               	movlw	low STR_31
 16010  016132  0100               	movlb	0	; () banked
 16011  016134  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16012  016136  0EFE               	movlw	high STR_31
 16013  016138  0100               	movlb	0	; () banked
 16014  01613A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16015  01613C  EC14  F0B2         	call	_LCD_write_message	;wreg free
 16016                           
 16017                           ;RemoteCan.c: 562: LCD_goto_line(3);
 16018  016140  0E03               	movlw	3
 16019  016142  EC1E  F0AC         	call	_LCD_goto_line
 16020                           
 16021                           ;RemoteCan.c: 563: LCD_write_message("    SUCCESSFULLY    ");
 16022  016146  0E44               	movlw	low STR_32
 16023  016148  0100               	movlb	0	; () banked
 16024  01614A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16025  01614C  0EFE               	movlw	high STR_32
 16026  01614E  0100               	movlb	0	; () banked
 16027  016150  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16028  016152  EC14  F0B2         	call	_LCD_write_message	;wreg free
 16029                           
 16030                           ;RemoteCan.c: 564: LCD_goto_line(4);
 16031  016156  0E04               	movlw	4
 16032  016158  EC1E  F0AC         	call	_LCD_goto_line
 16033                           
 16034                           ;RemoteCan.c: 565: LCD_write_message("     COMPLETED!     ");
 16035  01615C  0E2F               	movlw	low STR_33
 16036  01615E  0100               	movlb	0	; () banked
 16037  016160  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16038  016162  0EFE               	movlw	high STR_33
 16039  016164  0100               	movlb	0	; () banked
 16040  016166  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16041  016168  EC14  F0B2         	call	_LCD_write_message	;wreg free
 16042  01616C  0012               	return		;funcret
 16043  01616E                     __end_of_LCD_End:
 16044                           	opt stack 0
 16045                           tblptru	equ	0xFF8
 16046                           tblptrh	equ	0xFF7
 16047                           tblptrl	equ	0xFF6
 16048                           tablat	equ	0xFF5
 16049                           prodh	equ	0xFF4
 16050                           prodl	equ	0xFF3
 16051                           intcon	equ	0xFF2
 16052                           postinc0	equ	0xFEE
 16053                           wreg	equ	0xFE8
 16054                           indf1	equ	0xFE7
 16055                           plusw1	equ	0xFE3
 16056                           fsr1h	equ	0xFE2
 16057                           fsr1l	equ	0xFE1
 16058                           indf2	equ	0xFDF
 16059                           postinc2	equ	0xFDE
 16060                           plusw2	equ	0xFDB
 16061                           fsr2h	equ	0xFDA
 16062                           fsr2l	equ	0xFD9
 16063                           status	equ	0xFD8
 16064                           
 16065 ;; *************** function _LCD_write_message *****************
 16066 ;; Defined at:
 16067 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16068 ;; Parameters:    Size  Location     Type
 16069 ;;  buffer          2   34[BANK0 ] PTR const unsigned char 
 16070 ;;		 -> STR_37(21), STR_36(21), STR_35(21), STR_34(21), 
 16071 ;;		 -> STR_33(21), STR_32(21), STR_31(21), STR_30(21), 
 16072 ;;		 -> STR_29(21), STR_28(21), STR_27(21), STR_26(21), 
 16073 ;;		 -> STR_25(21), STR_24(21), STR_23(21), STR_22(21), 
 16074 ;;		 -> STR_21(21), STR_20(21), STR_19(21), STR_18(21), 
 16075 ;;		 -> STR_17(8), STR_16(8), STR_15(21), STR_14(5), 
 16076 ;;		 -> STR_13(5), STR_12(5), STR_11(21), STR_10(7), 
 16077 ;;		 -> STR_9(14), STR_8(17), STR_7(12), STR_6(21), 
 16078 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 16079 ;; Auto vars:     Size  Location     Type
 16080 ;;		None
 16081 ;; Return value:  Size  Location     Type
 16082 ;;		None               void
 16083 ;; Registers used:
 16084 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16085 ;; Tracked objects:
 16086 ;;		On entry : 0/0
 16087 ;;		On exit  : 0/0
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;Total ram usage:        2 bytes
 16095 ;; Hardware stack levels used:    1
 16096 ;; Hardware stack levels required when called:    8
 16097 ;; This function calls:
 16098 ;;		_LCD_write_char
 16099 ;; This function is called by:
 16100 ;;		_main
 16101 ;;		_LCD_Handler
 16102 ;;		_LCD_Gap
 16103 ;;		_LCD_Park
 16104 ;;		_LCD_Parking
 16105 ;;		_LCD_End
 16106 ;;		_LCD_Error
 16107 ;; This function uses a non-reentrant model
 16108 ;;
 16109                           
 16110                           	psect	text39
 16111  016428                     __ptext39:
 16112                           	opt stack 0
 16113  016428                     _LCD_write_message:
 16114                           	opt stack 22
 16115                           
 16116                           ;src\LCD_44780.c: 181: while(*buffer) {
 16117                           
 16118                           ;incstack = 0
 16119  016428  D00D               	goto	l8798
 16120  01642A                     l8794:
 16121                           
 16122                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 16123  01642A  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 16124  01642E  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 16125  016432                     	if	0	;tblptru may be non-zero
 16126  016432                     	endif
 16127  016432                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16128  016432  0E00               	movlw	low (__mediumconst shr (0+16))
 16129  016434  6EF8               	movwf	tblptru,c
 16130  016436                     	endif
 16131  016436  0008               	tblrd		*
 16132  016438  50F5               	movf	tablat,w,c
 16133  01643A  ECFD  F0AE         	call	_LCD_write_char
 16134                           
 16135                           ;src\LCD_44780.c: 186: buffer++;
 16136  01643E  0100               	movlb	0	; () banked
 16137  016440  4B82               	infsnz	LCD_write_message@buffer& (0+255),f,b
 16138  016442  2B83               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 16139  016444                     l8798:
 16140  016444  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 16141  016448  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 16142  01644C                     	if	0	;tblptru may be non-zero
 16143  01644C                     	endif
 16144  01644C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16145  01644C  0E00               	movlw	low (__mediumconst shr (0+16))
 16146  01644E  6EF8               	movwf	tblptru,c
 16147  016450                     	endif
 16148  016450  0008               	tblrd		*
 16149  016452  50F5               	movf	tablat,w,c
 16150  016454  0900               	iorlw	0
 16151  016456  B4D8               	btfsc	status,2,c
 16152  016458  0012               	return	
 16153  01645A  D7E7               	goto	l8794
 16154  01645C                     __end_of_LCD_write_message:
 16155                           	opt stack 0
 16156                           tblptru	equ	0xFF8
 16157                           tblptrh	equ	0xFF7
 16158                           tblptrl	equ	0xFF6
 16159                           tablat	equ	0xFF5
 16160                           prodh	equ	0xFF4
 16161                           prodl	equ	0xFF3
 16162                           intcon	equ	0xFF2
 16163                           postinc0	equ	0xFEE
 16164                           wreg	equ	0xFE8
 16165                           indf1	equ	0xFE7
 16166                           plusw1	equ	0xFE3
 16167                           fsr1h	equ	0xFE2
 16168                           fsr1l	equ	0xFE1
 16169                           indf2	equ	0xFDF
 16170                           postinc2	equ	0xFDE
 16171                           plusw2	equ	0xFDB
 16172                           fsr2h	equ	0xFDA
 16173                           fsr2l	equ	0xFD9
 16174                           status	equ	0xFD8
 16175                           
 16176 ;; *************** function _LCD_write_char *****************
 16177 ;; Defined at:
 16178 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16179 ;; Parameters:    Size  Location     Type
 16180 ;;  value           1    wreg     unsigned char 
 16181 ;; Auto vars:     Size  Location     Type
 16182 ;;  value           1   33[BANK0 ] unsigned char 
 16183 ;;  D0              1   32[BANK0 ] unsigned char 
 16184 ;;  D1              1   31[BANK0 ] unsigned char 
 16185 ;;  D2              1   30[BANK0 ] unsigned char 
 16186 ;;  D3              1   29[BANK0 ] unsigned char 
 16187 ;; Return value:  Size  Location     Type
 16188 ;;		None               void
 16189 ;; Registers used:
 16190 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16191 ;; Tracked objects:
 16192 ;;		On entry : 0/0
 16193 ;;		On exit  : 0/0
 16194 ;;		Unchanged: 0/0
 16195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16197 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16199 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16200 ;;Total ram usage:        5 bytes
 16201 ;; Hardware stack levels used:    1
 16202 ;; Hardware stack levels required when called:    7
 16203 ;; This function calls:
 16204 ;;		_LCD_send_command
 16205 ;; This function is called by:
 16206 ;;		_LCD_write_message
 16207 ;;		_LCD_write_string
 16208 ;; This function uses a non-reentrant model
 16209 ;;
 16210                           
 16211                           	psect	text40
 16212  015DFA                     __ptext40:
 16213                           	opt stack 0
 16214  015DFA                     _LCD_write_char:
 16215                           	opt stack 22
 16216                           
 16217                           ;incstack = 0
 16218                           ;LCD_write_char@value stored from wreg
 16219  015DFA  0100               	movlb	0	; () banked
 16220  015DFC  6F81               	movwf	LCD_write_char@value& (0+255),b
 16221                           
 16222                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 16223                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 16224  015DFE  848D               	bsf	3981,2,c	;volatile
 16225                           
 16226                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 16227  015E00  0100               	movlb	0	; () banked
 16228  015E02  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 16229  015E04  0B01               	andlw	1
 16230  015E06  0100               	movlb	0	; () banked
 16231  015E08  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 16232                           
 16233                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 16234  015E0A  0100               	movlb	0	; () banked
 16235  015E0C  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 16236  015E0E  46E8               	rlncf	wreg,f,c
 16237  015E10  0B03               	andlw	3
 16238  015E12  0B01               	andlw	1
 16239  015E14  0100               	movlb	0	; () banked
 16240  015E16  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 16241                           
 16242                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 16243  015E18  0100               	movlb	0	; () banked
 16244  015E1A  3981               	swapf	LCD_write_char@value& (0+255),w,b
 16245  015E1C  42E8               	rrncf	wreg,f,c
 16246  015E1E  0B07               	andlw	7
 16247  015E20  0B01               	andlw	1
 16248  015E22  0100               	movlb	0	; () banked
 16249  015E24  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 16250                           
 16251                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 16252  015E26  0100               	movlb	0	; () banked
 16253  015E28  3981               	swapf	LCD_write_char@value& (0+255),w,b
 16254  015E2A  0B0F               	andlw	15
 16255  015E2C  0B01               	andlw	1
 16256  015E2E  0100               	movlb	0	; () banked
 16257  015E30  6F80               	movwf	LCD_write_char@D0& (0+255),b
 16258                           
 16259                           ; BSR set to: 0
 16260                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 16261  015E32  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 16262  015E36  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 16263  015E3A  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 16264  015E3E  0100               	movlb	0	; () banked
 16265  015E40  517D               	movf	LCD_write_char@D3& (0+255),w,b
 16266  015E42  ECA3  F0B1         	call	_LCD_send_command
 16267                           
 16268                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 16269  015E46  0100               	movlb	0	; () banked
 16270  015E48  3981               	swapf	LCD_write_char@value& (0+255),w,b
 16271  015E4A  46E8               	rlncf	wreg,f,c
 16272  015E4C  0B1F               	andlw	31
 16273  015E4E  0B01               	andlw	1
 16274  015E50  0100               	movlb	0	; () banked
 16275  015E52  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 16279  015E54  0100               	movlb	0	; () banked
 16280  015E56  4181               	rrncf	LCD_write_char@value& (0+255),w,b
 16281  015E58  42E8               	rrncf	wreg,f,c
 16282  015E5A  0B3F               	andlw	63
 16283  015E5C  0B01               	andlw	1
 16284  015E5E  0100               	movlb	0	; () banked
 16285  015E60  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 16289  015E62  0100               	movlb	0	; () banked
 16290  015E64  90D8               	bcf	status,0,c
 16291  015E66  3181               	rrcf	LCD_write_char@value& (0+255),w,b
 16292  015E68  0B01               	andlw	1
 16293  015E6A  0100               	movlb	0	; () banked
 16294  015E6C  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 16295                           
 16296                           ; BSR set to: 0
 16297                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 16298  015E6E  0100               	movlb	0	; () banked
 16299  015E70  5181               	movf	LCD_write_char@value& (0+255),w,b
 16300  015E72  0B01               	andlw	1
 16301  015E74  0100               	movlb	0	; () banked
 16302  015E76  6F80               	movwf	LCD_write_char@D0& (0+255),b
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 16306  015E78  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 16307  015E7C  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 16308  015E80  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 16309  015E84  0100               	movlb	0	; () banked
 16310  015E86  517D               	movf	LCD_write_char@D3& (0+255),w,b
 16311  015E88  ECA3  F0B1         	call	_LCD_send_command
 16312                           
 16313                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 16314  015E8C  948D               	bcf	3981,2,c	;volatile
 16315  015E8E  0012               	return		;funcret
 16316  015E90                     __end_of_LCD_write_char:
 16317                           	opt stack 0
 16318                           tblptru	equ	0xFF8
 16319                           tblptrh	equ	0xFF7
 16320                           tblptrl	equ	0xFF6
 16321                           tablat	equ	0xFF5
 16322                           prodh	equ	0xFF4
 16323                           prodl	equ	0xFF3
 16324                           intcon	equ	0xFF2
 16325                           postinc0	equ	0xFEE
 16326                           wreg	equ	0xFE8
 16327                           indf1	equ	0xFE7
 16328                           plusw1	equ	0xFE3
 16329                           fsr1h	equ	0xFE2
 16330                           fsr1l	equ	0xFE1
 16331                           indf2	equ	0xFDF
 16332                           postinc2	equ	0xFDE
 16333                           plusw2	equ	0xFDB
 16334                           fsr2h	equ	0xFDA
 16335                           fsr2l	equ	0xFD9
 16336                           status	equ	0xFD8
 16337                           
 16338 ;; *************** function _LCD_initialize *****************
 16339 ;; Defined at:
 16340 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16341 ;; Parameters:    Size  Location     Type
 16342 ;;  quartz_frequ    1    wreg     unsigned char 
 16343 ;; Auto vars:     Size  Location     Type
 16344 ;;  quartz_frequ    1   31[BANK0 ] unsigned char 
 16345 ;; Return value:  Size  Location     Type
 16346 ;;		None               void
 16347 ;; Registers used:
 16348 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16349 ;; Tracked objects:
 16350 ;;		On entry : 0/0
 16351 ;;		On exit  : 0/0
 16352 ;;		Unchanged: 0/0
 16353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16358 ;;Total ram usage:        1 bytes
 16359 ;; Hardware stack levels used:    1
 16360 ;; Hardware stack levels required when called:    8
 16361 ;; This function calls:
 16362 ;;		_LCD_clear
 16363 ;;		_LCD_cursor
 16364 ;;		_LCD_send_command
 16365 ;;		_delay_ms
 16366 ;;		_delay_set_quartz
 16367 ;; This function is called by:
 16368 ;;		_main
 16369 ;;		_LCD_Handler
 16370 ;;		_LCD_Gap
 16371 ;;		_LCD_Park
 16372 ;;		_LCD_Parking
 16373 ;;		_LCD_End
 16374 ;;		_LCD_Error
 16375 ;;		_board_initialization
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           	psect	text41
 16380  0155C2                     __ptext41:
 16381                           	opt stack 0
 16382  0155C2                     _LCD_initialize:
 16383                           	opt stack 21
 16384                           
 16385                           ;incstack = 0
 16386                           ;LCD_initialize@quartz_frequency stored from wreg
 16387  0155C2  0100               	movlb	0	; () banked
 16388  0155C4  6F7F               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 16389                           
 16390                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 16391  0155C6  0100               	movlb	0	; () banked
 16392  0155C8  517F               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 16393  0155CA  EC08  F0B3         	call	_delay_set_quartz
 16394                           
 16395                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 16396  0155CE  948D               	bcf	3981,2,c	;volatile
 16397                           
 16398                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 16399  0155D0  928B               	bcf	3979,1,c	;volatile
 16400                           
 16401                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 16402  0155D2  908B               	bcf	3979,0,c	;volatile
 16403                           
 16404                           ;src\LCD_44780.c: 291: delay_ms (100);
 16405  0155D4  0E00               	movlw	0
 16406  0155D6  0100               	movlb	0	; () banked
 16407  0155D8  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16408  0155DA  0E64               	movlw	100
 16409  0155DC  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16410  0155DE  ECC0  F0B1         	call	_delay_ms	;wreg free
 16411                           
 16412                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 16413  0155E2  0E00               	movlw	0
 16414  0155E4  0100               	movlb	0	; () banked
 16415  0155E6  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16416  0155E8  0E01               	movlw	1
 16417  0155EA  0100               	movlb	0	; () banked
 16418  0155EC  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16419  0155EE  0E01               	movlw	1
 16420  0155F0  0100               	movlb	0	; () banked
 16421  0155F2  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16422  0155F4  0E00               	movlw	0
 16423  0155F6  ECA3  F0B1         	call	_LCD_send_command
 16424                           
 16425                           ;src\LCD_44780.c: 293: delay_ms (100);
 16426  0155FA  0E00               	movlw	0
 16427  0155FC  0100               	movlb	0	; () banked
 16428  0155FE  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16429  015600  0E64               	movlw	100
 16430  015602  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16431  015604  ECC0  F0B1         	call	_delay_ms	;wreg free
 16432                           
 16433                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 16434  015608  0E00               	movlw	0
 16435  01560A  0100               	movlb	0	; () banked
 16436  01560C  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16437  01560E  0E01               	movlw	1
 16438  015610  0100               	movlb	0	; () banked
 16439  015612  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16440  015614  0E01               	movlw	1
 16441  015616  0100               	movlb	0	; () banked
 16442  015618  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16443  01561A  0E00               	movlw	0
 16444  01561C  ECA3  F0B1         	call	_LCD_send_command
 16445                           
 16446                           ;src\LCD_44780.c: 295: delay_ms (10);
 16447  015620  0E00               	movlw	0
 16448  015622  0100               	movlb	0	; () banked
 16449  015624  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16450  015626  0E0A               	movlw	10
 16451  015628  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16452  01562A  ECC0  F0B1         	call	_delay_ms	;wreg free
 16453                           
 16454                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 16455  01562E  0E00               	movlw	0
 16456  015630  0100               	movlb	0	; () banked
 16457  015632  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16458  015634  0E01               	movlw	1
 16459  015636  0100               	movlb	0	; () banked
 16460  015638  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16461  01563A  0E01               	movlw	1
 16462  01563C  0100               	movlb	0	; () banked
 16463  01563E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16464  015640  0E00               	movlw	0
 16465  015642  ECA3  F0B1         	call	_LCD_send_command
 16466                           
 16467                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 16468  015646  0E00               	movlw	0
 16469  015648  0100               	movlb	0	; () banked
 16470  01564A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16471  01564C  0E01               	movlw	1
 16472  01564E  0100               	movlb	0	; () banked
 16473  015650  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16474  015652  0E00               	movlw	0
 16475  015654  0100               	movlb	0	; () banked
 16476  015656  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16477  015658  0E00               	movlw	0
 16478  01565A  ECA3  F0B1         	call	_LCD_send_command
 16479                           
 16480                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 16481  01565E  0E00               	movlw	0
 16482  015660  0100               	movlb	0	; () banked
 16483  015662  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16484  015664  0E01               	movlw	1
 16485  015666  0100               	movlb	0	; () banked
 16486  015668  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16487  01566A  0E00               	movlw	0
 16488  01566C  0100               	movlb	0	; () banked
 16489  01566E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16490  015670  0E00               	movlw	0
 16491  015672  ECA3  F0B1         	call	_LCD_send_command
 16492                           
 16493                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 16494  015676  0E00               	movlw	0
 16495  015678  0100               	movlb	0	; () banked
 16496  01567A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16497  01567C  0E00               	movlw	0
 16498  01567E  0100               	movlb	0	; () banked
 16499  015680  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16500  015682  0E00               	movlw	0
 16501  015684  0100               	movlb	0	; () banked
 16502  015686  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16503  015688  0E01               	movlw	1
 16504  01568A  ECA3  F0B1         	call	_LCD_send_command
 16505                           
 16506                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 16507  01568E  0E00               	movlw	0
 16508  015690  0100               	movlb	0	; () banked
 16509  015692  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16510  015694  0E00               	movlw	0
 16511  015696  0100               	movlb	0	; () banked
 16512  015698  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16513  01569A  0E00               	movlw	0
 16514  01569C  0100               	movlb	0	; () banked
 16515  01569E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16516  0156A0  0E00               	movlw	0
 16517  0156A2  ECA3  F0B1         	call	_LCD_send_command
 16518                           
 16519                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 16520  0156A6  0E00               	movlw	0
 16521  0156A8  0100               	movlb	0	; () banked
 16522  0156AA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16523  0156AC  0E00               	movlw	0
 16524  0156AE  0100               	movlb	0	; () banked
 16525  0156B0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16526  0156B2  0E00               	movlw	0
 16527  0156B4  0100               	movlb	0	; () banked
 16528  0156B6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16529  0156B8  0E01               	movlw	1
 16530  0156BA  ECA3  F0B1         	call	_LCD_send_command
 16531                           
 16532                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 16533  0156BE  0E00               	movlw	0
 16534  0156C0  0100               	movlb	0	; () banked
 16535  0156C2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16536  0156C4  0E00               	movlw	0
 16537  0156C6  0100               	movlb	0	; () banked
 16538  0156C8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16539  0156CA  0E00               	movlw	0
 16540  0156CC  0100               	movlb	0	; () banked
 16541  0156CE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16542  0156D0  0E00               	movlw	0
 16543  0156D2  ECA3  F0B1         	call	_LCD_send_command
 16544                           
 16545                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 16546  0156D6  0E00               	movlw	0
 16547  0156D8  0100               	movlb	0	; () banked
 16548  0156DA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16549  0156DC  0E00               	movlw	0
 16550  0156DE  0100               	movlb	0	; () banked
 16551  0156E0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16552  0156E2  0E01               	movlw	1
 16553  0156E4  0100               	movlb	0	; () banked
 16554  0156E6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16555  0156E8  0E00               	movlw	0
 16556  0156EA  ECA3  F0B1         	call	_LCD_send_command
 16557                           
 16558                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 16559  0156EE  0E00               	movlw	0
 16560  0156F0  0100               	movlb	0	; () banked
 16561  0156F2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16562  0156F4  0E00               	movlw	0
 16563  0156F6  0100               	movlb	0	; () banked
 16564  0156F8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16565  0156FA  0E00               	movlw	0
 16566  0156FC  0100               	movlb	0	; () banked
 16567  0156FE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16568  015700  0E00               	movlw	0
 16569  015702  ECA3  F0B1         	call	_LCD_send_command
 16570                           
 16571                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 16572  015706  0E01               	movlw	1
 16573  015708  0100               	movlb	0	; () banked
 16574  01570A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16575  01570C  0E01               	movlw	1
 16576  01570E  0100               	movlb	0	; () banked
 16577  015710  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16578  015712  0E00               	movlw	0
 16579  015714  0100               	movlb	0	; () banked
 16580  015716  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16581  015718  0E00               	movlw	0
 16582  01571A  ECA3  F0B1         	call	_LCD_send_command
 16583                           
 16584                           ;src\LCD_44780.c: 312: LCD_clear ();
 16585  01571E  EC47  F0B2         	call	_LCD_clear	;wreg free
 16586                           
 16587                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 16588  015722  0E00               	movlw	0
 16589  015724  0100               	movlb	0	; () banked
 16590  015726  6F7D               	movwf	LCD_cursor@blinking& (0+255),b
 16591  015728  0E00               	movlw	0
 16592  01572A  EC2E  F0B2         	call	_LCD_cursor
 16593  01572E  0012               	return		;funcret
 16594  015730                     __end_of_LCD_initialize:
 16595                           	opt stack 0
 16596                           tblptru	equ	0xFF8
 16597                           tblptrh	equ	0xFF7
 16598                           tblptrl	equ	0xFF6
 16599                           tablat	equ	0xFF5
 16600                           prodh	equ	0xFF4
 16601                           prodl	equ	0xFF3
 16602                           intcon	equ	0xFF2
 16603                           postinc0	equ	0xFEE
 16604                           wreg	equ	0xFE8
 16605                           indf1	equ	0xFE7
 16606                           plusw1	equ	0xFE3
 16607                           fsr1h	equ	0xFE2
 16608                           fsr1l	equ	0xFE1
 16609                           indf2	equ	0xFDF
 16610                           postinc2	equ	0xFDE
 16611                           plusw2	equ	0xFDB
 16612                           fsr2h	equ	0xFDA
 16613                           fsr2l	equ	0xFD9
 16614                           status	equ	0xFD8
 16615                           
 16616 ;; *************** function _delay_set_quartz *****************
 16617 ;; Defined at:
 16618 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16619 ;; Parameters:    Size  Location     Type
 16620 ;;  frequency       1    wreg     unsigned char 
 16621 ;; Auto vars:     Size  Location     Type
 16622 ;;  frequency       1   17[BANK0 ] unsigned char 
 16623 ;; Return value:  Size  Location     Type
 16624 ;;		None               void
 16625 ;; Registers used:
 16626 ;;		wreg
 16627 ;; Tracked objects:
 16628 ;;		On entry : 0/0
 16629 ;;		On exit  : 0/0
 16630 ;;		Unchanged: 0/0
 16631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16636 ;;Total ram usage:        1 bytes
 16637 ;; Hardware stack levels used:    1
 16638 ;; Hardware stack levels required when called:    3
 16639 ;; This function calls:
 16640 ;;		Nothing
 16641 ;; This function is called by:
 16642 ;;		_LCD_initialize
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text42
 16647  016610                     __ptext42:
 16648                           	opt stack 0
 16649  016610                     _delay_set_quartz:
 16650                           	opt stack 25
 16651                           
 16652                           ;incstack = 0
 16653                           ;delay_set_quartz@frequency stored from wreg
 16654  016610  0100               	movlb	0	; () banked
 16655  016612  6F71               	movwf	delay_set_quartz@frequency& (0+255),b
 16656                           
 16657                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 16658  016614  C071  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 16659  016618  0012               	return		;funcret
 16660  01661A                     __end_of_delay_set_quartz:
 16661                           	opt stack 0
 16662                           tblptru	equ	0xFF8
 16663                           tblptrh	equ	0xFF7
 16664                           tblptrl	equ	0xFF6
 16665                           tablat	equ	0xFF5
 16666                           prodh	equ	0xFF4
 16667                           prodl	equ	0xFF3
 16668                           intcon	equ	0xFF2
 16669                           postinc0	equ	0xFEE
 16670                           wreg	equ	0xFE8
 16671                           indf1	equ	0xFE7
 16672                           plusw1	equ	0xFE3
 16673                           fsr1h	equ	0xFE2
 16674                           fsr1l	equ	0xFE1
 16675                           indf2	equ	0xFDF
 16676                           postinc2	equ	0xFDE
 16677                           plusw2	equ	0xFDB
 16678                           fsr2h	equ	0xFDA
 16679                           fsr2l	equ	0xFD9
 16680                           status	equ	0xFD8
 16681                           
 16682 ;; *************** function _LCD_cursor *****************
 16683 ;; Defined at:
 16684 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;  active          1    wreg     unsigned char 
 16687 ;;  blinking        1   29[BANK0 ] unsigned char 
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;  active          1   30[BANK0 ] unsigned char 
 16690 ;; Return value:  Size  Location     Type
 16691 ;;		None               void
 16692 ;; Registers used:
 16693 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16694 ;; Tracked objects:
 16695 ;;		On entry : 0/0
 16696 ;;		On exit  : 0/0
 16697 ;;		Unchanged: 0/0
 16698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16699 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;Total ram usage:        2 bytes
 16704 ;; Hardware stack levels used:    1
 16705 ;; Hardware stack levels required when called:    7
 16706 ;; This function calls:
 16707 ;;		_LCD_send_command
 16708 ;; This function is called by:
 16709 ;;		_LCD_initialize
 16710 ;; This function uses a non-reentrant model
 16711 ;;
 16712                           
 16713                           	psect	text43
 16714  01645C                     __ptext43:
 16715                           	opt stack 0
 16716  01645C                     _LCD_cursor:
 16717                           	opt stack 21
 16718                           
 16719                           ;incstack = 0
 16720                           ;LCD_cursor@active stored from wreg
 16721  01645C  0100               	movlb	0	; () banked
 16722  01645E  6F7E               	movwf	LCD_cursor@active& (0+255),b
 16723                           
 16724                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 16725  016460  0E00               	movlw	0
 16726  016462  0100               	movlb	0	; () banked
 16727  016464  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16728  016466  0E00               	movlw	0
 16729  016468  0100               	movlb	0	; () banked
 16730  01646A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16731  01646C  0E00               	movlw	0
 16732  01646E  0100               	movlb	0	; () banked
 16733  016470  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16734  016472  0E00               	movlw	0
 16735  016474  ECA3  F0B1         	call	_LCD_send_command
 16736                           
 16737                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 16738  016478  0E01               	movlw	1
 16739  01647A  0100               	movlb	0	; () banked
 16740  01647C  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16741  01647E  C07E  F07A         	movff	LCD_cursor@active,LCD_send_command@D1
 16742  016482  C07D  F07B         	movff	LCD_cursor@blinking,LCD_send_command@D0
 16743  016486  0E01               	movlw	1
 16744  016488  ECA3  F0B1         	call	_LCD_send_command
 16745  01648C  0012               	return		;funcret
 16746  01648E                     __end_of_LCD_cursor:
 16747                           	opt stack 0
 16748                           tblptru	equ	0xFF8
 16749                           tblptrh	equ	0xFF7
 16750                           tblptrl	equ	0xFF6
 16751                           tablat	equ	0xFF5
 16752                           prodh	equ	0xFF4
 16753                           prodl	equ	0xFF3
 16754                           intcon	equ	0xFF2
 16755                           postinc0	equ	0xFEE
 16756                           wreg	equ	0xFE8
 16757                           indf1	equ	0xFE7
 16758                           plusw1	equ	0xFE3
 16759                           fsr1h	equ	0xFE2
 16760                           fsr1l	equ	0xFE1
 16761                           indf2	equ	0xFDF
 16762                           postinc2	equ	0xFDE
 16763                           plusw2	equ	0xFDB
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function _LCD_clear *****************
 16769 ;; Defined at:
 16770 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;		None
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;		None
 16775 ;; Return value:  Size  Location     Type
 16776 ;;		None               void
 16777 ;; Registers used:
 16778 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16788 ;;Total ram usage:        0 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:    7
 16791 ;; This function calls:
 16792 ;;		_LCD_send_command
 16793 ;; This function is called by:
 16794 ;;		_LCD_initialize
 16795 ;;		_LCD_Handler
 16796 ;;		_LCD_Gap
 16797 ;;		_LCD_Park
 16798 ;;		_LCD_Parking
 16799 ;;		_LCD_End
 16800 ;;		_LCD_Error
 16801 ;;		_board_initialization
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805                           	psect	text44
 16806  01648E                     __ptext44:
 16807                           	opt stack 0
 16808  01648E                     _LCD_clear:
 16809                           	opt stack 21
 16810                           
 16811                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16812                           
 16813                           ;incstack = 0
 16814  01648E  0E00               	movlw	0
 16815  016490  0100               	movlb	0	; () banked
 16816  016492  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16817  016494  0E00               	movlw	0
 16818  016496  0100               	movlb	0	; () banked
 16819  016498  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16820  01649A  0E00               	movlw	0
 16821  01649C  0100               	movlb	0	; () banked
 16822  01649E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16823  0164A0  0E00               	movlw	0
 16824  0164A2  ECA3  F0B1         	call	_LCD_send_command
 16825                           
 16826                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16827  0164A6  0E00               	movlw	0
 16828  0164A8  0100               	movlb	0	; () banked
 16829  0164AA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16830  0164AC  0E00               	movlw	0
 16831  0164AE  0100               	movlb	0	; () banked
 16832  0164B0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16833  0164B2  0E01               	movlw	1
 16834  0164B4  0100               	movlb	0	; () banked
 16835  0164B6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16836  0164B8  0E00               	movlw	0
 16837  0164BA  ECA3  F0B1         	call	_LCD_send_command
 16838  0164BE  0012               	return		;funcret
 16839  0164C0                     __end_of_LCD_clear:
 16840                           	opt stack 0
 16841                           tblptru	equ	0xFF8
 16842                           tblptrh	equ	0xFF7
 16843                           tblptrl	equ	0xFF6
 16844                           tablat	equ	0xFF5
 16845                           prodh	equ	0xFF4
 16846                           prodl	equ	0xFF3
 16847                           intcon	equ	0xFF2
 16848                           postinc0	equ	0xFEE
 16849                           wreg	equ	0xFE8
 16850                           indf1	equ	0xFE7
 16851                           plusw1	equ	0xFE3
 16852                           fsr1h	equ	0xFE2
 16853                           fsr1l	equ	0xFE1
 16854                           indf2	equ	0xFDF
 16855                           postinc2	equ	0xFDE
 16856                           plusw2	equ	0xFDB
 16857                           fsr2h	equ	0xFDA
 16858                           fsr2l	equ	0xFD9
 16859                           status	equ	0xFD8
 16860                           
 16861 ;; *************** function _LCD_goto_line *****************
 16862 ;; Defined at:
 16863 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16864 ;; Parameters:    Size  Location     Type
 16865 ;;  line            1    wreg     unsigned char 
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  line            1   29[BANK0 ] unsigned char 
 16868 ;; Return value:  Size  Location     Type
 16869 ;;		None               void
 16870 ;; Registers used:
 16871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16872 ;; Tracked objects:
 16873 ;;		On entry : 0/0
 16874 ;;		On exit  : 0/0
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16881 ;;Total ram usage:        1 bytes
 16882 ;; Hardware stack levels used:    1
 16883 ;; Hardware stack levels required when called:    7
 16884 ;; This function calls:
 16885 ;;		_LCD_send_command
 16886 ;; This function is called by:
 16887 ;;		_LCD_goto_xy
 16888 ;;		_main
 16889 ;;		_LCD_Handler
 16890 ;;		_LCD_Gap
 16891 ;;		_LCD_Park
 16892 ;;		_LCD_Parking
 16893 ;;		_LCD_End
 16894 ;;		_LCD_Error
 16895 ;;		_board_initialization
 16896 ;; This function uses a non-reentrant model
 16897 ;;
 16898                           
 16899                           	psect	text45
 16900  01583C                     __ptext45:
 16901                           	opt stack 0
 16902  01583C                     _LCD_goto_line:
 16903                           	opt stack 22
 16904                           
 16905                           ;incstack = 0
 16906                           ;LCD_goto_line@line stored from wreg
 16907  01583C  0100               	movlb	0	; () banked
 16908  01583E  6F7D               	movwf	LCD_goto_line@line& (0+255),b
 16909                           
 16910                           ;src\LCD_44780.c: 113: switch(line) {
 16911  015840  D064               	goto	l8428
 16912  015842                     l8420:
 16913  015842  0E00               	movlw	0
 16914  015844  0100               	movlb	0	; () banked
 16915  015846  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16916  015848  0E00               	movlw	0
 16917  01584A  0100               	movlb	0	; () banked
 16918  01584C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16919  01584E  0E00               	movlw	0
 16920  015850  0100               	movlb	0	; () banked
 16921  015852  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16922  015854  0E01               	movlw	1
 16923  015856  ECA3  F0B1         	call	_LCD_send_command
 16924                           
 16925                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16926  01585A  0E00               	movlw	0
 16927  01585C  0100               	movlb	0	; () banked
 16928  01585E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16929  015860  0E00               	movlw	0
 16930  015862  0100               	movlb	0	; () banked
 16931  015864  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16932  015866  0E00               	movlw	0
 16933  015868  0100               	movlb	0	; () banked
 16934  01586A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16935  01586C  0E00               	movlw	0
 16936  01586E  ECA3  F0B1         	call	_LCD_send_command
 16937                           
 16938                           ;src\LCD_44780.c: 117: break;
 16939  015872  0012               	return	
 16940  015874                     l8422:
 16941  015874  0E01               	movlw	1
 16942  015876  0100               	movlb	0	; () banked
 16943  015878  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16944  01587A  0E00               	movlw	0
 16945  01587C  0100               	movlb	0	; () banked
 16946  01587E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16947  015880  0E00               	movlw	0
 16948  015882  0100               	movlb	0	; () banked
 16949  015884  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16950  015886  0E01               	movlw	1
 16951  015888  ECA3  F0B1         	call	_LCD_send_command
 16952                           
 16953                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16954  01588C  0E00               	movlw	0
 16955  01588E  0100               	movlb	0	; () banked
 16956  015890  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16957  015892  0E00               	movlw	0
 16958  015894  0100               	movlb	0	; () banked
 16959  015896  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16960  015898  0E00               	movlw	0
 16961  01589A  0100               	movlb	0	; () banked
 16962  01589C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16963  01589E  0E00               	movlw	0
 16964  0158A0  ECA3  F0B1         	call	_LCD_send_command
 16965                           
 16966                           ;src\LCD_44780.c: 121: break;
 16967  0158A4  0012               	return	
 16968  0158A6                     l8424:
 16969  0158A6  0E00               	movlw	0
 16970  0158A8  0100               	movlb	0	; () banked
 16971  0158AA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16972  0158AC  0E00               	movlw	0
 16973  0158AE  0100               	movlb	0	; () banked
 16974  0158B0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16975  0158B2  0E01               	movlw	1
 16976  0158B4  0100               	movlb	0	; () banked
 16977  0158B6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16978  0158B8  0E01               	movlw	1
 16979  0158BA  ECA3  F0B1         	call	_LCD_send_command
 16980                           
 16981                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16982  0158BE  0E01               	movlw	1
 16983  0158C0  0100               	movlb	0	; () banked
 16984  0158C2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16985  0158C4  0E00               	movlw	0
 16986  0158C6  0100               	movlb	0	; () banked
 16987  0158C8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16988  0158CA  0E00               	movlw	0
 16989  0158CC  0100               	movlb	0	; () banked
 16990  0158CE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16991  0158D0  0E00               	movlw	0
 16992  0158D2  ECA3  F0B1         	call	_LCD_send_command
 16993                           
 16994                           ;src\LCD_44780.c: 125: break;
 16995  0158D6  0012               	return	
 16996  0158D8                     l8426:
 16997  0158D8  0E01               	movlw	1
 16998  0158DA  0100               	movlb	0	; () banked
 16999  0158DC  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17000  0158DE  0E00               	movlw	0
 17001  0158E0  0100               	movlb	0	; () banked
 17002  0158E2  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17003  0158E4  0E01               	movlw	1
 17004  0158E6  0100               	movlb	0	; () banked
 17005  0158E8  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17006  0158EA  0E01               	movlw	1
 17007  0158EC  ECA3  F0B1         	call	_LCD_send_command
 17008                           
 17009                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 17010  0158F0  0E01               	movlw	1
 17011  0158F2  0100               	movlb	0	; () banked
 17012  0158F4  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17013  0158F6  0E00               	movlw	0
 17014  0158F8  0100               	movlb	0	; () banked
 17015  0158FA  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17016  0158FC  0E00               	movlw	0
 17017  0158FE  0100               	movlb	0	; () banked
 17018  015900  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17019  015902  0E00               	movlw	0
 17020  015904  ECA3  F0B1         	call	_LCD_send_command
 17021                           
 17022                           ;src\LCD_44780.c: 129: }
 17023  015908  0012               	return	
 17024  01590A                     l8428:
 17025  01590A  0100               	movlb	0	; () banked
 17026  01590C  517D               	movf	LCD_goto_line@line& (0+255),w,b
 17027                           
 17028                           ; Switch size 1, requested type "space"
 17029                           ; Number of cases is 4, Range of values is 1 to 4
 17030                           ; switch strategies available:
 17031                           ; Name         Instructions Cycles
 17032                           ; simple_byte           13     7 (average)
 17033                           ;	Chosen strategy is simple_byte
 17034  01590E  0A01               	xorlw	1	; case 1
 17035  015910  B4D8               	btfsc	status,2,c
 17036  015912  D797               	goto	l8420
 17037  015914  0A03               	xorlw	3	; case 2
 17038  015916  B4D8               	btfsc	status,2,c
 17039  015918  D7AD               	goto	l8422
 17040  01591A  0A01               	xorlw	1	; case 3
 17041  01591C  B4D8               	btfsc	status,2,c
 17042  01591E  D7C3               	goto	l8424
 17043  015920  0A07               	xorlw	7	; case 4
 17044  015922  A4D8               	btfss	status,2,c
 17045  015924  0012               	return	
 17046  015926  D7D8               	goto	l8426
 17047  015928                     __end_of_LCD_goto_line:
 17048                           	opt stack 0
 17049                           tblptru	equ	0xFF8
 17050                           tblptrh	equ	0xFF7
 17051                           tblptrl	equ	0xFF6
 17052                           tablat	equ	0xFF5
 17053                           prodh	equ	0xFF4
 17054                           prodl	equ	0xFF3
 17055                           intcon	equ	0xFF2
 17056                           postinc0	equ	0xFEE
 17057                           wreg	equ	0xFE8
 17058                           indf1	equ	0xFE7
 17059                           plusw1	equ	0xFE3
 17060                           fsr1h	equ	0xFE2
 17061                           fsr1l	equ	0xFE1
 17062                           indf2	equ	0xFDF
 17063                           postinc2	equ	0xFDE
 17064                           plusw2	equ	0xFDB
 17065                           fsr2h	equ	0xFDA
 17066                           fsr2l	equ	0xFD9
 17067                           status	equ	0xFD8
 17068                           
 17069 ;; *************** function _LCD_send_command *****************
 17070 ;; Defined at:
 17071 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 17072 ;; Parameters:    Size  Location     Type
 17073 ;;  D3              1    wreg     unsigned char 
 17074 ;;  D2              1   25[BANK0 ] unsigned char 
 17075 ;;  D1              1   26[BANK0 ] unsigned char 
 17076 ;;  D0              1   27[BANK0 ] unsigned char 
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;  D3              1   28[BANK0 ] unsigned char 
 17079 ;; Return value:  Size  Location     Type
 17080 ;;		None               void
 17081 ;; Registers used:
 17082 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17088 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;Total ram usage:        4 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; Hardware stack levels required when called:    6
 17095 ;; This function calls:
 17096 ;;		_LCD_enable_pulse
 17097 ;; This function is called by:
 17098 ;;		_LCD_shift_cursor
 17099 ;;		_LCD_goto_line
 17100 ;;		_LCD_write_char
 17101 ;;		_LCD_clear
 17102 ;;		_LCD_cursor
 17103 ;;		_LCD_initialize
 17104 ;;		_LCD_home
 17105 ;;		_LCD_shift
 17106 ;; This function uses a non-reentrant model
 17107 ;;
 17108                           
 17109                           	psect	text46
 17110  016346                     __ptext46:
 17111                           	opt stack 0
 17112  016346                     _LCD_send_command:
 17113                           	opt stack 22
 17114                           
 17115                           ;incstack = 0
 17116                           ;LCD_send_command@D3 stored from wreg
 17117  016346  0100               	movlb	0	; () banked
 17118  016348  6F7C               	movwf	LCD_send_command@D3& (0+255),b
 17119                           
 17120                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 17121  01634A  0100               	movlb	0	; () banked
 17122  01634C  B17B               	btfsc	LCD_send_command@D0& (0+255),0,b
 17123  01634E  D002               	bra	u10395
 17124  016350  948B               	bcf	3979,2,c	;volatile
 17125  016352  D001               	bra	u10396
 17126  016354                     u10395:
 17127  016354  848B               	bsf	3979,2,c	;volatile
 17128  016356                     u10396:
 17129                           
 17130                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 17131  016356  0100               	movlb	0	; () banked
 17132  016358  B17A               	btfsc	LCD_send_command@D1& (0+255),0,b
 17133  01635A  D002               	bra	u10405
 17134  01635C  968B               	bcf	3979,3,c	;volatile
 17135  01635E  D001               	bra	u10406
 17136  016360                     u10405:
 17137  016360  868B               	bsf	3979,3,c	;volatile
 17138  016362                     u10406:
 17139                           
 17140                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 17141  016362  0100               	movlb	0	; () banked
 17142  016364  B179               	btfsc	LCD_send_command@D2& (0+255),0,b
 17143  016366  D002               	bra	u10415
 17144  016368  908C               	bcf	3980,0,c	;volatile
 17145  01636A  D001               	bra	u10416
 17146  01636C                     u10415:
 17147  01636C  808C               	bsf	3980,0,c	;volatile
 17148  01636E                     u10416:
 17149                           
 17150                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 17151  01636E  0100               	movlb	0	; () banked
 17152  016370  B17C               	btfsc	LCD_send_command@D3& (0+255),0,b
 17153  016372  D002               	bra	u10425
 17154  016374  928C               	bcf	3980,1,c	;volatile
 17155  016376  D001               	bra	u10426
 17156  016378                     u10425:
 17157  016378  828C               	bsf	3980,1,c	;volatile
 17158  01637A                     u10426:
 17159                           
 17160                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 17161  01637A  EC9A  F0B2         	call	_LCD_enable_pulse	;wreg free
 17162  01637E  0012               	return		;funcret
 17163  016380                     __end_of_LCD_send_command:
 17164                           	opt stack 0
 17165                           tblptru	equ	0xFF8
 17166                           tblptrh	equ	0xFF7
 17167                           tblptrl	equ	0xFF6
 17168                           tablat	equ	0xFF5
 17169                           prodh	equ	0xFF4
 17170                           prodl	equ	0xFF3
 17171                           intcon	equ	0xFF2
 17172                           postinc0	equ	0xFEE
 17173                           wreg	equ	0xFE8
 17174                           indf1	equ	0xFE7
 17175                           plusw1	equ	0xFE3
 17176                           fsr1h	equ	0xFE2
 17177                           fsr1l	equ	0xFE1
 17178                           indf2	equ	0xFDF
 17179                           postinc2	equ	0xFDE
 17180                           plusw2	equ	0xFDB
 17181                           fsr2h	equ	0xFDA
 17182                           fsr2l	equ	0xFD9
 17183                           status	equ	0xFD8
 17184                           
 17185 ;; *************** function _LCD_enable_pulse *****************
 17186 ;; Defined at:
 17187 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 17188 ;; Parameters:    Size  Location     Type
 17189 ;;		None
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;		None
 17192 ;; Return value:  Size  Location     Type
 17193 ;;		None               void
 17194 ;; Registers used:
 17195 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17196 ;; Tracked objects:
 17197 ;;		On entry : 0/0
 17198 ;;		On exit  : 0/0
 17199 ;;		Unchanged: 0/0
 17200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17205 ;;Total ram usage:        0 bytes
 17206 ;; Hardware stack levels used:    1
 17207 ;; Hardware stack levels required when called:    5
 17208 ;; This function calls:
 17209 ;;		_delay_ms
 17210 ;; This function is called by:
 17211 ;;		_LCD_send_command
 17212 ;; This function uses a non-reentrant model
 17213 ;;
 17214                           
 17215                           	psect	text47
 17216  016534                     __ptext47:
 17217                           	opt stack 0
 17218  016534                     _LCD_enable_pulse:
 17219                           	opt stack 22
 17220                           
 17221                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 17222                           
 17223                           ;incstack = 0
 17224  016534  828B               	bsf	3979,1,c	;volatile
 17225                           
 17226                           ;src\LCD_44780.c: 52: delay_ms (1);
 17227  016536  0E00               	movlw	0
 17228  016538  0100               	movlb	0	; () banked
 17229  01653A  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17230  01653C  0E01               	movlw	1
 17231  01653E  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17232  016540  ECC0  F0B1         	call	_delay_ms	;wreg free
 17233                           
 17234                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 17235  016544  928B               	bcf	3979,1,c	;volatile
 17236                           
 17237                           ;src\LCD_44780.c: 54: delay_ms (1);
 17238  016546  0E00               	movlw	0
 17239  016548  0100               	movlb	0	; () banked
 17240  01654A  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17241  01654C  0E01               	movlw	1
 17242  01654E  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17243  016550  ECC0  F0B1         	call	_delay_ms	;wreg free
 17244  016554  0012               	return		;funcret
 17245  016556                     __end_of_LCD_enable_pulse:
 17246                           	opt stack 0
 17247                           tblptru	equ	0xFF8
 17248                           tblptrh	equ	0xFF7
 17249                           tblptrl	equ	0xFF6
 17250                           tablat	equ	0xFF5
 17251                           prodh	equ	0xFF4
 17252                           prodl	equ	0xFF3
 17253                           intcon	equ	0xFF2
 17254                           postinc0	equ	0xFEE
 17255                           wreg	equ	0xFE8
 17256                           indf1	equ	0xFE7
 17257                           plusw1	equ	0xFE3
 17258                           fsr1h	equ	0xFE2
 17259                           fsr1l	equ	0xFE1
 17260                           indf2	equ	0xFDF
 17261                           postinc2	equ	0xFDE
 17262                           plusw2	equ	0xFDB
 17263                           fsr2h	equ	0xFDA
 17264                           fsr2l	equ	0xFD9
 17265                           status	equ	0xFD8
 17266                           
 17267 ;; *************** function _delay_ms *****************
 17268 ;; Defined at:
 17269 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 17270 ;; Parameters:    Size  Location     Type
 17271 ;;  value_ms        2   23[BANK0 ] unsigned int 
 17272 ;; Auto vars:     Size  Location     Type
 17273 ;;		None
 17274 ;; Return value:  Size  Location     Type
 17275 ;;		None               void
 17276 ;; Registers used:
 17277 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17278 ;; Tracked objects:
 17279 ;;		On entry : 0/0
 17280 ;;		On exit  : 0/0
 17281 ;;		Unchanged: 0/0
 17282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17287 ;;Total ram usage:        2 bytes
 17288 ;; Hardware stack levels used:    1
 17289 ;; Hardware stack levels required when called:    4
 17290 ;; This function calls:
 17291 ;;		___wmul
 17292 ;; This function is called by:
 17293 ;;		_LCD_enable_pulse
 17294 ;;		_LCD_initialize
 17295 ;;		_main
 17296 ;;		_delay_s
 17297 ;; This function uses a non-reentrant model
 17298 ;;
 17299                           
 17300                           	psect	text48
 17301  016380                     __ptext48:
 17302                           	opt stack 0
 17303  016380                     _delay_ms:
 17304                           	opt stack 26
 17305                           
 17306                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 17307                           
 17308                           ;incstack = 0
 17309  016380  C0ED  F071         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 17310  016384  0100               	movlb	0	; () banked
 17311  016386  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 17312  016388  C077  F073         	movff	delay_ms@value_ms,___wmul@multiplicand
 17313  01638C  C078  F074         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 17314  016390  ECF9  F0B1         	call	___wmul	;wreg free
 17315  016394  C071  F0E3         	movff	?___wmul,_clock_counter_reference	;volatile
 17316  016398  C072  F0E4         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 17317                           
 17318                           ;src\delay.c: 75: while (clock_counter_reference) {
 17319  01639C  D007               	goto	l591
 17320  01639E                     l7964:
 17321                           
 17322                           ;src\delay.c: 85: _delay(240);
 17323  01639E  0E50               	movlw	80
 17324  0163A0                     u13557:
 17325  0163A0  2EE8               	decfsz	wreg,f,c
 17326  0163A2  D7FE               	goto	u13557
 17327                           
 17328                           ;src\delay.c: 88: clock_counter_reference--;
 17329  0163A4  0100               	movlb	0	; () banked
 17330  0163A6  07E3               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 17331  0163A8  A0D8               	btfss	status,0,c
 17332  0163AA  07E4               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 17333  0163AC                     l591:
 17334  0163AC  0100               	movlb	0	; () banked
 17335  0163AE  51E3               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 17336  0163B0  0100               	movlb	0	; () banked
 17337  0163B2  11E4               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 17338  0163B4  B4D8               	btfsc	status,2,c
 17339  0163B6  0012               	return	
 17340  0163B8  D7F2               	goto	l7964
 17341  0163BA                     __end_of_delay_ms:
 17342                           	opt stack 0
 17343                           tblptru	equ	0xFF8
 17344                           tblptrh	equ	0xFF7
 17345                           tblptrl	equ	0xFF6
 17346                           tablat	equ	0xFF5
 17347                           prodh	equ	0xFF4
 17348                           prodl	equ	0xFF3
 17349                           intcon	equ	0xFF2
 17350                           postinc0	equ	0xFEE
 17351                           wreg	equ	0xFE8
 17352                           indf1	equ	0xFE7
 17353                           plusw1	equ	0xFE3
 17354                           fsr1h	equ	0xFE2
 17355                           fsr1l	equ	0xFE1
 17356                           indf2	equ	0xFDF
 17357                           postinc2	equ	0xFDE
 17358                           plusw2	equ	0xFDB
 17359                           fsr2h	equ	0xFDA
 17360                           fsr2l	equ	0xFD9
 17361                           status	equ	0xFD8
 17362                           
 17363 ;; *************** function ___wmul *****************
 17364 ;; Defined at:
 17365 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 17366 ;; Parameters:    Size  Location     Type
 17367 ;;  multiplier      2   17[BANK0 ] unsigned int 
 17368 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 17369 ;; Auto vars:     Size  Location     Type
 17370 ;;  product         2   21[BANK0 ] unsigned int 
 17371 ;; Return value:  Size  Location     Type
 17372 ;;                  2   17[BANK0 ] unsigned int 
 17373 ;; Registers used:
 17374 ;;		wreg, status,2, status,0, prodl, prodh
 17375 ;; Tracked objects:
 17376 ;;		On entry : 0/0
 17377 ;;		On exit  : 0/0
 17378 ;;		Unchanged: 0/0
 17379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17383 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17384 ;;Total ram usage:        6 bytes
 17385 ;; Hardware stack levels used:    1
 17386 ;; Hardware stack levels required when called:    3
 17387 ;; This function calls:
 17388 ;;		Nothing
 17389 ;; This function is called by:
 17390 ;;		_delay_ms
 17391 ;;		_sprintf
 17392 ;; This function uses a non-reentrant model
 17393 ;;
 17394                           
 17395                           	psect	text49
 17396  0163F2                     __ptext49:
 17397                           	opt stack 0
 17398  0163F2                     ___wmul:
 17399                           	opt stack 26
 17400                           
 17401                           ; BSR set to: 0
 17402                           ;incstack = 0
 17403  0163F2  0100               	movlb	0	; () banked
 17404  0163F4  5171               	movf	___wmul@multiplier& (0+255),w,b
 17405  0163F6  0100               	movlb	0	; () banked
 17406  0163F8  0373               	mulwf	___wmul@multiplicand& (0+255),b
 17407  0163FA  CFF3 F075          	movff	prodl,___wmul@product
 17408  0163FE  CFF4 F076          	movff	prodh,___wmul@product+1
 17409  016402  0100               	movlb	0	; () banked
 17410  016404  5171               	movf	___wmul@multiplier& (0+255),w,b
 17411  016406  0100               	movlb	0	; () banked
 17412  016408  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17413  01640A  50F3               	movf	prodl,w,c
 17414  01640C  0100               	movlb	0	; () banked
 17415  01640E  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 17416  016410  0100               	movlb	0	; () banked
 17417  016412  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17418  016414  0100               	movlb	0	; () banked
 17419  016416  0373               	mulwf	___wmul@multiplicand& (0+255),b
 17420  016418  50F3               	movf	prodl,w,c
 17421  01641A  0100               	movlb	0	; () banked
 17422  01641C  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 17423                           
 17424                           ; BSR set to: 0
 17425  01641E  C075  F071         	movff	___wmul@product,?___wmul
 17426  016422  C076  F072         	movff	___wmul@product+1,?___wmul+1
 17427  016426  0012               	return	
 17428  016428                     __end_of___wmul:
 17429                           	opt stack 0
 17430                           tblptru	equ	0xFF8
 17431                           tblptrh	equ	0xFF7
 17432                           tblptrl	equ	0xFF6
 17433                           tablat	equ	0xFF5
 17434                           prodh	equ	0xFF4
 17435                           prodl	equ	0xFF3
 17436                           intcon	equ	0xFF2
 17437                           postinc0	equ	0xFEE
 17438                           wreg	equ	0xFE8
 17439                           indf1	equ	0xFE7
 17440                           plusw1	equ	0xFE3
 17441                           fsr1h	equ	0xFE2
 17442                           fsr1l	equ	0xFE1
 17443                           indf2	equ	0xFDF
 17444                           postinc2	equ	0xFDE
 17445                           plusw2	equ	0xFDB
 17446                           fsr2h	equ	0xFDA
 17447                           fsr2l	equ	0xFD9
 17448                           status	equ	0xFD8
 17449                           
 17450 ;; *************** function _Joystick_Polling *****************
 17451 ;; Defined at:
 17452 ;;		line 611 in file "RemoteCan.c"
 17453 ;; Parameters:    Size  Location     Type
 17454 ;;		None
 17455 ;; Auto vars:     Size  Location     Type
 17456 ;;  i               1   18[BANK0 ] unsigned char 
 17457 ;; Return value:  Size  Location     Type
 17458 ;;		None               void
 17459 ;; Registers used:
 17460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17461 ;; Tracked objects:
 17462 ;;		On entry : 0/0
 17463 ;;		On exit  : 0/0
 17464 ;;		Unchanged: 0/0
 17465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17469 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17470 ;;Total ram usage:        2 bytes
 17471 ;; Hardware stack levels used:    1
 17472 ;; Hardware stack levels required when called:    3
 17473 ;; This function calls:
 17474 ;;		Nothing
 17475 ;; This function is called by:
 17476 ;;		_main
 17477 ;; This function uses a non-reentrant model
 17478 ;;
 17479                           
 17480                           	psect	text50
 17481  0161D0                     __ptext50:
 17482                           	opt stack 0
 17483  0161D0                     _Joystick_Polling:
 17484                           	opt stack 27
 17485                           
 17486                           ;RemoteCan.c: 612: for (unsigned char i = 0; i < 2; i++) {
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;incstack = 0
 17490  0161D0  0E00               	movlw	0
 17491  0161D2  0100               	movlb	0	; () banked
 17492  0161D4  6F72               	movwf	Joystick_Polling@i& (0+255),b
 17493  0161D6                     l7176:
 17494                           
 17495                           ; BSR set to: 0
 17496  0161D6  0E01               	movlw	1
 17497  0161D8  0100               	movlb	0	; () banked
 17498  0161DA  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 17499  0161DC  D001               	goto	l947
 17500  0161DE  0012               	return	
 17501  0161E0                     l947:
 17502                           
 17503                           ; BSR set to: 0
 17504                           ;RemoteCan.c: 613: ADCON0bits.GO = 1;
 17505  0161E0  82C2               	bsf	4034,1,c	;volatile
 17506  0161E2                     l949:
 17507  0161E2  B2C2               	btfsc	4034,1,c	;volatile
 17508  0161E4  D7FE               	goto	l949
 17509                           
 17510                           ;RemoteCan.c: 615: JoystickValues[i] = ADRESH;
 17511  0161E6  0100               	movlb	0	; () banked
 17512  0161E8  5172               	movf	Joystick_Polling@i& (0+255),w,b
 17513  0161EA  0D01               	mullw	1
 17514  0161EC  0EDF               	movlw	low _JoystickValues
 17515  0161EE  24F3               	addwf	prodl,w,c
 17516  0161F0  6ED9               	movwf	fsr2l,c
 17517  0161F2  0E00               	movlw	high _JoystickValues
 17518  0161F4  20F4               	addwfc	prodh,w,c
 17519  0161F6  6EDA               	movwf	fsr2h,c
 17520  0161F8  CFC4 FFDF          	movff	4036,indf2	;volatile
 17521                           
 17522                           ; BSR set to: 0
 17523                           ;RemoteCan.c: 616: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 17524  0161FC  A4C2               	btfss	4034,2,c	;volatile
 17525  0161FE  D002               	goto	u9130
 17526  016200  0E01               	movlw	1
 17527  016202  D001               	goto	u9136
 17528  016204                     u9130:
 17529  016204  0E00               	movlw	0
 17530  016206                     u9136:
 17531  016206  0AFF               	xorlw	255
 17532  016208  0100               	movlb	0	; () banked
 17533  01620A  6F71               	movwf	??_Joystick_Polling& (0+255),b
 17534  01620C  0100               	movlb	0	; () banked
 17535  01620E  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 17536  016210  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 17537  016212  50C2               	movf	4034,w,c	;volatile
 17538  016214  0100               	movlb	0	; () banked
 17539  016216  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 17540  016218  0BFB               	andlw	-5
 17541  01621A  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 17542  01621C  6EC2               	movwf	4034,c	;volatile
 17543                           
 17544                           ; BSR set to: 0
 17545  01621E  0100               	movlb	0	; () banked
 17546  016220  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 17547  016222  D7D9               	goto	l7176
 17548  016224                     __end_of_Joystick_Polling:
 17549                           	opt stack 0
 17550                           tblptru	equ	0xFF8
 17551                           tblptrh	equ	0xFF7
 17552                           tblptrl	equ	0xFF6
 17553                           tablat	equ	0xFF5
 17554                           prodh	equ	0xFF4
 17555                           prodl	equ	0xFF3
 17556                           intcon	equ	0xFF2
 17557                           postinc0	equ	0xFEE
 17558                           wreg	equ	0xFE8
 17559                           indf1	equ	0xFE7
 17560                           plusw1	equ	0xFE3
 17561                           fsr1h	equ	0xFE2
 17562                           fsr1l	equ	0xFE1
 17563                           indf2	equ	0xFDF
 17564                           postinc2	equ	0xFDE
 17565                           plusw2	equ	0xFDB
 17566                           fsr2h	equ	0xFDA
 17567                           fsr2l	equ	0xFD9
 17568                           status	equ	0xFD8
 17569                           
 17570 ;; *************** function _F2_Button_Polling *****************
 17571 ;; Defined at:
 17572 ;;		line 601 in file "RemoteCan.c"
 17573 ;; Parameters:    Size  Location     Type
 17574 ;;		None
 17575 ;; Auto vars:     Size  Location     Type
 17576 ;;		None
 17577 ;; Return value:  Size  Location     Type
 17578 ;;		None               void
 17579 ;; Registers used:
 17580 ;;		None
 17581 ;; Tracked objects:
 17582 ;;		On entry : 0/0
 17583 ;;		On exit  : 0/0
 17584 ;;		Unchanged: 0/0
 17585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17590 ;;Total ram usage:        0 bytes
 17591 ;; Hardware stack levels used:    1
 17592 ;; Hardware stack levels required when called:    3
 17593 ;; This function calls:
 17594 ;;		Nothing
 17595 ;; This function is called by:
 17596 ;;		_main
 17597 ;; This function uses a non-reentrant model
 17598 ;;
 17599                           
 17600                           	psect	text51
 17601  0165AC                     __ptext51:
 17602                           	opt stack 0
 17603  0165AC                     _F2_Button_Polling:
 17604                           	opt stack 27
 17605                           
 17606                           ;RemoteCan.c: 602: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 17607                           
 17608                           ; BSR set to: 0
 17609                           ;incstack = 0
 17610  0165AC  A281               	btfss	3969,1,c	;volatile
 17611  0165AE  D002               	goto	l942
 17612  0165B0  B64D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17613  0165B2  0012               	return	
 17614  0165B4                     l942:
 17615                           
 17616                           ;RemoteCan.c: 603: wait_low_3 = 0;
 17617  0165B4  964D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17618                           
 17619                           ;RemoteCan.c: 604: if (PORTBbits.RB1 == 1) {
 17620  0165B6  A281               	btfss	3969,1,c	;volatile
 17621  0165B8  0012               	return	
 17622                           
 17623                           ;RemoteCan.c: 605: F2_switch = ~F2_switch;
 17624  0165BA  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17625  0165BC  D002               	goto	u9060
 17626  0165BE  864B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17627  0165C0  D001               	goto	u9075
 17628  0165C2                     u9060:
 17629  0165C2  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17630  0165C4                     u9075:
 17631                           
 17632                           ;RemoteCan.c: 606: wait_low_3 = 1;
 17633  0165C4  864D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17634  0165C6  0012               	return	
 17635  0165C8                     __end_of_F2_Button_Polling:
 17636                           	opt stack 0
 17637                           tblptru	equ	0xFF8
 17638                           tblptrh	equ	0xFF7
 17639                           tblptrl	equ	0xFF6
 17640                           tablat	equ	0xFF5
 17641                           prodh	equ	0xFF4
 17642                           prodl	equ	0xFF3
 17643                           intcon	equ	0xFF2
 17644                           postinc0	equ	0xFEE
 17645                           wreg	equ	0xFE8
 17646                           indf1	equ	0xFE7
 17647                           plusw1	equ	0xFE3
 17648                           fsr1h	equ	0xFE2
 17649                           fsr1l	equ	0xFE1
 17650                           indf2	equ	0xFDF
 17651                           postinc2	equ	0xFDE
 17652                           plusw2	equ	0xFDB
 17653                           fsr2h	equ	0xFDA
 17654                           fsr2l	equ	0xFD9
 17655                           status	equ	0xFD8
 17656                           
 17657 ;; *************** function _F1_Button_Polling *****************
 17658 ;; Defined at:
 17659 ;;		line 591 in file "RemoteCan.c"
 17660 ;; Parameters:    Size  Location     Type
 17661 ;;		None
 17662 ;; Auto vars:     Size  Location     Type
 17663 ;;		None
 17664 ;; Return value:  Size  Location     Type
 17665 ;;		None               void
 17666 ;; Registers used:
 17667 ;;		None
 17668 ;; Tracked objects:
 17669 ;;		On entry : 0/0
 17670 ;;		On exit  : 0/0
 17671 ;;		Unchanged: 0/0
 17672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17677 ;;Total ram usage:        0 bytes
 17678 ;; Hardware stack levels used:    1
 17679 ;; Hardware stack levels required when called:    3
 17680 ;; This function calls:
 17681 ;;		Nothing
 17682 ;; This function is called by:
 17683 ;;		_main
 17684 ;; This function uses a non-reentrant model
 17685 ;;
 17686                           
 17687                           	psect	text52
 17688  0165C8                     __ptext52:
 17689                           	opt stack 0
 17690  0165C8                     _F1_Button_Polling:
 17691                           	opt stack 27
 17692                           
 17693                           ;RemoteCan.c: 592: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 17694                           
 17695                           ;incstack = 0
 17696  0165C8  A881               	btfss	3969,4,c	;volatile
 17697  0165CA  D002               	goto	l935
 17698  0165CC  B44D               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17699  0165CE  0012               	return	
 17700  0165D0                     l935:
 17701                           
 17702                           ;RemoteCan.c: 593: wait_low_2 = 0;
 17703  0165D0  944D               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17704                           
 17705                           ;RemoteCan.c: 594: if (PORTBbits.RB4 == 1) {
 17706  0165D2  A881               	btfss	3969,4,c	;volatile
 17707  0165D4  0012               	return	
 17708                           
 17709                           ;RemoteCan.c: 595: F1_switch = ~F1_switch;
 17710  0165D6  B44B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17711  0165D8  D002               	goto	u9010
 17712  0165DA  844B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17713  0165DC  D001               	goto	u9025
 17714  0165DE                     u9010:
 17715  0165DE  944B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17716  0165E0                     u9025:
 17717                           
 17718                           ;RemoteCan.c: 596: wait_low_2 = 1;
 17719  0165E0  844D               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17720  0165E2  0012               	return	
 17721  0165E4                     __end_of_F1_Button_Polling:
 17722                           	opt stack 0
 17723                           tblptru	equ	0xFF8
 17724                           tblptrh	equ	0xFF7
 17725                           tblptrl	equ	0xFF6
 17726                           tablat	equ	0xFF5
 17727                           prodh	equ	0xFF4
 17728                           prodl	equ	0xFF3
 17729                           intcon	equ	0xFF2
 17730                           postinc0	equ	0xFEE
 17731                           wreg	equ	0xFE8
 17732                           indf1	equ	0xFE7
 17733                           plusw1	equ	0xFE3
 17734                           fsr1h	equ	0xFE2
 17735                           fsr1l	equ	0xFE1
 17736                           indf2	equ	0xFDF
 17737                           postinc2	equ	0xFDE
 17738                           plusw2	equ	0xFDB
 17739                           fsr2h	equ	0xFDA
 17740                           fsr2l	equ	0xFD9
 17741                           status	equ	0xFD8
 17742                           
 17743 ;; *************** function _CAN_Tx *****************
 17744 ;; Defined at:
 17745 ;;		line 620 in file "RemoteCan.c"
 17746 ;; Parameters:    Size  Location     Type
 17747 ;;		None
 17748 ;; Auto vars:     Size  Location     Type
 17749 ;;		None
 17750 ;; Return value:  Size  Location     Type
 17751 ;;		None               void
 17752 ;; Registers used:
 17753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17754 ;; Tracked objects:
 17755 ;;		On entry : 0/0
 17756 ;;		On exit  : 0/0
 17757 ;;		Unchanged: 0/0
 17758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17763 ;;Total ram usage:        0 bytes
 17764 ;; Hardware stack levels used:    1
 17765 ;; Hardware stack levels required when called:    4
 17766 ;; This function calls:
 17767 ;;		_CANisTxReady
 17768 ;;		_CANsendMessage
 17769 ;; This function is called by:
 17770 ;;		_main
 17771 ;; This function uses a non-reentrant model
 17772 ;;
 17773                           
 17774                           	psect	text53
 17775  015B60                     __ptext53:
 17776                           	opt stack 0
 17777  015B60                     _CAN_Tx:
 17778                           	opt stack 26
 17779  015B60                     l7156:
 17780  015B60  EC88  F0B2         	call	_CANisTxReady	;wreg free
 17781  015B64  06E8               	decf	wreg,f,c
 17782  015B66  A4D8               	btfss	status,2,c
 17783  015B68  D7FB               	goto	l7156
 17784                           
 17785                           ;RemoteCan.c: 623: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17786  015B6A  0E07               	movlw	7
 17787  015B6C  0100               	movlb	0	; () banked
 17788  015B6E  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17789  015B70  0E00               	movlw	0
 17790  015B72  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17791  015B74  0E00               	movlw	0
 17792  015B76  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17793  015B78  0E00               	movlw	0
 17794  015B7A  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17795  015B7C  0E3D               	movlw	low _data_steering
 17796  015B7E  0100               	movlb	0	; () banked
 17797  015B80  6F75               	movwf	CANsendMessage@data& (0+255),b
 17798  015B82  0E01               	movlw	high _data_steering
 17799  015B84  0100               	movlb	0	; () banked
 17800  015B86  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17801  015B88  0E08               	movlw	8
 17802  015B8A  0100               	movlb	0	; () banked
 17803  015B8C  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17804  015B8E  0EBC               	movlw	188
 17805  015B90  0100               	movlb	0	; () banked
 17806  015B92  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17807  015B94  ECDB  F08D         	call	_CANsendMessage	;wreg free
 17808                           
 17809                           ;RemoteCan.c: 626: data_speed[0] = set_speed;
 17810  015B98  C0E5  F135         	movff	_set_speed,_data_speed	;volatile
 17811                           
 17812                           ;RemoteCan.c: 627: data_speed[1] = (set_speed >> 8);
 17813  015B9C  0100               	movlb	0	; () banked
 17814  015B9E  51E6               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17815  015BA0  0101               	movlb	1	; () banked
 17816  015BA2  6F36               	movwf	(_data_speed+1)& (0+255),b
 17817                           
 17818                           ; BSR set to: 1
 17819                           ;RemoteCan.c: 628: data_speed[2] = dir;
 17820  015BA4  C0E8  F137         	movff	_dir,_data_speed+2	;volatile
 17821  015BA8                     l7166:
 17822  015BA8  EC88  F0B2         	call	_CANisTxReady	;wreg free
 17823  015BAC  06E8               	decf	wreg,f,c
 17824  015BAE  A4D8               	btfss	status,2,c
 17825  015BB0  D7FB               	goto	l7166
 17826                           
 17827                           ;RemoteCan.c: 630: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17828  015BB2  0E05               	movlw	5
 17829  015BB4  0100               	movlb	0	; () banked
 17830  015BB6  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17831  015BB8  0E00               	movlw	0
 17832  015BBA  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17833  015BBC  0E00               	movlw	0
 17834  015BBE  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17835  015BC0  0E00               	movlw	0
 17836  015BC2  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17837  015BC4  0E35               	movlw	low _data_speed
 17838  015BC6  0100               	movlb	0	; () banked
 17839  015BC8  6F75               	movwf	CANsendMessage@data& (0+255),b
 17840  015BCA  0E01               	movlw	high _data_speed
 17841  015BCC  0100               	movlb	0	; () banked
 17842  015BCE  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17843  015BD0  0E08               	movlw	8
 17844  015BD2  0100               	movlb	0	; () banked
 17845  015BD4  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17846  015BD6  0EBC               	movlw	188
 17847  015BD8  0100               	movlb	0	; () banked
 17848  015BDA  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17849  015BDC  ECDB  F08D         	call	_CANsendMessage	;wreg free
 17850  015BE0                     l7170:
 17851  015BE0  EC88  F0B2         	call	_CANisTxReady	;wreg free
 17852  015BE4  06E8               	decf	wreg,f,c
 17853  015BE6  A4D8               	btfss	status,2,c
 17854  015BE8  D7FB               	goto	l7170
 17855                           
 17856                           ;RemoteCan.c: 634: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17857  015BEA  0E06               	movlw	6
 17858  015BEC  0100               	movlb	0	; () banked
 17859  015BEE  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17860  015BF0  0E00               	movlw	0
 17861  015BF2  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17862  015BF4  0E00               	movlw	0
 17863  015BF6  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17864  015BF8  0E00               	movlw	0
 17865  015BFA  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17866  015BFC  0E2D               	movlw	low _data_brake
 17867  015BFE  0100               	movlb	0	; () banked
 17868  015C00  6F75               	movwf	CANsendMessage@data& (0+255),b
 17869  015C02  0E01               	movlw	high _data_brake
 17870  015C04  0100               	movlb	0	; () banked
 17871  015C06  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17872  015C08  0E08               	movlw	8
 17873  015C0A  0100               	movlb	0	; () banked
 17874  015C0C  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17875  015C0E  0EBC               	movlw	188
 17876  015C10  0100               	movlb	0	; () banked
 17877  015C12  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17878  015C14  ECDB  F08D         	call	_CANsendMessage	;wreg free
 17879  015C18  0012               	return		;funcret
 17880  015C1A                     __end_of_CAN_Tx:
 17881                           	opt stack 0
 17882                           tblptru	equ	0xFF8
 17883                           tblptrh	equ	0xFF7
 17884                           tblptrl	equ	0xFF6
 17885                           tablat	equ	0xFF5
 17886                           prodh	equ	0xFF4
 17887                           prodl	equ	0xFF3
 17888                           intcon	equ	0xFF2
 17889                           postinc0	equ	0xFEE
 17890                           wreg	equ	0xFE8
 17891                           indf1	equ	0xFE7
 17892                           plusw1	equ	0xFE3
 17893                           fsr1h	equ	0xFE2
 17894                           fsr1l	equ	0xFE1
 17895                           indf2	equ	0xFDF
 17896                           postinc2	equ	0xFDE
 17897                           plusw2	equ	0xFDB
 17898                           fsr2h	equ	0xFDA
 17899                           fsr2l	equ	0xFD9
 17900                           status	equ	0xFD8
 17901                           
 17902 ;; *************** function _CANsendMessage *****************
 17903 ;; Defined at:
 17904 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17905 ;; Parameters:    Size  Location     Type
 17906 ;;  identifier      4   17[BANK0 ] unsigned long 
 17907 ;;  data            2   21[BANK0 ] PTR unsigned char 
 17908 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 17909 ;;		 -> data(8), 
 17910 ;;  dataLength      1   23[BANK0 ] unsigned char 
 17911 ;;  flags           1   24[BANK0 ] enum E16909
 17912 ;; Auto vars:     Size  Location     Type
 17913 ;;  tamp            4   29[BANK0 ] unsigned long 
 17914 ;; Return value:  Size  Location     Type
 17915 ;;		None               void
 17916 ;; Registers used:
 17917 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17918 ;; Tracked objects:
 17919 ;;		On entry : 0/0
 17920 ;;		On exit  : 0/0
 17921 ;;		Unchanged: 0/0
 17922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17923 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17924 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17925 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17926 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17927 ;;Total ram usage:       16 bytes
 17928 ;; Hardware stack levels used:    1
 17929 ;; Hardware stack levels required when called:    3
 17930 ;; This function calls:
 17931 ;;		Nothing
 17932 ;; This function is called by:
 17933 ;;		_main
 17934 ;;		_LCD_Handler
 17935 ;;		_CAN_Tx
 17936 ;; This function uses a non-reentrant model
 17937 ;;
 17938                           
 17939                           	psect	text54
 17940  011BB6                     __ptext54:
 17941                           	opt stack 0
 17942  011BB6                     _CANsendMessage:
 17943                           	opt stack 26
 17944                           
 17945                           ;inc\CANlib.h: 296: unsigned long tamp;
 17946                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17947                           
 17948                           ;incstack = 0
 17949  011BB6  010F               	movlb	15	; () banked
 17950  011BB8  B740               	btfsc	64,3,b	;volatile
 17951  011BBA  D13F               	goto	l385
 17952                           
 17953                           ; BSR set to: 15
 17954                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17955  011BBC  C077  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17956                           
 17957                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17958  011BC0  0100               	movlb	0	; () banked
 17959  011BC2  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 17960  011BC4  D003               	goto	l386
 17961                           
 17962                           ; BSR set to: 0
 17963                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17964  011BC6  010F               	movlb	15	; () banked
 17965  011BC8  8D45               	bsf	69,6,b	;volatile
 17966  011BCA  D002               	goto	l387
 17967  011BCC                     l386:
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;inc\CANlib.h: 302: else
 17971                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17972  011BCC  010F               	movlb	15	; () banked
 17973  011BCE  9D45               	bcf	69,6,b	;volatile
 17974  011BD0                     l387:
 17975                           
 17976                           ; BSR set to: 15
 17977                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17978  011BD0  0100               	movlb	0	; () banked
 17979  011BD2  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 17980  011BD4  D079               	goto	l388
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;inc\CANlib.h: 306: {
 17984                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17985  011BD6  0100               	movlb	0	; () banked
 17986  011BD8  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 17987  011BDA  0100               	movlb	0	; () banked
 17988  011BDC  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17989  011BDE  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17990  011BE0  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17991  011BE2  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17992                           
 17993                           ; BSR set to: 0
 17994                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17995  011BE4  C07D  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17999  011BE8  0E00               	movlw	0
 18000  011BEA  0100               	movlb	0	; () banked
 18001  011BEC  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18002  011BEE  0100               	movlb	0	; () banked
 18003  011BF0  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18004  011BF2  0EFF               	movlw	255
 18005  011BF4  0100               	movlb	0	; () banked
 18006  011BF6  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18007  011BF8  0100               	movlb	0	; () banked
 18008  011BFA  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18009  011BFC  0E00               	movlw	0
 18010  011BFE  0100               	movlb	0	; () banked
 18011  011C00  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18012  011C02  0100               	movlb	0	; () banked
 18013  011C04  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18014  011C06  0E00               	movlw	0
 18015  011C08  0100               	movlb	0	; () banked
 18016  011C0A  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18017  011C0C  0100               	movlb	0	; () banked
 18018  011C0E  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 18022  011C10  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18023  011C14  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18024  011C18  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18025  011C1C  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18026  011C20  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18027  011C24  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18028  011C28  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18029  011C2C  0100               	movlb	0	; () banked
 18030  011C2E  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18031  011C30  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18032  011C34  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18033  011C38  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18034  011C3C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 18038  011C40  C07D  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 18042  011C44  0E00               	movlw	0
 18043  011C46  010F               	movlb	15	; () banked
 18044  011C48  6F42               	movwf	66,b	;volatile
 18045                           
 18046                           ; BSR set to: 15
 18047                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 18048  011C4A  010F               	movlb	15	; () banked
 18049  011C4C  8742               	bsf	66,3,b	;volatile
 18050                           
 18051                           ; BSR set to: 15
 18052                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 18053  011C4E  0100               	movlb	0	; () banked
 18054  011C50  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18055  011C52  D002               	goto	l389
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 18059  011C54  010F               	movlb	15	; () banked
 18060  011C56  8142               	bsf	66,0,b	;volatile
 18061  011C58                     l389:
 18062                           
 18063                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 18064  011C58  0100               	movlb	0	; () banked
 18065  011C5A  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18066  011C5C  D002               	goto	l390
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 18070  011C5E  010F               	movlb	15	; () banked
 18071  011C60  8342               	bsf	66,1,b	;volatile
 18072  011C62                     l390:
 18073                           
 18074                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 18075  011C62  0100               	movlb	0	; () banked
 18076  011C64  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18077  011C66  D002               	goto	l391
 18078                           
 18079                           ; BSR set to: 0
 18080                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 18081  011C68  010F               	movlb	15	; () banked
 18082  011C6A  8B42               	bsf	66,5,b	;volatile
 18083  011C6C                     l391:
 18084                           
 18085                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 18086  011C6C  0100               	movlb	0	; () banked
 18087  011C6E  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18088  011C70  D002               	goto	l392
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 18092  011C72  010F               	movlb	15	; () banked
 18093  011C74  8D42               	bsf	66,6,b	;volatile
 18094  011C76                     l392:
 18095                           
 18096                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 18097  011C76  0100               	movlb	0	; () banked
 18098  011C78  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18099  011C7A  D002               	goto	l6284
 18100                           
 18101                           ; BSR set to: 0
 18102                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 18103  011C7C  010F               	movlb	15	; () banked
 18104  011C7E  8F42               	bsf	66,7,b	;volatile
 18105  011C80                     l6284:
 18106                           
 18107                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 18108  011C80  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18109  011C84  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18110  011C88  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18111  011C8C  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18112  011C90  0E16               	movlw	22
 18113  011C92  D006               	goto	u7700
 18114  011C94                     u7705:
 18115  011C94  0100               	movlb	0	; () banked
 18116  011C96  90D8               	bcf	status,0,c
 18117  011C98  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18118  011C9A  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18119  011C9C  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18120  011C9E  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18121  011CA0                     u7700:
 18122  011CA0  2EE8               	decfsz	wreg,f,c
 18123  011CA2  D7F8               	goto	u7705
 18124  011CA4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18125  011CA8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18126  011CAC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18127  011CB0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 18131  011CB4  0100               	movlb	0	; () banked
 18132  011CB6  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18133  011CB8  0100               	movlb	0	; () banked
 18134  011CBA  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18135  011CBC  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18136  011CBE  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18137  011CC0  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18138                           
 18139                           ; BSR set to: 0
 18140                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 18141  011CC2  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 18142                           
 18143                           ;inc\CANlib.h: 332: }
 18144  011CC6  D059               	goto	l6304
 18145  011CC8                     l388:
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;inc\CANlib.h: 334: else
 18149                           ;inc\CANlib.h: 336: {
 18150                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 18151  011CC8  010F               	movlb	15	; () banked
 18152  011CCA  9742               	bcf	66,3,b	;volatile
 18153                           
 18154                           ; BSR set to: 15
 18155                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 18156  011CCC  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18157  011CD0  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18158  011CD4  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18159  011CD8  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18160  011CDC  0E04               	movlw	4
 18161  011CDE  D006               	goto	u7710
 18162  011CE0                     u7715:
 18163  011CE0  0100               	movlb	0	; () banked
 18164  011CE2  90D8               	bcf	status,0,c
 18165  011CE4  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18166  011CE6  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18167  011CE8  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18168  011CEA  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18169  011CEC                     u7710:
 18170  011CEC  2EE8               	decfsz	wreg,f,c
 18171  011CEE  D7F8               	goto	u7715
 18172  011CF0  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18173  011CF4  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18174  011CF8  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18175  011CFC  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 18179  011D00  0100               	movlb	0	; () banked
 18180  011D02  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18181  011D04  0100               	movlb	0	; () banked
 18182  011D06  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18183  011D08  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18184  011D0A  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18185  011D0C  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 18189  011D0E  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 18193  011D12  0E07               	movlw	7
 18194  011D14  0100               	movlb	0	; () banked
 18195  011D16  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18196  011D18  0100               	movlb	0	; () banked
 18197  011D1A  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18198  011D1C  0E00               	movlw	0
 18199  011D1E  0100               	movlb	0	; () banked
 18200  011D20  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18201  011D22  0100               	movlb	0	; () banked
 18202  011D24  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18203  011D26  0E00               	movlw	0
 18204  011D28  0100               	movlb	0	; () banked
 18205  011D2A  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18206  011D2C  0100               	movlb	0	; () banked
 18207  011D2E  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18208  011D30  0E00               	movlw	0
 18209  011D32  0100               	movlb	0	; () banked
 18210  011D34  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18211  011D36  0100               	movlb	0	; () banked
 18212  011D38  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 18216  011D3A  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18217  011D3E  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18218  011D42  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18219  011D46  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18220  011D4A  0E05               	movlw	5
 18221  011D4C                     u7725:
 18222  011D4C  90D8               	bcf	status,0,c
 18223  011D4E  0100               	movlb	0	; () banked
 18224  011D50  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18225  011D52  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18226  011D54  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18227  011D56  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18228  011D58  2EE8               	decfsz	wreg,f,c
 18229  011D5A  D7F8               	goto	u7725
 18230  011D5C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18231  011D60  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18232  011D64  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18233  011D68  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18234                           
 18235                           ; BSR set to: 0
 18236                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 18237  011D6C  010F               	movlb	15	; () banked
 18238  011D6E  5142               	movf	66,w,b	;volatile
 18239  011D70  0B1F               	andlw	31
 18240  011D72  010F               	movlb	15	; () banked
 18241  011D74  6F42               	movwf	66,b	;volatile
 18242                           
 18243                           ; BSR set to: 15
 18244                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 18245  011D76  C07D  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 18246  011D7A                     l6304:
 18247                           
 18248                           ;inc\CANlib.h: 347: }
 18249                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 18250  011D7A  0100               	movlb	0	; () banked
 18251  011D7C  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18252  011D7E  D003               	goto	l395
 18253                           
 18254                           ; BSR set to: 0
 18255                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 18256  011D80  010F               	movlb	15	; () banked
 18257  011D82  8140               	bsf	64,0,b	;volatile
 18258  011D84  D002               	goto	l396
 18259  011D86                     l395:
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;inc\CANlib.h: 351: else
 18263                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 18264  011D86  010F               	movlb	15	; () banked
 18265  011D88  9140               	bcf	64,0,b	;volatile
 18266  011D8A                     l396:
 18267                           
 18268                           ; BSR set to: 15
 18269                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 18270  011D8A  0100               	movlb	0	; () banked
 18271  011D8C  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18272  011D8E  D003               	goto	l397
 18273                           
 18274                           ; BSR set to: 0
 18275                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 18276  011D90  010F               	movlb	15	; () banked
 18277  011D92  8340               	bsf	64,1,b	;volatile
 18278  011D94  D002               	goto	l6310
 18279  011D96                     l397:
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;inc\CANlib.h: 355: else
 18283                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 18284  011D96  010F               	movlb	15	; () banked
 18285  011D98  9340               	bcf	64,1,b	;volatile
 18286  011D9A                     l6310:
 18287                           
 18288                           ; BSR set to: 15
 18289                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 18290  011D9A  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18291  011D9E  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18292  011DA2  50DF               	movf	indf2,w,c
 18293  011DA4  010F               	movlb	15	; () banked
 18294  011DA6  6F46               	movwf	70,b	;volatile
 18295                           
 18296                           ; BSR set to: 15
 18297                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 18298  011DA8  0100               	movlb	0	; () banked
 18299  011DAA  EE20 F001          	lfsr	2,1
 18300  011DAE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18301  011DB0  26D9               	addwf	fsr2l,f,c
 18302  011DB2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18303  011DB4  22DA               	addwfc	fsr2h,f,c
 18304  011DB6  50DF               	movf	indf2,w,c
 18305  011DB8  010F               	movlb	15	; () banked
 18306  011DBA  6F47               	movwf	71,b	;volatile
 18307                           
 18308                           ; BSR set to: 15
 18309                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 18310  011DBC  0100               	movlb	0	; () banked
 18311  011DBE  EE20 F002          	lfsr	2,2
 18312  011DC2  5175               	movf	CANsendMessage@data& (0+255),w,b
 18313  011DC4  26D9               	addwf	fsr2l,f,c
 18314  011DC6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18315  011DC8  22DA               	addwfc	fsr2h,f,c
 18316  011DCA  50DF               	movf	indf2,w,c
 18317  011DCC  010F               	movlb	15	; () banked
 18318  011DCE  6F48               	movwf	72,b	;volatile
 18319                           
 18320                           ; BSR set to: 15
 18321                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 18322  011DD0  0100               	movlb	0	; () banked
 18323  011DD2  EE20 F003          	lfsr	2,3
 18324  011DD6  5175               	movf	CANsendMessage@data& (0+255),w,b
 18325  011DD8  26D9               	addwf	fsr2l,f,c
 18326  011DDA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18327  011DDC  22DA               	addwfc	fsr2h,f,c
 18328  011DDE  50DF               	movf	indf2,w,c
 18329  011DE0  010F               	movlb	15	; () banked
 18330  011DE2  6F49               	movwf	73,b	;volatile
 18331                           
 18332                           ; BSR set to: 15
 18333                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 18334  011DE4  0100               	movlb	0	; () banked
 18335  011DE6  EE20 F004          	lfsr	2,4
 18336  011DEA  5175               	movf	CANsendMessage@data& (0+255),w,b
 18337  011DEC  26D9               	addwf	fsr2l,f,c
 18338  011DEE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18339  011DF0  22DA               	addwfc	fsr2h,f,c
 18340  011DF2  50DF               	movf	indf2,w,c
 18341  011DF4  010F               	movlb	15	; () banked
 18342  011DF6  6F4A               	movwf	74,b	;volatile
 18343                           
 18344                           ; BSR set to: 15
 18345                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 18346  011DF8  0100               	movlb	0	; () banked
 18347  011DFA  EE20 F005          	lfsr	2,5
 18348  011DFE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18349  011E00  26D9               	addwf	fsr2l,f,c
 18350  011E02  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18351  011E04  22DA               	addwfc	fsr2h,f,c
 18352  011E06  50DF               	movf	indf2,w,c
 18353  011E08  010F               	movlb	15	; () banked
 18354  011E0A  6F4B               	movwf	75,b	;volatile
 18355                           
 18356                           ; BSR set to: 15
 18357                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 18358  011E0C  0100               	movlb	0	; () banked
 18359  011E0E  EE20 F006          	lfsr	2,6
 18360  011E12  5175               	movf	CANsendMessage@data& (0+255),w,b
 18361  011E14  26D9               	addwf	fsr2l,f,c
 18362  011E16  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18363  011E18  22DA               	addwfc	fsr2h,f,c
 18364  011E1A  50DF               	movf	indf2,w,c
 18365  011E1C  010F               	movlb	15	; () banked
 18366  011E1E  6F4C               	movwf	76,b	;volatile
 18367                           
 18368                           ; BSR set to: 15
 18369                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 18370  011E20  0100               	movlb	0	; () banked
 18371  011E22  EE20 F007          	lfsr	2,7
 18372  011E26  5175               	movf	CANsendMessage@data& (0+255),w,b
 18373  011E28  26D9               	addwf	fsr2l,f,c
 18374  011E2A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18375  011E2C  22DA               	addwfc	fsr2h,f,c
 18376  011E2E  50DF               	movf	indf2,w,c
 18377  011E30  010F               	movlb	15	; () banked
 18378  011E32  6F4D               	movwf	77,b	;volatile
 18379                           
 18380                           ; BSR set to: 15
 18381                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 18382  011E34  010F               	movlb	15	; () banked
 18383  011E36  8740               	bsf	64,3,b	;volatile
 18384                           
 18385                           ; BSR set to: 15
 18386                           ;inc\CANlib.h: 368: return;
 18387  011E38  0012               	return	
 18388  011E3A                     l385:
 18389                           
 18390                           ; BSR set to: 15
 18391                           ;inc\CANlib.h: 369: }
 18392                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 18393  011E3A  010F               	movlb	15	; () banked
 18394  011E3C  B730               	btfsc	48,3,b	;volatile
 18395  011E3E  D13F               	goto	l400
 18396                           
 18397                           ; BSR set to: 15
 18398                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 18399  011E40  C077  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 18400                           
 18401                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 18402  011E44  0100               	movlb	0	; () banked
 18403  011E46  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 18404  011E48  D003               	goto	l401
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 18408  011E4A  010F               	movlb	15	; () banked
 18409  011E4C  8D35               	bsf	53,6,b	;volatile
 18410  011E4E  D002               	goto	l402
 18411  011E50                     l401:
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;inc\CANlib.h: 378: else
 18415                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 18416  011E50  010F               	movlb	15	; () banked
 18417  011E52  9D35               	bcf	53,6,b	;volatile
 18418  011E54                     l402:
 18419                           
 18420                           ; BSR set to: 15
 18421                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 18422  011E54  0100               	movlb	0	; () banked
 18423  011E56  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 18424  011E58  D079               	goto	l403
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;inc\CANlib.h: 382: {
 18428                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 18429  011E5A  0100               	movlb	0	; () banked
 18430  011E5C  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 18431  011E5E  0100               	movlb	0	; () banked
 18432  011E60  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18433  011E62  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18434  011E64  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18435  011E66  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18436                           
 18437                           ; BSR set to: 0
 18438                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 18439  011E68  C07D  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 18443  011E6C  0E00               	movlw	0
 18444  011E6E  0100               	movlb	0	; () banked
 18445  011E70  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18446  011E72  0100               	movlb	0	; () banked
 18447  011E74  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18448  011E76  0EFF               	movlw	255
 18449  011E78  0100               	movlb	0	; () banked
 18450  011E7A  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18451  011E7C  0100               	movlb	0	; () banked
 18452  011E7E  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18453  011E80  0E00               	movlw	0
 18454  011E82  0100               	movlb	0	; () banked
 18455  011E84  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18456  011E86  0100               	movlb	0	; () banked
 18457  011E88  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18458  011E8A  0E00               	movlw	0
 18459  011E8C  0100               	movlb	0	; () banked
 18460  011E8E  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18461  011E90  0100               	movlb	0	; () banked
 18462  011E92  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18463                           
 18464                           ; BSR set to: 0
 18465                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 18466  011E94  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18467  011E98  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18468  011E9C  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18469  011EA0  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18470  011EA4  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18471  011EA8  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18472  011EAC  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18473  011EB0  0100               	movlb	0	; () banked
 18474  011EB2  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18475  011EB4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18476  011EB8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18477  011EBC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18478  011EC0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18479                           
 18480                           ; BSR set to: 0
 18481                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 18482  011EC4  C07D  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 18483                           
 18484                           ; BSR set to: 0
 18485                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 18486  011EC8  0E00               	movlw	0
 18487  011ECA  010F               	movlb	15	; () banked
 18488  011ECC  6F32               	movwf	50,b	;volatile
 18489                           
 18490                           ; BSR set to: 15
 18491                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 18492  011ECE  010F               	movlb	15	; () banked
 18493  011ED0  8732               	bsf	50,3,b	;volatile
 18494                           
 18495                           ; BSR set to: 15
 18496                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18497  011ED2  0100               	movlb	0	; () banked
 18498  011ED4  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18499  011ED6  D002               	goto	l404
 18500                           
 18501                           ; BSR set to: 0
 18502                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18503  011ED8  010F               	movlb	15	; () banked
 18504  011EDA  8132               	bsf	50,0,b	;volatile
 18505  011EDC                     l404:
 18506                           
 18507                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18508  011EDC  0100               	movlb	0	; () banked
 18509  011EDE  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18510  011EE0  D002               	goto	l405
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18514  011EE2  010F               	movlb	15	; () banked
 18515  011EE4  8332               	bsf	50,1,b	;volatile
 18516  011EE6                     l405:
 18517                           
 18518                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18519  011EE6  0100               	movlb	0	; () banked
 18520  011EE8  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18521  011EEA  D002               	goto	l406
 18522                           
 18523                           ; BSR set to: 0
 18524                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18525  011EEC  010F               	movlb	15	; () banked
 18526  011EEE  8B32               	bsf	50,5,b	;volatile
 18527  011EF0                     l406:
 18528                           
 18529                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18530  011EF0  0100               	movlb	0	; () banked
 18531  011EF2  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18532  011EF4  D002               	goto	l407
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18536  011EF6  010F               	movlb	15	; () banked
 18537  011EF8  8D32               	bsf	50,6,b	;volatile
 18538  011EFA                     l407:
 18539                           
 18540                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18541  011EFA  0100               	movlb	0	; () banked
 18542  011EFC  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18543  011EFE  D002               	goto	l6360
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18547  011F00  010F               	movlb	15	; () banked
 18548  011F02  8F32               	bsf	50,7,b	;volatile
 18549  011F04                     l6360:
 18550                           
 18551                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18552  011F04  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18553  011F08  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18554  011F0C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18555  011F10  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18556  011F14  0E16               	movlw	22
 18557  011F16  D006               	goto	u7830
 18558  011F18                     u7835:
 18559  011F18  0100               	movlb	0	; () banked
 18560  011F1A  90D8               	bcf	status,0,c
 18561  011F1C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18562  011F1E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18563  011F20  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18564  011F22  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18565  011F24                     u7830:
 18566  011F24  2EE8               	decfsz	wreg,f,c
 18567  011F26  D7F8               	goto	u7835
 18568  011F28  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18569  011F2C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18570  011F30  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18571  011F34  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18575  011F38  0100               	movlb	0	; () banked
 18576  011F3A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18577  011F3C  0100               	movlb	0	; () banked
 18578  011F3E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18579  011F40  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18580  011F42  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18581  011F44  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18582                           
 18583                           ; BSR set to: 0
 18584                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18585  011F46  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18586                           
 18587                           ;inc\CANlib.h: 407: }
 18588  011F4A  D059               	goto	l6380
 18589  011F4C                     l403:
 18590                           
 18591                           ; BSR set to: 0
 18592                           ;inc\CANlib.h: 409: else
 18593                           ;inc\CANlib.h: 411: {
 18594                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18595  011F4C  010F               	movlb	15	; () banked
 18596  011F4E  9732               	bcf	50,3,b	;volatile
 18597                           
 18598                           ; BSR set to: 15
 18599                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18600  011F50  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18601  011F54  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18602  011F58  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18603  011F5C  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18604  011F60  0E04               	movlw	4
 18605  011F62  D006               	goto	u7840
 18606  011F64                     u7845:
 18607  011F64  0100               	movlb	0	; () banked
 18608  011F66  90D8               	bcf	status,0,c
 18609  011F68  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18610  011F6A  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18611  011F6C  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18612  011F6E  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18613  011F70                     u7840:
 18614  011F70  2EE8               	decfsz	wreg,f,c
 18615  011F72  D7F8               	goto	u7845
 18616  011F74  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18617  011F78  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18618  011F7C  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18619  011F80  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18623  011F84  0100               	movlb	0	; () banked
 18624  011F86  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18625  011F88  0100               	movlb	0	; () banked
 18626  011F8A  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18627  011F8C  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18628  011F8E  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18629  011F90  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18633  011F92  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18637  011F96  0E07               	movlw	7
 18638  011F98  0100               	movlb	0	; () banked
 18639  011F9A  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18640  011F9C  0100               	movlb	0	; () banked
 18641  011F9E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18642  011FA0  0E00               	movlw	0
 18643  011FA2  0100               	movlb	0	; () banked
 18644  011FA4  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18645  011FA6  0100               	movlb	0	; () banked
 18646  011FA8  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18647  011FAA  0E00               	movlw	0
 18648  011FAC  0100               	movlb	0	; () banked
 18649  011FAE  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18650  011FB0  0100               	movlb	0	; () banked
 18651  011FB2  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18652  011FB4  0E00               	movlw	0
 18653  011FB6  0100               	movlb	0	; () banked
 18654  011FB8  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18655  011FBA  0100               	movlb	0	; () banked
 18656  011FBC  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18657                           
 18658                           ; BSR set to: 0
 18659                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18660  011FBE  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18661  011FC2  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18662  011FC6  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18663  011FCA  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18664  011FCE  0E05               	movlw	5
 18665  011FD0                     u7855:
 18666  011FD0  90D8               	bcf	status,0,c
 18667  011FD2  0100               	movlb	0	; () banked
 18668  011FD4  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18669  011FD6  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18670  011FD8  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18671  011FDA  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18672  011FDC  2EE8               	decfsz	wreg,f,c
 18673  011FDE  D7F8               	goto	u7855
 18674  011FE0  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18675  011FE4  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18676  011FE8  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18677  011FEC  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18678                           
 18679                           ; BSR set to: 0
 18680                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18681  011FF0  010F               	movlb	15	; () banked
 18682  011FF2  5132               	movf	50,w,b	;volatile
 18683  011FF4  0B1F               	andlw	31
 18684  011FF6  010F               	movlb	15	; () banked
 18685  011FF8  6F32               	movwf	50,b	;volatile
 18686                           
 18687                           ; BSR set to: 15
 18688                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18689  011FFA  C07D  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 18690  011FFE                     l6380:
 18691                           
 18692                           ;inc\CANlib.h: 422: }
 18693                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18694  011FFE  0100               	movlb	0	; () banked
 18695  012000  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18696  012002  D003               	goto	l410
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18700  012004  010F               	movlb	15	; () banked
 18701  012006  8130               	bsf	48,0,b	;volatile
 18702  012008  D002               	goto	l411
 18703  01200A                     l410:
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;inc\CANlib.h: 426: else
 18707                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18708  01200A  010F               	movlb	15	; () banked
 18709  01200C  9130               	bcf	48,0,b	;volatile
 18710  01200E                     l411:
 18711                           
 18712                           ; BSR set to: 15
 18713                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18714  01200E  0100               	movlb	0	; () banked
 18715  012010  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18716  012012  D003               	goto	l412
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18720  012014  010F               	movlb	15	; () banked
 18721  012016  8330               	bsf	48,1,b	;volatile
 18722  012018  D002               	goto	l6386
 18723  01201A                     l412:
 18724                           
 18725                           ; BSR set to: 0
 18726                           ;inc\CANlib.h: 430: else
 18727                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18728  01201A  010F               	movlb	15	; () banked
 18729  01201C  9330               	bcf	48,1,b	;volatile
 18730  01201E                     l6386:
 18731                           
 18732                           ; BSR set to: 15
 18733                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18734  01201E  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18735  012022  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18736  012026  50DF               	movf	indf2,w,c
 18737  012028  010F               	movlb	15	; () banked
 18738  01202A  6F36               	movwf	54,b	;volatile
 18739                           
 18740                           ; BSR set to: 15
 18741                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18742  01202C  0100               	movlb	0	; () banked
 18743  01202E  EE20 F001          	lfsr	2,1
 18744  012032  5175               	movf	CANsendMessage@data& (0+255),w,b
 18745  012034  26D9               	addwf	fsr2l,f,c
 18746  012036  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18747  012038  22DA               	addwfc	fsr2h,f,c
 18748  01203A  50DF               	movf	indf2,w,c
 18749  01203C  010F               	movlb	15	; () banked
 18750  01203E  6F37               	movwf	55,b	;volatile
 18751                           
 18752                           ; BSR set to: 15
 18753                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18754  012040  0100               	movlb	0	; () banked
 18755  012042  EE20 F002          	lfsr	2,2
 18756  012046  5175               	movf	CANsendMessage@data& (0+255),w,b
 18757  012048  26D9               	addwf	fsr2l,f,c
 18758  01204A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18759  01204C  22DA               	addwfc	fsr2h,f,c
 18760  01204E  50DF               	movf	indf2,w,c
 18761  012050  010F               	movlb	15	; () banked
 18762  012052  6F38               	movwf	56,b	;volatile
 18763                           
 18764                           ; BSR set to: 15
 18765                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18766  012054  0100               	movlb	0	; () banked
 18767  012056  EE20 F003          	lfsr	2,3
 18768  01205A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18769  01205C  26D9               	addwf	fsr2l,f,c
 18770  01205E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18771  012060  22DA               	addwfc	fsr2h,f,c
 18772  012062  50DF               	movf	indf2,w,c
 18773  012064  010F               	movlb	15	; () banked
 18774  012066  6F39               	movwf	57,b	;volatile
 18775                           
 18776                           ; BSR set to: 15
 18777                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18778  012068  0100               	movlb	0	; () banked
 18779  01206A  EE20 F004          	lfsr	2,4
 18780  01206E  5175               	movf	CANsendMessage@data& (0+255),w,b
 18781  012070  26D9               	addwf	fsr2l,f,c
 18782  012072  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18783  012074  22DA               	addwfc	fsr2h,f,c
 18784  012076  50DF               	movf	indf2,w,c
 18785  012078  010F               	movlb	15	; () banked
 18786  01207A  6F3A               	movwf	58,b	;volatile
 18787                           
 18788                           ; BSR set to: 15
 18789                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18790  01207C  0100               	movlb	0	; () banked
 18791  01207E  EE20 F005          	lfsr	2,5
 18792  012082  5175               	movf	CANsendMessage@data& (0+255),w,b
 18793  012084  26D9               	addwf	fsr2l,f,c
 18794  012086  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18795  012088  22DA               	addwfc	fsr2h,f,c
 18796  01208A  50DF               	movf	indf2,w,c
 18797  01208C  010F               	movlb	15	; () banked
 18798  01208E  6F3B               	movwf	59,b	;volatile
 18799                           
 18800                           ; BSR set to: 15
 18801                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18802  012090  0100               	movlb	0	; () banked
 18803  012092  EE20 F006          	lfsr	2,6
 18804  012096  5175               	movf	CANsendMessage@data& (0+255),w,b
 18805  012098  26D9               	addwf	fsr2l,f,c
 18806  01209A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18807  01209C  22DA               	addwfc	fsr2h,f,c
 18808  01209E  50DF               	movf	indf2,w,c
 18809  0120A0  010F               	movlb	15	; () banked
 18810  0120A2  6F3C               	movwf	60,b	;volatile
 18811                           
 18812                           ; BSR set to: 15
 18813                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18814  0120A4  0100               	movlb	0	; () banked
 18815  0120A6  EE20 F007          	lfsr	2,7
 18816  0120AA  5175               	movf	CANsendMessage@data& (0+255),w,b
 18817  0120AC  26D9               	addwf	fsr2l,f,c
 18818  0120AE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18819  0120B0  22DA               	addwfc	fsr2h,f,c
 18820  0120B2  50DF               	movf	indf2,w,c
 18821  0120B4  010F               	movlb	15	; () banked
 18822  0120B6  6F3D               	movwf	61,b	;volatile
 18823                           
 18824                           ; BSR set to: 15
 18825                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18826  0120B8  010F               	movlb	15	; () banked
 18827  0120BA  8730               	bsf	48,3,b	;volatile
 18828                           
 18829                           ; BSR set to: 15
 18830                           ;inc\CANlib.h: 444: return;
 18831  0120BC  0012               	return	
 18832  0120BE                     l400:
 18833                           
 18834                           ; BSR set to: 15
 18835                           ;inc\CANlib.h: 445: }
 18836                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18837  0120BE  010F               	movlb	15	; () banked
 18838  0120C0  B720               	btfsc	32,3,b	;volatile
 18839  0120C2  0012               	return	
 18840                           
 18841                           ; BSR set to: 15
 18842                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18843  0120C4  C077  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18844                           
 18845                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18846  0120C8  0100               	movlb	0	; () banked
 18847  0120CA  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 18848  0120CC  D003               	goto	l415
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18852  0120CE  010F               	movlb	15	; () banked
 18853  0120D0  8D25               	bsf	37,6,b	;volatile
 18854  0120D2  D002               	goto	l416
 18855  0120D4                     l415:
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;inc\CANlib.h: 454: else
 18859                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18860  0120D4  010F               	movlb	15	; () banked
 18861  0120D6  9D25               	bcf	37,6,b	;volatile
 18862  0120D8                     l416:
 18863                           
 18864                           ; BSR set to: 15
 18865                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18866  0120D8  0100               	movlb	0	; () banked
 18867  0120DA  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 18868  0120DC  D079               	goto	l417
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;inc\CANlib.h: 458: {
 18872                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18873  0120DE  0100               	movlb	0	; () banked
 18874  0120E0  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 18875  0120E2  0100               	movlb	0	; () banked
 18876  0120E4  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18877  0120E6  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18878  0120E8  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18879  0120EA  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18883  0120EC  C07D  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18887  0120F0  0E00               	movlw	0
 18888  0120F2  0100               	movlb	0	; () banked
 18889  0120F4  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18890  0120F6  0100               	movlb	0	; () banked
 18891  0120F8  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18892  0120FA  0EFF               	movlw	255
 18893  0120FC  0100               	movlb	0	; () banked
 18894  0120FE  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18895  012100  0100               	movlb	0	; () banked
 18896  012102  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18897  012104  0E00               	movlw	0
 18898  012106  0100               	movlb	0	; () banked
 18899  012108  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18900  01210A  0100               	movlb	0	; () banked
 18901  01210C  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18902  01210E  0E00               	movlw	0
 18903  012110  0100               	movlb	0	; () banked
 18904  012112  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18905  012114  0100               	movlb	0	; () banked
 18906  012116  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18907                           
 18908                           ; BSR set to: 0
 18909                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18910  012118  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18911  01211C  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18912  012120  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18913  012124  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18914  012128  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18915  01212C  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18916  012130  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18917  012134  0100               	movlb	0	; () banked
 18918  012136  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18919  012138  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18920  01213C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18921  012140  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18922  012144  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18923                           
 18924                           ; BSR set to: 0
 18925                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18926  012148  C07D  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18930  01214C  0E00               	movlw	0
 18931  01214E  010F               	movlb	15	; () banked
 18932  012150  6F22               	movwf	34,b	;volatile
 18933                           
 18934                           ; BSR set to: 15
 18935                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18936  012152  010F               	movlb	15	; () banked
 18937  012154  8722               	bsf	34,3,b	;volatile
 18938                           
 18939                           ; BSR set to: 15
 18940                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18941  012156  0100               	movlb	0	; () banked
 18942  012158  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18943  01215A  D002               	goto	l418
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18947  01215C  010F               	movlb	15	; () banked
 18948  01215E  8122               	bsf	34,0,b	;volatile
 18949  012160                     l418:
 18950                           
 18951                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18952  012160  0100               	movlb	0	; () banked
 18953  012162  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18954  012164  D002               	goto	l419
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18958  012166  010F               	movlb	15	; () banked
 18959  012168  8322               	bsf	34,1,b	;volatile
 18960  01216A                     l419:
 18961                           
 18962                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18963  01216A  0100               	movlb	0	; () banked
 18964  01216C  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18965  01216E  D002               	goto	l420
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18969  012170  010F               	movlb	15	; () banked
 18970  012172  8B22               	bsf	34,5,b	;volatile
 18971  012174                     l420:
 18972                           
 18973                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18974  012174  0100               	movlb	0	; () banked
 18975  012176  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18976  012178  D002               	goto	l421
 18977                           
 18978                           ; BSR set to: 0
 18979                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18980  01217A  010F               	movlb	15	; () banked
 18981  01217C  8D22               	bsf	34,6,b	;volatile
 18982  01217E                     l421:
 18983                           
 18984                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18985  01217E  0100               	movlb	0	; () banked
 18986  012180  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18987  012182  D002               	goto	l6436
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18991  012184  010F               	movlb	15	; () banked
 18992  012186  8F22               	bsf	34,7,b	;volatile
 18993  012188                     l6436:
 18994                           
 18995                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18996  012188  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18997  01218C  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18998  012190  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18999  012194  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19000  012198  0E16               	movlw	22
 19001  01219A  D006               	goto	u7960
 19002  01219C                     u7965:
 19003  01219C  0100               	movlb	0	; () banked
 19004  01219E  90D8               	bcf	status,0,c
 19005  0121A0  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19006  0121A2  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19007  0121A4  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19008  0121A6  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19009  0121A8                     u7960:
 19010  0121A8  2EE8               	decfsz	wreg,f,c
 19011  0121AA  D7F8               	goto	u7965
 19012  0121AC  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19013  0121B0  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19014  0121B4  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19015  0121B8  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19016                           
 19017                           ; BSR set to: 0
 19018                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 19019  0121BC  0100               	movlb	0	; () banked
 19020  0121BE  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19021  0121C0  0100               	movlb	0	; () banked
 19022  0121C2  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19023  0121C4  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19024  0121C6  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19025  0121C8  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19026                           
 19027                           ; BSR set to: 0
 19028                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 19029  0121CA  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 19030                           
 19031                           ;inc\CANlib.h: 483: }
 19032  0121CE  D059               	goto	l6456
 19033  0121D0                     l417:
 19034                           
 19035                           ; BSR set to: 0
 19036                           ;inc\CANlib.h: 485: else
 19037                           ;inc\CANlib.h: 487: {
 19038                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 19039  0121D0  010F               	movlb	15	; () banked
 19040  0121D2  9722               	bcf	34,3,b	;volatile
 19041                           
 19042                           ; BSR set to: 15
 19043                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 19044  0121D4  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19045  0121D8  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19046  0121DC  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19047  0121E0  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19048  0121E4  0E04               	movlw	4
 19049  0121E6  D006               	goto	u7970
 19050  0121E8                     u7975:
 19051  0121E8  0100               	movlb	0	; () banked
 19052  0121EA  90D8               	bcf	status,0,c
 19053  0121EC  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19054  0121EE  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19055  0121F0  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19056  0121F2  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19057  0121F4                     u7970:
 19058  0121F4  2EE8               	decfsz	wreg,f,c
 19059  0121F6  D7F8               	goto	u7975
 19060  0121F8  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19061  0121FC  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19062  012200  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19063  012204  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 19067  012208  0100               	movlb	0	; () banked
 19068  01220A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19069  01220C  0100               	movlb	0	; () banked
 19070  01220E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19071  012210  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19072  012212  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19073  012214  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 19077  012216  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 19081  01221A  0E07               	movlw	7
 19082  01221C  0100               	movlb	0	; () banked
 19083  01221E  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19084  012220  0100               	movlb	0	; () banked
 19085  012222  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19086  012224  0E00               	movlw	0
 19087  012226  0100               	movlb	0	; () banked
 19088  012228  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19089  01222A  0100               	movlb	0	; () banked
 19090  01222C  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19091  01222E  0E00               	movlw	0
 19092  012230  0100               	movlb	0	; () banked
 19093  012232  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19094  012234  0100               	movlb	0	; () banked
 19095  012236  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19096  012238  0E00               	movlw	0
 19097  01223A  0100               	movlb	0	; () banked
 19098  01223C  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19099  01223E  0100               	movlb	0	; () banked
 19100  012240  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 19104  012242  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19105  012246  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19106  01224A  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19107  01224E  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19108  012252  0E05               	movlw	5
 19109  012254                     u7985:
 19110  012254  90D8               	bcf	status,0,c
 19111  012256  0100               	movlb	0	; () banked
 19112  012258  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 19113  01225A  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 19114  01225C  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 19115  01225E  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 19116  012260  2EE8               	decfsz	wreg,f,c
 19117  012262  D7F8               	goto	u7985
 19118  012264  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19119  012268  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19120  01226C  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19121  012270  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 19125  012274  010F               	movlb	15	; () banked
 19126  012276  5122               	movf	34,w,b	;volatile
 19127  012278  0B1F               	andlw	31
 19128  01227A  010F               	movlb	15	; () banked
 19129  01227C  6F22               	movwf	34,b	;volatile
 19130                           
 19131                           ; BSR set to: 15
 19132                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 19133  01227E  C07D  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 19134  012282                     l6456:
 19135                           
 19136                           ;inc\CANlib.h: 498: }
 19137                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 19138  012282  0100               	movlb	0	; () banked
 19139  012284  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 19140  012286  D003               	goto	l424
 19141                           
 19142                           ; BSR set to: 0
 19143                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 19144  012288  010F               	movlb	15	; () banked
 19145  01228A  8120               	bsf	32,0,b	;volatile
 19146  01228C  D002               	goto	l425
 19147  01228E                     l424:
 19148                           
 19149                           ; BSR set to: 0
 19150                           ;inc\CANlib.h: 502: else
 19151                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 19152  01228E  010F               	movlb	15	; () banked
 19153  012290  9120               	bcf	32,0,b	;volatile
 19154  012292                     l425:
 19155                           
 19156                           ; BSR set to: 15
 19157                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 19158  012292  0100               	movlb	0	; () banked
 19159  012294  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 19160  012296  D003               	goto	l426
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 19164  012298  010F               	movlb	15	; () banked
 19165  01229A  8320               	bsf	32,1,b	;volatile
 19166  01229C  D002               	goto	l6462
 19167  01229E                     l426:
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;inc\CANlib.h: 506: else
 19171                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 19172  01229E  010F               	movlb	15	; () banked
 19173  0122A0  9320               	bcf	32,1,b	;volatile
 19174  0122A2                     l6462:
 19175                           
 19176                           ; BSR set to: 15
 19177                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 19178  0122A2  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 19179  0122A6  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 19180  0122AA  50DF               	movf	indf2,w,c
 19181  0122AC  010F               	movlb	15	; () banked
 19182  0122AE  6F26               	movwf	38,b	;volatile
 19183                           
 19184                           ; BSR set to: 15
 19185                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 19186  0122B0  0100               	movlb	0	; () banked
 19187  0122B2  EE20 F001          	lfsr	2,1
 19188  0122B6  5175               	movf	CANsendMessage@data& (0+255),w,b
 19189  0122B8  26D9               	addwf	fsr2l,f,c
 19190  0122BA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19191  0122BC  22DA               	addwfc	fsr2h,f,c
 19192  0122BE  50DF               	movf	indf2,w,c
 19193  0122C0  010F               	movlb	15	; () banked
 19194  0122C2  6F27               	movwf	39,b	;volatile
 19195                           
 19196                           ; BSR set to: 15
 19197                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 19198  0122C4  0100               	movlb	0	; () banked
 19199  0122C6  EE20 F002          	lfsr	2,2
 19200  0122CA  5175               	movf	CANsendMessage@data& (0+255),w,b
 19201  0122CC  26D9               	addwf	fsr2l,f,c
 19202  0122CE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19203  0122D0  22DA               	addwfc	fsr2h,f,c
 19204  0122D2  50DF               	movf	indf2,w,c
 19205  0122D4  010F               	movlb	15	; () banked
 19206  0122D6  6F28               	movwf	40,b	;volatile
 19207                           
 19208                           ; BSR set to: 15
 19209                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 19210  0122D8  0100               	movlb	0	; () banked
 19211  0122DA  EE20 F003          	lfsr	2,3
 19212  0122DE  5175               	movf	CANsendMessage@data& (0+255),w,b
 19213  0122E0  26D9               	addwf	fsr2l,f,c
 19214  0122E2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19215  0122E4  22DA               	addwfc	fsr2h,f,c
 19216  0122E6  50DF               	movf	indf2,w,c
 19217  0122E8  010F               	movlb	15	; () banked
 19218  0122EA  6F29               	movwf	41,b	;volatile
 19219                           
 19220                           ; BSR set to: 15
 19221                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 19222  0122EC  0100               	movlb	0	; () banked
 19223  0122EE  EE20 F004          	lfsr	2,4
 19224  0122F2  5175               	movf	CANsendMessage@data& (0+255),w,b
 19225  0122F4  26D9               	addwf	fsr2l,f,c
 19226  0122F6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19227  0122F8  22DA               	addwfc	fsr2h,f,c
 19228  0122FA  50DF               	movf	indf2,w,c
 19229  0122FC  010F               	movlb	15	; () banked
 19230  0122FE  6F2A               	movwf	42,b	;volatile
 19231                           
 19232                           ; BSR set to: 15
 19233                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 19234  012300  0100               	movlb	0	; () banked
 19235  012302  EE20 F005          	lfsr	2,5
 19236  012306  5175               	movf	CANsendMessage@data& (0+255),w,b
 19237  012308  26D9               	addwf	fsr2l,f,c
 19238  01230A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19239  01230C  22DA               	addwfc	fsr2h,f,c
 19240  01230E  50DF               	movf	indf2,w,c
 19241  012310  010F               	movlb	15	; () banked
 19242  012312  6F2B               	movwf	43,b	;volatile
 19243                           
 19244                           ; BSR set to: 15
 19245                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 19246  012314  0100               	movlb	0	; () banked
 19247  012316  EE20 F006          	lfsr	2,6
 19248  01231A  5175               	movf	CANsendMessage@data& (0+255),w,b
 19249  01231C  26D9               	addwf	fsr2l,f,c
 19250  01231E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19251  012320  22DA               	addwfc	fsr2h,f,c
 19252  012322  50DF               	movf	indf2,w,c
 19253  012324  010F               	movlb	15	; () banked
 19254  012326  6F2C               	movwf	44,b	;volatile
 19255                           
 19256                           ; BSR set to: 15
 19257                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 19258  012328  0100               	movlb	0	; () banked
 19259  01232A  EE20 F007          	lfsr	2,7
 19260  01232E  5175               	movf	CANsendMessage@data& (0+255),w,b
 19261  012330  26D9               	addwf	fsr2l,f,c
 19262  012332  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19263  012334  22DA               	addwfc	fsr2h,f,c
 19264  012336  50DF               	movf	indf2,w,c
 19265  012338  010F               	movlb	15	; () banked
 19266  01233A  6F2D               	movwf	45,b	;volatile
 19267                           
 19268                           ; BSR set to: 15
 19269                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19270  01233C  010F               	movlb	15	; () banked
 19271  01233E  8720               	bsf	32,3,b	;volatile
 19272                           
 19273                           ; BSR set to: 15
 19274                           ;inc\CANlib.h: 520: return;
 19275  012340  0012               	return	
 19276  012342                     __end_of_CANsendMessage:
 19277                           	opt stack 0
 19278                           tblptru	equ	0xFF8
 19279                           tblptrh	equ	0xFF7
 19280                           tblptrl	equ	0xFF6
 19281                           tablat	equ	0xFF5
 19282                           prodh	equ	0xFF4
 19283                           prodl	equ	0xFF3
 19284                           intcon	equ	0xFF2
 19285                           postinc0	equ	0xFEE
 19286                           wreg	equ	0xFE8
 19287                           indf1	equ	0xFE7
 19288                           plusw1	equ	0xFE3
 19289                           fsr1h	equ	0xFE2
 19290                           fsr1l	equ	0xFE1
 19291                           indf2	equ	0xFDF
 19292                           postinc2	equ	0xFDE
 19293                           plusw2	equ	0xFDB
 19294                           fsr2h	equ	0xFDA
 19295                           fsr2l	equ	0xFD9
 19296                           status	equ	0xFD8
 19297                           
 19298 ;; *************** function _CANisTxReady *****************
 19299 ;; Defined at:
 19300 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19301 ;; Parameters:    Size  Location     Type
 19302 ;;		None
 19303 ;; Auto vars:     Size  Location     Type
 19304 ;;		None
 19305 ;; Return value:  Size  Location     Type
 19306 ;;                  1    wreg      unsigned char 
 19307 ;; Registers used:
 19308 ;;		wreg, status,2
 19309 ;; Tracked objects:
 19310 ;;		On entry : 0/0
 19311 ;;		On exit  : 0/0
 19312 ;;		Unchanged: 0/0
 19313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19318 ;;Total ram usage:        1 bytes
 19319 ;; Hardware stack levels used:    1
 19320 ;; Hardware stack levels required when called:    3
 19321 ;; This function calls:
 19322 ;;		Nothing
 19323 ;; This function is called by:
 19324 ;;		_main
 19325 ;;		_LCD_Handler
 19326 ;;		_CAN_Tx
 19327 ;; This function uses a non-reentrant model
 19328 ;;
 19329                           
 19330                           	psect	text55
 19331  016510                     __ptext55:
 19332                           	opt stack 0
 19333  016510                     _CANisTxReady:
 19334                           	opt stack 26
 19335                           
 19336                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 19337                           
 19338                           ; BSR set to: 15
 19339                           ;incstack = 0
 19340  016510  0E01               	movlw	1
 19341  016512  0100               	movlb	0	; () banked
 19342  016514  6F71               	movwf	_CANisTxReady$3255& (0+255),b
 19343                           
 19344                           ; BSR set to: 0
 19345  016516  010F               	movlb	15	; () banked
 19346  016518  A740               	btfss	64,3,b	;volatile
 19347  01651A  D009               	goto	l578
 19348                           
 19349                           ; BSR set to: 15
 19350  01651C  010F               	movlb	15	; () banked
 19351  01651E  A730               	btfss	48,3,b	;volatile
 19352  016520  D006               	goto	l578
 19353                           
 19354                           ; BSR set to: 15
 19355  016522  010F               	movlb	15	; () banked
 19356  016524  A720               	btfss	32,3,b	;volatile
 19357  016526  D003               	goto	l578
 19358                           
 19359                           ; BSR set to: 15
 19360  016528  0E00               	movlw	0
 19361  01652A  0100               	movlb	0	; () banked
 19362  01652C  6F71               	movwf	_CANisTxReady$3255& (0+255),b
 19363  01652E                     l578:
 19364  01652E  0100               	movlb	0	; () banked
 19365  016530  5171               	movf	_CANisTxReady$3255& (0+255),w,b
 19366  016532  0012               	return	
 19367  016534                     __end_of_CANisTxReady:
 19368                           	opt stack 0
 19369                           tblptru	equ	0xFF8
 19370                           tblptrh	equ	0xFF7
 19371                           tblptrl	equ	0xFF6
 19372                           tablat	equ	0xFF5
 19373                           prodh	equ	0xFF4
 19374                           prodl	equ	0xFF3
 19375                           intcon	equ	0xFF2
 19376                           postinc0	equ	0xFEE
 19377                           wreg	equ	0xFE8
 19378                           indf1	equ	0xFE7
 19379                           plusw1	equ	0xFE3
 19380                           fsr1h	equ	0xFE2
 19381                           fsr1l	equ	0xFE1
 19382                           indf2	equ	0xFDF
 19383                           postinc2	equ	0xFDE
 19384                           plusw2	equ	0xFDB
 19385                           fsr2h	equ	0xFDA
 19386                           fsr2l	equ	0xFD9
 19387                           status	equ	0xFD8
 19388                           
 19389 ;; *************** function _CAN_Rx *****************
 19390 ;; Defined at:
 19391 ;;		line 638 in file "RemoteCan.c"
 19392 ;; Parameters:    Size  Location     Type
 19393 ;;		None
 19394 ;; Auto vars:     Size  Location     Type
 19395 ;;		None
 19396 ;; Return value:  Size  Location     Type
 19397 ;;		None               void
 19398 ;; Registers used:
 19399 ;;		wreg, status,2, status,0
 19400 ;; Tracked objects:
 19401 ;;		On entry : 0/0
 19402 ;;		On exit  : 0/0
 19403 ;;		Unchanged: 0/0
 19404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19407 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19408 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19409 ;;Total ram usage:        4 bytes
 19410 ;; Hardware stack levels used:    1
 19411 ;; Hardware stack levels required when called:    3
 19412 ;; This function calls:
 19413 ;;		Nothing
 19414 ;; This function is called by:
 19415 ;;		_main
 19416 ;; This function uses a non-reentrant model
 19417 ;;
 19418                           
 19419                           	psect	text56
 19420  015F08                     __ptext56:
 19421                           	opt stack 0
 19422  015F08                     _CAN_Rx:
 19423                           	opt stack 27
 19424                           
 19425                           ;RemoteCan.c: 659: if ((id == 0b00000001000)&&(RTR_Flag == 0)) {
 19426                           
 19427                           ; BSR set to: 0
 19428                           ;incstack = 0
 19429  015F08  0E08               	movlw	8
 19430  015F0A  180C               	xorwf	_id,w,c	;volatile
 19431  015F0C  100D               	iorwf	_id+1,w,c	;volatile
 19432  015F0E  100E               	iorwf	_id+2,w,c	;volatile
 19433  015F10  100F               	iorwf	_id+3,w,c	;volatile
 19434  015F12  B4D8               	btfsc	status,2,c
 19435  015F14  BA4B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19436  015F16  D027               	goto	l7200
 19437                           
 19438                           ;RemoteCan.c: 660: left_speed = data_speed_rx[1];
 19439  015F18  C002  F022         	movff	_data_speed_rx+1,_left_speed	;volatile
 19440  015F1C  6A23               	clrf	_left_speed+1,c	;volatile
 19441                           
 19442                           ;RemoteCan.c: 661: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 19443  015F1E  5022               	movf	_left_speed,w,c	;volatile
 19444  015F20  0100               	movlb	0	; () banked
 19445  015F22  6F71               	movwf	??_CAN_Rx& (0+255),b
 19446  015F24  5001               	movf	_data_speed_rx,w,c	;volatile
 19447  015F26  6E22               	movwf	_left_speed,c	;volatile
 19448  015F28  C071  F023         	movff	??_CAN_Rx,_left_speed+1	;volatile
 19449                           
 19450                           ; BSR set to: 0
 19451                           ;RemoteCan.c: 662: right_speed = data_speed_rx[3];
 19452  015F2C  C004  F024         	movff	_data_speed_rx+3,_right_speed	;volatile
 19453  015F30  6A25               	clrf	_right_speed+1,c	;volatile
 19454                           
 19455                           ;RemoteCan.c: 663: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 19456  015F32  5024               	movf	_right_speed,w,c	;volatile
 19457  015F34  0100               	movlb	0	; () banked
 19458  015F36  6F71               	movwf	??_CAN_Rx& (0+255),b
 19459  015F38  5003               	movf	_data_speed_rx+2,w,c	;volatile
 19460  015F3A  6E24               	movwf	_right_speed,c	;volatile
 19461  015F3C  C071  F025         	movff	??_CAN_Rx,_right_speed+1	;volatile
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;RemoteCan.c: 664: actual_speed = (right_speed + left_speed) / 2;
 19465  015F40  5022               	movf	_left_speed,w,c	;volatile
 19466  015F42  2424               	addwf	_right_speed,w,c	;volatile
 19467  015F44  0100               	movlb	0	; () banked
 19468  015F46  6F71               	movwf	??_CAN_Rx& (0+255),b
 19469  015F48  5023               	movf	_left_speed+1,w,c	;volatile
 19470  015F4A  2025               	addwfc	_right_speed+1,w,c	;volatile
 19471  015F4C  0100               	movlb	0	; () banked
 19472  015F4E  6F72               	movwf	(??_CAN_Rx+1)& (0+255),b
 19473  015F50  90D8               	bcf	status,0,c
 19474  015F52  0100               	movlb	0	; () banked
 19475  015F54  3172               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 19476  015F56  0100               	movlb	0	; () banked
 19477  015F58  6F73               	movwf	(??_CAN_Rx+2)& (0+255),b
 19478  015F5A  0100               	movlb	0	; () banked
 19479  015F5C  3171               	rrcf	??_CAN_Rx& (0+255),w,b
 19480  015F5E  0100               	movlb	0	; () banked
 19481  015F60  6FE1               	movwf	_actual_speed& (0+255),b	;volatile
 19482  015F62  C073  F0E2         	movff	??_CAN_Rx+2,_actual_speed+1	;volatile
 19483  015F66                     l7200:
 19484                           
 19485                           ;RemoteCan.c: 665: }
 19486                           ;RemoteCan.c: 667: if (id == 0b00000001011) {
 19487  015F66  0E0B               	movlw	11
 19488  015F68  180C               	xorwf	_id,w,c	;volatile
 19489  015F6A  100D               	iorwf	_id+1,w,c	;volatile
 19490  015F6C  100E               	iorwf	_id+2,w,c	;volatile
 19491  015F6E  100F               	iorwf	_id+3,w,c	;volatile
 19492  015F70  A4D8               	btfss	status,2,c
 19493  015F72  0012               	return	
 19494                           
 19495                           ;RemoteCan.c: 668: battery = data[0];
 19496  015F74  C125  F028         	movff	_data,_battery	;volatile
 19497  015F78  0012               	return	
 19498  015F7A                     __end_of_CAN_Rx:
 19499                           	opt stack 0
 19500                           tblptru	equ	0xFF8
 19501                           tblptrh	equ	0xFF7
 19502                           tblptrl	equ	0xFF6
 19503                           tablat	equ	0xFF5
 19504                           prodh	equ	0xFF4
 19505                           prodl	equ	0xFF3
 19506                           intcon	equ	0xFF2
 19507                           postinc0	equ	0xFEE
 19508                           wreg	equ	0xFE8
 19509                           indf1	equ	0xFE7
 19510                           plusw1	equ	0xFE3
 19511                           fsr1h	equ	0xFE2
 19512                           fsr1l	equ	0xFE1
 19513                           indf2	equ	0xFDF
 19514                           postinc2	equ	0xFDE
 19515                           plusw2	equ	0xFDB
 19516                           fsr2h	equ	0xFDA
 19517                           fsr2l	equ	0xFD9
 19518                           status	equ	0xFD8
 19519                           
 19520 ;; *************** function _ISR_bassa *****************
 19521 ;; Defined at:
 19522 ;;		line 203 in file "RemoteCan.c"
 19523 ;; Parameters:    Size  Location     Type
 19524 ;;		None
 19525 ;; Auto vars:     Size  Location     Type
 19526 ;;		None
 19527 ;; Return value:  Size  Location     Type
 19528 ;;		None               void
 19529 ;; Registers used:
 19530 ;;		wreg, status,2, status,0
 19531 ;; Tracked objects:
 19532 ;;		On entry : 0/0
 19533 ;;		On exit  : 0/0
 19534 ;;		Unchanged: 0/0
 19535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19538 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19539 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19540 ;;Total ram usage:       17 bytes
 19541 ;; Hardware stack levels used:    1
 19542 ;; Hardware stack levels required when called:    2
 19543 ;; This function calls:
 19544 ;;		Nothing
 19545 ;; This function is called by:
 19546 ;;		Interrupt level 1
 19547 ;; This function uses a non-reentrant model
 19548 ;;
 19549                           
 19550                           	psect	intcodelo
 19551  000018                     __pintcodelo:
 19552                           	opt stack 0
 19553  000018                     _ISR_bassa:
 19554                           	opt stack 20
 19555                           
 19556                           ;incstack = 0
 19557  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19558  00001A  CFD8 F02A          	movff	status,??_ISR_bassa
 19559  00001E  CFE8 F02B          	movff	wreg,??_ISR_bassa+1
 19560  000022  CFE0 F02C          	movff	bsr,??_ISR_bassa+2
 19561  000026  CFFA F02D          	movff	pclath,??_ISR_bassa+3
 19562  00002A  CFFB F02E          	movff	pclatu,??_ISR_bassa+4
 19563  00002E  CFE9 F02F          	movff	fsr0l,??_ISR_bassa+5
 19564  000032  CFEA F030          	movff	fsr0h,??_ISR_bassa+6
 19565  000036  CFE1 F031          	movff	fsr1l,??_ISR_bassa+7
 19566  00003A  CFE2 F032          	movff	fsr1h,??_ISR_bassa+8
 19567  00003E  CFD9 F033          	movff	fsr2l,??_ISR_bassa+9
 19568  000042  CFDA F034          	movff	fsr2h,??_ISR_bassa+10
 19569  000046  CFF3 F035          	movff	prodl,??_ISR_bassa+11
 19570  00004A  CFF4 F036          	movff	prodh,??_ISR_bassa+12
 19571  00004E  CFF6 F037          	movff	tblptrl,??_ISR_bassa+13
 19572  000052  CFF7 F038          	movff	tblptrh,??_ISR_bassa+14
 19573  000056  CFF8 F039          	movff	tblptru,??_ISR_bassa+15
 19574  00005A  CFF5 F03A          	movff	tablat,??_ISR_bassa+16
 19575                           
 19576                           ;RemoteCan.c: 204: if (PIR2bits.TMR3IF == 1) {
 19577  00005E  A2A1               	btfss	4001,1,c	;volatile
 19578  000060  D00B               	goto	i1l814
 19579                           
 19580                           ;RemoteCan.c: 205: time_counter++;
 19581  000062  0E01               	movlw	1
 19582  000064  261C               	addwf	_time_counter,f,c	;volatile
 19583  000066  0E00               	movlw	0
 19584  000068  221D               	addwfc	_time_counter+1,f,c	;volatile
 19585  00006A  221E               	addwfc	_time_counter+2,f,c	;volatile
 19586  00006C  221F               	addwfc	_time_counter+3,f,c	;volatile
 19587                           
 19588                           ;RemoteCan.c: 206: TMR3H = 0x63;
 19589  00006E  0E63               	movlw	99
 19590  000070  6EB3               	movwf	4019,c	;volatile
 19591                           
 19592                           ;RemoteCan.c: 207: TMR3L = 0xC0;
 19593  000072  0EC0               	movlw	192
 19594  000074  6EB2               	movwf	4018,c	;volatile
 19595                           
 19596                           ;RemoteCan.c: 208: PIR2bits.TMR3IF = 0;
 19597  000076  92A1               	bcf	4001,1,c	;volatile
 19598  000078                     i1l814:
 19599  000078  C03A  FFF5         	movff	??_ISR_bassa+16,tablat
 19600  00007C  C039  FFF8         	movff	??_ISR_bassa+15,tblptru
 19601  000080  C038  FFF7         	movff	??_ISR_bassa+14,tblptrh
 19602  000084  C037  FFF6         	movff	??_ISR_bassa+13,tblptrl
 19603  000088  C036  FFF4         	movff	??_ISR_bassa+12,prodh
 19604  00008C  C035  FFF3         	movff	??_ISR_bassa+11,prodl
 19605  000090  C034  FFDA         	movff	??_ISR_bassa+10,fsr2h
 19606  000094  C033  FFD9         	movff	??_ISR_bassa+9,fsr2l
 19607  000098  C032  FFE2         	movff	??_ISR_bassa+8,fsr1h
 19608  00009C  C031  FFE1         	movff	??_ISR_bassa+7,fsr1l
 19609  0000A0  C030  FFEA         	movff	??_ISR_bassa+6,fsr0h
 19610  0000A4  C02F  FFE9         	movff	??_ISR_bassa+5,fsr0l
 19611  0000A8  C02E  FFFB         	movff	??_ISR_bassa+4,pclatu
 19612  0000AC  C02D  FFFA         	movff	??_ISR_bassa+3,pclath
 19613  0000B0  C02C  FFE0         	movff	??_ISR_bassa+2,bsr
 19614  0000B4  C02B  FFE8         	movff	??_ISR_bassa+1,wreg
 19615  0000B8  C02A  FFD8         	movff	??_ISR_bassa,status
 19616  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19617  0000BE  0010               	retfie	
 19618  0000C0                     __end_of_ISR_bassa:
 19619                           	opt stack 0
 19620                           pclatu	equ	0xFFB
 19621                           pclath	equ	0xFFA
 19622                           tblptru	equ	0xFF8
 19623                           tblptrh	equ	0xFF7
 19624                           tblptrl	equ	0xFF6
 19625                           tablat	equ	0xFF5
 19626                           prodh	equ	0xFF4
 19627                           prodl	equ	0xFF3
 19628                           intcon	equ	0xFF2
 19629                           postinc0	equ	0xFEE
 19630                           fsr0h	equ	0xFEA
 19631                           fsr0l	equ	0xFE9
 19632                           wreg	equ	0xFE8
 19633                           indf1	equ	0xFE7
 19634                           plusw1	equ	0xFE3
 19635                           fsr1h	equ	0xFE2
 19636                           fsr1l	equ	0xFE1
 19637                           bsr	equ	0xFE0
 19638                           indf2	equ	0xFDF
 19639                           postinc2	equ	0xFDE
 19640                           plusw2	equ	0xFDB
 19641                           fsr2h	equ	0xFDA
 19642                           fsr2l	equ	0xFD9
 19643                           status	equ	0xFD8
 19644                           
 19645 ;; *************** function _ISR_alta *****************
 19646 ;; Defined at:
 19647 ;;		line 126 in file "RemoteCan.c"
 19648 ;; Parameters:    Size  Location     Type
 19649 ;;		None
 19650 ;; Auto vars:     Size  Location     Type
 19651 ;;  i               1   16[BANK0 ] unsigned char 
 19652 ;; Return value:  Size  Location     Type
 19653 ;;		None               void
 19654 ;; Registers used:
 19655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19656 ;; Tracked objects:
 19657 ;;		On entry : 0/0
 19658 ;;		On exit  : 0/0
 19659 ;;		Unchanged: 0/0
 19660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19663 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19664 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19665 ;;Total ram usage:       17 bytes
 19666 ;; Hardware stack levels used:    1
 19667 ;; Hardware stack levels required when called:    1
 19668 ;; This function calls:
 19669 ;;		_CANisRxReady
 19670 ;;		_CANreceiveMessage
 19671 ;;		i2_CANisTxReady
 19672 ;;		i2_CANsendMessage
 19673 ;; This function is called by:
 19674 ;;		Interrupt level 2
 19675 ;; This function uses a non-reentrant model
 19676 ;;
 19677                           
 19678                           	psect	intcode
 19679  000008                     __pintcode:
 19680                           	opt stack 0
 19681  000008                     _ISR_alta:
 19682                           	opt stack 20
 19683                           
 19684                           ;incstack = 0
 19685  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19686  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 19687  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 19688  000012  EFCD  F0A3         	goto	int_func
 19689                           pclatu	equ	0xFFB
 19690                           pclath	equ	0xFFA
 19691                           tblptru	equ	0xFF8
 19692                           tblptrh	equ	0xFF7
 19693                           tblptrl	equ	0xFF6
 19694                           tablat	equ	0xFF5
 19695                           prodh	equ	0xFF4
 19696                           prodl	equ	0xFF3
 19697                           intcon	equ	0xFF2
 19698                           postinc0	equ	0xFEE
 19699                           fsr0h	equ	0xFEA
 19700                           fsr0l	equ	0xFE9
 19701                           wreg	equ	0xFE8
 19702                           indf1	equ	0xFE7
 19703                           plusw1	equ	0xFE3
 19704                           fsr1h	equ	0xFE2
 19705                           fsr1l	equ	0xFE1
 19706                           bsr	equ	0xFE0
 19707                           indf2	equ	0xFDF
 19708                           postinc2	equ	0xFDE
 19709                           plusw2	equ	0xFDB
 19710                           fsr2h	equ	0xFDA
 19711                           fsr2l	equ	0xFD9
 19712                           status	equ	0xFD8
 19713                           
 19714                           	psect	intcode_body
 19715  01479A                     __pintcode_body:
 19716                           	opt stack 20
 19717  01479A                     int_func:
 19718                           	opt stack 20
 19719  01479A  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 19720  01479E  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 19721  0147A2  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 19722  0147A6  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 19723  0147AA  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 19724  0147AE  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 19725  0147B2  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 19726  0147B6  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 19727  0147BA  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 19728  0147BE  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 19729  0147C2  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 19730  0147C6  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 19731                           
 19732                           ;RemoteCan.c: 127: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 19733  0147CA  A2A4               	btfss	4004,1,c	;volatile
 19734  0147CC  B0A4               	btfsc	4004,0,c	;volatile
 19735  0147CE  D001               	goto	i2l9690
 19736  0147D0  D0E4               	goto	i2l810
 19737  0147D2                     i2l9690:
 19738                           
 19739                           ;RemoteCan.c: 128: if (CANisRxReady()) {
 19740  0147D2  ECFD  F0B2         	call	_CANisRxReady	;wreg free
 19741  0147D6  0900               	iorlw	0
 19742  0147D8  B4D8               	btfsc	status,2,c
 19743  0147DA  D0DD               	goto	i2l9774
 19744                           
 19745                           ;RemoteCan.c: 129: CANreceiveMessage(&msg);
 19746  0147DC  0E0A               	movlw	low _msg
 19747  0147DE  6E3B               	movwf	CANreceiveMessage@msg,c
 19748  0147E0  0E01               	movlw	high _msg
 19749  0147E2  6E3C               	movwf	CANreceiveMessage@msg+1,c
 19750  0147E4  EC76  F097         	call	_CANreceiveMessage	;wreg free
 19751                           
 19752                           ;RemoteCan.c: 130: RTR_Flag = msg.RTR;
 19753  0147E8  0101               	movlb	1	; () banked
 19754  0147EA  A118               	btfss	(_msg+14)& (0+255),0,b
 19755  0147EC  D002               	goto	i2u1289_40
 19756  0147EE  8A4B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19757  0147F0  D001               	goto	i2l9696
 19758  0147F2                     i2u1289_40:
 19759  0147F2  9A4B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19760  0147F4                     i2l9696:
 19761                           
 19762                           ;RemoteCan.c: 131: id = msg.identifier;
 19763  0147F4  C10A  F00C         	movff	_msg,_id	;volatile
 19764  0147F8  C10B  F00D         	movff	_msg+1,_id+1	;volatile
 19765  0147FC  C10C  F00E         	movff	_msg+2,_id+2	;volatile
 19766  014800  C10D  F00F         	movff	_msg+3,_id+3	;volatile
 19767                           
 19768                           ;RemoteCan.c: 132: newMessageCan = 1;
 19769  014804  824C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 19770                           
 19771                           ;RemoteCan.c: 133: if (id == 0b00000001000) {
 19772  014806  0E08               	movlw	8
 19773  014808  180C               	xorwf	_id,w,c	;volatile
 19774  01480A  100D               	iorwf	_id+1,w,c	;volatile
 19775  01480C  100E               	iorwf	_id+2,w,c	;volatile
 19776  01480E  100F               	iorwf	_id+3,w,c	;volatile
 19777  014810  A4D8               	btfss	status,2,c
 19778  014812  D01F               	goto	i2l9714
 19779                           
 19780                           ;RemoteCan.c: 134: for (unsigned char i = 0; i < 8; i++) {
 19781  014814  0E00               	movlw	0
 19782  014816  0100               	movlb	0	; () banked
 19783  014818  6F70               	movwf	ISR_alta@i& (0+255),b
 19784  01481A                     i2l9704:
 19785                           
 19786                           ; BSR set to: 0
 19787  01481A  0E07               	movlw	7
 19788  01481C  0100               	movlb	0	; () banked
 19789  01481E  6570               	cpfsgt	ISR_alta@i& (0+255),b
 19790  014820  D001               	goto	i2l9708
 19791  014822  D017               	goto	i2l9714
 19792  014824                     i2l9708:
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;RemoteCan.c: 135: data_speed_rx[i] = msg.data[i];
 19796  014824  0100               	movlb	0	; () banked
 19797  014826  5170               	movf	ISR_alta@i& (0+255),w,b
 19798  014828  0D01               	mullw	1
 19799  01482A  0E0E               	movlw	low (_msg+4)
 19800  01482C  24F3               	addwf	prodl,w,c
 19801  01482E  6ED9               	movwf	fsr2l,c
 19802  014830  0E01               	movlw	high (_msg+4)
 19803  014832  20F4               	addwfc	prodh,w,c
 19804  014834  6EDA               	movwf	fsr2h,c
 19805  014836  0100               	movlb	0	; () banked
 19806  014838  5170               	movf	ISR_alta@i& (0+255),w,b
 19807  01483A  0D01               	mullw	1
 19808  01483C  0E01               	movlw	low _data_speed_rx
 19809  01483E  24F3               	addwf	prodl,w,c
 19810  014840  6EE1               	movwf	fsr1l,c
 19811  014842  0E00               	movlw	high _data_speed_rx
 19812  014844  20F4               	addwfc	prodh,w,c
 19813  014846  6EE2               	movwf	fsr1h,c
 19814  014848  CFDF FFE7          	movff	indf2,indf1
 19815                           
 19816                           ; BSR set to: 0
 19817  01484C  0100               	movlb	0	; () banked
 19818  01484E  2B70               	incf	ISR_alta@i& (0+255),f,b
 19819  014850  D7E4               	goto	i2l9704
 19820  014852                     i2l9714:
 19821                           
 19822                           ;RemoteCan.c: 136: }
 19823                           ;RemoteCan.c: 137: }
 19824                           ;RemoteCan.c: 139: if (id == 0b00000001101) {
 19825  014852  0E0D               	movlw	13
 19826  014854  180C               	xorwf	_id,w,c	;volatile
 19827  014856  100D               	iorwf	_id+1,w,c	;volatile
 19828  014858  100E               	iorwf	_id+2,w,c	;volatile
 19829  01485A  100F               	iorwf	_id+3,w,c	;volatile
 19830  01485C  A4D8               	btfss	status,2,c
 19831  01485E  D041               	goto	i2l9746
 19832                           
 19833                           ;RemoteCan.c: 140: if (msg.data[0] == 1) {
 19834  014860  0101               	movlb	1	; () banked
 19835  014862  050E               	decf	(_msg+4)& (0+255),w,b
 19836  014864  A4D8               	btfss	status,2,c
 19837  014866  D007               	goto	i2l9722
 19838                           
 19839                           ; BSR set to: 1
 19840                           ;RemoteCan.c: 141: space_available = 1;
 19841  014868  8C4C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19842                           
 19843                           ;RemoteCan.c: 142: space_gap_reached = 0;
 19844  01486A  9E4C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19845                           
 19846                           ;RemoteCan.c: 143: F2_switch = 0;
 19847  01486C  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 19848                           
 19849                           ;RemoteCan.c: 144: parking_message_E = 1;
 19850  01486E  864C               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 19851                           
 19852                           ; BSR set to: 1
 19853                           ;RemoteCan.c: 145: parking_message_ID = 0;
 19854  014870  0E00               	movlw	0
 19855  014872  0100               	movlb	0	; () banked
 19856  014874  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19857  014876                     i2l9722:
 19858                           
 19859                           ;RemoteCan.c: 146: }
 19860                           ;RemoteCan.c: 148: if (msg.data[0] == 2) {
 19861  014876  0E02               	movlw	2
 19862  014878  0101               	movlb	1	; () banked
 19863  01487A  190E               	xorwf	(_msg+4)& (0+255),w,b
 19864  01487C  A4D8               	btfss	status,2,c
 19865  01487E  D006               	goto	i2l9728
 19866                           
 19867                           ; BSR set to: 1
 19868                           ;RemoteCan.c: 149: space_available = 1;
 19869  014880  8C4C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19870                           
 19871                           ;RemoteCan.c: 150: space_gap_reached = 1;
 19872  014882  8E4C               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19873                           
 19874                           ;RemoteCan.c: 151: Can_Tx_Force = 1;
 19875  014884  824B               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 19876                           
 19877                           ; BSR set to: 1
 19878                           ;RemoteCan.c: 152: parking_message_ID = 2;
 19879  014886  0E02               	movlw	2
 19880  014888  0100               	movlb	0	; () banked
 19881  01488A  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19882  01488C                     i2l9728:
 19883                           
 19884                           ;RemoteCan.c: 153: }
 19885                           ;RemoteCan.c: 155: if (msg.data[0] == 3) {
 19886  01488C  0E03               	movlw	3
 19887  01488E  0101               	movlb	1	; () banked
 19888  014890  190E               	xorwf	(_msg+4)& (0+255),w,b
 19889  014892  A4D8               	btfss	status,2,c
 19890  014894  D010               	goto	i2l9736
 19891                           
 19892                           ; BSR set to: 1
 19893                           ;RemoteCan.c: 156: parking_message_ID = 6;
 19894  014896  0E06               	movlw	6
 19895  014898  0100               	movlb	0	; () banked
 19896  01489A  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19897                           
 19898                           ; BSR set to: 0
 19899                           ;RemoteCan.c: 157: F1_switch = 0;
 19900  01489C  944B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;RemoteCan.c: 158: pr_time_6 = time_counter + (2000 / 10);
 19904  01489E  0EC8               	movlw	200
 19905  0148A0  241C               	addwf	_time_counter,w,c	;volatile
 19906  0148A2  6E18               	movwf	_pr_time_6,c	;volatile
 19907  0148A4  0E00               	movlw	0
 19908  0148A6  201D               	addwfc	_time_counter+1,w,c	;volatile
 19909  0148A8  6E19               	movwf	_pr_time_6+1,c	;volatile
 19910  0148AA  0E00               	movlw	0
 19911  0148AC  201E               	addwfc	_time_counter+2,w,c	;volatile
 19912  0148AE  6E1A               	movwf	_pr_time_6+2,c	;volatile
 19913  0148B0  0E00               	movlw	0
 19914  0148B2  201F               	addwfc	_time_counter+3,w,c	;volatile
 19915  0148B4  6E1B               	movwf	_pr_time_6+3,c	;volatile
 19916  0148B6                     i2l9736:
 19917                           
 19918                           ;RemoteCan.c: 159: }
 19919                           ;RemoteCan.c: 160: if (msg.data[0] == 4) {
 19920  0148B6  0E04               	movlw	4
 19921  0148B8  0101               	movlb	1	; () banked
 19922  0148BA  190E               	xorwf	(_msg+4)& (0+255),w,b
 19923  0148BC  A4D8               	btfss	status,2,c
 19924  0148BE  D011               	goto	i2l9746
 19925                           
 19926                           ; BSR set to: 1
 19927                           ;RemoteCan.c: 161: parking_message_ID = 6;
 19928  0148C0  0E06               	movlw	6
 19929  0148C2  0100               	movlb	0	; () banked
 19930  0148C4  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;RemoteCan.c: 162: parking_error = 1;
 19934  0148C6  844C               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;RemoteCan.c: 163: F1_switch = 0;
 19938  0148C8  944B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19939                           
 19940                           ; BSR set to: 0
 19941                           ;RemoteCan.c: 164: pr_time_6 = time_counter + (2000 / 10);
 19942  0148CA  0EC8               	movlw	200
 19943  0148CC  241C               	addwf	_time_counter,w,c	;volatile
 19944  0148CE  6E18               	movwf	_pr_time_6,c	;volatile
 19945  0148D0  0E00               	movlw	0
 19946  0148D2  201D               	addwfc	_time_counter+1,w,c	;volatile
 19947  0148D4  6E19               	movwf	_pr_time_6+1,c	;volatile
 19948  0148D6  0E00               	movlw	0
 19949  0148D8  201E               	addwfc	_time_counter+2,w,c	;volatile
 19950  0148DA  6E1A               	movwf	_pr_time_6+2,c	;volatile
 19951  0148DC  0E00               	movlw	0
 19952  0148DE  201F               	addwfc	_time_counter+3,w,c	;volatile
 19953  0148E0  6E1B               	movwf	_pr_time_6+3,c	;volatile
 19954  0148E2                     i2l9746:
 19955                           
 19956                           ;RemoteCan.c: 165: }
 19957                           ;RemoteCan.c: 166: }
 19958                           ;RemoteCan.c: 168: if (id == 0b00000010000) {
 19959  0148E2  0E10               	movlw	16
 19960  0148E4  180C               	xorwf	_id,w,c	;volatile
 19961  0148E6  100D               	iorwf	_id+1,w,c	;volatile
 19962  0148E8  100E               	iorwf	_id+2,w,c	;volatile
 19963  0148EA  100F               	iorwf	_id+3,w,c	;volatile
 19964  0148EC  A4D8               	btfss	status,2,c
 19965  0148EE  D008               	goto	i2l9750
 19966                           
 19967                           ;RemoteCan.c: 169: steering_correction_dir = msg.data[1];
 19968  0148F0  0101               	movlb	1	; () banked
 19969  0148F2  A10F               	btfss	(_msg+5)& (0+255),0,b
 19970  0148F4  D002               	goto	i2u1300_40
 19971  0148F6  804D               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19972  0148F8  D001               	goto	i2u1301_45
 19973  0148FA                     i2u1300_40:
 19974  0148FA  904D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19975  0148FC                     i2u1301_45:
 19976                           
 19977                           ;RemoteCan.c: 170: steering_correction = msg.data[0];
 19978  0148FC  C10E  F0EB         	movff	_msg+4,_steering_correction	;volatile
 19979  014900                     i2l9750:
 19980                           
 19981                           ;RemoteCan.c: 171: }
 19982                           ;RemoteCan.c: 173: if (id == 0b00000010001) {
 19983  014900  0E11               	movlw	17
 19984  014902  180C               	xorwf	_id,w,c	;volatile
 19985  014904  100D               	iorwf	_id+1,w,c	;volatile
 19986  014906  100E               	iorwf	_id+2,w,c	;volatile
 19987  014908  100F               	iorwf	_id+3,w,c	;volatile
 19988  01490A  A4D8               	btfss	status,2,c
 19989  01490C  D004               	goto	i2l9754
 19990                           
 19991                           ;RemoteCan.c: 174: collision_sensor_distance[1] = msg.data[0];
 19992  01490E  C10E  F021         	movff	_msg+4,_collision_sensor_distance+1	;volatile
 19993                           
 19994                           ;RemoteCan.c: 175: collision_sensor_distance[0] = msg.data[1];
 19995  014912  C10F  F020         	movff	_msg+5,_collision_sensor_distance	;volatile
 19996  014916                     i2l9754:
 19997                           
 19998                           ;RemoteCan.c: 176: }
 19999                           ;RemoteCan.c: 178: if (id == 0xAA) {
 20000  014916  0EAA               	movlw	170
 20001  014918  180C               	xorwf	_id,w,c	;volatile
 20002  01491A  100D               	iorwf	_id+1,w,c	;volatile
 20003  01491C  100E               	iorwf	_id+2,w,c	;volatile
 20004  01491E  100F               	iorwf	_id+3,w,c	;volatile
 20005  014920  A4D8               	btfss	status,2,c
 20006  014922  D00B               	goto	i2l9760
 20007                           
 20008                           ;RemoteCan.c: 179: user_data = msg.data[1];
 20009  014924  C10F  F026         	movff	_msg+5,_user_data	;volatile
 20010  014928  6A27               	clrf	_user_data+1,c	;volatile
 20011                           
 20012                           ;RemoteCan.c: 180: user_data = ((user_data << 8) | msg.data[0]);
 20013  01492A  5026               	movf	_user_data,w,c	;volatile
 20014  01492C  0100               	movlb	0	; () banked
 20015  01492E  6F60               	movwf	??_ISR_alta& (0+255),b
 20016  014930  0101               	movlb	1	; () banked
 20017  014932  510E               	movf	(_msg+4)& (0+255),w,b
 20018  014934  6E26               	movwf	_user_data,c	;volatile
 20019  014936  C060  F027         	movff	??_ISR_alta,_user_data+1	;volatile
 20020  01493A                     i2l9760:
 20021                           
 20022                           ;RemoteCan.c: 181: }
 20023                           ;RemoteCan.c: 183: if (id == 0b00000000100) {
 20024  01493A  0E04               	movlw	4
 20025  01493C  180C               	xorwf	_id,w,c	;volatile
 20026  01493E  100D               	iorwf	_id+1,w,c	;volatile
 20027  014940  100E               	iorwf	_id+2,w,c	;volatile
 20028  014942  100F               	iorwf	_id+3,w,c	;volatile
 20029  014944  B4D8               	btfsc	status,2,c
 20030                           
 20031                           ;RemoteCan.c: 184: if (RTR_Flag == 1) {
 20032  014946  AA4B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20033  014948  D026               	goto	i2l9774
 20034                           
 20035                           ;RemoteCan.c: 185: pr_time_4 = time_counter;
 20036  01494A  C01C  F106         	movff	_time_counter,_pr_time_4	;volatile
 20037  01494E  C01D  F107         	movff	_time_counter+1,_pr_time_4+1	;volatile
 20038  014952  C01E  F108         	movff	_time_counter+2,_pr_time_4+2	;volatile
 20039  014956  C01F  F109         	movff	_time_counter+3,_pr_time_4+3	;volatile
 20040                           
 20041                           ;RemoteCan.c: 186: data[0] = 0x03;
 20042  01495A  0E03               	movlw	3
 20043  01495C  0101               	movlb	1	; () banked
 20044  01495E  6F25               	movwf	_data& (0+255),b
 20045                           
 20046                           ; BSR set to: 1
 20047                           ;RemoteCan.c: 187: _delay((unsigned long)((10)*(16000000/4000000.0)));
 20048  014960  0E0D               	movlw	13
 20049  014962                     i2u1356_47:
 20050  014962  2EE8               	decfsz	wreg,f,c
 20051  014964  D7FE               	goto	i2u1356_47
 20052  014966  F000               	nop	
 20053  014968                     i2l9770:
 20054  014968  ECAB  F0B2         	call	i2_CANisTxReady	;wreg free
 20055  01496C  06E8               	decf	wreg,f,c
 20056  01496E  A4D8               	btfss	status,2,c
 20057  014970  D7FB               	goto	i2l9770
 20058                           
 20059                           ;RemoteCan.c: 189: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 20060  014972  0E04               	movlw	4
 20061  014974  6E3B               	movwf	i2CANsendMessage@identifier,c
 20062  014976  0E00               	movlw	0
 20063  014978  6E3C               	movwf	i2CANsendMessage@identifier+1,c
 20064  01497A  0E00               	movlw	0
 20065  01497C  6E3D               	movwf	i2CANsendMessage@identifier+2,c
 20066  01497E  0E00               	movlw	0
 20067  014980  6E3E               	movwf	i2CANsendMessage@identifier+3,c
 20068  014982  0E25               	movlw	low _data
 20069  014984  6E3F               	movwf	i2CANsendMessage@data,c
 20070  014986  0E01               	movlw	high _data
 20071  014988  6E40               	movwf	i2CANsendMessage@data+1,c
 20072  01498A  0E08               	movlw	8
 20073  01498C  6E41               	movwf	i2CANsendMessage@dataLength,c
 20074  01498E  0EBC               	movlw	188
 20075  014990  6E42               	movwf	i2CANsendMessage@flags,c
 20076  014992  ECA1  F091         	call	i2_CANsendMessage	;wreg free
 20077  014996                     i2l9774:
 20078                           
 20079                           ;RemoteCan.c: 195: }
 20080                           ;RemoteCan.c: 196: }
 20081                           ;RemoteCan.c: 197: }
 20082                           ;RemoteCan.c: 198: PIR3bits.RXB1IF = 0;
 20083  014996  92A4               	bcf	4004,1,c	;volatile
 20084                           
 20085                           ;RemoteCan.c: 199: PIR3bits.RXB0IF = 0;
 20086  014998  90A4               	bcf	4004,0,c	;volatile
 20087  01499A                     i2l810:
 20088  01499A  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 20089  01499E  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 20090  0149A2  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 20091  0149A6  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 20092  0149AA  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 20093  0149AE  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 20094  0149B2  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 20095  0149B6  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 20096  0149BA  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 20097  0149BE  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 20098  0149C2  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 20099  0149C6  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 20100  0149CA  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 20101  0149CE  C062  FFFA         	movff	??_ISR_alta+2,pclath
 20102  0149D2  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20103  0149D4  0011               	retfie		f
 20104  0149D6                     __end_of_ISR_alta:
 20105                           	opt stack 0
 20106                           pclatu	equ	0xFFB
 20107                           pclath	equ	0xFFA
 20108                           tblptru	equ	0xFF8
 20109                           tblptrh	equ	0xFF7
 20110                           tblptrl	equ	0xFF6
 20111                           tablat	equ	0xFF5
 20112                           prodh	equ	0xFF4
 20113                           prodl	equ	0xFF3
 20114                           intcon	equ	0xFF2
 20115                           postinc0	equ	0xFEE
 20116                           fsr0h	equ	0xFEA
 20117                           fsr0l	equ	0xFE9
 20118                           wreg	equ	0xFE8
 20119                           indf1	equ	0xFE7
 20120                           plusw1	equ	0xFE3
 20121                           fsr1h	equ	0xFE2
 20122                           fsr1l	equ	0xFE1
 20123                           bsr	equ	0xFE0
 20124                           indf2	equ	0xFDF
 20125                           postinc2	equ	0xFDE
 20126                           plusw2	equ	0xFDB
 20127                           fsr2h	equ	0xFDA
 20128                           fsr2l	equ	0xFD9
 20129                           status	equ	0xFD8
 20130                           
 20131 ;; *************** function i2_CANsendMessage *****************
 20132 ;; Defined at:
 20133 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20134 ;; Parameters:    Size  Location     Type
 20135 ;;  identifier      4   17[COMRAM] unsigned long 
 20136 ;;  data            2   21[COMRAM] PTR unsigned char 
 20137 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 20138 ;;		 -> data(8), 
 20139 ;;  dataLength      1   23[COMRAM] unsigned char 
 20140 ;;  flags           1   24[COMRAM] enum E16909
 20141 ;; Auto vars:     Size  Location     Type
 20142 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 20143 ;; Return value:  Size  Location     Type
 20144 ;;		None               void
 20145 ;; Registers used:
 20146 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20147 ;; Tracked objects:
 20148 ;;		On entry : 0/0
 20149 ;;		On exit  : 0/0
 20150 ;;		Unchanged: 0/0
 20151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20152 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20153 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20154 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20155 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20156 ;;Total ram usage:       16 bytes
 20157 ;; Hardware stack levels used:    1
 20158 ;; This function calls:
 20159 ;;		Nothing
 20160 ;; This function is called by:
 20161 ;;		_ISR_alta
 20162 ;; This function uses a non-reentrant model
 20163 ;;
 20164                           
 20165                           	psect	text59
 20166  012342                     __ptext59:
 20167                           	opt stack 0
 20168  012342                     i2_CANsendMessage:
 20169                           	opt stack 20
 20170                           
 20171                           ;inc\CANlib.h: 296: unsigned long tamp;
 20172                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 20173                           
 20174                           ;incstack = 0
 20175  012342  010F               	movlb	15	; () banked
 20176  012344  B740               	btfsc	64,3,b	;volatile
 20177  012346  D115               	goto	i2l385
 20178                           
 20179                           ; BSR set to: 15
 20180                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 20181  012348  C041  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 20182                           
 20183                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 20184  01234C  AC42               	btfss	i2CANsendMessage@flags,6,c
 20185  01234E  D003               	goto	i2l386
 20186                           
 20187                           ; BSR set to: 15
 20188                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 20189  012350  010F               	movlb	15	; () banked
 20190  012352  8D45               	bsf	69,6,b	;volatile
 20191  012354  D002               	goto	i2l387
 20192  012356                     i2l386:
 20193                           
 20194                           ; BSR set to: 15
 20195                           ;inc\CANlib.h: 302: else
 20196                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 20197  012356  010F               	movlb	15	; () banked
 20198  012358  9D45               	bcf	69,6,b	;volatile
 20199  01235A                     i2l387:
 20200                           
 20201                           ; BSR set to: 15
 20202                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 20203  01235A  A642               	btfss	i2CANsendMessage@flags,3,c
 20204  01235C  D066               	goto	i2l388
 20205                           
 20206                           ; BSR set to: 15
 20207                           ;inc\CANlib.h: 306: {
 20208                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 20209  01235E  503B               	movf	i2CANsendMessage@identifier,w,c
 20210  012360  6E47               	movwf	i2CANsendMessage@tamp,c
 20211  012362  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20212  012364  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20213  012366  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20214                           
 20215                           ; BSR set to: 15
 20216                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 20217  012368  C047  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 20218                           
 20219                           ; BSR set to: 15
 20220                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 20221  01236C  0E00               	movlw	0
 20222  01236E  143B               	andwf	i2CANsendMessage@identifier,w,c
 20223  012370  6E47               	movwf	i2CANsendMessage@tamp,c
 20224  012372  0EFF               	movlw	255
 20225  012374  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20226  012376  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20227  012378  0E00               	movlw	0
 20228  01237A  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20229  01237C  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20230  01237E  0E00               	movlw	0
 20231  012380  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20232  012382  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20233                           
 20234                           ; BSR set to: 15
 20235                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 20236  012384  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20237  012388  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20238  01238C  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20239  012390  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20240  012394  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20241  012398  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20242  01239C  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20243  0123A0  6A46               	clrf	??i2_CANsendMessage+3,c
 20244  0123A2  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20245  0123A6  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20246  0123AA  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20247  0123AE  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20248                           
 20249                           ; BSR set to: 15
 20250                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 20251  0123B2  C047  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 20252                           
 20253                           ; BSR set to: 15
 20254                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 20255  0123B6  0E00               	movlw	0
 20256  0123B8  010F               	movlb	15	; () banked
 20257  0123BA  6F42               	movwf	66,b	;volatile
 20258                           
 20259                           ; BSR set to: 15
 20260                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 20261  0123BC  010F               	movlb	15	; () banked
 20262  0123BE  8742               	bsf	66,3,b	;volatile
 20263                           
 20264                           ; BSR set to: 15
 20265                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 20266  0123C0  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 20267  0123C2  D002               	goto	i2l389
 20268                           
 20269                           ; BSR set to: 15
 20270                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 20271  0123C4  010F               	movlb	15	; () banked
 20272  0123C6  8142               	bsf	66,0,b	;volatile
 20273  0123C8                     i2l389:
 20274                           
 20275                           ; BSR set to: 15
 20276                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 20277  0123C8  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 20278  0123CA  D002               	goto	i2l390
 20279                           
 20280                           ; BSR set to: 15
 20281                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 20282  0123CC  010F               	movlb	15	; () banked
 20283  0123CE  8342               	bsf	66,1,b	;volatile
 20284  0123D0                     i2l390:
 20285                           
 20286                           ; BSR set to: 15
 20287                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 20288  0123D0  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 20289  0123D2  D002               	goto	i2l391
 20290                           
 20291                           ; BSR set to: 15
 20292                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 20293  0123D4  010F               	movlb	15	; () banked
 20294  0123D6  8B42               	bsf	66,5,b	;volatile
 20295  0123D8                     i2l391:
 20296                           
 20297                           ; BSR set to: 15
 20298                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 20299  0123D8  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 20300  0123DA  D002               	goto	i2l392
 20301                           
 20302                           ; BSR set to: 15
 20303                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 20304  0123DC  010F               	movlb	15	; () banked
 20305  0123DE  8D42               	bsf	66,6,b	;volatile
 20306  0123E0                     i2l392:
 20307                           
 20308                           ; BSR set to: 15
 20309                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 20310  0123E0  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 20311  0123E2  D002               	goto	i2l9458
 20312                           
 20313                           ; BSR set to: 15
 20314                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 20315  0123E4  010F               	movlb	15	; () banked
 20316  0123E6  8F42               	bsf	66,7,b	;volatile
 20317  0123E8                     i2l9458:
 20318                           
 20319                           ; BSR set to: 15
 20320                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 20321  0123E8  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20322  0123EC  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20323  0123F0  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20324  0123F4  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20325  0123F8  0E16               	movlw	22
 20326  0123FA  D005               	goto	i2u1250_40
 20327  0123FC                     i2u1250_45:
 20328  0123FC  90D8               	bcf	status,0,c
 20329  0123FE  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20330  012400  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20331  012402  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20332  012404  3243               	rrcf	??i2_CANsendMessage,f,c
 20333  012406                     i2u1250_40:
 20334  012406  2EE8               	decfsz	wreg,f,c
 20335  012408  D7F9               	goto	i2u1250_45
 20336  01240A  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20337  01240E  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20338  012412  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20339  012416  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20340                           
 20341                           ; BSR set to: 15
 20342                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 20343  01241A  5047               	movf	i2CANsendMessage@tamp,w,c
 20344  01241C  6E47               	movwf	i2CANsendMessage@tamp,c
 20345  01241E  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20346  012420  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20347  012422  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20348                           
 20349                           ; BSR set to: 15
 20350                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 20351  012424  C047  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20352                           
 20353                           ;inc\CANlib.h: 332: }
 20354  012428  D04D               	goto	i2l9478
 20355  01242A                     i2l388:
 20356                           
 20357                           ; BSR set to: 15
 20358                           ;inc\CANlib.h: 334: else
 20359                           ;inc\CANlib.h: 336: {
 20360                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 20361  01242A  010F               	movlb	15	; () banked
 20362  01242C  9742               	bcf	66,3,b	;volatile
 20363                           
 20364                           ; BSR set to: 15
 20365                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 20366  01242E  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20367  012432  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20368  012436  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20369  01243A  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20370  01243E  0E04               	movlw	4
 20371  012440  D005               	goto	i2u1251_40
 20372  012442                     i2u1251_45:
 20373  012442  90D8               	bcf	status,0,c
 20374  012444  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20375  012446  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20376  012448  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20377  01244A  3243               	rrcf	??i2_CANsendMessage,f,c
 20378  01244C                     i2u1251_40:
 20379  01244C  2EE8               	decfsz	wreg,f,c
 20380  01244E  D7F9               	goto	i2u1251_45
 20381  012450  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20382  012454  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20383  012458  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20384  01245C  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20385                           
 20386                           ; BSR set to: 15
 20387                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 20388  012460  5047               	movf	i2CANsendMessage@tamp,w,c
 20389  012462  6E47               	movwf	i2CANsendMessage@tamp,c
 20390  012464  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20391  012466  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20392  012468  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20393                           
 20394                           ; BSR set to: 15
 20395                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 20396  01246A  C047  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20397                           
 20398                           ; BSR set to: 15
 20399                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 20400  01246E  0E07               	movlw	7
 20401  012470  143B               	andwf	i2CANsendMessage@identifier,w,c
 20402  012472  6E47               	movwf	i2CANsendMessage@tamp,c
 20403  012474  0E00               	movlw	0
 20404  012476  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20405  012478  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20406  01247A  0E00               	movlw	0
 20407  01247C  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20408  01247E  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20409  012480  0E00               	movlw	0
 20410  012482  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20411  012484  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20412                           
 20413                           ; BSR set to: 15
 20414                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 20415  012486  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20416  01248A  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20417  01248E  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20418  012492  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20419  012496  0E05               	movlw	5
 20420  012498                     i2u1252_45:
 20421  012498  90D8               	bcf	status,0,c
 20422  01249A  3643               	rlcf	??i2_CANsendMessage,f,c
 20423  01249C  3644               	rlcf	??i2_CANsendMessage+1,f,c
 20424  01249E  3645               	rlcf	??i2_CANsendMessage+2,f,c
 20425  0124A0  3646               	rlcf	??i2_CANsendMessage+3,f,c
 20426  0124A2  2EE8               	decfsz	wreg,f,c
 20427  0124A4  D7F9               	goto	i2u1252_45
 20428  0124A6  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20429  0124AA  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20430  0124AE  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20431  0124B2  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20432                           
 20433                           ; BSR set to: 15
 20434                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 20435  0124B6  010F               	movlb	15	; () banked
 20436  0124B8  5142               	movf	66,w,b	;volatile
 20437  0124BA  0B1F               	andlw	31
 20438  0124BC  010F               	movlb	15	; () banked
 20439  0124BE  6F42               	movwf	66,b	;volatile
 20440                           
 20441                           ; BSR set to: 15
 20442                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 20443  0124C0  C047  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 20444  0124C4                     i2l9478:
 20445                           
 20446                           ; BSR set to: 15
 20447                           ;inc\CANlib.h: 347: }
 20448                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 20449  0124C4  A042               	btfss	i2CANsendMessage@flags,0,c
 20450  0124C6  D003               	goto	i2l395
 20451                           
 20452                           ; BSR set to: 15
 20453                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 20454  0124C8  010F               	movlb	15	; () banked
 20455  0124CA  8140               	bsf	64,0,b	;volatile
 20456  0124CC  D002               	goto	i2l396
 20457  0124CE                     i2l395:
 20458                           
 20459                           ; BSR set to: 15
 20460                           ;inc\CANlib.h: 351: else
 20461                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 20462  0124CE  010F               	movlb	15	; () banked
 20463  0124D0  9140               	bcf	64,0,b	;volatile
 20464  0124D2                     i2l396:
 20465                           
 20466                           ; BSR set to: 15
 20467                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 20468  0124D2  A242               	btfss	i2CANsendMessage@flags,1,c
 20469  0124D4  D003               	goto	i2l397
 20470                           
 20471                           ; BSR set to: 15
 20472                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 20473  0124D6  010F               	movlb	15	; () banked
 20474  0124D8  8340               	bsf	64,1,b	;volatile
 20475  0124DA  D002               	goto	i2l9484
 20476  0124DC                     i2l397:
 20477                           
 20478                           ; BSR set to: 15
 20479                           ;inc\CANlib.h: 355: else
 20480                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 20481  0124DC  010F               	movlb	15	; () banked
 20482  0124DE  9340               	bcf	64,1,b	;volatile
 20483  0124E0                     i2l9484:
 20484                           
 20485                           ; BSR set to: 15
 20486                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 20487  0124E0  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20488  0124E4  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20489  0124E8  50DF               	movf	indf2,w,c
 20490  0124EA  010F               	movlb	15	; () banked
 20491  0124EC  6F46               	movwf	70,b	;volatile
 20492                           
 20493                           ; BSR set to: 15
 20494                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 20495  0124EE  EE20 F001          	lfsr	2,1
 20496  0124F2  503F               	movf	i2CANsendMessage@data,w,c
 20497  0124F4  26D9               	addwf	fsr2l,f,c
 20498  0124F6  5040               	movf	i2CANsendMessage@data+1,w,c
 20499  0124F8  22DA               	addwfc	fsr2h,f,c
 20500  0124FA  50DF               	movf	indf2,w,c
 20501  0124FC  010F               	movlb	15	; () banked
 20502  0124FE  6F47               	movwf	71,b	;volatile
 20503                           
 20504                           ; BSR set to: 15
 20505                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 20506  012500  EE20 F002          	lfsr	2,2
 20507  012504  503F               	movf	i2CANsendMessage@data,w,c
 20508  012506  26D9               	addwf	fsr2l,f,c
 20509  012508  5040               	movf	i2CANsendMessage@data+1,w,c
 20510  01250A  22DA               	addwfc	fsr2h,f,c
 20511  01250C  50DF               	movf	indf2,w,c
 20512  01250E  010F               	movlb	15	; () banked
 20513  012510  6F48               	movwf	72,b	;volatile
 20514                           
 20515                           ; BSR set to: 15
 20516                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 20517  012512  EE20 F003          	lfsr	2,3
 20518  012516  503F               	movf	i2CANsendMessage@data,w,c
 20519  012518  26D9               	addwf	fsr2l,f,c
 20520  01251A  5040               	movf	i2CANsendMessage@data+1,w,c
 20521  01251C  22DA               	addwfc	fsr2h,f,c
 20522  01251E  50DF               	movf	indf2,w,c
 20523  012520  010F               	movlb	15	; () banked
 20524  012522  6F49               	movwf	73,b	;volatile
 20525                           
 20526                           ; BSR set to: 15
 20527                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 20528  012524  EE20 F004          	lfsr	2,4
 20529  012528  503F               	movf	i2CANsendMessage@data,w,c
 20530  01252A  26D9               	addwf	fsr2l,f,c
 20531  01252C  5040               	movf	i2CANsendMessage@data+1,w,c
 20532  01252E  22DA               	addwfc	fsr2h,f,c
 20533  012530  50DF               	movf	indf2,w,c
 20534  012532  010F               	movlb	15	; () banked
 20535  012534  6F4A               	movwf	74,b	;volatile
 20536                           
 20537                           ; BSR set to: 15
 20538                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 20539  012536  EE20 F005          	lfsr	2,5
 20540  01253A  503F               	movf	i2CANsendMessage@data,w,c
 20541  01253C  26D9               	addwf	fsr2l,f,c
 20542  01253E  5040               	movf	i2CANsendMessage@data+1,w,c
 20543  012540  22DA               	addwfc	fsr2h,f,c
 20544  012542  50DF               	movf	indf2,w,c
 20545  012544  010F               	movlb	15	; () banked
 20546  012546  6F4B               	movwf	75,b	;volatile
 20547                           
 20548                           ; BSR set to: 15
 20549                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 20550  012548  EE20 F006          	lfsr	2,6
 20551  01254C  503F               	movf	i2CANsendMessage@data,w,c
 20552  01254E  26D9               	addwf	fsr2l,f,c
 20553  012550  5040               	movf	i2CANsendMessage@data+1,w,c
 20554  012552  22DA               	addwfc	fsr2h,f,c
 20555  012554  50DF               	movf	indf2,w,c
 20556  012556  010F               	movlb	15	; () banked
 20557  012558  6F4C               	movwf	76,b	;volatile
 20558                           
 20559                           ; BSR set to: 15
 20560                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 20561  01255A  EE20 F007          	lfsr	2,7
 20562  01255E  503F               	movf	i2CANsendMessage@data,w,c
 20563  012560  26D9               	addwf	fsr2l,f,c
 20564  012562  5040               	movf	i2CANsendMessage@data+1,w,c
 20565  012564  22DA               	addwfc	fsr2h,f,c
 20566  012566  50DF               	movf	indf2,w,c
 20567  012568  010F               	movlb	15	; () banked
 20568  01256A  6F4D               	movwf	77,b	;volatile
 20569                           
 20570                           ; BSR set to: 15
 20571                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 20572  01256C  010F               	movlb	15	; () banked
 20573  01256E  8740               	bsf	64,3,b	;volatile
 20574                           
 20575                           ; BSR set to: 15
 20576                           ;inc\CANlib.h: 368: return;
 20577  012570  0012               	return	
 20578  012572                     i2l385:
 20579                           
 20580                           ; BSR set to: 15
 20581                           ;inc\CANlib.h: 369: }
 20582                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 20583  012572  010F               	movlb	15	; () banked
 20584  012574  B730               	btfsc	48,3,b	;volatile
 20585  012576  D115               	goto	i2l400
 20586                           
 20587                           ; BSR set to: 15
 20588                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 20589  012578  C041  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 20590                           
 20591                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 20592  01257C  AC42               	btfss	i2CANsendMessage@flags,6,c
 20593  01257E  D003               	goto	i2l401
 20594                           
 20595                           ; BSR set to: 15
 20596                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 20597  012580  010F               	movlb	15	; () banked
 20598  012582  8D35               	bsf	53,6,b	;volatile
 20599  012584  D002               	goto	i2l402
 20600  012586                     i2l401:
 20601                           
 20602                           ; BSR set to: 15
 20603                           ;inc\CANlib.h: 378: else
 20604                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 20605  012586  010F               	movlb	15	; () banked
 20606  012588  9D35               	bcf	53,6,b	;volatile
 20607  01258A                     i2l402:
 20608                           
 20609                           ; BSR set to: 15
 20610                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 20611  01258A  A642               	btfss	i2CANsendMessage@flags,3,c
 20612  01258C  D066               	goto	i2l403
 20613                           
 20614                           ; BSR set to: 15
 20615                           ;inc\CANlib.h: 382: {
 20616                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 20617  01258E  503B               	movf	i2CANsendMessage@identifier,w,c
 20618  012590  6E47               	movwf	i2CANsendMessage@tamp,c
 20619  012592  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20620  012594  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20621  012596  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20622                           
 20623                           ; BSR set to: 15
 20624                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 20625  012598  C047  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 20626                           
 20627                           ; BSR set to: 15
 20628                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 20629  01259C  0E00               	movlw	0
 20630  01259E  143B               	andwf	i2CANsendMessage@identifier,w,c
 20631  0125A0  6E47               	movwf	i2CANsendMessage@tamp,c
 20632  0125A2  0EFF               	movlw	255
 20633  0125A4  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20634  0125A6  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20635  0125A8  0E00               	movlw	0
 20636  0125AA  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20637  0125AC  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20638  0125AE  0E00               	movlw	0
 20639  0125B0  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20640  0125B2  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20641                           
 20642                           ; BSR set to: 15
 20643                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 20644  0125B4  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20645  0125B8  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20646  0125BC  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20647  0125C0  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20648  0125C4  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20649  0125C8  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20650  0125CC  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20651  0125D0  6A46               	clrf	??i2_CANsendMessage+3,c
 20652  0125D2  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20653  0125D6  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20654  0125DA  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20655  0125DE  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20656                           
 20657                           ; BSR set to: 15
 20658                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 20659  0125E2  C047  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 20660                           
 20661                           ; BSR set to: 15
 20662                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 20663  0125E6  0E00               	movlw	0
 20664  0125E8  010F               	movlb	15	; () banked
 20665  0125EA  6F32               	movwf	50,b	;volatile
 20666                           
 20667                           ; BSR set to: 15
 20668                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 20669  0125EC  010F               	movlb	15	; () banked
 20670  0125EE  8732               	bsf	50,3,b	;volatile
 20671                           
 20672                           ; BSR set to: 15
 20673                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 20674  0125F0  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 20675  0125F2  D002               	goto	i2l404
 20676                           
 20677                           ; BSR set to: 15
 20678                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 20679  0125F4  010F               	movlb	15	; () banked
 20680  0125F6  8132               	bsf	50,0,b	;volatile
 20681  0125F8                     i2l404:
 20682                           
 20683                           ; BSR set to: 15
 20684                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 20685  0125F8  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 20686  0125FA  D002               	goto	i2l405
 20687                           
 20688                           ; BSR set to: 15
 20689                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 20690  0125FC  010F               	movlb	15	; () banked
 20691  0125FE  8332               	bsf	50,1,b	;volatile
 20692  012600                     i2l405:
 20693                           
 20694                           ; BSR set to: 15
 20695                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 20696  012600  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 20697  012602  D002               	goto	i2l406
 20698                           
 20699                           ; BSR set to: 15
 20700                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 20701  012604  010F               	movlb	15	; () banked
 20702  012606  8B32               	bsf	50,5,b	;volatile
 20703  012608                     i2l406:
 20704                           
 20705                           ; BSR set to: 15
 20706                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 20707  012608  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 20708  01260A  D002               	goto	i2l407
 20709                           
 20710                           ; BSR set to: 15
 20711                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 20712  01260C  010F               	movlb	15	; () banked
 20713  01260E  8D32               	bsf	50,6,b	;volatile
 20714  012610                     i2l407:
 20715                           
 20716                           ; BSR set to: 15
 20717                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 20718  012610  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 20719  012612  D002               	goto	i2l9534
 20720                           
 20721                           ; BSR set to: 15
 20722                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 20723  012614  010F               	movlb	15	; () banked
 20724  012616  8F32               	bsf	50,7,b	;volatile
 20725  012618                     i2l9534:
 20726                           
 20727                           ; BSR set to: 15
 20728                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 20729  012618  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20730  01261C  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20731  012620  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20732  012624  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20733  012628  0E16               	movlw	22
 20734  01262A  D005               	goto	i2u1263_40
 20735  01262C                     i2u1263_45:
 20736  01262C  90D8               	bcf	status,0,c
 20737  01262E  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20738  012630  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20739  012632  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20740  012634  3243               	rrcf	??i2_CANsendMessage,f,c
 20741  012636                     i2u1263_40:
 20742  012636  2EE8               	decfsz	wreg,f,c
 20743  012638  D7F9               	goto	i2u1263_45
 20744  01263A  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20745  01263E  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20746  012642  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20747  012646  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20748                           
 20749                           ; BSR set to: 15
 20750                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20751  01264A  5047               	movf	i2CANsendMessage@tamp,w,c
 20752  01264C  6E47               	movwf	i2CANsendMessage@tamp,c
 20753  01264E  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20754  012650  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20755  012652  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20756                           
 20757                           ; BSR set to: 15
 20758                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20759  012654  C047  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20760                           
 20761                           ;inc\CANlib.h: 407: }
 20762  012658  D04D               	goto	i2l9554
 20763  01265A                     i2l403:
 20764                           
 20765                           ; BSR set to: 15
 20766                           ;inc\CANlib.h: 409: else
 20767                           ;inc\CANlib.h: 411: {
 20768                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20769  01265A  010F               	movlb	15	; () banked
 20770  01265C  9732               	bcf	50,3,b	;volatile
 20771                           
 20772                           ; BSR set to: 15
 20773                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20774  01265E  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20775  012662  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20776  012666  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20777  01266A  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20778  01266E  0E04               	movlw	4
 20779  012670  D005               	goto	i2u1264_40
 20780  012672                     i2u1264_45:
 20781  012672  90D8               	bcf	status,0,c
 20782  012674  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20783  012676  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20784  012678  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20785  01267A  3243               	rrcf	??i2_CANsendMessage,f,c
 20786  01267C                     i2u1264_40:
 20787  01267C  2EE8               	decfsz	wreg,f,c
 20788  01267E  D7F9               	goto	i2u1264_45
 20789  012680  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20790  012684  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20791  012688  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20792  01268C  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20793                           
 20794                           ; BSR set to: 15
 20795                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20796  012690  5047               	movf	i2CANsendMessage@tamp,w,c
 20797  012692  6E47               	movwf	i2CANsendMessage@tamp,c
 20798  012694  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20799  012696  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20800  012698  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20801                           
 20802                           ; BSR set to: 15
 20803                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20804  01269A  C047  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20805                           
 20806                           ; BSR set to: 15
 20807                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20808  01269E  0E07               	movlw	7
 20809  0126A0  143B               	andwf	i2CANsendMessage@identifier,w,c
 20810  0126A2  6E47               	movwf	i2CANsendMessage@tamp,c
 20811  0126A4  0E00               	movlw	0
 20812  0126A6  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20813  0126A8  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20814  0126AA  0E00               	movlw	0
 20815  0126AC  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20816  0126AE  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20817  0126B0  0E00               	movlw	0
 20818  0126B2  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20819  0126B4  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20820                           
 20821                           ; BSR set to: 15
 20822                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20823  0126B6  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20824  0126BA  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20825  0126BE  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20826  0126C2  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20827  0126C6  0E05               	movlw	5
 20828  0126C8                     i2u1265_45:
 20829  0126C8  90D8               	bcf	status,0,c
 20830  0126CA  3643               	rlcf	??i2_CANsendMessage,f,c
 20831  0126CC  3644               	rlcf	??i2_CANsendMessage+1,f,c
 20832  0126CE  3645               	rlcf	??i2_CANsendMessage+2,f,c
 20833  0126D0  3646               	rlcf	??i2_CANsendMessage+3,f,c
 20834  0126D2  2EE8               	decfsz	wreg,f,c
 20835  0126D4  D7F9               	goto	i2u1265_45
 20836  0126D6  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20837  0126DA  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20838  0126DE  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20839  0126E2  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20840                           
 20841                           ; BSR set to: 15
 20842                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20843  0126E6  010F               	movlb	15	; () banked
 20844  0126E8  5132               	movf	50,w,b	;volatile
 20845  0126EA  0B1F               	andlw	31
 20846  0126EC  010F               	movlb	15	; () banked
 20847  0126EE  6F32               	movwf	50,b	;volatile
 20848                           
 20849                           ; BSR set to: 15
 20850                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20851  0126F0  C047  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20852  0126F4                     i2l9554:
 20853                           
 20854                           ; BSR set to: 15
 20855                           ;inc\CANlib.h: 422: }
 20856                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20857  0126F4  A042               	btfss	i2CANsendMessage@flags,0,c
 20858  0126F6  D003               	goto	i2l410
 20859                           
 20860                           ; BSR set to: 15
 20861                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20862  0126F8  010F               	movlb	15	; () banked
 20863  0126FA  8130               	bsf	48,0,b	;volatile
 20864  0126FC  D002               	goto	i2l411
 20865  0126FE                     i2l410:
 20866                           
 20867                           ; BSR set to: 15
 20868                           ;inc\CANlib.h: 426: else
 20869                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20870  0126FE  010F               	movlb	15	; () banked
 20871  012700  9130               	bcf	48,0,b	;volatile
 20872  012702                     i2l411:
 20873                           
 20874                           ; BSR set to: 15
 20875                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20876  012702  A242               	btfss	i2CANsendMessage@flags,1,c
 20877  012704  D003               	goto	i2l412
 20878                           
 20879                           ; BSR set to: 15
 20880                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20881  012706  010F               	movlb	15	; () banked
 20882  012708  8330               	bsf	48,1,b	;volatile
 20883  01270A  D002               	goto	i2l9560
 20884  01270C                     i2l412:
 20885                           
 20886                           ; BSR set to: 15
 20887                           ;inc\CANlib.h: 430: else
 20888                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20889  01270C  010F               	movlb	15	; () banked
 20890  01270E  9330               	bcf	48,1,b	;volatile
 20891  012710                     i2l9560:
 20892                           
 20893                           ; BSR set to: 15
 20894                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20895  012710  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20896  012714  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20897  012718  50DF               	movf	indf2,w,c
 20898  01271A  010F               	movlb	15	; () banked
 20899  01271C  6F36               	movwf	54,b	;volatile
 20900                           
 20901                           ; BSR set to: 15
 20902                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20903  01271E  EE20 F001          	lfsr	2,1
 20904  012722  503F               	movf	i2CANsendMessage@data,w,c
 20905  012724  26D9               	addwf	fsr2l,f,c
 20906  012726  5040               	movf	i2CANsendMessage@data+1,w,c
 20907  012728  22DA               	addwfc	fsr2h,f,c
 20908  01272A  50DF               	movf	indf2,w,c
 20909  01272C  010F               	movlb	15	; () banked
 20910  01272E  6F37               	movwf	55,b	;volatile
 20911                           
 20912                           ; BSR set to: 15
 20913                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20914  012730  EE20 F002          	lfsr	2,2
 20915  012734  503F               	movf	i2CANsendMessage@data,w,c
 20916  012736  26D9               	addwf	fsr2l,f,c
 20917  012738  5040               	movf	i2CANsendMessage@data+1,w,c
 20918  01273A  22DA               	addwfc	fsr2h,f,c
 20919  01273C  50DF               	movf	indf2,w,c
 20920  01273E  010F               	movlb	15	; () banked
 20921  012740  6F38               	movwf	56,b	;volatile
 20922                           
 20923                           ; BSR set to: 15
 20924                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20925  012742  EE20 F003          	lfsr	2,3
 20926  012746  503F               	movf	i2CANsendMessage@data,w,c
 20927  012748  26D9               	addwf	fsr2l,f,c
 20928  01274A  5040               	movf	i2CANsendMessage@data+1,w,c
 20929  01274C  22DA               	addwfc	fsr2h,f,c
 20930  01274E  50DF               	movf	indf2,w,c
 20931  012750  010F               	movlb	15	; () banked
 20932  012752  6F39               	movwf	57,b	;volatile
 20933                           
 20934                           ; BSR set to: 15
 20935                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20936  012754  EE20 F004          	lfsr	2,4
 20937  012758  503F               	movf	i2CANsendMessage@data,w,c
 20938  01275A  26D9               	addwf	fsr2l,f,c
 20939  01275C  5040               	movf	i2CANsendMessage@data+1,w,c
 20940  01275E  22DA               	addwfc	fsr2h,f,c
 20941  012760  50DF               	movf	indf2,w,c
 20942  012762  010F               	movlb	15	; () banked
 20943  012764  6F3A               	movwf	58,b	;volatile
 20944                           
 20945                           ; BSR set to: 15
 20946                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20947  012766  EE20 F005          	lfsr	2,5
 20948  01276A  503F               	movf	i2CANsendMessage@data,w,c
 20949  01276C  26D9               	addwf	fsr2l,f,c
 20950  01276E  5040               	movf	i2CANsendMessage@data+1,w,c
 20951  012770  22DA               	addwfc	fsr2h,f,c
 20952  012772  50DF               	movf	indf2,w,c
 20953  012774  010F               	movlb	15	; () banked
 20954  012776  6F3B               	movwf	59,b	;volatile
 20955                           
 20956                           ; BSR set to: 15
 20957                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20958  012778  EE20 F006          	lfsr	2,6
 20959  01277C  503F               	movf	i2CANsendMessage@data,w,c
 20960  01277E  26D9               	addwf	fsr2l,f,c
 20961  012780  5040               	movf	i2CANsendMessage@data+1,w,c
 20962  012782  22DA               	addwfc	fsr2h,f,c
 20963  012784  50DF               	movf	indf2,w,c
 20964  012786  010F               	movlb	15	; () banked
 20965  012788  6F3C               	movwf	60,b	;volatile
 20966                           
 20967                           ; BSR set to: 15
 20968                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20969  01278A  EE20 F007          	lfsr	2,7
 20970  01278E  503F               	movf	i2CANsendMessage@data,w,c
 20971  012790  26D9               	addwf	fsr2l,f,c
 20972  012792  5040               	movf	i2CANsendMessage@data+1,w,c
 20973  012794  22DA               	addwfc	fsr2h,f,c
 20974  012796  50DF               	movf	indf2,w,c
 20975  012798  010F               	movlb	15	; () banked
 20976  01279A  6F3D               	movwf	61,b	;volatile
 20977                           
 20978                           ; BSR set to: 15
 20979                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20980  01279C  010F               	movlb	15	; () banked
 20981  01279E  8730               	bsf	48,3,b	;volatile
 20982                           
 20983                           ; BSR set to: 15
 20984                           ;inc\CANlib.h: 444: return;
 20985  0127A0  0012               	return	
 20986  0127A2                     i2l400:
 20987                           
 20988                           ; BSR set to: 15
 20989                           ;inc\CANlib.h: 445: }
 20990                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20991  0127A2  010F               	movlb	15	; () banked
 20992  0127A4  B720               	btfsc	32,3,b	;volatile
 20993  0127A6  0012               	return	
 20994                           
 20995                           ; BSR set to: 15
 20996                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20997  0127A8  C041  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20998                           
 20999                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 21000  0127AC  AC42               	btfss	i2CANsendMessage@flags,6,c
 21001  0127AE  D003               	goto	i2l415
 21002                           
 21003                           ; BSR set to: 15
 21004                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 21005  0127B0  010F               	movlb	15	; () banked
 21006  0127B2  8D25               	bsf	37,6,b	;volatile
 21007  0127B4  D002               	goto	i2l416
 21008  0127B6                     i2l415:
 21009                           
 21010                           ; BSR set to: 15
 21011                           ;inc\CANlib.h: 454: else
 21012                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 21013  0127B6  010F               	movlb	15	; () banked
 21014  0127B8  9D25               	bcf	37,6,b	;volatile
 21015  0127BA                     i2l416:
 21016                           
 21017                           ; BSR set to: 15
 21018                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 21019  0127BA  A642               	btfss	i2CANsendMessage@flags,3,c
 21020  0127BC  D066               	goto	i2l417
 21021                           
 21022                           ; BSR set to: 15
 21023                           ;inc\CANlib.h: 458: {
 21024                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 21025  0127BE  503B               	movf	i2CANsendMessage@identifier,w,c
 21026  0127C0  6E47               	movwf	i2CANsendMessage@tamp,c
 21027  0127C2  6A48               	clrf	i2CANsendMessage@tamp+1,c
 21028  0127C4  6A49               	clrf	i2CANsendMessage@tamp+2,c
 21029  0127C6  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 21030                           
 21031                           ; BSR set to: 15
 21032                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 21033  0127C8  C047  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 21034                           
 21035                           ; BSR set to: 15
 21036                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 21037  0127CC  0E00               	movlw	0
 21038  0127CE  143B               	andwf	i2CANsendMessage@identifier,w,c
 21039  0127D0  6E47               	movwf	i2CANsendMessage@tamp,c
 21040  0127D2  0EFF               	movlw	255
 21041  0127D4  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 21042  0127D6  6E48               	movwf	i2CANsendMessage@tamp+1,c
 21043  0127D8  0E00               	movlw	0
 21044  0127DA  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 21045  0127DC  6E49               	movwf	i2CANsendMessage@tamp+2,c
 21046  0127DE  0E00               	movlw	0
 21047  0127E0  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 21048  0127E2  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 21049                           
 21050                           ; BSR set to: 15
 21051                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 21052  0127E4  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21053  0127E8  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21054  0127EC  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21055  0127F0  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21056  0127F4  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 21057  0127F8  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 21058  0127FC  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 21059  012800  6A46               	clrf	??i2_CANsendMessage+3,c
 21060  012802  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21061  012806  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21062  01280A  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21063  01280E  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21064                           
 21065                           ; BSR set to: 15
 21066                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 21067  012812  C047  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 21068                           
 21069                           ; BSR set to: 15
 21070                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 21071  012816  0E00               	movlw	0
 21072  012818  010F               	movlb	15	; () banked
 21073  01281A  6F22               	movwf	34,b	;volatile
 21074                           
 21075                           ; BSR set to: 15
 21076                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 21077  01281C  010F               	movlb	15	; () banked
 21078  01281E  8722               	bsf	34,3,b	;volatile
 21079                           
 21080                           ; BSR set to: 15
 21081                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 21082  012820  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 21083  012822  D002               	goto	i2l418
 21084                           
 21085                           ; BSR set to: 15
 21086                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 21087  012824  010F               	movlb	15	; () banked
 21088  012826  8122               	bsf	34,0,b	;volatile
 21089  012828                     i2l418:
 21090                           
 21091                           ; BSR set to: 15
 21092                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 21093  012828  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 21094  01282A  D002               	goto	i2l419
 21095                           
 21096                           ; BSR set to: 15
 21097                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 21098  01282C  010F               	movlb	15	; () banked
 21099  01282E  8322               	bsf	34,1,b	;volatile
 21100  012830                     i2l419:
 21101                           
 21102                           ; BSR set to: 15
 21103                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 21104  012830  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 21105  012832  D002               	goto	i2l420
 21106                           
 21107                           ; BSR set to: 15
 21108                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 21109  012834  010F               	movlb	15	; () banked
 21110  012836  8B22               	bsf	34,5,b	;volatile
 21111  012838                     i2l420:
 21112                           
 21113                           ; BSR set to: 15
 21114                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 21115  012838  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 21116  01283A  D002               	goto	i2l421
 21117                           
 21118                           ; BSR set to: 15
 21119                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 21120  01283C  010F               	movlb	15	; () banked
 21121  01283E  8D22               	bsf	34,6,b	;volatile
 21122  012840                     i2l421:
 21123                           
 21124                           ; BSR set to: 15
 21125                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 21126  012840  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 21127  012842  D002               	goto	i2l9610
 21128                           
 21129                           ; BSR set to: 15
 21130                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 21131  012844  010F               	movlb	15	; () banked
 21132  012846  8F22               	bsf	34,7,b	;volatile
 21133  012848                     i2l9610:
 21134                           
 21135                           ; BSR set to: 15
 21136                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 21137  012848  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21138  01284C  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21139  012850  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21140  012854  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21141  012858  0E16               	movlw	22
 21142  01285A  D005               	goto	i2u1276_40
 21143  01285C                     i2u1276_45:
 21144  01285C  90D8               	bcf	status,0,c
 21145  01285E  3246               	rrcf	??i2_CANsendMessage+3,f,c
 21146  012860  3245               	rrcf	??i2_CANsendMessage+2,f,c
 21147  012862  3244               	rrcf	??i2_CANsendMessage+1,f,c
 21148  012864  3243               	rrcf	??i2_CANsendMessage,f,c
 21149  012866                     i2u1276_40:
 21150  012866  2EE8               	decfsz	wreg,f,c
 21151  012868  D7F9               	goto	i2u1276_45
 21152  01286A  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21153  01286E  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21154  012872  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21155  012876  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21156                           
 21157                           ; BSR set to: 15
 21158                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 21159  01287A  5047               	movf	i2CANsendMessage@tamp,w,c
 21160  01287C  6E47               	movwf	i2CANsendMessage@tamp,c
 21161  01287E  6A48               	clrf	i2CANsendMessage@tamp+1,c
 21162  012880  6A49               	clrf	i2CANsendMessage@tamp+2,c
 21163  012882  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 21164                           
 21165                           ; BSR set to: 15
 21166                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 21167  012884  C047  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 21168                           
 21169                           ;inc\CANlib.h: 483: }
 21170  012888  D04D               	goto	i2l9630
 21171  01288A                     i2l417:
 21172                           
 21173                           ; BSR set to: 15
 21174                           ;inc\CANlib.h: 485: else
 21175                           ;inc\CANlib.h: 487: {
 21176                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 21177  01288A  010F               	movlb	15	; () banked
 21178  01288C  9722               	bcf	34,3,b	;volatile
 21179                           
 21180                           ; BSR set to: 15
 21181                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 21182  01288E  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21183  012892  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21184  012896  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21185  01289A  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21186  01289E  0E04               	movlw	4
 21187  0128A0  D005               	goto	i2u1277_40
 21188  0128A2                     i2u1277_45:
 21189  0128A2  90D8               	bcf	status,0,c
 21190  0128A4  3246               	rrcf	??i2_CANsendMessage+3,f,c
 21191  0128A6  3245               	rrcf	??i2_CANsendMessage+2,f,c
 21192  0128A8  3244               	rrcf	??i2_CANsendMessage+1,f,c
 21193  0128AA  3243               	rrcf	??i2_CANsendMessage,f,c
 21194  0128AC                     i2u1277_40:
 21195  0128AC  2EE8               	decfsz	wreg,f,c
 21196  0128AE  D7F9               	goto	i2u1277_45
 21197  0128B0  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21198  0128B4  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21199  0128B8  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21200  0128BC  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21201                           
 21202                           ; BSR set to: 15
 21203                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 21204  0128C0  5047               	movf	i2CANsendMessage@tamp,w,c
 21205  0128C2  6E47               	movwf	i2CANsendMessage@tamp,c
 21206  0128C4  6A48               	clrf	i2CANsendMessage@tamp+1,c
 21207  0128C6  6A49               	clrf	i2CANsendMessage@tamp+2,c
 21208  0128C8  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 21209                           
 21210                           ; BSR set to: 15
 21211                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 21212  0128CA  C047  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 21213                           
 21214                           ; BSR set to: 15
 21215                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 21216  0128CE  0E07               	movlw	7
 21217  0128D0  143B               	andwf	i2CANsendMessage@identifier,w,c
 21218  0128D2  6E47               	movwf	i2CANsendMessage@tamp,c
 21219  0128D4  0E00               	movlw	0
 21220  0128D6  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 21221  0128D8  6E48               	movwf	i2CANsendMessage@tamp+1,c
 21222  0128DA  0E00               	movlw	0
 21223  0128DC  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 21224  0128DE  6E49               	movwf	i2CANsendMessage@tamp+2,c
 21225  0128E0  0E00               	movlw	0
 21226  0128E2  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 21227  0128E4  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 21228                           
 21229                           ; BSR set to: 15
 21230                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 21231  0128E6  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21232  0128EA  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21233  0128EE  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21234  0128F2  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21235  0128F6  0E05               	movlw	5
 21236  0128F8                     i2u1278_45:
 21237  0128F8  90D8               	bcf	status,0,c
 21238  0128FA  3643               	rlcf	??i2_CANsendMessage,f,c
 21239  0128FC  3644               	rlcf	??i2_CANsendMessage+1,f,c
 21240  0128FE  3645               	rlcf	??i2_CANsendMessage+2,f,c
 21241  012900  3646               	rlcf	??i2_CANsendMessage+3,f,c
 21242  012902  2EE8               	decfsz	wreg,f,c
 21243  012904  D7F9               	goto	i2u1278_45
 21244  012906  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21245  01290A  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21246  01290E  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21247  012912  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21248                           
 21249                           ; BSR set to: 15
 21250                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 21251  012916  010F               	movlb	15	; () banked
 21252  012918  5122               	movf	34,w,b	;volatile
 21253  01291A  0B1F               	andlw	31
 21254  01291C  010F               	movlb	15	; () banked
 21255  01291E  6F22               	movwf	34,b	;volatile
 21256                           
 21257                           ; BSR set to: 15
 21258                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 21259  012920  C047  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 21260  012924                     i2l9630:
 21261                           
 21262                           ; BSR set to: 15
 21263                           ;inc\CANlib.h: 498: }
 21264                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 21265  012924  A042               	btfss	i2CANsendMessage@flags,0,c
 21266  012926  D003               	goto	i2l424
 21267                           
 21268                           ; BSR set to: 15
 21269                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 21270  012928  010F               	movlb	15	; () banked
 21271  01292A  8120               	bsf	32,0,b	;volatile
 21272  01292C  D002               	goto	i2l425
 21273  01292E                     i2l424:
 21274                           
 21275                           ; BSR set to: 15
 21276                           ;inc\CANlib.h: 502: else
 21277                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 21278  01292E  010F               	movlb	15	; () banked
 21279  012930  9120               	bcf	32,0,b	;volatile
 21280  012932                     i2l425:
 21281                           
 21282                           ; BSR set to: 15
 21283                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 21284  012932  A242               	btfss	i2CANsendMessage@flags,1,c
 21285  012934  D003               	goto	i2l426
 21286                           
 21287                           ; BSR set to: 15
 21288                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 21289  012936  010F               	movlb	15	; () banked
 21290  012938  8320               	bsf	32,1,b	;volatile
 21291  01293A  D002               	goto	i2l9636
 21292  01293C                     i2l426:
 21293                           
 21294                           ; BSR set to: 15
 21295                           ;inc\CANlib.h: 506: else
 21296                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 21297  01293C  010F               	movlb	15	; () banked
 21298  01293E  9320               	bcf	32,1,b	;volatile
 21299  012940                     i2l9636:
 21300                           
 21301                           ; BSR set to: 15
 21302                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 21303  012940  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21304  012944  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21305  012948  50DF               	movf	indf2,w,c
 21306  01294A  010F               	movlb	15	; () banked
 21307  01294C  6F26               	movwf	38,b	;volatile
 21308                           
 21309                           ; BSR set to: 15
 21310                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 21311  01294E  EE20 F001          	lfsr	2,1
 21312  012952  503F               	movf	i2CANsendMessage@data,w,c
 21313  012954  26D9               	addwf	fsr2l,f,c
 21314  012956  5040               	movf	i2CANsendMessage@data+1,w,c
 21315  012958  22DA               	addwfc	fsr2h,f,c
 21316  01295A  50DF               	movf	indf2,w,c
 21317  01295C  010F               	movlb	15	; () banked
 21318  01295E  6F27               	movwf	39,b	;volatile
 21319                           
 21320                           ; BSR set to: 15
 21321                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 21322  012960  EE20 F002          	lfsr	2,2
 21323  012964  503F               	movf	i2CANsendMessage@data,w,c
 21324  012966  26D9               	addwf	fsr2l,f,c
 21325  012968  5040               	movf	i2CANsendMessage@data+1,w,c
 21326  01296A  22DA               	addwfc	fsr2h,f,c
 21327  01296C  50DF               	movf	indf2,w,c
 21328  01296E  010F               	movlb	15	; () banked
 21329  012970  6F28               	movwf	40,b	;volatile
 21330                           
 21331                           ; BSR set to: 15
 21332                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 21333  012972  EE20 F003          	lfsr	2,3
 21334  012976  503F               	movf	i2CANsendMessage@data,w,c
 21335  012978  26D9               	addwf	fsr2l,f,c
 21336  01297A  5040               	movf	i2CANsendMessage@data+1,w,c
 21337  01297C  22DA               	addwfc	fsr2h,f,c
 21338  01297E  50DF               	movf	indf2,w,c
 21339  012980  010F               	movlb	15	; () banked
 21340  012982  6F29               	movwf	41,b	;volatile
 21341                           
 21342                           ; BSR set to: 15
 21343                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 21344  012984  EE20 F004          	lfsr	2,4
 21345  012988  503F               	movf	i2CANsendMessage@data,w,c
 21346  01298A  26D9               	addwf	fsr2l,f,c
 21347  01298C  5040               	movf	i2CANsendMessage@data+1,w,c
 21348  01298E  22DA               	addwfc	fsr2h,f,c
 21349  012990  50DF               	movf	indf2,w,c
 21350  012992  010F               	movlb	15	; () banked
 21351  012994  6F2A               	movwf	42,b	;volatile
 21352                           
 21353                           ; BSR set to: 15
 21354                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 21355  012996  EE20 F005          	lfsr	2,5
 21356  01299A  503F               	movf	i2CANsendMessage@data,w,c
 21357  01299C  26D9               	addwf	fsr2l,f,c
 21358  01299E  5040               	movf	i2CANsendMessage@data+1,w,c
 21359  0129A0  22DA               	addwfc	fsr2h,f,c
 21360  0129A2  50DF               	movf	indf2,w,c
 21361  0129A4  010F               	movlb	15	; () banked
 21362  0129A6  6F2B               	movwf	43,b	;volatile
 21363                           
 21364                           ; BSR set to: 15
 21365                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 21366  0129A8  EE20 F006          	lfsr	2,6
 21367  0129AC  503F               	movf	i2CANsendMessage@data,w,c
 21368  0129AE  26D9               	addwf	fsr2l,f,c
 21369  0129B0  5040               	movf	i2CANsendMessage@data+1,w,c
 21370  0129B2  22DA               	addwfc	fsr2h,f,c
 21371  0129B4  50DF               	movf	indf2,w,c
 21372  0129B6  010F               	movlb	15	; () banked
 21373  0129B8  6F2C               	movwf	44,b	;volatile
 21374                           
 21375                           ; BSR set to: 15
 21376                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 21377  0129BA  EE20 F007          	lfsr	2,7
 21378  0129BE  503F               	movf	i2CANsendMessage@data,w,c
 21379  0129C0  26D9               	addwf	fsr2l,f,c
 21380  0129C2  5040               	movf	i2CANsendMessage@data+1,w,c
 21381  0129C4  22DA               	addwfc	fsr2h,f,c
 21382  0129C6  50DF               	movf	indf2,w,c
 21383  0129C8  010F               	movlb	15	; () banked
 21384  0129CA  6F2D               	movwf	45,b	;volatile
 21385                           
 21386                           ; BSR set to: 15
 21387                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 21388  0129CC  010F               	movlb	15	; () banked
 21389  0129CE  8720               	bsf	32,3,b	;volatile
 21390                           
 21391                           ; BSR set to: 15
 21392                           ;inc\CANlib.h: 520: return;
 21393  0129D0  0012               	return	
 21394  0129D2                     __end_ofi2_CANsendMessage:
 21395                           	opt stack 0
 21396                           pclatu	equ	0xFFB
 21397                           pclath	equ	0xFFA
 21398                           tblptru	equ	0xFF8
 21399                           tblptrh	equ	0xFF7
 21400                           tblptrl	equ	0xFF6
 21401                           tablat	equ	0xFF5
 21402                           prodh	equ	0xFF4
 21403                           prodl	equ	0xFF3
 21404                           intcon	equ	0xFF2
 21405                           postinc0	equ	0xFEE
 21406                           fsr0h	equ	0xFEA
 21407                           fsr0l	equ	0xFE9
 21408                           wreg	equ	0xFE8
 21409                           indf1	equ	0xFE7
 21410                           plusw1	equ	0xFE3
 21411                           fsr1h	equ	0xFE2
 21412                           fsr1l	equ	0xFE1
 21413                           bsr	equ	0xFE0
 21414                           indf2	equ	0xFDF
 21415                           postinc2	equ	0xFDE
 21416                           plusw2	equ	0xFDB
 21417                           fsr2h	equ	0xFDA
 21418                           fsr2l	equ	0xFD9
 21419                           status	equ	0xFD8
 21420                           
 21421 ;; *************** function i2_CANisTxReady *****************
 21422 ;; Defined at:
 21423 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21424 ;; Parameters:    Size  Location     Type
 21425 ;;		None
 21426 ;; Auto vars:     Size  Location     Type
 21427 ;;		None
 21428 ;; Return value:  Size  Location     Type
 21429 ;;                  1    wreg      unsigned char 
 21430 ;; Registers used:
 21431 ;;		wreg, status,2
 21432 ;; Tracked objects:
 21433 ;;		On entry : 0/0
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21441 ;;Total ram usage:        1 bytes
 21442 ;; Hardware stack levels used:    1
 21443 ;; This function calls:
 21444 ;;		Nothing
 21445 ;; This function is called by:
 21446 ;;		_ISR_alta
 21447 ;; This function uses a non-reentrant model
 21448 ;;
 21449                           
 21450                           	psect	text60
 21451  016556                     __ptext60:
 21452                           	opt stack 0
 21453  016556                     i2_CANisTxReady:
 21454                           	opt stack 20
 21455                           
 21456                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 21457                           
 21458                           ; BSR set to: 15
 21459                           ;incstack = 0
 21460  016556  0E01               	movlw	1
 21461  016558  6E3B               	movwf	i2_CANisTxReady$3255,c
 21462  01655A  010F               	movlb	15	; () banked
 21463  01655C  A740               	btfss	64,3,b	;volatile
 21464  01655E  D008               	goto	i2l578
 21465                           
 21466                           ; BSR set to: 15
 21467  016560  010F               	movlb	15	; () banked
 21468  016562  A730               	btfss	48,3,b	;volatile
 21469  016564  D005               	goto	i2l578
 21470                           
 21471                           ; BSR set to: 15
 21472  016566  010F               	movlb	15	; () banked
 21473  016568  A720               	btfss	32,3,b	;volatile
 21474  01656A  D002               	goto	i2l578
 21475                           
 21476                           ; BSR set to: 15
 21477  01656C  0E00               	movlw	0
 21478  01656E  6E3B               	movwf	i2_CANisTxReady$3255,c
 21479  016570                     i2l578:
 21480                           
 21481                           ; BSR set to: 15
 21482  016570  503B               	movf	i2_CANisTxReady$3255,w,c
 21483  016572  0012               	return	
 21484  016574                     __end_ofi2_CANisTxReady:
 21485                           	opt stack 0
 21486                           pclatu	equ	0xFFB
 21487                           pclath	equ	0xFFA
 21488                           tblptru	equ	0xFF8
 21489                           tblptrh	equ	0xFF7
 21490                           tblptrl	equ	0xFF6
 21491                           tablat	equ	0xFF5
 21492                           prodh	equ	0xFF4
 21493                           prodl	equ	0xFF3
 21494                           intcon	equ	0xFF2
 21495                           postinc0	equ	0xFEE
 21496                           fsr0h	equ	0xFEA
 21497                           fsr0l	equ	0xFE9
 21498                           wreg	equ	0xFE8
 21499                           indf1	equ	0xFE7
 21500                           plusw1	equ	0xFE3
 21501                           fsr1h	equ	0xFE2
 21502                           fsr1l	equ	0xFE1
 21503                           bsr	equ	0xFE0
 21504                           indf2	equ	0xFDF
 21505                           postinc2	equ	0xFDE
 21506                           plusw2	equ	0xFDB
 21507                           fsr2h	equ	0xFDA
 21508                           fsr2l	equ	0xFD9
 21509                           status	equ	0xFD8
 21510                           
 21511 ;; *************** function _CANreceiveMessage *****************
 21512 ;; Defined at:
 21513 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21514 ;; Parameters:    Size  Location     Type
 21515 ;;  msg             2   17[COMRAM] PTR struct .
 21516 ;;		 -> msg(15), 
 21517 ;; Auto vars:     Size  Location     Type
 21518 ;;  tamp            1   28[COMRAM] unsigned char 
 21519 ;;  error           1   27[COMRAM] unsigned char 
 21520 ;; Return value:  Size  Location     Type
 21521 ;;                  1    wreg      unsigned char 
 21522 ;; Registers used:
 21523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21524 ;; Tracked objects:
 21525 ;;		On entry : 0/0
 21526 ;;		On exit  : 0/0
 21527 ;;		Unchanged: 0/0
 21528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21531 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21532 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21533 ;;Total ram usage:       12 bytes
 21534 ;; Hardware stack levels used:    1
 21535 ;; This function calls:
 21536 ;;		Nothing
 21537 ;; This function is called by:
 21538 ;;		_ISR_alta
 21539 ;; This function uses a non-reentrant model
 21540 ;;
 21541                           
 21542                           	psect	text61
 21543  012EEC                     __ptext61:
 21544                           	opt stack 0
 21545  012EEC                     _CANreceiveMessage:
 21546                           	opt stack 20
 21547                           
 21548                           ;inc\CANlib.h: 530: BYTE tamp;
 21549                           ;inc\CANlib.h: 531: BYTE error = 0;
 21550                           
 21551                           ; BSR set to: 15
 21552                           ;incstack = 0
 21553  012EEC  0E00               	movlw	0
 21554  012EEE  6E45               	movwf	CANreceiveMessage@error,c
 21555                           
 21556                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 21557  012EF0  BE74               	btfsc	3956,7,c	;volatile
 21558                           
 21559                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 21560  012EF2  8045               	bsf	CANreceiveMessage@error,0,c
 21561                           
 21562                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 21563  012EF4  BC74               	btfsc	3956,6,c	;volatile
 21564                           
 21565                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 21566  012EF6  8245               	bsf	CANreceiveMessage@error,1,c
 21567                           
 21568                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 21569  012EF8  010F               	movlb	15	; () banked
 21570  012EFA  AF50               	btfss	80,7,b	;volatile
 21571  012EFC  D143               	goto	i2l432
 21572                           
 21573                           ; BSR set to: 15
 21574                           ;inc\CANlib.h: 541: {
 21575                           ;inc\CANlib.h: 542: msg->identifier = 0;
 21576  012EFE  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21577  012F02  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21578  012F06  6ADE               	clrf	postinc2,c
 21579  012F08  6ADE               	clrf	postinc2,c
 21580  012F0A  6ADE               	clrf	postinc2,c
 21581  012F0C  6ADD               	clrf	postdec2,c
 21582                           
 21583                           ; BSR set to: 15
 21584                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 21585  012F0E  EE20 F004          	lfsr	2,4
 21586  012F12  503B               	movf	CANreceiveMessage@msg,w,c
 21587  012F14  26D9               	addwf	fsr2l,f,c
 21588  012F16  503C               	movf	CANreceiveMessage@msg+1,w,c
 21589  012F18  22DA               	addwfc	fsr2h,f,c
 21590  012F1A  CF56 FFDF          	movff	3926,indf2	;volatile
 21591                           
 21592                           ; BSR set to: 15
 21593                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 21594  012F1E  EE20 F005          	lfsr	2,5
 21595  012F22  503B               	movf	CANreceiveMessage@msg,w,c
 21596  012F24  26D9               	addwf	fsr2l,f,c
 21597  012F26  503C               	movf	CANreceiveMessage@msg+1,w,c
 21598  012F28  22DA               	addwfc	fsr2h,f,c
 21599  012F2A  CF57 FFDF          	movff	3927,indf2	;volatile
 21600                           
 21601                           ; BSR set to: 15
 21602                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 21603  012F2E  EE20 F006          	lfsr	2,6
 21604  012F32  503B               	movf	CANreceiveMessage@msg,w,c
 21605  012F34  26D9               	addwf	fsr2l,f,c
 21606  012F36  503C               	movf	CANreceiveMessage@msg+1,w,c
 21607  012F38  22DA               	addwfc	fsr2h,f,c
 21608  012F3A  CF58 FFDF          	movff	3928,indf2	;volatile
 21609                           
 21610                           ; BSR set to: 15
 21611                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 21612  012F3E  EE20 F007          	lfsr	2,7
 21613  012F42  503B               	movf	CANreceiveMessage@msg,w,c
 21614  012F44  26D9               	addwf	fsr2l,f,c
 21615  012F46  503C               	movf	CANreceiveMessage@msg+1,w,c
 21616  012F48  22DA               	addwfc	fsr2h,f,c
 21617  012F4A  CF59 FFDF          	movff	3929,indf2	;volatile
 21618                           
 21619                           ; BSR set to: 15
 21620                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 21621  012F4E  EE20 F008          	lfsr	2,8
 21622  012F52  503B               	movf	CANreceiveMessage@msg,w,c
 21623  012F54  26D9               	addwf	fsr2l,f,c
 21624  012F56  503C               	movf	CANreceiveMessage@msg+1,w,c
 21625  012F58  22DA               	addwfc	fsr2h,f,c
 21626  012F5A  CF5A FFDF          	movff	3930,indf2	;volatile
 21627                           
 21628                           ; BSR set to: 15
 21629                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 21630  012F5E  EE20 F009          	lfsr	2,9
 21631  012F62  503B               	movf	CANreceiveMessage@msg,w,c
 21632  012F64  26D9               	addwf	fsr2l,f,c
 21633  012F66  503C               	movf	CANreceiveMessage@msg+1,w,c
 21634  012F68  22DA               	addwfc	fsr2h,f,c
 21635  012F6A  CF5B FFDF          	movff	3931,indf2	;volatile
 21636                           
 21637                           ; BSR set to: 15
 21638                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 21639  012F6E  EE20 F00A          	lfsr	2,10
 21640  012F72  503B               	movf	CANreceiveMessage@msg,w,c
 21641  012F74  26D9               	addwf	fsr2l,f,c
 21642  012F76  503C               	movf	CANreceiveMessage@msg+1,w,c
 21643  012F78  22DA               	addwfc	fsr2h,f,c
 21644  012F7A  CF5C FFDF          	movff	3932,indf2	;volatile
 21645                           
 21646                           ; BSR set to: 15
 21647                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 21648  012F7E  EE20 F00B          	lfsr	2,11
 21649  012F82  503B               	movf	CANreceiveMessage@msg,w,c
 21650  012F84  26D9               	addwf	fsr2l,f,c
 21651  012F86  503C               	movf	CANreceiveMessage@msg+1,w,c
 21652  012F88  22DA               	addwfc	fsr2h,f,c
 21653  012F8A  CF5D FFDF          	movff	3933,indf2	;volatile
 21654                           
 21655                           ; BSR set to: 15
 21656                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 21657  012F8E  EE20 F00E          	lfsr	2,14
 21658  012F92  503B               	movf	CANreceiveMessage@msg,w,c
 21659  012F94  26D9               	addwf	fsr2l,f,c
 21660  012F96  503C               	movf	CANreceiveMessage@msg+1,w,c
 21661  012F98  22DA               	addwfc	fsr2h,f,c
 21662  012F9A  010F               	movlb	15	; () banked
 21663  012F9C  AD55               	btfss	85,6,b	;volatile
 21664  012F9E  D002               	goto	i2u1212_40
 21665  012FA0  0E01               	movlw	1
 21666  012FA2  D001               	goto	i2u1212_46
 21667  012FA4                     i2u1212_40:
 21668  012FA4  0E00               	movlw	0
 21669  012FA6                     i2u1212_46:
 21670  012FA6  6EDF               	movwf	indf2,c
 21671                           
 21672                           ; BSR set to: 15
 21673                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 21674  012FA8  EE20 F00D          	lfsr	2,13
 21675  012FAC  503B               	movf	CANreceiveMessage@msg,w,c
 21676  012FAE  26D9               	addwf	fsr2l,f,c
 21677  012FB0  503C               	movf	CANreceiveMessage@msg+1,w,c
 21678  012FB2  22DA               	addwfc	fsr2h,f,c
 21679  012FB4  010F               	movlb	15	; () banked
 21680  012FB6  5155               	movf	85,w,b	;volatile
 21681  012FB8  0B0F               	andlw	15
 21682  012FBA  6EDF               	movwf	indf2,c
 21683                           
 21684                           ; BSR set to: 15
 21685                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 21686  012FBC  EE20 F00C          	lfsr	2,12
 21687  012FC0  503B               	movf	CANreceiveMessage@msg,w,c
 21688  012FC2  26D9               	addwf	fsr2l,f,c
 21689  012FC4  503C               	movf	CANreceiveMessage@msg+1,w,c
 21690  012FC6  22DA               	addwfc	fsr2h,f,c
 21691  012FC8  010F               	movlb	15	; () banked
 21692  012FCA  A752               	btfss	82,3,b	;volatile
 21693  012FCC  D002               	goto	i2u1213_40
 21694  012FCE  0E01               	movlw	1
 21695  012FD0  D001               	goto	i2u1213_46
 21696  012FD2                     i2u1213_40:
 21697  012FD2  0E00               	movlw	0
 21698  012FD4                     i2u1213_46:
 21699  012FD4  6EDF               	movwf	indf2,c
 21700                           
 21701                           ; BSR set to: 15
 21702                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 21703  012FD6  010F               	movlb	15	; () banked
 21704  012FD8  B752               	btfsc	82,3,b	;volatile
 21705  012FDA  D044               	goto	i2l9124
 21706                           
 21707                           ; BSR set to: 15
 21708                           ;inc\CANlib.h: 559: {
 21709                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 21710  012FDC  CF51 F03D          	movff	3921,??_CANreceiveMessage	;volatile
 21711  012FE0  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21712  012FE2  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21713  012FE4  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21714  012FE6  0E03               	movlw	3
 21715  012FE8                     i2u1215_45:
 21716  012FE8  90D8               	bcf	status,0,c
 21717  012FEA  363D               	rlcf	??_CANreceiveMessage,f,c
 21718  012FEC  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21719  012FEE  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21720  012FF0  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21721  012FF2  2EE8               	decfsz	wreg,f,c
 21722  012FF4  D7F9               	goto	i2u1215_45
 21723  012FF6  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21724  012FFA  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21725  012FFE  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21726  013002  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21727  013006  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21728  01300A  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21729                           
 21730                           ; BSR set to: 15
 21731                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 21732  01300E  010F               	movlb	15	; () banked
 21733  013010  3952               	swapf	82,w,b	;volatile
 21734  013012  42E8               	rrncf	wreg,f,c
 21735  013014  0B07               	andlw	7
 21736  013016  0B07               	andlw	7
 21737  013018  6E46               	movwf	CANreceiveMessage@tamp,c
 21738                           
 21739                           ; BSR set to: 15
 21740                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 21741  01301A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21742  01301E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21743  013022  CFDE F03D          	movff	postinc2,??_CANreceiveMessage
 21744  013026  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+1
 21745  01302A  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+2
 21746  01302E  CFDE F040          	movff	postinc2,??_CANreceiveMessage+3
 21747  013032  5046               	movf	CANreceiveMessage@tamp,w,c
 21748  013034  243D               	addwf	??_CANreceiveMessage,w,c
 21749  013036  6E41               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21750  013038  0E00               	movlw	0
 21751  01303A  203E               	addwfc	??_CANreceiveMessage+1,w,c
 21752  01303C  6E42               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21753  01303E  0E00               	movlw	0
 21754  013040  203F               	addwfc	??_CANreceiveMessage+2,w,c
 21755  013042  6E43               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21756  013044  0E00               	movlw	0
 21757  013046  2040               	addwfc	??_CANreceiveMessage+3,w,c
 21758  013048  6E44               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21759  01304A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21760  01304E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21761  013052  C041  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21762  013056  C042  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21763  01305A  C043  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21764  01305E  C044  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21765                           
 21766                           ;inc\CANlib.h: 563: }
 21767  013062  D08D               	goto	i2l9150
 21768  013064                     i2l9124:
 21769                           
 21770                           ; BSR set to: 15
 21771                           ;inc\CANlib.h: 564: else
 21772                           ;inc\CANlib.h: 565: {
 21773                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 21774  013064  CF54 F03D          	movff	3924,??_CANreceiveMessage	;volatile
 21775  013068  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21776  01306A  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21777  01306C  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21778  01306E  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21779  013072  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21780  013076  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21781  01307A  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21782  01307E  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21783  013082  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21784                           
 21785                           ; BSR set to: 15
 21786                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 21787  013086  CF53 F03D          	movff	3923,??_CANreceiveMessage	;volatile
 21788  01308A  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21789  01308C  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21790  01308E  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21791  013090  C03F  F040         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21792  013094  C03E  F03F         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21793  013098  C03D  F03E         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21794  01309C  6A3D               	clrf	??_CANreceiveMessage,c
 21795  01309E  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21796  0130A2  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21797  0130A6  503D               	movf	??_CANreceiveMessage,w,c
 21798  0130A8  26DE               	addwf	postinc2,f,c
 21799  0130AA  503E               	movf	??_CANreceiveMessage+1,w,c
 21800  0130AC  22DE               	addwfc	postinc2,f,c
 21801  0130AE  503F               	movf	??_CANreceiveMessage+2,w,c
 21802  0130B0  22DE               	addwfc	postinc2,f,c
 21803  0130B2  5040               	movf	??_CANreceiveMessage+3,w,c
 21804  0130B4  22DE               	addwfc	postinc2,f,c
 21805                           
 21806                           ; BSR set to: 15
 21807                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 21808  0130B6  010F               	movlb	15	; () banked
 21809  0130B8  A152               	btfss	82,0,b	;volatile
 21810  0130BA  D00C               	goto	i2l9132
 21811                           
 21812                           ; BSR set to: 15
 21813                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 21814  0130BC  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21815  0130C0  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21816  0130C4  0E00               	movlw	0
 21817  0130C6  12DE               	iorwf	postinc2,f,c
 21818  0130C8  0E00               	movlw	0
 21819  0130CA  12DE               	iorwf	postinc2,f,c
 21820  0130CC  0E01               	movlw	1
 21821  0130CE  12DE               	iorwf	postinc2,f,c
 21822  0130D0  0E00               	movlw	0
 21823  0130D2  12DE               	iorwf	postinc2,f,c
 21824  0130D4                     i2l9132:
 21825                           
 21826                           ; BSR set to: 15
 21827                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 21828  0130D4  010F               	movlb	15	; () banked
 21829  0130D6  A352               	btfss	82,1,b	;volatile
 21830  0130D8  D00C               	goto	i2l9136
 21831                           
 21832                           ; BSR set to: 15
 21833                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 21834  0130DA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21835  0130DE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21836  0130E2  0E00               	movlw	0
 21837  0130E4  12DE               	iorwf	postinc2,f,c
 21838  0130E6  0E00               	movlw	0
 21839  0130E8  12DE               	iorwf	postinc2,f,c
 21840  0130EA  0E02               	movlw	2
 21841  0130EC  12DE               	iorwf	postinc2,f,c
 21842  0130EE  0E00               	movlw	0
 21843  0130F0  12DE               	iorwf	postinc2,f,c
 21844  0130F2                     i2l9136:
 21845                           
 21846                           ; BSR set to: 15
 21847                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 21848  0130F2  010F               	movlb	15	; () banked
 21849  0130F4  AB52               	btfss	82,5,b	;volatile
 21850  0130F6  D00C               	goto	i2l9140
 21851                           
 21852                           ; BSR set to: 15
 21853                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21854  0130F8  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21855  0130FC  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21856  013100  0E00               	movlw	0
 21857  013102  12DE               	iorwf	postinc2,f,c
 21858  013104  0E00               	movlw	0
 21859  013106  12DE               	iorwf	postinc2,f,c
 21860  013108  0E04               	movlw	4
 21861  01310A  12DE               	iorwf	postinc2,f,c
 21862  01310C  0E00               	movlw	0
 21863  01310E  12DE               	iorwf	postinc2,f,c
 21864  013110                     i2l9140:
 21865                           
 21866                           ; BSR set to: 15
 21867                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21868  013110  010F               	movlb	15	; () banked
 21869  013112  AD52               	btfss	82,6,b	;volatile
 21870  013114  D00C               	goto	i2l9144
 21871                           
 21872                           ; BSR set to: 15
 21873                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21874  013116  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21875  01311A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21876  01311E  0E00               	movlw	0
 21877  013120  12DE               	iorwf	postinc2,f,c
 21878  013122  0E00               	movlw	0
 21879  013124  12DE               	iorwf	postinc2,f,c
 21880  013126  0E08               	movlw	8
 21881  013128  12DE               	iorwf	postinc2,f,c
 21882  01312A  0E00               	movlw	0
 21883  01312C  12DE               	iorwf	postinc2,f,c
 21884  01312E                     i2l9144:
 21885                           
 21886                           ; BSR set to: 15
 21887                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21888  01312E  010F               	movlb	15	; () banked
 21889  013130  AF52               	btfss	82,7,b	;volatile
 21890  013132  D00C               	goto	i2l9148
 21891                           
 21892                           ; BSR set to: 15
 21893                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21894  013134  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21895  013138  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21896  01313C  0E00               	movlw	0
 21897  01313E  12DE               	iorwf	postinc2,f,c
 21898  013140  0E00               	movlw	0
 21899  013142  12DE               	iorwf	postinc2,f,c
 21900  013144  0E10               	movlw	16
 21901  013146  12DE               	iorwf	postinc2,f,c
 21902  013148  0E00               	movlw	0
 21903  01314A  12DE               	iorwf	postinc2,f,c
 21904  01314C                     i2l9148:
 21905                           
 21906                           ; BSR set to: 15
 21907                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21908  01314C  CF51 F03D          	movff	3921,??_CANreceiveMessage	;volatile
 21909  013150  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21910  013152  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21911  013154  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21912  013156  0E15               	movlw	21
 21913  013158                     i2u1221_45:
 21914  013158  90D8               	bcf	status,0,c
 21915  01315A  363D               	rlcf	??_CANreceiveMessage,f,c
 21916  01315C  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21917  01315E  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21918  013160  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21919  013162  2EE8               	decfsz	wreg,f,c
 21920  013164  D7F9               	goto	i2u1221_45
 21921  013166  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21922  01316A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21923  01316E  503D               	movf	??_CANreceiveMessage,w,c
 21924  013170  12DE               	iorwf	postinc2,f,c
 21925  013172  503E               	movf	??_CANreceiveMessage+1,w,c
 21926  013174  12DE               	iorwf	postinc2,f,c
 21927  013176  503F               	movf	??_CANreceiveMessage+2,w,c
 21928  013178  12DE               	iorwf	postinc2,f,c
 21929  01317A  5040               	movf	??_CANreceiveMessage+3,w,c
 21930  01317C  12DE               	iorwf	postinc2,f,c
 21931  01317E                     i2l9150:
 21932                           
 21933                           ; BSR set to: 15
 21934                           ;inc\CANlib.h: 581: }
 21935                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21936  01317E  010F               	movlb	15	; () banked
 21937  013180  9F50               	bcf	80,7,b	;volatile
 21938                           
 21939                           ; BSR set to: 15
 21940                           ;inc\CANlib.h: 584: return (error);
 21941                           ;	Return value of _CANreceiveMessage is never used
 21942  013182  0012               	return	
 21943  013184                     i2l432:
 21944                           
 21945                           ; BSR set to: 15
 21946                           ;inc\CANlib.h: 585: }
 21947                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21948  013184  AE60               	btfss	3936,7,c	;volatile
 21949  013186  0012               	return	
 21950                           
 21951                           ; BSR set to: 15
 21952                           ;inc\CANlib.h: 588: {
 21953                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21954  013188  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21955  01318C  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21956  013190  6ADE               	clrf	postinc2,c
 21957  013192  6ADE               	clrf	postinc2,c
 21958  013194  6ADE               	clrf	postinc2,c
 21959  013196  6ADD               	clrf	postdec2,c
 21960                           
 21961                           ; BSR set to: 15
 21962                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21963  013198  EE20 F004          	lfsr	2,4
 21964  01319C  503B               	movf	CANreceiveMessage@msg,w,c
 21965  01319E  26D9               	addwf	fsr2l,f,c
 21966  0131A0  503C               	movf	CANreceiveMessage@msg+1,w,c
 21967  0131A2  22DA               	addwfc	fsr2h,f,c
 21968  0131A4  CF66 FFDF          	movff	3942,indf2	;volatile
 21969                           
 21970                           ; BSR set to: 15
 21971                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21972  0131A8  EE20 F005          	lfsr	2,5
 21973  0131AC  503B               	movf	CANreceiveMessage@msg,w,c
 21974  0131AE  26D9               	addwf	fsr2l,f,c
 21975  0131B0  503C               	movf	CANreceiveMessage@msg+1,w,c
 21976  0131B2  22DA               	addwfc	fsr2h,f,c
 21977  0131B4  CF67 FFDF          	movff	3943,indf2	;volatile
 21978                           
 21979                           ; BSR set to: 15
 21980                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21981  0131B8  EE20 F006          	lfsr	2,6
 21982  0131BC  503B               	movf	CANreceiveMessage@msg,w,c
 21983  0131BE  26D9               	addwf	fsr2l,f,c
 21984  0131C0  503C               	movf	CANreceiveMessage@msg+1,w,c
 21985  0131C2  22DA               	addwfc	fsr2h,f,c
 21986  0131C4  CF68 FFDF          	movff	3944,indf2	;volatile
 21987                           
 21988                           ; BSR set to: 15
 21989                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21990  0131C8  EE20 F007          	lfsr	2,7
 21991  0131CC  503B               	movf	CANreceiveMessage@msg,w,c
 21992  0131CE  26D9               	addwf	fsr2l,f,c
 21993  0131D0  503C               	movf	CANreceiveMessage@msg+1,w,c
 21994  0131D2  22DA               	addwfc	fsr2h,f,c
 21995  0131D4  CF69 FFDF          	movff	3945,indf2	;volatile
 21996                           
 21997                           ; BSR set to: 15
 21998                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21999  0131D8  EE20 F008          	lfsr	2,8
 22000  0131DC  503B               	movf	CANreceiveMessage@msg,w,c
 22001  0131DE  26D9               	addwf	fsr2l,f,c
 22002  0131E0  503C               	movf	CANreceiveMessage@msg+1,w,c
 22003  0131E2  22DA               	addwfc	fsr2h,f,c
 22004  0131E4  CF6A FFDF          	movff	3946,indf2	;volatile
 22005                           
 22006                           ; BSR set to: 15
 22007                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 22008  0131E8  EE20 F009          	lfsr	2,9
 22009  0131EC  503B               	movf	CANreceiveMessage@msg,w,c
 22010  0131EE  26D9               	addwf	fsr2l,f,c
 22011  0131F0  503C               	movf	CANreceiveMessage@msg+1,w,c
 22012  0131F2  22DA               	addwfc	fsr2h,f,c
 22013  0131F4  CF6B FFDF          	movff	3947,indf2	;volatile
 22014                           
 22015                           ; BSR set to: 15
 22016                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 22017  0131F8  EE20 F00A          	lfsr	2,10
 22018  0131FC  503B               	movf	CANreceiveMessage@msg,w,c
 22019  0131FE  26D9               	addwf	fsr2l,f,c
 22020  013200  503C               	movf	CANreceiveMessage@msg+1,w,c
 22021  013202  22DA               	addwfc	fsr2h,f,c
 22022  013204  CF6C FFDF          	movff	3948,indf2	;volatile
 22023                           
 22024                           ; BSR set to: 15
 22025                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 22026  013208  EE20 F00B          	lfsr	2,11
 22027  01320C  503B               	movf	CANreceiveMessage@msg,w,c
 22028  01320E  26D9               	addwf	fsr2l,f,c
 22029  013210  503C               	movf	CANreceiveMessage@msg+1,w,c
 22030  013212  22DA               	addwfc	fsr2h,f,c
 22031  013214  CF6D FFDF          	movff	3949,indf2	;volatile
 22032                           
 22033                           ; BSR set to: 15
 22034                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 22035  013218  EE20 F00E          	lfsr	2,14
 22036  01321C  503B               	movf	CANreceiveMessage@msg,w,c
 22037  01321E  26D9               	addwf	fsr2l,f,c
 22038  013220  503C               	movf	CANreceiveMessage@msg+1,w,c
 22039  013222  22DA               	addwfc	fsr2h,f,c
 22040  013224  AC65               	btfss	3941,6,c	;volatile
 22041  013226  D002               	goto	i2u1223_40
 22042  013228  0E01               	movlw	1
 22043  01322A  D001               	goto	i2u1223_46
 22044  01322C                     i2u1223_40:
 22045  01322C  0E00               	movlw	0
 22046  01322E                     i2u1223_46:
 22047  01322E  6EDF               	movwf	indf2,c
 22048                           
 22049                           ; BSR set to: 15
 22050                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 22051  013230  EE20 F00D          	lfsr	2,13
 22052  013234  503B               	movf	CANreceiveMessage@msg,w,c
 22053  013236  26D9               	addwf	fsr2l,f,c
 22054  013238  503C               	movf	CANreceiveMessage@msg+1,w,c
 22055  01323A  22DA               	addwfc	fsr2h,f,c
 22056  01323C  5065               	movf	3941,w,c	;volatile
 22057  01323E  0B0F               	andlw	15
 22058  013240  6EDF               	movwf	indf2,c
 22059                           
 22060                           ; BSR set to: 15
 22061                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 22062  013242  EE20 F00C          	lfsr	2,12
 22063  013246  503B               	movf	CANreceiveMessage@msg,w,c
 22064  013248  26D9               	addwf	fsr2l,f,c
 22065  01324A  503C               	movf	CANreceiveMessage@msg+1,w,c
 22066  01324C  22DA               	addwfc	fsr2h,f,c
 22067  01324E  A662               	btfss	3938,3,c	;volatile
 22068  013250  D002               	goto	i2u1224_40
 22069  013252  0E01               	movlw	1
 22070  013254  D001               	goto	i2u1224_46
 22071  013256                     i2u1224_40:
 22072  013256  0E00               	movlw	0
 22073  013258                     i2u1224_46:
 22074  013258  6EDF               	movwf	indf2,c
 22075                           
 22076                           ; BSR set to: 15
 22077                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 22078  01325A  B662               	btfsc	3938,3,c	;volatile
 22079  01325C  D043               	goto	i2l9186
 22080                           
 22081                           ; BSR set to: 15
 22082                           ;inc\CANlib.h: 606: {
 22083                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 22084  01325E  CF61 F03D          	movff	3937,??_CANreceiveMessage	;volatile
 22085  013262  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22086  013264  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22087  013266  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22088  013268  0E03               	movlw	3
 22089  01326A                     i2u1226_45:
 22090  01326A  90D8               	bcf	status,0,c
 22091  01326C  363D               	rlcf	??_CANreceiveMessage,f,c
 22092  01326E  363E               	rlcf	??_CANreceiveMessage+1,f,c
 22093  013270  363F               	rlcf	??_CANreceiveMessage+2,f,c
 22094  013272  3640               	rlcf	??_CANreceiveMessage+3,f,c
 22095  013274  2EE8               	decfsz	wreg,f,c
 22096  013276  D7F9               	goto	i2u1226_45
 22097  013278  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22098  01327C  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22099  013280  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 22100  013284  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22101  013288  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22102  01328C  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22103                           
 22104                           ; BSR set to: 15
 22105                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 22106  013290  3862               	swapf	3938,w,c	;volatile
 22107  013292  42E8               	rrncf	wreg,f,c
 22108  013294  0B07               	andlw	7
 22109  013296  0B07               	andlw	7
 22110  013298  6E46               	movwf	CANreceiveMessage@tamp,c
 22111                           
 22112                           ; BSR set to: 15
 22113                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 22114  01329A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22115  01329E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22116  0132A2  CFDE F03D          	movff	postinc2,??_CANreceiveMessage
 22117  0132A6  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+1
 22118  0132AA  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+2
 22119  0132AE  CFDE F040          	movff	postinc2,??_CANreceiveMessage+3
 22120  0132B2  5046               	movf	CANreceiveMessage@tamp,w,c
 22121  0132B4  243D               	addwf	??_CANreceiveMessage,w,c
 22122  0132B6  6E41               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 22123  0132B8  0E00               	movlw	0
 22124  0132BA  203E               	addwfc	??_CANreceiveMessage+1,w,c
 22125  0132BC  6E42               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 22126  0132BE  0E00               	movlw	0
 22127  0132C0  203F               	addwfc	??_CANreceiveMessage+2,w,c
 22128  0132C2  6E43               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 22129  0132C4  0E00               	movlw	0
 22130  0132C6  2040               	addwfc	??_CANreceiveMessage+3,w,c
 22131  0132C8  6E44               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 22132  0132CA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22133  0132CE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22134  0132D2  C041  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 22135  0132D6  C042  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 22136  0132DA  C043  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 22137  0132DE  C044  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 22138                           
 22139                           ;inc\CANlib.h: 610: }
 22140  0132E2  D088               	goto	i2l9212
 22141  0132E4                     i2l9186:
 22142                           
 22143                           ; BSR set to: 15
 22144                           ;inc\CANlib.h: 611: else
 22145                           ;inc\CANlib.h: 612: {
 22146                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 22147  0132E4  CF64 F03D          	movff	3940,??_CANreceiveMessage	;volatile
 22148  0132E8  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22149  0132EA  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22150  0132EC  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22151  0132EE  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22152  0132F2  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22153  0132F6  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 22154  0132FA  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22155  0132FE  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22156  013302  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22157                           
 22158                           ; BSR set to: 15
 22159                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 22160  013306  CF63 F03D          	movff	3939,??_CANreceiveMessage	;volatile
 22161  01330A  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22162  01330C  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22163  01330E  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22164  013310  C03F  F040         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 22165  013314  C03E  F03F         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 22166  013318  C03D  F03E         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 22167  01331C  6A3D               	clrf	??_CANreceiveMessage,c
 22168  01331E  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22169  013322  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22170  013326  503D               	movf	??_CANreceiveMessage,w,c
 22171  013328  26DE               	addwf	postinc2,f,c
 22172  01332A  503E               	movf	??_CANreceiveMessage+1,w,c
 22173  01332C  22DE               	addwfc	postinc2,f,c
 22174  01332E  503F               	movf	??_CANreceiveMessage+2,w,c
 22175  013330  22DE               	addwfc	postinc2,f,c
 22176  013332  5040               	movf	??_CANreceiveMessage+3,w,c
 22177  013334  22DE               	addwfc	postinc2,f,c
 22178                           
 22179                           ; BSR set to: 15
 22180                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 22181  013336  A062               	btfss	3938,0,c	;volatile
 22182  013338  D00C               	goto	i2l9194
 22183                           
 22184                           ; BSR set to: 15
 22185                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 22186  01333A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22187  01333E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22188  013342  0E00               	movlw	0
 22189  013344  12DE               	iorwf	postinc2,f,c
 22190  013346  0E00               	movlw	0
 22191  013348  12DE               	iorwf	postinc2,f,c
 22192  01334A  0E01               	movlw	1
 22193  01334C  12DE               	iorwf	postinc2,f,c
 22194  01334E  0E00               	movlw	0
 22195  013350  12DE               	iorwf	postinc2,f,c
 22196  013352                     i2l9194:
 22197                           
 22198                           ; BSR set to: 15
 22199                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 22200  013352  A262               	btfss	3938,1,c	;volatile
 22201  013354  D00C               	goto	i2l9198
 22202                           
 22203                           ; BSR set to: 15
 22204                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 22205  013356  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22206  01335A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22207  01335E  0E00               	movlw	0
 22208  013360  12DE               	iorwf	postinc2,f,c
 22209  013362  0E00               	movlw	0
 22210  013364  12DE               	iorwf	postinc2,f,c
 22211  013366  0E02               	movlw	2
 22212  013368  12DE               	iorwf	postinc2,f,c
 22213  01336A  0E00               	movlw	0
 22214  01336C  12DE               	iorwf	postinc2,f,c
 22215  01336E                     i2l9198:
 22216                           
 22217                           ; BSR set to: 15
 22218                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 22219  01336E  AA62               	btfss	3938,5,c	;volatile
 22220  013370  D00C               	goto	i2l9202
 22221                           
 22222                           ; BSR set to: 15
 22223                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 22224  013372  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22225  013376  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22226  01337A  0E00               	movlw	0
 22227  01337C  12DE               	iorwf	postinc2,f,c
 22228  01337E  0E00               	movlw	0
 22229  013380  12DE               	iorwf	postinc2,f,c
 22230  013382  0E04               	movlw	4
 22231  013384  12DE               	iorwf	postinc2,f,c
 22232  013386  0E00               	movlw	0
 22233  013388  12DE               	iorwf	postinc2,f,c
 22234  01338A                     i2l9202:
 22235                           
 22236                           ; BSR set to: 15
 22237                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 22238  01338A  AC62               	btfss	3938,6,c	;volatile
 22239  01338C  D00C               	goto	i2l9206
 22240                           
 22241                           ; BSR set to: 15
 22242                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 22243  01338E  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22244  013392  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22245  013396  0E00               	movlw	0
 22246  013398  12DE               	iorwf	postinc2,f,c
 22247  01339A  0E00               	movlw	0
 22248  01339C  12DE               	iorwf	postinc2,f,c
 22249  01339E  0E08               	movlw	8
 22250  0133A0  12DE               	iorwf	postinc2,f,c
 22251  0133A2  0E00               	movlw	0
 22252  0133A4  12DE               	iorwf	postinc2,f,c
 22253  0133A6                     i2l9206:
 22254                           
 22255                           ; BSR set to: 15
 22256                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 22257  0133A6  AE62               	btfss	3938,7,c	;volatile
 22258  0133A8  D00C               	goto	i2l9210
 22259                           
 22260                           ; BSR set to: 15
 22261                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 22262  0133AA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22263  0133AE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22264  0133B2  0E00               	movlw	0
 22265  0133B4  12DE               	iorwf	postinc2,f,c
 22266  0133B6  0E00               	movlw	0
 22267  0133B8  12DE               	iorwf	postinc2,f,c
 22268  0133BA  0E10               	movlw	16
 22269  0133BC  12DE               	iorwf	postinc2,f,c
 22270  0133BE  0E00               	movlw	0
 22271  0133C0  12DE               	iorwf	postinc2,f,c
 22272  0133C2                     i2l9210:
 22273                           
 22274                           ; BSR set to: 15
 22275                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 22276  0133C2  CF61 F03D          	movff	3937,??_CANreceiveMessage	;volatile
 22277  0133C6  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22278  0133C8  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22279  0133CA  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22280  0133CC  0E15               	movlw	21
 22281  0133CE                     i2u1232_45:
 22282  0133CE  90D8               	bcf	status,0,c
 22283  0133D0  363D               	rlcf	??_CANreceiveMessage,f,c
 22284  0133D2  363E               	rlcf	??_CANreceiveMessage+1,f,c
 22285  0133D4  363F               	rlcf	??_CANreceiveMessage+2,f,c
 22286  0133D6  3640               	rlcf	??_CANreceiveMessage+3,f,c
 22287  0133D8  2EE8               	decfsz	wreg,f,c
 22288  0133DA  D7F9               	goto	i2u1232_45
 22289  0133DC  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22290  0133E0  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22291  0133E4  503D               	movf	??_CANreceiveMessage,w,c
 22292  0133E6  12DE               	iorwf	postinc2,f,c
 22293  0133E8  503E               	movf	??_CANreceiveMessage+1,w,c
 22294  0133EA  12DE               	iorwf	postinc2,f,c
 22295  0133EC  503F               	movf	??_CANreceiveMessage+2,w,c
 22296  0133EE  12DE               	iorwf	postinc2,f,c
 22297  0133F0  5040               	movf	??_CANreceiveMessage+3,w,c
 22298  0133F2  12DE               	iorwf	postinc2,f,c
 22299  0133F4                     i2l9212:
 22300                           
 22301                           ; BSR set to: 15
 22302                           ;inc\CANlib.h: 629: }
 22303                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 22304  0133F4  9E60               	bcf	3936,7,c	;volatile
 22305                           
 22306                           ; BSR set to: 15
 22307                           ;inc\CANlib.h: 632: return (error);
 22308                           ;	Return value of _CANreceiveMessage is never used
 22309  0133F6  0012               	return	
 22310  0133F8                     __end_of_CANreceiveMessage:
 22311                           	opt stack 0
 22312                           pclatu	equ	0xFFB
 22313                           pclath	equ	0xFFA
 22314                           tblptru	equ	0xFF8
 22315                           tblptrh	equ	0xFF7
 22316                           tblptrl	equ	0xFF6
 22317                           tablat	equ	0xFF5
 22318                           prodh	equ	0xFF4
 22319                           prodl	equ	0xFF3
 22320                           intcon	equ	0xFF2
 22321                           postinc0	equ	0xFEE
 22322                           fsr0h	equ	0xFEA
 22323                           fsr0l	equ	0xFE9
 22324                           wreg	equ	0xFE8
 22325                           indf1	equ	0xFE7
 22326                           plusw1	equ	0xFE3
 22327                           fsr1h	equ	0xFE2
 22328                           fsr1l	equ	0xFE1
 22329                           bsr	equ	0xFE0
 22330                           indf2	equ	0xFDF
 22331                           postinc2	equ	0xFDE
 22332                           postdec2	equ	0xFDD
 22333                           plusw2	equ	0xFDB
 22334                           fsr2h	equ	0xFDA
 22335                           fsr2l	equ	0xFD9
 22336                           status	equ	0xFD8
 22337                           
 22338 ;; *************** function _CANisRxReady *****************
 22339 ;; Defined at:
 22340 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 22341 ;; Parameters:    Size  Location     Type
 22342 ;;		None
 22343 ;; Auto vars:     Size  Location     Type
 22344 ;;		None
 22345 ;; Return value:  Size  Location     Type
 22346 ;;                  1    wreg      unsigned char 
 22347 ;; Registers used:
 22348 ;;		wreg, status,2
 22349 ;; Tracked objects:
 22350 ;;		On entry : 0/0
 22351 ;;		On exit  : 0/0
 22352 ;;		Unchanged: 0/0
 22353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22358 ;;Total ram usage:        1 bytes
 22359 ;; Hardware stack levels used:    1
 22360 ;; This function calls:
 22361 ;;		Nothing
 22362 ;; This function is called by:
 22363 ;;		_ISR_alta
 22364 ;; This function uses a non-reentrant model
 22365 ;;
 22366                           
 22367                           	psect	text62
 22368  0165FA                     __ptext62:
 22369                           	opt stack 0
 22370  0165FA                     _CANisRxReady:
 22371                           	opt stack 20
 22372                           
 22373                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 22374                           
 22375                           ; BSR set to: 15
 22376                           ;incstack = 0
 22377  0165FA  0E01               	movlw	1
 22378  0165FC  6E3B               	movwf	_CANisRxReady$3257,c
 22379  0165FE  BE60               	btfsc	3936,7,c	;volatile
 22380  016600  D005               	goto	i2l583
 22381  016602  010F               	movlb	15	; () banked
 22382  016604  BF50               	btfsc	80,7,b	;volatile
 22383  016606  D002               	goto	i2l583
 22384                           
 22385                           ; BSR set to: 15
 22386  016608  0E00               	movlw	0
 22387  01660A  6E3B               	movwf	_CANisRxReady$3257,c
 22388  01660C                     i2l583:
 22389  01660C  503B               	movf	_CANisRxReady$3257,w,c
 22390  01660E  0012               	return	
 22391  016610                     __end_of_CANisRxReady:
 22392                           	opt stack 0
 22393                           pclatu	equ	0xFFB
 22394                           pclath	equ	0xFFA
 22395                           tblptru	equ	0xFF8
 22396                           tblptrh	equ	0xFF7
 22397                           tblptrl	equ	0xFF6
 22398                           tablat	equ	0xFF5
 22399                           prodh	equ	0xFF4
 22400                           prodl	equ	0xFF3
 22401                           intcon	equ	0xFF2
 22402                           postinc0	equ	0xFEE
 22403                           fsr0h	equ	0xFEA
 22404                           fsr0l	equ	0xFE9
 22405                           wreg	equ	0xFE8
 22406                           indf1	equ	0xFE7
 22407                           plusw1	equ	0xFE3
 22408                           fsr1h	equ	0xFE2
 22409                           fsr1l	equ	0xFE1
 22410                           bsr	equ	0xFE0
 22411                           indf2	equ	0xFDF
 22412                           postinc2	equ	0xFDE
 22413                           postdec2	equ	0xFDD
 22414                           plusw2	equ	0xFDB
 22415                           fsr2h	equ	0xFDA
 22416                           fsr2l	equ	0xFD9
 22417                           status	equ	0xFD8
 22418                           pclatu	equ	0xFFB
 22419                           pclath	equ	0xFFA
 22420                           tblptru	equ	0xFF8
 22421                           tblptrh	equ	0xFF7
 22422                           tblptrl	equ	0xFF6
 22423                           tablat	equ	0xFF5
 22424                           prodh	equ	0xFF4
 22425                           prodl	equ	0xFF3
 22426                           intcon	equ	0xFF2
 22427                           postinc0	equ	0xFEE
 22428                           fsr0h	equ	0xFEA
 22429                           fsr0l	equ	0xFE9
 22430                           wreg	equ	0xFE8
 22431                           indf1	equ	0xFE7
 22432                           plusw1	equ	0xFE3
 22433                           fsr1h	equ	0xFE2
 22434                           fsr1l	equ	0xFE1
 22435                           bsr	equ	0xFE0
 22436                           indf2	equ	0xFDF
 22437                           postinc2	equ	0xFDE
 22438                           postdec2	equ	0xFDD
 22439                           plusw2	equ	0xFDB
 22440                           fsr2h	equ	0xFDA
 22441                           fsr2l	equ	0xFD9
 22442                           status	equ	0xFD8
 22443                           
 22444                           	psect	rparam
 22445  0000                     pclatu	equ	0xFFB
 22446                           pclath	equ	0xFFA
 22447                           tblptru	equ	0xFF8
 22448                           tblptrh	equ	0xFF7
 22449                           tblptrl	equ	0xFF6
 22450                           tablat	equ	0xFF5
 22451                           prodh	equ	0xFF4
 22452                           prodl	equ	0xFF3
 22453                           intcon	equ	0xFF2
 22454                           postinc0	equ	0xFEE
 22455                           fsr0h	equ	0xFEA
 22456                           fsr0l	equ	0xFE9
 22457                           wreg	equ	0xFE8
 22458                           indf1	equ	0xFE7
 22459                           plusw1	equ	0xFE3
 22460                           fsr1h	equ	0xFE2
 22461                           fsr1l	equ	0xFE1
 22462                           bsr	equ	0xFE0
 22463                           indf2	equ	0xFDF
 22464                           postinc2	equ	0xFDE
 22465                           postdec2	equ	0xFDD
 22466                           plusw2	equ	0xFDB
 22467                           fsr2h	equ	0xFDA
 22468                           fsr2l	equ	0xFD9
 22469                           status	equ	0xFD8
 22470                           
 22471                           	psect	temp
 22472  00004E                     btemp:
 22473                           	opt stack 0
 22474  00004E                     	ds	1
 22475  0000                     int$flags	set	btemp
 22476                           pclatu	equ	0xFFB
 22477                           pclath	equ	0xFFA
 22478                           tblptru	equ	0xFF8
 22479                           tblptrh	equ	0xFF7
 22480                           tblptrl	equ	0xFF6
 22481                           tablat	equ	0xFF5
 22482                           prodh	equ	0xFF4
 22483                           prodl	equ	0xFF3
 22484                           intcon	equ	0xFF2
 22485                           postinc0	equ	0xFEE
 22486                           fsr0h	equ	0xFEA
 22487                           fsr0l	equ	0xFE9
 22488                           wreg	equ	0xFE8
 22489                           indf1	equ	0xFE7
 22490                           plusw1	equ	0xFE3
 22491                           fsr1h	equ	0xFE2
 22492                           fsr1l	equ	0xFE1
 22493                           bsr	equ	0xFE0
 22494                           indf2	equ	0xFDF
 22495                           postinc2	equ	0xFDE
 22496                           postdec2	equ	0xFDD
 22497                           plusw2	equ	0xFDB
 22498                           fsr2h	equ	0xFDA
 22499                           fsr2l	equ	0xFD9
 22500                           status	equ	0xFD8


Data Sizes:
    Strings     506
    Constant    144
    Data        1
    BSS         152
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      77
    BANK0           160    107     142
    BANK1           256     35     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[21]), STR_36(CODE[21]), STR_35(CODE[21]), STR_34(CODE[21]), 
		 -> STR_33(CODE[21]), STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), 
		 -> STR_29(CODE[21]), STR_28(CODE[21]), STR_27(CODE[21]), STR_26(CODE[21]), 
		 -> STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), 
		 -> STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[21]), STR_14(CODE[5]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[21]), STR_10(CODE[7]), 
		 -> STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), STR_6(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  555050
                                             27 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___awdiv
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             31 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57524
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57524
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  145154
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41470
                                             99 BANK0      8     0      8
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             56 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             56 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             31 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2139
                                             23 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             17 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             17 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             17 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             17 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             89 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             89 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             69 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             56 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             31 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             41 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             24 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             32 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             29 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57524
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   57524
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57524
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   12137
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             29 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             31 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             29 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             29 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             25 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             23 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4363
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4339
                                             17 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    4995
                                              0 BANK0     17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1594
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awdiv
     ___awmod (ARG)
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      70       7       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      8E       5       88.8%
BITCOMRAM           5E      0       3       0        3.2%
COMRAM              5E     21      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14B      20        0.0%
DATA                 0      0     14B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jun 02 17:37:06 2016

                     ___fldiv@aexp 0097                       ___fldiv@bexp 0096  
                                _x 026C                                  _y 026D  
                                _z 026E          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 002A  
                     ___fldiv@sign 008B                       ___awdiv@sign 007C  
                               _id 000C                                 bsr 000FE0  
              ___wmul@multiplicand 0073                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       ?_LCD_Parking 002A  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                      _row_refresh 0265                                l400 20BE  
                              l401 1E50                                l410 200A  
                              l402 1E54                                l411 200E  
                              l403 1F4C                                l420 2174  
                              l412 201A                                l404 1EDC  
                              l500 062A                                l421 217E  
                              l405 1EE6                                l501 062E  
                              l406 1EF0                                l510 073A  
                              l502 063A                                l415 20D4  
                              l407 1EFA                                l511 0746  
                              l503 063E                                l424 228E  
                              l416 20D8                                l520 0852  
                              l512 074A                                l504 064A  
                              l425 2292                                l417 21D0  
                              l521 0856                                l513 0756  
                              l426 229E                                l418 2160  
                              l530 0962                                l522 0862  
                              l514 075A                                l419 216A  
                              l531 096E                                l523 0866  
                              l515 0766                                l507 0726  
                              l540 0A7A                                l532 0972  
                              l524 0872                                l508 072A  
                              l460 4330                                l380 4E42  
                              l541 0A7E                                l533 097E  
                              l525 0876                                l509 0736  
                              l461 4334                                l381 4E4C  
                              l390 1C62                                l542 0A8A  
                              l534 0982                                l526 0882  
                              l518 0842                                l470 443C  
                              l462 4340                                l454 4300  
                              l391 1C6C                                l543 0A8E  
                              l535 098E                                l519 0846  
                              l471 4448                                l455 4304  
                              l392 1C76                                l544 0A9A  
                              l536 0992                                l472 444C  
                              l456 4310                                l385 1E3A  
                              l545 0A9E                                l537 099E  
                              l529 095E                                l473 4458  
                              l465 4418                                l457 4314  
                              l386 1BCC                                l546 0AAA  
                              l490 0514                                l466 441C  
                              l458 4320                                l395 1D86  
                              l387 1BD0                                l547 0AAE  
                              l491 0520                                l467 4428  
                              l459 4324                                l396 1D8A  
                              l388 1CC8                                l548 0ABA  
                              l492 0524                                l468 442C  
                              l397 1D96                                l389 1C58  
                              l493 0530                                l485 04F0  
                              l469 4438                                l486 04F4  
                              l591 63AC                                l487 0500  
                              l823 1518                                l496 060A  
                              l488 0504                                l840 1696  
                              l832 15F0                                l497 060E  
                              l489 0510                                l578 652E  
                              l498 061A                                l818 150C  
                              l499 061E                                l827 16C0  
                              l942 65B4                                l870 1A50  
                              l935 65D0                                l855 188A  
                              l928 657C                                l848 1882  
                              l858 197E                                l947 61E0  
                              l868 1A54                                l949 61E2  
                              l897 4B64               ??_PWR_Button_Polling 0071  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007D                                _dir 00E8  
                              _msg 010A                                _str 0119  
                     ___awmod@sign 0076                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 008C  
                     ___flmul@bexp 0091                       ___flmul@sign 008B  
                     ___flmul@temp 0096                       ___flmul@prod 0092  
                  __end_of_LCD_Gap 60A6                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 616E             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C2                       __CFG_WDT$OFF 000000  
                             l1050 10FA                               l1521 5EFE  
                             l1442 5A76                               l1531 61C6  
                             l1275 55B0                               l1372 51D4  
                             l1621 3F1C                               l1285 53EA  
                             l1373 5218                               l1618 3F74  
                             l1562 35D8                               l1627 3FAC  
                             l1563 35CC                               l1379 5298  
                             l1564 3598                               l1468 5B4E  
                             l1629 401A                               l1478 5DE8  
                             l1670 4C02                               l1655 3BF0  
                             l1648 3954                               l1665 3D02  
                             l1657 3C5E                               l1579 374C  
                             l1588 37E0                               l1684 4D0A  
                             l1685 4D22                               l1677 4CAE  
                             l6310 1D9A                               l5430 4274  
                             l5414 41BE                               l7200 5F66  
                             l6304 1D7A                               l5512 00BE  
                             l6240 4E50                               l8010 343A  
                             l5602 045E                               l5530 0176  
                             l8004 3416                               l6244 4E58  
                             l4902 5EAE                               l5366 59EE  
                             l8022 3470                               l8014 3444  
                             l5630 0534                               l5462 438A  
                             l6246 4E9C                               l6238 4E3A  
                             l6360 1F04                               l4904 5EBA  
                             l5376 5A30                               l8112 363A  
                             l8104 35FC                               l9000 1004  
                             l5800 0ABE                               l5704 07B0  
                             l5456 4344                               l7170 5BE0  
                             l4914 5EF0                               l4906 5EC0  
                             l4930 61B8                               l4922 6182  
                             l8114 3640                               l8122 365C  
                             l8034 34A8                               l9010 10AE  
                             l6436 2188                               l6380 1FFE  
                             l6284 1C80                               l7156 5B60  
                             l4924 618E                               l8140 377E  
                             l8132 372C                               l8028 3484  
                             l8212 38E2                               l5396 65EC  
                             l5732 0886                               l5636 057A  
                             l5548 0230                               l6462 22A2  
                             l7166 5BA8                               l4926 6194  
                             l8150 37A0                               l8118 364A  
                             l8046 34DC                               l8038 34B2  
                             l8230 393C                               l8214 38E8  
                             l8206 38BE                               l9030 112E  
                             l9022 10FE                               l5670 0694  
                             l5566 02EA                               l6456 2282  
                             l7176 61D6                               l6800 3D92  
                             l8312 3CD4                               l8240 397C  
                             l8232 3942                               l8224 3918  
                             l8216 38FA                               l9016 10C8  
                             l9008 10A0                               l5664 064E  
                             l5584 03A4                               l5488 445C  
                             l6386 201E                               l6810 3DC2  
                             l8146 3794                               l8090 35B2  
                             l8402 5D42                               l8322 3D22  
                             l8314 3CE8                               l9034 1190  
                             l9018 10DC                               l5738 08CC  
                             l8420 5842                               l8412 6230  
                             l5844 62E2                               l6900 4098  
                             l6820 3DF0                               l8180 3848  
                             l8156 37B4                               l8076 3518  
                             l8324 3D2C                               l8308 3CAE  
                             l8236 3968                               l9060 12E0  
                             l9052 12AC                               l9044 1284  
                             l5772 09E8                               l8422 5874  
                             l6910 40DE                               l6902 40AC  
                             l8190 387A                               l8166 37DA  
                             l8158 37BA                               l8094 35BC  
                             l8350 5978                               l8406 5D56  
                             l8510 64E0                               l9046 1292  
                             l9054 12BA                               l5766 09A2  
                             l8424 58A6                               l8416 6262  
                             l8432 64EC                               l6912 40E2  
                             l6904 40CE                               l6840 3E72  
                             l6832 3E44                               l6816 3DE6  
                             l8184 386A                               l8176 3836  
                             l8088 35AC                               l8520 5146  
                             l8352 5984                               l8344 595A  
                             l9072 1364                               l9064 1308  
                             l8426 58D8                               l6850 3EF0  
                             l8370 59DC                               l8362 59BA  
                             l8354 598A                               l8338 5944  
                             l8282 3BDA                               l9074 136A  
                             l5698 076A                               l8428 590A  
                             l8436 6500                               l8196 388E  
                             l8188 3876                               l8700 5804  
                             l8620 557A                               l8604 552E  
                             l8460 4742                               l8452 464A  
                             l9068 1338                               l9076 138C  
                             l6870 3F96                               l6790 3D64  
                             l8702 580E                               l8526 5180  
                             l8366 59C8                               l8390 5CFE  
                             l8382 5CDA                               l9334 49D6  
                             l6864 3F70                               l8640 52F8  
                             l8720 5AE8                               l8616 5566  
                             l8560 5262                               l8392 5D0A  
                             l8288 3C04                               l8480 2C34  
                             l8810 4FAA                               l6858 3F28  
                             l8706 582A                               l8626 5596  
                             l8394 5D10                               l8386 5CEA  
                             l8298 3C58                               l8474 2B62  
                             l9362 4AF2                               l8820 5042  
                             l6876 3FC0                               l6796 3D88  
                             l8644 5346                               l8716 5AD2  
                             l8740 5D92                               l8628 55A6  
                             l8556 524E                               l8492 2DE8  
                             l8484 2C66                               l8900 0BDA  
                             l9380 4B40                               l9372 4B12  
                             l8830 50FA                               l6886 4014  
                             l8654 5436                               l8662 63E0  
                             l8718 5AE2                               l8582 5486  
                             l8566 527E                               l8398 5D34  
                             l9382 4B52                               l8808 4FA2  
                             l6896 406A                               l8648 5398  
                             l8672 5756                               l8728 5B3C  
                             l8744 5DD6                               l8736 5D7C  
                             l8760 4C3A                               l8576 5460  
                             l8568 528E                               l8912 0C24  
                             l8904 0BE0                               l8826 5082  
                             l8738 5D8C                               l8762 4C42  
                             l8754 4C12                               l8498 2EBA  
                             l8922 0C76                               l8906 0C0A  
                             l9386 4B76                               l7964 639E  
                             l8692 57D8                               l8772 4CEC  
                             l8764 4C52                               l8596 54DA  
                             l9900 172E                               l9820 145C  
                             l8774 4CFC                               l8766 4C90  
                             l8950 0DB0                               l9902 1730  
                             l9830 1504                               l8688 57C4  
                             l8952 0DC6                               l9912 17EC  
                             l8794 642A                               l8698 57F4  
                             l8786 4D74                               l8962 0E6A  
                             l8954 0E02                               l8946 0D7E  
                             l8938 0CFA                               l8890 0B66  
                             l8882 0B30                               l9922 187A  
                             l9826 14F2                               l8980 0F7E  
                             l8956 0E18                               l8876 0B16  
                             l9916 1852                               l9836 1526  
                             l8798 6444                               l8982 0F84  
                             l8966 0E9C                               l8894 0BB0  
                             l9942 1982                               l9918 1858  
                             l9838 1532                               STR_1 FF7F  
                             l8976 0F06                               l8896 0BCA  
                             l9952 19B4                               l9848 1558  
                             l9856 1598                               STR_2 FF55  
                             STR_3 FE6E                               l8994 0FD0  
                             l9890 16EC                               l9866 15B2  
                             l9874 15F2                               l9786 13C8  
                             STR_4 FF7F                               STR_5 FFFA  
                             l9972 1A76                               l9964 19E4  
                             l9948 19A0                               l9956 19CA  
                             l9884 169A                               STR_6 FF6A  
                             STR_7 FFC8                               l8998 0FFC  
                             l9990 1B28                               l9958 19DA  
                             STR_8 FFA9                               STR_9 FFBA  
                             l9976 1A8A                               l9898 172C  
                             l9996 1B3A                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u6110 41F0                               u7000 0ADE  
                             u6200 4364                               u6115 41E4  
                             u7005 0AD2                               u6205 4358  
                             u6125 4250                               u6310 003A  
                             u6070 413A                               u6315 002E  
                             u6075 412E                               u6405 020C  
                             u6325 009A                               u6085 419A  
                             u6510 03DA                               u6430 0266  
                             u6350 00F2                               u6600 0554  
                             u6280 447C                               u9010 65DE  
                             u6515 03CE                               u6435 025A  
                             u6355 00E6                  _F2_Button_Polling 65AC  
                             u6605 0548                               u6525 043A  
                             u6445 02C6                               u6365 0152  
                             u6285 4470                               u6470 0320  
                             u6390 01AC                               u9025 65E0  
                             u9130 6204                               u6475 0314  
                             u6395 01A0                               u7700 1CA0  
                             u9060 65C2                               u6485 0380  
                             u7710 1CEC                               u9136 6206  
                             u6920 09C2                               u6840 08A6  
                             u6760 078A                               u6680 066E  
                             u7705 1C94                               u7715 1CE0  
                             u9075 65C4                               u7725 1D4C  
                             u6925 09B6                               u6845 089A  
                             u6765 077E                               u6685 0662  
                             u7830 1F24                               u7840 1F70  
                             u8640 407E                               u7835 1F18  
                             u7845 1F64                               u7855 1FD0  
                             u7960 21A8                               u7970 21F4  
                             u7965 219C                               u7975 21E8  
                             u8960 658A                               u7985 2254  
                             u8975 658C                __size_of_CANSetMask 039E  
                     ?_LCD_goto_xy 0080                               _data 0125  
                             _main 139A                               _itoa 62B8  
               ?_F2_Button_Polling 002A          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 004E                               _utoa 59E6  
               __size_of_LCD_Error 0064                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00C0                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 0090                 __size_of_LCD_clear 0032  
                     _sprintf$4273 014F                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010                ??_F2_Button_Polling 0071  
         __end_of_LCD_enable_pulse 6556                   _CANOperationMode 65E4  
                     _Can_Tx_Force 0259                   __end_of_LCD_Park 6042  
                  _space_available 0266            __size_of_LCD_initialize 016E  
                            l10002 1B4E                              l10020 1BAC  
                            l10012 1B68                              l10004 1B54  
                            l10018 1BA8         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C1                    __end_of___fladd 38A0  
                            ?_main 002A                    __end_of___fldiv 4106  
                            ?_itoa 0081                    __end_of___awdiv 59E6  
                  __end_of___flneg 63F2                              STR_10 FFE4  
                            STR_11 FE05                              STR_12 FFF0  
                            STR_20 FEEC                              STR_13 FFF5  
                            STR_21 FE98                              STR_30 FF40  
                            STR_22 FF40                              STR_14 FFEB  
                            STR_15 FF01                              STR_23 FED7  
                            STR_31 FEC2                              STR_16 FFD4  
                            STR_24 FEAD                              STR_32 FE44  
                            STR_17 FFDC                              STR_25 FE59  
                            STR_33 FE2F                              STR_34 FF40  
                            STR_26 FF40                              STR_18 FF40  
                            STR_35 FEC2                              STR_19 FF94  
                            STR_27 FF16                              STR_28 FF2B  
                            STR_36 FE1A                    __end_of___awmod 5D60  
                            STR_29 FF7F                              STR_37 FE83  
                  __end_of___flmul 3D46                    __end_of___flsub 62B8  
                  __end_of___fltol 583C                    __end_of___lldiv 5B60  
                            ?_utoa 0078                              u10405 6360  
                            u10406 6362                              u10415 636C  
                            u10416 636E                              u10520 3562  
                            u10425 6378                              u11241 5122  
                            u10426 637A                              u10530 357A  
                            u10540 357C                    ___awdiv@divisor 0079  
                            u11261 515C                    __end_of___llmod 5DFA  
                            u10395 6354                              u10396 6356  
                            u10900 3B7C                              u13220 1656  
                            u11701 4F56                              u11470 5776  
                            u13080 14C0                              u10905 3B70  
                            u13090 14D8                              u11475 576A  
                            u13420 1A48                              u13340 1876  
                            u13260 167A                              u13270 16A2  
                            u13096 14DA                              _T3CON 000FB1  
                            u13266 167C                              u10980 3CC2  
                            u13276 16A4                              u13470 1B02  
                            u13557 63A0                              u11990 10F2  
                  __end_of___lwdiv 5F08                    __end_of___lwmod 61D0  
                            i2l400 27A2                              i2l401 2586  
                            i2l410 26FE                              i2l402 258A  
                            i2l411 2702                              i2l403 265A  
                            i2l420 2838                              i2l412 270C  
                            i2l404 25F8                              i2l421 2840  
                            i2l405 2600                              i2l406 2608  
                            i1l814 0078                              i2l415 27B6  
                            i2l407 2610                              i2l432 3184  
                            i2l424 292E                              i2l416 27BA  
                            i2l425 2932                              i2l417 288A  
                            i2l426 293C                              i2l418 2828  
                            i2l419 2830                              i2l390 23D0  
                            i2l391 23D8                              i2l392 23E0  
                            i2l385 2572                              i2l386 2356  
                            i2l810 499A                              i2l395 24CE  
                            i2l387 235A                              i2l396 24D2  
                            i2l388 242A                              i2l397 24DC  
                            i2l389 23C8                              i2l583 660C  
                            i2l578 6570                    ___awdiv@counter 007B  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3257 003B                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A8                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0083  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                   __end_of_ISR_alta 49D6  
                   __CFG_EBTR5$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                            _check 00D3                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 65C8                    __end_of_dpowers FE05  
                            _scale 29D2                    __end_of_isdigit 64EA  
        __size_of_LCD_shift_cursor 004C                     __pbitbssCOMRAM 0258  
             __end_of_CANisRxReady 6610                              tablat 000FF5  
             __end_of_CANisTxReady 6534                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 0080  
                            utoa@v 007E                              status 000FD8  
                  __end_of_sprintf 139A                __size_of_LCD_cursor 0032  
                  __initialization 6300                       __end_of_main 1BB6  
                     __end_of_itoa 6300      __size_of_board_initialization 00A4  
                    _LCD_goto_line 583C                       __end_of_utoa 5AA4  
                ?_Joystick_Polling 002A                 ??_Joystick_Polling 0071  
                ?_LCD_write_string 0082                             ??_main 0168  
                           ??_itoa 0087                             ??_utoa 007E  
        __size_ofi2_CANsendMessage 0690                      __activetblptr 000003  
                __end_of_LCD_Error 610A                          ??_LCD_Gap 0084  
                        ??_LCD_End 0084                     _JoystickValues 00DF  
               ??_LCD_write_string 0084               __size_of__tdiv_to_l_ 019E  
                _CANisTxReady$3255 0071                  __end_of_LCD_clear 64C0  
            i2CANsendMessage@flags 0042             LCD_write_string@buffer 0082  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0071                             ?_scale 0098  
                           _ADRESH 000FC4                   ___awdiv@dividend 0077  
                           _CAN_Rx 5F08                             _CAN_Tx 5B60  
                  __CFG_BBSIZ$1024 000000                             i2l9210 33C2  
                           i2l9202 338A                             i2l9212 33F4  
                           i2l9140 3110                             i2l9132 30D4  
                           i2l9124 3064                             i2l9206 33A6  
                           i2l9150 317E                             i2l9144 312E  
                           i2l9136 30F2                             i2l9148 314C  
                           i2l9194 3352                             i2l9186 32E4  
                           i2l9610 2848                             i2l9198 336E  
                           i2l9630 2924                             i2l9534 2618  
                           i2l9560 2710                             i2l9704 481A  
                           i2l9554 26F4                             i2l9458 23E8  
                           i2l9722 4876                             i2l9714 4852  
                           i2l9636 2940                             i2l9484 24E0  
                           i2l9708 4824                             i2l9478 24C4  
                           i2l9750 4900                             i2l9760 493A  
                           i2l9736 48B6                             i2l9728 488C  
                           i2l9770 4968                             i2l9754 4916  
                           i2l9746 48E2                             i2l9690 47D2  
                           i2l9774 4996                             i2l9696 47F4  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0075                 CANsendMessage@tamp 007D  
                 __end_of___xxtofl 4D86                    _switch_position 00EC  
                 __end_of_delay_ms 63BA              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FDDD                         _MotoreFlag 025C  
                   ?_LCD_goto_line 002A                             ___flge 52AA  
                        ??___fladd 00AD                   _delay_set_quartz 6610  
                           ___wmul 63F2                          ??___fldiv 0087  
                        ??___awdiv 007B                          ??___flneg 009C  
                   __CFG_STVREN$ON 000000                          ??___awmod 0075  
                        ??___flmul 0087                          ??___flsub 00C1  
                        ??___fltol 00BD                          ??___lldiv 0079  
                        ??___llmod 0079                          ??___lwdiv 0075  
                     ??_CANSetMask 0076                          ??___lwmod 0075  
          __size_of_LCD_write_char 0096                             _fround 44A4  
   LCD_initialize@quartz_frequency 007F                             clear_0 6306  
                           clear_1 6312                             clear_2 6324  
                 ___awdiv@quotient 007D                    ___awmod@divisor 0073  
             __size_of_LCD_Handler 01E2                    ___awmod@counter 0075  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00CB  
                           itoa@cp 0087                          ??_isdigit 0071  
             __size_of_LCD_Parking 0064                       __mediumconst FD74  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8         __size_of_F2_Button_Polling 001C  
                        ??_sprintf 014D                       _CANSetFilter 0000  
                       ___flge@ff1 0071                         ___flge@ff2 0075  
                     ___xxtofl@arg 007B                       ___xxtofl@exp 007A  
                     ___xxtofl@val 0071                         __accesstop 0060  
          __end_of__initialization 633C                 __end_of_CANSetMask 44A4  
                        ?_LCD_Park 002A                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 025E                         ___flneg@f1 0098  
                 _LCD_send_command 6346                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008B                         ___fltol@f1 00B9  
             __size_of_LCD_goto_xy 001C                     __pcstackCOMRAM 002A  
                     __pidataBANK0 661A                          ?_ISR_alta 002A  
                     LCD_goto_xy@x 0081                       LCD_goto_xy@y 0080  
                    __end_of_scale 2EEC                     _LCD_initialize 55C2  
                _LCD_write_integer 4F4C                  _LCD_write_message 6428  
            CANSetFilter@numBuffer 007A                 ?_LCD_write_integer 0089  
           LCD_write_integer@index 0098                 ?_LCD_write_message 0082  
                       __div_to_l_ 543A                       ??_LCD_cursor 007E  
           LCD_write_integer@value 0089      LCD_write_integer@convertedInt 0092  
                _space_gap_reached 0267                      _newMessageCan 0261  
                     _actual_speed 00E1              __size_of_CANisRxReady 0016  
            __size_of_CANisTxReady 0024                ??_LCD_write_integer 008D  
                  __div_to_l_@exp1 007E                ??_LCD_write_message 0084  
                  __div_to_l_@cntr 007D                            ??_scale 009C  
                 _LCD_shift_cursor 6224                    __div_to_l_@quot 0079  
         __end_of_CANOperationMode 65FA                            ?_CAN_Rx 002A  
                          ?_CAN_Tx 002A                         __pbssBANK0 00CB  
                       __pbssBANK1 0100                         _data_brake 012D  
                       ??_LCD_Park 0084            __size_of_CANsendMessage 078C  
                       _data_speed 0135                      __div_to_l_@f1 0071  
                    __div_to_l_@f2 0075                    ??_LCD_goto_line 007D  
               __end_of_LCD_cursor 648E             __end_of_LCD_initialize 5730  
                          ?___flge 0071                            ?___wmul 0071  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 510C  
        __end_of_LCD_write_message 645C                  ?_LCD_enable_pulse 002A  
                          ?_fround 0098                       _CANisRxReady 65FA  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0079  
                     _CANisTxReady 6510                          ISR_alta@i 0070  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 2342  
      __size_of_PWR_Button_Polling 001C                            _LCD_Gap 6042  
                          _LCD_End 610A                          ?___xxtofl 0071  
          __size_ofi2_CANisTxReady 001E             __size_of_CANInitialize 01C6  
                 LCD_cursor@active 007E                          ?_delay_ms 0077  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0078  
                          _AbsFlag 0258                  _parking_message_E 0263  
                  __size_of_CAN_Rx 0072                    __size_of_CAN_Tx 00BA  
                __end_of__npowers_ FDA9                            __Hparam 0000  
                       _left_speed 0022                         _scale$4272 009C  
                          __Lparam 0000                   delay_ms@value_ms 0077  
                  ?_LCD_initialize 002A                    __size_of___flge 0190  
                          ___fladd 33F8                            ___fldiv 3D46  
                          ___awdiv 5928                            ___flneg 63BA  
                          ___awmod 5CBE                            ___flmul 38A0  
                          ___flsub 6270                            ___fltol 5730  
                          ___lldiv 5AA4                    __size_of___wmul 0036  
                   _LCD_write_char 5DFA                            ___llmod 5D60  
                          ___lwdiv 5E90                            ___lwmod 616E  
             CANInitialize@propSeg 0088                            __pcinit 6300  
                          _battery 0028                    __size_of_fround 02F6  
                          __ramtop 0D00                LCD_write_char@value 0081  
                          __ptext0 139A                            __ptext1 5C1A  
                          __ptext2 4D86                            __ptext3 4106  
                          __ptext4 0000                            __ptext5 65E4  
                          __ptext6 6574                            __ptext7 5F7A  
                          __ptext8 5FDE                            __ptext9 49D6  
                      ?__div_to_l_ 0071                   LCD_write_char@D0 0080  
                 LCD_write_char@D1 007F                   LCD_write_char@D2 007E  
                 LCD_write_char@D3 007D                          _F1_switch 025A  
                          _dpowers FDDD                          _F2_switch 025B  
                          _isdigit 64C0                         ??___xxtofl 0075  
                 ___awmod@dividend 0071                         ??_delay_ms 0079  
           CANreceiveMessage@error 0045       __end_of_board_initialization 5CBE  
        __size_of_Joystick_Polling 0054                          _LCD_Error 60A6  
         __end_of_delay_set_quartz 661A                            _sprintf 0B06  
                   __pintcode_body 479A                          _LCD_clear 648E  
             end_of_initialization 633C          __size_of_LCD_write_string 0026  
                          itoa@buf 0081                            itoa@val 0083  
                          int_func 479A                          i2u1212_40 2FA4  
                        i2u1300_40 48FA                          i2u1212_46 2FA6  
                        i2u1213_40 2FD2                          i2u1221_45 3158  
                        i2u1301_45 48FC                          i2u1213_46 2FD4  
                        i2u1223_40 322C                          i2u1215_45 2FE8  
                        i2u1223_46 322E                          i2u1224_40 3256  
                        i2u1232_45 33CE                          i2u1224_46 3258  
                        i2u1250_40 2406                          i2u1226_45 326A  
                        i2u1250_45 23FC                          i2u1251_40 244C  
                        i2u1251_45 2442                          i2u1252_45 2498  
                        i2u1263_40 2636                          i2u1263_45 262C  
                        i2u1264_40 267C                          i2u1264_45 2672  
                        i2u1265_45 26C8                          i2u1276_40 2866  
                        i2u1276_45 285C                          i2u1356_47 4962  
                        i2u1277_40 28AC                          i2u1277_45 28A2  
                        i2u1278_45 28F8                          i2u1289_40 47F2  
                    _CANInitialize 4D86                      _parking_error 0262  
                  ___lldiv@divisor 0075                 LCD_cursor@blinking 007D  
                    _parking_state 00EA                    ___lldiv@counter 007D  
           __end_of_LCD_write_char 5E90                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01C0         __size_of_LCD_write_message 0034  
                          utoa@buf 0078                     __tdiv_to_l_@f1 0071  
                   __tdiv_to_l_@f2 0075                            utoa@val 007A  
                       _wait_low_1 0269                         _wait_low_2 026A  
                       _wait_low_3 026B                          _ISR_bassa 0018  
                    ??__tdiv_to_l_ 0079            _steering_correction_dir 0268  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                   CANSetMask@mask 0071                          _PORTDbits 000F83  
                   CANSetMask@tamp 007B           __end_of_LCD_send_command 6380  
                   CANSetMask@type 0075                        ___fladd@grs 00B8  
                    ___xxtofl@sign 0079                        ___fldiv@grs 0092  
                      ___fldiv@rem 008C                  _F1_Button_Polling 65C8  
                       ?_LCD_Error 002A                         ?_LCD_clear 002A  
               ?_F1_Button_Polling 002A                     __end_of_CAN_Rx 5F7A  
                   __end_of_CAN_Tx 5C1A            _clock_counter_reference 00E3  
                      ___flmul@grs 008D                     _CANsendMessage 1BB6  
                 CANInitialize@BRP 0082                   CANInitialize@SJW 0081  
                   ?_CANInitialize 007F                ??_F1_Button_Polling 0071  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0100                    ?_LCD_write_char 002A  
                    ??_LCD_Handler 00CB           __end_of_LCD_shift_cursor 6270  
                   __end_of___flge 543A                         ?_ISR_bassa 002A  
                   __end_of___wmul 6428                  __size_of_ISR_alta 49CE  
                    ??_LCD_Parking 0084                  LCD_shift_cursor@i 007F  
                   __end_of_fround 479A                     i2_CANisTxReady 6556  
        __end_of_F1_Button_Polling 65E4                start_initialization 6300  
              __end_of__tdiv_to_l_ 52AA                CANSetMask@numBuffer 007A  
                    _data_speed_rx 0001             __end_of_CANsendMessage 2342  
                         ??_CAN_Rx 0071                           ??_CAN_Tx 0081  
                ?_CANOperationMode 002A                      _data_steering 013D  
                    ??_LCD_goto_xy 0081         i2CANsendMessage@dataLength 0041  
             i2CANsendMessage@data 003F                 ??_CANOperationMode 0071  
             i2CANsendMessage@tamp 0047                    ___llmod@divisor 0075  
         __end_ofi2_CANsendMessage 29D2         CANInitialize@FilterConfig1 0089  
       CANInitialize@FilterConfig2 008A                    ___llmod@counter 0079  
              _steering_correction 00EB                           ??___flge 0079  
             _board_initialization 5C1A                           ??___wmul 0075  
                      __pdataBANK0 00ED                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009C             __end_ofi2_CANisTxReady 6574  
                    sprintf@tmpval 015D                          ___fladd@a 00A9  
                        ___fladd@b 00A5             CANInitialize@phaseSeg1 007F  
           CANInitialize@phaseSeg2 0080                         fround@prec 00A4  
              __end_of_LCD_Handler 4BB8                           ?_LCD_Gap 002A  
                         ?_LCD_End 002A                          ___fldiv@a 0083  
                        ___fldiv@b 007F                          ___flmul@a 0083  
                        ___flmul@b 007F                        __pbssCOMRAM 0001  
                        ___flsub@a 00BD                          ___flsub@b 00B9  
                    __pcstackBANK0 0060                      __pcstackBANK1 014D  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 5FDE  
                      _BRGCON3bits 000F72                   _Joystick_Polling 61D0  
                      ??_LCD_Error 0084                  __size_of___xxtofl 01CE  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3856 0072  
       i2CANsendMessage@identifier 003B                  _park_assist_state 0145  
                __size_of_delay_ms 003A                        ??_LCD_clear 007D  
                  ?_CANsendMessage 0071            LCD_write_message@buffer 0082  
                 _LCD_write_string 64EA                    ??_CANInitialize 0084  
                      sprintf@flag 0155                        sprintf@fval 0163  
                      sprintf@prec 0161                   ??_LCD_initialize 007F  
               CANSetFilter@filter 0071          delay_set_quartz@frequency 0071  
                 ___lwdiv@dividend 0071                 LCD_send_command@D0 007B  
               LCD_send_command@D1 007A                 LCD_send_command@D2 0079  
               LCD_send_command@D3 007C                __end_of_LCD_goto_xy 65AC  
            __end_of_LCD_goto_line 5928              ?_board_initialization 002A  
                        __pintcode 0008                      __pmediumconst FD74  
                         ?___fladd 00A5                           ?___fldiv 007F  
                         ?___awdiv 0077                           ?___flneg 0098  
                         ?___awmod 0071                           ?___flmul 007F  
                         ?___flsub 00B9                           ?___fltol 00B9  
                         ?___lldiv 0071                           ?___llmod 0071  
                        __npowers_ FD75                           ?___lwdiv 0071  
                         ?___lwmod 0071                        ??_ISR_bassa 002A  
                      __pintcodelo 0018         __end_of_PWR_Button_Polling 6590  
                  ?i2_CANisTxReady 002A                        __tdiv_to_l_ 510C  
                     ??__div_to_l_ 0079                        _COMSTATbits 000F74  
                         ?_isdigit 002A         __size_of_F1_Button_Polling 001C  
                 ___lwdiv@quotient 0075                           ?_sprintf 00C3  
                   __size_of_scale 051A                  ?_delay_set_quartz 002A  
            CANreceiveMessage@tamp 0046                 ??_delay_set_quartz 0071  
                         _LCD_Park 5FDE                     ___wmul@product 0075  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _IPR2bits 000FA2  
     _delay_quartz_frequency_value 00ED                           _IPR3bits 000FA5  
                         _PIE2bits 000FA0                           _PIE3bits 000FA3  
             _collision_risk_value 00E7                 __end_of__div_to_l_ 55C2  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         _RXB1EIDH 000F53                          _pr_time_1 00D7  
                        _pr_time_2 00DB                           _RXB1EIDL 000F54  
                        _pr_time_3 0010                          _pr_time_4 0106  
                        _pr_time_5 0014                          _pr_time_6 0018  
                        _set_speed 00E5                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 49D6                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008C                 _parking_message_ID 00E9  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                      _LCD_Parking 5F7A                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0071                           _RTR_Flag 025D  
                ?_LCD_send_command 0079                   _actual_speed_kmh 0008  
                        _user_data 0026                   __size_of_LCD_Gap 0064  
                 __size_of_LCD_End 0064                 ??_LCD_send_command 007C  
                    ?_CANSetFilter 0071                         _CANCONbits 000F6F  
                      _LCD_goto_xy 6590                   ??_LCD_write_char 007D  
                LCD_goto_line@line 007D                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008B  
        _collision_sensor_distance 0020                           __Lrparam 0000  
                     _RXB1SIDLbits 000F52                   __size_of___fladd 04A8  
                       _CANSetMask 4106                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 0038  
                 __size_of___awmod 00A2                   __size_of___flmul 04A6  
                ?_LCD_shift_cursor 007D                   __size_of___flsub 0048  
                 __size_of___fltol 010C                   __size_of___lldiv 00BC  
                 __size_of___llmod 009A                   __size_of___lwdiv 0078  
                 __size_of___lwmod 0062                        _fround$4270 00A0  
                      _fround$4271 009C                 ??_LCD_shift_cursor 007E  
                       sprintf@exp 015B                         sprintf@val 0157  
                         ___xxtofl 4BB8                       _RXF0SIDLbits 000F01  
                 __size_of_isdigit 002A                           _delay_ms 6380  
                  ___lwdiv@divisor 0073                       _RXF1SIDLbits 000F05  
                  ___lwdiv@counter 0077                     ??_CANSetFilter 0076  
                 _LCD_enable_pulse 6534                           __ptext10 0B06  
                         __ptext11 29D2                           __ptext20 5D60  
                         __ptext12 64C0                           __ptext21 5AA4  
                         __ptext13 44A4                           __ptext30 59E6  
                         __ptext22 5730                           __ptext14 38A0  
                         __ptext31 616E                           __ptext23 6270  
                         __ptext15 5CBE                           __ptext40 5DFA  
                         __ptext32 5E90                           __ptext24 33F8  
                         __ptext16 5928                           __ptext41 55C2  
                         __ptext33 64EA                           __ptext25 63BA  
                         __ptext17 510C                           __ptext50 61D0  
                         __ptext42 6610                           __ptext34 6590  
                         __ptext26 52AA                           __ptext18 543A  
                         __ptext51 65AC                           __ptext43 645C  
                         __ptext35 6224                           __ptext27 3D46  
                         __ptext19 4BB8                           __ptext60 6556  
                         __ptext52 65C8                           __ptext44 648E  
                         __ptext36 6042                           __ptext28 4F4C  
                         __ptext61 2EEC                           __ptext53 5B60  
                         __ptext45 583C                           __ptext37 60A6  
                         __ptext29 62B8                           __ptext62 65FA  
                         __ptext54 1BB6                           __ptext46 6346  
                         __ptext38 610A                           __ptext55 6510  
                         __ptext47 6534                           __ptext39 6428  
                         __ptext56 5F08                           __ptext48 6380  
                         __ptext49 63F2                           __ptext59 2342  
                     _RXF2SIDLbits 000F09                           __powers_ FDA9  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 0894  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0077                      __size_of_main 081C  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                ?i2_CANsendMessage 003B               CANreceiveMessage@msg 003B  
            LCD_shift_cursor@shift 007E                i2_CANisTxReady$3255 003B  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 0072  
               ??i2_CANsendMessage 0043                       _TXB1SIDLbits 000F32  
         __end_of_Joystick_Polling 6224                       _TXB2SIDLbits 000F22  
                         int$flags 004E          __size_of_CANOperationMode 0016  
                    ?_CANisRxReady 002A                      ?_CANisTxReady 002A  
         __end_of_LCD_write_string 6510                        _RXB0DLCbits 000F65  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 645C  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 2EEC  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 0029                   ??_CANsendMessage 0079  
               ?_CANreceiveMessage 003B                           itoa@base 0085  
                         isdigit@c 0073                           scale@scl 00A0  
         CANsendMessage@identifier 0071                       _time_counter 001C  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0153                   __tdiv_to_l_@exp1 0081  
                        sprintf@sp 00C3                   __tdiv_to_l_@cntr 0080  
                 CANSetFilter@tamp 007B                   __tdiv_to_l_@quot 007C  
                 CANSetFilter@type 0075                ??_CANreceiveMessage 003D  
                 ___lwmod@dividend 0071                   ___lldiv@dividend 0071  
                      _TXB0DLCbits 000F45                        _right_speed 0024  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 0260  
                 ??i2_CANisTxReady 003B               CANOperationMode@mode 0071  
                   ??_CANisRxReady 003B                        ?_CANSetMask 0071  
                   ??_CANisTxReady 0071                       ?__tdiv_to_l_ 0071  
        __end_of_CANreceiveMessage 33F8                           utoa@base 007C  
                         sprintf@c 0167                           sprintf@f 00C5  
                 ___lldiv@quotient 0079                    ___lwmod@divisor 0073  
  LCD_shift_cursor@number_of_shift 007D                    ___lwmod@counter 0075  
                    ___fladd@signs 00B5                 _PWR_Button_Polling 6574  
                    _collision_msg 025F                       ___fladd@aexp 00B6  
                     ___fladd@bexp 00B7              __end_of_CANInitialize 4F4C  
              ?_PWR_Button_Polling 002A                       _power_switch 0264  
