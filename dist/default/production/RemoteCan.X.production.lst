

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Mar 26 13:59:47 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataBANK0
    70  0153AE                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _delay_quartz_frequency_value
    74  0153AE  14                 	db	20
    75                           
    76                           	psect	mediumconst
    77  00FEEA                     __pmediumconst:
    78                           	opt stack 0
    79  00FEEA  00                 	db	0
    80  00FEEB                     __npowers_:
    81                           	opt stack 0
    82  00FEEB  0000               	dw	0
    83  00FEED  3F80               	dw	16256
    84  00FEEF  CCCD               	dw	52429
    85  00FEF1  3DCC               	dw	15820
    86  00FEF3  D70A               	dw	55050
    87  00FEF5  3C23               	dw	15395
    88  00FEF7  126F               	dw	4719
    89  00FEF9  3A83               	dw	14979
    90  00FEFB  B717               	dw	46871
    91  00FEFD  38D1               	dw	14545
    92  00FEFF  C5AC               	dw	50604
    93  00FF01  3727               	dw	14119
    94  00FF03  37BD               	dw	14269
    95  00FF05  3586               	dw	13702
    96  00FF07  BF95               	dw	49045
    97  00FF09  33D6               	dw	13270
    98  00FF0B  CC77               	dw	52343
    99  00FF0D  322B               	dw	12843
   100  00FF0F  705F               	dw	28767
   101  00FF11  3089               	dw	12425
   102  00FF13  E6FF               	dw	59135
   103  00FF15  2EDB               	dw	11995
   104  00FF17  E508               	dw	58632
   105  00FF19  1E3C               	dw	7740
   106  00FF1B  4260               	dw	16992
   107  00FF1D  0DA2               	dw	3490
   108  00FF1F                     __end_of__npowers_:
   109                           	opt stack 0
   110  00FF1F                     __powers_:
   111                           	opt stack 0
   112  00FF1F  0000               	dw	0
   113  00FF21  3F80               	dw	16256
   114  00FF23  0000               	dw	0
   115  00FF25  4120               	dw	16672
   116  00FF27  0000               	dw	0
   117  00FF29  42C8               	dw	17096
   118  00FF2B  0000               	dw	0
   119  00FF2D  447A               	dw	17530
   120  00FF2F  4000               	dw	16384
   121  00FF31  461C               	dw	17948
   122  00FF33  5000               	dw	20480
   123  00FF35  47C3               	dw	18371
   124  00FF37  2400               	dw	9216
   125  00FF39  4974               	dw	18804
   126  00FF3B  9680               	dw	38528
   127  00FF3D  4B18               	dw	19224
   128  00FF3F  BC20               	dw	48160
   129  00FF41  4CBE               	dw	19646
   130  00FF43  6B28               	dw	27432
   131  00FF45  4E6E               	dw	20078
   132  00FF47  02F9               	dw	761
   133  00FF49  5015               	dw	20501
   134  00FF4B  78EC               	dw	30956
   135  00FF4D  60AD               	dw	24749
   136  00FF4F  F2CA               	dw	62154
   137  00FF51  7149               	dw	29001
   138  00FF53                     __end_of__powers_:
   139                           	opt stack 0
   140  00FF53                     _dpowers:
   141                           	opt stack 0
   142  00FF53  0001               	dw	1
   143  00FF55  0000               	dw	0
   144  00FF57  000A               	dw	10
   145  00FF59  0000               	dw	0
   146  00FF5B  0064               	dw	100
   147  00FF5D  0000               	dw	0
   148  00FF5F  03E8               	dw	1000
   149  00FF61  0000               	dw	0
   150  00FF63  2710               	dw	10000
   151  00FF65  0000               	dw	0
   152  00FF67  86A0               	dw	34464
   153  00FF69  0001               	dw	1
   154  00FF6B  4240               	dw	16960
   155  00FF6D  000F               	dw	15
   156  00FF6F  9680               	dw	38528
   157  00FF71  0098               	dw	152
   158  00FF73  E100               	dw	57600
   159  00FF75  05F5               	dw	1525
   160  00FF77  CA00               	dw	51712
   161  00FF79  3B9A               	dw	15258
   162  00FF7B                     __end_of_dpowers:
   163                           	opt stack 0
   164  0000                     _RXB1CON	set	3920
   165  0000                     _RXB1CONbits	set	3920
   166  0000                     _RXB1D0	set	3926
   167  0000                     _RXB1D1	set	3927
   168  0000                     _RXB1D2	set	3928
   169  0000                     _RXB1D3	set	3929
   170  0000                     _RXB1D4	set	3930
   171  0000                     _RXB1D5	set	3931
   172  0000                     _RXB1D6	set	3932
   173  0000                     _RXB1D7	set	3933
   174  0000                     _RXB1DLC	set	3925
   175  0000                     _RXB1DLCbits	set	3925
   176  0000                     _RXB1EIDH	set	3923
   177  0000                     _RXB1EIDL	set	3924
   178  0000                     _RXB1SIDH	set	3921
   179  0000                     _RXB1SIDL	set	3922
   180  0000                     _RXB1SIDLbits	set	3922
   181  0000                     _RXF0EIDH	set	3842
   182  0000                     _RXF0EIDL	set	3843
   183  0000                     _RXF0SIDH	set	3840
   184  0000                     _RXF0SIDL	set	3841
   185  0000                     _RXF0SIDLbits	set	3841
   186  0000                     _RXF1EIDH	set	3846
   187  0000                     _RXF1EIDL	set	3847
   188  0000                     _RXF1SIDH	set	3844
   189  0000                     _RXF1SIDL	set	3845
   190  0000                     _RXF1SIDLbits	set	3845
   191  0000                     _RXF2EIDH	set	3850
   192  0000                     _RXF2EIDL	set	3851
   193  0000                     _RXF2SIDH	set	3848
   194  0000                     _RXF2SIDL	set	3849
   195  0000                     _RXF2SIDLbits	set	3849
   196  0000                     _RXF3EIDH	set	3854
   197  0000                     _RXF3EIDL	set	3855
   198  0000                     _RXF3SIDH	set	3852
   199  0000                     _RXF3SIDL	set	3853
   200  0000                     _RXF3SIDLbits	set	3853
   201  0000                     _RXF4EIDH	set	3858
   202  0000                     _RXF4EIDL	set	3859
   203  0000                     _RXF4SIDH	set	3856
   204  0000                     _RXF4SIDL	set	3857
   205  0000                     _RXF4SIDLbits	set	3857
   206  0000                     _RXF5EIDH	set	3862
   207  0000                     _RXF5EIDL	set	3863
   208  0000                     _RXF5SIDH	set	3860
   209  0000                     _RXF5SIDL	set	3861
   210  0000                     _RXF5SIDLbits	set	3861
   211  0000                     _RXM0EIDH	set	3866
   212  0000                     _RXM0EIDL	set	3867
   213  0000                     _RXM0SIDH	set	3864
   214  0000                     _RXM0SIDL	set	3865
   215  0000                     _RXM0SIDLbits	set	3865
   216  0000                     _RXM1EIDH	set	3870
   217  0000                     _RXM1EIDL	set	3871
   218  0000                     _RXM1SIDH	set	3868
   219  0000                     _RXM1SIDL	set	3869
   220  0000                     _RXM1SIDLbits	set	3869
   221  0000                     _TXB0CONbits	set	3904
   222  0000                     _TXB0D0	set	3910
   223  0000                     _TXB0D1	set	3911
   224  0000                     _TXB0D2	set	3912
   225  0000                     _TXB0D3	set	3913
   226  0000                     _TXB0D4	set	3914
   227  0000                     _TXB0D5	set	3915
   228  0000                     _TXB0D6	set	3916
   229  0000                     _TXB0D7	set	3917
   230  0000                     _TXB0DLC	set	3909
   231  0000                     _TXB0DLCbits	set	3909
   232  0000                     _TXB0EIDH	set	3907
   233  0000                     _TXB0EIDL	set	3908
   234  0000                     _TXB0SIDH	set	3905
   235  0000                     _TXB0SIDL	set	3906
   236  0000                     _TXB0SIDLbits	set	3906
   237  0000                     _TXB1CONbits	set	3888
   238  0000                     _TXB1D0	set	3894
   239  0000                     _TXB1D1	set	3895
   240  0000                     _TXB1D2	set	3896
   241  0000                     _TXB1D3	set	3897
   242  0000                     _TXB1D4	set	3898
   243  0000                     _TXB1D5	set	3899
   244  0000                     _TXB1D6	set	3900
   245  0000                     _TXB1D7	set	3901
   246  0000                     _TXB1DLC	set	3893
   247  0000                     _TXB1DLCbits	set	3893
   248  0000                     _TXB1EIDH	set	3891
   249  0000                     _TXB1EIDL	set	3892
   250  0000                     _TXB1SIDH	set	3889
   251  0000                     _TXB1SIDL	set	3890
   252  0000                     _TXB1SIDLbits	set	3890
   253  0000                     _TXB2CONbits	set	3872
   254  0000                     _TXB2D0	set	3878
   255  0000                     _TXB2D1	set	3879
   256  0000                     _TXB2D2	set	3880
   257  0000                     _TXB2D3	set	3881
   258  0000                     _TXB2D4	set	3882
   259  0000                     _TXB2D5	set	3883
   260  0000                     _TXB2D6	set	3884
   261  0000                     _TXB2D7	set	3885
   262  0000                     _TXB2DLC	set	3877
   263  0000                     _TXB2DLCbits	set	3877
   264  0000                     _TXB2EIDH	set	3875
   265  0000                     _TXB2EIDL	set	3876
   266  0000                     _TXB2SIDH	set	3873
   267  0000                     _TXB2SIDL	set	3874
   268  0000                     _TXB2SIDLbits	set	3874
   269  0000                     _ADCON0bits	set	4034
   270  0000                     _ADCON1	set	4033
   271  0000                     _ADCON2bits	set	4032
   272  0000                     _ADRESH	set	4036
   273  0000                     _BRGCON1	set	3952
   274  0000                     _BRGCON2	set	3953
   275  0000                     _BRGCON2bits	set	3953
   276  0000                     _BRGCON3	set	3954
   277  0000                     _BRGCON3bits	set	3954
   278  0000                     _CANCON	set	3951
   279  0000                     _CANCONbits	set	3951
   280  0000                     _CANSTAT	set	3950
   281  0000                     _COMSTATbits	set	3956
   282  0000                     _INTCONbits	set	4082
   283  0000                     _IPR2bits	set	4002
   284  0000                     _IPR3bits	set	4005
   285  0000                     _LATA	set	3977
   286  0000                     _LATB	set	3978
   287  0000                     _LATBbits	set	3978
   288  0000                     _LATC	set	3979
   289  0000                     _LATCbits	set	3979
   290  0000                     _LATD	set	3980
   291  0000                     _LATE	set	3981
   292  0000                     _PIE2bits	set	4000
   293  0000                     _PIE3bits	set	4003
   294  0000                     _PIR2bits	set	4001
   295  0000                     _PIR3bits	set	4004
   296  0000                     _PORTAbits	set	3968
   297  0000                     _PORTBbits	set	3969
   298  0000                     _PORTCbits	set	3970
   299  0000                     _PORTDbits	set	3971
   300  0000                     _RCONbits	set	4048
   301  0000                     _RCSTAbits	set	4011
   302  0000                     _RXB0CON	set	3936
   303  0000                     _RXB0CONbits	set	3936
   304  0000                     _RXB0D0	set	3942
   305  0000                     _RXB0D1	set	3943
   306  0000                     _RXB0D2	set	3944
   307  0000                     _RXB0D3	set	3945
   308  0000                     _RXB0D4	set	3946
   309  0000                     _RXB0D5	set	3947
   310  0000                     _RXB0D6	set	3948
   311  0000                     _RXB0D7	set	3949
   312  0000                     _RXB0DLC	set	3941
   313  0000                     _RXB0DLCbits	set	3941
   314  0000                     _RXB0EIDH	set	3939
   315  0000                     _RXB0EIDL	set	3940
   316  0000                     _RXB0SIDH	set	3937
   317  0000                     _RXB0SIDL	set	3938
   318  0000                     _RXB0SIDLbits	set	3938
   319  0000                     _RXERRCNT	set	3957
   320  0000                     _T3CON	set	4017
   321  0000                     _TMR3H	set	4019
   322  0000                     _TMR3L	set	4018
   323  0000                     _TRISA	set	3986
   324  0000                     _TRISB	set	3987
   325  0000                     _TRISC	set	3988
   326  0000                     _TRISD	set	3989
   327  0000                     _TRISE	set	3990
   328  0000                     _TXERRCNT	set	3958
   329  00FF7B                     STR_3:
   330  00FF7B  54                 	db	84	;'T'
   331  00FF7C  75                 	db	117	;'u'
   332  00FF7D  72                 	db	114	;'r'
   333  00FF7E  6E                 	db	110	;'n'
   334  00FF7F  20                 	db	32
   335  00FF80  74                 	db	116	;'t'
   336  00FF81  68                 	db	104	;'h'
   337  00FF82  65                 	db	101	;'e'
   338  00FF83  20                 	db	32
   339  00FF84  73                 	db	115	;'s'
   340  00FF85  77                 	db	119	;'w'
   341  00FF86  69                 	db	105	;'i'
   342  00FF87  74                 	db	116	;'t'
   343  00FF88  63                 	db	99	;'c'
   344  00FF89  68                 	db	104	;'h'
   345  00FF8A  20                 	db	32
   346  00FF8B  4F                 	db	79	;'O'
   347  00FF8C  4E                 	db	78	;'N'
   348  00FF8D  21                 	db	33
   349  00FF8E  20                 	db	32
   350  00FF8F  00                 	db	0
   351  00FF90                     STR_2:
   352  00FF90  3D                 	db	61	;'='
   353  00FF91  3D                 	db	61	;'='
   354  00FF92  3E                 	db	62	;'>'
   355  00FF93  20                 	db	32
   356  00FF94  56                 	db	86	;'V'
   357  00FF95  45                 	db	69	;'E'
   358  00FF96  48                 	db	72	;'H'
   359  00FF97  49                 	db	73	;'I'
   360  00FF98  43                 	db	67	;'C'
   361  00FF99  4C                 	db	76	;'L'
   362  00FF9A  45                 	db	69	;'E'
   363  00FF9B  20                 	db	32
   364  00FF9C  20                 	db	32
   365  00FF9D  4F                 	db	79	;'O'
   366  00FF9E  46                 	db	70	;'F'
   367  00FF9F  46                 	db	70	;'F'
   368  00FFA0  20                 	db	32
   369  00FFA1  3C                 	db	60	;'<'
   370  00FFA2  3D                 	db	61	;'='
   371  00FFA3  3D                 	db	61	;'='
   372  00FFA4  00                 	db	0
   373  00FFA5                     STR_5:
   374  00FFA5  3D                 	db	61	;'='
   375  00FFA6  3D                 	db	61	;'='
   376  00FFA7  3D                 	db	61	;'='
   377  00FFA8  20                 	db	32
   378  00FFA9  56                 	db	86	;'V'
   379  00FFAA  45                 	db	69	;'E'
   380  00FFAB  48                 	db	72	;'H'
   381  00FFAC  49                 	db	73	;'I'
   382  00FFAD  43                 	db	67	;'C'
   383  00FFAE  4C                 	db	76	;'L'
   384  00FFAF  45                 	db	69	;'E'
   385  00FFB0  20                 	db	32
   386  00FFB1  44                 	db	68	;'D'
   387  00FFB2  41                 	db	65	;'A'
   388  00FFB3  54                 	db	84	;'T'
   389  00FFB4  41                 	db	65	;'A'
   390  00FFB5  20                 	db	32
   391  00FFB6  3D                 	db	61	;'='
   392  00FFB7  3D                 	db	61	;'='
   393  00FFB8  3D                 	db	61	;'='
   394  00FFB9  00                 	db	0
   395  00FFBA                     STR_1:
   396  00FFBA  3D                 	db	61	;'='
   397  00FFBB  3D                 	db	61	;'='
   398  00FFBC  3D                 	db	61	;'='
   399  00FFBD  3D                 	db	61	;'='
   400  00FFBE  3D                 	db	61	;'='
   401  00FFBF  3D                 	db	61	;'='
   402  00FFC0  3D                 	db	61	;'='
   403  00FFC1  3D                 	db	61	;'='
   404  00FFC2  3D                 	db	61	;'='
   405  00FFC3  3D                 	db	61	;'='
   406  00FFC4  3D                 	db	61	;'='
   407  00FFC5  3D                 	db	61	;'='
   408  00FFC6  3D                 	db	61	;'='
   409  00FFC7  3D                 	db	61	;'='
   410  00FFC8  3D                 	db	61	;'='
   411  00FFC9  3D                 	db	61	;'='
   412  00FFCA  3D                 	db	61	;'='
   413  00FFCB  3D                 	db	61	;'='
   414  00FFCC  3D                 	db	61	;'='
   415  00FFCD  3D                 	db	61	;'='
   416  00FFCE  00                 	db	0
   417  00FFCF                     STR_6:
   418  00FFCF  44                 	db	68	;'D'
   419  00FFD0  69                 	db	105	;'i'
   420  00FFD1  72                 	db	114	;'r'
   421  00FFD2  65                 	db	101	;'e'
   422  00FFD3  63                 	db	99	;'c'
   423  00FFD4  74                 	db	116	;'t'
   424  00FFD5  69                 	db	105	;'i'
   425  00FFD6  6F                 	db	111	;'o'
   426  00FFD7  6E                 	db	110	;'n'
   427  00FFD8  3A                 	db	58	;':'
   428  00FFD9  20                 	db	32
   429  00FFDA  00                 	db	0
   430  00FFDB                     STR_10:
   431  00FFDB  53                 	db	83	;'S'
   432  00FFDC  70                 	db	112	;'p'
   433  00FFDD  65                 	db	101	;'e'
   434  00FFDE  65                 	db	101	;'e'
   435  00FFDF  64                 	db	100	;'d'
   436  00FFE0  3A                 	db	58	;':'
   437  00FFE1  20                 	db	32
   438  00FFE2  25                 	db	37
   439  00FFE3  2E                 	db	46
   440  00FFE4  33                 	db	51	;'3'
   441  00FFE5  66                 	db	102	;'f'
   442  00FFE6  00                 	db	0
   443  00FFE7                     STR_13:
   444  00FFE7  57                 	db	87	;'W'
   445  00FFE8  61                 	db	97	;'a'
   446  00FFE9  69                 	db	105	;'i'
   447  00FFEA  74                 	db	116	;'t'
   448  00FFEB  2E                 	db	46
   449  00FFEC  2E                 	db	46
   450  00FFED  2E                 	db	46
   451  00FFEE  00                 	db	0
   452  00FFEF                     STR_8:
   453  00FFEF  42                 	db	66	;'B'
   454  00FFF0  4B                 	db	75	;'K'
   455  00FFF1  57                 	db	87	;'W'
   456  00FFF2  44                 	db	68	;'D'
   457  00FFF3  00                 	db	0
   458  00FFF4                     STR_11:
   459  00FFF4  4B                 	db	75	;'K'
   460  00FFF5  6D                 	db	109	;'m'
   461  00FFF6  2F                 	db	47
   462  00FFF7  68                 	db	104	;'h'
   463  00FFF8  00                 	db	0
   464  00FFF9                     STR_7:
   465  00FFF9  46                 	db	70	;'F'
   466  00FFFA  57                 	db	87	;'W'
   467  00FFFB  44                 	db	68	;'D'
   468  00FFFC  00                 	db	0
   469  00FFFD                     STR_9:
   470  00FFFD  50                 	db	80	;'P'
   471  00FFFE  00                 	db	0
   472  0000                     
   473                           ; #config settings
   474  00FFFF  00                 	db	0	; dummy byte at the end
   475  0000                     
   476                           	psect	cinit
   477  0150F8                     __pcinit:
   478                           	opt stack 0
   479  0150F8                     start_initialization:
   480                           	opt stack 0
   481  0150F8                     __initialization:
   482                           	opt stack 0
   483                           
   484                           ; Clear objects allocated to BANK1 (12 bytes)
   485  0150F8  EE01  F021         	lfsr	0,__pbssBANK1
   486  0150FC  0E0C               	movlw	12
   487  0150FE                     clear_0:
   488  0150FE  6AEE               	clrf	postinc0,c
   489  015100  06E8               	decf	wreg,f,c
   490  015102  E1FD               	bnz	clear_0
   491                           
   492                           ; Clear objects allocated to BANK0 (39 bytes)
   493  015104  EE00  F0C8         	lfsr	0,__pbssBANK0
   494  015108  0E27               	movlw	39
   495  01510A                     clear_1:
   496  01510A  6AEE               	clrf	postinc0,c
   497  01510C  06E8               	decf	wreg,f,c
   498  01510E  E1FD               	bnz	clear_1
   499                           
   500                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   501  015110  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   502                           
   503                           ; Clear objects allocated to COMRAM (40 bytes)
   504  015112  EE00  F001         	lfsr	0,__pbssCOMRAM
   505  015116  0E28               	movlw	40
   506  015118                     clear_2:
   507  015118  6AEE               	clrf	postinc0,c
   508  01511A  06E8               	decf	wreg,f,c
   509  01511C  E1FD               	bnz	clear_2
   510                           
   511                           ; Initialize objects allocated to BANK0 (1 bytes)
   512                           ; load TBLPTR registers with __pidataBANK0
   513  01511E  0EAE               	movlw	low __pidataBANK0
   514  015120  6EF6               	movwf	tblptrl,c
   515  015122  0E53               	movlw	high __pidataBANK0
   516  015124  6EF7               	movwf	tblptrh,c
   517  015126  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   518  015128  6EF8               	movwf	tblptru,c
   519  01512A  0009               	tblrd		*+	;fetch initializer
   520  01512C  CFF5 F0EF          	movff	tablat,__pdataBANK0
   521  015130                     end_of_initialization:
   522                           	opt stack 0
   523  015130                     __end_of__initialization:
   524                           	opt stack 0
   525  015130  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   526  015132  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   527  015134  0100               	movlb	0
   528  015136  EF4D  F097         	goto	_main	;jump to C main() function
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           
   536                           	psect	bitbssCOMRAM
   537  000238                     __pbitbssCOMRAM:
   538                           	opt stack 0
   539  000238                     _AbsFlag:
   540                           	opt stack 0
   541  000238                     	ds	1
   542  000239                     _MotoreFlag:
   543                           	opt stack 0
   544  000239                     	ds	1
   545  00023A                     _RTR_Flag:
   546                           	opt stack 0
   547  00023A                     	ds	1
   548  00023B                     _SterzoFlag:
   549                           	opt stack 0
   550  00023B                     	ds	1
   551  00023C                     _newMessageCan:
   552                           	opt stack 0
   553  00023C                     	ds	1
   554  00023D                     _power_switch:
   555                           	opt stack 0
   556  00023D                     	ds	1
   557  00023E                     _wait_low:
   558                           	opt stack 0
   559  00023E                     	ds	1
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           
   567                           	psect	bssCOMRAM
   568  000001                     __pbssCOMRAM:
   569                           	opt stack 0
   570  000001                     LCD_write_integer@F17272:
   571                           	opt stack 0
   572  000001                     	ds	6
   573  000007                     _actual_speed:
   574                           	opt stack 0
   575  000007                     	ds	4
   576  00000B                     _id:
   577                           	opt stack 0
   578  00000B                     	ds	4
   579  00000F                     _pr_time_4:
   580                           	opt stack 0
   581  00000F                     	ds	4
   582  000013                     _left_speed:
   583                           	opt stack 0
   584  000013                     	ds	2
   585  000015                     _right_speed:
   586                           	opt stack 0
   587  000015                     	ds	2
   588  000017                     _battery:
   589                           	opt stack 0
   590  000017                     	ds	1
   591  000018                     _set_steering:
   592                           	opt stack 0
   593  000018                     	ds	1
   594  000019                     _msg:
   595                           	opt stack 0
   596  000019                     	ds	15
   597  000028                     _data:
   598                           	opt stack 0
   599  000028                     	ds	1
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           
   607                           	psect	bssBANK0
   608  0000C8                     __pbssBANK0:
   609                           	opt stack 0
   610  0000C8                     _JoystickConstants:
   611                           	opt stack 0
   612  0000C8                     	ds	8
   613  0000D0                     _actual_speed_kmh:
   614                           	opt stack 0
   615  0000D0                     	ds	4
   616  0000D4                     _pr_time_1:
   617                           	opt stack 0
   618  0000D4                     	ds	4
   619  0000D8                     _pr_time_2:
   620                           	opt stack 0
   621  0000D8                     	ds	4
   622  0000DC                     _pr_time_3:
   623                           	opt stack 0
   624  0000DC                     	ds	4
   625  0000E0                     _time_counter:
   626                           	opt stack 0
   627  0000E0                     	ds	4
   628  0000E4                     _JoystickValues:
   629                           	opt stack 0
   630  0000E4                     	ds	2
   631  0000E6                     _clock_counter_reference:
   632                           	opt stack 0
   633  0000E6                     	ds	2
   634  0000E8                     _set_speed:
   635                           	opt stack 0
   636  0000E8                     	ds	2
   637  0000EA                     _dir:
   638                           	opt stack 0
   639  0000EA                     	ds	1
   640  0000EB                     _switch_position:
   641                           	opt stack 0
   642  0000EB                     	ds	1
   643  0000EC                     _data_brake:
   644                           	opt stack 0
   645  0000EC                     	ds	1
   646  0000ED                     _data_speed:
   647                           	opt stack 0
   648  0000ED                     	ds	1
   649  0000EE                     _data_steering:
   650                           	opt stack 0
   651  0000EE                     	ds	1
   652                           tblptru	equ	0xFF8
   653                           tblptrh	equ	0xFF7
   654                           tblptrl	equ	0xFF6
   655                           tablat	equ	0xFF5
   656                           postinc0	equ	0xFEE
   657                           wreg	equ	0xFE8
   658                           
   659                           	psect	dataBANK0
   660  0000EF                     __pdataBANK0:
   661                           	opt stack 0
   662  0000EF                     _delay_quartz_frequency_value:
   663                           	opt stack 0
   664  0000EF                     	ds	1
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           
   672                           	psect	bssBANK1
   673  000121                     __pbssBANK1:
   674                           	opt stack 0
   675  000121                     _str:
   676                           	opt stack 0
   677  000121                     	ds	12
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           
   685                           	psect	cstackBANK1
   686  000100                     __pcstackBANK1:
   687                           	opt stack 0
   688  000100                     _sprintf$4272:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x0
   692  000100                     	ds	4
   693  000104                     sprintf@ap:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x4
   697  000104                     	ds	2
   698  000106                     sprintf@flag:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x6
   702  000106                     	ds	2
   703  000108                     sprintf@val:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x8
   707  000108                     	ds	4
   708  00010C                     sprintf@exp:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0xC
   712  00010C                     	ds	2
   713  00010E                     sprintf@tmpval:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0xE
   717  00010E                     	ds	4
   718  000112                     sprintf@prec:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x12
   722  000112                     	ds	2
   723  000114                     sprintf@fval:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x14
   727  000114                     	ds	4
   728  000118                     sprintf@c:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x18
   732  000118                     	ds	1
   733  000119                     ??_main:
   734                           
   735                           ; 0 bytes @ 0x19
   736  000119                     	ds	8
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           postinc0	equ	0xFEE
   742                           wreg	equ	0xFE8
   743                           
   744                           	psect	cstackBANK0
   745  000060                     __pcstackBANK0:
   746                           	opt stack 0
   747  000060                     ??_ISR_alta:
   748                           
   749                           ; 0 bytes @ 0x0
   750  000060                     	ds	14
   751  00006E                     ??_Joystick_Polling:
   752  00006E                     ??_isdigit:
   753  00006E                     ?___wmul:
   754                           	opt stack 0
   755  00006E                     ?___awmod:
   756                           	opt stack 0
   757  00006E                     ?__tdiv_to_l_:
   758                           	opt stack 0
   759  00006E                     ?__div_to_l_:
   760                           	opt stack 0
   761  00006E                     ?___fldiv:
   762                           	opt stack 0
   763  00006E                     ?___flneg:
   764                           	opt stack 0
   765  00006E                     ?___lldiv:
   766                           	opt stack 0
   767  00006E                     ?___llmod:
   768                           	opt stack 0
   769  00006E                     ?___xxtofl:
   770                           	opt stack 0
   771  00006E                     CANOperationMode@mode:
   772                           	opt stack 0
   773  00006E                     _CANisTxReady$3294:
   774                           	opt stack 0
   775  00006E                     delay_set_quartz@frequency:
   776                           	opt stack 0
   777  00006E                     LCD_backlight@active:
   778                           	opt stack 0
   779  00006E                     ___wmul@multiplier:
   780                           	opt stack 0
   781  00006E                     ___awmod@dividend:
   782                           	opt stack 0
   783  00006E                     CANsendMessage@identifier:
   784                           	opt stack 0
   785  00006E                     CANSetMask@mask:
   786                           	opt stack 0
   787  00006E                     CANSetFilter@filter:
   788                           	opt stack 0
   789  00006E                     __div_to_l_@f1:
   790                           	opt stack 0
   791  00006E                     ___flge@ff1:
   792                           	opt stack 0
   793  00006E                     ___flneg@f1:
   794                           	opt stack 0
   795  00006E                     __tdiv_to_l_@f1:
   796                           	opt stack 0
   797  00006E                     ___lldiv@dividend:
   798                           	opt stack 0
   799  00006E                     ___llmod@dividend:
   800                           	opt stack 0
   801  00006E                     ___fldiv@b:
   802                           	opt stack 0
   803  00006E                     ___xxtofl@val:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0xE
   807  00006E                     	ds	1
   808  00006F                     Joystick_Polling@i:
   809                           	opt stack 0
   810  00006F                     _isdigit$3851:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0xF
   814  00006F                     	ds	1
   815  000070                     isdigit@c:
   816                           	opt stack 0
   817  000070                     ___wmul@multiplicand:
   818                           	opt stack 0
   819  000070                     ___awmod@divisor:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x10
   823  000070                     	ds	2
   824  000072                     ??___xxtofl:
   825  000072                     CANSetMask@type:
   826                           	opt stack 0
   827  000072                     CANSetFilter@type:
   828                           	opt stack 0
   829  000072                     ___awmod@counter:
   830                           	opt stack 0
   831  000072                     CANsendMessage@data:
   832                           	opt stack 0
   833  000072                     ___wmul@product:
   834                           	opt stack 0
   835  000072                     __div_to_l_@f2:
   836                           	opt stack 0
   837  000072                     ___flge@ff2:
   838                           	opt stack 0
   839  000072                     __tdiv_to_l_@f2:
   840                           	opt stack 0
   841  000072                     ___lldiv@divisor:
   842                           	opt stack 0
   843  000072                     ___llmod@divisor:
   844                           	opt stack 0
   845  000072                     ___fldiv@a:
   846                           	opt stack 0
   847                           
   848                           ; 4 bytes @ 0x12
   849  000072                     	ds	1
   850  000073                     ??_CANSetMask:
   851  000073                     ??_CANSetFilter:
   852  000073                     ___awmod@sign:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x13
   856  000073                     	ds	1
   857  000074                     ?___awdiv:
   858                           	opt stack 0
   859  000074                     CANsendMessage@dataLength:
   860                           	opt stack 0
   861  000074                     delay_ms@value_ms:
   862                           	opt stack 0
   863  000074                     ___awdiv@dividend:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x14
   867  000074                     	ds	1
   868  000075                     CANsendMessage@flags:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x15
   872  000075                     	ds	1
   873  000076                     ??__tdiv_to_l_:
   874  000076                     ??___fldiv:
   875  000076                     ??_CANsendMessage:
   876  000076                     ??___flge:
   877  000076                     LCD_send_command@D2:
   878                           	opt stack 0
   879  000076                     ___llmod@counter:
   880                           	opt stack 0
   881  000076                     ___xxtofl@sign:
   882                           	opt stack 0
   883  000076                     ___awdiv@divisor:
   884                           	opt stack 0
   885  000076                     __div_to_l_@quot:
   886                           	opt stack 0
   887  000076                     ___lldiv@quotient:
   888                           	opt stack 0
   889                           
   890                           ; 4 bytes @ 0x16
   891  000076                     	ds	1
   892  000077                     CANSetMask@numBuffer:
   893                           	opt stack 0
   894  000077                     CANSetFilter@numBuffer:
   895                           	opt stack 0
   896  000077                     LCD_send_command@D1:
   897                           	opt stack 0
   898  000077                     ___xxtofl@exp:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x17
   902  000077                     	ds	1
   903  000078                     LCD_send_command@D0:
   904                           	opt stack 0
   905  000078                     ___awdiv@counter:
   906                           	opt stack 0
   907  000078                     CANSetMask@tamp:
   908                           	opt stack 0
   909  000078                     CANSetFilter@tamp:
   910                           	opt stack 0
   911  000078                     ___xxtofl@arg:
   912                           	opt stack 0
   913                           
   914                           ; 4 bytes @ 0x18
   915  000078                     	ds	1
   916  000079                     LCD_send_command@D3:
   917                           	opt stack 0
   918  000079                     ___awdiv@sign:
   919                           	opt stack 0
   920  000079                     __tdiv_to_l_@quot:
   921                           	opt stack 0
   922                           
   923                           ; 4 bytes @ 0x19
   924  000079                     	ds	1
   925  00007A                     LCD_goto_line@line:
   926                           	opt stack 0
   927  00007A                     LCD_write_char@D3:
   928                           	opt stack 0
   929  00007A                     LCD_cursor@blinking:
   930                           	opt stack 0
   931  00007A                     __div_to_l_@cntr:
   932                           	opt stack 0
   933  00007A                     ___lldiv@counter:
   934                           	opt stack 0
   935  00007A                     ___fldiv@sign:
   936                           	opt stack 0
   937  00007A                     ___awdiv@quotient:
   938                           	opt stack 0
   939  00007A                     CANsendMessage@tamp:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x1A
   943  00007A                     	ds	1
   944  00007B                     LCD_write_char@D2:
   945                           	opt stack 0
   946  00007B                     LCD_cursor@active:
   947                           	opt stack 0
   948  00007B                     __div_to_l_@exp1:
   949                           	opt stack 0
   950  00007B                     ___fldiv@rem:
   951                           	opt stack 0
   952                           
   953                           ; 4 bytes @ 0x1B
   954  00007B                     	ds	1
   955  00007C                     ?___flmul:
   956                           	opt stack 0
   957  00007C                     CANInitialize@phaseSeg1:
   958                           	opt stack 0
   959  00007C                     LCD_write_char@D1:
   960                           	opt stack 0
   961  00007C                     LCD_initialize@quartz_frequency:
   962                           	opt stack 0
   963  00007C                     ___flmul@b:
   964                           	opt stack 0
   965                           
   966                           ; 4 bytes @ 0x1C
   967  00007C                     	ds	1
   968  00007D                     CANInitialize@phaseSeg2:
   969                           	opt stack 0
   970  00007D                     LCD_write_char@D0:
   971                           	opt stack 0
   972  00007D                     __tdiv_to_l_@cntr:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x1D
   976  00007D                     	ds	1
   977  00007E                     ??_CAN_interpreter:
   978  00007E                     CANInitialize@SJW:
   979                           	opt stack 0
   980  00007E                     LCD_write_char@value:
   981                           	opt stack 0
   982  00007E                     __tdiv_to_l_@exp1:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x1E
   986  00007E                     	ds	1
   987  00007F                     CANInitialize@BRP:
   988                           	opt stack 0
   989  00007F                     LCD_write_message@buffer:
   990                           	opt stack 0
   991  00007F                     LCD_write_string@buffer:
   992                           	opt stack 0
   993  00007F                     ___fldiv@new_exp:
   994                           	opt stack 0
   995                           
   996                           ; 2 bytes @ 0x1F
   997  00007F                     	ds	1
   998  000080                     CANInitialize@flags:
   999                           	opt stack 0
  1000  000080                     ___flmul@a:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x20
  1004  000080                     	ds	1
  1005  000081                     ??_CANInitialize:
  1006  000081                     ___fldiv@grs:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x21
  1010  000081                     	ds	3
  1011  000084                     ??___flmul:
  1012                           
  1013                           ; 0 bytes @ 0x24
  1014  000084                     	ds	1
  1015  000085                     CANInitialize@propSeg:
  1016                           	opt stack 0
  1017  000085                     ___fldiv@bexp:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x25
  1021  000085                     	ds	1
  1022  000086                     CANInitialize@FilterConfig1:
  1023                           	opt stack 0
  1024  000086                     ___fldiv@aexp:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x26
  1028  000086                     	ds	1
  1029  000087                     CANInitialize@FilterConfig2:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x27
  1033  000087                     	ds	1
  1034  000088                     ___flmul@sign:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x28
  1038  000088                     	ds	1
  1039  000089                     ___flmul@aexp:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0x29
  1043  000089                     	ds	1
  1044  00008A                     ___flmul@grs:
  1045                           	opt stack 0
  1046                           
  1047                           ; 4 bytes @ 0x2A
  1048  00008A                     	ds	4
  1049  00008E                     ___flmul@bexp:
  1050                           	opt stack 0
  1051                           
  1052                           ; 1 bytes @ 0x2E
  1053  00008E                     	ds	1
  1054  00008F                     ___flmul@prod:
  1055                           	opt stack 0
  1056                           
  1057                           ; 4 bytes @ 0x2F
  1058  00008F                     	ds	4
  1059  000093                     ___flmul@temp:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x33
  1063  000093                     	ds	2
  1064  000095                     ?_fround:
  1065                           	opt stack 0
  1066  000095                     ?_scale:
  1067                           	opt stack 0
  1068                           
  1069                           ; 4 bytes @ 0x35
  1070  000095                     	ds	4
  1071  000099                     _fround$4270:
  1072                           	opt stack 0
  1073  000099                     _scale$4271:
  1074                           	opt stack 0
  1075                           
  1076                           ; 4 bytes @ 0x39
  1077  000099                     	ds	4
  1078  00009D                     scale@scl:
  1079                           	opt stack 0
  1080  00009D                     _fround$4269:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x3D
  1084  00009D                     	ds	1
  1085  00009E                     ?___fltol:
  1086                           	opt stack 0
  1087  00009E                     ___fltol@f1:
  1088                           	opt stack 0
  1089                           
  1090                           ; 4 bytes @ 0x3E
  1091  00009E                     	ds	3
  1092  0000A1                     fround@prec:
  1093                           	opt stack 0
  1094                           
  1095                           ; 1 bytes @ 0x41
  1096  0000A1                     	ds	1
  1097  0000A2                     ??___fltol:
  1098  0000A2                     ?___fladd:
  1099                           	opt stack 0
  1100  0000A2                     ___fladd@b:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x42
  1104  0000A2                     	ds	4
  1105  0000A6                     ___fltol@sign1:
  1106                           	opt stack 0
  1107  0000A6                     ___fladd@a:
  1108                           	opt stack 0
  1109                           
  1110                           ; 4 bytes @ 0x46
  1111  0000A6                     	ds	1
  1112  0000A7                     ___fltol@exp1:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x47
  1116  0000A7                     	ds	3
  1117  0000AA                     ??___fladd:
  1118                           
  1119                           ; 0 bytes @ 0x4A
  1120  0000AA                     	ds	8
  1121  0000B2                     ___fladd@signs:
  1122                           	opt stack 0
  1123                           
  1124                           ; 1 bytes @ 0x52
  1125  0000B2                     	ds	1
  1126  0000B3                     ___fladd@aexp:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0x53
  1130  0000B3                     	ds	1
  1131  0000B4                     ___fladd@bexp:
  1132                           	opt stack 0
  1133                           
  1134                           ; 1 bytes @ 0x54
  1135  0000B4                     	ds	1
  1136  0000B5                     ___fladd@grs:
  1137                           	opt stack 0
  1138                           
  1139                           ; 1 bytes @ 0x55
  1140  0000B5                     	ds	1
  1141  0000B6                     ?___flsub:
  1142                           	opt stack 0
  1143  0000B6                     ___flsub@b:
  1144                           	opt stack 0
  1145                           
  1146                           ; 4 bytes @ 0x56
  1147  0000B6                     	ds	4
  1148  0000BA                     ___flsub@a:
  1149                           	opt stack 0
  1150                           
  1151                           ; 4 bytes @ 0x5A
  1152  0000BA                     	ds	4
  1153  0000BE                     ?_sprintf:
  1154                           	opt stack 0
  1155  0000BE                     sprintf@sp:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x5E
  1159  0000BE                     	ds	2
  1160  0000C0                     sprintf@f:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x60
  1164  0000C0                     	ds	6
  1165  0000C6                     ??_sprintf:
  1166                           
  1167                           ; 0 bytes @ 0x66
  1168  0000C6                     	ds	2
  1169  0000C8                     tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           
  1176                           ; 0 bytes @ 0x68
  1177                           
  1178                           	psect	cstackCOMRAM
  1179  000029                     __pcstackCOMRAM:
  1180                           	opt stack 0
  1181  000029                     ??_ISR_bassa:
  1182  000029                     
  1183                           ; 1 bytes @ 0x0
  1184  000029                     	ds	17
  1185  00003A                     _CANisRxReady$3296:
  1186                           	opt stack 0
  1187  00003A                     CANreceiveMessage@msg:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x11
  1191  00003A                     	ds	2
  1192  00003C                     ??_CANreceiveMessage:
  1193                           
  1194                           ; 0 bytes @ 0x13
  1195  00003C                     	ds	8
  1196  000044                     CANreceiveMessage@error:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x1B
  1200  000044                     	ds	1
  1201  000045                     CANreceiveMessage@tamp:
  1202                           	opt stack 0
  1203                           
  1204                           ; 1 bytes @ 0x1C
  1205  000045                     	ds	1
  1206  000046                     ISR_alta@i:
  1207                           	opt stack 0
  1208                           
  1209                           ; 1 bytes @ 0x1D
  1210  000046                     	ds	1
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           
  1218 ;;
  1219 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1220 ;;
  1221 ;; *************** function _main *****************
  1222 ;; Defined at:
  1223 ;;		line 97 in file "RemoteCan.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;		None               void
  1230 ;; Registers used:
  1231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1239 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1240 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1241 ;;Total ram usage:        8 bytes
  1242 ;; Hardware stack levels required when called:   10
  1243 ;; This function calls:
  1244 ;;		_CAN_Send
  1245 ;;		_CAN_interpreter
  1246 ;;		_Joystick_Polling
  1247 ;;		_LCD_Handler
  1248 ;;		_LCD_clear
  1249 ;;		_LCD_goto_line
  1250 ;;		_LCD_write_message
  1251 ;;		_PWR_Button_Polling
  1252 ;;		___flmul
  1253 ;;		___fltol
  1254 ;;		___xxtofl
  1255 ;;		_board_initialization
  1256 ;;		_delay_ms
  1257 ;; This function is called by:
  1258 ;;		Startup code after reset
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text0
  1263  012E9A                     __ptext0:
  1264                           	opt stack 0
  1265  012E9A                     _main:
  1266                           	opt stack 21
  1267                           
  1268                           ;RemoteCan.c: 98: board_initialization();
  1269                           
  1270                           ;incstack = 0
  1271  012E9A  ECC6  F0A5         	call	_board_initialization	;wreg free
  1272  012E9E                     l8765:
  1273                           
  1274                           ;RemoteCan.c: 102: PWR_Button_Polling();
  1275  012E9E  ECA5  F0A9         	call	_PWR_Button_Polling	;wreg free
  1276                           
  1277                           ;RemoteCan.c: 104: if (power_switch == 0) {
  1278  012EA2  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1279  012EA4  D09D               	goto	l8797
  1280                           
  1281                           ;RemoteCan.c: 105: dir = 0;
  1282  012EA6  0E00               	movlw	0
  1283  012EA8  0100               	movlb	0	; () banked
  1284  012EAA  6FEA               	movwf	_dir& (0+255),b	;volatile
  1285                           
  1286                           ;RemoteCan.c: 106: set_speed = 0;
  1287  012EAC  0E00               	movlw	0
  1288  012EAE  0100               	movlb	0	; () banked
  1289  012EB0  6FE9               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1290  012EB2  0E00               	movlw	0
  1291  012EB4  6FE8               	movwf	_set_speed& (0+255),b	;volatile
  1292                           
  1293                           ;RemoteCan.c: 107: data_steering [0] = 90;
  1294  012EB6  0E5A               	movlw	90
  1295  012EB8  0100               	movlb	0	; () banked
  1296  012EBA  6FEE               	movwf	_data_steering& (0+255),b
  1297                           
  1298                           ;RemoteCan.c: 108: data_brake [0] = 0;
  1299  012EBC  0E00               	movlw	0
  1300  012EBE  0100               	movlb	0	; () banked
  1301  012EC0  6FEC               	movwf	_data_brake& (0+255),b
  1302                           
  1303                           ;RemoteCan.c: 109: data_brake [1] = 1;
  1304  012EC2  0E01               	movlw	1
  1305  012EC4  0100               	movlb	0	; () banked
  1306  012EC6  6FED               	movwf	(_data_brake+1)& (0+255),b
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;RemoteCan.c: 110: CAN_Send();
  1310  012EC8  ECE8  F0A6         	call	_CAN_Send	;wreg free
  1311                           
  1312                           ;RemoteCan.c: 112: while (power_switch == 0) {
  1313  012ECC  D086               	goto	l8795
  1314  012ECE                     l8773:
  1315                           
  1316                           ;RemoteCan.c: 113: LCD_clear();
  1317  012ECE  EC41  F0A9         	call	_LCD_clear	;wreg free
  1318                           
  1319                           ;RemoteCan.c: 114: LCD_goto_line(1);
  1320  012ED2  0E01               	movlw	1
  1321  012ED4  ECE1  F0A4         	call	_LCD_goto_line
  1322                           
  1323                           ;RemoteCan.c: 115: LCD_write_message("====================");
  1324  012ED8  0EBA               	movlw	low STR_1
  1325  012EDA  0100               	movlb	0	; () banked
  1326  012EDC  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1327  012EDE  0EFF               	movlw	high STR_1
  1328  012EE0  0100               	movlb	0	; () banked
  1329  012EE2  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1330  012EE4  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1331                           
  1332                           ;RemoteCan.c: 116: LCD_goto_line(2);
  1333  012EE8  0E02               	movlw	2
  1334  012EEA  ECE1  F0A4         	call	_LCD_goto_line
  1335                           
  1336                           ;RemoteCan.c: 117: LCD_write_message("==> VEHICLE  OFF <==");
  1337  012EEE  0E90               	movlw	low STR_2
  1338  012EF0  0100               	movlb	0	; () banked
  1339  012EF2  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1340  012EF4  0EFF               	movlw	high STR_2
  1341  012EF6  0100               	movlb	0	; () banked
  1342  012EF8  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1343  012EFA  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1344                           
  1345                           ;RemoteCan.c: 118: LCD_goto_line(3);
  1346  012EFE  0E03               	movlw	3
  1347  012F00  ECE1  F0A4         	call	_LCD_goto_line
  1348                           
  1349                           ;RemoteCan.c: 119: LCD_write_message("Turn the switch ON! ");
  1350  012F04  0E7B               	movlw	low STR_3
  1351  012F06  0100               	movlb	0	; () banked
  1352  012F08  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1353  012F0A  0EFF               	movlw	high STR_3
  1354  012F0C  0100               	movlb	0	; () banked
  1355  012F0E  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1356  012F10  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1357                           
  1358                           ;RemoteCan.c: 120: LCD_goto_line(4);
  1359  012F14  0E04               	movlw	4
  1360  012F16  ECE1  F0A4         	call	_LCD_goto_line
  1361                           
  1362                           ;RemoteCan.c: 121: LCD_write_message("====================");
  1363  012F1A  0EBA               	movlw	low STR_1
  1364  012F1C  0100               	movlb	0	; () banked
  1365  012F1E  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1366  012F20  0EFF               	movlw	high STR_1
  1367  012F22  0100               	movlb	0	; () banked
  1368  012F24  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1369  012F26  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  1370                           
  1371                           ;RemoteCan.c: 122: if ((time_counter - pr_time_1) >= 50) {
  1372  012F2A  C0D4  F119         	movff	_pr_time_1,??_main	;volatile
  1373  012F2E  C0D5  F11A         	movff	_pr_time_1+1,??_main+1	;volatile
  1374  012F32  C0D6  F11B         	movff	_pr_time_1+2,??_main+2	;volatile
  1375  012F36  C0D7  F11C         	movff	_pr_time_1+3,??_main+3	;volatile
  1376  012F3A  0101               	movlb	1	; () banked
  1377  012F3C  1F19               	comf	??_main& (0+255),f,b
  1378  012F3E  1F1A               	comf	(??_main+1)& (0+255),f,b
  1379  012F40  1F1B               	comf	(??_main+2)& (0+255),f,b
  1380  012F42  1F1C               	comf	(??_main+3)& (0+255),f,b
  1381  012F44  2B19               	incf	??_main& (0+255),f,b
  1382  012F46  0E00               	movlw	0
  1383  012F48  231A               	addwfc	(??_main+1)& (0+255),f,b
  1384  012F4A  231B               	addwfc	(??_main+2)& (0+255),f,b
  1385  012F4C  231C               	addwfc	(??_main+3)& (0+255),f,b
  1386  012F4E  0100               	movlb	0	; () banked
  1387  012F50  51E0               	movf	_time_counter& (0+255),w,b	;volatile
  1388  012F52  0101               	movlb	1	; () banked
  1389  012F54  2519               	addwf	??_main& (0+255),w,b
  1390  012F56  0101               	movlb	1	; () banked
  1391  012F58  6F1D               	movwf	(??_main+4)& (0+255),b
  1392  012F5A  0100               	movlb	0	; () banked
  1393  012F5C  51E1               	movf	(_time_counter+1)& (0+255),w,b	;volatile
  1394  012F5E  0101               	movlb	1	; () banked
  1395  012F60  211A               	addwfc	(??_main+1)& (0+255),w,b
  1396  012F62  0101               	movlb	1	; () banked
  1397  012F64  6F1E               	movwf	(??_main+5)& (0+255),b
  1398  012F66  0100               	movlb	0	; () banked
  1399  012F68  51E2               	movf	(_time_counter+2)& (0+255),w,b	;volatile
  1400  012F6A  0101               	movlb	1	; () banked
  1401  012F6C  211B               	addwfc	(??_main+2)& (0+255),w,b
  1402  012F6E  0101               	movlb	1	; () banked
  1403  012F70  6F1F               	movwf	(??_main+6)& (0+255),b
  1404  012F72  0100               	movlb	0	; () banked
  1405  012F74  51E3               	movf	(_time_counter+3)& (0+255),w,b	;volatile
  1406  012F76  0101               	movlb	1	; () banked
  1407  012F78  211C               	addwfc	(??_main+3)& (0+255),w,b
  1408  012F7A  0101               	movlb	1	; () banked
  1409  012F7C  6F20               	movwf	(??_main+7)& (0+255),b
  1410  012F7E  0101               	movlb	1	; () banked
  1411  012F80  5120               	movf	(??_main+7)& (0+255),w,b
  1412  012F82  0101               	movlb	1	; () banked
  1413  012F84  111F               	iorwf	(??_main+6)& (0+255),w,b
  1414  012F86  0101               	movlb	1	; () banked
  1415  012F88  111E               	iorwf	(??_main+5)& (0+255),w,b
  1416  012F8A  E105               	bnz	u11850
  1417  012F8C  0E32               	movlw	50
  1418  012F8E  0101               	movlb	1	; () banked
  1419  012F90  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1420  012F92  A0D8               	btfss	status,0,c
  1421  012F94  D019               	goto	l8791
  1422  012F96                     u11850:
  1423                           
  1424                           ; BSR set to: 1
  1425                           ;RemoteCan.c: 123: pr_time_1 = time_counter;
  1426  012F96  C0E0  F0D4         	movff	_time_counter,_pr_time_1	;volatile
  1427  012F9A  C0E1  F0D5         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1428  012F9E  C0E2  F0D6         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1429  012FA2  C0E3  F0D7         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1430                           
  1431                           ; BSR set to: 1
  1432                           ;RemoteCan.c: 124: PORTDbits.RD7 = ~PORTDbits.RD7;
  1433  012FA6  AE83               	btfss	3971,7,c	;volatile
  1434  012FA8  D002               	goto	u11860
  1435  012FAA  0E01               	movlw	1
  1436  012FAC  D001               	goto	u11866
  1437  012FAE                     u11860:
  1438  012FAE  0E00               	movlw	0
  1439  012FB0                     u11866:
  1440  012FB0  0AFF               	xorlw	255
  1441  012FB2  0101               	movlb	1	; () banked
  1442  012FB4  6F19               	movwf	??_main& (0+255),b
  1443  012FB6  0101               	movlb	1	; () banked
  1444  012FB8  3319               	rrcf	??_main& (0+255),f,b
  1445  012FBA  3319               	rrcf	??_main& (0+255),f,b
  1446  012FBC  5083               	movf	3971,w,c	;volatile
  1447  012FBE  0101               	movlb	1	; () banked
  1448  012FC0  1919               	xorwf	??_main& (0+255),w,b
  1449  012FC2  0B7F               	andlw	-129
  1450  012FC4  1919               	xorwf	??_main& (0+255),w,b
  1451  012FC6  6E83               	movwf	3971,c	;volatile
  1452  012FC8                     l8791:
  1453                           
  1454                           ; BSR set to: 1
  1455                           ;RemoteCan.c: 125: }
  1456                           ;RemoteCan.c: 126: PWR_Button_Polling();
  1457  012FC8  ECA5  F0A9         	call	_PWR_Button_Polling	;wreg free
  1458                           
  1459                           ;RemoteCan.c: 127: delay_ms(300);
  1460  012FCC  0E01               	movlw	1
  1461  012FCE  0100               	movlb	0	; () banked
  1462  012FD0  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1463  012FD2  0E2C               	movlw	44
  1464  012FD4  6F74               	movwf	delay_ms@value_ms& (0+255),b
  1465  012FD6  ECBA  F0A8         	call	_delay_ms	;wreg free
  1466  012FDA                     l8795:
  1467  012FDA  AA47               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1468  012FDC  D778               	goto	l8773
  1469                           
  1470                           ;RemoteCan.c: 128: }
  1471                           ;RemoteCan.c: 129: PORTDbits.RD7 = 0;
  1472  012FDE  9E83               	bcf	3971,7,c	;volatile
  1473  012FE0                     l8797:
  1474                           
  1475                           ;RemoteCan.c: 130: }
  1476                           ;RemoteCan.c: 132: Joystick_Polling();
  1477  012FE0  EC2E  F0A8         	call	_Joystick_Polling	;wreg free
  1478                           
  1479                           ;RemoteCan.c: 135: if (PORTAbits.RA2 == 1) {
  1480  012FE4  A480               	btfss	3968,2,c	;volatile
  1481  012FE6  D004               	goto	l746
  1482                           
  1483                           ;RemoteCan.c: 136: switch_position = 0;
  1484  012FE8  0E00               	movlw	0
  1485  012FEA  0100               	movlb	0	; () banked
  1486  012FEC  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1487                           
  1488                           ;RemoteCan.c: 137: } else {
  1489  012FEE  D00D               	goto	l8807
  1490  012FF0                     l746:
  1491                           
  1492                           ;RemoteCan.c: 138: if (PORTAbits.RA3 == 0) {
  1493  012FF0  B680               	btfsc	3968,3,c	;volatile
  1494  012FF2  D005               	goto	l8805
  1495                           
  1496                           ;RemoteCan.c: 139: switch_position = 1;
  1497  012FF4  0E01               	movlw	1
  1498  012FF6  0100               	movlb	0	; () banked
  1499  012FF8  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1500                           
  1501                           ;RemoteCan.c: 140: dir = 0;
  1502  012FFA  0E00               	movlw	0
  1503  012FFC  D004               	goto	L1
  1504  012FFE                     l8805:
  1505                           
  1506                           ;RemoteCan.c: 142: switch_position = 2;
  1507  012FFE  0E02               	movlw	2
  1508  013000  0100               	movlb	0	; () banked
  1509  013002  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1510                           
  1511                           ;RemoteCan.c: 143: dir = 1;
  1512  013004  0E01               	movlw	1
  1513  013006                     L1:
  1514  013006  0100               	movlb	0	; () banked
  1515  013008  6FEA               	movwf	_dir& (0+255),b	;volatile
  1516  01300A                     l8807:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;RemoteCan.c: 144: }
  1520                           ;RemoteCan.c: 145: }
  1521                           ;RemoteCan.c: 147: data_steering [0] = (JoystickValues[0])*(JoystickConstants[0]);
  1522  01300A  C0C8  F080         	movff	_JoystickConstants,___flmul@a	;volatile
  1523  01300E  C0C9  F081         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1524  013012  C0CA  F082         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1525  013016  C0CB  F083         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1526  01301A  0100               	movlb	0	; () banked
  1527  01301C  51E4               	movf	_JoystickValues& (0+255),w,b	;volatile
  1528  01301E  0100               	movlb	0	; () banked
  1529  013020  6F6E               	movwf	___xxtofl@val& (0+255),b
  1530  013022  6B6F               	clrf	(___xxtofl@val+1)& (0+255),b
  1531  013024  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  1532  013026  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  1533  013028  0E00               	movlw	0
  1534  01302A  EC6B  F09E         	call	___xxtofl
  1535  01302E  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1536  013032  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1537  013036  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1538  01303A  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1539  01303E  ECFA  F094         	call	___flmul	;wreg free
  1540  013042  C07C  F09E         	movff	?___flmul,___fltol@f1
  1541  013046  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1542  01304A  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1543  01304E  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1544  013052  EC5B  F0A4         	call	___fltol	;wreg free
  1545  013056  0100               	movlb	0	; () banked
  1546  013058  519E               	movf	?___fltol& (0+255),w,b
  1547  01305A  0100               	movlb	0	; () banked
  1548  01305C  6FEE               	movwf	_data_steering& (0+255),b
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;RemoteCan.c: 148: if (switch_position != 0) {
  1552  01305E  0100               	movlb	0	; () banked
  1553  013060  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  1554  013062  B4D8               	btfsc	status,2,c
  1555  013064  D088               	goto	l8821
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;RemoteCan.c: 149: if (JoystickValues[1] > 132) {
  1559  013066  0E84               	movlw	132
  1560  013068  0100               	movlb	0	; () banked
  1561  01306A  65E5               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  1562  01306C  D042               	goto	l8817
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;RemoteCan.c: 150: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1566  01306E  C0CC  F080         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1567  013072  C0CD  F081         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1568  013076  C0CE  F082         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1569  01307A  C0CF  F083         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1570  01307E  0E7E               	movlw	126
  1571  013080  0101               	movlb	1	; () banked
  1572  013082  6F19               	movwf	??_main& (0+255),b
  1573  013084  0EFF               	movlw	255
  1574  013086  0101               	movlb	1	; () banked
  1575  013088  6F1A               	movwf	(??_main+1)& (0+255),b
  1576  01308A  0100               	movlb	0	; () banked
  1577  01308C  51E5               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1578  01308E  0101               	movlb	1	; () banked
  1579  013090  6F1B               	movwf	(??_main+2)& (0+255),b
  1580  013092  6B1C               	clrf	(??_main+3)& (0+255),b
  1581  013094  0101               	movlb	1	; () banked
  1582  013096  5119               	movf	??_main& (0+255),w,b
  1583  013098  0101               	movlb	1	; () banked
  1584  01309A  271B               	addwf	(??_main+2)& (0+255),f,b
  1585  01309C  0101               	movlb	1	; () banked
  1586  01309E  511A               	movf	(??_main+1)& (0+255),w,b
  1587  0130A0  0101               	movlb	1	; () banked
  1588  0130A2  231C               	addwfc	(??_main+3)& (0+255),f,b
  1589  0130A4  C11B  F06E         	movff	??_main+2,___xxtofl@val
  1590  0130A8  C11C  F06F         	movff	??_main+3,___xxtofl@val+1
  1591  0130AC  0100               	movlb	0	; () banked
  1592  0130AE  0E00               	movlw	0
  1593  0130B0  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1594  0130B2  0EFF               	movlw	-1
  1595  0130B4  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1596  0130B6  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1597  0130B8  0E01               	movlw	1
  1598  0130BA  EC6B  F09E         	call	___xxtofl
  1599  0130BE  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1600  0130C2  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1601  0130C6  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1602  0130CA  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1603  0130CE  ECFA  F094         	call	___flmul	;wreg free
  1604  0130D2  C07C  F09E         	movff	?___flmul,___fltol@f1
  1605  0130D6  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1606  0130DA  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1607  0130DE  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1608  0130E2  EC5B  F0A4         	call	___fltol	;wreg free
  1609  0130E6  C09E  F0E8         	movff	?___fltol,_set_speed	;volatile
  1610  0130EA  C09F  F0E9         	movff	?___fltol+1,_set_speed+1	;volatile
  1611                           
  1612                           ;RemoteCan.c: 151: data_brake [0] = 0;
  1613  0130EE  0E00               	movlw	0
  1614  0130F0  D040               	goto	L2
  1615  0130F2                     l8817:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;RemoteCan.c: 153: set_speed = 0;
  1619  0130F2  0E00               	movlw	0
  1620  0130F4  0100               	movlb	0	; () banked
  1621  0130F6  6FE9               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1622  0130F8  0E00               	movlw	0
  1623  0130FA  6FE8               	movwf	_set_speed& (0+255),b	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;RemoteCan.c: 154: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  1627  0130FC  0E33               	movlw	51
  1628  0130FE  0100               	movlb	0	; () banked
  1629  013100  6F80               	movwf	___flmul@a& (0+255),b
  1630  013102  0E33               	movlw	51
  1631  013104  6F81               	movwf	(___flmul@a+1)& (0+255),b
  1632  013106  0EF3               	movlw	243
  1633  013108  6F82               	movwf	(___flmul@a+2)& (0+255),b
  1634  01310A  0E3F               	movlw	63
  1635  01310C  6F83               	movwf	(___flmul@a+3)& (0+255),b
  1636  01310E  0100               	movlb	0	; () banked
  1637  013110  51E5               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1638  013112  0101               	movlb	1	; () banked
  1639  013114  6F19               	movwf	??_main& (0+255),b
  1640  013116  6B1A               	clrf	(??_main+1)& (0+255),b
  1641  013118  0101               	movlb	1	; () banked
  1642  01311A  1F19               	comf	??_main& (0+255),f,b
  1643  01311C  1F1A               	comf	(??_main+1)& (0+255),f,b
  1644  01311E  4B19               	infsnz	??_main& (0+255),f,b
  1645  013120  2B1A               	incf	(??_main+1)& (0+255),f,b
  1646  013122  0E82               	movlw	130
  1647  013124  0101               	movlb	1	; () banked
  1648  013126  2719               	addwf	??_main& (0+255),f,b
  1649  013128  0E00               	movlw	0
  1650  01312A  231A               	addwfc	(??_main+1)& (0+255),f,b
  1651  01312C  C119  F06E         	movff	??_main,___xxtofl@val
  1652  013130  C11A  F06F         	movff	??_main+1,___xxtofl@val+1
  1653  013134  0100               	movlb	0	; () banked
  1654  013136  0E00               	movlw	0
  1655  013138  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1656  01313A  0EFF               	movlw	-1
  1657  01313C  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  1658  01313E  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  1659  013140  0E01               	movlw	1
  1660  013142  EC6B  F09E         	call	___xxtofl
  1661  013146  C06E  F07C         	movff	?___xxtofl,___flmul@b
  1662  01314A  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  1663  01314E  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  1664  013152  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  1665  013156  ECFA  F094         	call	___flmul	;wreg free
  1666  01315A  C07C  F09E         	movff	?___flmul,___fltol@f1
  1667  01315E  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  1668  013162  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  1669  013166  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  1670  01316A  EC5B  F0A4         	call	___fltol	;wreg free
  1671  01316E  0100               	movlb	0	; () banked
  1672  013170  519E               	movf	?___fltol& (0+255),w,b
  1673  013172                     L2:
  1674  013172  0100               	movlb	0	; () banked
  1675  013174  6FEC               	movwf	_data_brake& (0+255),b
  1676  013176                     l8821:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;RemoteCan.c: 155: }
  1680                           ;RemoteCan.c: 156: }
  1681                           ;RemoteCan.c: 158: if (newMessageCan == 1) {
  1682  013176  A847               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1683  013178  D003               	goto	l8827
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;RemoteCan.c: 159: CAN_interpreter();
  1687  01317A  ECD4  F0A3         	call	_CAN_interpreter	;wreg free
  1688                           
  1689                           ;RemoteCan.c: 160: newMessageCan = 0;
  1690  01317E  9847               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1691  013180                     l8827:
  1692                           
  1693                           ;RemoteCan.c: 161: }
  1694                           ;RemoteCan.c: 163: if ((time_counter - pr_time_2) >= 2) {
  1695  013180  C0D8  F119         	movff	_pr_time_2,??_main	;volatile
  1696  013184  C0D9  F11A         	movff	_pr_time_2+1,??_main+1	;volatile
  1697  013188  C0DA  F11B         	movff	_pr_time_2+2,??_main+2	;volatile
  1698  01318C  C0DB  F11C         	movff	_pr_time_2+3,??_main+3	;volatile
  1699  013190  0101               	movlb	1	; () banked
  1700  013192  1F19               	comf	??_main& (0+255),f,b
  1701  013194  1F1A               	comf	(??_main+1)& (0+255),f,b
  1702  013196  1F1B               	comf	(??_main+2)& (0+255),f,b
  1703  013198  1F1C               	comf	(??_main+3)& (0+255),f,b
  1704  01319A  2B19               	incf	??_main& (0+255),f,b
  1705  01319C  0E00               	movlw	0
  1706  01319E  231A               	addwfc	(??_main+1)& (0+255),f,b
  1707  0131A0  231B               	addwfc	(??_main+2)& (0+255),f,b
  1708  0131A2  231C               	addwfc	(??_main+3)& (0+255),f,b
  1709  0131A4  0100               	movlb	0	; () banked
  1710  0131A6  51E0               	movf	_time_counter& (0+255),w,b	;volatile
  1711  0131A8  0101               	movlb	1	; () banked
  1712  0131AA  2519               	addwf	??_main& (0+255),w,b
  1713  0131AC  0101               	movlb	1	; () banked
  1714  0131AE  6F1D               	movwf	(??_main+4)& (0+255),b
  1715  0131B0  0100               	movlb	0	; () banked
  1716  0131B2  51E1               	movf	(_time_counter+1)& (0+255),w,b	;volatile
  1717  0131B4  0101               	movlb	1	; () banked
  1718  0131B6  211A               	addwfc	(??_main+1)& (0+255),w,b
  1719  0131B8  0101               	movlb	1	; () banked
  1720  0131BA  6F1E               	movwf	(??_main+5)& (0+255),b
  1721  0131BC  0100               	movlb	0	; () banked
  1722  0131BE  51E2               	movf	(_time_counter+2)& (0+255),w,b	;volatile
  1723  0131C0  0101               	movlb	1	; () banked
  1724  0131C2  211B               	addwfc	(??_main+2)& (0+255),w,b
  1725  0131C4  0101               	movlb	1	; () banked
  1726  0131C6  6F1F               	movwf	(??_main+6)& (0+255),b
  1727  0131C8  0100               	movlb	0	; () banked
  1728  0131CA  51E3               	movf	(_time_counter+3)& (0+255),w,b	;volatile
  1729  0131CC  0101               	movlb	1	; () banked
  1730  0131CE  211C               	addwfc	(??_main+3)& (0+255),w,b
  1731  0131D0  0101               	movlb	1	; () banked
  1732  0131D2  6F20               	movwf	(??_main+7)& (0+255),b
  1733  0131D4  0101               	movlb	1	; () banked
  1734  0131D6  5120               	movf	(??_main+7)& (0+255),w,b
  1735  0131D8  0101               	movlb	1	; () banked
  1736  0131DA  111F               	iorwf	(??_main+6)& (0+255),w,b
  1737  0131DC  0101               	movlb	1	; () banked
  1738  0131DE  111E               	iorwf	(??_main+5)& (0+255),w,b
  1739  0131E0  E105               	bnz	u11930
  1740  0131E2  0E02               	movlw	2
  1741  0131E4  0101               	movlb	1	; () banked
  1742  0131E6  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1743  0131E8  A0D8               	btfss	status,0,c
  1744  0131EA  D00A               	goto	l8833
  1745  0131EC                     u11930:
  1746                           
  1747                           ; BSR set to: 1
  1748                           ;RemoteCan.c: 164: pr_time_2 = time_counter;
  1749  0131EC  C0E0  F0D8         	movff	_time_counter,_pr_time_2	;volatile
  1750  0131F0  C0E1  F0D9         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1751  0131F4  C0E2  F0DA         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1752  0131F8  C0E3  F0DB         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;RemoteCan.c: 165: CAN_Send();
  1756  0131FC  ECE8  F0A6         	call	_CAN_Send	;wreg free
  1757  013200                     l8833:
  1758                           
  1759                           ;RemoteCan.c: 166: }
  1760                           ;RemoteCan.c: 168: if ((time_counter - pr_time_3) >= 50) {
  1761  013200  C0DC  F119         	movff	_pr_time_3,??_main	;volatile
  1762  013204  C0DD  F11A         	movff	_pr_time_3+1,??_main+1	;volatile
  1763  013208  C0DE  F11B         	movff	_pr_time_3+2,??_main+2	;volatile
  1764  01320C  C0DF  F11C         	movff	_pr_time_3+3,??_main+3	;volatile
  1765  013210  0101               	movlb	1	; () banked
  1766  013212  1F19               	comf	??_main& (0+255),f,b
  1767  013214  1F1A               	comf	(??_main+1)& (0+255),f,b
  1768  013216  1F1B               	comf	(??_main+2)& (0+255),f,b
  1769  013218  1F1C               	comf	(??_main+3)& (0+255),f,b
  1770  01321A  2B19               	incf	??_main& (0+255),f,b
  1771  01321C  0E00               	movlw	0
  1772  01321E  231A               	addwfc	(??_main+1)& (0+255),f,b
  1773  013220  231B               	addwfc	(??_main+2)& (0+255),f,b
  1774  013222  231C               	addwfc	(??_main+3)& (0+255),f,b
  1775  013224  0100               	movlb	0	; () banked
  1776  013226  51E0               	movf	_time_counter& (0+255),w,b	;volatile
  1777  013228  0101               	movlb	1	; () banked
  1778  01322A  2519               	addwf	??_main& (0+255),w,b
  1779  01322C  0101               	movlb	1	; () banked
  1780  01322E  6F1D               	movwf	(??_main+4)& (0+255),b
  1781  013230  0100               	movlb	0	; () banked
  1782  013232  51E1               	movf	(_time_counter+1)& (0+255),w,b	;volatile
  1783  013234  0101               	movlb	1	; () banked
  1784  013236  211A               	addwfc	(??_main+1)& (0+255),w,b
  1785  013238  0101               	movlb	1	; () banked
  1786  01323A  6F1E               	movwf	(??_main+5)& (0+255),b
  1787  01323C  0100               	movlb	0	; () banked
  1788  01323E  51E2               	movf	(_time_counter+2)& (0+255),w,b	;volatile
  1789  013240  0101               	movlb	1	; () banked
  1790  013242  211B               	addwfc	(??_main+2)& (0+255),w,b
  1791  013244  0101               	movlb	1	; () banked
  1792  013246  6F1F               	movwf	(??_main+6)& (0+255),b
  1793  013248  0100               	movlb	0	; () banked
  1794  01324A  51E3               	movf	(_time_counter+3)& (0+255),w,b	;volatile
  1795  01324C  0101               	movlb	1	; () banked
  1796  01324E  211C               	addwfc	(??_main+3)& (0+255),w,b
  1797  013250  0101               	movlb	1	; () banked
  1798  013252  6F20               	movwf	(??_main+7)& (0+255),b
  1799  013254  0101               	movlb	1	; () banked
  1800  013256  5120               	movf	(??_main+7)& (0+255),w,b
  1801  013258  0101               	movlb	1	; () banked
  1802  01325A  111F               	iorwf	(??_main+6)& (0+255),w,b
  1803  01325C  0101               	movlb	1	; () banked
  1804  01325E  111E               	iorwf	(??_main+5)& (0+255),w,b
  1805  013260  E105               	bnz	u11940
  1806  013262  0E32               	movlw	50
  1807  013264  0101               	movlb	1	; () banked
  1808  013266  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1809  013268  A0D8               	btfss	status,0,c
  1810  01326A  D619               	goto	l8765
  1811  01326C                     u11940:
  1812                           
  1813                           ; BSR set to: 1
  1814                           ;RemoteCan.c: 169: pr_time_3 = time_counter;
  1815  01326C  C0E0  F0DC         	movff	_time_counter,_pr_time_3	;volatile
  1816  013270  C0E1  F0DD         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1817  013274  C0E2  F0DE         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1818  013278  C0E3  F0DF         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1819                           
  1820                           ; BSR set to: 1
  1821                           ;RemoteCan.c: 170: LCD_Handler();
  1822  01327C  EC47  F0A3         	call	_LCD_Handler	;wreg free
  1823  013280  D60E               	goto	l8765
  1824  013282                     __end_of_main:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _board_initialization *****************
  1835 ;; Defined at:
  1836 ;;		line 274 in file "RemoteCan.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;		None               void
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    9
  1857 ;; This function calls:
  1858 ;;		_CANInitialize
  1859 ;;		_LCD_backlight
  1860 ;;		_LCD_clear
  1861 ;;		_LCD_goto_line
  1862 ;;		_LCD_initialize
  1863 ;;		_LCD_write_message
  1864 ;;		_delay_ms
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text1
  1871  014B8C                     __ptext1:
  1872                           	opt stack 0
  1873  014B8C                     _board_initialization:
  1874                           	opt stack 21
  1875                           
  1876                           ;RemoteCan.c: 276: LATA = 0x00;
  1877                           
  1878                           ;incstack = 0
  1879  014B8C  0E00               	movlw	0
  1880  014B8E  6E89               	movwf	3977,c	;volatile
  1881                           
  1882                           ;RemoteCan.c: 277: TRISA = 0b00001111;
  1883  014B90  0E0F               	movlw	15
  1884  014B92  6E92               	movwf	3986,c	;volatile
  1885                           
  1886                           ;RemoteCan.c: 278: LATB = 0x00;
  1887  014B94  0E00               	movlw	0
  1888  014B96  6E8A               	movwf	3978,c	;volatile
  1889                           
  1890                           ;RemoteCan.c: 279: TRISB = 0b11111011;
  1891  014B98  0EFB               	movlw	251
  1892  014B9A  6E93               	movwf	3987,c	;volatile
  1893                           
  1894                           ;RemoteCan.c: 280: LATC = 0x00;
  1895  014B9C  0E00               	movlw	0
  1896  014B9E  6E8B               	movwf	3979,c	;volatile
  1897                           
  1898                           ;RemoteCan.c: 281: TRISC = 0b10110000;
  1899  014BA0  0EB0               	movlw	176
  1900  014BA2  6E94               	movwf	3988,c	;volatile
  1901                           
  1902                           ;RemoteCan.c: 282: LATD = 0x00;
  1903  014BA4  0E00               	movlw	0
  1904  014BA6  6E8C               	movwf	3980,c	;volatile
  1905                           
  1906                           ;RemoteCan.c: 283: TRISD = 0x00;
  1907  014BA8  0E00               	movlw	0
  1908  014BAA  6E95               	movwf	3989,c	;volatile
  1909                           
  1910                           ;RemoteCan.c: 284: LATE = 0x00;
  1911  014BAC  0E00               	movlw	0
  1912  014BAE  6E8D               	movwf	3981,c	;volatile
  1913                           
  1914                           ;RemoteCan.c: 285: TRISE = 0x00;
  1915  014BB0  0E00               	movlw	0
  1916  014BB2  6E96               	movwf	3990,c	;volatile
  1917                           
  1918                           ;RemoteCan.c: 287: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1919  014BB4  0E06               	movlw	6
  1920  014BB6  0100               	movlb	0	; () banked
  1921  014BB8  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1922  014BBA  0E05               	movlw	5
  1923  014BBC  0100               	movlb	0	; () banked
  1924  014BBE  6F7D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1925  014BC0  0E01               	movlw	1
  1926  014BC2  0100               	movlb	0	; () banked
  1927  014BC4  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  1928  014BC6  0E03               	movlw	3
  1929  014BC8  0100               	movlb	0	; () banked
  1930  014BCA  6F7F               	movwf	CANInitialize@BRP& (0+255),b
  1931  014BCC  0E9D               	movlw	157
  1932  014BCE  0100               	movlb	0	; () banked
  1933  014BD0  6F80               	movwf	CANInitialize@flags& (0+255),b
  1934  014BD2  0E04               	movlw	4
  1935  014BD4  EC52  F09F         	call	_CANInitialize
  1936                           
  1937                           ;RemoteCan.c: 291: PIR2bits.TMR3IF = 0;
  1938  014BD8  92A1               	bcf	4001,1,c	;volatile
  1939                           
  1940                           ;RemoteCan.c: 292: PIR3bits.RXB1IF = 0;
  1941  014BDA  92A4               	bcf	4004,1,c	;volatile
  1942                           
  1943                           ;RemoteCan.c: 293: PIR3bits.RXB0IF = 0;
  1944  014BDC  90A4               	bcf	4004,0,c	;volatile
  1945                           
  1946                           ;RemoteCan.c: 296: RCONbits.IPEN = 1;
  1947  014BDE  8ED0               	bsf	4048,7,c	;volatile
  1948                           
  1949                           ;RemoteCan.c: 297: IPR3bits.RXB1IP = 1;
  1950  014BE0  82A5               	bsf	4005,1,c	;volatile
  1951                           
  1952                           ;RemoteCan.c: 298: IPR3bits.RXB0IP = 1;
  1953  014BE2  80A5               	bsf	4005,0,c	;volatile
  1954                           
  1955                           ;RemoteCan.c: 299: IPR2bits.TMR3IP = 0;
  1956  014BE4  92A2               	bcf	4002,1,c	;volatile
  1957                           
  1958                           ;RemoteCan.c: 302: ADCON1 = 0b00001101;
  1959  014BE6  0E0D               	movlw	13
  1960  014BE8  6EC1               	movwf	4033,c	;volatile
  1961                           
  1962                           ;RemoteCan.c: 303: ADCON0bits.CHS2 = 0;
  1963  014BEA  98C2               	bcf	4034,4,c	;volatile
  1964                           
  1965                           ;RemoteCan.c: 304: ADCON0bits.CHS1 = 0;
  1966  014BEC  96C2               	bcf	4034,3,c	;volatile
  1967                           
  1968                           ;RemoteCan.c: 305: ADCON0bits.CHS0 = 0;
  1969  014BEE  94C2               	bcf	4034,2,c	;volatile
  1970                           
  1971                           ;RemoteCan.c: 306: ADCON2bits.ACQT2 = 1;
  1972  014BF0  8AC0               	bsf	4032,5,c	;volatile
  1973                           
  1974                           ;RemoteCan.c: 307: ADCON2bits.ACQT1 = 1;
  1975  014BF2  88C0               	bsf	4032,4,c	;volatile
  1976                           
  1977                           ;RemoteCan.c: 308: ADCON2bits.ACQT0 = 0;
  1978  014BF4  96C0               	bcf	4032,3,c	;volatile
  1979                           
  1980                           ;RemoteCan.c: 309: ADCON2bits.ADCS2 = 1;
  1981  014BF6  84C0               	bsf	4032,2,c	;volatile
  1982                           
  1983                           ;RemoteCan.c: 310: ADCON2bits.ADCS1 = 0;
  1984  014BF8  92C0               	bcf	4032,1,c	;volatile
  1985                           
  1986                           ;RemoteCan.c: 311: ADCON2bits.ADCS0 = 1;
  1987  014BFA  80C0               	bsf	4032,0,c	;volatile
  1988                           
  1989                           ;RemoteCan.c: 312: ADCON2bits.ADFM = 0;
  1990  014BFC  9EC0               	bcf	4032,7,c	;volatile
  1991                           
  1992                           ;RemoteCan.c: 313: ADCON0bits.ADON = 1;
  1993  014BFE  80C2               	bsf	4034,0,c	;volatile
  1994                           
  1995                           ;RemoteCan.c: 316: LCD_initialize(16);
  1996  014C00  0E10               	movlw	16
  1997  014C02  EC90  F0A2         	call	_LCD_initialize
  1998                           
  1999                           ;RemoteCan.c: 317: LCD_backlight(0);
  2000  014C06  0E00               	movlw	0
  2001  014C08  ECC9  F0A9         	call	_LCD_backlight
  2002                           
  2003                           ;RemoteCan.c: 318: LCD_clear();
  2004  014C0C  EC41  F0A9         	call	_LCD_clear	;wreg free
  2005                           
  2006                           ;RemoteCan.c: 319: LCD_goto_line(1);
  2007  014C10  0E01               	movlw	1
  2008  014C12  ECE1  F0A4         	call	_LCD_goto_line
  2009                           
  2010                           ;RemoteCan.c: 321: LCD_write_message("Wait...");
  2011  014C16  0EE7               	movlw	low STR_13
  2012  014C18  0100               	movlb	0	; () banked
  2013  014C1A  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  2014  014C1C  0EFF               	movlw	high STR_13
  2015  014C1E  0100               	movlb	0	; () banked
  2016  014C20  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2017  014C22  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  2018                           
  2019                           ;RemoteCan.c: 322: delay_ms(300);
  2020  014C26  0E01               	movlw	1
  2021  014C28  0100               	movlb	0	; () banked
  2022  014C2A  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2023  014C2C  0E2C               	movlw	44
  2024  014C2E  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2025  014C30  ECBA  F0A8         	call	_delay_ms	;wreg free
  2026                           
  2027                           ;RemoteCan.c: 324: PORTDbits.RD2 = 0;
  2028  014C34  9483               	bcf	3971,2,c	;volatile
  2029                           
  2030                           ;RemoteCan.c: 325: PORTDbits.RD3 = 0;
  2031  014C36  9683               	bcf	3971,3,c	;volatile
  2032                           
  2033                           ;RemoteCan.c: 328: TMR3H = 0x63;
  2034  014C38  0E63               	movlw	99
  2035  014C3A  6EB3               	movwf	4019,c	;volatile
  2036                           
  2037                           ;RemoteCan.c: 329: TMR3L = 0xC0;
  2038  014C3C  0EC0               	movlw	192
  2039  014C3E  6EB2               	movwf	4018,c	;volatile
  2040                           
  2041                           ;RemoteCan.c: 332: PIE3bits.RXB1IE = 1;
  2042  014C40  82A3               	bsf	4003,1,c	;volatile
  2043                           
  2044                           ;RemoteCan.c: 333: PIE3bits.RXB0IE = 1;
  2045  014C42  80A3               	bsf	4003,0,c	;volatile
  2046                           
  2047                           ;RemoteCan.c: 334: PIE2bits.TMR3IE = 1;
  2048  014C44  82A0               	bsf	4000,1,c	;volatile
  2049                           
  2050                           ;RemoteCan.c: 337: RCSTAbits.SPEN = 0;
  2051  014C46  9EAB               	bcf	4011,7,c	;volatile
  2052                           
  2053                           ;RemoteCan.c: 338: T3CON = 0x01;
  2054  014C48  0E01               	movlw	1
  2055  014C4A  6EB1               	movwf	4017,c	;volatile
  2056                           
  2057                           ;RemoteCan.c: 339: LCD_clear();
  2058  014C4C  EC41  F0A9         	call	_LCD_clear	;wreg free
  2059                           
  2060                           ;RemoteCan.c: 340: INTCONbits.GIEH = 1;
  2061  014C50  8EF2               	bsf	intcon,7,c	;volatile
  2062                           
  2063                           ;RemoteCan.c: 341: INTCONbits.GIEL = 1;
  2064  014C52  8CF2               	bsf	intcon,6,c	;volatile
  2065  014C54  0012               	return		;funcret
  2066  014C56                     __end_of_board_initialization:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           intcon	equ	0xFF2
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _LCD_initialize *****************
  2078 ;; Defined at:
  2079 ;;		line 283 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  quartz_frequ    1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  quartz_frequ    1   28[BANK0 ] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2097 ;;Total ram usage:        1 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    8
  2100 ;; This function calls:
  2101 ;;		_LCD_clear
  2102 ;;		_LCD_cursor
  2103 ;;		_LCD_send_command
  2104 ;;		_delay_ms
  2105 ;;		_delay_set_quartz
  2106 ;; This function is called by:
  2107 ;;		_board_initialization
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text2
  2112  014520                     __ptext2:
  2113                           	opt stack 0
  2114  014520                     _LCD_initialize:
  2115                           	opt stack 21
  2116                           
  2117                           ;incstack = 0
  2118                           ;LCD_initialize@quartz_frequency stored from wreg
  2119  014520  0100               	movlb	0	; () banked
  2120  014522  6F7C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2121                           
  2122                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2123  014524  0100               	movlb	0	; () banked
  2124  014526  517C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2125  014528  ECD2  F0A9         	call	_delay_set_quartz
  2126                           
  2127                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  2128  01452C  928A               	bcf	3978,1,c	;volatile
  2129                           
  2130                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  2131  01452E  968A               	bcf	3978,3,c	;volatile
  2132                           
  2133                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  2134  014530  948A               	bcf	3978,2,c	;volatile
  2135                           
  2136                           ;src\LCD_44780.c: 291: delay_ms (100);
  2137  014532  0E00               	movlw	0
  2138  014534  0100               	movlb	0	; () banked
  2139  014536  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2140  014538  0E64               	movlw	100
  2141  01453A  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2142  01453C  ECBA  F0A8         	call	_delay_ms	;wreg free
  2143                           
  2144                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2145  014540  0E00               	movlw	0
  2146  014542  0100               	movlb	0	; () banked
  2147  014544  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2148  014546  0E01               	movlw	1
  2149  014548  0100               	movlb	0	; () banked
  2150  01454A  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2151  01454C  0E01               	movlw	1
  2152  01454E  0100               	movlb	0	; () banked
  2153  014550  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2154  014552  0E00               	movlw	0
  2155  014554  EC9D  F0A8         	call	_LCD_send_command
  2156                           
  2157                           ;src\LCD_44780.c: 293: delay_ms (100);
  2158  014558  0E00               	movlw	0
  2159  01455A  0100               	movlb	0	; () banked
  2160  01455C  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2161  01455E  0E64               	movlw	100
  2162  014560  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2163  014562  ECBA  F0A8         	call	_delay_ms	;wreg free
  2164                           
  2165                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2166  014566  0E00               	movlw	0
  2167  014568  0100               	movlb	0	; () banked
  2168  01456A  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2169  01456C  0E01               	movlw	1
  2170  01456E  0100               	movlb	0	; () banked
  2171  014570  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2172  014572  0E01               	movlw	1
  2173  014574  0100               	movlb	0	; () banked
  2174  014576  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2175  014578  0E00               	movlw	0
  2176  01457A  EC9D  F0A8         	call	_LCD_send_command
  2177                           
  2178                           ;src\LCD_44780.c: 295: delay_ms (10);
  2179  01457E  0E00               	movlw	0
  2180  014580  0100               	movlb	0	; () banked
  2181  014582  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2182  014584  0E0A               	movlw	10
  2183  014586  6F74               	movwf	delay_ms@value_ms& (0+255),b
  2184  014588  ECBA  F0A8         	call	_delay_ms	;wreg free
  2185                           
  2186                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2187  01458C  0E00               	movlw	0
  2188  01458E  0100               	movlb	0	; () banked
  2189  014590  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2190  014592  0E01               	movlw	1
  2191  014594  0100               	movlb	0	; () banked
  2192  014596  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2193  014598  0E01               	movlw	1
  2194  01459A  0100               	movlb	0	; () banked
  2195  01459C  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2196  01459E  0E00               	movlw	0
  2197  0145A0  EC9D  F0A8         	call	_LCD_send_command
  2198                           
  2199                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2200  0145A4  0E00               	movlw	0
  2201  0145A6  0100               	movlb	0	; () banked
  2202  0145A8  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2203  0145AA  0E01               	movlw	1
  2204  0145AC  0100               	movlb	0	; () banked
  2205  0145AE  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2206  0145B0  0E00               	movlw	0
  2207  0145B2  0100               	movlb	0	; () banked
  2208  0145B4  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2209  0145B6  0E00               	movlw	0
  2210  0145B8  EC9D  F0A8         	call	_LCD_send_command
  2211                           
  2212                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2213  0145BC  0E00               	movlw	0
  2214  0145BE  0100               	movlb	0	; () banked
  2215  0145C0  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2216  0145C2  0E01               	movlw	1
  2217  0145C4  0100               	movlb	0	; () banked
  2218  0145C6  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2219  0145C8  0E00               	movlw	0
  2220  0145CA  0100               	movlb	0	; () banked
  2221  0145CC  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2222  0145CE  0E00               	movlw	0
  2223  0145D0  EC9D  F0A8         	call	_LCD_send_command
  2224                           
  2225                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2226  0145D4  0E00               	movlw	0
  2227  0145D6  0100               	movlb	0	; () banked
  2228  0145D8  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2229  0145DA  0E00               	movlw	0
  2230  0145DC  0100               	movlb	0	; () banked
  2231  0145DE  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2232  0145E0  0E00               	movlw	0
  2233  0145E2  0100               	movlb	0	; () banked
  2234  0145E4  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2235  0145E6  0E01               	movlw	1
  2236  0145E8  EC9D  F0A8         	call	_LCD_send_command
  2237                           
  2238                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2239  0145EC  0E00               	movlw	0
  2240  0145EE  0100               	movlb	0	; () banked
  2241  0145F0  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2242  0145F2  0E00               	movlw	0
  2243  0145F4  0100               	movlb	0	; () banked
  2244  0145F6  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2245  0145F8  0E00               	movlw	0
  2246  0145FA  0100               	movlb	0	; () banked
  2247  0145FC  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2248  0145FE  0E00               	movlw	0
  2249  014600  EC9D  F0A8         	call	_LCD_send_command
  2250                           
  2251                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2252  014604  0E00               	movlw	0
  2253  014606  0100               	movlb	0	; () banked
  2254  014608  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2255  01460A  0E00               	movlw	0
  2256  01460C  0100               	movlb	0	; () banked
  2257  01460E  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2258  014610  0E00               	movlw	0
  2259  014612  0100               	movlb	0	; () banked
  2260  014614  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2261  014616  0E01               	movlw	1
  2262  014618  EC9D  F0A8         	call	_LCD_send_command
  2263                           
  2264                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2265  01461C  0E00               	movlw	0
  2266  01461E  0100               	movlb	0	; () banked
  2267  014620  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2268  014622  0E00               	movlw	0
  2269  014624  0100               	movlb	0	; () banked
  2270  014626  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2271  014628  0E00               	movlw	0
  2272  01462A  0100               	movlb	0	; () banked
  2273  01462C  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2274  01462E  0E00               	movlw	0
  2275  014630  EC9D  F0A8         	call	_LCD_send_command
  2276                           
  2277                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2278  014634  0E00               	movlw	0
  2279  014636  0100               	movlb	0	; () banked
  2280  014638  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2281  01463A  0E00               	movlw	0
  2282  01463C  0100               	movlb	0	; () banked
  2283  01463E  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2284  014640  0E01               	movlw	1
  2285  014642  0100               	movlb	0	; () banked
  2286  014644  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2287  014646  0E00               	movlw	0
  2288  014648  EC9D  F0A8         	call	_LCD_send_command
  2289                           
  2290                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2291  01464C  0E00               	movlw	0
  2292  01464E  0100               	movlb	0	; () banked
  2293  014650  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2294  014652  0E00               	movlw	0
  2295  014654  0100               	movlb	0	; () banked
  2296  014656  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2297  014658  0E00               	movlw	0
  2298  01465A  0100               	movlb	0	; () banked
  2299  01465C  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2300  01465E  0E00               	movlw	0
  2301  014660  EC9D  F0A8         	call	_LCD_send_command
  2302                           
  2303                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2304  014664  0E01               	movlw	1
  2305  014666  0100               	movlb	0	; () banked
  2306  014668  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2307  01466A  0E01               	movlw	1
  2308  01466C  0100               	movlb	0	; () banked
  2309  01466E  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2310  014670  0E00               	movlw	0
  2311  014672  0100               	movlb	0	; () banked
  2312  014674  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2313  014676  0E00               	movlw	0
  2314  014678  EC9D  F0A8         	call	_LCD_send_command
  2315                           
  2316                           ;src\LCD_44780.c: 312: LCD_clear ();
  2317  01467C  EC41  F0A9         	call	_LCD_clear	;wreg free
  2318                           
  2319                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2320  014680  0E00               	movlw	0
  2321  014682  0100               	movlb	0	; () banked
  2322  014684  6F7A               	movwf	LCD_cursor@blinking& (0+255),b
  2323  014686  0E00               	movlw	0
  2324  014688  EC28  F0A9         	call	_LCD_cursor
  2325  01468C  0012               	return		;funcret
  2326  01468E                     __end_of_LCD_initialize:
  2327                           	opt stack 0
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           intcon	equ	0xFF2
  2333                           postinc0	equ	0xFEE
  2334                           wreg	equ	0xFE8
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function _delay_set_quartz *****************
  2338 ;; Defined at:
  2339 ;;		line 115 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  frequency       1    wreg     unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  frequency       1   14[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		wreg
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2357 ;;Total ram usage:        1 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    3
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_LCD_initialize
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text3
  2368  0153A4                     __ptext3:
  2369                           	opt stack 0
  2370  0153A4                     _delay_set_quartz:
  2371                           	opt stack 25
  2372                           
  2373                           ;incstack = 0
  2374                           ;delay_set_quartz@frequency stored from wreg
  2375  0153A4  0100               	movlb	0	; () banked
  2376  0153A6  6F6E               	movwf	delay_set_quartz@frequency& (0+255),b
  2377                           
  2378                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2379  0153A8  C06E  F0EF         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2380  0153AC  0012               	return		;funcret
  2381  0153AE                     __end_of_delay_set_quartz:
  2382                           	opt stack 0
  2383                           tblptru	equ	0xFF8
  2384                           tblptrh	equ	0xFF7
  2385                           tblptrl	equ	0xFF6
  2386                           tablat	equ	0xFF5
  2387                           intcon	equ	0xFF2
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _LCD_cursor *****************
  2393 ;; Defined at:
  2394 ;;		line 266 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  active          1    wreg     unsigned char 
  2397 ;;  blinking        1   26[BANK0 ] unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  active          1   27[BANK0 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    7
  2416 ;; This function calls:
  2417 ;;		_LCD_send_command
  2418 ;; This function is called by:
  2419 ;;		_LCD_initialize
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text4
  2424  015250                     __ptext4:
  2425                           	opt stack 0
  2426  015250                     _LCD_cursor:
  2427                           	opt stack 21
  2428                           
  2429                           ;incstack = 0
  2430                           ;LCD_cursor@active stored from wreg
  2431  015250  0100               	movlb	0	; () banked
  2432  015252  6F7B               	movwf	LCD_cursor@active& (0+255),b
  2433                           
  2434                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2435  015254  0E00               	movlw	0
  2436  015256  0100               	movlb	0	; () banked
  2437  015258  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2438  01525A  0E00               	movlw	0
  2439  01525C  0100               	movlb	0	; () banked
  2440  01525E  6F77               	movwf	LCD_send_command@D1& (0+255),b
  2441  015260  0E00               	movlw	0
  2442  015262  0100               	movlb	0	; () banked
  2443  015264  6F78               	movwf	LCD_send_command@D0& (0+255),b
  2444  015266  0E00               	movlw	0
  2445  015268  EC9D  F0A8         	call	_LCD_send_command
  2446                           
  2447                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2448  01526C  0E01               	movlw	1
  2449  01526E  0100               	movlb	0	; () banked
  2450  015270  6F76               	movwf	LCD_send_command@D2& (0+255),b
  2451  015272  C07B  F077         	movff	LCD_cursor@active,LCD_send_command@D1
  2452  015276  C07A  F078         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2453  01527A  0E01               	movlw	1
  2454  01527C  EC9D  F0A8         	call	_LCD_send_command
  2455  015280  0012               	return		;funcret
  2456  015282                     __end_of_LCD_cursor:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           intcon	equ	0xFF2
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _LCD_backlight *****************
  2468 ;; Defined at:
  2469 ;;		line 275 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  active          1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  active          1   14[BANK0 ] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;Total ram usage:        1 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    3
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_board_initialization
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text5
  2498  015392                     __ptext5:
  2499                           	opt stack 0
  2500  015392                     _LCD_backlight:
  2501                           	opt stack 26
  2502                           
  2503                           ;incstack = 0
  2504                           ;LCD_backlight@active stored from wreg
  2505  015392  0100               	movlb	0	; () banked
  2506  015394  6F6E               	movwf	LCD_backlight@active& (0+255),b
  2507                           
  2508                           ;src\LCD_44780.c: 277: LATCbits.LATC2 = active;
  2509  015396  0100               	movlb	0	; () banked
  2510  015398  B16E               	btfsc	LCD_backlight@active& (0+255),0,b
  2511  01539A  D002               	bra	u10895
  2512  01539C  948B               	bcf	3979,2,c	;volatile
  2513  01539E  D001               	bra	u10896
  2514  0153A0                     u10895:
  2515  0153A0  848B               	bsf	3979,2,c	;volatile
  2516  0153A2                     u10896:
  2517  0153A2  0012               	return		;funcret
  2518  0153A4                     __end_of_LCD_backlight:
  2519                           	opt stack 0
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           status	equ	0xFD8
  2528                           
  2529 ;; *************** function _CANInitialize *****************
  2530 ;; Defined at:
  2531 ;;		line 218 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  propSeg         1    wreg     unsigned char 
  2534 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  2535 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  2536 ;;  SJW             1   30[BANK0 ] unsigned char 
  2537 ;;  BRP             1   31[BANK0 ] unsigned char 
  2538 ;;  flags           1   32[BANK0 ] enum E16887
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  propSeg         1   37[BANK0 ] unsigned char 
  2541 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2542 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;		None               void
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2552 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;Total ram usage:       12 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    4
  2559 ;; This function calls:
  2560 ;;		_CANOperationMode
  2561 ;;		_CANSetFilter
  2562 ;;		_CANSetMask
  2563 ;; This function is called by:
  2564 ;;		_board_initialization
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text6
  2569  013EA4                     __ptext6:
  2570                           	opt stack 0
  2571  013EA4                     _CANInitialize:
  2572                           	opt stack 25
  2573                           
  2574                           ;incstack = 0
  2575                           ;CANInitialize@propSeg stored from wreg
  2576  013EA4  0100               	movlb	0	; () banked
  2577  013EA6  6F85               	movwf	CANInitialize@propSeg& (0+255),b
  2578                           
  2579                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2580                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2581                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2582  013EA8  0E80               	movlw	128
  2583  013EAA  ECB3  F0A9         	call	_CANOperationMode
  2584                           
  2585                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2586  013EAE  0E00               	movlw	0
  2587  013EB0  6E70               	movwf	3952,c	;volatile
  2588                           
  2589                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2590  013EB2  0E00               	movlw	0
  2591  013EB4  6E71               	movwf	3953,c	;volatile
  2592                           
  2593                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2594  013EB6  0E00               	movlw	0
  2595  013EB8  6E72               	movwf	3954,c	;volatile
  2596                           
  2597                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2598  013EBA  0100               	movlb	0	; () banked
  2599  013EBC  417E               	rrncf	CANInitialize@SJW& (0+255),w,b
  2600  013EBE  42E8               	rrncf	wreg,f,c
  2601  013EC0  0BC0               	andlw	192
  2602  013EC2  0100               	movlb	0	; () banked
  2603  013EC4  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2607  013EC6  0100               	movlb	0	; () banked
  2608  013EC8  517E               	movf	CANInitialize@SJW& (0+255),w,b
  2609  013ECA  1270               	iorwf	3952,f,c	;volatile
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2613  013ECC  0100               	movlb	0	; () banked
  2614  013ECE  517F               	movf	CANInitialize@BRP& (0+255),w,b
  2615  013ED0  1270               	iorwf	3952,f,c	;volatile
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2619  013ED2  0100               	movlb	0	; () banked
  2620  013ED4  5185               	movf	CANInitialize@propSeg& (0+255),w,b
  2621  013ED6  1271               	iorwf	3953,f,c	;volatile
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2625  013ED8  0100               	movlb	0	; () banked
  2626  013EDA  397C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2627  013EDC  42E8               	rrncf	wreg,f,c
  2628  013EDE  0BF8               	andlw	248
  2629  013EE0  0100               	movlb	0	; () banked
  2630  013EE2  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2634  013EE4  0100               	movlb	0	; () banked
  2635  013EE6  517C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2636  013EE8  1271               	iorwf	3953,f,c	;volatile
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2640  013EEA  0100               	movlb	0	; () banked
  2641  013EEC  A580               	btfss	CANInitialize@flags& (0+255),2,b
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2645  013EEE  8C71               	bsf	3953,6,c	;volatile
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2649  013EF0  0100               	movlb	0	; () banked
  2650  013EF2  B180               	btfsc	CANInitialize@flags& (0+255),0,b
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2654  013EF4  8E71               	bsf	3953,7,c	;volatile
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2658                           
  2659                           ; BSR set to: 0
  2660  013EF6  0100               	movlb	0	; () banked
  2661  013EF8  517D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2662  013EFA  1272               	iorwf	3954,f,c	;volatile
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2666  013EFC  0100               	movlb	0	; () banked
  2667  013EFE  B380               	btfsc	CANInitialize@flags& (0+255),1,b
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2671  013F00  8C72               	bsf	3954,6,c	;volatile
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2675                           
  2676                           ; BSR set to: 0
  2677  013F02  0100               	movlb	0	; () banked
  2678  013F04  5180               	movf	CANInitialize@flags& (0+255),w,b
  2679  013F06  0B60               	andlw	96
  2680  013F08  6E60               	movwf	3936,c	;volatile
  2681                           
  2682                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2683  013F0A  0100               	movlb	0	; () banked
  2684  013F0C  5180               	movf	CANInitialize@flags& (0+255),w,b
  2685  013F0E  0B10               	andlw	16
  2686  013F10  0AFF               	xorlw	255
  2687  013F12  B4D8               	btfsc	status,2,c
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2691  013F14  8460               	bsf	3936,2,c	;volatile
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;inc\CANlib.h: 254: RXB1CON = RXB0CON;
  2695  013F16  CF60 FF50          	movff	3936,3920	;volatile
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;inc\CANlib.h: 258: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2699  013F1A  0E00               	movlw	0
  2700  013F1C  0100               	movlb	0	; () banked
  2701  013F1E  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2702  013F20  0E00               	movlw	0
  2703  013F22  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2704  013F24  0E00               	movlw	0
  2705  013F26  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2706  013F28  0E00               	movlw	0
  2707  013F2A  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2708  013F2C  0EF7               	movlw	247
  2709  013F2E  0100               	movlb	0	; () banked
  2710  013F30  6F72               	movwf	CANSetMask@type& (0+255),b
  2711  013F32  0E01               	movlw	1
  2712  013F34  EC21  F09B         	call	_CANSetMask
  2713                           
  2714                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2715  013F38  0E00               	movlw	0
  2716  013F3A  0100               	movlb	0	; () banked
  2717  013F3C  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2718  013F3E  0E00               	movlw	0
  2719  013F40  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2720  013F42  0E00               	movlw	0
  2721  013F44  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2722  013F46  0E00               	movlw	0
  2723  013F48  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2724  013F4A  0EF7               	movlw	247
  2725  013F4C  0100               	movlb	0	; () banked
  2726  013F4E  6F72               	movwf	CANSetMask@type& (0+255),b
  2727  013F50  0E02               	movlw	2
  2728  013F52  EC21  F09B         	call	_CANSetMask
  2729                           
  2730                           ;inc\CANlib.h: 262: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2731  013F56  D00F               	goto	l7815
  2732  013F58                     l7809:
  2733                           
  2734                           ;inc\CANlib.h: 265: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2735  013F58  0EF7               	movlw	247
  2736  013F5A  0100               	movlb	0	; () banked
  2737  013F5C  6F86               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2738  013F5E  D007               	goto	l7811
  2739  013F60                     l368:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;inc\CANlib.h: 270: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2743  013F60  0100               	movlb	0	; () banked
  2744  013F62  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2745                           
  2746                           ;inc\CANlib.h: 271: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2747  013F64  0100               	movlb	0	; () banked
  2748  013F66  6987               	setf	CANInitialize@FilterConfig2& (0+255),b
  2749                           
  2750                           ;inc\CANlib.h: 272: break;
  2751  013F68  D028               	goto	l7817
  2752  013F6A                     l369:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;inc\CANlib.h: 274: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2756  013F6A  0100               	movlb	0	; () banked
  2757  013F6C  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2758  013F6E                     l7811:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;inc\CANlib.h: 275: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2762  013F6E  0EF7               	movlw	247
  2763  013F70  0100               	movlb	0	; () banked
  2764  013F72  6F87               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;inc\CANlib.h: 277: }
  2768                           
  2769                           ;inc\CANlib.h: 276: break;
  2770  013F74  D022               	goto	l7817
  2771  013F76                     l7815:
  2772  013F76  0E9F               	movlw	159
  2773  013F78  0100               	movlb	0	; () banked
  2774  013F7A  6F81               	movwf	??_CANInitialize& (0+255),b
  2775  013F7C  0EFF               	movlw	255
  2776  013F7E  0100               	movlb	0	; () banked
  2777  013F80  6F82               	movwf	(??_CANInitialize+1)& (0+255),b
  2778  013F82  0100               	movlb	0	; () banked
  2779  013F84  5180               	movf	CANInitialize@flags& (0+255),w,b
  2780  013F86  0B60               	andlw	96
  2781  013F88  0100               	movlb	0	; () banked
  2782  013F8A  6F83               	movwf	(??_CANInitialize+2)& (0+255),b
  2783  013F8C  6B84               	clrf	(??_CANInitialize+3)& (0+255),b
  2784  013F8E  0100               	movlb	0	; () banked
  2785  013F90  5181               	movf	??_CANInitialize& (0+255),w,b
  2786  013F92  0100               	movlb	0	; () banked
  2787  013F94  1383               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2788  013F96  0100               	movlb	0	; () banked
  2789  013F98  5182               	movf	(??_CANInitialize+1)& (0+255),w,b
  2790  013F9A  0100               	movlb	0	; () banked
  2791  013F9C  1384               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2792                           
  2793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2794                           ; Switch size 1, requested type "space"
  2795                           ; Number of cases is 1, Range of values is 0 to 0
  2796                           ; switch strategies available:
  2797                           ; Name         Instructions Cycles
  2798                           ; simple_byte            4     3 (average)
  2799                           ;	Chosen strategy is simple_byte
  2800  013F9E  0100               	movlb	0	; () banked
  2801  013FA0  5184               	movf	(??_CANInitialize+3)& (0+255),w,b
  2802  013FA2  0A00               	xorlw	0	; case 0
  2803  013FA4  A4D8               	btfss	status,2,c
  2804  013FA6  D7E1               	goto	l369
  2805                           
  2806                           ; BSR set to: 0
  2807                           ; Switch size 1, requested type "space"
  2808                           ; Number of cases is 2, Range of values is 191 to 223
  2809                           ; switch strategies available:
  2810                           ; Name         Instructions Cycles
  2811                           ; simple_byte            7     4 (average)
  2812                           ;	Chosen strategy is simple_byte
  2813  013FA8  0100               	movlb	0	; () banked
  2814  013FAA  5183               	movf	(??_CANInitialize+2)& (0+255),w,b
  2815  013FAC  0ABF               	xorlw	191	; case 191
  2816  013FAE  B4D8               	btfsc	status,2,c
  2817  013FB0  D7D7               	goto	l368
  2818  013FB2  0A60               	xorlw	96	; case 223
  2819  013FB4  B4D8               	btfsc	status,2,c
  2820  013FB6  D7D0               	goto	l7809
  2821  013FB8  D7D8               	goto	l369
  2822  013FBA                     l7817:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;inc\CANlib.h: 279: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2826  013FBA  0E00               	movlw	0
  2827  013FBC  0100               	movlb	0	; () banked
  2828  013FBE  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2829  013FC0  0E00               	movlw	0
  2830  013FC2  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2831  013FC4  0E00               	movlw	0
  2832  013FC6  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2833  013FC8  0E00               	movlw	0
  2834  013FCA  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2835  013FCC  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2836  013FD0  0E00               	movlw	0
  2837  013FD2  EC00  F080         	call	_CANSetFilter
  2838                           
  2839                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2840  013FD6  0E00               	movlw	0
  2841  013FD8  0100               	movlb	0	; () banked
  2842  013FDA  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2843  013FDC  0E00               	movlw	0
  2844  013FDE  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2845  013FE0  0E00               	movlw	0
  2846  013FE2  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2847  013FE4  0E00               	movlw	0
  2848  013FE6  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2849  013FE8  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2850  013FEC  0E01               	movlw	1
  2851  013FEE  EC00  F080         	call	_CANSetFilter
  2852                           
  2853                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2854  013FF2  0E00               	movlw	0
  2855  013FF4  0100               	movlb	0	; () banked
  2856  013FF6  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2857  013FF8  0E00               	movlw	0
  2858  013FFA  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2859  013FFC  0E00               	movlw	0
  2860  013FFE  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2861  014000  0E00               	movlw	0
  2862  014002  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2863  014004  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2864  014008  0E02               	movlw	2
  2865  01400A  EC00  F080         	call	_CANSetFilter
  2866                           
  2867                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2868  01400E  0E00               	movlw	0
  2869  014010  0100               	movlb	0	; () banked
  2870  014012  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2871  014014  0E00               	movlw	0
  2872  014016  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2873  014018  0E00               	movlw	0
  2874  01401A  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2875  01401C  0E00               	movlw	0
  2876  01401E  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2877  014020  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2878  014024  0E03               	movlw	3
  2879  014026  EC00  F080         	call	_CANSetFilter
  2880                           
  2881                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2882  01402A  0E00               	movlw	0
  2883  01402C  0100               	movlb	0	; () banked
  2884  01402E  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2885  014030  0E00               	movlw	0
  2886  014032  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2887  014034  0E00               	movlw	0
  2888  014036  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2889  014038  0E00               	movlw	0
  2890  01403A  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2891  01403C  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2892  014040  0E04               	movlw	4
  2893  014042  EC00  F080         	call	_CANSetFilter
  2894                           
  2895                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2896  014046  0E00               	movlw	0
  2897  014048  0100               	movlb	0	; () banked
  2898  01404A  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2899  01404C  0E00               	movlw	0
  2900  01404E  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2901  014050  0E00               	movlw	0
  2902  014052  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2903  014054  0E00               	movlw	0
  2904  014056  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2905  014058  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2906  01405C  0E05               	movlw	5
  2907  01405E  EC00  F080         	call	_CANSetFilter
  2908                           
  2909                           ;inc\CANlib.h: 286: CANOperationMode(CAN_OP_MODE_NORMAL);
  2910  014062  0E00               	movlw	0
  2911  014064  ECB3  F0A9         	call	_CANOperationMode
  2912  014068  0012               	return		;funcret
  2913  01406A                     __end_of_CANInitialize:
  2914                           	opt stack 0
  2915                           tblptru	equ	0xFF8
  2916                           tblptrh	equ	0xFF7
  2917                           tblptrl	equ	0xFF6
  2918                           tablat	equ	0xFF5
  2919                           intcon	equ	0xFF2
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           status	equ	0xFD8
  2923                           
  2924 ;; *************** function _CANSetMask *****************
  2925 ;; Defined at:
  2926 ;;		line 639 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  numBuffer       1    wreg     enum E16921
  2929 ;;  mask            4   14[BANK0 ] unsigned long 
  2930 ;;  type            1   18[BANK0 ] enum E16887
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  numBuffer       1   23[BANK0 ] enum E16921
  2933 ;;  tamp            4   24[BANK0 ] unsigned long 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2943 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;Total ram usage:       14 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    3
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_CANInitialize
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text7
  2958  013642                     __ptext7:
  2959                           	opt stack 0
  2960  013642                     _CANSetMask:
  2961                           	opt stack 25
  2962                           
  2963                           ;incstack = 0
  2964                           ;CANSetMask@numBuffer stored from wreg
  2965  013642  0100               	movlb	0	; () banked
  2966  013644  6F77               	movwf	CANSetMask@numBuffer& (0+255),b
  2967                           
  2968                           ;inc\CANlib.h: 642: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2969  013646  0100               	movlb	0	; () banked
  2970  013648  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2971  01364A  A4D8               	btfss	status,2,c
  2972  01364C  D056               	goto	l7007
  2973                           
  2974                           ; BSR set to: 0
  2975  01364E  0100               	movlb	0	; () banked
  2976  013650  2972               	incf	CANSetMask@type& (0+255),w,b
  2977  013652  A4D8               	btfss	status,2,c
  2978  013654  D052               	goto	l7007
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;inc\CANlib.h: 643: {
  2982                           ;inc\CANlib.h: 644: tamp = (mask >> 3);
  2983  013656  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2984  01365A  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2985  01365E  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2986  013662  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2987  013666  0E04               	movlw	4
  2988  013668  D006               	goto	u8930
  2989  01366A                     u8935:
  2990  01366A  0100               	movlb	0	; () banked
  2991  01366C  90D8               	bcf	status,0,c
  2992  01366E  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2993  013670  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2994  013672  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2995  013674  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2996  013676                     u8930:
  2997  013676  2EE8               	decfsz	wreg,f,c
  2998  013678  D7F8               	goto	u8935
  2999  01367A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3000  01367E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3001  013682  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3002  013686  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;inc\CANlib.h: 645: tamp = tamp & 0x000000FF;
  3006  01368A  0100               	movlb	0	; () banked
  3007  01368C  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3008  01368E  0100               	movlb	0	; () banked
  3009  013690  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3010  013692  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3011  013694  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3012  013696  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;inc\CANlib.h: 646: RXM0SIDH = (unsigned char) tamp;
  3016  013698  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;inc\CANlib.h: 648: tamp = mask & 0x00000007;
  3020  01369C  0E07               	movlw	7
  3021  01369E  0100               	movlb	0	; () banked
  3022  0136A0  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3023  0136A2  0100               	movlb	0	; () banked
  3024  0136A4  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3025  0136A6  0E00               	movlw	0
  3026  0136A8  0100               	movlb	0	; () banked
  3027  0136AA  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3028  0136AC  0100               	movlb	0	; () banked
  3029  0136AE  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3030  0136B0  0E00               	movlw	0
  3031  0136B2  0100               	movlb	0	; () banked
  3032  0136B4  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3033  0136B6  0100               	movlb	0	; () banked
  3034  0136B8  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3035  0136BA  0E00               	movlw	0
  3036  0136BC  0100               	movlb	0	; () banked
  3037  0136BE  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3038  0136C0  0100               	movlb	0	; () banked
  3039  0136C2  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;inc\CANlib.h: 649: tamp = tamp << 5;
  3043  0136C4  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3044  0136C8  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3045  0136CC  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3046  0136D0  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3047  0136D4  0E05               	movlw	5
  3048  0136D6                     u8945:
  3049  0136D6  90D8               	bcf	status,0,c
  3050  0136D8  0100               	movlb	0	; () banked
  3051  0136DA  3773               	rlcf	??_CANSetMask& (0+255),f,b
  3052  0136DC  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3053  0136DE  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3054  0136E0  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3055  0136E2  2EE8               	decfsz	wreg,f,c
  3056  0136E4  D7F8               	goto	u8945
  3057  0136E6  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3058  0136EA  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3059  0136EE  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3060  0136F2  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;inc\CANlib.h: 650: RXM0SIDL = (unsigned char) tamp;
  3064  0136F6  C078  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3065  0136FA                     l7007:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;inc\CANlib.h: 651: }
  3069                           ;inc\CANlib.h: 653: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3070  0136FA  0E02               	movlw	2
  3071  0136FC  0100               	movlb	0	; () banked
  3072  0136FE  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3073  013700  A4D8               	btfss	status,2,c
  3074  013702  D056               	goto	l7023
  3075                           
  3076                           ; BSR set to: 0
  3077  013704  0100               	movlb	0	; () banked
  3078  013706  2972               	incf	CANSetMask@type& (0+255),w,b
  3079  013708  A4D8               	btfss	status,2,c
  3080  01370A  D052               	goto	l7023
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;inc\CANlib.h: 654: {
  3084                           ;inc\CANlib.h: 655: tamp = (mask >> 3);
  3085  01370C  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3086  013710  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3087  013714  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3088  013718  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3089  01371C  0E04               	movlw	4
  3090  01371E  D006               	goto	u8970
  3091  013720                     u8975:
  3092  013720  0100               	movlb	0	; () banked
  3093  013722  90D8               	bcf	status,0,c
  3094  013724  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3095  013726  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3096  013728  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3097  01372A  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3098  01372C                     u8970:
  3099  01372C  2EE8               	decfsz	wreg,f,c
  3100  01372E  D7F8               	goto	u8975
  3101  013730  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3102  013734  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3103  013738  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3104  01373C  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;inc\CANlib.h: 656: tamp = tamp & 0x000000FF;
  3108  013740  0100               	movlb	0	; () banked
  3109  013742  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3110  013744  0100               	movlb	0	; () banked
  3111  013746  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3112  013748  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3113  01374A  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3114  01374C  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;inc\CANlib.h: 657: RXM1SIDH = (unsigned char) tamp;
  3118  01374E  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;inc\CANlib.h: 659: tamp = mask & 0x00000007;
  3122  013752  0E07               	movlw	7
  3123  013754  0100               	movlb	0	; () banked
  3124  013756  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3125  013758  0100               	movlb	0	; () banked
  3126  01375A  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3127  01375C  0E00               	movlw	0
  3128  01375E  0100               	movlb	0	; () banked
  3129  013760  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3130  013762  0100               	movlb	0	; () banked
  3131  013764  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3132  013766  0E00               	movlw	0
  3133  013768  0100               	movlb	0	; () banked
  3134  01376A  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3135  01376C  0100               	movlb	0	; () banked
  3136  01376E  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3137  013770  0E00               	movlw	0
  3138  013772  0100               	movlb	0	; () banked
  3139  013774  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3140  013776  0100               	movlb	0	; () banked
  3141  013778  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;inc\CANlib.h: 660: tamp = tamp << 5;
  3145  01377A  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3146  01377E  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3147  013782  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3148  013786  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3149  01378A  0E05               	movlw	5
  3150  01378C                     u8985:
  3151  01378C  90D8               	bcf	status,0,c
  3152  01378E  0100               	movlb	0	; () banked
  3153  013790  3773               	rlcf	??_CANSetMask& (0+255),f,b
  3154  013792  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3155  013794  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3156  013796  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3157  013798  2EE8               	decfsz	wreg,f,c
  3158  01379A  D7F8               	goto	u8985
  3159  01379C  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3160  0137A0  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3161  0137A4  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3162  0137A8  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;inc\CANlib.h: 661: RXM1SIDL = (unsigned char) tamp;
  3166  0137AC  C078  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3167  0137B0                     l7023:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;inc\CANlib.h: 662: }
  3171                           ;inc\CANlib.h: 664: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3172  0137B0  0100               	movlb	0	; () banked
  3173  0137B2  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  3174  0137B4  A4D8               	btfss	status,2,c
  3175  0137B6  D087               	goto	l7055
  3176                           
  3177                           ; BSR set to: 0
  3178  0137B8  0EF7               	movlw	247
  3179  0137BA  0100               	movlb	0	; () banked
  3180  0137BC  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3181  0137BE  A4D8               	btfss	status,2,c
  3182  0137C0  D082               	goto	l7055
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;inc\CANlib.h: 665: {
  3186                           ;inc\CANlib.h: 666: tamp = mask & 0x000000FF;
  3187  0137C2  0100               	movlb	0	; () banked
  3188  0137C4  516E               	movf	CANSetMask@mask& (0+255),w,b
  3189  0137C6  0100               	movlb	0	; () banked
  3190  0137C8  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3191  0137CA  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3192  0137CC  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3193  0137CE  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;inc\CANlib.h: 667: RXM0EIDL = (unsigned char) tamp;
  3197  0137D0  C078  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;inc\CANlib.h: 669: tamp = mask & 0x0000FF00;
  3201  0137D4  0E00               	movlw	0
  3202  0137D6  0100               	movlb	0	; () banked
  3203  0137D8  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3204  0137DA  0100               	movlb	0	; () banked
  3205  0137DC  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3206  0137DE  0EFF               	movlw	255
  3207  0137E0  0100               	movlb	0	; () banked
  3208  0137E2  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3209  0137E4  0100               	movlb	0	; () banked
  3210  0137E6  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3211  0137E8  0E00               	movlw	0
  3212  0137EA  0100               	movlb	0	; () banked
  3213  0137EC  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3214  0137EE  0100               	movlb	0	; () banked
  3215  0137F0  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3216  0137F2  0E00               	movlw	0
  3217  0137F4  0100               	movlb	0	; () banked
  3218  0137F6  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3219  0137F8  0100               	movlb	0	; () banked
  3220  0137FA  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;inc\CANlib.h: 670: tamp = tamp >> 8;
  3224  0137FC  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3225  013800  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3226  013804  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3227  013808  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3228  01380C  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3229  013810  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3230  013814  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3231  013818  0100               	movlb	0	; () banked
  3232  01381A  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3233  01381C  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3234  013820  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3235  013824  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3236  013828  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;inc\CANlib.h: 671: RXM0EIDH = (unsigned char) tamp;
  3240  01382C  C078  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;inc\CANlib.h: 673: if (mask & 0x00010000)
  3244  013830  0100               	movlb	0	; () banked
  3245  013832  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3246  013834  D003               	goto	l442
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;inc\CANlib.h: 674: RXM0SIDLbits.EID16 = 0x01;
  3250  013836  010F               	movlb	15	; () banked
  3251  013838  8119               	bsf	25,0,b	;volatile
  3252  01383A  D002               	goto	l443
  3253  01383C                     l442:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;inc\CANlib.h: 675: else
  3257                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x00;
  3258  01383C  010F               	movlb	15	; () banked
  3259  01383E  9119               	bcf	25,0,b	;volatile
  3260  013840                     l443:
  3261                           
  3262                           ; BSR set to: 15
  3263                           ;inc\CANlib.h: 678: if (mask & 0x00020000)
  3264  013840  0100               	movlb	0	; () banked
  3265  013842  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3266  013844  D003               	goto	l444
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 679: RXM0SIDLbits.EID17 = 0x01;
  3270  013846  010F               	movlb	15	; () banked
  3271  013848  8319               	bsf	25,1,b	;volatile
  3272  01384A  D002               	goto	l445
  3273  01384C                     l444:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;inc\CANlib.h: 680: else
  3277                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x00;
  3278  01384C  010F               	movlb	15	; () banked
  3279  01384E  9319               	bcf	25,1,b	;volatile
  3280  013850                     l445:
  3281                           
  3282                           ; BSR set to: 15
  3283                           ;inc\CANlib.h: 683: if (mask & 0x00040000)
  3284  013850  0100               	movlb	0	; () banked
  3285  013852  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3286  013854  D003               	goto	l446
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;inc\CANlib.h: 684: RXM0SIDLbits.SID0 = 0x01;
  3290  013856  010F               	movlb	15	; () banked
  3291  013858  8B19               	bsf	25,5,b	;volatile
  3292  01385A  D002               	goto	l447
  3293  01385C                     l446:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;inc\CANlib.h: 685: else
  3297                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x00;
  3298  01385C  010F               	movlb	15	; () banked
  3299  01385E  9B19               	bcf	25,5,b	;volatile
  3300  013860                     l447:
  3301                           
  3302                           ; BSR set to: 15
  3303                           ;inc\CANlib.h: 688: if (mask & 0x00080000)
  3304  013860  0100               	movlb	0	; () banked
  3305  013862  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3306  013864  D003               	goto	l448
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;inc\CANlib.h: 689: RXM0SIDLbits.SID1 = 0x01;
  3310  013866  010F               	movlb	15	; () banked
  3311  013868  8D19               	bsf	25,6,b	;volatile
  3312  01386A  D002               	goto	l449
  3313  01386C                     l448:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 690: else
  3317                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x00;
  3318  01386C  010F               	movlb	15	; () banked
  3319  01386E  9D19               	bcf	25,6,b	;volatile
  3320  013870                     l449:
  3321                           
  3322                           ; BSR set to: 15
  3323                           ;inc\CANlib.h: 693: if (mask & 0x00100000)
  3324  013870  0100               	movlb	0	; () banked
  3325  013872  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3326  013874  D003               	goto	l450
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 694: RXM0SIDLbits.SID2 = 0x01 ;
  3330  013876  010F               	movlb	15	; () banked
  3331  013878  8F19               	bsf	25,7,b	;volatile
  3332  01387A  D002               	goto	l7049
  3333  01387C                     l450:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;inc\CANlib.h: 695: else
  3337                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x00 ;
  3338  01387C  010F               	movlb	15	; () banked
  3339  01387E  9F19               	bcf	25,7,b	;volatile
  3340  013880                     l7049:
  3341                           
  3342                           ; BSR set to: 15
  3343                           ;inc\CANlib.h: 698: tamp = (mask >> 21);
  3344  013880  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3345  013884  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3346  013888  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3347  01388C  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3348  013890  0E16               	movlw	22
  3349  013892  D006               	goto	u9060
  3350  013894                     u9065:
  3351  013894  0100               	movlb	0	; () banked
  3352  013896  90D8               	bcf	status,0,c
  3353  013898  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3354  01389A  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3355  01389C  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3356  01389E  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3357  0138A0                     u9060:
  3358  0138A0  2EE8               	decfsz	wreg,f,c
  3359  0138A2  D7F8               	goto	u9065
  3360  0138A4  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3361  0138A8  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3362  0138AC  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3363  0138B0  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;inc\CANlib.h: 699: tamp = tamp & 0x000000FF;
  3367  0138B4  0100               	movlb	0	; () banked
  3368  0138B6  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3369  0138B8  0100               	movlb	0	; () banked
  3370  0138BA  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3371  0138BC  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3372  0138BE  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3373  0138C0  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;inc\CANlib.h: 700: RXM0SIDH = (unsigned char) tamp;
  3377  0138C2  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3378  0138C6                     l7055:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;inc\CANlib.h: 701: }
  3382                           ;inc\CANlib.h: 703: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3383  0138C6  0E02               	movlw	2
  3384  0138C8  0100               	movlb	0	; () banked
  3385  0138CA  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3386  0138CC  A4D8               	btfss	status,2,c
  3387  0138CE  0012               	return	
  3388                           
  3389                           ; BSR set to: 0
  3390  0138D0  0EF7               	movlw	247
  3391  0138D2  0100               	movlb	0	; () banked
  3392  0138D4  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3393  0138D6  A4D8               	btfss	status,2,c
  3394  0138D8  0012               	return	
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;inc\CANlib.h: 704: {
  3398                           ;inc\CANlib.h: 705: tamp = mask & 0x000000FF;
  3399  0138DA  0100               	movlb	0	; () banked
  3400  0138DC  516E               	movf	CANSetMask@mask& (0+255),w,b
  3401  0138DE  0100               	movlb	0	; () banked
  3402  0138E0  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3403  0138E2  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3404  0138E4  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3405  0138E6  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;inc\CANlib.h: 706: RXM1EIDL = (unsigned char) tamp;
  3409  0138E8  C078  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;inc\CANlib.h: 708: tamp = mask & 0x0000FF00;
  3413  0138EC  0E00               	movlw	0
  3414  0138EE  0100               	movlb	0	; () banked
  3415  0138F0  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3416  0138F2  0100               	movlb	0	; () banked
  3417  0138F4  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3418  0138F6  0EFF               	movlw	255
  3419  0138F8  0100               	movlb	0	; () banked
  3420  0138FA  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3421  0138FC  0100               	movlb	0	; () banked
  3422  0138FE  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3423  013900  0E00               	movlw	0
  3424  013902  0100               	movlb	0	; () banked
  3425  013904  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3426  013906  0100               	movlb	0	; () banked
  3427  013908  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3428  01390A  0E00               	movlw	0
  3429  01390C  0100               	movlb	0	; () banked
  3430  01390E  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3431  013910  0100               	movlb	0	; () banked
  3432  013912  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;inc\CANlib.h: 709: tamp = tamp >> 8;
  3436  013914  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3437  013918  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3438  01391C  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3439  013920  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3440  013924  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3441  013928  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3442  01392C  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3443  013930  0100               	movlb	0	; () banked
  3444  013932  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3445  013934  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3446  013938  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3447  01393C  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3448  013940  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 710: RXM1EIDH = (unsigned char) tamp;
  3452  013944  C078  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;inc\CANlib.h: 712: if (mask & 0x00010000)
  3456  013948  0100               	movlb	0	; () banked
  3457  01394A  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3458  01394C  D003               	goto	l453
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 713: RXM1SIDLbits.EID16 = 0x01;
  3462  01394E  010F               	movlb	15	; () banked
  3463  013950  811D               	bsf	29,0,b	;volatile
  3464  013952  D002               	goto	l454
  3465  013954                     l453:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;inc\CANlib.h: 714: else
  3469                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x00;
  3470  013954  010F               	movlb	15	; () banked
  3471  013956  911D               	bcf	29,0,b	;volatile
  3472  013958                     l454:
  3473                           
  3474                           ; BSR set to: 15
  3475                           ;inc\CANlib.h: 717: if (mask & 0x00020000)
  3476  013958  0100               	movlb	0	; () banked
  3477  01395A  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3478  01395C  D003               	goto	l455
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;inc\CANlib.h: 718: RXM1SIDLbits.EID17 = 0x01;
  3482  01395E  010F               	movlb	15	; () banked
  3483  013960  831D               	bsf	29,1,b	;volatile
  3484  013962  D002               	goto	l456
  3485  013964                     l455:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;inc\CANlib.h: 719: else
  3489                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x00;
  3490  013964  010F               	movlb	15	; () banked
  3491  013966  931D               	bcf	29,1,b	;volatile
  3492  013968                     l456:
  3493                           
  3494                           ; BSR set to: 15
  3495                           ;inc\CANlib.h: 722: if (mask & 0x00040000)
  3496  013968  0100               	movlb	0	; () banked
  3497  01396A  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3498  01396C  D003               	goto	l457
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 723: RXM1SIDLbits.SID0 = 0x01;
  3502  01396E  010F               	movlb	15	; () banked
  3503  013970  8B1D               	bsf	29,5,b	;volatile
  3504  013972  D002               	goto	l458
  3505  013974                     l457:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 724: else
  3509                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x00;
  3510  013974  010F               	movlb	15	; () banked
  3511  013976  9B1D               	bcf	29,5,b	;volatile
  3512  013978                     l458:
  3513                           
  3514                           ; BSR set to: 15
  3515                           ;inc\CANlib.h: 727: if (mask & 0x00080000)
  3516  013978  0100               	movlb	0	; () banked
  3517  01397A  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3518  01397C  D003               	goto	l459
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;inc\CANlib.h: 728: RXM1SIDLbits.SID1 = 0x01;
  3522  01397E  010F               	movlb	15	; () banked
  3523  013980  8D1D               	bsf	29,6,b	;volatile
  3524  013982  D002               	goto	l460
  3525  013984                     l459:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;inc\CANlib.h: 729: else
  3529                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x00;
  3530  013984  010F               	movlb	15	; () banked
  3531  013986  9D1D               	bcf	29,6,b	;volatile
  3532  013988                     l460:
  3533                           
  3534                           ; BSR set to: 15
  3535                           ;inc\CANlib.h: 732: if (mask & 0x00100000)
  3536  013988  0100               	movlb	0	; () banked
  3537  01398A  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3538  01398C  D003               	goto	l461
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;inc\CANlib.h: 733: RXM1SIDLbits.SID2 = 0x01 ;
  3542  01398E  010F               	movlb	15	; () banked
  3543  013990  8F1D               	bsf	29,7,b	;volatile
  3544  013992  D002               	goto	l7081
  3545  013994                     l461:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;inc\CANlib.h: 734: else
  3549                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x00 ;
  3550  013994  010F               	movlb	15	; () banked
  3551  013996  9F1D               	bcf	29,7,b	;volatile
  3552  013998                     l7081:
  3553                           
  3554                           ; BSR set to: 15
  3555                           ;inc\CANlib.h: 737: tamp = (mask >> 21);
  3556  013998  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3557  01399C  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3558  0139A0  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3559  0139A4  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3560  0139A8  0E16               	movlw	22
  3561  0139AA  D006               	goto	u9140
  3562  0139AC                     u9145:
  3563  0139AC  0100               	movlb	0	; () banked
  3564  0139AE  90D8               	bcf	status,0,c
  3565  0139B0  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3566  0139B2  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3567  0139B4  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3568  0139B6  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3569  0139B8                     u9140:
  3570  0139B8  2EE8               	decfsz	wreg,f,c
  3571  0139BA  D7F8               	goto	u9145
  3572  0139BC  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3573  0139C0  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3574  0139C4  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3575  0139C8  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;inc\CANlib.h: 738: tamp = tamp & 0x000000FF;
  3579  0139CC  0100               	movlb	0	; () banked
  3580  0139CE  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3581  0139D0  0100               	movlb	0	; () banked
  3582  0139D2  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3583  0139D4  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3584  0139D6  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3585  0139D8  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;inc\CANlib.h: 739: RXM1SIDH = (unsigned char) tamp;
  3589  0139DA  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3590  0139DE  0012               	return	
  3591  0139E0                     __end_of_CANSetMask:
  3592                           	opt stack 0
  3593                           tblptru	equ	0xFF8
  3594                           tblptrh	equ	0xFF7
  3595                           tblptrl	equ	0xFF6
  3596                           tablat	equ	0xFF5
  3597                           intcon	equ	0xFF2
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function _CANSetFilter *****************
  3603 ;; Defined at:
  3604 ;;		line 747 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  numBuffer       1    wreg     enum E16924
  3607 ;;  filter          4   14[BANK0 ] unsigned long 
  3608 ;;  type            1   18[BANK0 ] enum E16887
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  numBuffer       1   23[BANK0 ] enum E16924
  3611 ;;  tamp            4   24[BANK0 ] unsigned long 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;		None               void
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3621 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;Total ram usage:       14 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    3
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_CANInitialize
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text8
  3636  010000                     __ptext8:
  3637                           	opt stack 0
  3638  010000                     _CANSetFilter:
  3639                           	opt stack 25
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;incstack = 0
  3643                           ;CANSetFilter@numBuffer stored from wreg
  3644  010000  0100               	movlb	0	; () banked
  3645  010002  6F77               	movwf	CANSetFilter@numBuffer& (0+255),b
  3646                           
  3647                           ;inc\CANlib.h: 749: unsigned long tamp;
  3648                           ;inc\CANlib.h: 751: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3649  010004  0100               	movlb	0	; () banked
  3650  010006  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3651  010008  0100               	movlb	0	; () banked
  3652  01000A  A4D8               	btfss	status,2,c
  3653  01000C  D058               	goto	l7105
  3654                           
  3655                           ; BSR set to: 0
  3656  01000E  0100               	movlb	0	; () banked
  3657  010010  2972               	incf	CANSetFilter@type& (0+255),w,b
  3658  010012  A4D8               	btfss	status,2,c
  3659  010014  D054               	goto	l7105
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;inc\CANlib.h: 752: {
  3663                           ;inc\CANlib.h: 753: RXF0SIDLbits.EXIDEN = 0x00;
  3664  010016  010F               	movlb	15	; () banked
  3665  010018  9701               	bcf	1,3,b	;volatile
  3666                           
  3667                           ; BSR set to: 15
  3668                           ;inc\CANlib.h: 755: tamp = (filter >> 3);
  3669  01001A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3670  01001E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3671  010022  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3672  010026  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3673  01002A  0E04               	movlw	4
  3674  01002C  D006               	goto	u9170
  3675  01002E                     u9175:
  3676  01002E  0100               	movlb	0	; () banked
  3677  010030  90D8               	bcf	status,0,c
  3678  010032  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3679  010034  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3680  010036  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3681  010038  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3682  01003A                     u9170:
  3683  01003A  2EE8               	decfsz	wreg,f,c
  3684  01003C  D7F8               	goto	u9175
  3685  01003E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3686  010042  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3687  010046  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3688  01004A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;inc\CANlib.h: 756: tamp = tamp & 0x000000FF;
  3692  01004E  0100               	movlb	0	; () banked
  3693  010050  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3694  010052  0100               	movlb	0	; () banked
  3695  010054  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3696  010056  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3697  010058  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3698  01005A  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;inc\CANlib.h: 757: RXF0SIDH = (unsigned char) tamp;
  3702  01005C  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;inc\CANlib.h: 759: tamp = filter & 0x00000007;
  3706  010060  0E07               	movlw	7
  3707  010062  0100               	movlb	0	; () banked
  3708  010064  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3709  010066  0100               	movlb	0	; () banked
  3710  010068  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3711  01006A  0E00               	movlw	0
  3712  01006C  0100               	movlb	0	; () banked
  3713  01006E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3714  010070  0100               	movlb	0	; () banked
  3715  010072  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3716  010074  0E00               	movlw	0
  3717  010076  0100               	movlb	0	; () banked
  3718  010078  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3719  01007A  0100               	movlb	0	; () banked
  3720  01007C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3721  01007E  0E00               	movlw	0
  3722  010080  0100               	movlb	0	; () banked
  3723  010082  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3724  010084  0100               	movlb	0	; () banked
  3725  010086  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;inc\CANlib.h: 760: tamp = tamp << 5;
  3729  010088  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3730  01008C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3731  010090  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3732  010094  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3733  010098  0E05               	movlw	5
  3734  01009A                     u9185:
  3735  01009A  90D8               	bcf	status,0,c
  3736  01009C  0100               	movlb	0	; () banked
  3737  01009E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3738  0100A0  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3739  0100A2  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3740  0100A4  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3741  0100A6  2EE8               	decfsz	wreg,f,c
  3742  0100A8  D7F8               	goto	u9185
  3743  0100AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3744  0100AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3745  0100B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3746  0100B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 761: RXF0SIDL = (unsigned char) tamp;
  3750  0100BA  C078  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3751  0100BE                     l7105:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;inc\CANlib.h: 762: }
  3755                           ;inc\CANlib.h: 764: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3756  0100BE  0100               	movlb	0	; () banked
  3757  0100C0  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3758  0100C2  A4D8               	btfss	status,2,c
  3759  0100C4  D058               	goto	l7123
  3760                           
  3761                           ; BSR set to: 0
  3762  0100C6  0100               	movlb	0	; () banked
  3763  0100C8  2972               	incf	CANSetFilter@type& (0+255),w,b
  3764  0100CA  A4D8               	btfss	status,2,c
  3765  0100CC  D054               	goto	l7123
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;inc\CANlib.h: 765: {
  3769                           ;inc\CANlib.h: 766: RXF1SIDLbits.EXIDEN = 0x00;
  3770  0100CE  010F               	movlb	15	; () banked
  3771  0100D0  9705               	bcf	5,3,b	;volatile
  3772                           
  3773                           ; BSR set to: 15
  3774                           ;inc\CANlib.h: 768: tamp = (filter >> 3);
  3775  0100D2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3776  0100D6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3777  0100DA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3778  0100DE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3779  0100E2  0E04               	movlw	4
  3780  0100E4  D006               	goto	u9210
  3781  0100E6                     u9215:
  3782  0100E6  0100               	movlb	0	; () banked
  3783  0100E8  90D8               	bcf	status,0,c
  3784  0100EA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3785  0100EC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3786  0100EE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3787  0100F0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3788  0100F2                     u9210:
  3789  0100F2  2EE8               	decfsz	wreg,f,c
  3790  0100F4  D7F8               	goto	u9215
  3791  0100F6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3792  0100FA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3793  0100FE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3794  010102  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;inc\CANlib.h: 769: tamp = tamp & 0x000000FF;
  3798  010106  0100               	movlb	0	; () banked
  3799  010108  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3800  01010A  0100               	movlb	0	; () banked
  3801  01010C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3802  01010E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3803  010110  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3804  010112  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;inc\CANlib.h: 770: RXF1SIDH = (unsigned char) tamp;
  3808  010114  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;inc\CANlib.h: 772: tamp = filter & 0x00000007;
  3812  010118  0E07               	movlw	7
  3813  01011A  0100               	movlb	0	; () banked
  3814  01011C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3815  01011E  0100               	movlb	0	; () banked
  3816  010120  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3817  010122  0E00               	movlw	0
  3818  010124  0100               	movlb	0	; () banked
  3819  010126  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3820  010128  0100               	movlb	0	; () banked
  3821  01012A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3822  01012C  0E00               	movlw	0
  3823  01012E  0100               	movlb	0	; () banked
  3824  010130  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3825  010132  0100               	movlb	0	; () banked
  3826  010134  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3827  010136  0E00               	movlw	0
  3828  010138  0100               	movlb	0	; () banked
  3829  01013A  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3830  01013C  0100               	movlb	0	; () banked
  3831  01013E  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;inc\CANlib.h: 773: tamp = tamp << 5;
  3835  010140  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3836  010144  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3837  010148  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3838  01014C  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3839  010150  0E05               	movlw	5
  3840  010152                     u9225:
  3841  010152  90D8               	bcf	status,0,c
  3842  010154  0100               	movlb	0	; () banked
  3843  010156  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3844  010158  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3845  01015A  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3846  01015C  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3847  01015E  2EE8               	decfsz	wreg,f,c
  3848  010160  D7F8               	goto	u9225
  3849  010162  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3850  010166  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3851  01016A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3852  01016E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;inc\CANlib.h: 774: RXF1SIDL = (unsigned char) tamp;
  3856  010172  C078  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3857  010176                     l7123:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;inc\CANlib.h: 775: }
  3861                           ;inc\CANlib.h: 777: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3862  010176  0E02               	movlw	2
  3863  010178  0100               	movlb	0	; () banked
  3864  01017A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3865  01017C  A4D8               	btfss	status,2,c
  3866  01017E  D058               	goto	l7141
  3867                           
  3868                           ; BSR set to: 0
  3869  010180  0100               	movlb	0	; () banked
  3870  010182  2972               	incf	CANSetFilter@type& (0+255),w,b
  3871  010184  A4D8               	btfss	status,2,c
  3872  010186  D054               	goto	l7141
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;inc\CANlib.h: 778: {
  3876                           ;inc\CANlib.h: 779: RXF2SIDLbits.EXIDEN = 0x00;
  3877  010188  010F               	movlb	15	; () banked
  3878  01018A  9709               	bcf	9,3,b	;volatile
  3879                           
  3880                           ; BSR set to: 15
  3881                           ;inc\CANlib.h: 781: tamp = (filter >> 3);
  3882  01018C  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3883  010190  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3884  010194  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3885  010198  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3886  01019C  0E04               	movlw	4
  3887  01019E  D006               	goto	u9250
  3888  0101A0                     u9255:
  3889  0101A0  0100               	movlb	0	; () banked
  3890  0101A2  90D8               	bcf	status,0,c
  3891  0101A4  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3892  0101A6  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3893  0101A8  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3894  0101AA  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3895  0101AC                     u9250:
  3896  0101AC  2EE8               	decfsz	wreg,f,c
  3897  0101AE  D7F8               	goto	u9255
  3898  0101B0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3899  0101B4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3900  0101B8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3901  0101BC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;inc\CANlib.h: 782: tamp = tamp & 0x000000FF;
  3905  0101C0  0100               	movlb	0	; () banked
  3906  0101C2  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3907  0101C4  0100               	movlb	0	; () banked
  3908  0101C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3909  0101C8  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3910  0101CA  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3911  0101CC  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;inc\CANlib.h: 783: RXF2SIDH = (unsigned char) tamp;
  3915  0101CE  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;inc\CANlib.h: 785: tamp = filter & 0x00000007;
  3919  0101D2  0E07               	movlw	7
  3920  0101D4  0100               	movlb	0	; () banked
  3921  0101D6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3922  0101D8  0100               	movlb	0	; () banked
  3923  0101DA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3924  0101DC  0E00               	movlw	0
  3925  0101DE  0100               	movlb	0	; () banked
  3926  0101E0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3927  0101E2  0100               	movlb	0	; () banked
  3928  0101E4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3929  0101E6  0E00               	movlw	0
  3930  0101E8  0100               	movlb	0	; () banked
  3931  0101EA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3932  0101EC  0100               	movlb	0	; () banked
  3933  0101EE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3934  0101F0  0E00               	movlw	0
  3935  0101F2  0100               	movlb	0	; () banked
  3936  0101F4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3937  0101F6  0100               	movlb	0	; () banked
  3938  0101F8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;inc\CANlib.h: 786: tamp = tamp << 5;
  3942  0101FA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3943  0101FE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3944  010202  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3945  010206  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3946  01020A  0E05               	movlw	5
  3947  01020C                     u9265:
  3948  01020C  90D8               	bcf	status,0,c
  3949  01020E  0100               	movlb	0	; () banked
  3950  010210  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3951  010212  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3952  010214  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3953  010216  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3954  010218  2EE8               	decfsz	wreg,f,c
  3955  01021A  D7F8               	goto	u9265
  3956  01021C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3957  010220  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3958  010224  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3959  010228  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;inc\CANlib.h: 787: RXF2SIDL = (unsigned char) tamp;
  3963  01022C  C078  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3964  010230                     l7141:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;inc\CANlib.h: 788: }
  3968                           ;inc\CANlib.h: 790: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3969  010230  0E03               	movlw	3
  3970  010232  0100               	movlb	0	; () banked
  3971  010234  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3972  010236  A4D8               	btfss	status,2,c
  3973  010238  D058               	goto	l7159
  3974                           
  3975                           ; BSR set to: 0
  3976  01023A  0100               	movlb	0	; () banked
  3977  01023C  2972               	incf	CANSetFilter@type& (0+255),w,b
  3978  01023E  A4D8               	btfss	status,2,c
  3979  010240  D054               	goto	l7159
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;inc\CANlib.h: 791: {
  3983                           ;inc\CANlib.h: 792: RXF3SIDLbits.EXIDEN = 0x00;
  3984  010242  010F               	movlb	15	; () banked
  3985  010244  970D               	bcf	13,3,b	;volatile
  3986                           
  3987                           ; BSR set to: 15
  3988                           ;inc\CANlib.h: 794: tamp = (filter >> 3);
  3989  010246  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3990  01024A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3991  01024E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3992  010252  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3993  010256  0E04               	movlw	4
  3994  010258  D006               	goto	u9290
  3995  01025A                     u9295:
  3996  01025A  0100               	movlb	0	; () banked
  3997  01025C  90D8               	bcf	status,0,c
  3998  01025E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3999  010260  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4000  010262  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4001  010264  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4002  010266                     u9290:
  4003  010266  2EE8               	decfsz	wreg,f,c
  4004  010268  D7F8               	goto	u9295
  4005  01026A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4006  01026E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4007  010272  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4008  010276  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 795: tamp = tamp & 0x000000FF;
  4012  01027A  0100               	movlb	0	; () banked
  4013  01027C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4014  01027E  0100               	movlb	0	; () banked
  4015  010280  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4016  010282  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4017  010284  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4018  010286  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;inc\CANlib.h: 796: RXF3SIDH = (unsigned char) tamp;
  4022  010288  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;inc\CANlib.h: 798: tamp = filter & 0x00000007;
  4026  01028C  0E07               	movlw	7
  4027  01028E  0100               	movlb	0	; () banked
  4028  010290  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4029  010292  0100               	movlb	0	; () banked
  4030  010294  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4031  010296  0E00               	movlw	0
  4032  010298  0100               	movlb	0	; () banked
  4033  01029A  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4034  01029C  0100               	movlb	0	; () banked
  4035  01029E  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4036  0102A0  0E00               	movlw	0
  4037  0102A2  0100               	movlb	0	; () banked
  4038  0102A4  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4039  0102A6  0100               	movlb	0	; () banked
  4040  0102A8  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4041  0102AA  0E00               	movlw	0
  4042  0102AC  0100               	movlb	0	; () banked
  4043  0102AE  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4044  0102B0  0100               	movlb	0	; () banked
  4045  0102B2  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;inc\CANlib.h: 799: tamp = tamp << 5;
  4049  0102B4  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4050  0102B8  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4051  0102BC  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4052  0102C0  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4053  0102C4  0E05               	movlw	5
  4054  0102C6                     u9305:
  4055  0102C6  90D8               	bcf	status,0,c
  4056  0102C8  0100               	movlb	0	; () banked
  4057  0102CA  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4058  0102CC  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4059  0102CE  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4060  0102D0  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4061  0102D2  2EE8               	decfsz	wreg,f,c
  4062  0102D4  D7F8               	goto	u9305
  4063  0102D6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4064  0102DA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4065  0102DE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4066  0102E2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;inc\CANlib.h: 800: RXF3SIDL = (unsigned char) tamp;
  4070  0102E6  C078  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4071  0102EA                     l7159:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;inc\CANlib.h: 801: }
  4075                           ;inc\CANlib.h: 803: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4076  0102EA  0E04               	movlw	4
  4077  0102EC  0100               	movlb	0	; () banked
  4078  0102EE  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4079  0102F0  A4D8               	btfss	status,2,c
  4080  0102F2  D058               	goto	l7177
  4081                           
  4082                           ; BSR set to: 0
  4083  0102F4  0100               	movlb	0	; () banked
  4084  0102F6  2972               	incf	CANSetFilter@type& (0+255),w,b
  4085  0102F8  A4D8               	btfss	status,2,c
  4086  0102FA  D054               	goto	l7177
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;inc\CANlib.h: 804: {
  4090                           ;inc\CANlib.h: 805: RXF4SIDLbits.EXIDEN = 0x00;
  4091  0102FC  010F               	movlb	15	; () banked
  4092  0102FE  9711               	bcf	17,3,b	;volatile
  4093                           
  4094                           ; BSR set to: 15
  4095                           ;inc\CANlib.h: 807: tamp = (filter >> 3);
  4096  010300  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4097  010304  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4098  010308  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4099  01030C  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4100  010310  0E04               	movlw	4
  4101  010312  D006               	goto	u9330
  4102  010314                     u9335:
  4103  010314  0100               	movlb	0	; () banked
  4104  010316  90D8               	bcf	status,0,c
  4105  010318  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4106  01031A  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4107  01031C  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4108  01031E  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4109  010320                     u9330:
  4110  010320  2EE8               	decfsz	wreg,f,c
  4111  010322  D7F8               	goto	u9335
  4112  010324  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4113  010328  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4114  01032C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4115  010330  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;inc\CANlib.h: 808: tamp = tamp & 0x000000FF;
  4119  010334  0100               	movlb	0	; () banked
  4120  010336  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4121  010338  0100               	movlb	0	; () banked
  4122  01033A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4123  01033C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4124  01033E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4125  010340  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;inc\CANlib.h: 809: RXF4SIDH = (unsigned char) tamp;
  4129  010342  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;inc\CANlib.h: 811: tamp = filter & 0x00000007;
  4133  010346  0E07               	movlw	7
  4134  010348  0100               	movlb	0	; () banked
  4135  01034A  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4136  01034C  0100               	movlb	0	; () banked
  4137  01034E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4138  010350  0E00               	movlw	0
  4139  010352  0100               	movlb	0	; () banked
  4140  010354  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4141  010356  0100               	movlb	0	; () banked
  4142  010358  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4143  01035A  0E00               	movlw	0
  4144  01035C  0100               	movlb	0	; () banked
  4145  01035E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4146  010360  0100               	movlb	0	; () banked
  4147  010362  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4148  010364  0E00               	movlw	0
  4149  010366  0100               	movlb	0	; () banked
  4150  010368  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4151  01036A  0100               	movlb	0	; () banked
  4152  01036C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;inc\CANlib.h: 812: tamp = tamp << 5;
  4156  01036E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4157  010372  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4158  010376  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4159  01037A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4160  01037E  0E05               	movlw	5
  4161  010380                     u9345:
  4162  010380  90D8               	bcf	status,0,c
  4163  010382  0100               	movlb	0	; () banked
  4164  010384  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4165  010386  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4166  010388  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4167  01038A  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4168  01038C  2EE8               	decfsz	wreg,f,c
  4169  01038E  D7F8               	goto	u9345
  4170  010390  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4171  010394  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4172  010398  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4173  01039C  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;inc\CANlib.h: 813: RXF4SIDL = (unsigned char) tamp;
  4177  0103A0  C078  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4178  0103A4                     l7177:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;inc\CANlib.h: 814: }
  4182                           ;inc\CANlib.h: 816: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4183  0103A4  0E05               	movlw	5
  4184  0103A6  0100               	movlb	0	; () banked
  4185  0103A8  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4186  0103AA  A4D8               	btfss	status,2,c
  4187  0103AC  D058               	goto	l7195
  4188                           
  4189                           ; BSR set to: 0
  4190  0103AE  0100               	movlb	0	; () banked
  4191  0103B0  2972               	incf	CANSetFilter@type& (0+255),w,b
  4192  0103B2  A4D8               	btfss	status,2,c
  4193  0103B4  D054               	goto	l7195
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;inc\CANlib.h: 817: {
  4197                           ;inc\CANlib.h: 818: RXF5SIDLbits.EXIDEN = 0x00;
  4198  0103B6  010F               	movlb	15	; () banked
  4199  0103B8  9715               	bcf	21,3,b	;volatile
  4200                           
  4201                           ; BSR set to: 15
  4202                           ;inc\CANlib.h: 820: tamp = (filter >> 3);
  4203  0103BA  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4204  0103BE  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4205  0103C2  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4206  0103C6  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4207  0103CA  0E04               	movlw	4
  4208  0103CC  D006               	goto	u9370
  4209  0103CE                     u9375:
  4210  0103CE  0100               	movlb	0	; () banked
  4211  0103D0  90D8               	bcf	status,0,c
  4212  0103D2  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4213  0103D4  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4214  0103D6  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4215  0103D8  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4216  0103DA                     u9370:
  4217  0103DA  2EE8               	decfsz	wreg,f,c
  4218  0103DC  D7F8               	goto	u9375
  4219  0103DE  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4220  0103E2  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4221  0103E6  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4222  0103EA  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 821: tamp = tamp & 0x000000FF;
  4226  0103EE  0100               	movlb	0	; () banked
  4227  0103F0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4228  0103F2  0100               	movlb	0	; () banked
  4229  0103F4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4230  0103F6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4231  0103F8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4232  0103FA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;inc\CANlib.h: 822: RXF5SIDH = (unsigned char) tamp;
  4236  0103FC  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;inc\CANlib.h: 824: tamp = filter & 0x00000007;
  4240  010400  0E07               	movlw	7
  4241  010402  0100               	movlb	0	; () banked
  4242  010404  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4243  010406  0100               	movlb	0	; () banked
  4244  010408  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4245  01040A  0E00               	movlw	0
  4246  01040C  0100               	movlb	0	; () banked
  4247  01040E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4248  010410  0100               	movlb	0	; () banked
  4249  010412  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4250  010414  0E00               	movlw	0
  4251  010416  0100               	movlb	0	; () banked
  4252  010418  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4253  01041A  0100               	movlb	0	; () banked
  4254  01041C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4255  01041E  0E00               	movlw	0
  4256  010420  0100               	movlb	0	; () banked
  4257  010422  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4258  010424  0100               	movlb	0	; () banked
  4259  010426  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;inc\CANlib.h: 825: tamp = tamp << 5;
  4263  010428  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4264  01042C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4265  010430  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4266  010434  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4267  010438  0E05               	movlw	5
  4268  01043A                     u9385:
  4269  01043A  90D8               	bcf	status,0,c
  4270  01043C  0100               	movlb	0	; () banked
  4271  01043E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4272  010440  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4273  010442  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4274  010444  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4275  010446  2EE8               	decfsz	wreg,f,c
  4276  010448  D7F8               	goto	u9385
  4277  01044A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4278  01044E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4279  010452  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4280  010456  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 826: RXF5SIDL = (unsigned char) tamp;
  4284  01045A  C078  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4285  01045E                     l7195:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;inc\CANlib.h: 827: }
  4289                           ;inc\CANlib.h: 830: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4290  01045E  0100               	movlb	0	; () banked
  4291  010460  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4292  010462  0100               	movlb	0	; () banked
  4293  010464  A4D8               	btfss	status,2,c
  4294  010466  D089               	goto	l7229
  4295                           
  4296                           ; BSR set to: 0
  4297  010468  0EF7               	movlw	247
  4298  01046A  0100               	movlb	0	; () banked
  4299  01046C  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4300  01046E  A4D8               	btfss	status,2,c
  4301  010470  D084               	goto	l7229
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 831: {
  4305                           ;inc\CANlib.h: 832: RXF0SIDLbits.EXIDEN = 0x01;
  4306  010472  010F               	movlb	15	; () banked
  4307  010474  8701               	bsf	1,3,b	;volatile
  4308                           
  4309                           ; BSR set to: 15
  4310                           ;inc\CANlib.h: 834: tamp = filter & 0x000000FF;
  4311  010476  0100               	movlb	0	; () banked
  4312  010478  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4313  01047A  0100               	movlb	0	; () banked
  4314  01047C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4315  01047E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4316  010480  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4317  010482  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;inc\CANlib.h: 835: RXF0EIDL = (unsigned char) tamp;
  4321  010484  C078  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 837: tamp = filter & 0x0000FF00;
  4325  010488  0E00               	movlw	0
  4326  01048A  0100               	movlb	0	; () banked
  4327  01048C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4328  01048E  0100               	movlb	0	; () banked
  4329  010490  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4330  010492  0EFF               	movlw	255
  4331  010494  0100               	movlb	0	; () banked
  4332  010496  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4333  010498  0100               	movlb	0	; () banked
  4334  01049A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4335  01049C  0E00               	movlw	0
  4336  01049E  0100               	movlb	0	; () banked
  4337  0104A0  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4338  0104A2  0100               	movlb	0	; () banked
  4339  0104A4  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4340  0104A6  0E00               	movlw	0
  4341  0104A8  0100               	movlb	0	; () banked
  4342  0104AA  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4343  0104AC  0100               	movlb	0	; () banked
  4344  0104AE  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;inc\CANlib.h: 838: tamp = tamp >> 8;
  4348  0104B0  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4349  0104B4  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4350  0104B8  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4351  0104BC  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4352  0104C0  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4353  0104C4  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4354  0104C8  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4355  0104CC  0100               	movlb	0	; () banked
  4356  0104CE  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4357  0104D0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4358  0104D4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4359  0104D8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4360  0104DC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;inc\CANlib.h: 839: RXF0EIDH = (unsigned char) tamp;
  4364  0104E0  C078  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;inc\CANlib.h: 841: if (filter & 0x00010000)
  4368  0104E4  0100               	movlb	0	; () banked
  4369  0104E6  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4370  0104E8  D003               	goto	l473
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;inc\CANlib.h: 842: RXF0SIDLbits.EID16 = 0x01;
  4374  0104EA  010F               	movlb	15	; () banked
  4375  0104EC  8101               	bsf	1,0,b	;volatile
  4376  0104EE  D002               	goto	l474
  4377  0104F0                     l473:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;inc\CANlib.h: 843: else
  4381                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x00;
  4382  0104F0  010F               	movlb	15	; () banked
  4383  0104F2  9101               	bcf	1,0,b	;volatile
  4384  0104F4                     l474:
  4385                           
  4386                           ; BSR set to: 15
  4387                           ;inc\CANlib.h: 846: if (filter & 0x00020000)
  4388  0104F4  0100               	movlb	0	; () banked
  4389  0104F6  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4390  0104F8  D003               	goto	l475
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;inc\CANlib.h: 847: RXF0SIDLbits.EID17 = 0x01;
  4394  0104FA  010F               	movlb	15	; () banked
  4395  0104FC  8301               	bsf	1,1,b	;volatile
  4396  0104FE  D002               	goto	l476
  4397  010500                     l475:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;inc\CANlib.h: 848: else
  4401                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x00;
  4402  010500  010F               	movlb	15	; () banked
  4403  010502  9301               	bcf	1,1,b	;volatile
  4404  010504                     l476:
  4405                           
  4406                           ; BSR set to: 15
  4407                           ;inc\CANlib.h: 851: if (filter & 0x00040000)
  4408  010504  0100               	movlb	0	; () banked
  4409  010506  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4410  010508  D003               	goto	l477
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 852: RXF0SIDLbits.SID0 = 0x01;
  4414  01050A  010F               	movlb	15	; () banked
  4415  01050C  8B01               	bsf	1,5,b	;volatile
  4416  01050E  D002               	goto	l478
  4417  010510                     l477:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;inc\CANlib.h: 853: else
  4421                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x00;
  4422  010510  010F               	movlb	15	; () banked
  4423  010512  9B01               	bcf	1,5,b	;volatile
  4424  010514                     l478:
  4425                           
  4426                           ; BSR set to: 15
  4427                           ;inc\CANlib.h: 856: if (filter & 0x00080000)
  4428  010514  0100               	movlb	0	; () banked
  4429  010516  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4430  010518  D003               	goto	l479
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;inc\CANlib.h: 857: RXF0SIDLbits.SID1 = 0x01;
  4434  01051A  010F               	movlb	15	; () banked
  4435  01051C  8D01               	bsf	1,6,b	;volatile
  4436  01051E  D002               	goto	l480
  4437  010520                     l479:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 858: else
  4441                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x00;
  4442  010520  010F               	movlb	15	; () banked
  4443  010522  9D01               	bcf	1,6,b	;volatile
  4444  010524                     l480:
  4445                           
  4446                           ; BSR set to: 15
  4447                           ;inc\CANlib.h: 861: if (filter & 0x00100000)
  4448  010524  0100               	movlb	0	; () banked
  4449  010526  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4450  010528  D003               	goto	l481
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;inc\CANlib.h: 862: RXF0SIDLbits.SID2 = 0x01 ;
  4454  01052A  010F               	movlb	15	; () banked
  4455  01052C  8F01               	bsf	1,7,b	;volatile
  4456  01052E  D002               	goto	l7223
  4457  010530                     l481:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;inc\CANlib.h: 863: else
  4461                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x00 ;
  4462  010530  010F               	movlb	15	; () banked
  4463  010532  9F01               	bcf	1,7,b	;volatile
  4464  010534                     l7223:
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;inc\CANlib.h: 866: tamp = (filter >> 21);
  4468  010534  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4469  010538  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4470  01053C  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4471  010540  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4472  010544  0E16               	movlw	22
  4473  010546  D006               	goto	u9460
  4474  010548                     u9465:
  4475  010548  0100               	movlb	0	; () banked
  4476  01054A  90D8               	bcf	status,0,c
  4477  01054C  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4478  01054E  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4479  010550  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4480  010552  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4481  010554                     u9460:
  4482  010554  2EE8               	decfsz	wreg,f,c
  4483  010556  D7F8               	goto	u9465
  4484  010558  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4485  01055C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4486  010560  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4487  010564  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 867: tamp = tamp & 0x000000FF;
  4491  010568  0100               	movlb	0	; () banked
  4492  01056A  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4493  01056C  0100               	movlb	0	; () banked
  4494  01056E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4495  010570  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4496  010572  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4497  010574  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;inc\CANlib.h: 868: RXF0SIDH = (unsigned char) tamp;
  4501  010576  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4502  01057A                     l7229:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;inc\CANlib.h: 869: }
  4506                           ;inc\CANlib.h: 871: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4507  01057A  0100               	movlb	0	; () banked
  4508  01057C  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4509  01057E  A4D8               	btfss	status,2,c
  4510  010580  D089               	goto	l7263
  4511                           
  4512                           ; BSR set to: 0
  4513  010582  0EF7               	movlw	247
  4514  010584  0100               	movlb	0	; () banked
  4515  010586  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4516  010588  A4D8               	btfss	status,2,c
  4517  01058A  D084               	goto	l7263
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;inc\CANlib.h: 872: {
  4521                           ;inc\CANlib.h: 873: RXF1SIDLbits.EXIDEN = 0x01;
  4522  01058C  010F               	movlb	15	; () banked
  4523  01058E  8705               	bsf	5,3,b	;volatile
  4524                           
  4525                           ; BSR set to: 15
  4526                           ;inc\CANlib.h: 875: tamp = filter & 0x000000FF;
  4527  010590  0100               	movlb	0	; () banked
  4528  010592  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4529  010594  0100               	movlb	0	; () banked
  4530  010596  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4531  010598  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4532  01059A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4533  01059C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;inc\CANlib.h: 876: RXF1EIDL = (unsigned char) tamp;
  4537  01059E  C078  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;inc\CANlib.h: 878: tamp = filter & 0x0000FF00;
  4541  0105A2  0E00               	movlw	0
  4542  0105A4  0100               	movlb	0	; () banked
  4543  0105A6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4544  0105A8  0100               	movlb	0	; () banked
  4545  0105AA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4546  0105AC  0EFF               	movlw	255
  4547  0105AE  0100               	movlb	0	; () banked
  4548  0105B0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4549  0105B2  0100               	movlb	0	; () banked
  4550  0105B4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4551  0105B6  0E00               	movlw	0
  4552  0105B8  0100               	movlb	0	; () banked
  4553  0105BA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4554  0105BC  0100               	movlb	0	; () banked
  4555  0105BE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4556  0105C0  0E00               	movlw	0
  4557  0105C2  0100               	movlb	0	; () banked
  4558  0105C4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4559  0105C6  0100               	movlb	0	; () banked
  4560  0105C8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;inc\CANlib.h: 879: tamp = tamp >> 8;
  4564  0105CA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4565  0105CE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4566  0105D2  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4567  0105D6  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4568  0105DA  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4569  0105DE  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4570  0105E2  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4571  0105E6  0100               	movlb	0	; () banked
  4572  0105E8  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4573  0105EA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4574  0105EE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4575  0105F2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4576  0105F6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;inc\CANlib.h: 880: RXF1EIDH = (unsigned char) tamp;
  4580  0105FA  C078  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;inc\CANlib.h: 882: if (filter & 0x00010000)
  4584  0105FE  0100               	movlb	0	; () banked
  4585  010600  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4586  010602  D003               	goto	l484
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;inc\CANlib.h: 883: RXF1SIDLbits.EID16 = 0x01;
  4590  010604  010F               	movlb	15	; () banked
  4591  010606  8105               	bsf	5,0,b	;volatile
  4592  010608  D002               	goto	l485
  4593  01060A                     l484:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;inc\CANlib.h: 884: else
  4597                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x00;
  4598  01060A  010F               	movlb	15	; () banked
  4599  01060C  9105               	bcf	5,0,b	;volatile
  4600  01060E                     l485:
  4601                           
  4602                           ; BSR set to: 15
  4603                           ;inc\CANlib.h: 887: if (filter & 0x00020000)
  4604  01060E  0100               	movlb	0	; () banked
  4605  010610  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4606  010612  D003               	goto	l486
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;inc\CANlib.h: 888: RXF1SIDLbits.EID17 = 0x01;
  4610  010614  010F               	movlb	15	; () banked
  4611  010616  8305               	bsf	5,1,b	;volatile
  4612  010618  D002               	goto	l487
  4613  01061A                     l486:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;inc\CANlib.h: 889: else
  4617                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x00;
  4618  01061A  010F               	movlb	15	; () banked
  4619  01061C  9305               	bcf	5,1,b	;volatile
  4620  01061E                     l487:
  4621                           
  4622                           ; BSR set to: 15
  4623                           ;inc\CANlib.h: 892: if (filter & 0x00040000)
  4624  01061E  0100               	movlb	0	; () banked
  4625  010620  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4626  010622  D003               	goto	l488
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 893: RXF1SIDLbits.SID0 = 0x01;
  4630  010624  010F               	movlb	15	; () banked
  4631  010626  8B05               	bsf	5,5,b	;volatile
  4632  010628  D002               	goto	l489
  4633  01062A                     l488:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;inc\CANlib.h: 894: else
  4637                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x00;
  4638  01062A  010F               	movlb	15	; () banked
  4639  01062C  9B05               	bcf	5,5,b	;volatile
  4640  01062E                     l489:
  4641                           
  4642                           ; BSR set to: 15
  4643                           ;inc\CANlib.h: 897: if (filter & 0x00080000)
  4644  01062E  0100               	movlb	0	; () banked
  4645  010630  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4646  010632  D003               	goto	l490
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;inc\CANlib.h: 898: RXF1SIDLbits.SID1 = 0x01;
  4650  010634  010F               	movlb	15	; () banked
  4651  010636  8D05               	bsf	5,6,b	;volatile
  4652  010638  D002               	goto	l491
  4653  01063A                     l490:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;inc\CANlib.h: 899: else
  4657                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x00;
  4658  01063A  010F               	movlb	15	; () banked
  4659  01063C  9D05               	bcf	5,6,b	;volatile
  4660  01063E                     l491:
  4661                           
  4662                           ; BSR set to: 15
  4663                           ;inc\CANlib.h: 902: if (filter & 0x00100000)
  4664  01063E  0100               	movlb	0	; () banked
  4665  010640  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4666  010642  D003               	goto	l492
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 903: RXF1SIDLbits.SID2 = 0x01 ;
  4670  010644  010F               	movlb	15	; () banked
  4671  010646  8F05               	bsf	5,7,b	;volatile
  4672  010648  D002               	goto	l7257
  4673  01064A                     l492:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;inc\CANlib.h: 904: else
  4677                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x00 ;
  4678  01064A  010F               	movlb	15	; () banked
  4679  01064C  9F05               	bcf	5,7,b	;volatile
  4680  01064E                     l7257:
  4681                           
  4682                           ; BSR set to: 15
  4683                           ;inc\CANlib.h: 907: tamp = (filter >> 21);
  4684  01064E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4685  010652  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4686  010656  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4687  01065A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4688  01065E  0E16               	movlw	22
  4689  010660  D006               	goto	u9540
  4690  010662                     u9545:
  4691  010662  0100               	movlb	0	; () banked
  4692  010664  90D8               	bcf	status,0,c
  4693  010666  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4694  010668  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4695  01066A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4696  01066C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4697  01066E                     u9540:
  4698  01066E  2EE8               	decfsz	wreg,f,c
  4699  010670  D7F8               	goto	u9545
  4700  010672  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4701  010676  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4702  01067A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4703  01067E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;inc\CANlib.h: 908: tamp = tamp & 0x000000FF;
  4707  010682  0100               	movlb	0	; () banked
  4708  010684  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4709  010686  0100               	movlb	0	; () banked
  4710  010688  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4711  01068A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4712  01068C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4713  01068E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;inc\CANlib.h: 909: RXF1SIDH = (unsigned char) tamp;
  4717  010690  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4718  010694                     l7263:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;inc\CANlib.h: 910: }
  4722                           ;inc\CANlib.h: 913: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4723  010694  0E02               	movlw	2
  4724  010696  0100               	movlb	0	; () banked
  4725  010698  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4726  01069A  A4D8               	btfss	status,2,c
  4727  01069C  D089               	goto	l7297
  4728                           
  4729                           ; BSR set to: 0
  4730  01069E  0EF7               	movlw	247
  4731  0106A0  0100               	movlb	0	; () banked
  4732  0106A2  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4733  0106A4  A4D8               	btfss	status,2,c
  4734  0106A6  D084               	goto	l7297
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;inc\CANlib.h: 914: {
  4738                           ;inc\CANlib.h: 915: RXF2SIDLbits.EXIDEN = 0x01;
  4739  0106A8  010F               	movlb	15	; () banked
  4740  0106AA  8709               	bsf	9,3,b	;volatile
  4741                           
  4742                           ; BSR set to: 15
  4743                           ;inc\CANlib.h: 917: tamp = filter & 0x000000FF;
  4744  0106AC  0100               	movlb	0	; () banked
  4745  0106AE  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4746  0106B0  0100               	movlb	0	; () banked
  4747  0106B2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4748  0106B4  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4749  0106B6  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4750  0106B8  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;inc\CANlib.h: 918: RXF2EIDL = (unsigned char) tamp;
  4754  0106BA  C078  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;inc\CANlib.h: 920: tamp = filter & 0x0000FF00;
  4758  0106BE  0E00               	movlw	0
  4759  0106C0  0100               	movlb	0	; () banked
  4760  0106C2  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4761  0106C4  0100               	movlb	0	; () banked
  4762  0106C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4763  0106C8  0EFF               	movlw	255
  4764  0106CA  0100               	movlb	0	; () banked
  4765  0106CC  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4766  0106CE  0100               	movlb	0	; () banked
  4767  0106D0  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4768  0106D2  0E00               	movlw	0
  4769  0106D4  0100               	movlb	0	; () banked
  4770  0106D6  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4771  0106D8  0100               	movlb	0	; () banked
  4772  0106DA  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4773  0106DC  0E00               	movlw	0
  4774  0106DE  0100               	movlb	0	; () banked
  4775  0106E0  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4776  0106E2  0100               	movlb	0	; () banked
  4777  0106E4  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 921: tamp = tamp >> 8;
  4781  0106E6  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4782  0106EA  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4783  0106EE  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4784  0106F2  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4785  0106F6  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4786  0106FA  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4787  0106FE  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4788  010702  0100               	movlb	0	; () banked
  4789  010704  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4790  010706  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4791  01070A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4792  01070E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4793  010712  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 922: RXF2EIDH = (unsigned char) tamp;
  4797  010716  C078  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 924: if (filter & 0x00010000)
  4801  01071A  0100               	movlb	0	; () banked
  4802  01071C  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4803  01071E  D003               	goto	l495
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;inc\CANlib.h: 925: RXF2SIDLbits.EID16 = 0x01;
  4807  010720  010F               	movlb	15	; () banked
  4808  010722  8109               	bsf	9,0,b	;volatile
  4809  010724  D002               	goto	l496
  4810  010726                     l495:
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;inc\CANlib.h: 926: else
  4814                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x00;
  4815  010726  010F               	movlb	15	; () banked
  4816  010728  9109               	bcf	9,0,b	;volatile
  4817  01072A                     l496:
  4818                           
  4819                           ; BSR set to: 15
  4820                           ;inc\CANlib.h: 929: if (filter & 0x00020000)
  4821  01072A  0100               	movlb	0	; () banked
  4822  01072C  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4823  01072E  D003               	goto	l497
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;inc\CANlib.h: 930: RXF2SIDLbits.EID17 = 0x01;
  4827  010730  010F               	movlb	15	; () banked
  4828  010732  8309               	bsf	9,1,b	;volatile
  4829  010734  D002               	goto	l498
  4830  010736                     l497:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;inc\CANlib.h: 931: else
  4834                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x00;
  4835  010736  010F               	movlb	15	; () banked
  4836  010738  9309               	bcf	9,1,b	;volatile
  4837  01073A                     l498:
  4838                           
  4839                           ; BSR set to: 15
  4840                           ;inc\CANlib.h: 934: if (filter & 0x00040000)
  4841  01073A  0100               	movlb	0	; () banked
  4842  01073C  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4843  01073E  D003               	goto	l499
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;inc\CANlib.h: 935: RXF2SIDLbits.SID0 = 0x01;
  4847  010740  010F               	movlb	15	; () banked
  4848  010742  8B09               	bsf	9,5,b	;volatile
  4849  010744  D002               	goto	l500
  4850  010746                     l499:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;inc\CANlib.h: 936: else
  4854                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x00;
  4855  010746  010F               	movlb	15	; () banked
  4856  010748  9B09               	bcf	9,5,b	;volatile
  4857  01074A                     l500:
  4858                           
  4859                           ; BSR set to: 15
  4860                           ;inc\CANlib.h: 939: if (filter & 0x00080000)
  4861  01074A  0100               	movlb	0	; () banked
  4862  01074C  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4863  01074E  D003               	goto	l501
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;inc\CANlib.h: 940: RXF2SIDLbits.SID1 = 0x01;
  4867  010750  010F               	movlb	15	; () banked
  4868  010752  8D09               	bsf	9,6,b	;volatile
  4869  010754  D002               	goto	l502
  4870  010756                     l501:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;inc\CANlib.h: 941: else
  4874                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x00;
  4875  010756  010F               	movlb	15	; () banked
  4876  010758  9D09               	bcf	9,6,b	;volatile
  4877  01075A                     l502:
  4878                           
  4879                           ; BSR set to: 15
  4880                           ;inc\CANlib.h: 944: if (filter & 0x00100000)
  4881  01075A  0100               	movlb	0	; () banked
  4882  01075C  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4883  01075E  D003               	goto	l503
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;inc\CANlib.h: 945: RXF2SIDLbits.SID2 = 0x01 ;
  4887  010760  010F               	movlb	15	; () banked
  4888  010762  8F09               	bsf	9,7,b	;volatile
  4889  010764  D002               	goto	l7291
  4890  010766                     l503:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;inc\CANlib.h: 946: else
  4894                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x00 ;
  4895  010766  010F               	movlb	15	; () banked
  4896  010768  9F09               	bcf	9,7,b	;volatile
  4897  01076A                     l7291:
  4898                           
  4899                           ; BSR set to: 15
  4900                           ;inc\CANlib.h: 949: tamp = (filter >> 21);
  4901  01076A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4902  01076E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4903  010772  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4904  010776  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4905  01077A  0E16               	movlw	22
  4906  01077C  D006               	goto	u9620
  4907  01077E                     u9625:
  4908  01077E  0100               	movlb	0	; () banked
  4909  010780  90D8               	bcf	status,0,c
  4910  010782  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4911  010784  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4912  010786  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4913  010788  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4914  01078A                     u9620:
  4915  01078A  2EE8               	decfsz	wreg,f,c
  4916  01078C  D7F8               	goto	u9625
  4917  01078E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4918  010792  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4919  010796  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4920  01079A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;inc\CANlib.h: 950: tamp = tamp & 0x000000FF;
  4924  01079E  0100               	movlb	0	; () banked
  4925  0107A0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4926  0107A2  0100               	movlb	0	; () banked
  4927  0107A4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4928  0107A6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4929  0107A8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4930  0107AA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;inc\CANlib.h: 951: RXF2SIDH = (unsigned char) tamp;
  4934  0107AC  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4935  0107B0                     l7297:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 952: }
  4939                           ;inc\CANlib.h: 954: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4940  0107B0  0E03               	movlw	3
  4941  0107B2  0100               	movlb	0	; () banked
  4942  0107B4  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4943  0107B6  A4D8               	btfss	status,2,c
  4944  0107B8  D089               	goto	l7331
  4945                           
  4946                           ; BSR set to: 0
  4947  0107BA  0EF7               	movlw	247
  4948  0107BC  0100               	movlb	0	; () banked
  4949  0107BE  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4950  0107C0  A4D8               	btfss	status,2,c
  4951  0107C2  D084               	goto	l7331
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;inc\CANlib.h: 955: {
  4955                           ;inc\CANlib.h: 956: RXF3SIDLbits.EXIDEN = 0x01;
  4956  0107C4  010F               	movlb	15	; () banked
  4957  0107C6  870D               	bsf	13,3,b	;volatile
  4958                           
  4959                           ; BSR set to: 15
  4960                           ;inc\CANlib.h: 958: tamp = filter & 0x000000FF;
  4961  0107C8  0100               	movlb	0	; () banked
  4962  0107CA  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4963  0107CC  0100               	movlb	0	; () banked
  4964  0107CE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4965  0107D0  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4966  0107D2  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4967  0107D4  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;inc\CANlib.h: 959: RXF3EIDL = (unsigned char) tamp;
  4971  0107D6  C078  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;inc\CANlib.h: 961: tamp = filter & 0x0000FF00;
  4975  0107DA  0E00               	movlw	0
  4976  0107DC  0100               	movlb	0	; () banked
  4977  0107DE  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4978  0107E0  0100               	movlb	0	; () banked
  4979  0107E2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4980  0107E4  0EFF               	movlw	255
  4981  0107E6  0100               	movlb	0	; () banked
  4982  0107E8  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4983  0107EA  0100               	movlb	0	; () banked
  4984  0107EC  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4985  0107EE  0E00               	movlw	0
  4986  0107F0  0100               	movlb	0	; () banked
  4987  0107F2  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4988  0107F4  0100               	movlb	0	; () banked
  4989  0107F6  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4990  0107F8  0E00               	movlw	0
  4991  0107FA  0100               	movlb	0	; () banked
  4992  0107FC  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4993  0107FE  0100               	movlb	0	; () banked
  4994  010800  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;inc\CANlib.h: 962: tamp = tamp >> 8;
  4998  010802  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4999  010806  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5000  01080A  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5001  01080E  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5002  010812  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5003  010816  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5004  01081A  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5005  01081E  0100               	movlb	0	; () banked
  5006  010820  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5007  010822  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5008  010826  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5009  01082A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5010  01082E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;inc\CANlib.h: 963: RXF3EIDH = (unsigned char) tamp;
  5014  010832  C078  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;inc\CANlib.h: 965: if (filter & 0x00010000)
  5018  010836  0100               	movlb	0	; () banked
  5019  010838  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5020  01083A  D003               	goto	l506
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 966: RXF3SIDLbits.EID16 = 0x01;
  5024  01083C  010F               	movlb	15	; () banked
  5025  01083E  810D               	bsf	13,0,b	;volatile
  5026  010840  D002               	goto	l507
  5027  010842                     l506:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;inc\CANlib.h: 967: else
  5031                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x00;
  5032  010842  010F               	movlb	15	; () banked
  5033  010844  910D               	bcf	13,0,b	;volatile
  5034  010846                     l507:
  5035                           
  5036                           ; BSR set to: 15
  5037                           ;inc\CANlib.h: 970: if (filter & 0x00020000)
  5038  010846  0100               	movlb	0	; () banked
  5039  010848  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5040  01084A  D003               	goto	l508
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;inc\CANlib.h: 971: RXF3SIDLbits.EID17 = 0x01;
  5044  01084C  010F               	movlb	15	; () banked
  5045  01084E  830D               	bsf	13,1,b	;volatile
  5046  010850  D002               	goto	l509
  5047  010852                     l508:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;inc\CANlib.h: 972: else
  5051                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x00;
  5052  010852  010F               	movlb	15	; () banked
  5053  010854  930D               	bcf	13,1,b	;volatile
  5054  010856                     l509:
  5055                           
  5056                           ; BSR set to: 15
  5057                           ;inc\CANlib.h: 975: if (filter & 0x00040000)
  5058  010856  0100               	movlb	0	; () banked
  5059  010858  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5060  01085A  D003               	goto	l510
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;inc\CANlib.h: 976: RXF3SIDLbits.SID0 = 0x01;
  5064  01085C  010F               	movlb	15	; () banked
  5065  01085E  8B0D               	bsf	13,5,b	;volatile
  5066  010860  D002               	goto	l511
  5067  010862                     l510:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;inc\CANlib.h: 977: else
  5071                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x00;
  5072  010862  010F               	movlb	15	; () banked
  5073  010864  9B0D               	bcf	13,5,b	;volatile
  5074  010866                     l511:
  5075                           
  5076                           ; BSR set to: 15
  5077                           ;inc\CANlib.h: 980: if (filter & 0x00080000)
  5078  010866  0100               	movlb	0	; () banked
  5079  010868  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5080  01086A  D003               	goto	l512
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;inc\CANlib.h: 981: RXF3SIDLbits.SID1 = 0x01;
  5084  01086C  010F               	movlb	15	; () banked
  5085  01086E  8D0D               	bsf	13,6,b	;volatile
  5086  010870  D002               	goto	l513
  5087  010872                     l512:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;inc\CANlib.h: 982: else
  5091                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x00;
  5092  010872  010F               	movlb	15	; () banked
  5093  010874  9D0D               	bcf	13,6,b	;volatile
  5094  010876                     l513:
  5095                           
  5096                           ; BSR set to: 15
  5097                           ;inc\CANlib.h: 985: if (filter & 0x00100000)
  5098  010876  0100               	movlb	0	; () banked
  5099  010878  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5100  01087A  D003               	goto	l514
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;inc\CANlib.h: 986: RXF3SIDLbits.SID2 = 0x01 ;
  5104  01087C  010F               	movlb	15	; () banked
  5105  01087E  8F0D               	bsf	13,7,b	;volatile
  5106  010880  D002               	goto	l7325
  5107  010882                     l514:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 987: else
  5111                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x00 ;
  5112  010882  010F               	movlb	15	; () banked
  5113  010884  9F0D               	bcf	13,7,b	;volatile
  5114  010886                     l7325:
  5115                           
  5116                           ; BSR set to: 15
  5117                           ;inc\CANlib.h: 990: tamp = (filter >> 21);
  5118  010886  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5119  01088A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5120  01088E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5121  010892  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5122  010896  0E16               	movlw	22
  5123  010898  D006               	goto	u9700
  5124  01089A                     u9705:
  5125  01089A  0100               	movlb	0	; () banked
  5126  01089C  90D8               	bcf	status,0,c
  5127  01089E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5128  0108A0  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5129  0108A2  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5130  0108A4  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5131  0108A6                     u9700:
  5132  0108A6  2EE8               	decfsz	wreg,f,c
  5133  0108A8  D7F8               	goto	u9705
  5134  0108AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5135  0108AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5136  0108B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5137  0108B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;inc\CANlib.h: 991: tamp = tamp & 0x000000FF;
  5141  0108BA  0100               	movlb	0	; () banked
  5142  0108BC  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5143  0108BE  0100               	movlb	0	; () banked
  5144  0108C0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5145  0108C2  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5146  0108C4  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5147  0108C6  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;inc\CANlib.h: 992: RXF3SIDH = (unsigned char) tamp;
  5151  0108C8  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5152  0108CC                     l7331:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 993: }
  5156                           ;inc\CANlib.h: 995: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5157  0108CC  0E04               	movlw	4
  5158  0108CE  0100               	movlb	0	; () banked
  5159  0108D0  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5160  0108D2  A4D8               	btfss	status,2,c
  5161  0108D4  D089               	goto	l7365
  5162                           
  5163                           ; BSR set to: 0
  5164  0108D6  0EF7               	movlw	247
  5165  0108D8  0100               	movlb	0	; () banked
  5166  0108DA  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5167  0108DC  A4D8               	btfss	status,2,c
  5168  0108DE  D084               	goto	l7365
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;inc\CANlib.h: 996: {
  5172                           ;inc\CANlib.h: 997: RXF4SIDLbits.EXIDEN = 0x01;
  5173  0108E0  010F               	movlb	15	; () banked
  5174  0108E2  8711               	bsf	17,3,b	;volatile
  5175                           
  5176                           ; BSR set to: 15
  5177                           ;inc\CANlib.h: 999: tamp = filter & 0x000000FF;
  5178  0108E4  0100               	movlb	0	; () banked
  5179  0108E6  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5180  0108E8  0100               	movlb	0	; () banked
  5181  0108EA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5182  0108EC  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5183  0108EE  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5184  0108F0  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;inc\CANlib.h: 1000: RXF4EIDL = (unsigned char) tamp;
  5188  0108F2  C078  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;inc\CANlib.h: 1002: tamp = filter & 0x0000FF00;
  5192  0108F6  0E00               	movlw	0
  5193  0108F8  0100               	movlb	0	; () banked
  5194  0108FA  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5195  0108FC  0100               	movlb	0	; () banked
  5196  0108FE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5197  010900  0EFF               	movlw	255
  5198  010902  0100               	movlb	0	; () banked
  5199  010904  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5200  010906  0100               	movlb	0	; () banked
  5201  010908  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5202  01090A  0E00               	movlw	0
  5203  01090C  0100               	movlb	0	; () banked
  5204  01090E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5205  010910  0100               	movlb	0	; () banked
  5206  010912  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5207  010914  0E00               	movlw	0
  5208  010916  0100               	movlb	0	; () banked
  5209  010918  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5210  01091A  0100               	movlb	0	; () banked
  5211  01091C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;inc\CANlib.h: 1003: tamp = tamp >> 8;
  5215  01091E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5216  010922  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5217  010926  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5218  01092A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5219  01092E  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5220  010932  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5221  010936  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5222  01093A  0100               	movlb	0	; () banked
  5223  01093C  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5224  01093E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5225  010942  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5226  010946  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5227  01094A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;inc\CANlib.h: 1004: RXF4EIDH = (unsigned char) tamp;
  5231  01094E  C078  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;inc\CANlib.h: 1006: if (filter & 0x00010000)
  5235  010952  0100               	movlb	0	; () banked
  5236  010954  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5237  010956  D003               	goto	l517
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;inc\CANlib.h: 1007: RXF4SIDLbits.EID16 = 0x01;
  5241  010958  010F               	movlb	15	; () banked
  5242  01095A  8111               	bsf	17,0,b	;volatile
  5243  01095C  D002               	goto	l518
  5244  01095E                     l517:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;inc\CANlib.h: 1008: else
  5248                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x00;
  5249  01095E  010F               	movlb	15	; () banked
  5250  010960  9111               	bcf	17,0,b	;volatile
  5251  010962                     l518:
  5252                           
  5253                           ; BSR set to: 15
  5254                           ;inc\CANlib.h: 1011: if (filter & 0x00020000)
  5255  010962  0100               	movlb	0	; () banked
  5256  010964  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5257  010966  D003               	goto	l519
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 1012: RXF4SIDLbits.EID17 = 0x01;
  5261  010968  010F               	movlb	15	; () banked
  5262  01096A  8311               	bsf	17,1,b	;volatile
  5263  01096C  D002               	goto	l520
  5264  01096E                     l519:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;inc\CANlib.h: 1013: else
  5268                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x00;
  5269  01096E  010F               	movlb	15	; () banked
  5270  010970  9311               	bcf	17,1,b	;volatile
  5271  010972                     l520:
  5272                           
  5273                           ; BSR set to: 15
  5274                           ;inc\CANlib.h: 1016: if (filter & 0x00040000)
  5275  010972  0100               	movlb	0	; () banked
  5276  010974  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5277  010976  D003               	goto	l521
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;inc\CANlib.h: 1017: RXF4SIDLbits.SID0 = 0x01;
  5281  010978  010F               	movlb	15	; () banked
  5282  01097A  8B11               	bsf	17,5,b	;volatile
  5283  01097C  D002               	goto	l522
  5284  01097E                     l521:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;inc\CANlib.h: 1018: else
  5288                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x00;
  5289  01097E  010F               	movlb	15	; () banked
  5290  010980  9B11               	bcf	17,5,b	;volatile
  5291  010982                     l522:
  5292                           
  5293                           ; BSR set to: 15
  5294                           ;inc\CANlib.h: 1021: if (filter & 0x00080000)
  5295  010982  0100               	movlb	0	; () banked
  5296  010984  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5297  010986  D003               	goto	l523
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;inc\CANlib.h: 1022: RXF4SIDLbits.SID1 = 0x01;
  5301  010988  010F               	movlb	15	; () banked
  5302  01098A  8D11               	bsf	17,6,b	;volatile
  5303  01098C  D002               	goto	l524
  5304  01098E                     l523:
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;inc\CANlib.h: 1023: else
  5308                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x00;
  5309  01098E  010F               	movlb	15	; () banked
  5310  010990  9D11               	bcf	17,6,b	;volatile
  5311  010992                     l524:
  5312                           
  5313                           ; BSR set to: 15
  5314                           ;inc\CANlib.h: 1026: if (filter & 0x00100000)
  5315  010992  0100               	movlb	0	; () banked
  5316  010994  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5317  010996  D003               	goto	l525
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;inc\CANlib.h: 1027: RXF4SIDLbits.SID2 = 0x01 ;
  5321  010998  010F               	movlb	15	; () banked
  5322  01099A  8F11               	bsf	17,7,b	;volatile
  5323  01099C  D002               	goto	l7359
  5324  01099E                     l525:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;inc\CANlib.h: 1028: else
  5328                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x00 ;
  5329  01099E  010F               	movlb	15	; () banked
  5330  0109A0  9F11               	bcf	17,7,b	;volatile
  5331  0109A2                     l7359:
  5332                           
  5333                           ; BSR set to: 15
  5334                           ;inc\CANlib.h: 1031: tamp = (filter >> 21);
  5335  0109A2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5336  0109A6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5337  0109AA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5338  0109AE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5339  0109B2  0E16               	movlw	22
  5340  0109B4  D006               	goto	u9780
  5341  0109B6                     u9785:
  5342  0109B6  0100               	movlb	0	; () banked
  5343  0109B8  90D8               	bcf	status,0,c
  5344  0109BA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5345  0109BC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5346  0109BE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5347  0109C0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5348  0109C2                     u9780:
  5349  0109C2  2EE8               	decfsz	wreg,f,c
  5350  0109C4  D7F8               	goto	u9785
  5351  0109C6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5352  0109CA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5353  0109CE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5354  0109D2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 1032: tamp = tamp & 0x000000FF;
  5358  0109D6  0100               	movlb	0	; () banked
  5359  0109D8  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5360  0109DA  0100               	movlb	0	; () banked
  5361  0109DC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5362  0109DE  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5363  0109E0  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5364  0109E2  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 1033: RXF4SIDH = (unsigned char) tamp;
  5368  0109E4  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5369  0109E8                     l7365:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 1034: }
  5373                           ;inc\CANlib.h: 1036: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5374  0109E8  0E05               	movlw	5
  5375  0109EA  0100               	movlb	0	; () banked
  5376  0109EC  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5377  0109EE  A4D8               	btfss	status,2,c
  5378  0109F0  0012               	return	
  5379                           
  5380                           ; BSR set to: 0
  5381  0109F2  0EF7               	movlw	247
  5382  0109F4  0100               	movlb	0	; () banked
  5383  0109F6  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5384  0109F8  A4D8               	btfss	status,2,c
  5385  0109FA  0012               	return	
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;inc\CANlib.h: 1037: {
  5389                           ;inc\CANlib.h: 1038: RXF5SIDLbits.EXIDEN = 0x01;
  5390  0109FC  010F               	movlb	15	; () banked
  5391  0109FE  8715               	bsf	21,3,b	;volatile
  5392                           
  5393                           ; BSR set to: 15
  5394                           ;inc\CANlib.h: 1040: tamp = filter & 0x000000FF;
  5395  010A00  0100               	movlb	0	; () banked
  5396  010A02  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5397  010A04  0100               	movlb	0	; () banked
  5398  010A06  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5399  010A08  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5400  010A0A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5401  010A0C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 1041: RXF5EIDL = (unsigned char) tamp;
  5405  010A0E  C078  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;inc\CANlib.h: 1043: tamp = filter & 0x0000FF00;
  5409  010A12  0E00               	movlw	0
  5410  010A14  0100               	movlb	0	; () banked
  5411  010A16  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5412  010A18  0100               	movlb	0	; () banked
  5413  010A1A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5414  010A1C  0EFF               	movlw	255
  5415  010A1E  0100               	movlb	0	; () banked
  5416  010A20  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5417  010A22  0100               	movlb	0	; () banked
  5418  010A24  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5419  010A26  0E00               	movlw	0
  5420  010A28  0100               	movlb	0	; () banked
  5421  010A2A  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5422  010A2C  0100               	movlb	0	; () banked
  5423  010A2E  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5424  010A30  0E00               	movlw	0
  5425  010A32  0100               	movlb	0	; () banked
  5426  010A34  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5427  010A36  0100               	movlb	0	; () banked
  5428  010A38  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 1044: tamp = tamp >> 8;
  5432  010A3A  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5433  010A3E  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5434  010A42  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5435  010A46  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5436  010A4A  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5437  010A4E  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5438  010A52  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5439  010A56  0100               	movlb	0	; () banked
  5440  010A58  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5441  010A5A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5442  010A5E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5443  010A62  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5444  010A66  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;inc\CANlib.h: 1045: RXF5EIDH = (unsigned char) tamp;
  5448  010A6A  C078  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 1047: if (filter & 0x00010000)
  5452  010A6E  0100               	movlb	0	; () banked
  5453  010A70  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5454  010A72  D003               	goto	l528
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;inc\CANlib.h: 1048: RXF5SIDLbits.EID16 = 0x01;
  5458  010A74  010F               	movlb	15	; () banked
  5459  010A76  8115               	bsf	21,0,b	;volatile
  5460  010A78  D002               	goto	l529
  5461  010A7A                     l528:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;inc\CANlib.h: 1049: else
  5465                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x00;
  5466  010A7A  010F               	movlb	15	; () banked
  5467  010A7C  9115               	bcf	21,0,b	;volatile
  5468  010A7E                     l529:
  5469                           
  5470                           ; BSR set to: 15
  5471                           ;inc\CANlib.h: 1052: if (filter & 0x00020000)
  5472  010A7E  0100               	movlb	0	; () banked
  5473  010A80  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5474  010A82  D003               	goto	l530
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;inc\CANlib.h: 1053: RXF5SIDLbits.EID17 = 0x01;
  5478  010A84  010F               	movlb	15	; () banked
  5479  010A86  8315               	bsf	21,1,b	;volatile
  5480  010A88  D002               	goto	l531
  5481  010A8A                     l530:
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;inc\CANlib.h: 1054: else
  5485                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x00;
  5486  010A8A  010F               	movlb	15	; () banked
  5487  010A8C  9315               	bcf	21,1,b	;volatile
  5488  010A8E                     l531:
  5489                           
  5490                           ; BSR set to: 15
  5491                           ;inc\CANlib.h: 1057: if (filter & 0x00040000)
  5492  010A8E  0100               	movlb	0	; () banked
  5493  010A90  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5494  010A92  D003               	goto	l532
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 1058: RXF5SIDLbits.SID0 = 0x01;
  5498  010A94  010F               	movlb	15	; () banked
  5499  010A96  8B15               	bsf	21,5,b	;volatile
  5500  010A98  D002               	goto	l533
  5501  010A9A                     l532:
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;inc\CANlib.h: 1059: else
  5505                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x00;
  5506  010A9A  010F               	movlb	15	; () banked
  5507  010A9C  9B15               	bcf	21,5,b	;volatile
  5508  010A9E                     l533:
  5509                           
  5510                           ; BSR set to: 15
  5511                           ;inc\CANlib.h: 1062: if (filter & 0x00080000)
  5512  010A9E  0100               	movlb	0	; () banked
  5513  010AA0  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5514  010AA2  D003               	goto	l534
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;inc\CANlib.h: 1063: RXF5SIDLbits.SID1 = 0x01;
  5518  010AA4  010F               	movlb	15	; () banked
  5519  010AA6  8D15               	bsf	21,6,b	;volatile
  5520  010AA8  D002               	goto	l535
  5521  010AAA                     l534:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;inc\CANlib.h: 1064: else
  5525                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x00;
  5526  010AAA  010F               	movlb	15	; () banked
  5527  010AAC  9D15               	bcf	21,6,b	;volatile
  5528  010AAE                     l535:
  5529                           
  5530                           ; BSR set to: 15
  5531                           ;inc\CANlib.h: 1067: if (filter & 0x00100000)
  5532  010AAE  0100               	movlb	0	; () banked
  5533  010AB0  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5534  010AB2  D003               	goto	l536
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;inc\CANlib.h: 1068: RXF5SIDLbits.SID2 = 0x01 ;
  5538  010AB4  010F               	movlb	15	; () banked
  5539  010AB6  8F15               	bsf	21,7,b	;volatile
  5540  010AB8  D002               	goto	l7393
  5541  010ABA                     l536:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;inc\CANlib.h: 1069: else
  5545                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x00 ;
  5546  010ABA  010F               	movlb	15	; () banked
  5547  010ABC  9F15               	bcf	21,7,b	;volatile
  5548  010ABE                     l7393:
  5549                           
  5550                           ; BSR set to: 15
  5551                           ;inc\CANlib.h: 1072: tamp = (filter >> 21);
  5552  010ABE  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5553  010AC2  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5554  010AC6  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5555  010ACA  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5556  010ACE  0E16               	movlw	22
  5557  010AD0  D006               	goto	u9860
  5558  010AD2                     u9865:
  5559  010AD2  0100               	movlb	0	; () banked
  5560  010AD4  90D8               	bcf	status,0,c
  5561  010AD6  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5562  010AD8  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5563  010ADA  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5564  010ADC  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5565  010ADE                     u9860:
  5566  010ADE  2EE8               	decfsz	wreg,f,c
  5567  010AE0  D7F8               	goto	u9865
  5568  010AE2  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5569  010AE6  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5570  010AEA  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5571  010AEE  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 1073: tamp = tamp & 0x000000FF;
  5575  010AF2  0100               	movlb	0	; () banked
  5576  010AF4  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5577  010AF6  0100               	movlb	0	; () banked
  5578  010AF8  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5579  010AFA  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5580  010AFC  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5581  010AFE  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;inc\CANlib.h: 1074: RXF5SIDH = (unsigned char) tamp;
  5585  010B00  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5586  010B04  0012               	return	
  5587  010B06                     __end_of_CANSetFilter:
  5588                           	opt stack 0
  5589                           tblptru	equ	0xFF8
  5590                           tblptrh	equ	0xFF7
  5591                           tblptrl	equ	0xFF6
  5592                           tablat	equ	0xFF5
  5593                           intcon	equ	0xFF2
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           status	equ	0xFD8
  5597                           
  5598 ;; *************** function _CANOperationMode *****************
  5599 ;; Defined at:
  5600 ;;		line 206 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  mode            1    wreg     enum E16881
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  mode            1   14[BANK0 ] enum E16881
  5605 ;; Return value:  Size  Location     Type
  5606 ;;		None               void
  5607 ;; Registers used:
  5608 ;;		wreg, status,2, status,0
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;Total ram usage:        1 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    3
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_CANInitialize
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text9
  5629  015366                     __ptext9:
  5630                           	opt stack 0
  5631  015366                     _CANOperationMode:
  5632                           	opt stack 25
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;incstack = 0
  5636                           ;CANOperationMode@mode stored from wreg
  5637  015366  0100               	movlb	0	; () banked
  5638  015368  6F6E               	movwf	CANOperationMode@mode& (0+255),b
  5639                           
  5640                           ;inc\CANlib.h: 208: CANCON = mode;
  5641  01536A  C06E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5642  01536E                     l6989:
  5643  01536E  506E               	movf	3950,w,c	;volatile
  5644  015370  0BE0               	andlw	224
  5645  015372  0100               	movlb	0	; () banked
  5646  015374  196E               	xorwf	CANOperationMode@mode& (0+255),w,b
  5647  015376  B4D8               	btfsc	status,2,c
  5648  015378  0012               	return	
  5649  01537A  D7F9               	goto	l6989
  5650  01537C                     __end_of_CANOperationMode:
  5651                           	opt stack 0
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           intcon	equ	0xFF2
  5657                           postinc0	equ	0xFEE
  5658                           wreg	equ	0xFE8
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _PWR_Button_Polling *****************
  5662 ;; Defined at:
  5663 ;;		line 255 in file "RemoteCan.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		None
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    3
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text10
  5692  01534A                     __ptext10:
  5693                           	opt stack 0
  5694  01534A                     _PWR_Button_Polling:
  5695                           	opt stack 27
  5696                           
  5697                           ;RemoteCan.c: 256: if ((PORTBbits.RB5 == 0) || (wait_low == 0)) {
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;incstack = 0
  5701  01534A  AA81               	btfss	3969,5,c	;volatile
  5702  01534C  D002               	goto	l796
  5703  01534E  BC47               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5704  015350  0012               	return	
  5705  015352                     l796:
  5706                           
  5707                           ;RemoteCan.c: 257: wait_low = 0;
  5708  015352  9C47               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5709                           
  5710                           ;RemoteCan.c: 258: if (PORTBbits.RB5 == 1) {
  5711  015354  AA81               	btfss	3969,5,c	;volatile
  5712  015356  0012               	return	
  5713                           
  5714                           ;RemoteCan.c: 259: power_switch = ~power_switch;
  5715  015358  BA47               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5716  01535A  D002               	goto	u11490
  5717  01535C  8A47               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5718  01535E  D001               	goto	u11505
  5719  015360                     u11490:
  5720  015360  9A47               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5721  015362                     u11505:
  5722                           
  5723                           ;RemoteCan.c: 260: wait_low = 1;
  5724  015362  8C47               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5725  015364  0012               	return	
  5726  015366                     __end_of_PWR_Button_Polling:
  5727                           	opt stack 0
  5728                           tblptru	equ	0xFF8
  5729                           tblptrh	equ	0xFF7
  5730                           tblptrl	equ	0xFF6
  5731                           tablat	equ	0xFF5
  5732                           intcon	equ	0xFF2
  5733                           postinc0	equ	0xFEE
  5734                           wreg	equ	0xFE8
  5735                           status	equ	0xFD8
  5736                           
  5737 ;; *************** function _LCD_Handler *****************
  5738 ;; Defined at:
  5739 ;;		line 187 in file "RemoteCan.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;		None
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;		None
  5744 ;; Return value:  Size  Location     Type
  5745 ;;		None               void
  5746 ;; Registers used:
  5747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;Total ram usage:        0 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:    9
  5760 ;; This function calls:
  5761 ;;		_LCD_clear
  5762 ;;		_LCD_goto_line
  5763 ;;		_LCD_write_message
  5764 ;;		_LCD_write_string
  5765 ;;		___fldiv
  5766 ;;		_sprintf
  5767 ;; This function is called by:
  5768 ;;		_main
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text11
  5773  01468E                     __ptext11:
  5774                           	opt stack 0
  5775  01468E                     _LCD_Handler:
  5776                           	opt stack 21
  5777                           
  5778                           ;RemoteCan.c: 188: actual_speed_kmh = actual_speed / 278;
  5779                           
  5780                           ;incstack = 0
  5781  01468E  C007  F06E         	movff	_actual_speed,___fldiv@b
  5782  014692  C008  F06F         	movff	_actual_speed+1,___fldiv@b+1
  5783  014696  C009  F070         	movff	_actual_speed+2,___fldiv@b+2
  5784  01469A  C00A  F071         	movff	_actual_speed+3,___fldiv@b+3
  5785  01469E  0E00               	movlw	0
  5786  0146A0  0100               	movlb	0	; () banked
  5787  0146A2  6F72               	movwf	___fldiv@a& (0+255),b
  5788  0146A4  0E00               	movlw	0
  5789  0146A6  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  5790  0146A8  0E8B               	movlw	139
  5791  0146AA  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  5792  0146AC  0E43               	movlw	67
  5793  0146AE  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  5794  0146B0  EC41  F099         	call	___fldiv	;wreg free
  5795  0146B4  C06E  F0D0         	movff	?___fldiv,_actual_speed_kmh
  5796  0146B8  C06F  F0D1         	movff	?___fldiv+1,_actual_speed_kmh+1
  5797  0146BC  C070  F0D2         	movff	?___fldiv+2,_actual_speed_kmh+2
  5798  0146C0  C071  F0D3         	movff	?___fldiv+3,_actual_speed_kmh+3
  5799                           
  5800                           ;RemoteCan.c: 190: LCD_clear();
  5801  0146C4  EC41  F0A9         	call	_LCD_clear	;wreg free
  5802                           
  5803                           ;RemoteCan.c: 191: LCD_goto_line(1);
  5804  0146C8  0E01               	movlw	1
  5805  0146CA  ECE1  F0A4         	call	_LCD_goto_line
  5806                           
  5807                           ;RemoteCan.c: 192: LCD_write_message("=== VEHICLE DATA ===");
  5808  0146CE  0EA5               	movlw	low STR_5
  5809  0146D0  0100               	movlb	0	; () banked
  5810  0146D2  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5811  0146D4  0EFF               	movlw	high STR_5
  5812  0146D6  0100               	movlb	0	; () banked
  5813  0146D8  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5814  0146DA  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5815                           
  5816                           ;RemoteCan.c: 194: LCD_goto_line(2);
  5817  0146DE  0E02               	movlw	2
  5818  0146E0  ECE1  F0A4         	call	_LCD_goto_line
  5819                           
  5820                           ;RemoteCan.c: 195: LCD_write_message("Direction: ");
  5821  0146E4  0ECF               	movlw	low STR_6
  5822  0146E6  0100               	movlb	0	; () banked
  5823  0146E8  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5824  0146EA  0EFF               	movlw	high STR_6
  5825  0146EC  0100               	movlb	0	; () banked
  5826  0146EE  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5827  0146F0  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5828                           
  5829                           ;RemoteCan.c: 196: if (switch_position != 0) {
  5830  0146F4  0100               	movlb	0	; () banked
  5831  0146F6  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  5832  0146F8  B4D8               	btfsc	status,2,c
  5833  0146FA  D016               	goto	l8669
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;RemoteCan.c: 197: if (dir == 0) {
  5837  0146FC  0100               	movlb	0	; () banked
  5838  0146FE  51EA               	movf	_dir& (0+255),w,b	;volatile
  5839  014700  A4D8               	btfss	status,2,c
  5840  014702  D009               	goto	l8667
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;RemoteCan.c: 198: LCD_write_message("FWD");
  5844  014704  0EF9               	movlw	low STR_7
  5845  014706  0100               	movlb	0	; () banked
  5846  014708  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5847  01470A  0EFF               	movlw	high STR_7
  5848  01470C  0100               	movlb	0	; () banked
  5849  01470E  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5850  014710  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5851                           
  5852                           ;RemoteCan.c: 199: } else {
  5853  014714  D011               	goto	l8671
  5854  014716                     l8667:
  5855                           
  5856                           ;RemoteCan.c: 200: LCD_write_message("BKWD");
  5857  014716  0EEF               	movlw	low STR_8
  5858  014718  0100               	movlb	0	; () banked
  5859  01471A  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5860  01471C  0EFF               	movlw	high STR_8
  5861  01471E  0100               	movlb	0	; () banked
  5862  014720  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5863  014722  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5864                           
  5865                           ;RemoteCan.c: 201: }
  5866                           ;RemoteCan.c: 202: } else {
  5867  014726  D008               	goto	l8671
  5868  014728                     l8669:
  5869                           
  5870                           ;RemoteCan.c: 204: LCD_write_message("P");
  5871  014728  0EFD               	movlw	low STR_9
  5872  01472A  0100               	movlb	0	; () banked
  5873  01472C  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5874  01472E  0EFF               	movlw	high STR_9
  5875  014730  0100               	movlb	0	; () banked
  5876  014732  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5877  014734  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5878  014738                     l8671:
  5879                           
  5880                           ;RemoteCan.c: 205: }
  5881                           ;RemoteCan.c: 207: LCD_goto_line(3);
  5882  014738  0E03               	movlw	3
  5883  01473A  ECE1  F0A4         	call	_LCD_goto_line
  5884                           
  5885                           ;RemoteCan.c: 208: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  5886  01473E  0E21               	movlw	low _str
  5887  014740  0100               	movlb	0	; () banked
  5888  014742  6FBE               	movwf	sprintf@sp& (0+255),b
  5889  014744  0E01               	movlw	high _str
  5890  014746  0100               	movlb	0	; () banked
  5891  014748  6FBF               	movwf	(sprintf@sp+1)& (0+255),b
  5892  01474A  0EDB               	movlw	low STR_10
  5893  01474C  0100               	movlb	0	; () banked
  5894  01474E  6FC0               	movwf	sprintf@f& (0+255),b
  5895  014750  0EFF               	movlw	high STR_10
  5896  014752  0100               	movlb	0	; () banked
  5897  014754  6FC1               	movwf	(sprintf@f+1)& (0+255),b
  5898  014756  C0D0  F0C2         	movff	_actual_speed_kmh,?_sprintf+4
  5899  01475A  C0D1  F0C3         	movff	_actual_speed_kmh+1,?_sprintf+5
  5900  01475E  C0D2  F0C4         	movff	_actual_speed_kmh+2,?_sprintf+6
  5901  014762  C0D3  F0C5         	movff	_actual_speed_kmh+3,?_sprintf+7
  5902  014766  EC83  F085         	call	_sprintf	;wreg free
  5903                           
  5904                           ;RemoteCan.c: 209: str[11] = '\0';
  5905  01476A  0E00               	movlw	0
  5906  01476C  0101               	movlb	1	; () banked
  5907  01476E  6F2C               	movwf	(_str+11)& (0+255),b
  5908                           
  5909                           ; BSR set to: 1
  5910                           ;RemoteCan.c: 210: LCD_write_string(str);
  5911  014770  0E21               	movlw	low _str
  5912  014772  0100               	movlb	0	; () banked
  5913  014774  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
  5914  014776  0E01               	movlw	high _str
  5915  014778  0100               	movlb	0	; () banked
  5916  01477A  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  5917  01477C  EC6F  F0A9         	call	_LCD_write_string	;wreg free
  5918                           
  5919                           ;RemoteCan.c: 211: LCD_write_message("Km/h");
  5920  014780  0EF4               	movlw	low STR_11
  5921  014782  0100               	movlb	0	; () banked
  5922  014784  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5923  014786  0EFF               	movlw	high STR_11
  5924  014788  0100               	movlb	0	; () banked
  5925  01478A  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5926  01478C  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5927                           
  5928                           ;RemoteCan.c: 212: LCD_goto_line(4);
  5929  014790  0E04               	movlw	4
  5930  014792  ECE1  F0A4         	call	_LCD_goto_line
  5931                           
  5932                           ;RemoteCan.c: 213: LCD_write_message("====================");
  5933  014796  0EBA               	movlw	low STR_1
  5934  014798  0100               	movlb	0	; () banked
  5935  01479A  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  5936  01479C  0EFF               	movlw	high STR_1
  5937  01479E  0100               	movlb	0	; () banked
  5938  0147A0  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5939  0147A2  EC0E  F0A9         	call	_LCD_write_message	;wreg free
  5940  0147A6  0012               	return		;funcret
  5941  0147A8                     __end_of_LCD_Handler:
  5942                           	opt stack 0
  5943                           tblptru	equ	0xFF8
  5944                           tblptrh	equ	0xFF7
  5945                           tblptrl	equ	0xFF6
  5946                           tablat	equ	0xFF5
  5947                           intcon	equ	0xFF2
  5948                           postinc0	equ	0xFEE
  5949                           wreg	equ	0xFE8
  5950                           status	equ	0xFD8
  5951                           
  5952 ;; *************** function _sprintf *****************
  5953 ;; Defined at:
  5954 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  sp              2   94[BANK0 ] PTR unsigned char 
  5957 ;;		 -> str(12), 
  5958 ;;  f               2   96[BANK0 ] PTR const unsigned char 
  5959 ;;		 -> STR_10(12), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  5962 ;;  tmpval          4   14[BANK1 ] struct .
  5963 ;;  val             4    8[BANK1 ] unsigned long 
  5964 ;;  cp              3    0        PTR const unsigned char 
  5965 ;;  prec            2   18[BANK1 ] int 
  5966 ;;  exp             2   12[BANK1 ] int 
  5967 ;;  flag            2    6[BANK1 ] unsigned short 
  5968 ;;  ap              2    4[BANK1 ] PTR void [1]
  5969 ;;		 -> ?_sprintf(2), 
  5970 ;;  len             2    0        unsigned int 
  5971 ;;  width           2    0        int 
  5972 ;;  c               1   24[BANK1 ] char 
  5973 ;;  d               1    0        unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2   94[BANK0 ] int 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5983 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;Total ram usage:       35 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    5
  5990 ;; This function calls:
  5991 ;;		___awdiv
  5992 ;;		___fladd
  5993 ;;		___flge
  5994 ;;		___flmul
  5995 ;;		___flneg
  5996 ;;		___flsub
  5997 ;;		___fltol
  5998 ;;		___lldiv
  5999 ;;		___llmod
  6000 ;;		___wmul
  6001 ;;		___xxtofl
  6002 ;;		__div_to_l_
  6003 ;;		__tdiv_to_l_
  6004 ;;		_fround
  6005 ;;		_isdigit
  6006 ;;		_scale
  6007 ;; This function is called by:
  6008 ;;		_LCD_Handler
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text12
  6013  010B06                     __ptext12:
  6014                           	opt stack 0
  6015  010B06                     _sprintf:
  6016                           	opt stack 24
  6017                           
  6018                           ;doprnt.c: 494: va_list ap;
  6019                           ;doprnt.c: 499: signed char c;
  6020                           ;doprnt.c: 501: int width;
  6021                           ;doprnt.c: 504: int prec;
  6022                           ;doprnt.c: 508: unsigned short flag;
  6023                           ;doprnt.c: 515: char d;
  6024                           ;doprnt.c: 516: double fval;
  6025                           ;doprnt.c: 517: int exp;
  6026                           ;doprnt.c: 523: union {
  6027                           ;doprnt.c: 524: unsigned long vd;
  6028                           ;doprnt.c: 525: double integ;
  6029                           ;doprnt.c: 526: } tmpval;
  6030                           ;doprnt.c: 528: unsigned long val;
  6031                           ;doprnt.c: 529: unsigned len;
  6032                           ;doprnt.c: 530: const char * cp;
  6033                           ;doprnt.c: 533: *ap = __va_start();
  6034                           
  6035                           ;incstack = 0
  6036  010B06  0EC2               	movlw	low (?_sprintf+4)
  6037  010B08  0101               	movlb	1	; () banked
  6038  010B0A  6F04               	movwf	sprintf@ap& (0+255),b
  6039  010B0C  0E00               	movlw	high (?_sprintf+4)
  6040  010B0E  0101               	movlb	1	; () banked
  6041  010B10  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  6042                           
  6043                           ;doprnt.c: 536: while(c = *f++) {
  6044  010B12  EFB5  F089         	goto	l8337
  6045  010B16                     l8139:
  6046                           
  6047                           ; BSR set to: 1
  6048                           ;doprnt.c: 538: if(c != '%')
  6049  010B16  0E25               	movlw	37
  6050  010B18  0101               	movlb	1	; () banked
  6051  010B1A  1918               	xorwf	sprintf@c& (0+255),w,b
  6052  010B1C  B4D8               	btfsc	status,2,c
  6053  010B1E  D008               	goto	l8145
  6054                           
  6055                           ; BSR set to: 1
  6056                           ;doprnt.c: 540: {
  6057                           ;doprnt.c: 541: ((*sp++ = (c)));
  6058  010B20  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6059  010B24  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6060  010B28  C118  FFDF         	movff	sprintf@c,indf2
  6061  010B2C  EFB2  F089         	goto	l8335
  6062  010B30                     l8145:
  6063                           
  6064                           ;doprnt.c: 543: }
  6065                           ;doprnt.c: 548: flag = 0;
  6066  010B30  0E00               	movlw	0
  6067  010B32  0101               	movlb	1	; () banked
  6068  010B34  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  6069  010B36  0E00               	movlw	0
  6070  010B38  6F06               	movwf	sprintf@flag& (0+255),b
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;doprnt.c: 611: if(*f == '.') {
  6074  010B3A  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6075  010B3E  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6076  010B42                     	if	0	;tblptru may be non-zero
  6077  010B42                     	endif
  6078  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6079  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6080  010B44  6EF8               	movwf	tblptru,c
  6081  010B46                     	endif
  6082  010B46  0008               	tblrd		*
  6083  010B48  50F5               	movf	tablat,w,c
  6084  010B4A  0A2E               	xorlw	46
  6085  010B4C  A4D8               	btfss	status,2,c
  6086  010B4E  D03D               	goto	l8159
  6087                           
  6088                           ; BSR set to: 1
  6089                           ;doprnt.c: 612: flag |= 0x4000;
  6090  010B50  0101               	movlb	1	; () banked
  6091  010B52  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  6092                           
  6093                           ;doprnt.c: 613: f++;
  6094  010B54  0100               	movlb	0	; () banked
  6095  010B56  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6096  010B58  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;doprnt.c: 620: {
  6100                           ;doprnt.c: 621: prec = 0;
  6101  010B5A  0E00               	movlw	0
  6102  010B5C  0101               	movlb	1	; () banked
  6103  010B5E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6104  010B60  0E00               	movlw	0
  6105  010B62  6F12               	movwf	sprintf@prec& (0+255),b
  6106                           
  6107                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6108  010B64  D025               	goto	l8157
  6109  010B66                     l8153:
  6110                           
  6111                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6112  010B66  C112  F06E         	movff	sprintf@prec,___wmul@multiplier
  6113  010B6A  C113  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  6114  010B6E  0E00               	movlw	0
  6115  010B70  0100               	movlb	0	; () banked
  6116  010B72  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6117  010B74  0E0A               	movlw	10
  6118  010B76  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6119  010B78  ECF3  F0A8         	call	___wmul	;wreg free
  6120  010B7C  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6121  010B80  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6122  010B84                     	if	0	;tblptru may be non-zero
  6123  010B84                     	endif
  6124  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6125  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6126  010B86  6EF8               	movwf	tblptru,c
  6127  010B88                     	endif
  6128  010B88  0008               	tblrd		*
  6129  010B8A  50F5               	movf	tablat,w,c
  6130  010B8C  0100               	movlb	0	; () banked
  6131  010B8E  276E               	addwf	?___wmul& (0+255),f,b
  6132  010B90  0E00               	movlw	0
  6133  010B92  0100               	movlb	0	; () banked
  6134  010B94  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  6135  010B96  0ED0               	movlw	208
  6136  010B98  0100               	movlb	0	; () banked
  6137  010B9A  256E               	addwf	?___wmul& (0+255),w,b
  6138  010B9C  0101               	movlb	1	; () banked
  6139  010B9E  6F12               	movwf	sprintf@prec& (0+255),b
  6140  010BA0  0EFF               	movlw	255
  6141  010BA2  0100               	movlb	0	; () banked
  6142  010BA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6143  010BA6  0101               	movlb	1	; () banked
  6144  010BA8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6145                           
  6146                           ; BSR set to: 1
  6147  010BAA  0100               	movlb	0	; () banked
  6148  010BAC  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6149  010BAE  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6150  010BB0                     l8157:
  6151  010BB0  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6152  010BB4  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6153  010BB8                     	if	0	;tblptru may be non-zero
  6154  010BB8                     	endif
  6155  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6156  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6157  010BBA  6EF8               	movwf	tblptru,c
  6158  010BBC                     	endif
  6159  010BBC  0008               	tblrd		*
  6160  010BBE  50F5               	movf	tablat,w,c
  6161  010BC0  EC5A  F0A9         	call	_isdigit
  6162  010BC4  A0D8               	btfss	status,0,c
  6163  010BC6  D00C               	goto	l8167
  6164  010BC8  D7CE               	goto	l8153
  6165  010BCA                     l8159:
  6166                           
  6167                           ;doprnt.c: 626: prec = 0;
  6168  010BCA  0E00               	movlw	0
  6169  010BCC  0101               	movlb	1	; () banked
  6170  010BCE  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6171  010BD0  0E00               	movlw	0
  6172  010BD2  6F12               	movwf	sprintf@prec& (0+255),b
  6173                           
  6174                           ; BSR set to: 1
  6175                           ;doprnt.c: 628: flag |= 0x1000;
  6176  010BD4  0101               	movlb	1	; () banked
  6177  010BD6  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  6178                           
  6179                           ; BSR set to: 1
  6180                           ;doprnt.c: 630: }
  6181                           ;doprnt.c: 635: switch(c = *f++) {
  6182  010BD8  D003               	goto	l8167
  6183  010BDA                     l8163:
  6184                           
  6185                           ; BSR set to: 1
  6186                           ;doprnt.c: 663: flag |= 0x400;
  6187  010BDA  0101               	movlb	1	; () banked
  6188  010BDC  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  6189                           
  6190                           ;doprnt.c: 664: break;
  6191  010BDE  D015               	goto	l8169
  6192  010BE0                     l8167:
  6193  010BE0  C0C0  FFF6         	movff	sprintf@f,tblptrl
  6194  010BE4  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  6195  010BE8  0100               	movlb	0	; () banked
  6196  010BEA  4BC0               	infsnz	sprintf@f& (0+255),f,b
  6197  010BEC  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  6198  010BEE                     	if	0	;tblptru may be non-zero
  6199  010BEE                     	endif
  6200  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6201  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6202  010BF0  6EF8               	movwf	tblptru,c
  6203  010BF2                     	endif
  6204  010BF2  0008               	tblrd		*
  6205  010BF4  CFF5 F118          	movff	tablat,sprintf@c
  6206  010BF8  0101               	movlb	1	; () banked
  6207  010BFA  5118               	movf	sprintf@c& (0+255),w,b
  6208                           
  6209                           ; Switch size 1, requested type "space"
  6210                           ; Number of cases is 2, Range of values is 0 to 102
  6211                           ; switch strategies available:
  6212                           ; Name         Instructions Cycles
  6213                           ; simple_byte            7     4 (average)
  6214                           ;	Chosen strategy is simple_byte
  6215  010BFC  0A00               	xorlw	0	; case 0
  6216  010BFE  B4D8               	btfsc	status,2,c
  6217  010C00  D3C5               	goto	l8339
  6218  010C02  0A66               	xorlw	102	; case 102
  6219  010C04  B4D8               	btfsc	status,2,c
  6220  010C06  D7E9               	goto	l8163
  6221  010C08  D3B0               	goto	l8337
  6222  010C0A                     l8169:
  6223                           
  6224                           ; BSR set to: 1
  6225                           ;doprnt.c: 825: if(flag & (0x700)) {
  6226  010C0A  0E07               	movlw	7
  6227  010C0C  0101               	movlb	1	; () banked
  6228  010C0E  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6229  010C10  B4D8               	btfsc	status,2,c
  6230  010C12  D353               	goto	l8317
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;doprnt.c: 827: if(flag & 0x1000)
  6234  010C14  0101               	movlb	1	; () banked
  6235  010C16  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  6236  010C18  D005               	goto	l8175
  6237                           
  6238                           ; BSR set to: 1
  6239                           ;doprnt.c: 829: prec = 6;
  6240  010C1A  0E00               	movlw	0
  6241  010C1C  0101               	movlb	1	; () banked
  6242  010C1E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  6243  010C20  0E06               	movlw	6
  6244  010C22  6F12               	movwf	sprintf@prec& (0+255),b
  6245  010C24                     l8175:
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6249  010C24  C104  FFD9         	movff	sprintf@ap,fsr2l
  6250  010C28  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  6251  010C2C  CFDE F114          	movff	postinc2,sprintf@fval
  6252  010C30  CFDE F115          	movff	postinc2,sprintf@fval+1
  6253  010C34  CFDE F116          	movff	postinc2,sprintf@fval+2
  6254  010C38  CFDE F117          	movff	postinc2,sprintf@fval+3
  6255                           
  6256                           ; BSR set to: 1
  6257  010C3C  0E04               	movlw	4
  6258  010C3E  0101               	movlb	1	; () banked
  6259  010C40  2704               	addwf	sprintf@ap& (0+255),f,b
  6260  010C42  0E00               	movlw	0
  6261  010C44  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;doprnt.c: 831: if(fval < 0.0) {
  6265  010C46  0101               	movlb	1	; () banked
  6266  010C48  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  6267  010C4A  D015               	goto	l8185
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;doprnt.c: 832: fval = -fval;
  6271  010C4C  C114  F06E         	movff	sprintf@fval,___flneg@f1
  6272  010C50  C115  F06F         	movff	sprintf@fval+1,___flneg@f1+1
  6273  010C54  C116  F070         	movff	sprintf@fval+2,___flneg@f1+2
  6274  010C58  C117  F071         	movff	sprintf@fval+3,___flneg@f1+3
  6275  010C5C  ECD7  F0A8         	call	___flneg	;wreg free
  6276  010C60  C06E  F114         	movff	?___flneg,sprintf@fval
  6277  010C64  C06F  F115         	movff	?___flneg+1,sprintf@fval+1
  6278  010C68  C070  F116         	movff	?___flneg+2,sprintf@fval+2
  6279  010C6C  C071  F117         	movff	?___flneg+3,sprintf@fval+3
  6280                           
  6281                           ;doprnt.c: 833: flag |= 0x03;
  6282  010C70  0E03               	movlw	3
  6283  010C72  0101               	movlb	1	; () banked
  6284  010C74  1306               	iorwf	sprintf@flag& (0+255),f,b
  6285  010C76                     l8185:
  6286                           
  6287                           ; BSR set to: 1
  6288                           ;doprnt.c: 834: }
  6289                           ;doprnt.c: 835: exp = 0;
  6290  010C76  0E00               	movlw	0
  6291  010C78  0101               	movlb	1	; () banked
  6292  010C7A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  6293  010C7C  0E00               	movlw	0
  6294  010C7E  6F0C               	movwf	sprintf@exp& (0+255),b
  6295                           
  6296                           ; BSR set to: 1
  6297                           ;doprnt.c: 836: if( fval!=0) {
  6298  010C80  0101               	movlb	1	; () banked
  6299  010C82  5114               	movf	sprintf@fval& (0+255),w,b
  6300  010C84  0101               	movlb	1	; () banked
  6301  010C86  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6302  010C88  0101               	movlb	1	; () banked
  6303  010C8A  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6304  010C8C  0101               	movlb	1	; () banked
  6305  010C8E  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6306  010C90  B4D8               	btfsc	status,2,c
  6307  010C92  D08E               	goto	l8213
  6308                           
  6309                           ; BSR set to: 1
  6310                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6311  010C94  0101               	movlb	1	; () banked
  6312  010C96  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6313  010C98  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6314  010C9A  0F82               	addlw	130
  6315  010C9C  0101               	movlb	1	; () banked
  6316  010C9E  6F0C               	movwf	sprintf@exp& (0+255),b
  6317  010CA0  0101               	movlb	1	; () banked
  6318  010CA2  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  6319  010CA4  0EFF               	movlw	255
  6320  010CA6  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6321                           
  6322                           ; BSR set to: 1
  6323                           ;doprnt.c: 838: exp--;
  6324  010CA8  0101               	movlb	1	; () banked
  6325  010CAA  070C               	decf	sprintf@exp& (0+255),f,b
  6326  010CAC  A0D8               	btfss	status,0,c
  6327  010CAE  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6328                           
  6329                           ; BSR set to: 1
  6330                           ;doprnt.c: 839: exp *= 3;
  6331  010CB0  C10C  F06E         	movff	sprintf@exp,___wmul@multiplier
  6332  010CB4  C10D  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  6333  010CB8  0E00               	movlw	0
  6334  010CBA  0100               	movlb	0	; () banked
  6335  010CBC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6336  010CBE  0E03               	movlw	3
  6337  010CC0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6338  010CC2  ECF3  F0A8         	call	___wmul	;wreg free
  6339  010CC6  C06E  F10C         	movff	?___wmul,sprintf@exp
  6340  010CCA  C06F  F10D         	movff	?___wmul+1,sprintf@exp+1
  6341                           
  6342                           ;doprnt.c: 840: exp /= 10;
  6343  010CCE  C10C  F074         	movff	sprintf@exp,___awdiv@dividend
  6344  010CD2  C10D  F075         	movff	sprintf@exp+1,___awdiv@dividend+1
  6345  010CD6  0E00               	movlw	0
  6346  010CD8  0100               	movlb	0	; () banked
  6347  010CDA  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  6348  010CDC  0E0A               	movlw	10
  6349  010CDE  6F76               	movwf	___awdiv@divisor& (0+255),b
  6350  010CE0  EC2B  F0A6         	call	___awdiv	;wreg free
  6351  010CE4  C074  F10C         	movff	?___awdiv,sprintf@exp
  6352  010CE8  C075  F10D         	movff	?___awdiv+1,sprintf@exp+1
  6353                           
  6354                           ;doprnt.c: 841: if(exp < 0)
  6355  010CEC  0101               	movlb	1	; () banked
  6356  010CEE  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  6357  010CF0  D004               	goto	l8201
  6358                           
  6359                           ; BSR set to: 1
  6360                           ;doprnt.c: 842: exp--;
  6361  010CF2  0101               	movlb	1	; () banked
  6362  010CF4  070C               	decf	sprintf@exp& (0+255),f,b
  6363  010CF6  A0D8               	btfss	status,0,c
  6364  010CF8  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6365  010CFA                     l8201:
  6366                           
  6367                           ; BSR set to: 1
  6368                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6369  010CFA  0101               	movlb	1	; () banked
  6370  010CFC  510C               	movf	sprintf@exp& (0+255),w,b
  6371  010CFE  0800               	sublw	0
  6372  010D00  EC93  F08D         	call	_scale
  6373  010D04  C095  F10E         	movff	?_scale,sprintf@tmpval
  6374  010D08  C096  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6375  010D0C  C097  F110         	movff	?_scale+2,sprintf@tmpval+2
  6376  010D10  C098  F111         	movff	?_scale+3,sprintf@tmpval+3
  6377                           
  6378                           ;doprnt.c: 847: tmpval.integ *= fval;
  6379  010D14  C10E  F07C         	movff	sprintf@tmpval,___flmul@b
  6380  010D18  C10F  F07D         	movff	sprintf@tmpval+1,___flmul@b+1
  6381  010D1C  C110  F07E         	movff	sprintf@tmpval+2,___flmul@b+2
  6382  010D20  C111  F07F         	movff	sprintf@tmpval+3,___flmul@b+3
  6383  010D24  C114  F080         	movff	sprintf@fval,___flmul@a
  6384  010D28  C115  F081         	movff	sprintf@fval+1,___flmul@a+1
  6385  010D2C  C116  F082         	movff	sprintf@fval+2,___flmul@a+2
  6386  010D30  C117  F083         	movff	sprintf@fval+3,___flmul@a+3
  6387  010D34  ECFA  F094         	call	___flmul	;wreg free
  6388  010D38  C07C  F10E         	movff	?___flmul,sprintf@tmpval
  6389  010D3C  C07D  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  6390  010D40  C07E  F110         	movff	?___flmul+2,sprintf@tmpval+2
  6391  010D44  C07F  F111         	movff	?___flmul+3,sprintf@tmpval+3
  6392                           
  6393                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6394  010D48  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6395  010D4C  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6396  010D50  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6397  010D54  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6398  010D58  0E00               	movlw	0
  6399  010D5A  0100               	movlb	0	; () banked
  6400  010D5C  6F72               	movwf	___flge@ff2& (0+255),b
  6401  010D5E  0E00               	movlw	0
  6402  010D60  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6403  010D62  0E80               	movlw	128
  6404  010D64  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6405  010D66  0E3F               	movlw	63
  6406  010D68  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6407  010D6A  EC04  F0A1         	call	___flge	;wreg free
  6408  010D6E  0100               	movlb	0	; () banked
  6409  010D70  B0D8               	btfsc	status,0,c
  6410  010D72  D005               	goto	l8209
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;doprnt.c: 849: exp--;
  6414  010D74  0101               	movlb	1	; () banked
  6415  010D76  070C               	decf	sprintf@exp& (0+255),f,b
  6416  010D78  A0D8               	btfss	status,0,c
  6417  010D7A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6418  010D7C  D019               	goto	l8213
  6419  010D7E                     l8209:
  6420                           
  6421                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6422  010D7E  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6423  010D82  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6424  010D86  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6425  010D8A  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6426  010D8E  0E00               	movlw	0
  6427  010D90  0100               	movlb	0	; () banked
  6428  010D92  6F72               	movwf	___flge@ff2& (0+255),b
  6429  010D94  0E00               	movlw	0
  6430  010D96  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6431  010D98  0E20               	movlw	32
  6432  010D9A  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6433  010D9C  0E41               	movlw	65
  6434  010D9E  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6435  010DA0  EC04  F0A1         	call	___flge	;wreg free
  6436  010DA4  0100               	movlb	0	; () banked
  6437  010DA6  A0D8               	btfss	status,0,c
  6438  010DA8  D003               	goto	l8213
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;doprnt.c: 851: exp++;
  6442  010DAA  0101               	movlb	1	; () banked
  6443  010DAC  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  6444  010DAE  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  6445  010DB0                     l8213:
  6446                           
  6447                           ;doprnt.c: 852: }
  6448                           ;doprnt.c: 1112: if(prec <= 12)
  6449  010DB0  0101               	movlb	1	; () banked
  6450  010DB2  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6451  010DB4  D008               	goto	l8215
  6452  010DB6  0101               	movlb	1	; () banked
  6453  010DB8  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6454  010DBA  E123               	bnz	l8217
  6455  010DBC  0E0D               	movlw	13
  6456  010DBE  0101               	movlb	1	; () banked
  6457  010DC0  5D12               	subwf	sprintf@prec& (0+255),w,b
  6458  010DC2  B0D8               	btfsc	status,0,c
  6459  010DC4  D01E               	goto	l8217
  6460  010DC6                     l8215:
  6461                           
  6462                           ; BSR set to: 1
  6463                           ;doprnt.c: 1113: fval += fround(prec);
  6464  010DC6  C114  F0A2         	movff	sprintf@fval,___fladd@b
  6465  010DCA  C115  F0A3         	movff	sprintf@fval+1,___fladd@b+1
  6466  010DCE  C116  F0A4         	movff	sprintf@fval+2,___fladd@b+2
  6467  010DD2  C117  F0A5         	movff	sprintf@fval+3,___fladd@b+3
  6468  010DD6  0101               	movlb	1	; () banked
  6469  010DD8  5112               	movf	sprintf@prec& (0+255),w,b
  6470  010DDA  ECF0  F09C         	call	_fround
  6471  010DDE  C095  F0A6         	movff	?_fround,___fladd@a
  6472  010DE2  C096  F0A7         	movff	?_fround+1,___fladd@a+1
  6473  010DE6  C097  F0A8         	movff	?_fround+2,___fladd@a+2
  6474  010DEA  C098  F0A9         	movff	?_fround+3,___fladd@a+3
  6475  010DEE  ECA6  F092         	call	___fladd	;wreg free
  6476  010DF2  C0A2  F114         	movff	?___fladd,sprintf@fval
  6477  010DF6  C0A3  F115         	movff	?___fladd+1,sprintf@fval+1
  6478  010DFA  C0A4  F116         	movff	?___fladd+2,sprintf@fval+2
  6479  010DFE  C0A5  F117         	movff	?___fladd+3,sprintf@fval+3
  6480  010E02                     l8217:
  6481                           
  6482                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6483  010E02  0101               	movlb	1	; () banked
  6484  010E04  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6485  010E06  D008               	goto	l8219
  6486  010E08  0101               	movlb	1	; () banked
  6487  010E0A  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6488  010E0C  E12E               	bnz	l8225
  6489  010E0E  0E0A               	movlw	10
  6490  010E10  0101               	movlb	1	; () banked
  6491  010E12  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6492  010E14  B0D8               	btfsc	status,0,c
  6493  010E16  D029               	goto	l8225
  6494  010E18                     l8219:
  6495                           
  6496                           ; BSR set to: 1
  6497  010E18  0101               	movlb	1	; () banked
  6498  010E1A  5114               	movf	sprintf@fval& (0+255),w,b
  6499  010E1C  0101               	movlb	1	; () banked
  6500  010E1E  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6501  010E20  0101               	movlb	1	; () banked
  6502  010E22  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6503  010E24  0101               	movlb	1	; () banked
  6504  010E26  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6505  010E28  B4D8               	btfsc	status,2,c
  6506  010E2A  D06D               	goto	l8239
  6507                           
  6508                           ; BSR set to: 1
  6509  010E2C  C114  F09E         	movff	sprintf@fval,___fltol@f1
  6510  010E30  C115  F09F         	movff	sprintf@fval+1,___fltol@f1+1
  6511  010E34  C116  F0A0         	movff	sprintf@fval+2,___fltol@f1+2
  6512  010E38  C117  F0A1         	movff	sprintf@fval+3,___fltol@f1+3
  6513  010E3C  EC5B  F0A4         	call	___fltol	;wreg free
  6514  010E40  0100               	movlb	0	; () banked
  6515  010E42  519E               	movf	?___fltol& (0+255),w,b
  6516  010E44  0100               	movlb	0	; () banked
  6517  010E46  119F               	iorwf	(?___fltol+1)& (0+255),w,b
  6518  010E48  0100               	movlb	0	; () banked
  6519  010E4A  11A0               	iorwf	(?___fltol+2)& (0+255),w,b
  6520  010E4C  0100               	movlb	0	; () banked
  6521  010E4E  11A1               	iorwf	(?___fltol+3)& (0+255),w,b
  6522  010E50  A4D8               	btfss	status,2,c
  6523  010E52  D059               	goto	l8239
  6524                           
  6525                           ; BSR set to: 0
  6526  010E54  0101               	movlb	1	; () banked
  6527  010E56  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6528  010E58  D056               	goto	l8239
  6529  010E5A  0101               	movlb	1	; () banked
  6530  010E5C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6531  010E5E  E105               	bnz	l8225
  6532  010E60  0E02               	movlw	2
  6533  010E62  0101               	movlb	1	; () banked
  6534  010E64  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6535  010E66  A0D8               	btfss	status,0,c
  6536  010E68  D04E               	goto	l8239
  6537  010E6A                     l8225:
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6541  010E6A  C10E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6542  010E6E  C10F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6543  010E72  C110  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6544  010E76  C111  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6545  010E7A  0E5F               	movlw	95
  6546  010E7C  0100               	movlb	0	; () banked
  6547  010E7E  6F72               	movwf	___flge@ff2& (0+255),b
  6548  010E80  0E70               	movlw	112
  6549  010E82  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6550  010E84  0E89               	movlw	137
  6551  010E86  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6552  010E88  0E40               	movlw	64
  6553  010E8A  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6554  010E8C  EC04  F0A1         	call	___flge	;wreg free
  6555  010E90  0100               	movlb	0	; () banked
  6556  010E92  B0D8               	btfsc	status,0,c
  6557  010E94  D003               	goto	l8229
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6561  010E96  0101               	movlb	1	; () banked
  6562  010E98  0EF7               	movlw	247
  6563  010E9A  D002               	goto	L3
  6564  010E9C                     l8229:
  6565                           
  6566                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6567  010E9C  0101               	movlb	1	; () banked
  6568  010E9E  0EF8               	movlw	248
  6569  010EA0                     L3:
  6570  010EA0  270C               	addwf	sprintf@exp& (0+255),f,b
  6571  010EA2  0EFF               	movlw	255
  6572  010EA4  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6573                           
  6574                           ; BSR set to: 1
  6575                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6576                           
  6577                           ; BSR set to: 1
  6578  010EA6  0101               	movlb	1	; () banked
  6579  010EA8  510C               	movf	sprintf@exp& (0+255),w,b
  6580  010EAA  EC93  F08D         	call	_scale
  6581  010EAE  C095  F10E         	movff	?_scale,sprintf@tmpval
  6582  010EB2  C096  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6583  010EB6  C097  F110         	movff	?_scale+2,sprintf@tmpval+2
  6584  010EBA  C098  F111         	movff	?_scale+3,sprintf@tmpval+3
  6585  010EBE  C114  F06E         	movff	sprintf@fval,__div_to_l_@f1
  6586  010EC2  C115  F06F         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6587  010EC6  C116  F070         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6588  010ECA  C117  F071         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6589  010ECE  C10E  F072         	movff	sprintf@tmpval,__div_to_l_@f2
  6590  010ED2  C10F  F073         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6591  010ED6  C110  F074         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6592  010EDA  C111  F075         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6593  010EDE  ECCC  F0A1         	call	__div_to_l_	;wreg free
  6594  010EE2  C06E  F108         	movff	?__div_to_l_,sprintf@val
  6595  010EE6  C06F  F109         	movff	?__div_to_l_+1,sprintf@val+1
  6596  010EEA  C070  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  6597  010EEE  C071  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  6598                           
  6599                           ;doprnt.c: 1129: fval = 0.0;
  6600  010EF2  0E00               	movlw	0
  6601  010EF4  0101               	movlb	1	; () banked
  6602  010EF6  6F14               	movwf	sprintf@fval& (0+255),b
  6603  010EF8  0E00               	movlw	0
  6604  010EFA  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  6605  010EFC  0E00               	movlw	0
  6606  010EFE  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  6607  010F00  0E00               	movlw	0
  6608  010F02  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  6609                           
  6610                           ;doprnt.c: 1130: } else {
  6611  010F04  D03C               	goto	l8243
  6612  010F06                     l8239:
  6613                           
  6614                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6615  010F06  C114  F09E         	movff	sprintf@fval,___fltol@f1
  6616  010F0A  C115  F09F         	movff	sprintf@fval+1,___fltol@f1+1
  6617  010F0E  C116  F0A0         	movff	sprintf@fval+2,___fltol@f1+2
  6618  010F12  C117  F0A1         	movff	sprintf@fval+3,___fltol@f1+3
  6619  010F16  EC5B  F0A4         	call	___fltol	;wreg free
  6620  010F1A  C09E  F108         	movff	?___fltol,sprintf@val
  6621  010F1E  C09F  F109         	movff	?___fltol+1,sprintf@val+1
  6622  010F22  C0A0  F10A         	movff	?___fltol+2,sprintf@val+2
  6623  010F26  C0A1  F10B         	movff	?___fltol+3,sprintf@val+3
  6624                           
  6625                           ;doprnt.c: 1132: fval -= (double)val;
  6626  010F2A  C114  F0B6         	movff	sprintf@fval,___flsub@b
  6627  010F2E  C115  F0B7         	movff	sprintf@fval+1,___flsub@b+1
  6628  010F32  C116  F0B8         	movff	sprintf@fval+2,___flsub@b+2
  6629  010F36  C117  F0B9         	movff	sprintf@fval+3,___flsub@b+3
  6630  010F3A  C108  F06E         	movff	sprintf@val,___xxtofl@val
  6631  010F3E  C109  F06F         	movff	sprintf@val+1,___xxtofl@val+1
  6632  010F42  C10A  F070         	movff	sprintf@val+2,___xxtofl@val+2
  6633  010F46  C10B  F071         	movff	sprintf@val+3,___xxtofl@val+3
  6634  010F4A  0E00               	movlw	0
  6635  010F4C  EC6B  F09E         	call	___xxtofl
  6636  010F50  C06E  F0BA         	movff	?___xxtofl,___flsub@a
  6637  010F54  C06F  F0BB         	movff	?___xxtofl+1,___flsub@a+1
  6638  010F58  C070  F0BC         	movff	?___xxtofl+2,___flsub@a+2
  6639  010F5C  C071  F0BD         	movff	?___xxtofl+3,___flsub@a+3
  6640  010F60  EC58  F0A8         	call	___flsub	;wreg free
  6641  010F64  C0B6  F114         	movff	?___flsub,sprintf@fval
  6642  010F68  C0B7  F115         	movff	?___flsub+1,sprintf@fval+1
  6643  010F6C  C0B8  F116         	movff	?___flsub+2,sprintf@fval+2
  6644  010F70  C0B9  F117         	movff	?___flsub+3,sprintf@fval+3
  6645                           
  6646                           ;doprnt.c: 1133: exp = 0;
  6647  010F74  0E00               	movlw	0
  6648  010F76  0101               	movlb	1	; () banked
  6649  010F78  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  6650  010F7A  0E00               	movlw	0
  6651  010F7C  6F0C               	movwf	sprintf@exp& (0+255),b
  6652  010F7E                     l8243:
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;doprnt.c: 1134: }
  6656                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6657  010F7E  0E01               	movlw	1
  6658  010F80  0101               	movlb	1	; () banked
  6659  010F82  6F18               	movwf	sprintf@c& (0+255),b
  6660  010F84                     l8245:
  6661                           
  6662                           ; BSR set to: 1
  6663  010F84  0E0A               	movlw	10
  6664  010F86  0101               	movlb	1	; () banked
  6665  010F88  1918               	xorwf	sprintf@c& (0+255),w,b
  6666  010F8A  B4D8               	btfsc	status,2,c
  6667  010F8C  D021               	goto	l8257
  6668                           
  6669                           ; BSR set to: 1
  6670                           ;doprnt.c: 1137: if(val < dpowers[c])
  6671                           
  6672                           ; BSR set to: 1
  6673                           
  6674                           ; BSR set to: 1
  6675  010F8E  0101               	movlb	1	; () banked
  6676  010F90  5118               	movf	sprintf@c& (0+255),w,b
  6677  010F92  0D04               	mullw	4
  6678  010F94  0E53               	movlw	low _dpowers
  6679  010F96  24F3               	addwf	prodl,w,c
  6680  010F98  6EF6               	movwf	tblptrl,c
  6681  010F9A  0EFF               	movlw	high _dpowers
  6682  010F9C  20F4               	addwfc	prodh,w,c
  6683  010F9E  6EF7               	movwf	tblptrh,c
  6684  010FA0                     	if	1	;There are 3 active tblptr bytes
  6685  010FA0  6AF8               	clrf	tblptru,c
  6686  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6687  010FA4  22F8               	addwfc	tblptru,f,c
  6688  010FA6                     	endif
  6689  010FA6  0009               	tblrd		*+
  6690  010FA8  50F5               	movf	tablat,w,c
  6691  010FAA  0101               	movlb	1	; () banked
  6692  010FAC  5D08               	subwf	sprintf@val& (0+255),w,b
  6693  010FAE  0009               	tblrd		*+
  6694  010FB0  50F5               	movf	tablat,w,c
  6695  010FB2  0101               	movlb	1	; () banked
  6696  010FB4  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  6697  010FB6  0009               	tblrd		*+
  6698  010FB8  50F5               	movf	tablat,w,c
  6699  010FBA  0101               	movlb	1	; () banked
  6700  010FBC  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  6701  010FBE  0009               	tblrd		*+
  6702  010FC0  50F5               	movf	tablat,w,c
  6703  010FC2  0101               	movlb	1	; () banked
  6704  010FC4  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  6705  010FC6  A0D8               	btfss	status,0,c
  6706  010FC8  D003               	goto	l8257
  6707                           
  6708                           ; BSR set to: 1
  6709                           
  6710                           ; BSR set to: 1
  6711                           
  6712                           ; BSR set to: 1
  6713                           ;doprnt.c: 1138: break;
  6714  010FCA  0101               	movlb	1	; () banked
  6715  010FCC  2B18               	incf	sprintf@c& (0+255),f,b
  6716  010FCE  D7DA               	goto	l8245
  6717  010FD0                     l8257:
  6718                           
  6719                           ; BSR set to: 1
  6720                           ;doprnt.c: 1175: {
  6721                           ;doprnt.c: 1188: if(flag & 0x03)
  6722  010FD0  0E03               	movlw	3
  6723  010FD2  0101               	movlb	1	; () banked
  6724  010FD4  1506               	andwf	sprintf@flag& (0+255),w,b
  6725  010FD6  0100               	movlb	0	; () banked
  6726  010FD8  6FC6               	movwf	??_sprintf& (0+255),b
  6727  010FDA  0E00               	movlw	0
  6728  010FDC  0101               	movlb	1	; () banked
  6729  010FDE  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6730  010FE0  0100               	movlb	0	; () banked
  6731  010FE2  6FC7               	movwf	(??_sprintf+1)& (0+255),b
  6732  010FE4  0100               	movlb	0	; () banked
  6733  010FE6  51C6               	movf	??_sprintf& (0+255),w,b
  6734  010FE8  0100               	movlb	0	; () banked
  6735  010FEA  11C7               	iorwf	(??_sprintf+1)& (0+255),w,b
  6736  010FEC  B4D8               	btfsc	status,2,c
  6737  010FEE  D058               	goto	l8271
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6741  010FF0  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6742  010FF4  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6743  010FF8  0E2D               	movlw	45
  6744  010FFA  D050               	goto	L4
  6745  010FFC                     l8261:
  6746                           
  6747                           ; BSR set to: 0
  6748  010FFC  0100               	movlb	0	; () banked
  6749  010FFE  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6750  011000  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;doprnt.c: 1195: }
  6754                           ;doprnt.c: 1196: while(c--) {
  6755  011002  D04E               	goto	l8271
  6756  011004                     l8263:
  6757                           
  6758                           ;doprnt.c: 1200: {
  6759                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6760  011004  C108  F06E         	movff	sprintf@val,___lldiv@dividend
  6761  011008  C109  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6762  01100C  C10A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6763  011010  C10B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  6764  011014  0101               	movlb	1	; () banked
  6765  011016  5118               	movf	sprintf@c& (0+255),w,b
  6766  011018  0D04               	mullw	4
  6767  01101A  0E53               	movlw	low _dpowers
  6768  01101C  24F3               	addwf	prodl,w,c
  6769  01101E  6EF6               	movwf	tblptrl,c
  6770  011020  0EFF               	movlw	high _dpowers
  6771  011022  20F4               	addwfc	prodh,w,c
  6772  011024  6EF7               	movwf	tblptrh,c
  6773  011026                     	if	1	;There are 3 active tblptr bytes
  6774  011026  6AF8               	clrf	tblptru,c
  6775  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6776  01102A  22F8               	addwfc	tblptru,f,c
  6777  01102C                     	endif
  6778  01102C  0009               	tblrd		*+
  6779  01102E  CFF5 F072          	movff	tablat,___lldiv@divisor
  6780  011032  0009               	tblrd		*+
  6781  011034  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  6782  011038  0009               	tblrd		*+
  6783  01103A  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  6784  01103E  000A               	tblrd		*-
  6785  011040  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  6786  011044  EC8A  F0A6         	call	___lldiv	;wreg free
  6787  011048  C06E  F10E         	movff	?___lldiv,sprintf@tmpval
  6788  01104C  C06F  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  6789  011050  C070  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  6790  011054  C071  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  6791                           
  6792                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6793  011058  C10E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  6794  01105C  C10F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6795  011060  C110  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6796  011064  C111  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6797  011068  0E0A               	movlw	10
  6798  01106A  0100               	movlb	0	; () banked
  6799  01106C  6F72               	movwf	___llmod@divisor& (0+255),b
  6800  01106E  0E00               	movlw	0
  6801  011070  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  6802  011072  0E00               	movlw	0
  6803  011074  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  6804  011076  0E00               	movlw	0
  6805  011078  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  6806  01107A  EC96  F0A7         	call	___llmod	;wreg free
  6807  01107E  C06E  F10E         	movff	?___llmod,sprintf@tmpval
  6808  011082  C06F  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  6809  011086  C070  F110         	movff	?___llmod+2,sprintf@tmpval+2
  6810  01108A  C071  F111         	movff	?___llmod+3,sprintf@tmpval+3
  6811                           
  6812                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6813  01108E  0101               	movlb	1	; () banked
  6814  011090  510E               	movf	sprintf@tmpval& (0+255),w,b
  6815  011092  0F30               	addlw	48
  6816  011094  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6817  011098  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6818  01109C                     L4:
  6819  01109C  6EDF               	movwf	indf2,c
  6820  01109E  D7AE               	goto	l8261
  6821  0110A0                     l8271:
  6822                           
  6823                           ; BSR set to: 0
  6824  0110A0  0101               	movlb	1	; () banked
  6825  0110A2  0718               	decf	sprintf@c& (0+255),f,b
  6826  0110A4  0101               	movlb	1	; () banked
  6827  0110A6  2918               	incf	sprintf@c& (0+255),w,b
  6828  0110A8  B4D8               	btfsc	status,2,c
  6829  0110AA  D00E               	goto	l8279
  6830  0110AC  D7AB               	goto	l8263
  6831  0110AE                     l8273:
  6832                           
  6833                           ; BSR set to: 1
  6834                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6835  0110AE  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6836  0110B2  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6837  0110B6  0E30               	movlw	48
  6838  0110B8  6EDF               	movwf	indf2,c
  6839                           
  6840                           ; BSR set to: 1
  6841  0110BA  0100               	movlb	0	; () banked
  6842  0110BC  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6843  0110BE  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;doprnt.c: 1209: exp--;
  6847  0110C0  0101               	movlb	1	; () banked
  6848  0110C2  070C               	decf	sprintf@exp& (0+255),f,b
  6849  0110C4  A0D8               	btfss	status,0,c
  6850  0110C6  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6851  0110C8                     l8279:
  6852                           
  6853                           ; BSR set to: 1
  6854  0110C8  0101               	movlb	1	; () banked
  6855  0110CA  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6856  0110CC  D007               	goto	l8281
  6857  0110CE  0101               	movlb	1	; () banked
  6858  0110D0  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6859  0110D2  E1ED               	bnz	l8273
  6860  0110D4  0101               	movlb	1	; () banked
  6861  0110D6  050C               	decf	sprintf@exp& (0+255),w,b
  6862  0110D8  B0D8               	btfsc	status,0,c
  6863  0110DA  D7E9               	goto	l8273
  6864  0110DC                     l8281:
  6865                           
  6866                           ; BSR set to: 1
  6867                           ;doprnt.c: 1210: }
  6868                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6869  0110DC  0101               	movlb	1	; () banked
  6870  0110DE  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6871  0110E0  D00C               	goto	l887
  6872  0110E2  0101               	movlb	1	; () banked
  6873  0110E4  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6874  0110E6  E105               	bnz	u11120
  6875  0110E8  0E09               	movlw	9
  6876  0110EA  0101               	movlb	1	; () banked
  6877  0110EC  5D12               	subwf	sprintf@prec& (0+255),w,b
  6878  0110EE  A0D8               	btfss	status,0,c
  6879  0110F0  D004               	goto	l887
  6880  0110F2                     u11120:
  6881                           
  6882                           ; BSR set to: 1
  6883                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6884  0110F2  0E08               	movlw	8
  6885  0110F4  0101               	movlb	1	; () banked
  6886  0110F6  6F18               	movwf	sprintf@c& (0+255),b
  6887  0110F8  D002               	goto	l8285
  6888  0110FA                     l887:
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;doprnt.c: 1213: else
  6892                           ;doprnt.c: 1214: c = prec;
  6893  0110FA  C112  F118         	movff	sprintf@prec,sprintf@c
  6894  0110FE                     l8285:
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;doprnt.c: 1215: prec -= c;
  6898  0110FE  0101               	movlb	1	; () banked
  6899  011100  5118               	movf	sprintf@c& (0+255),w,b
  6900  011102  0101               	movlb	1	; () banked
  6901  011104  5F12               	subwf	sprintf@prec& (0+255),f,b
  6902  011106  0E00               	movlw	0
  6903  011108  0101               	movlb	1	; () banked
  6904  01110A  BF18               	btfsc	sprintf@c& (0+255),7,b
  6905  01110C  0EFF               	movlw	255
  6906  01110E  0101               	movlb	1	; () banked
  6907  011110  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6908                           
  6909                           ; BSR set to: 1
  6910                           ;doprnt.c: 1219: if(c)
  6911  011112  0101               	movlb	1	; () banked
  6912  011114  5118               	movf	sprintf@c& (0+255),w,b
  6913  011116  0101               	movlb	1	; () banked
  6914  011118  B4D8               	btfsc	status,2,c
  6915  01111A  D009               	goto	l8293
  6916                           
  6917                           ; BSR set to: 1
  6918                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  6919  01111C  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  6920  011120  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  6921  011124  0E2E               	movlw	46
  6922  011126  6EDF               	movwf	indf2,c
  6923                           
  6924                           ; BSR set to: 1
  6925  011128  0100               	movlb	0	; () banked
  6926  01112A  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  6927  01112C  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  6928  01112E                     l8293:
  6929                           
  6930                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6931  01112E  0101               	movlb	1	; () banked
  6932  011130  5118               	movf	sprintf@c& (0+255),w,b
  6933  011132  EC93  F08D         	call	_scale
  6934  011136  C095  F100         	movff	?_scale,_sprintf$4272
  6935  01113A  C096  F101         	movff	?_scale+1,_sprintf$4272+1
  6936  01113E  C097  F102         	movff	?_scale+2,_sprintf$4272+2
  6937  011142  C098  F103         	movff	?_scale+3,_sprintf$4272+3
  6938                           
  6939                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6940  011146  C114  F080         	movff	sprintf@fval,___flmul@a
  6941  01114A  C115  F081         	movff	sprintf@fval+1,___flmul@a+1
  6942  01114E  C116  F082         	movff	sprintf@fval+2,___flmul@a+2
  6943  011152  C117  F083         	movff	sprintf@fval+3,___flmul@a+3
  6944  011156  C100  F07C         	movff	_sprintf$4272,___flmul@b
  6945  01115A  C101  F07D         	movff	_sprintf$4272+1,___flmul@b+1
  6946  01115E  C102  F07E         	movff	_sprintf$4272+2,___flmul@b+2
  6947  011162  C103  F07F         	movff	_sprintf$4272+3,___flmul@b+3
  6948  011166  ECFA  F094         	call	___flmul	;wreg free
  6949  01116A  C07C  F09E         	movff	?___flmul,___fltol@f1
  6950  01116E  C07D  F09F         	movff	?___flmul+1,___fltol@f1+1
  6951  011172  C07E  F0A0         	movff	?___flmul+2,___fltol@f1+2
  6952  011176  C07F  F0A1         	movff	?___flmul+3,___fltol@f1+3
  6953  01117A  EC5B  F0A4         	call	___fltol	;wreg free
  6954  01117E  C09E  F108         	movff	?___fltol,sprintf@val
  6955  011182  C09F  F109         	movff	?___fltol+1,sprintf@val+1
  6956  011186  C0A0  F10A         	movff	?___fltol+2,sprintf@val+2
  6957  01118A  C0A1  F10B         	movff	?___fltol+3,sprintf@val+3
  6958                           
  6959                           ;doprnt.c: 1228: while(c--) {
  6960  01118E  D07A               	goto	l8307
  6961  011190                     l8297:
  6962                           
  6963                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6964  011190  C108  F06E         	movff	sprintf@val,___lldiv@dividend
  6965  011194  C109  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  6966  011198  C10A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  6967  01119C  C10B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  6968  0111A0  0101               	movlb	1	; () banked
  6969  0111A2  5118               	movf	sprintf@c& (0+255),w,b
  6970  0111A4  0D04               	mullw	4
  6971  0111A6  0E53               	movlw	low _dpowers
  6972  0111A8  24F3               	addwf	prodl,w,c
  6973  0111AA  6EF6               	movwf	tblptrl,c
  6974  0111AC  0EFF               	movlw	high _dpowers
  6975  0111AE  20F4               	addwfc	prodh,w,c
  6976  0111B0  6EF7               	movwf	tblptrh,c
  6977  0111B2                     	if	1	;There are 3 active tblptr bytes
  6978  0111B2  6AF8               	clrf	tblptru,c
  6979  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  6980  0111B6  22F8               	addwfc	tblptru,f,c
  6981  0111B8                     	endif
  6982  0111B8  0009               	tblrd		*+
  6983  0111BA  CFF5 F072          	movff	tablat,___lldiv@divisor
  6984  0111BE  0009               	tblrd		*+
  6985  0111C0  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  6986  0111C4  0009               	tblrd		*+
  6987  0111C6  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  6988  0111CA  000A               	tblrd		*-
  6989  0111CC  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  6990  0111D0  EC8A  F0A6         	call	___lldiv	;wreg free
  6991  0111D4  C06E  F10E         	movff	?___lldiv,sprintf@tmpval
  6992  0111D8  C06F  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  6993  0111DC  C070  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  6994  0111E0  C071  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  6995                           
  6996                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6997  0111E4  C10E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  6998  0111E8  C10F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6999  0111EC  C110  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7000  0111F0  C111  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7001  0111F4  0E0A               	movlw	10
  7002  0111F6  0100               	movlb	0	; () banked
  7003  0111F8  6F72               	movwf	___llmod@divisor& (0+255),b
  7004  0111FA  0E00               	movlw	0
  7005  0111FC  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  7006  0111FE  0E00               	movlw	0
  7007  011200  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  7008  011202  0E00               	movlw	0
  7009  011204  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  7010  011206  EC96  F0A7         	call	___llmod	;wreg free
  7011  01120A  C06E  F10E         	movff	?___llmod,sprintf@tmpval
  7012  01120E  C06F  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  7013  011212  C070  F110         	movff	?___llmod+2,sprintf@tmpval+2
  7014  011216  C071  F111         	movff	?___llmod+3,sprintf@tmpval+3
  7015                           
  7016                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7017  01121A  0101               	movlb	1	; () banked
  7018  01121C  510E               	movf	sprintf@tmpval& (0+255),w,b
  7019  01121E  0F30               	addlw	48
  7020  011220  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7021  011224  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7022  011228  6EDF               	movwf	indf2,c
  7023                           
  7024                           ; BSR set to: 1
  7025  01122A  0100               	movlb	0	; () banked
  7026  01122C  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7027  01122E  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;doprnt.c: 1232: val %= dpowers[c];
  7031  011230  C108  F06E         	movff	sprintf@val,___llmod@dividend
  7032  011234  C109  F06F         	movff	sprintf@val+1,___llmod@dividend+1
  7033  011238  C10A  F070         	movff	sprintf@val+2,___llmod@dividend+2
  7034  01123C  C10B  F071         	movff	sprintf@val+3,___llmod@dividend+3
  7035  011240  0101               	movlb	1	; () banked
  7036  011242  5118               	movf	sprintf@c& (0+255),w,b
  7037  011244  0D04               	mullw	4
  7038  011246  0E53               	movlw	low _dpowers
  7039  011248  24F3               	addwf	prodl,w,c
  7040  01124A  6EF6               	movwf	tblptrl,c
  7041  01124C  0EFF               	movlw	high _dpowers
  7042  01124E  20F4               	addwfc	prodh,w,c
  7043  011250  6EF7               	movwf	tblptrh,c
  7044  011252                     	if	1	;There are 3 active tblptr bytes
  7045  011252  6AF8               	clrf	tblptru,c
  7046  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7047  011256  22F8               	addwfc	tblptru,f,c
  7048  011258                     	endif
  7049  011258  0009               	tblrd		*+
  7050  01125A  CFF5 F072          	movff	tablat,___llmod@divisor
  7051  01125E  0009               	tblrd		*+
  7052  011260  CFF5 F073          	movff	tablat,___llmod@divisor+1
  7053  011264  0009               	tblrd		*+
  7054  011266  CFF5 F074          	movff	tablat,___llmod@divisor+2
  7055  01126A  000A               	tblrd		*-
  7056  01126C  CFF5 F075          	movff	tablat,___llmod@divisor+3
  7057  011270  EC96  F0A7         	call	___llmod	;wreg free
  7058  011274  C06E  F108         	movff	?___llmod,sprintf@val
  7059  011278  C06F  F109         	movff	?___llmod+1,sprintf@val+1
  7060  01127C  C070  F10A         	movff	?___llmod+2,sprintf@val+2
  7061  011280  C071  F10B         	movff	?___llmod+3,sprintf@val+3
  7062  011284                     l8307:
  7063  011284  0101               	movlb	1	; () banked
  7064  011286  0718               	decf	sprintf@c& (0+255),f,b
  7065  011288  0101               	movlb	1	; () banked
  7066  01128A  2918               	incf	sprintf@c& (0+255),w,b
  7067  01128C  B4D8               	btfsc	status,2,c
  7068  01128E  D00E               	goto	l8315
  7069  011290  D77F               	goto	l8297
  7070  011292                     l8309:
  7071                           
  7072                           ; BSR set to: 1
  7073                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7074  011292  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7075  011296  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7076  01129A  0E30               	movlw	48
  7077  01129C  6EDF               	movwf	indf2,c
  7078                           
  7079                           ; BSR set to: 1
  7080  01129E  0100               	movlb	0	; () banked
  7081  0112A0  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7082  0112A2  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;doprnt.c: 1237: prec--;
  7086  0112A4  0101               	movlb	1	; () banked
  7087  0112A6  0712               	decf	sprintf@prec& (0+255),f,b
  7088  0112A8  A0D8               	btfss	status,0,c
  7089  0112AA  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  7090  0112AC                     l8315:
  7091                           
  7092                           ; BSR set to: 1
  7093  0112AC  0101               	movlb	1	; () banked
  7094  0112AE  5112               	movf	sprintf@prec& (0+255),w,b
  7095  0112B0  0101               	movlb	1	; () banked
  7096  0112B2  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7097  0112B4  B4D8               	btfsc	status,2,c
  7098  0112B6  D059               	goto	l8337
  7099  0112B8  D7EC               	goto	l8309
  7100  0112BA                     l8317:
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;doprnt.c: 1246: }
  7104                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7105  0112BA  0101               	movlb	1	; () banked
  7106  0112BC  5112               	movf	sprintf@prec& (0+255),w,b
  7107  0112BE  0101               	movlb	1	; () banked
  7108  0112C0  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7109  0112C2  A4D8               	btfss	status,2,c
  7110  0112C4  D00D               	goto	l8323
  7111                           
  7112                           ; BSR set to: 1
  7113  0112C6  0101               	movlb	1	; () banked
  7114  0112C8  5108               	movf	sprintf@val& (0+255),w,b
  7115  0112CA  0101               	movlb	1	; () banked
  7116  0112CC  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  7117  0112CE  0101               	movlb	1	; () banked
  7118  0112D0  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  7119  0112D2  0101               	movlb	1	; () banked
  7120  0112D4  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  7121  0112D6  A4D8               	btfss	status,2,c
  7122  0112D8  D003               	goto	l8323
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;doprnt.c: 1291: prec++;
  7126  0112DA  0101               	movlb	1	; () banked
  7127  0112DC  4B12               	infsnz	sprintf@prec& (0+255),f,b
  7128  0112DE  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  7129  0112E0                     l8323:
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;doprnt.c: 1339: if(c < prec)
  7133  0112E0  0E80               	movlw	128
  7134  0112E2  0101               	movlb	1	; () banked
  7135  0112E4  BF18               	btfsc	sprintf@c& (0+255),7,b
  7136  0112E6  0E7F               	movlw	127
  7137  0112E8  0100               	movlb	0	; () banked
  7138  0112EA  6FC6               	movwf	??_sprintf& (0+255),b
  7139  0112EC  0101               	movlb	1	; () banked
  7140  0112EE  5112               	movf	sprintf@prec& (0+255),w,b
  7141  0112F0  0101               	movlb	1	; () banked
  7142  0112F2  5D18               	subwf	sprintf@c& (0+255),w,b
  7143  0112F4  0101               	movlb	1	; () banked
  7144  0112F6  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  7145  0112F8  0A80               	xorlw	128
  7146  0112FA  0100               	movlb	0	; () banked
  7147  0112FC  59C6               	subwfb	??_sprintf& (0+255),w,b
  7148  0112FE  B0D8               	btfsc	status,0,c
  7149  011300  D003               	goto	l8327
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;doprnt.c: 1340: c = prec;
  7153  011302  C112  F118         	movff	sprintf@prec,sprintf@c
  7154  011306  D018               	goto	l8331
  7155  011308                     l8327:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;doprnt.c: 1341: else if(prec < c)
  7159  011308  0101               	movlb	1	; () banked
  7160  01130A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  7161  01130C  0A80               	xorlw	128
  7162  01130E  0100               	movlb	0	; () banked
  7163  011310  6FC6               	movwf	??_sprintf& (0+255),b
  7164  011312  0101               	movlb	1	; () banked
  7165  011314  5118               	movf	sprintf@c& (0+255),w,b
  7166  011316  0101               	movlb	1	; () banked
  7167  011318  5D12               	subwf	sprintf@prec& (0+255),w,b
  7168  01131A  0E80               	movlw	128
  7169  01131C  0101               	movlb	1	; () banked
  7170  01131E  BF18               	btfsc	sprintf@c& (0+255),7,b
  7171  011320  0E7F               	movlw	127
  7172  011322  0100               	movlb	0	; () banked
  7173  011324  59C6               	subwfb	??_sprintf& (0+255),w,b
  7174  011326  B0D8               	btfsc	status,0,c
  7175  011328  D007               	goto	l8331
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;doprnt.c: 1342: prec = c;
  7179  01132A  0101               	movlb	1	; () banked
  7180  01132C  5118               	movf	sprintf@c& (0+255),w,b
  7181  01132E  0101               	movlb	1	; () banked
  7182  011330  6F12               	movwf	sprintf@prec& (0+255),b
  7183  011332  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  7184  011334  BF12               	btfsc	sprintf@prec& (0+255),7,b
  7185  011336  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  7186  011338                     l8331:
  7187                           
  7188                           ;doprnt.c: 1422: {
  7189                           ;doprnt.c: 1438: if(flag & 0x03)
  7190  011338  0E03               	movlw	3
  7191  01133A  0101               	movlb	1	; () banked
  7192  01133C  1506               	andwf	sprintf@flag& (0+255),w,b
  7193  01133E  0100               	movlb	0	; () banked
  7194  011340  6FC6               	movwf	??_sprintf& (0+255),b
  7195  011342  0E00               	movlw	0
  7196  011344  0101               	movlb	1	; () banked
  7197  011346  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  7198  011348  0100               	movlb	0	; () banked
  7199  01134A  6FC7               	movwf	(??_sprintf+1)& (0+255),b
  7200  01134C  0100               	movlb	0	; () banked
  7201  01134E  51C6               	movf	??_sprintf& (0+255),w,b
  7202  011350  0100               	movlb	0	; () banked
  7203  011352  11C7               	iorwf	(??_sprintf+1)& (0+255),w,b
  7204  011354  B4D8               	btfsc	status,2,c
  7205  011356  D009               	goto	l8337
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7209  011358  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7210  01135C  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7211  011360  0E2D               	movlw	45
  7212  011362  6EDF               	movwf	indf2,c
  7213  011364                     l8335:
  7214                           
  7215                           ; BSR set to: 0
  7216  011364  0100               	movlb	0	; () banked
  7217  011366  4BBE               	infsnz	sprintf@sp& (0+255),f,b
  7218  011368  2BBF               	incf	(sprintf@sp+1)& (0+255),f,b
  7219  01136A                     l8337:
  7220  01136A  C0C0  FFF6         	movff	sprintf@f,tblptrl
  7221  01136E  C0C1  FFF7         	movff	sprintf@f+1,tblptrh
  7222  011372  0100               	movlb	0	; () banked
  7223  011374  4BC0               	infsnz	sprintf@f& (0+255),f,b
  7224  011376  2BC1               	incf	(sprintf@f+1)& (0+255),f,b
  7225  011378                     	if	0	;tblptru may be non-zero
  7226  011378                     	endif
  7227  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7228  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7229  01137A  6EF8               	movwf	tblptru,c
  7230  01137C                     	endif
  7231  01137C  0008               	tblrd		*
  7232  01137E  CFF5 F118          	movff	tablat,sprintf@c
  7233  011382  0101               	movlb	1	; () banked
  7234  011384  5118               	movf	sprintf@c& (0+255),w,b
  7235  011386  A4D8               	btfss	status,2,c
  7236  011388  EF8B  F085         	goto	l8139
  7237  01138C                     l8339:
  7238                           
  7239                           ; BSR set to: 1
  7240                           ;doprnt.c: 1538: *sp = 0;
  7241  01138C  C0BE  FFD9         	movff	sprintf@sp,fsr2l
  7242  011390  C0BF  FFDA         	movff	sprintf@sp+1,fsr2h
  7243  011394  0E00               	movlw	0
  7244  011396  6EDF               	movwf	indf2,c
  7245  011398  0012               	return	
  7246  01139A                     __end_of_sprintf:
  7247                           	opt stack 0
  7248                           tblptru	equ	0xFF8
  7249                           tblptrh	equ	0xFF7
  7250                           tblptrl	equ	0xFF6
  7251                           tablat	equ	0xFF5
  7252                           prodh	equ	0xFF4
  7253                           prodl	equ	0xFF3
  7254                           intcon	equ	0xFF2
  7255                           postinc0	equ	0xFEE
  7256                           wreg	equ	0xFE8
  7257                           indf2	equ	0xFDF
  7258                           postinc2	equ	0xFDE
  7259                           fsr2h	equ	0xFDA
  7260                           fsr2l	equ	0xFD9
  7261                           status	equ	0xFD8
  7262                           
  7263 ;; *************** function _scale *****************
  7264 ;; Defined at:
  7265 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  scl             1    wreg     char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  scl             1   61[BANK0 ] char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  4   53[BANK0 ] char 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7279 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;Total ram usage:        9 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    4
  7286 ;; This function calls:
  7287 ;;		___awdiv
  7288 ;;		___awmod
  7289 ;;		___flmul
  7290 ;; This function is called by:
  7291 ;;		_sprintf
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text13
  7296  011B26                     __ptext13:
  7297                           	opt stack 0
  7298  011B26                     _scale:
  7299                           	opt stack 24
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;incstack = 0
  7303                           ;scale@scl stored from wreg
  7304  011B26  0100               	movlb	0	; () banked
  7305  011B28  6F9D               	movwf	scale@scl& (0+255),b
  7306                           
  7307                           ;doprnt.c: 428: if(scl < 0) {
  7308  011B2A  0100               	movlb	0	; () banked
  7309  011B2C  AF9D               	btfss	scale@scl& (0+255),7,b
  7310  011B2E  D145               	goto	l7465
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;doprnt.c: 429: scl = -scl;
  7314  011B30  0100               	movlb	0	; () banked
  7315  011B32  6D9D               	negf	scale@scl& (0+255),b
  7316                           
  7317                           ;doprnt.c: 430: if(scl>=110)
  7318  011B34  0100               	movlb	0	; () banked
  7319  011B36  519D               	movf	scale@scl& (0+255),w,b
  7320  011B38  0A80               	xorlw	128
  7321  011B3A  0F12               	addlw	-238
  7322  011B3C  A0D8               	btfss	status,0,c
  7323  011B3E  D0BB               	goto	l7455
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7327  011B40  0E00               	movlw	0
  7328  011B42  0100               	movlb	0	; () banked
  7329  011B44  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7330  011B46  0E0A               	movlw	10
  7331  011B48  6F76               	movwf	___awdiv@divisor& (0+255),b
  7332  011B4A  0E00               	movlw	0
  7333  011B4C  0100               	movlb	0	; () banked
  7334  011B4E  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7335  011B50  0E64               	movlw	100
  7336  011B52  6F70               	movwf	___awmod@divisor& (0+255),b
  7337  011B54  0100               	movlb	0	; () banked
  7338  011B56  519D               	movf	scale@scl& (0+255),w,b
  7339  011B58  0100               	movlb	0	; () banked
  7340  011B5A  6F6E               	movwf	___awmod@dividend& (0+255),b
  7341  011B5C  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7342  011B5E  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7343  011B60  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7344  011B62  EC45  F0A7         	call	___awmod	;wreg free
  7345  011B66  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7346  011B6A  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7347  011B6E  EC2B  F0A6         	call	___awdiv	;wreg free
  7348  011B72  0100               	movlb	0	; () banked
  7349  011B74  90D8               	bcf	status,0,c
  7350  011B76  3774               	rlcf	?___awdiv& (0+255),f,b
  7351  011B78  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7352  011B7A  0100               	movlb	0	; () banked
  7353  011B7C  90D8               	bcf	status,0,c
  7354  011B7E  3774               	rlcf	?___awdiv& (0+255),f,b
  7355  011B80  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7356  011B82  0E24               	movlw	36
  7357  011B84  0100               	movlb	0	; () banked
  7358  011B86  2774               	addwf	?___awdiv& (0+255),f,b
  7359  011B88  0E00               	movlw	0
  7360  011B8A  0100               	movlb	0	; () banked
  7361  011B8C  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7362  011B8E  0EEB               	movlw	low __npowers_
  7363  011B90  0100               	movlb	0	; () banked
  7364  011B92  2574               	addwf	?___awdiv& (0+255),w,b
  7365  011B94  6EF6               	movwf	tblptrl,c
  7366  011B96  0EFE               	movlw	high __npowers_
  7367  011B98  0100               	movlb	0	; () banked
  7368  011B9A  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7369  011B9C  6EF7               	movwf	tblptrh,c
  7370  011B9E                     	if	1	;There are 3 active tblptr bytes
  7371  011B9E  6AF8               	clrf	tblptru,c
  7372  011BA0  0E00               	movlw	low (__mediumconst shr (0+16))
  7373  011BA2  22F8               	addwfc	tblptru,f,c
  7374  011BA4                     	endif
  7375  011BA4  0009               	tblrd		*+
  7376  011BA6  CFF5 F080          	movff	tablat,___flmul@a
  7377  011BAA  0009               	tblrd		*+
  7378  011BAC  CFF5 F081          	movff	tablat,___flmul@a+1
  7379  011BB0  0009               	tblrd		*+
  7380  011BB2  CFF5 F082          	movff	tablat,___flmul@a+2
  7381  011BB6  000A               	tblrd		*-
  7382  011BB8  CFF5 F083          	movff	tablat,___flmul@a+3
  7383  011BBC  0E00               	movlw	0
  7384  011BBE  0100               	movlb	0	; () banked
  7385  011BC0  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7386  011BC2  0E64               	movlw	100
  7387  011BC4  6F76               	movwf	___awdiv@divisor& (0+255),b
  7388  011BC6  0100               	movlb	0	; () banked
  7389  011BC8  519D               	movf	scale@scl& (0+255),w,b
  7390  011BCA  0100               	movlb	0	; () banked
  7391  011BCC  6F74               	movwf	___awdiv@dividend& (0+255),b
  7392  011BCE  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7393  011BD0  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7394  011BD2  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7395  011BD4  EC2B  F0A6         	call	___awdiv	;wreg free
  7396  011BD8  0100               	movlb	0	; () banked
  7397  011BDA  90D8               	bcf	status,0,c
  7398  011BDC  3774               	rlcf	?___awdiv& (0+255),f,b
  7399  011BDE  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7400  011BE0  0100               	movlb	0	; () banked
  7401  011BE2  90D8               	bcf	status,0,c
  7402  011BE4  3774               	rlcf	?___awdiv& (0+255),f,b
  7403  011BE6  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7404  011BE8  0E48               	movlw	72
  7405  011BEA  0100               	movlb	0	; () banked
  7406  011BEC  2774               	addwf	?___awdiv& (0+255),f,b
  7407  011BEE  0E00               	movlw	0
  7408  011BF0  0100               	movlb	0	; () banked
  7409  011BF2  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7410  011BF4  0EEB               	movlw	low __npowers_
  7411  011BF6  0100               	movlb	0	; () banked
  7412  011BF8  2574               	addwf	?___awdiv& (0+255),w,b
  7413  011BFA  6EF6               	movwf	tblptrl,c
  7414  011BFC  0EFE               	movlw	high __npowers_
  7415  011BFE  0100               	movlb	0	; () banked
  7416  011C00  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7417  011C02  6EF7               	movwf	tblptrh,c
  7418  011C04                     	if	1	;There are 3 active tblptr bytes
  7419  011C04  6AF8               	clrf	tblptru,c
  7420  011C06  0E00               	movlw	low (__mediumconst shr (0+16))
  7421  011C08  22F8               	addwfc	tblptru,f,c
  7422  011C0A                     	endif
  7423  011C0A  0009               	tblrd		*+
  7424  011C0C  CFF5 F07C          	movff	tablat,___flmul@b
  7425  011C10  0009               	tblrd		*+
  7426  011C12  CFF5 F07D          	movff	tablat,___flmul@b+1
  7427  011C16  0009               	tblrd		*+
  7428  011C18  CFF5 F07E          	movff	tablat,___flmul@b+2
  7429  011C1C  000A               	tblrd		*-
  7430  011C1E  CFF5 F07F          	movff	tablat,___flmul@b+3
  7431  011C22  ECFA  F094         	call	___flmul	;wreg free
  7432  011C26  C07C  F099         	movff	?___flmul,_scale$4271
  7433  011C2A  C07D  F09A         	movff	?___flmul+1,_scale$4271+1
  7434  011C2E  C07E  F09B         	movff	?___flmul+2,_scale$4271+2
  7435  011C32  C07F  F09C         	movff	?___flmul+3,_scale$4271+3
  7436                           
  7437                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7438  011C36  C099  F07C         	movff	_scale$4271,___flmul@b
  7439  011C3A  C09A  F07D         	movff	_scale$4271+1,___flmul@b+1
  7440  011C3E  C09B  F07E         	movff	_scale$4271+2,___flmul@b+2
  7441  011C42  C09C  F07F         	movff	_scale$4271+3,___flmul@b+3
  7442  011C46  0E00               	movlw	0
  7443  011C48  0100               	movlb	0	; () banked
  7444  011C4A  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7445  011C4C  0E0A               	movlw	10
  7446  011C4E  6F70               	movwf	___awmod@divisor& (0+255),b
  7447  011C50  0100               	movlb	0	; () banked
  7448  011C52  519D               	movf	scale@scl& (0+255),w,b
  7449  011C54  0100               	movlb	0	; () banked
  7450  011C56  6F6E               	movwf	___awmod@dividend& (0+255),b
  7451  011C58  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7452  011C5A  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7453  011C5C  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7454  011C5E  EC45  F0A7         	call	___awmod	;wreg free
  7455  011C62  0100               	movlb	0	; () banked
  7456  011C64  90D8               	bcf	status,0,c
  7457  011C66  376E               	rlcf	?___awmod& (0+255),f,b
  7458  011C68  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7459  011C6A  0100               	movlb	0	; () banked
  7460  011C6C  90D8               	bcf	status,0,c
  7461  011C6E  376E               	rlcf	?___awmod& (0+255),f,b
  7462  011C70  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7463  011C72  0EEB               	movlw	low __npowers_
  7464  011C74  0100               	movlb	0	; () banked
  7465  011C76  256E               	addwf	?___awmod& (0+255),w,b
  7466  011C78  6EF6               	movwf	tblptrl,c
  7467  011C7A  0EFE               	movlw	high __npowers_
  7468  011C7C  0100               	movlb	0	; () banked
  7469  011C7E  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7470  011C80  6EF7               	movwf	tblptrh,c
  7471  011C82                     	if	1	;There are 3 active tblptr bytes
  7472  011C82  6AF8               	clrf	tblptru,c
  7473  011C84  0E00               	movlw	low (__mediumconst shr (0+16))
  7474  011C86  22F8               	addwfc	tblptru,f,c
  7475  011C88                     	endif
  7476  011C88  0009               	tblrd		*+
  7477  011C8A  CFF5 F080          	movff	tablat,___flmul@a
  7478  011C8E  0009               	tblrd		*+
  7479  011C90  CFF5 F081          	movff	tablat,___flmul@a+1
  7480  011C94  0009               	tblrd		*+
  7481  011C96  CFF5 F082          	movff	tablat,___flmul@a+2
  7482  011C9A  000A               	tblrd		*-
  7483  011C9C  CFF5 F083          	movff	tablat,___flmul@a+3
  7484  011CA0  ECFA  F094         	call	___flmul	;wreg free
  7485  011CA4  C07C  F095         	movff	?___flmul,?_scale
  7486  011CA8  C07D  F096         	movff	?___flmul+1,?_scale+1
  7487  011CAC  C07E  F097         	movff	?___flmul+2,?_scale+2
  7488  011CB0  C07F  F098         	movff	?___flmul+3,?_scale+3
  7489  011CB4  0012               	return	
  7490  011CB6                     l7455:
  7491                           
  7492                           ;doprnt.c: 432: else if(scl > 10)
  7493  011CB6  0100               	movlb	0	; () banked
  7494  011CB8  519D               	movf	scale@scl& (0+255),w,b
  7495  011CBA  0A80               	xorlw	128
  7496  011CBC  0F75               	addlw	-139
  7497  011CBE  A0D8               	btfss	status,0,c
  7498  011CC0  D063               	goto	l7461
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7502  011CC2  0E00               	movlw	0
  7503  011CC4  0100               	movlb	0	; () banked
  7504  011CC6  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7505  011CC8  0E0A               	movlw	10
  7506  011CCA  6F76               	movwf	___awdiv@divisor& (0+255),b
  7507  011CCC  0100               	movlb	0	; () banked
  7508  011CCE  519D               	movf	scale@scl& (0+255),w,b
  7509  011CD0  0100               	movlb	0	; () banked
  7510  011CD2  6F74               	movwf	___awdiv@dividend& (0+255),b
  7511  011CD4  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7512  011CD6  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7513  011CD8  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7514  011CDA  EC2B  F0A6         	call	___awdiv	;wreg free
  7515  011CDE  0100               	movlb	0	; () banked
  7516  011CE0  90D8               	bcf	status,0,c
  7517  011CE2  3774               	rlcf	?___awdiv& (0+255),f,b
  7518  011CE4  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7519  011CE6  0100               	movlb	0	; () banked
  7520  011CE8  90D8               	bcf	status,0,c
  7521  011CEA  3774               	rlcf	?___awdiv& (0+255),f,b
  7522  011CEC  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7523  011CEE  0E24               	movlw	36
  7524  011CF0  0100               	movlb	0	; () banked
  7525  011CF2  2774               	addwf	?___awdiv& (0+255),f,b
  7526  011CF4  0E00               	movlw	0
  7527  011CF6  0100               	movlb	0	; () banked
  7528  011CF8  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7529  011CFA  0EEB               	movlw	low __npowers_
  7530  011CFC  0100               	movlb	0	; () banked
  7531  011CFE  2574               	addwf	?___awdiv& (0+255),w,b
  7532  011D00  6EF6               	movwf	tblptrl,c
  7533  011D02  0EFE               	movlw	high __npowers_
  7534  011D04  0100               	movlb	0	; () banked
  7535  011D06  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7536  011D08  6EF7               	movwf	tblptrh,c
  7537  011D0A                     	if	1	;There are 3 active tblptr bytes
  7538  011D0A  6AF8               	clrf	tblptru,c
  7539  011D0C  0E00               	movlw	low (__mediumconst shr (0+16))
  7540  011D0E  22F8               	addwfc	tblptru,f,c
  7541  011D10                     	endif
  7542  011D10  0009               	tblrd		*+
  7543  011D12  CFF5 F07C          	movff	tablat,___flmul@b
  7544  011D16  0009               	tblrd		*+
  7545  011D18  CFF5 F07D          	movff	tablat,___flmul@b+1
  7546  011D1C  0009               	tblrd		*+
  7547  011D1E  CFF5 F07E          	movff	tablat,___flmul@b+2
  7548  011D22  000A               	tblrd		*-
  7549  011D24  CFF5 F07F          	movff	tablat,___flmul@b+3
  7550  011D28  0E00               	movlw	0
  7551  011D2A  0100               	movlb	0	; () banked
  7552  011D2C  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7553  011D2E  0E0A               	movlw	10
  7554  011D30  6F70               	movwf	___awmod@divisor& (0+255),b
  7555  011D32  0100               	movlb	0	; () banked
  7556  011D34  519D               	movf	scale@scl& (0+255),w,b
  7557  011D36  0100               	movlb	0	; () banked
  7558  011D38  6F6E               	movwf	___awmod@dividend& (0+255),b
  7559  011D3A  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7560  011D3C  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7561  011D3E  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7562  011D40  EC45  F0A7         	call	___awmod	;wreg free
  7563  011D44  0100               	movlb	0	; () banked
  7564  011D46  90D8               	bcf	status,0,c
  7565  011D48  376E               	rlcf	?___awmod& (0+255),f,b
  7566  011D4A  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7567  011D4C  0100               	movlb	0	; () banked
  7568  011D4E  90D8               	bcf	status,0,c
  7569  011D50  376E               	rlcf	?___awmod& (0+255),f,b
  7570  011D52  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7571  011D54  0EEB               	movlw	low __npowers_
  7572  011D56  0100               	movlb	0	; () banked
  7573  011D58  256E               	addwf	?___awmod& (0+255),w,b
  7574  011D5A  6EF6               	movwf	tblptrl,c
  7575  011D5C  0EFE               	movlw	high __npowers_
  7576  011D5E  0100               	movlb	0	; () banked
  7577  011D60  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7578  011D62  6EF7               	movwf	tblptrh,c
  7579  011D64                     	if	1	;There are 3 active tblptr bytes
  7580  011D64  6AF8               	clrf	tblptru,c
  7581  011D66  0E00               	movlw	low (__mediumconst shr (0+16))
  7582  011D68  22F8               	addwfc	tblptru,f,c
  7583  011D6A                     	endif
  7584  011D6A  0009               	tblrd		*+
  7585  011D6C  CFF5 F080          	movff	tablat,___flmul@a
  7586  011D70  0009               	tblrd		*+
  7587  011D72  CFF5 F081          	movff	tablat,___flmul@a+1
  7588  011D76  0009               	tblrd		*+
  7589  011D78  CFF5 F082          	movff	tablat,___flmul@a+2
  7590  011D7C  000A               	tblrd		*-
  7591  011D7E  CFF5 F083          	movff	tablat,___flmul@a+3
  7592  011D82  ECFA  F094         	call	___flmul	;wreg free
  7593  011D86  D78E               	goto	L5
  7594  011D88                     l7461:
  7595                           
  7596                           ;doprnt.c: 434: return _npowers_[scl];
  7597  011D88  0100               	movlb	0	; () banked
  7598  011D8A  519D               	movf	scale@scl& (0+255),w,b
  7599  011D8C  0D04               	mullw	4
  7600  011D8E  0EEB               	movlw	low __npowers_
  7601  011D90  24F3               	addwf	prodl,w,c
  7602  011D92  6EF6               	movwf	tblptrl,c
  7603  011D94  0EFE               	movlw	high __npowers_
  7604  011D96  20F4               	addwfc	prodh,w,c
  7605  011D98  6EF7               	movwf	tblptrh,c
  7606  011D9A                     	if	1	;There are 3 active tblptr bytes
  7607  011D9A  6AF8               	clrf	tblptru,c
  7608  011D9C  0E00               	movlw	low (__mediumconst shr (0+16))
  7609  011D9E  22F8               	addwfc	tblptru,f,c
  7610  011DA0                     	endif
  7611  011DA0  0009               	tblrd		*+
  7612  011DA2  CFF5 F095          	movff	tablat,?_scale
  7613  011DA6  0009               	tblrd		*+
  7614  011DA8  CFF5 F096          	movff	tablat,?_scale+1
  7615  011DAC  0009               	tblrd		*+
  7616  011DAE  CFF5 F097          	movff	tablat,?_scale+2
  7617  011DB2  000A               	tblrd		*-
  7618  011DB4  CFF5 F098          	movff	tablat,?_scale+3
  7619                           
  7620                           ; BSR set to: 0
  7621  011DB8  0012               	return	
  7622  011DBA                     l7465:
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;doprnt.c: 435: }
  7626                           ;doprnt.c: 436: if(scl>=110)
  7627  011DBA  0100               	movlb	0	; () banked
  7628  011DBC  519D               	movf	scale@scl& (0+255),w,b
  7629  011DBE  0A80               	xorlw	128
  7630  011DC0  0F12               	addlw	-238
  7631  011DC2  A0D8               	btfss	status,0,c
  7632  011DC4  D0BB               	goto	l7473
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7636  011DC6  0E00               	movlw	0
  7637  011DC8  0100               	movlb	0	; () banked
  7638  011DCA  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7639  011DCC  0E0A               	movlw	10
  7640  011DCE  6F76               	movwf	___awdiv@divisor& (0+255),b
  7641  011DD0  0E00               	movlw	0
  7642  011DD2  0100               	movlb	0	; () banked
  7643  011DD4  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7644  011DD6  0E64               	movlw	100
  7645  011DD8  6F70               	movwf	___awmod@divisor& (0+255),b
  7646  011DDA  0100               	movlb	0	; () banked
  7647  011DDC  519D               	movf	scale@scl& (0+255),w,b
  7648  011DDE  0100               	movlb	0	; () banked
  7649  011DE0  6F6E               	movwf	___awmod@dividend& (0+255),b
  7650  011DE2  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7651  011DE4  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7652  011DE6  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7653  011DE8  EC45  F0A7         	call	___awmod	;wreg free
  7654  011DEC  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7655  011DF0  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7656  011DF4  EC2B  F0A6         	call	___awdiv	;wreg free
  7657  011DF8  0100               	movlb	0	; () banked
  7658  011DFA  90D8               	bcf	status,0,c
  7659  011DFC  3774               	rlcf	?___awdiv& (0+255),f,b
  7660  011DFE  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7661  011E00  0100               	movlb	0	; () banked
  7662  011E02  90D8               	bcf	status,0,c
  7663  011E04  3774               	rlcf	?___awdiv& (0+255),f,b
  7664  011E06  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7665  011E08  0E24               	movlw	36
  7666  011E0A  0100               	movlb	0	; () banked
  7667  011E0C  2774               	addwf	?___awdiv& (0+255),f,b
  7668  011E0E  0E00               	movlw	0
  7669  011E10  0100               	movlb	0	; () banked
  7670  011E12  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7671  011E14  0E1F               	movlw	low __powers_
  7672  011E16  0100               	movlb	0	; () banked
  7673  011E18  2574               	addwf	?___awdiv& (0+255),w,b
  7674  011E1A  6EF6               	movwf	tblptrl,c
  7675  011E1C  0EFF               	movlw	high __powers_
  7676  011E1E  0100               	movlb	0	; () banked
  7677  011E20  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7678  011E22  6EF7               	movwf	tblptrh,c
  7679  011E24                     	if	1	;There are 3 active tblptr bytes
  7680  011E24  6AF8               	clrf	tblptru,c
  7681  011E26  0E00               	movlw	low (__mediumconst shr (0+16))
  7682  011E28  22F8               	addwfc	tblptru,f,c
  7683  011E2A                     	endif
  7684  011E2A  0009               	tblrd		*+
  7685  011E2C  CFF5 F080          	movff	tablat,___flmul@a
  7686  011E30  0009               	tblrd		*+
  7687  011E32  CFF5 F081          	movff	tablat,___flmul@a+1
  7688  011E36  0009               	tblrd		*+
  7689  011E38  CFF5 F082          	movff	tablat,___flmul@a+2
  7690  011E3C  000A               	tblrd		*-
  7691  011E3E  CFF5 F083          	movff	tablat,___flmul@a+3
  7692  011E42  0E00               	movlw	0
  7693  011E44  0100               	movlb	0	; () banked
  7694  011E46  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7695  011E48  0E64               	movlw	100
  7696  011E4A  6F76               	movwf	___awdiv@divisor& (0+255),b
  7697  011E4C  0100               	movlb	0	; () banked
  7698  011E4E  519D               	movf	scale@scl& (0+255),w,b
  7699  011E50  0100               	movlb	0	; () banked
  7700  011E52  6F74               	movwf	___awdiv@dividend& (0+255),b
  7701  011E54  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7702  011E56  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7703  011E58  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7704  011E5A  EC2B  F0A6         	call	___awdiv	;wreg free
  7705  011E5E  0100               	movlb	0	; () banked
  7706  011E60  90D8               	bcf	status,0,c
  7707  011E62  3774               	rlcf	?___awdiv& (0+255),f,b
  7708  011E64  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7709  011E66  0100               	movlb	0	; () banked
  7710  011E68  90D8               	bcf	status,0,c
  7711  011E6A  3774               	rlcf	?___awdiv& (0+255),f,b
  7712  011E6C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7713  011E6E  0E48               	movlw	72
  7714  011E70  0100               	movlb	0	; () banked
  7715  011E72  2774               	addwf	?___awdiv& (0+255),f,b
  7716  011E74  0E00               	movlw	0
  7717  011E76  0100               	movlb	0	; () banked
  7718  011E78  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7719  011E7A  0E1F               	movlw	low __powers_
  7720  011E7C  0100               	movlb	0	; () banked
  7721  011E7E  2574               	addwf	?___awdiv& (0+255),w,b
  7722  011E80  6EF6               	movwf	tblptrl,c
  7723  011E82  0EFF               	movlw	high __powers_
  7724  011E84  0100               	movlb	0	; () banked
  7725  011E86  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7726  011E88  6EF7               	movwf	tblptrh,c
  7727  011E8A                     	if	1	;There are 3 active tblptr bytes
  7728  011E8A  6AF8               	clrf	tblptru,c
  7729  011E8C  0E00               	movlw	low (__mediumconst shr (0+16))
  7730  011E8E  22F8               	addwfc	tblptru,f,c
  7731  011E90                     	endif
  7732  011E90  0009               	tblrd		*+
  7733  011E92  CFF5 F07C          	movff	tablat,___flmul@b
  7734  011E96  0009               	tblrd		*+
  7735  011E98  CFF5 F07D          	movff	tablat,___flmul@b+1
  7736  011E9C  0009               	tblrd		*+
  7737  011E9E  CFF5 F07E          	movff	tablat,___flmul@b+2
  7738  011EA2  000A               	tblrd		*-
  7739  011EA4  CFF5 F07F          	movff	tablat,___flmul@b+3
  7740  011EA8  ECFA  F094         	call	___flmul	;wreg free
  7741  011EAC  C07C  F099         	movff	?___flmul,_scale$4271
  7742  011EB0  C07D  F09A         	movff	?___flmul+1,_scale$4271+1
  7743  011EB4  C07E  F09B         	movff	?___flmul+2,_scale$4271+2
  7744  011EB8  C07F  F09C         	movff	?___flmul+3,_scale$4271+3
  7745                           
  7746                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7747  011EBC  C099  F07C         	movff	_scale$4271,___flmul@b
  7748  011EC0  C09A  F07D         	movff	_scale$4271+1,___flmul@b+1
  7749  011EC4  C09B  F07E         	movff	_scale$4271+2,___flmul@b+2
  7750  011EC8  C09C  F07F         	movff	_scale$4271+3,___flmul@b+3
  7751  011ECC  0E00               	movlw	0
  7752  011ECE  0100               	movlb	0	; () banked
  7753  011ED0  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7754  011ED2  0E0A               	movlw	10
  7755  011ED4  6F70               	movwf	___awmod@divisor& (0+255),b
  7756  011ED6  0100               	movlb	0	; () banked
  7757  011ED8  519D               	movf	scale@scl& (0+255),w,b
  7758  011EDA  0100               	movlb	0	; () banked
  7759  011EDC  6F6E               	movwf	___awmod@dividend& (0+255),b
  7760  011EDE  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7761  011EE0  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7762  011EE2  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7763  011EE4  EC45  F0A7         	call	___awmod	;wreg free
  7764  011EE8  0100               	movlb	0	; () banked
  7765  011EEA  90D8               	bcf	status,0,c
  7766  011EEC  376E               	rlcf	?___awmod& (0+255),f,b
  7767  011EEE  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7768  011EF0  0100               	movlb	0	; () banked
  7769  011EF2  90D8               	bcf	status,0,c
  7770  011EF4  376E               	rlcf	?___awmod& (0+255),f,b
  7771  011EF6  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7772  011EF8  0E1F               	movlw	low __powers_
  7773  011EFA  0100               	movlb	0	; () banked
  7774  011EFC  256E               	addwf	?___awmod& (0+255),w,b
  7775  011EFE  6EF6               	movwf	tblptrl,c
  7776  011F00  0EFF               	movlw	high __powers_
  7777  011F02  0100               	movlb	0	; () banked
  7778  011F04  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7779  011F06  6EF7               	movwf	tblptrh,c
  7780  011F08                     	if	1	;There are 3 active tblptr bytes
  7781  011F08  6AF8               	clrf	tblptru,c
  7782  011F0A  0E00               	movlw	low (__mediumconst shr (0+16))
  7783  011F0C  22F8               	addwfc	tblptru,f,c
  7784  011F0E                     	endif
  7785  011F0E  0009               	tblrd		*+
  7786  011F10  CFF5 F080          	movff	tablat,___flmul@a
  7787  011F14  0009               	tblrd		*+
  7788  011F16  CFF5 F081          	movff	tablat,___flmul@a+1
  7789  011F1A  0009               	tblrd		*+
  7790  011F1C  CFF5 F082          	movff	tablat,___flmul@a+2
  7791  011F20  000A               	tblrd		*-
  7792  011F22  CFF5 F083          	movff	tablat,___flmul@a+3
  7793  011F26  ECFA  F094         	call	___flmul	;wreg free
  7794  011F2A  C07C  F095         	movff	?___flmul,?_scale
  7795  011F2E  C07D  F096         	movff	?___flmul+1,?_scale+1
  7796  011F32  C07E  F097         	movff	?___flmul+2,?_scale+2
  7797  011F36  C07F  F098         	movff	?___flmul+3,?_scale+3
  7798  011F3A  0012               	return	
  7799  011F3C                     l7473:
  7800                           
  7801                           ;doprnt.c: 438: else if(scl > 10)
  7802  011F3C  0100               	movlb	0	; () banked
  7803  011F3E  519D               	movf	scale@scl& (0+255),w,b
  7804  011F40  0A80               	xorlw	128
  7805  011F42  0F75               	addlw	-139
  7806  011F44  A0D8               	btfss	status,0,c
  7807  011F46  D063               	goto	l7479
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7811  011F48  0E00               	movlw	0
  7812  011F4A  0100               	movlb	0	; () banked
  7813  011F4C  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7814  011F4E  0E0A               	movlw	10
  7815  011F50  6F76               	movwf	___awdiv@divisor& (0+255),b
  7816  011F52  0100               	movlb	0	; () banked
  7817  011F54  519D               	movf	scale@scl& (0+255),w,b
  7818  011F56  0100               	movlb	0	; () banked
  7819  011F58  6F74               	movwf	___awdiv@dividend& (0+255),b
  7820  011F5A  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7821  011F5C  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7822  011F5E  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7823  011F60  EC2B  F0A6         	call	___awdiv	;wreg free
  7824  011F64  0100               	movlb	0	; () banked
  7825  011F66  90D8               	bcf	status,0,c
  7826  011F68  3774               	rlcf	?___awdiv& (0+255),f,b
  7827  011F6A  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7828  011F6C  0100               	movlb	0	; () banked
  7829  011F6E  90D8               	bcf	status,0,c
  7830  011F70  3774               	rlcf	?___awdiv& (0+255),f,b
  7831  011F72  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7832  011F74  0E24               	movlw	36
  7833  011F76  0100               	movlb	0	; () banked
  7834  011F78  2774               	addwf	?___awdiv& (0+255),f,b
  7835  011F7A  0E00               	movlw	0
  7836  011F7C  0100               	movlb	0	; () banked
  7837  011F7E  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7838  011F80  0E1F               	movlw	low __powers_
  7839  011F82  0100               	movlb	0	; () banked
  7840  011F84  2574               	addwf	?___awdiv& (0+255),w,b
  7841  011F86  6EF6               	movwf	tblptrl,c
  7842  011F88  0EFF               	movlw	high __powers_
  7843  011F8A  0100               	movlb	0	; () banked
  7844  011F8C  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7845  011F8E  6EF7               	movwf	tblptrh,c
  7846  011F90                     	if	1	;There are 3 active tblptr bytes
  7847  011F90  6AF8               	clrf	tblptru,c
  7848  011F92  0E00               	movlw	low (__mediumconst shr (0+16))
  7849  011F94  22F8               	addwfc	tblptru,f,c
  7850  011F96                     	endif
  7851  011F96  0009               	tblrd		*+
  7852  011F98  CFF5 F07C          	movff	tablat,___flmul@b
  7853  011F9C  0009               	tblrd		*+
  7854  011F9E  CFF5 F07D          	movff	tablat,___flmul@b+1
  7855  011FA2  0009               	tblrd		*+
  7856  011FA4  CFF5 F07E          	movff	tablat,___flmul@b+2
  7857  011FA8  000A               	tblrd		*-
  7858  011FAA  CFF5 F07F          	movff	tablat,___flmul@b+3
  7859  011FAE  0E00               	movlw	0
  7860  011FB0  0100               	movlb	0	; () banked
  7861  011FB2  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7862  011FB4  0E0A               	movlw	10
  7863  011FB6  6F70               	movwf	___awmod@divisor& (0+255),b
  7864  011FB8  0100               	movlb	0	; () banked
  7865  011FBA  519D               	movf	scale@scl& (0+255),w,b
  7866  011FBC  0100               	movlb	0	; () banked
  7867  011FBE  6F6E               	movwf	___awmod@dividend& (0+255),b
  7868  011FC0  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7869  011FC2  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7870  011FC4  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7871  011FC6  EC45  F0A7         	call	___awmod	;wreg free
  7872  011FCA  0100               	movlb	0	; () banked
  7873  011FCC  90D8               	bcf	status,0,c
  7874  011FCE  376E               	rlcf	?___awmod& (0+255),f,b
  7875  011FD0  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7876  011FD2  0100               	movlb	0	; () banked
  7877  011FD4  90D8               	bcf	status,0,c
  7878  011FD6  376E               	rlcf	?___awmod& (0+255),f,b
  7879  011FD8  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7880  011FDA  0E1F               	movlw	low __powers_
  7881  011FDC  0100               	movlb	0	; () banked
  7882  011FDE  256E               	addwf	?___awmod& (0+255),w,b
  7883  011FE0  6EF6               	movwf	tblptrl,c
  7884  011FE2  0EFF               	movlw	high __powers_
  7885  011FE4  0100               	movlb	0	; () banked
  7886  011FE6  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7887  011FE8  6EF7               	movwf	tblptrh,c
  7888  011FEA                     	if	1	;There are 3 active tblptr bytes
  7889  011FEA  6AF8               	clrf	tblptru,c
  7890  011FEC  0E00               	movlw	low (__mediumconst shr (0+16))
  7891  011FEE  22F8               	addwfc	tblptru,f,c
  7892  011FF0                     	endif
  7893  011FF0  0009               	tblrd		*+
  7894  011FF2  CFF5 F080          	movff	tablat,___flmul@a
  7895  011FF6  0009               	tblrd		*+
  7896  011FF8  CFF5 F081          	movff	tablat,___flmul@a+1
  7897  011FFC  0009               	tblrd		*+
  7898  011FFE  CFF5 F082          	movff	tablat,___flmul@a+2
  7899  012002  000A               	tblrd		*-
  7900  012004  CFF5 F083          	movff	tablat,___flmul@a+3
  7901  012008  ECFA  F094         	call	___flmul	;wreg free
  7902  01200C  D78E               	goto	L6
  7903  01200E                     l7479:
  7904                           
  7905                           ;doprnt.c: 440: return _powers_[scl];
  7906  01200E  0100               	movlb	0	; () banked
  7907  012010  519D               	movf	scale@scl& (0+255),w,b
  7908  012012  0D04               	mullw	4
  7909  012014  0E1F               	movlw	low __powers_
  7910  012016  24F3               	addwf	prodl,w,c
  7911  012018  6EF6               	movwf	tblptrl,c
  7912  01201A  0EFF               	movlw	high __powers_
  7913  01201C  20F4               	addwfc	prodh,w,c
  7914  01201E  6EF7               	movwf	tblptrh,c
  7915  012020                     	if	1	;There are 3 active tblptr bytes
  7916  012020  6AF8               	clrf	tblptru,c
  7917  012022  0E00               	movlw	low (__mediumconst shr (0+16))
  7918  012024  22F8               	addwfc	tblptru,f,c
  7919  012026                     	endif
  7920  012026  0009               	tblrd		*+
  7921  012028  CFF5 F095          	movff	tablat,?_scale
  7922  01202C  0009               	tblrd		*+
  7923  01202E  CFF5 F096          	movff	tablat,?_scale+1
  7924  012032  0009               	tblrd		*+
  7925  012034  CFF5 F097          	movff	tablat,?_scale+2
  7926  012038  000A               	tblrd		*-
  7927  01203A  CFF5 F098          	movff	tablat,?_scale+3
  7928  01203E  0012               	return	
  7929  012040                     __end_of_scale:
  7930                           	opt stack 0
  7931                           tblptru	equ	0xFF8
  7932                           tblptrh	equ	0xFF7
  7933                           tblptrl	equ	0xFF6
  7934                           tablat	equ	0xFF5
  7935                           prodh	equ	0xFF4
  7936                           prodl	equ	0xFF3
  7937                           intcon	equ	0xFF2
  7938                           postinc0	equ	0xFEE
  7939                           wreg	equ	0xFE8
  7940                           indf2	equ	0xFDF
  7941                           postinc2	equ	0xFDE
  7942                           fsr2h	equ	0xFDA
  7943                           fsr2l	equ	0xFD9
  7944                           status	equ	0xFD8
  7945                           
  7946 ;; *************** function _isdigit *****************
  7947 ;; Defined at:
  7948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  c               1    wreg     unsigned char 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  c               1   16[BANK0 ] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;		None               void
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;Total ram usage:        3 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    3
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_sprintf
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text14
  7977  0152B4                     __ptext14:
  7978                           	opt stack 0
  7979  0152B4                     _isdigit:
  7980                           	opt stack 25
  7981                           
  7982                           ;incstack = 0
  7983                           ;isdigit@c stored from wreg
  7984  0152B4  0100               	movlb	0	; () banked
  7985  0152B6  6F70               	movwf	isdigit@c& (0+255),b
  7986  0152B8  0E00               	movlw	0
  7987  0152BA  0100               	movlb	0	; () banked
  7988  0152BC  6F6F               	movwf	_isdigit$3851& (0+255),b
  7989                           
  7990                           ; BSR set to: 0
  7991  0152BE  0E3A               	movlw	58
  7992  0152C0  0100               	movlb	0	; () banked
  7993  0152C2  6170               	cpfslt	isdigit@c& (0+255),b
  7994  0152C4  D007               	goto	l7491
  7995                           
  7996                           ; BSR set to: 0
  7997  0152C6  0E2F               	movlw	47
  7998  0152C8  0100               	movlb	0	; () banked
  7999  0152CA  6570               	cpfsgt	isdigit@c& (0+255),b
  8000  0152CC  D003               	goto	l7491
  8001                           
  8002                           ; BSR set to: 0
  8003  0152CE  0E01               	movlw	1
  8004  0152D0  0100               	movlb	0	; () banked
  8005  0152D2  6F6F               	movwf	_isdigit$3851& (0+255),b
  8006  0152D4                     l7491:
  8007                           
  8008                           ; BSR set to: 0
  8009  0152D4  C06F  F06E         	movff	_isdigit$3851,??_isdigit
  8010  0152D8  0100               	movlb	0	; () banked
  8011  0152DA  316E               	rrcf	??_isdigit& (0+255),w,b
  8012  0152DC  0012               	return	
  8013  0152DE                     __end_of_isdigit:
  8014                           	opt stack 0
  8015                           tblptru	equ	0xFF8
  8016                           tblptrh	equ	0xFF7
  8017                           tblptrl	equ	0xFF6
  8018                           tablat	equ	0xFF5
  8019                           prodh	equ	0xFF4
  8020                           prodl	equ	0xFF3
  8021                           intcon	equ	0xFF2
  8022                           postinc0	equ	0xFEE
  8023                           wreg	equ	0xFE8
  8024                           indf2	equ	0xFDF
  8025                           postinc2	equ	0xFDE
  8026                           fsr2h	equ	0xFDA
  8027                           fsr2l	equ	0xFD9
  8028                           status	equ	0xFD8
  8029                           
  8030 ;; *************** function _fround *****************
  8031 ;; Defined at:
  8032 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  prec            1    wreg     unsigned char 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  prec            1   65[BANK0 ] unsigned char 
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  4   53[BANK0 ] unsigned char 
  8039 ;; Registers used:
  8040 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8047 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;Total ram usage:       13 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:    4
  8053 ;; This function calls:
  8054 ;;		___awdiv
  8055 ;;		___awmod
  8056 ;;		___flmul
  8057 ;; This function is called by:
  8058 ;;		_sprintf
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text15
  8063  0139E0                     __ptext15:
  8064                           	opt stack 0
  8065  0139E0                     _fround:
  8066                           	opt stack 24
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;incstack = 0
  8070                           ;fround@prec stored from wreg
  8071  0139E0  0100               	movlb	0	; () banked
  8072  0139E2  6FA1               	movwf	fround@prec& (0+255),b
  8073                           
  8074                           ;doprnt.c: 413: if(prec>=110)
  8075  0139E4  0E6D               	movlw	109
  8076  0139E6  0100               	movlb	0	; () banked
  8077  0139E8  65A1               	cpfsgt	fround@prec& (0+255),b
  8078  0139EA  D0CD               	goto	l7433
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8082  0139EC  0E00               	movlw	0
  8083  0139EE  0100               	movlb	0	; () banked
  8084  0139F0  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8085  0139F2  0E0A               	movlw	10
  8086  0139F4  6F76               	movwf	___awdiv@divisor& (0+255),b
  8087  0139F6  0E00               	movlw	0
  8088  0139F8  0100               	movlb	0	; () banked
  8089  0139FA  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8090  0139FC  0E64               	movlw	100
  8091  0139FE  6F70               	movwf	___awmod@divisor& (0+255),b
  8092  013A00  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8093  013A04  0100               	movlb	0	; () banked
  8094  013A06  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8095  013A08  EC45  F0A7         	call	___awmod	;wreg free
  8096  013A0C  C06E  F074         	movff	?___awmod,___awdiv@dividend
  8097  013A10  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  8098  013A14  EC2B  F0A6         	call	___awdiv	;wreg free
  8099  013A18  0100               	movlb	0	; () banked
  8100  013A1A  90D8               	bcf	status,0,c
  8101  013A1C  3774               	rlcf	?___awdiv& (0+255),f,b
  8102  013A1E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8103  013A20  0100               	movlb	0	; () banked
  8104  013A22  90D8               	bcf	status,0,c
  8105  013A24  3774               	rlcf	?___awdiv& (0+255),f,b
  8106  013A26  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8107  013A28  0E24               	movlw	36
  8108  013A2A  0100               	movlb	0	; () banked
  8109  013A2C  2774               	addwf	?___awdiv& (0+255),f,b
  8110  013A2E  0E00               	movlw	0
  8111  013A30  0100               	movlb	0	; () banked
  8112  013A32  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8113  013A34  0EEB               	movlw	low __npowers_
  8114  013A36  0100               	movlb	0	; () banked
  8115  013A38  2574               	addwf	?___awdiv& (0+255),w,b
  8116  013A3A  6EF6               	movwf	tblptrl,c
  8117  013A3C  0EFE               	movlw	high __npowers_
  8118  013A3E  0100               	movlb	0	; () banked
  8119  013A40  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8120  013A42  6EF7               	movwf	tblptrh,c
  8121  013A44                     	if	1	;There are 3 active tblptr bytes
  8122  013A44  6AF8               	clrf	tblptru,c
  8123  013A46  0E00               	movlw	low (__mediumconst shr (0+16))
  8124  013A48  22F8               	addwfc	tblptru,f,c
  8125  013A4A                     	endif
  8126  013A4A  0009               	tblrd		*+
  8127  013A4C  CFF5 F080          	movff	tablat,___flmul@a
  8128  013A50  0009               	tblrd		*+
  8129  013A52  CFF5 F081          	movff	tablat,___flmul@a+1
  8130  013A56  0009               	tblrd		*+
  8131  013A58  CFF5 F082          	movff	tablat,___flmul@a+2
  8132  013A5C  000A               	tblrd		*-
  8133  013A5E  CFF5 F083          	movff	tablat,___flmul@a+3
  8134  013A62  0E00               	movlw	0
  8135  013A64  0100               	movlb	0	; () banked
  8136  013A66  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8137  013A68  0E64               	movlw	100
  8138  013A6A  6F76               	movwf	___awdiv@divisor& (0+255),b
  8139  013A6C  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8140  013A70  0100               	movlb	0	; () banked
  8141  013A72  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8142  013A74  EC2B  F0A6         	call	___awdiv	;wreg free
  8143  013A78  0100               	movlb	0	; () banked
  8144  013A7A  90D8               	bcf	status,0,c
  8145  013A7C  3774               	rlcf	?___awdiv& (0+255),f,b
  8146  013A7E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8147  013A80  0100               	movlb	0	; () banked
  8148  013A82  90D8               	bcf	status,0,c
  8149  013A84  3774               	rlcf	?___awdiv& (0+255),f,b
  8150  013A86  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8151  013A88  0E48               	movlw	72
  8152  013A8A  0100               	movlb	0	; () banked
  8153  013A8C  2774               	addwf	?___awdiv& (0+255),f,b
  8154  013A8E  0E00               	movlw	0
  8155  013A90  0100               	movlb	0	; () banked
  8156  013A92  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8157  013A94  0EEB               	movlw	low __npowers_
  8158  013A96  0100               	movlb	0	; () banked
  8159  013A98  2574               	addwf	?___awdiv& (0+255),w,b
  8160  013A9A  6EF6               	movwf	tblptrl,c
  8161  013A9C  0EFE               	movlw	high __npowers_
  8162  013A9E  0100               	movlb	0	; () banked
  8163  013AA0  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8164  013AA2  6EF7               	movwf	tblptrh,c
  8165  013AA4                     	if	1	;There are 3 active tblptr bytes
  8166  013AA4  6AF8               	clrf	tblptru,c
  8167  013AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8168  013AA8  22F8               	addwfc	tblptru,f,c
  8169  013AAA                     	endif
  8170  013AAA  0009               	tblrd		*+
  8171  013AAC  CFF5 F07C          	movff	tablat,___flmul@b
  8172  013AB0  0009               	tblrd		*+
  8173  013AB2  CFF5 F07D          	movff	tablat,___flmul@b+1
  8174  013AB6  0009               	tblrd		*+
  8175  013AB8  CFF5 F07E          	movff	tablat,___flmul@b+2
  8176  013ABC  000A               	tblrd		*-
  8177  013ABE  CFF5 F07F          	movff	tablat,___flmul@b+3
  8178  013AC2  ECFA  F094         	call	___flmul	;wreg free
  8179  013AC6  C07C  F09D         	movff	?___flmul,_fround$4269
  8180  013ACA  C07D  F09E         	movff	?___flmul+1,_fround$4269+1
  8181  013ACE  C07E  F09F         	movff	?___flmul+2,_fround$4269+2
  8182  013AD2  C07F  F0A0         	movff	?___flmul+3,_fround$4269+3
  8183                           
  8184                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8185  013AD6  0E00               	movlw	0
  8186  013AD8  0100               	movlb	0	; () banked
  8187  013ADA  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8188  013ADC  0E0A               	movlw	10
  8189  013ADE  6F70               	movwf	___awmod@divisor& (0+255),b
  8190  013AE0  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8191  013AE4  0100               	movlb	0	; () banked
  8192  013AE6  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8193  013AE8  EC45  F0A7         	call	___awmod	;wreg free
  8194  013AEC  0100               	movlb	0	; () banked
  8195  013AEE  90D8               	bcf	status,0,c
  8196  013AF0  376E               	rlcf	?___awmod& (0+255),f,b
  8197  013AF2  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8198  013AF4  0100               	movlb	0	; () banked
  8199  013AF6  90D8               	bcf	status,0,c
  8200  013AF8  376E               	rlcf	?___awmod& (0+255),f,b
  8201  013AFA  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8202  013AFC  0EEB               	movlw	low __npowers_
  8203  013AFE  0100               	movlb	0	; () banked
  8204  013B00  256E               	addwf	?___awmod& (0+255),w,b
  8205  013B02  6EF6               	movwf	tblptrl,c
  8206  013B04  0EFE               	movlw	high __npowers_
  8207  013B06  0100               	movlb	0	; () banked
  8208  013B08  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8209  013B0A  6EF7               	movwf	tblptrh,c
  8210  013B0C                     	if	1	;There are 3 active tblptr bytes
  8211  013B0C  6AF8               	clrf	tblptru,c
  8212  013B0E  0E00               	movlw	low (__mediumconst shr (0+16))
  8213  013B10  22F8               	addwfc	tblptru,f,c
  8214  013B12                     	endif
  8215  013B12  0009               	tblrd		*+
  8216  013B14  CFF5 F080          	movff	tablat,___flmul@a
  8217  013B18  0009               	tblrd		*+
  8218  013B1A  CFF5 F081          	movff	tablat,___flmul@a+1
  8219  013B1E  0009               	tblrd		*+
  8220  013B20  CFF5 F082          	movff	tablat,___flmul@a+2
  8221  013B24  000A               	tblrd		*-
  8222  013B26  CFF5 F083          	movff	tablat,___flmul@a+3
  8223  013B2A  C09D  F07C         	movff	_fround$4269,___flmul@b
  8224  013B2E  C09E  F07D         	movff	_fround$4269+1,___flmul@b+1
  8225  013B32  C09F  F07E         	movff	_fround$4269+2,___flmul@b+2
  8226  013B36  C0A0  F07F         	movff	_fround$4269+3,___flmul@b+3
  8227  013B3A  ECFA  F094         	call	___flmul	;wreg free
  8228  013B3E  C07C  F099         	movff	?___flmul,_fround$4270
  8229  013B42  C07D  F09A         	movff	?___flmul+1,_fround$4270+1
  8230  013B46  C07E  F09B         	movff	?___flmul+2,_fround$4270+2
  8231  013B4A  C07F  F09C         	movff	?___flmul+3,_fround$4270+3
  8232                           
  8233                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8234  013B4E  C099  F07C         	movff	_fround$4270,___flmul@b
  8235  013B52  C09A  F07D         	movff	_fround$4270+1,___flmul@b+1
  8236  013B56  C09B  F07E         	movff	_fround$4270+2,___flmul@b+2
  8237  013B5A  C09C  F07F         	movff	_fround$4270+3,___flmul@b+3
  8238  013B5E  0E00               	movlw	0
  8239  013B60  0100               	movlb	0	; () banked
  8240  013B62  6F80               	movwf	___flmul@a& (0+255),b
  8241  013B64  0E00               	movlw	0
  8242  013B66  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8243  013B68  0E00               	movlw	0
  8244  013B6A  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8245  013B6C  0E3F               	movlw	63
  8246  013B6E  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8247  013B70  ECFA  F094         	call	___flmul	;wreg free
  8248  013B74  C07C  F095         	movff	?___flmul,?_fround
  8249  013B78  C07D  F096         	movff	?___flmul+1,?_fround+1
  8250  013B7C  C07E  F097         	movff	?___flmul+2,?_fround+2
  8251  013B80  C07F  F098         	movff	?___flmul+3,?_fround+3
  8252  013B84  0012               	return	
  8253  013B86                     l7433:
  8254                           
  8255                           ;doprnt.c: 415: else if(prec > 10)
  8256  013B86  0E0A               	movlw	10
  8257  013B88  0100               	movlb	0	; () banked
  8258  013B8A  65A1               	cpfsgt	fround@prec& (0+255),b
  8259  013B8C  D078               	goto	l7441
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8263  013B8E  0E00               	movlw	0
  8264  013B90  0100               	movlb	0	; () banked
  8265  013B92  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8266  013B94  0E0A               	movlw	10
  8267  013B96  6F70               	movwf	___awmod@divisor& (0+255),b
  8268  013B98  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8269  013B9C  0100               	movlb	0	; () banked
  8270  013B9E  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8271  013BA0  EC45  F0A7         	call	___awmod	;wreg free
  8272  013BA4  0100               	movlb	0	; () banked
  8273  013BA6  90D8               	bcf	status,0,c
  8274  013BA8  376E               	rlcf	?___awmod& (0+255),f,b
  8275  013BAA  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8276  013BAC  0100               	movlb	0	; () banked
  8277  013BAE  90D8               	bcf	status,0,c
  8278  013BB0  376E               	rlcf	?___awmod& (0+255),f,b
  8279  013BB2  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8280  013BB4  0EEB               	movlw	low __npowers_
  8281  013BB6  0100               	movlb	0	; () banked
  8282  013BB8  256E               	addwf	?___awmod& (0+255),w,b
  8283  013BBA  6EF6               	movwf	tblptrl,c
  8284  013BBC  0EFE               	movlw	high __npowers_
  8285  013BBE  0100               	movlb	0	; () banked
  8286  013BC0  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8287  013BC2  6EF7               	movwf	tblptrh,c
  8288  013BC4                     	if	1	;There are 3 active tblptr bytes
  8289  013BC4  6AF8               	clrf	tblptru,c
  8290  013BC6  0E00               	movlw	low (__mediumconst shr (0+16))
  8291  013BC8  22F8               	addwfc	tblptru,f,c
  8292  013BCA                     	endif
  8293  013BCA  0009               	tblrd		*+
  8294  013BCC  CFF5 F080          	movff	tablat,___flmul@a
  8295  013BD0  0009               	tblrd		*+
  8296  013BD2  CFF5 F081          	movff	tablat,___flmul@a+1
  8297  013BD6  0009               	tblrd		*+
  8298  013BD8  CFF5 F082          	movff	tablat,___flmul@a+2
  8299  013BDC  000A               	tblrd		*-
  8300  013BDE  CFF5 F083          	movff	tablat,___flmul@a+3
  8301  013BE2  0E00               	movlw	0
  8302  013BE4  0100               	movlb	0	; () banked
  8303  013BE6  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8304  013BE8  0E0A               	movlw	10
  8305  013BEA  6F76               	movwf	___awdiv@divisor& (0+255),b
  8306  013BEC  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8307  013BF0  0100               	movlb	0	; () banked
  8308  013BF2  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8309  013BF4  EC2B  F0A6         	call	___awdiv	;wreg free
  8310  013BF8  0100               	movlb	0	; () banked
  8311  013BFA  90D8               	bcf	status,0,c
  8312  013BFC  3774               	rlcf	?___awdiv& (0+255),f,b
  8313  013BFE  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8314  013C00  0100               	movlb	0	; () banked
  8315  013C02  90D8               	bcf	status,0,c
  8316  013C04  3774               	rlcf	?___awdiv& (0+255),f,b
  8317  013C06  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8318  013C08  0E24               	movlw	36
  8319  013C0A  0100               	movlb	0	; () banked
  8320  013C0C  2774               	addwf	?___awdiv& (0+255),f,b
  8321  013C0E  0E00               	movlw	0
  8322  013C10  0100               	movlb	0	; () banked
  8323  013C12  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8324  013C14  0EEB               	movlw	low __npowers_
  8325  013C16  0100               	movlb	0	; () banked
  8326  013C18  2574               	addwf	?___awdiv& (0+255),w,b
  8327  013C1A  6EF6               	movwf	tblptrl,c
  8328  013C1C  0EFE               	movlw	high __npowers_
  8329  013C1E  0100               	movlb	0	; () banked
  8330  013C20  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8331  013C22  6EF7               	movwf	tblptrh,c
  8332  013C24                     	if	1	;There are 3 active tblptr bytes
  8333  013C24  6AF8               	clrf	tblptru,c
  8334  013C26  0E00               	movlw	low (__mediumconst shr (0+16))
  8335  013C28  22F8               	addwfc	tblptru,f,c
  8336  013C2A                     	endif
  8337  013C2A  0009               	tblrd		*+
  8338  013C2C  CFF5 F07C          	movff	tablat,___flmul@b
  8339  013C30  0009               	tblrd		*+
  8340  013C32  CFF5 F07D          	movff	tablat,___flmul@b+1
  8341  013C36  0009               	tblrd		*+
  8342  013C38  CFF5 F07E          	movff	tablat,___flmul@b+2
  8343  013C3C  000A               	tblrd		*-
  8344  013C3E  CFF5 F07F          	movff	tablat,___flmul@b+3
  8345  013C42  ECFA  F094         	call	___flmul	;wreg free
  8346  013C46  C07C  F09D         	movff	?___flmul,_fround$4269
  8347  013C4A  C07D  F09E         	movff	?___flmul+1,_fround$4269+1
  8348  013C4E  C07E  F09F         	movff	?___flmul+2,_fround$4269+2
  8349  013C52  C07F  F0A0         	movff	?___flmul+3,_fround$4269+3
  8350                           
  8351                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8352  013C56  C09D  F07C         	movff	_fround$4269,___flmul@b
  8353  013C5A  C09E  F07D         	movff	_fround$4269+1,___flmul@b+1
  8354  013C5E  C09F  F07E         	movff	_fround$4269+2,___flmul@b+2
  8355  013C62  C0A0  F07F         	movff	_fround$4269+3,___flmul@b+3
  8356  013C66  0E00               	movlw	0
  8357  013C68  0100               	movlb	0	; () banked
  8358  013C6A  6F80               	movwf	___flmul@a& (0+255),b
  8359  013C6C  0E00               	movlw	0
  8360  013C6E  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8361  013C70  0E00               	movlw	0
  8362  013C72  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8363  013C74  0E3F               	movlw	63
  8364  013C76  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8365  013C78  ECFA  F094         	call	___flmul	;wreg free
  8366  013C7C  D77B               	goto	L7
  8367  013C7E                     l7441:
  8368                           
  8369                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8370  013C7E  0100               	movlb	0	; () banked
  8371  013C80  51A1               	movf	fround@prec& (0+255),w,b
  8372  013C82  0D04               	mullw	4
  8373  013C84  0EEB               	movlw	low __npowers_
  8374  013C86  24F3               	addwf	prodl,w,c
  8375  013C88  6EF6               	movwf	tblptrl,c
  8376  013C8A  0EFE               	movlw	high __npowers_
  8377  013C8C  20F4               	addwfc	prodh,w,c
  8378  013C8E  6EF7               	movwf	tblptrh,c
  8379  013C90                     	if	1	;There are 3 active tblptr bytes
  8380  013C90  6AF8               	clrf	tblptru,c
  8381  013C92  0E00               	movlw	low (__mediumconst shr (0+16))
  8382  013C94  22F8               	addwfc	tblptru,f,c
  8383  013C96                     	endif
  8384  013C96  0009               	tblrd		*+
  8385  013C98  CFF5 F07C          	movff	tablat,___flmul@b
  8386  013C9C  0009               	tblrd		*+
  8387  013C9E  CFF5 F07D          	movff	tablat,___flmul@b+1
  8388  013CA2  0009               	tblrd		*+
  8389  013CA4  CFF5 F07E          	movff	tablat,___flmul@b+2
  8390  013CA8  000A               	tblrd		*-
  8391  013CAA  CFF5 F07F          	movff	tablat,___flmul@b+3
  8392  013CAE  0E00               	movlw	0
  8393  013CB0  0100               	movlb	0	; () banked
  8394  013CB2  6F80               	movwf	___flmul@a& (0+255),b
  8395  013CB4  0E00               	movlw	0
  8396  013CB6  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8397  013CB8  0E00               	movlw	0
  8398  013CBA  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8399  013CBC  0E3F               	movlw	63
  8400  013CBE  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8401  013CC0  ECFA  F094         	call	___flmul	;wreg free
  8402  013CC4  C07C  F095         	movff	?___flmul,?_fround
  8403  013CC8  C07D  F096         	movff	?___flmul+1,?_fround+1
  8404  013CCC  C07E  F097         	movff	?___flmul+2,?_fround+2
  8405  013CD0  C07F  F098         	movff	?___flmul+3,?_fround+3
  8406  013CD4  0012               	return	
  8407  013CD6                     __end_of_fround:
  8408                           	opt stack 0
  8409                           tblptru	equ	0xFF8
  8410                           tblptrh	equ	0xFF7
  8411                           tblptrl	equ	0xFF6
  8412                           tablat	equ	0xFF5
  8413                           prodh	equ	0xFF4
  8414                           prodl	equ	0xFF3
  8415                           intcon	equ	0xFF2
  8416                           postinc0	equ	0xFEE
  8417                           wreg	equ	0xFE8
  8418                           indf2	equ	0xFDF
  8419                           postinc2	equ	0xFDE
  8420                           fsr2h	equ	0xFDA
  8421                           fsr2l	equ	0xFD9
  8422                           status	equ	0xFD8
  8423                           
  8424 ;; *************** function ___flmul *****************
  8425 ;; Defined at:
  8426 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  b               4   28[BANK0 ] unsigned char 
  8429 ;;  a               4   32[BANK0 ] unsigned char 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  prod            4   47[BANK0 ] struct .
  8432 ;;  grs             4   42[BANK0 ] unsigned long 
  8433 ;;  temp            2   51[BANK0 ] struct .
  8434 ;;  bexp            1   46[BANK0 ] unsigned char 
  8435 ;;  aexp            1   41[BANK0 ] unsigned char 
  8436 ;;  sign            1   40[BANK0 ] unsigned char 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  4   28[BANK0 ] unsigned char 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0, prodl, prodh
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8446 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8447 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;Total ram usage:       25 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    3
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_main
  8457 ;;		_fround
  8458 ;;		_scale
  8459 ;;		_sprintf
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text16
  8464  0129F4                     __ptext16:
  8465                           	opt stack 0
  8466  0129F4                     ___flmul:
  8467                           	opt stack 27
  8468                           
  8469                           ;incstack = 0
  8470  0129F4  0100               	movlb	0	; () banked
  8471  0129F6  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8472  0129F8  0B80               	andlw	128
  8473  0129FA  0100               	movlb	0	; () banked
  8474  0129FC  6F88               	movwf	___flmul@sign& (0+255),b
  8475  0129FE  0100               	movlb	0	; () banked
  8476  012A00  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8477  012A02  257F               	addwf	(___flmul@b+3)& (0+255),w,b
  8478  012A04  0100               	movlb	0	; () banked
  8479  012A06  6F8E               	movwf	___flmul@bexp& (0+255),b
  8480                           
  8481                           ; BSR set to: 0
  8482  012A08  0100               	movlb	0	; () banked
  8483  012A0A  AF7E               	btfss	(___flmul@b+2)& (0+255),7,b
  8484  012A0C  D002               	goto	l6783
  8485                           
  8486                           ; BSR set to: 0
  8487  012A0E  0100               	movlb	0	; () banked
  8488  012A10  818E               	bsf	___flmul@bexp& (0+255),0,b
  8489  012A12                     l6783:
  8490                           
  8491                           ; BSR set to: 0
  8492  012A12  0100               	movlb	0	; () banked
  8493  012A14  518E               	movf	___flmul@bexp& (0+255),w,b
  8494  012A16  0100               	movlb	0	; () banked
  8495  012A18  B4D8               	btfsc	status,2,c
  8496  012A1A  D010               	goto	l6791
  8497                           
  8498                           ; BSR set to: 0
  8499  012A1C  0100               	movlb	0	; () banked
  8500  012A1E  298E               	incf	___flmul@bexp& (0+255),w,b
  8501  012A20  A4D8               	btfss	status,2,c
  8502  012A22  D009               	goto	l6789
  8503                           
  8504                           ; BSR set to: 0
  8505  012A24  0E00               	movlw	0
  8506  012A26  0100               	movlb	0	; () banked
  8507  012A28  6F7C               	movwf	___flmul@b& (0+255),b
  8508  012A2A  0E00               	movlw	0
  8509  012A2C  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8510  012A2E  0E00               	movlw	0
  8511  012A30  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8512  012A32  0E00               	movlw	0
  8513  012A34  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8514  012A36                     l6789:
  8515                           
  8516                           ; BSR set to: 0
  8517  012A36  0100               	movlb	0	; () banked
  8518  012A38  8F7E               	bsf	(___flmul@b+2)& (0+255),7,b
  8519  012A3A  D009               	goto	l6793
  8520  012A3C                     l6791:
  8521                           
  8522                           ; BSR set to: 0
  8523  012A3C  0E00               	movlw	0
  8524  012A3E  0100               	movlb	0	; () banked
  8525  012A40  6F7C               	movwf	___flmul@b& (0+255),b
  8526  012A42  0E00               	movlw	0
  8527  012A44  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8528  012A46  0E00               	movlw	0
  8529  012A48  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8530  012A4A  0E00               	movlw	0
  8531  012A4C  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8532  012A4E                     l6793:
  8533                           
  8534                           ; BSR set to: 0
  8535  012A4E  0100               	movlb	0	; () banked
  8536  012A50  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8537  012A52  0B80               	andlw	128
  8538  012A54  0100               	movlb	0	; () banked
  8539  012A56  1B88               	xorwf	___flmul@sign& (0+255),f,b
  8540                           
  8541                           ; BSR set to: 0
  8542  012A58  0100               	movlb	0	; () banked
  8543  012A5A  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8544  012A5C  2583               	addwf	(___flmul@a+3)& (0+255),w,b
  8545  012A5E  0100               	movlb	0	; () banked
  8546  012A60  6F89               	movwf	___flmul@aexp& (0+255),b
  8547                           
  8548                           ; BSR set to: 0
  8549  012A62  0100               	movlb	0	; () banked
  8550  012A64  AF82               	btfss	(___flmul@a+2)& (0+255),7,b
  8551  012A66  D002               	goto	l6801
  8552                           
  8553                           ; BSR set to: 0
  8554  012A68  0100               	movlb	0	; () banked
  8555  012A6A  8189               	bsf	___flmul@aexp& (0+255),0,b
  8556  012A6C                     l6801:
  8557                           
  8558                           ; BSR set to: 0
  8559  012A6C  0100               	movlb	0	; () banked
  8560  012A6E  5189               	movf	___flmul@aexp& (0+255),w,b
  8561  012A70  0100               	movlb	0	; () banked
  8562  012A72  B4D8               	btfsc	status,2,c
  8563  012A74  D010               	goto	l6809
  8564                           
  8565                           ; BSR set to: 0
  8566  012A76  0100               	movlb	0	; () banked
  8567  012A78  2989               	incf	___flmul@aexp& (0+255),w,b
  8568  012A7A  A4D8               	btfss	status,2,c
  8569  012A7C  D009               	goto	l6807
  8570                           
  8571                           ; BSR set to: 0
  8572  012A7E  0E00               	movlw	0
  8573  012A80  0100               	movlb	0	; () banked
  8574  012A82  6F80               	movwf	___flmul@a& (0+255),b
  8575  012A84  0E00               	movlw	0
  8576  012A86  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8577  012A88  0E00               	movlw	0
  8578  012A8A  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8579  012A8C  0E00               	movlw	0
  8580  012A8E  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8581  012A90                     l6807:
  8582                           
  8583                           ; BSR set to: 0
  8584  012A90  0100               	movlb	0	; () banked
  8585  012A92  8F82               	bsf	(___flmul@a+2)& (0+255),7,b
  8586  012A94  D009               	goto	l1485
  8587  012A96                     l6809:
  8588                           
  8589                           ; BSR set to: 0
  8590  012A96  0E00               	movlw	0
  8591  012A98  0100               	movlb	0	; () banked
  8592  012A9A  6F80               	movwf	___flmul@a& (0+255),b
  8593  012A9C  0E00               	movlw	0
  8594  012A9E  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8595  012AA0  0E00               	movlw	0
  8596  012AA2  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8597  012AA4  0E00               	movlw	0
  8598  012AA6  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8599  012AA8                     l1485:
  8600                           
  8601                           ; BSR set to: 0
  8602  012AA8  0100               	movlb	0	; () banked
  8603  012AAA  5189               	movf	___flmul@aexp& (0+255),w,b
  8604  012AAC  0100               	movlb	0	; () banked
  8605  012AAE  B4D8               	btfsc	status,2,c
  8606  012AB0  D005               	goto	l6813
  8607                           
  8608                           ; BSR set to: 0
  8609  012AB2  0100               	movlb	0	; () banked
  8610  012AB4  518E               	movf	___flmul@bexp& (0+255),w,b
  8611  012AB6  0100               	movlb	0	; () banked
  8612  012AB8  A4D8               	btfss	status,2,c
  8613  012ABA  D00A               	goto	l6817
  8614  012ABC                     l6813:
  8615                           
  8616                           ; BSR set to: 0
  8617  012ABC  0E00               	movlw	0
  8618  012ABE  0100               	movlb	0	; () banked
  8619  012AC0  6F7C               	movwf	?___flmul& (0+255),b
  8620  012AC2  0E00               	movlw	0
  8621  012AC4  6F7D               	movwf	(?___flmul+1)& (0+255),b
  8622  012AC6  0E00               	movlw	0
  8623  012AC8  6F7E               	movwf	(?___flmul+2)& (0+255),b
  8624  012ACA  0E00               	movlw	0
  8625  012ACC  6F7F               	movwf	(?___flmul+3)& (0+255),b
  8626                           
  8627                           ; BSR set to: 0
  8628  012ACE  0012               	return	
  8629  012AD0                     l6817:
  8630                           
  8631                           ; BSR set to: 0
  8632  012AD0  0100               	movlb	0	; () banked
  8633  012AD2  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8634  012AD4  0100               	movlb	0	; () banked
  8635  012AD6  037C               	mulwf	___flmul@b& (0+255),b
  8636  012AD8  CFF3 F093          	movff	prodl,___flmul@temp
  8637  012ADC  CFF4 F094          	movff	prodh,___flmul@temp+1
  8638                           
  8639                           ; BSR set to: 0
  8640  012AE0  0100               	movlb	0	; () banked
  8641  012AE2  5193               	movf	___flmul@temp& (0+255),w,b
  8642  012AE4  0100               	movlb	0	; () banked
  8643  012AE6  6F8A               	movwf	___flmul@grs& (0+255),b
  8644  012AE8  6B8B               	clrf	(___flmul@grs+1)& (0+255),b
  8645  012AEA  6B8C               	clrf	(___flmul@grs+2)& (0+255),b
  8646  012AEC  6B8D               	clrf	(___flmul@grs+3)& (0+255),b
  8647                           
  8648                           ; BSR set to: 0
  8649  012AEE  0100               	movlb	0	; () banked
  8650  012AF0  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8651  012AF2  0100               	movlb	0	; () banked
  8652  012AF4  6F8F               	movwf	___flmul@prod& (0+255),b
  8653  012AF6  6B90               	clrf	(___flmul@prod+1)& (0+255),b
  8654  012AF8  6B91               	clrf	(___flmul@prod+2)& (0+255),b
  8655  012AFA  6B92               	clrf	(___flmul@prod+3)& (0+255),b
  8656  012AFC  0100               	movlb	0	; () banked
  8657  012AFE  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8658  012B00  0100               	movlb	0	; () banked
  8659  012B02  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8660  012B04  CFF3 F093          	movff	prodl,___flmul@temp
  8661  012B08  CFF4 F094          	movff	prodh,___flmul@temp+1
  8662                           
  8663                           ; BSR set to: 0
  8664  012B0C  0100               	movlb	0	; () banked
  8665  012B0E  5193               	movf	___flmul@temp& (0+255),w,b
  8666  012B10  0100               	movlb	0	; () banked
  8667  012B12  278A               	addwf	___flmul@grs& (0+255),f,b
  8668  012B14  0E00               	movlw	0
  8669  012B16  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8670  012B18  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8671  012B1A  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8672                           
  8673                           ; BSR set to: 0
  8674  012B1C  0100               	movlb	0	; () banked
  8675  012B1E  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8676  012B20  0100               	movlb	0	; () banked
  8677  012B22  278F               	addwf	___flmul@prod& (0+255),f,b
  8678  012B24  0E00               	movlw	0
  8679  012B26  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8680  012B28  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8681  012B2A  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8682  012B2C  0100               	movlb	0	; () banked
  8683  012B2E  5180               	movf	___flmul@a& (0+255),w,b
  8684  012B30  0100               	movlb	0	; () banked
  8685  012B32  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8686  012B34  CFF3 F093          	movff	prodl,___flmul@temp
  8687  012B38  CFF4 F094          	movff	prodh,___flmul@temp+1
  8688                           
  8689                           ; BSR set to: 0
  8690  012B3C  0100               	movlb	0	; () banked
  8691  012B3E  5193               	movf	___flmul@temp& (0+255),w,b
  8692  012B40  0100               	movlb	0	; () banked
  8693  012B42  278A               	addwf	___flmul@grs& (0+255),f,b
  8694  012B44  0E00               	movlw	0
  8695  012B46  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8696  012B48  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8697  012B4A  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8698                           
  8699                           ; BSR set to: 0
  8700  012B4C  0100               	movlb	0	; () banked
  8701  012B4E  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8702  012B50  0100               	movlb	0	; () banked
  8703  012B52  278F               	addwf	___flmul@prod& (0+255),f,b
  8704  012B54  0E00               	movlw	0
  8705  012B56  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8706  012B58  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8707  012B5A  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8708                           
  8709                           ; BSR set to: 0
  8710  012B5C  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8711  012B60  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8712  012B64  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8713  012B68  0100               	movlb	0	; () banked
  8714  012B6A  6B8A               	clrf	___flmul@grs& (0+255),b
  8715                           
  8716                           ; BSR set to: 0
  8717  012B6C  0100               	movlb	0	; () banked
  8718  012B6E  5180               	movf	___flmul@a& (0+255),w,b
  8719  012B70  0100               	movlb	0	; () banked
  8720  012B72  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8721  012B74  CFF3 F093          	movff	prodl,___flmul@temp
  8722  012B78  CFF4 F094          	movff	prodh,___flmul@temp+1
  8723                           
  8724                           ; BSR set to: 0
  8725  012B7C  0100               	movlb	0	; () banked
  8726  012B7E  5193               	movf	___flmul@temp& (0+255),w,b
  8727  012B80  0100               	movlb	0	; () banked
  8728  012B82  278A               	addwf	___flmul@grs& (0+255),f,b
  8729  012B84  0100               	movlb	0	; () banked
  8730  012B86  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8731  012B88  0100               	movlb	0	; () banked
  8732  012B8A  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8733  012B8C  0E00               	movlw	0
  8734  012B8E  0100               	movlb	0	; () banked
  8735  012B90  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8736  012B92  0E00               	movlw	0
  8737  012B94  0100               	movlb	0	; () banked
  8738  012B96  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8739                           
  8740                           ; BSR set to: 0
  8741  012B98  0100               	movlb	0	; () banked
  8742  012B9A  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8743  012B9C  0100               	movlb	0	; () banked
  8744  012B9E  037C               	mulwf	___flmul@b& (0+255),b
  8745  012BA0  CFF3 F093          	movff	prodl,___flmul@temp
  8746  012BA4  CFF4 F094          	movff	prodh,___flmul@temp+1
  8747                           
  8748                           ; BSR set to: 0
  8749  012BA8  0100               	movlb	0	; () banked
  8750  012BAA  5193               	movf	___flmul@temp& (0+255),w,b
  8751  012BAC  0100               	movlb	0	; () banked
  8752  012BAE  278A               	addwf	___flmul@grs& (0+255),f,b
  8753  012BB0  0100               	movlb	0	; () banked
  8754  012BB2  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8755  012BB4  0100               	movlb	0	; () banked
  8756  012BB6  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8757  012BB8  0E00               	movlw	0
  8758  012BBA  0100               	movlb	0	; () banked
  8759  012BBC  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8760  012BBE  0E00               	movlw	0
  8761  012BC0  0100               	movlb	0	; () banked
  8762  012BC2  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8763                           
  8764                           ; BSR set to: 0
  8765  012BC4  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8766  012BC8  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8767  012BCC  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8768  012BD0  0100               	movlb	0	; () banked
  8769  012BD2  6B8A               	clrf	___flmul@grs& (0+255),b
  8770  012BD4  0100               	movlb	0	; () banked
  8771  012BD6  5180               	movf	___flmul@a& (0+255),w,b
  8772  012BD8  0100               	movlb	0	; () banked
  8773  012BDA  037C               	mulwf	___flmul@b& (0+255),b
  8774  012BDC  CFF3 F093          	movff	prodl,___flmul@temp
  8775  012BE0  CFF4 F094          	movff	prodh,___flmul@temp+1
  8776                           
  8777                           ; BSR set to: 0
  8778  012BE4  0100               	movlb	0	; () banked
  8779  012BE6  5193               	movf	___flmul@temp& (0+255),w,b
  8780  012BE8  0100               	movlb	0	; () banked
  8781  012BEA  278A               	addwf	___flmul@grs& (0+255),f,b
  8782  012BEC  0100               	movlb	0	; () banked
  8783  012BEE  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8784  012BF0  0100               	movlb	0	; () banked
  8785  012BF2  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8786  012BF4  0E00               	movlw	0
  8787  012BF6  0100               	movlb	0	; () banked
  8788  012BF8  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8789  012BFA  0E00               	movlw	0
  8790  012BFC  0100               	movlb	0	; () banked
  8791  012BFE  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8792                           
  8793                           ; BSR set to: 0
  8794  012C00  0100               	movlb	0	; () banked
  8795  012C02  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8796  012C04  0100               	movlb	0	; () banked
  8797  012C06  037D               	mulwf	(___flmul@b+1)& (0+255),b
  8798  012C08  CFF3 F093          	movff	prodl,___flmul@temp
  8799  012C0C  CFF4 F094          	movff	prodh,___flmul@temp+1
  8800  012C10  0100               	movlb	0	; () banked
  8801  012C12  5193               	movf	___flmul@temp& (0+255),w,b
  8802  012C14  0100               	movlb	0	; () banked
  8803  012C16  278F               	addwf	___flmul@prod& (0+255),f,b
  8804  012C18  0100               	movlb	0	; () banked
  8805  012C1A  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8806  012C1C  0100               	movlb	0	; () banked
  8807  012C1E  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8808  012C20  0E00               	movlw	0
  8809  012C22  0100               	movlb	0	; () banked
  8810  012C24  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8811  012C26  0E00               	movlw	0
  8812  012C28  0100               	movlb	0	; () banked
  8813  012C2A  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8814                           
  8815                           ; BSR set to: 0
  8816  012C2C  0100               	movlb	0	; () banked
  8817  012C2E  5181               	movf	(___flmul@a+1)& (0+255),w,b
  8818  012C30  0100               	movlb	0	; () banked
  8819  012C32  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8820  012C34  CFF3 F093          	movff	prodl,___flmul@temp
  8821  012C38  CFF4 F094          	movff	prodh,___flmul@temp+1
  8822                           
  8823                           ; BSR set to: 0
  8824  012C3C  0100               	movlb	0	; () banked
  8825  012C3E  5193               	movf	___flmul@temp& (0+255),w,b
  8826  012C40  0100               	movlb	0	; () banked
  8827  012C42  278F               	addwf	___flmul@prod& (0+255),f,b
  8828  012C44  0100               	movlb	0	; () banked
  8829  012C46  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8830  012C48  0100               	movlb	0	; () banked
  8831  012C4A  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8832  012C4C  0E00               	movlw	0
  8833  012C4E  0100               	movlb	0	; () banked
  8834  012C50  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8835  012C52  0E00               	movlw	0
  8836  012C54  0100               	movlb	0	; () banked
  8837  012C56  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8838  012C58  0100               	movlb	0	; () banked
  8839  012C5A  5182               	movf	(___flmul@a+2)& (0+255),w,b
  8840  012C5C  0100               	movlb	0	; () banked
  8841  012C5E  037E               	mulwf	(___flmul@b+2)& (0+255),b
  8842  012C60  CFF3 F093          	movff	prodl,___flmul@temp
  8843  012C64  CFF4 F094          	movff	prodh,___flmul@temp+1
  8844                           
  8845                           ; BSR set to: 0
  8846  012C68  0100               	movlb	0	; () banked
  8847  012C6A  5193               	movf	___flmul@temp& (0+255),w,b
  8848  012C6C  0100               	movlb	0	; () banked
  8849  012C6E  6F84               	movwf	??___flmul& (0+255),b
  8850  012C70  0100               	movlb	0	; () banked
  8851  012C72  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  8852  012C74  0100               	movlb	0	; () banked
  8853  012C76  6F85               	movwf	(??___flmul+1)& (0+255),b
  8854  012C78  0100               	movlb	0	; () banked
  8855  012C7A  6B86               	clrf	(??___flmul+2)& (0+255),b
  8856  012C7C  0100               	movlb	0	; () banked
  8857  012C7E  6B87               	clrf	(??___flmul+3)& (0+255),b
  8858  012C80  C086  F087         	movff	??___flmul+2,??___flmul+3
  8859  012C84  C085  F086         	movff	??___flmul+1,??___flmul+2
  8860  012C88  C084  F085         	movff	??___flmul,??___flmul+1
  8861  012C8C  0100               	movlb	0	; () banked
  8862  012C8E  6B84               	clrf	??___flmul& (0+255),b
  8863  012C90  0100               	movlb	0	; () banked
  8864  012C92  5184               	movf	??___flmul& (0+255),w,b
  8865  012C94  0100               	movlb	0	; () banked
  8866  012C96  278F               	addwf	___flmul@prod& (0+255),f,b
  8867  012C98  0100               	movlb	0	; () banked
  8868  012C9A  5185               	movf	(??___flmul+1)& (0+255),w,b
  8869  012C9C  0100               	movlb	0	; () banked
  8870  012C9E  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8871  012CA0  0100               	movlb	0	; () banked
  8872  012CA2  5186               	movf	(??___flmul+2)& (0+255),w,b
  8873  012CA4  0100               	movlb	0	; () banked
  8874  012CA6  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8875  012CA8  0100               	movlb	0	; () banked
  8876  012CAA  5187               	movf	(??___flmul+3)& (0+255),w,b
  8877  012CAC  0100               	movlb	0	; () banked
  8878  012CAE  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8879                           
  8880                           ; BSR set to: 0
  8881  012CB0  C08A  F084         	movff	___flmul@grs,??___flmul
  8882  012CB4  C08B  F085         	movff	___flmul@grs+1,??___flmul+1
  8883  012CB8  C08C  F086         	movff	___flmul@grs+2,??___flmul+2
  8884  012CBC  C08D  F087         	movff	___flmul@grs+3,??___flmul+3
  8885  012CC0  0E19               	movlw	25
  8886  012CC2  D006               	goto	u8670
  8887  012CC4                     u8675:
  8888  012CC4  0100               	movlb	0	; () banked
  8889  012CC6  90D8               	bcf	status,0,c
  8890  012CC8  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  8891  012CCA  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  8892  012CCC  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  8893  012CCE  3384               	rrcf	??___flmul& (0+255),f,b
  8894  012CD0                     u8670:
  8895  012CD0  2EE8               	decfsz	wreg,f,c
  8896  012CD2  D7F8               	goto	u8675
  8897  012CD4  0100               	movlb	0	; () banked
  8898  012CD6  5184               	movf	??___flmul& (0+255),w,b
  8899  012CD8  0100               	movlb	0	; () banked
  8900  012CDA  278F               	addwf	___flmul@prod& (0+255),f,b
  8901  012CDC  0100               	movlb	0	; () banked
  8902  012CDE  5185               	movf	(??___flmul+1)& (0+255),w,b
  8903  012CE0  0100               	movlb	0	; () banked
  8904  012CE2  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8905  012CE4  0100               	movlb	0	; () banked
  8906  012CE6  5186               	movf	(??___flmul+2)& (0+255),w,b
  8907  012CE8  0100               	movlb	0	; () banked
  8908  012CEA  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8909  012CEC  0100               	movlb	0	; () banked
  8910  012CEE  5187               	movf	(??___flmul+3)& (0+255),w,b
  8911  012CF0  0100               	movlb	0	; () banked
  8912  012CF2  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8913                           
  8914                           ; BSR set to: 0
  8915  012CF4  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  8916  012CF8  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  8917  012CFC  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  8918  012D00  0100               	movlb	0	; () banked
  8919  012D02  6B8A               	clrf	___flmul@grs& (0+255),b
  8920                           
  8921                           ; BSR set to: 0
  8922  012D04  0100               	movlb	0	; () banked
  8923  012D06  5189               	movf	___flmul@aexp& (0+255),w,b
  8924  012D08  C08E  F084         	movff	___flmul@bexp,??___flmul
  8925  012D0C  0100               	movlb	0	; () banked
  8926  012D0E  6B85               	clrf	(??___flmul+1)& (0+255),b
  8927  012D10  0100               	movlb	0	; () banked
  8928  012D12  2784               	addwf	??___flmul& (0+255),f,b
  8929  012D14  0E00               	movlw	0
  8930  012D16  2385               	addwfc	(??___flmul+1)& (0+255),f,b
  8931  012D18  0E82               	movlw	130
  8932  012D1A  0100               	movlb	0	; () banked
  8933  012D1C  2584               	addwf	??___flmul& (0+255),w,b
  8934  012D1E  0100               	movlb	0	; () banked
  8935  012D20  6F93               	movwf	___flmul@temp& (0+255),b
  8936  012D22  0EFF               	movlw	255
  8937  012D24  0100               	movlb	0	; () banked
  8938  012D26  2185               	addwfc	(??___flmul+1)& (0+255),w,b
  8939  012D28  0100               	movlb	0	; () banked
  8940  012D2A  6F94               	movwf	(___flmul@temp+1)& (0+255),b
  8941  012D2C  D015               	goto	l6865
  8942  012D2E                     l6859:
  8943                           
  8944                           ; BSR set to: 0
  8945  012D2E  0100               	movlb	0	; () banked
  8946  012D30  90D8               	bcf	status,0,c
  8947  012D32  378F               	rlcf	___flmul@prod& (0+255),f,b
  8948  012D34  3790               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8949  012D36  3791               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8950  012D38  3792               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8951                           
  8952                           ; BSR set to: 0
  8953  012D3A  0100               	movlb	0	; () banked
  8954  012D3C  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8955  012D3E  D002               	goto	l1492
  8956                           
  8957                           ; BSR set to: 0
  8958  012D40  0100               	movlb	0	; () banked
  8959  012D42  818F               	bsf	___flmul@prod& (0+255),0,b
  8960  012D44                     l1492:
  8961                           
  8962                           ; BSR set to: 0
  8963  012D44  0100               	movlb	0	; () banked
  8964  012D46  90D8               	bcf	status,0,c
  8965  012D48  378A               	rlcf	___flmul@grs& (0+255),f,b
  8966  012D4A  378B               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8967  012D4C  378C               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8968  012D4E  378D               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8969  012D50  0100               	movlb	0	; () banked
  8970  012D52  0793               	decf	___flmul@temp& (0+255),f,b
  8971  012D54  A0D8               	btfss	status,0,c
  8972  012D56  0794               	decf	(___flmul@temp+1)& (0+255),f,b
  8973  012D58                     l6865:
  8974                           
  8975                           ; BSR set to: 0
  8976  012D58  0100               	movlb	0	; () banked
  8977  012D5A  AF91               	btfss	(___flmul@prod+2)& (0+255),7,b
  8978  012D5C  D7E8               	goto	l6859
  8979                           
  8980                           ; BSR set to: 0
  8981                           
  8982                           ; BSR set to: 0
  8983  012D5E  0E00               	movlw	0
  8984  012D60  0100               	movlb	0	; () banked
  8985  012D62  6F89               	movwf	___flmul@aexp& (0+255),b
  8986                           
  8987                           ; BSR set to: 0
  8988  012D64  0100               	movlb	0	; () banked
  8989  012D66  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8990  012D68  D024               	goto	l1494
  8991                           
  8992                           ; BSR set to: 0
  8993  012D6A  0EFF               	movlw	255
  8994  012D6C  0100               	movlb	0	; () banked
  8995  012D6E  158A               	andwf	___flmul@grs& (0+255),w,b
  8996  012D70  0100               	movlb	0	; () banked
  8997  012D72  6F84               	movwf	??___flmul& (0+255),b
  8998  012D74  0EFF               	movlw	255
  8999  012D76  0100               	movlb	0	; () banked
  9000  012D78  158B               	andwf	(___flmul@grs+1)& (0+255),w,b
  9001  012D7A  0100               	movlb	0	; () banked
  9002  012D7C  6F85               	movwf	(??___flmul+1)& (0+255),b
  9003  012D7E  0EFF               	movlw	255
  9004  012D80  0100               	movlb	0	; () banked
  9005  012D82  158C               	andwf	(___flmul@grs+2)& (0+255),w,b
  9006  012D84  0100               	movlb	0	; () banked
  9007  012D86  6F86               	movwf	(??___flmul+2)& (0+255),b
  9008  012D88  0E7F               	movlw	127
  9009  012D8A  0100               	movlb	0	; () banked
  9010  012D8C  158D               	andwf	(___flmul@grs+3)& (0+255),w,b
  9011  012D8E  0100               	movlb	0	; () banked
  9012  012D90  6F87               	movwf	(??___flmul+3)& (0+255),b
  9013  012D92  0100               	movlb	0	; () banked
  9014  012D94  5184               	movf	??___flmul& (0+255),w,b
  9015  012D96  0100               	movlb	0	; () banked
  9016  012D98  1185               	iorwf	(??___flmul+1)& (0+255),w,b
  9017  012D9A  0100               	movlb	0	; () banked
  9018  012D9C  1186               	iorwf	(??___flmul+2)& (0+255),w,b
  9019  012D9E  0100               	movlb	0	; () banked
  9020  012DA0  1187               	iorwf	(??___flmul+3)& (0+255),w,b
  9021  012DA2  A4D8               	btfss	status,2,c
  9022  012DA4  D003               	goto	l6875
  9023                           
  9024                           ; BSR set to: 0
  9025                           
  9026                           ; BSR set to: 0
  9027  012DA6  0100               	movlb	0	; () banked
  9028  012DA8  A18F               	btfss	___flmul@prod& (0+255),0,b
  9029  012DAA  D003               	goto	l1494
  9030  012DAC                     l6875:
  9031                           
  9032                           ; BSR set to: 0
  9033  012DAC  0E01               	movlw	1
  9034  012DAE  0100               	movlb	0	; () banked
  9035  012DB0  6F89               	movwf	___flmul@aexp& (0+255),b
  9036  012DB2                     l1494:
  9037                           
  9038                           ; BSR set to: 0
  9039  012DB2  0100               	movlb	0	; () banked
  9040  012DB4  5189               	movf	___flmul@aexp& (0+255),w,b
  9041  012DB6  0100               	movlb	0	; () banked
  9042  012DB8  B4D8               	btfsc	status,2,c
  9043  012DBA  D023               	goto	l6885
  9044                           
  9045                           ; BSR set to: 0
  9046  012DBC  0E01               	movlw	1
  9047  012DBE  0100               	movlb	0	; () banked
  9048  012DC0  278F               	addwf	___flmul@prod& (0+255),f,b
  9049  012DC2  0E00               	movlw	0
  9050  012DC4  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9051  012DC6  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9052  012DC8  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9053                           
  9054                           ; BSR set to: 0
  9055  012DCA  0100               	movlb	0	; () banked
  9056  012DCC  A192               	btfss	(___flmul@prod+3)& (0+255),0,b
  9057  012DCE  D019               	goto	l6885
  9058                           
  9059                           ; BSR set to: 0
  9060  012DD0  C08F  F084         	movff	___flmul@prod,??___flmul
  9061  012DD4  C090  F085         	movff	___flmul@prod+1,??___flmul+1
  9062  012DD8  C091  F086         	movff	___flmul@prod+2,??___flmul+2
  9063  012DDC  C092  F087         	movff	___flmul@prod+3,??___flmul+3
  9064  012DE0  0100               	movlb	0	; () banked
  9065  012DE2  3587               	rlcf	(??___flmul+3)& (0+255),w,b
  9066  012DE4  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  9067  012DE6  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  9068  012DE8  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  9069  012DEA  3384               	rrcf	??___flmul& (0+255),f,b
  9070  012DEC  C084  F08F         	movff	??___flmul,___flmul@prod
  9071  012DF0  C085  F090         	movff	??___flmul+1,___flmul@prod+1
  9072  012DF4  C086  F091         	movff	??___flmul+2,___flmul@prod+2
  9073  012DF8  C087  F092         	movff	??___flmul+3,___flmul@prod+3
  9074                           
  9075                           ; BSR set to: 0
  9076  012DFC  0100               	movlb	0	; () banked
  9077  012DFE  4B93               	infsnz	___flmul@temp& (0+255),f,b
  9078  012E00  2B94               	incf	(___flmul@temp+1)& (0+255),f,b
  9079  012E02                     l6885:
  9080                           
  9081                           ; BSR set to: 0
  9082  012E02  0100               	movlb	0	; () banked
  9083  012E04  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9084  012E06  D010               	goto	l6889
  9085  012E08  0100               	movlb	0	; () banked
  9086  012E0A  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9087  012E0C  E104               	bnz	u8750
  9088  012E0E  0100               	movlb	0	; () banked
  9089  012E10  2993               	incf	___flmul@temp& (0+255),w,b
  9090  012E12  A0D8               	btfss	status,0,c
  9091  012E14  D009               	goto	l6889
  9092  012E16                     u8750:
  9093                           
  9094                           ; BSR set to: 0
  9095  012E16  0E00               	movlw	0
  9096  012E18  0100               	movlb	0	; () banked
  9097  012E1A  6F8F               	movwf	___flmul@prod& (0+255),b
  9098  012E1C  0E00               	movlw	0
  9099  012E1E  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  9100  012E20  0E80               	movlw	128
  9101  012E22  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  9102  012E24  0E7F               	movlw	127
  9103  012E26  D02B               	goto	L8
  9104  012E28                     l6889:
  9105                           
  9106                           ; BSR set to: 0
  9107  012E28  0100               	movlb	0	; () banked
  9108  012E2A  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9109  012E2C  D007               	goto	l6891
  9110  012E2E  0100               	movlb	0	; () banked
  9111  012E30  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9112  012E32  E111               	bnz	l1502
  9113  012E34  0100               	movlb	0	; () banked
  9114  012E36  0593               	decf	___flmul@temp& (0+255),w,b
  9115  012E38  B0D8               	btfsc	status,0,c
  9116  012E3A  D00D               	goto	l1502
  9117  012E3C                     l6891:
  9118                           
  9119                           ; BSR set to: 0
  9120  012E3C  0E00               	movlw	0
  9121  012E3E  0100               	movlb	0	; () banked
  9122  012E40  6F8F               	movwf	___flmul@prod& (0+255),b
  9123  012E42  0E00               	movlw	0
  9124  012E44  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  9125  012E46  0E00               	movlw	0
  9126  012E48  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  9127  012E4A  0E00               	movlw	0
  9128  012E4C  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  9129  012E4E  0E00               	movlw	0
  9130  012E50  0100               	movlb	0	; () banked
  9131  012E52  6F88               	movwf	___flmul@sign& (0+255),b
  9132  012E54  D015               	goto	l6901
  9133  012E56                     l1502:
  9134                           
  9135                           ; BSR set to: 0
  9136  012E56  C093  F08E         	movff	___flmul@temp,___flmul@bexp
  9137                           
  9138                           ; BSR set to: 0
  9139  012E5A  0EFF               	movlw	255
  9140  012E5C  0100               	movlb	0	; () banked
  9141  012E5E  178F               	andwf	___flmul@prod& (0+255),f,b
  9142  012E60  0EFF               	movlw	255
  9143  012E62  1790               	andwf	(___flmul@prod+1)& (0+255),f,b
  9144  012E64  0E7F               	movlw	127
  9145  012E66  1791               	andwf	(___flmul@prod+2)& (0+255),f,b
  9146  012E68  0E00               	movlw	0
  9147  012E6A  1792               	andwf	(___flmul@prod+3)& (0+255),f,b
  9148                           
  9149                           ; BSR set to: 0
  9150  012E6C  0100               	movlb	0	; () banked
  9151  012E6E  A18E               	btfss	___flmul@bexp& (0+255),0,b
  9152  012E70  D002               	goto	l6899
  9153                           
  9154                           ; BSR set to: 0
  9155  012E72  0100               	movlb	0	; () banked
  9156  012E74  8F91               	bsf	(___flmul@prod+2)& (0+255),7,b
  9157  012E76                     l6899:
  9158                           
  9159                           ; BSR set to: 0
  9160  012E76  0100               	movlb	0	; () banked
  9161  012E78  90D8               	bcf	status,0,c
  9162  012E7A  318E               	rrcf	___flmul@bexp& (0+255),w,b
  9163  012E7C  0100               	movlb	0	; () banked
  9164  012E7E                     L8:
  9165  012E7E  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  9166  012E80                     l6901:
  9167                           
  9168                           ; BSR set to: 0
  9169  012E80  0100               	movlb	0	; () banked
  9170  012E82  5188               	movf	___flmul@sign& (0+255),w,b
  9171  012E84  0100               	movlb	0	; () banked
  9172  012E86  1392               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9173                           
  9174                           ; BSR set to: 0
  9175  012E88  C08F  F07C         	movff	___flmul@prod,?___flmul
  9176  012E8C  C090  F07D         	movff	___flmul@prod+1,?___flmul+1
  9177  012E90  C091  F07E         	movff	___flmul@prod+2,?___flmul+2
  9178  012E94  C092  F07F         	movff	___flmul@prod+3,?___flmul+3
  9179  012E98  0012               	return	
  9180  012E9A                     __end_of___flmul:
  9181                           	opt stack 0
  9182                           tblptru	equ	0xFF8
  9183                           tblptrh	equ	0xFF7
  9184                           tblptrl	equ	0xFF6
  9185                           tablat	equ	0xFF5
  9186                           prodh	equ	0xFF4
  9187                           prodl	equ	0xFF3
  9188                           intcon	equ	0xFF2
  9189                           postinc0	equ	0xFEE
  9190                           wreg	equ	0xFE8
  9191                           indf2	equ	0xFDF
  9192                           postinc2	equ	0xFDE
  9193                           fsr2h	equ	0xFDA
  9194                           fsr2l	equ	0xFD9
  9195                           status	equ	0xFD8
  9196                           
  9197 ;; *************** function ___awmod *****************
  9198 ;; Defined at:
  9199 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  dividend        2   14[BANK0 ] int 
  9202 ;;  divisor         2   16[BANK0 ] int 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  sign            1   19[BANK0 ] unsigned char 
  9205 ;;  counter         1   18[BANK0 ] unsigned char 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  2   14[BANK0 ] int 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;Total ram usage:        6 bytes
  9220 ;; Hardware stack levels used:    1
  9221 ;; Hardware stack levels required when called:    3
  9222 ;; This function calls:
  9223 ;;		Nothing
  9224 ;; This function is called by:
  9225 ;;		_fround
  9226 ;;		_scale
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text17
  9231  014E8A                     __ptext17:
  9232                           	opt stack 0
  9233  014E8A                     ___awmod:
  9234                           	opt stack 24
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;incstack = 0
  9238  014E8A  0E00               	movlw	0
  9239  014E8C  0100               	movlb	0	; () banked
  9240  014E8E  6F73               	movwf	___awmod@sign& (0+255),b
  9241                           
  9242                           ; BSR set to: 0
  9243  014E90  0100               	movlb	0	; () banked
  9244  014E92  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9245  014E94  D008               	goto	l6959
  9246                           
  9247                           ; BSR set to: 0
  9248  014E96  0100               	movlb	0	; () banked
  9249  014E98  6D6E               	negf	___awmod@dividend& (0+255),b
  9250  014E9A  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9251  014E9C  B0D8               	btfsc	status,0,c
  9252  014E9E  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9253                           
  9254                           ; BSR set to: 0
  9255  014EA0  0E01               	movlw	1
  9256  014EA2  0100               	movlb	0	; () banked
  9257  014EA4  6F73               	movwf	___awmod@sign& (0+255),b
  9258  014EA6                     l6959:
  9259                           
  9260                           ; BSR set to: 0
  9261  014EA6  0100               	movlb	0	; () banked
  9262  014EA8  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9263  014EAA  D005               	goto	l6963
  9264                           
  9265                           ; BSR set to: 0
  9266  014EAC  0100               	movlb	0	; () banked
  9267  014EAE  6D70               	negf	___awmod@divisor& (0+255),b
  9268  014EB0  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  9269  014EB2  B0D8               	btfsc	status,0,c
  9270  014EB4  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  9271  014EB6                     l6963:
  9272                           
  9273                           ; BSR set to: 0
  9274  014EB6  0100               	movlb	0	; () banked
  9275  014EB8  5170               	movf	___awmod@divisor& (0+255),w,b
  9276  014EBA  0100               	movlb	0	; () banked
  9277  014EBC  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9278  014EBE  B4D8               	btfsc	status,2,c
  9279  014EC0  D026               	goto	l6979
  9280                           
  9281                           ; BSR set to: 0
  9282  014EC2  0E01               	movlw	1
  9283  014EC4  0100               	movlb	0	; () banked
  9284  014EC6  6F72               	movwf	___awmod@counter& (0+255),b
  9285  014EC8  D006               	goto	l6969
  9286  014ECA                     l6967:
  9287                           
  9288                           ; BSR set to: 0
  9289  014ECA  0100               	movlb	0	; () banked
  9290  014ECC  90D8               	bcf	status,0,c
  9291  014ECE  3770               	rlcf	___awmod@divisor& (0+255),f,b
  9292  014ED0  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9293  014ED2  0100               	movlb	0	; () banked
  9294  014ED4  2B72               	incf	___awmod@counter& (0+255),f,b
  9295  014ED6                     l6969:
  9296                           
  9297                           ; BSR set to: 0
  9298  014ED6  0100               	movlb	0	; () banked
  9299  014ED8  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9300  014EDA  D7F7               	goto	l6967
  9301  014EDC                     l6971:
  9302                           
  9303                           ; BSR set to: 0
  9304  014EDC  0100               	movlb	0	; () banked
  9305  014EDE  5170               	movf	___awmod@divisor& (0+255),w,b
  9306  014EE0  0100               	movlb	0	; () banked
  9307  014EE2  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  9308  014EE4  0100               	movlb	0	; () banked
  9309  014EE6  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9310  014EE8  0100               	movlb	0	; () banked
  9311  014EEA  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9312  014EEC  A0D8               	btfss	status,0,c
  9313  014EEE  D008               	goto	l6975
  9314                           
  9315                           ; BSR set to: 0
  9316  014EF0  0100               	movlb	0	; () banked
  9317  014EF2  5170               	movf	___awmod@divisor& (0+255),w,b
  9318  014EF4  0100               	movlb	0	; () banked
  9319  014EF6  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  9320  014EF8  0100               	movlb	0	; () banked
  9321  014EFA  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9322  014EFC  0100               	movlb	0	; () banked
  9323  014EFE  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9324  014F00                     l6975:
  9325                           
  9326                           ; BSR set to: 0
  9327  014F00  0100               	movlb	0	; () banked
  9328  014F02  90D8               	bcf	status,0,c
  9329  014F04  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9330  014F06  3370               	rrcf	___awmod@divisor& (0+255),f,b
  9331                           
  9332                           ; BSR set to: 0
  9333  014F08  0100               	movlb	0	; () banked
  9334  014F0A  2F72               	decfsz	___awmod@counter& (0+255),f,b
  9335  014F0C  D7E7               	goto	l6971
  9336  014F0E                     l6979:
  9337                           
  9338                           ; BSR set to: 0
  9339  014F0E  0100               	movlb	0	; () banked
  9340  014F10  5173               	movf	___awmod@sign& (0+255),w,b
  9341  014F12  0100               	movlb	0	; () banked
  9342  014F14  B4D8               	btfsc	status,2,c
  9343  014F16  D005               	goto	l6983
  9344                           
  9345                           ; BSR set to: 0
  9346  014F18  0100               	movlb	0	; () banked
  9347  014F1A  6D6E               	negf	___awmod@dividend& (0+255),b
  9348  014F1C  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9349  014F1E  B0D8               	btfsc	status,0,c
  9350  014F20  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9351  014F22                     l6983:
  9352                           
  9353                           ; BSR set to: 0
  9354  014F22  C06E  F06E         	movff	___awmod@dividend,?___awmod
  9355  014F26  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  9356  014F2A  0012               	return	
  9357  014F2C                     __end_of___awmod:
  9358                           	opt stack 0
  9359                           tblptru	equ	0xFF8
  9360                           tblptrh	equ	0xFF7
  9361                           tblptrl	equ	0xFF6
  9362                           tablat	equ	0xFF5
  9363                           prodh	equ	0xFF4
  9364                           prodl	equ	0xFF3
  9365                           intcon	equ	0xFF2
  9366                           postinc0	equ	0xFEE
  9367                           wreg	equ	0xFE8
  9368                           indf2	equ	0xFDF
  9369                           postinc2	equ	0xFDE
  9370                           fsr2h	equ	0xFDA
  9371                           fsr2l	equ	0xFD9
  9372                           status	equ	0xFD8
  9373                           
  9374 ;; *************** function ___awdiv *****************
  9375 ;; Defined at:
  9376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  dividend        2   20[BANK0 ] int 
  9379 ;;  divisor         2   22[BANK0 ] int 
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;  quotient        2   26[BANK0 ] int 
  9382 ;;  sign            1   25[BANK0 ] unsigned char 
  9383 ;;  counter         1   24[BANK0 ] unsigned char 
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  2   20[BANK0 ] int 
  9386 ;; Registers used:
  9387 ;;		wreg, status,2, status,0
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;Total ram usage:        8 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    3
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_fround
  9404 ;;		_scale
  9405 ;;		_sprintf
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text18
  9410  014C56                     __ptext18:
  9411                           	opt stack 0
  9412  014C56                     ___awdiv:
  9413                           	opt stack 24
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;incstack = 0
  9417  014C56  0E00               	movlw	0
  9418  014C58  0100               	movlb	0	; () banked
  9419  014C5A  6F79               	movwf	___awdiv@sign& (0+255),b
  9420                           
  9421                           ; BSR set to: 0
  9422  014C5C  0100               	movlb	0	; () banked
  9423  014C5E  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9424  014C60  D008               	goto	l6915
  9425                           
  9426                           ; BSR set to: 0
  9427  014C62  0100               	movlb	0	; () banked
  9428  014C64  6D76               	negf	___awdiv@divisor& (0+255),b
  9429  014C66  1F77               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9430  014C68  B0D8               	btfsc	status,0,c
  9431  014C6A  2B77               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9432                           
  9433                           ; BSR set to: 0
  9434  014C6C  0E01               	movlw	1
  9435  014C6E  0100               	movlb	0	; () banked
  9436  014C70  6F79               	movwf	___awdiv@sign& (0+255),b
  9437  014C72                     l6915:
  9438                           
  9439                           ; BSR set to: 0
  9440  014C72  0100               	movlb	0	; () banked
  9441  014C74  AF75               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9442  014C76  D008               	goto	l6921
  9443                           
  9444                           ; BSR set to: 0
  9445  014C78  0100               	movlb	0	; () banked
  9446  014C7A  6D74               	negf	___awdiv@dividend& (0+255),b
  9447  014C7C  1F75               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9448  014C7E  B0D8               	btfsc	status,0,c
  9449  014C80  2B75               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9450                           
  9451                           ; BSR set to: 0
  9452  014C82  0E01               	movlw	1
  9453  014C84  0100               	movlb	0	; () banked
  9454  014C86  1B79               	xorwf	___awdiv@sign& (0+255),f,b
  9455  014C88                     l6921:
  9456                           
  9457                           ; BSR set to: 0
  9458  014C88  0E00               	movlw	0
  9459  014C8A  0100               	movlb	0	; () banked
  9460  014C8C  6F7B               	movwf	(___awdiv@quotient+1)& (0+255),b
  9461  014C8E  0E00               	movlw	0
  9462  014C90  6F7A               	movwf	___awdiv@quotient& (0+255),b
  9463                           
  9464                           ; BSR set to: 0
  9465  014C92  0100               	movlb	0	; () banked
  9466  014C94  5176               	movf	___awdiv@divisor& (0+255),w,b
  9467  014C96  0100               	movlb	0	; () banked
  9468  014C98  1177               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9469  014C9A  B4D8               	btfsc	status,2,c
  9470  014C9C  D02C               	goto	l6943
  9471                           
  9472                           ; BSR set to: 0
  9473  014C9E  0E01               	movlw	1
  9474  014CA0  0100               	movlb	0	; () banked
  9475  014CA2  6F78               	movwf	___awdiv@counter& (0+255),b
  9476  014CA4  D006               	goto	l6929
  9477  014CA6                     l6927:
  9478                           
  9479                           ; BSR set to: 0
  9480  014CA6  0100               	movlb	0	; () banked
  9481  014CA8  90D8               	bcf	status,0,c
  9482  014CAA  3776               	rlcf	___awdiv@divisor& (0+255),f,b
  9483  014CAC  3777               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9484  014CAE  0100               	movlb	0	; () banked
  9485  014CB0  2B78               	incf	___awdiv@counter& (0+255),f,b
  9486  014CB2                     l6929:
  9487                           
  9488                           ; BSR set to: 0
  9489  014CB2  0100               	movlb	0	; () banked
  9490  014CB4  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9491  014CB6  D7F7               	goto	l6927
  9492  014CB8                     l6931:
  9493                           
  9494                           ; BSR set to: 0
  9495  014CB8  0100               	movlb	0	; () banked
  9496  014CBA  90D8               	bcf	status,0,c
  9497  014CBC  377A               	rlcf	___awdiv@quotient& (0+255),f,b
  9498  014CBE  377B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9499                           
  9500                           ; BSR set to: 0
  9501  014CC0  0100               	movlb	0	; () banked
  9502  014CC2  5176               	movf	___awdiv@divisor& (0+255),w,b
  9503  014CC4  0100               	movlb	0	; () banked
  9504  014CC6  5D74               	subwf	___awdiv@dividend& (0+255),w,b
  9505  014CC8  0100               	movlb	0	; () banked
  9506  014CCA  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9507  014CCC  0100               	movlb	0	; () banked
  9508  014CCE  5975               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9509  014CD0  A0D8               	btfss	status,0,c
  9510  014CD2  D00A               	goto	l6939
  9511                           
  9512                           ; BSR set to: 0
  9513  014CD4  0100               	movlb	0	; () banked
  9514  014CD6  5176               	movf	___awdiv@divisor& (0+255),w,b
  9515  014CD8  0100               	movlb	0	; () banked
  9516  014CDA  5F74               	subwf	___awdiv@dividend& (0+255),f,b
  9517  014CDC  0100               	movlb	0	; () banked
  9518  014CDE  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9519  014CE0  0100               	movlb	0	; () banked
  9520  014CE2  5B75               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9521                           
  9522                           ; BSR set to: 0
  9523  014CE4  0100               	movlb	0	; () banked
  9524  014CE6  817A               	bsf	___awdiv@quotient& (0+255),0,b
  9525  014CE8                     l6939:
  9526                           
  9527                           ; BSR set to: 0
  9528  014CE8  0100               	movlb	0	; () banked
  9529  014CEA  90D8               	bcf	status,0,c
  9530  014CEC  3377               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9531  014CEE  3376               	rrcf	___awdiv@divisor& (0+255),f,b
  9532                           
  9533                           ; BSR set to: 0
  9534  014CF0  0100               	movlb	0	; () banked
  9535  014CF2  2F78               	decfsz	___awdiv@counter& (0+255),f,b
  9536  014CF4  D7E1               	goto	l6931
  9537  014CF6                     l6943:
  9538                           
  9539                           ; BSR set to: 0
  9540  014CF6  0100               	movlb	0	; () banked
  9541  014CF8  5179               	movf	___awdiv@sign& (0+255),w,b
  9542  014CFA  0100               	movlb	0	; () banked
  9543  014CFC  B4D8               	btfsc	status,2,c
  9544  014CFE  D005               	goto	l6947
  9545                           
  9546                           ; BSR set to: 0
  9547  014D00  0100               	movlb	0	; () banked
  9548  014D02  6D7A               	negf	___awdiv@quotient& (0+255),b
  9549  014D04  1F7B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9550  014D06  B0D8               	btfsc	status,0,c
  9551  014D08  2B7B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9552  014D0A                     l6947:
  9553                           
  9554                           ; BSR set to: 0
  9555  014D0A  C07A  F074         	movff	___awdiv@quotient,?___awdiv
  9556  014D0E  C07B  F075         	movff	___awdiv@quotient+1,?___awdiv+1
  9557  014D12  0012               	return	
  9558  014D14                     __end_of___awdiv:
  9559                           	opt stack 0
  9560                           tblptru	equ	0xFF8
  9561                           tblptrh	equ	0xFF7
  9562                           tblptrl	equ	0xFF6
  9563                           tablat	equ	0xFF5
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           intcon	equ	0xFF2
  9567                           postinc0	equ	0xFEE
  9568                           wreg	equ	0xFE8
  9569                           indf2	equ	0xFDF
  9570                           postinc2	equ	0xFDE
  9571                           fsr2h	equ	0xFDA
  9572                           fsr2l	equ	0xFD9
  9573                           status	equ	0xFD8
  9574                           
  9575 ;; *************** function __tdiv_to_l_ *****************
  9576 ;; Defined at:
  9577 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  f1              4   14[BANK0 ] float 
  9580 ;;  f2              4   18[BANK0 ] float 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  quot            4   25[BANK0 ] unsigned long 
  9583 ;;  exp1            1   30[BANK0 ] unsigned char 
  9584 ;;  cntr            1   29[BANK0 ] unsigned char 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  4   14[BANK0 ] unsigned long 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9594 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;Total ram usage:       17 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    3
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_sprintf
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text19
  9609  01406A                     __ptext19:
  9610                           	opt stack 0
  9611  01406A                     __tdiv_to_l_:
  9612                           	opt stack 25
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;incstack = 0
  9616  01406A  C070  F076         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9617  01406E  0100               	movlb	0	; () banked
  9618  014070  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9619  014072  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9620  014074  0100               	movlb	0	; () banked
  9621  014076  356F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9622  014078  0100               	movlb	0	; () banked
  9623  01407A  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9624  01407C  E301               	bnc	u9961
  9625  01407E  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9626  014080                     u9961:
  9627  014080  0100               	movlb	0	; () banked
  9628  014082  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9629  014084  0100               	movlb	0	; () banked
  9630  014086  6F7E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9631  014088  0100               	movlb	0	; () banked
  9632  01408A  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9633  01408C  A4D8               	btfss	status,2,c
  9634  01408E  D00A               	goto	l7501
  9635                           
  9636                           ; BSR set to: 0
  9637  014090  0E00               	movlw	0
  9638  014092  0100               	movlb	0	; () banked
  9639  014094  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9640  014096  0E00               	movlw	0
  9641  014098  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9642  01409A  0E00               	movlw	0
  9643  01409C  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9644  01409E  0E00               	movlw	0
  9645  0140A0  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9646                           
  9647                           ; BSR set to: 0
  9648  0140A2  0012               	return	
  9649  0140A4                     l7501:
  9650                           
  9651                           ; BSR set to: 0
  9652  0140A4  C074  F076         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9653  0140A8  0100               	movlb	0	; () banked
  9654  0140AA  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9655  0140AC  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9656  0140AE  0100               	movlb	0	; () banked
  9657  0140B0  3573               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9658  0140B2  0100               	movlb	0	; () banked
  9659  0140B4  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9660  0140B6  E301               	bnc	u9981
  9661  0140B8  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9662  0140BA                     u9981:
  9663  0140BA  0100               	movlb	0	; () banked
  9664  0140BC  5176               	movf	??__tdiv_to_l_& (0+255),w,b
  9665  0140BE  0100               	movlb	0	; () banked
  9666  0140C0  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9667  0140C2  0100               	movlb	0	; () banked
  9668  0140C4  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9669  0140C6  A4D8               	btfss	status,2,c
  9670  0140C8  D00A               	goto	l7507
  9671                           
  9672                           ; BSR set to: 0
  9673  0140CA  0E00               	movlw	0
  9674  0140CC  0100               	movlb	0	; () banked
  9675  0140CE  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9676  0140D0  0E00               	movlw	0
  9677  0140D2  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9678  0140D4  0E00               	movlw	0
  9679  0140D6  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9680  0140D8  0E00               	movlw	0
  9681  0140DA  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9682                           
  9683                           ; BSR set to: 0
  9684  0140DC  0012               	return	
  9685  0140DE                     l7507:
  9686                           
  9687                           ; BSR set to: 0
  9688  0140DE  0100               	movlb	0	; () banked
  9689  0140E0  8F6F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9690                           
  9691                           ; BSR set to: 0
  9692  0140E2  0EFF               	movlw	255
  9693  0140E4  0100               	movlb	0	; () banked
  9694  0140E6  176E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9695  0140E8  0EFF               	movlw	255
  9696  0140EA  0100               	movlb	0	; () banked
  9697  0140EC  176F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9698  0140EE  0E00               	movlw	0
  9699  0140F0  0100               	movlb	0	; () banked
  9700  0140F2  1770               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9701  0140F4  0100               	movlb	0	; () banked
  9702  0140F6  8F73               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9703                           
  9704                           ; BSR set to: 0
  9705  0140F8  0EFF               	movlw	255
  9706  0140FA  0100               	movlb	0	; () banked
  9707  0140FC  1772               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9708  0140FE  0EFF               	movlw	255
  9709  014100  0100               	movlb	0	; () banked
  9710  014102  1773               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9711  014104  0E00               	movlw	0
  9712  014106  0100               	movlb	0	; () banked
  9713  014108  1774               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9714                           
  9715                           ; BSR set to: 0
  9716  01410A  0E00               	movlw	0
  9717  01410C  0100               	movlb	0	; () banked
  9718  01410E  6F79               	movwf	__tdiv_to_l_@quot& (0+255),b
  9719  014110  0E00               	movlw	0
  9720  014112  6F7A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9721  014114  0E00               	movlw	0
  9722  014116  6F7B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9723  014118  0E00               	movlw	0
  9724  01411A  6F7C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9725                           
  9726                           ; BSR set to: 0
  9727  01411C  0E7F               	movlw	127
  9728  01411E  0100               	movlb	0	; () banked
  9729  014120  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9730                           
  9731                           ; BSR set to: 0
  9732  014122  0100               	movlb	0	; () banked
  9733  014124  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9734  014126  0F98               	addlw	152
  9735  014128  0100               	movlb	0	; () banked
  9736  01412A  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9737                           
  9738                           ; BSR set to: 0
  9739  01412C  0E18               	movlw	24
  9740  01412E  0100               	movlb	0	; () banked
  9741  014130  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9742  014132                     l1209:
  9743                           
  9744                           ; BSR set to: 0
  9745  014132  0100               	movlb	0	; () banked
  9746  014134  90D8               	bcf	status,0,c
  9747  014136  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9748  014138  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9749  01413A  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9750  01413C  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9751                           
  9752                           ; BSR set to: 0
  9753  01413E  0100               	movlb	0	; () banked
  9754  014140  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9755  014142  0100               	movlb	0	; () banked
  9756  014144  5D6E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9757  014146  0100               	movlb	0	; () banked
  9758  014148  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9759  01414A  0100               	movlb	0	; () banked
  9760  01414C  596F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9761  01414E  0100               	movlb	0	; () banked
  9762  014150  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9763  014152  0100               	movlb	0	; () banked
  9764  014154  5970               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9765  014156  A0D8               	btfss	status,0,c
  9766  014158  D00E               	goto	l1210
  9767                           
  9768                           ; BSR set to: 0
  9769  01415A  0100               	movlb	0	; () banked
  9770  01415C  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9771  01415E  0100               	movlb	0	; () banked
  9772  014160  5F6E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9773  014162  0100               	movlb	0	; () banked
  9774  014164  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9775  014166  0100               	movlb	0	; () banked
  9776  014168  5B6F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9777  01416A  0100               	movlb	0	; () banked
  9778  01416C  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9779  01416E  0100               	movlb	0	; () banked
  9780  014170  5B70               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9781                           
  9782                           ; BSR set to: 0
  9783  014172  0100               	movlb	0	; () banked
  9784  014174  8179               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9785  014176                     l1210:
  9786                           
  9787                           ; BSR set to: 0
  9788  014176  0100               	movlb	0	; () banked
  9789  014178  90D8               	bcf	status,0,c
  9790  01417A  376E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9791  01417C  376F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9792  01417E  3770               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9793                           
  9794                           ; BSR set to: 0
  9795  014180  0100               	movlb	0	; () banked
  9796  014182  2F7D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9797  014184  D7D6               	goto	l1209
  9798                           
  9799                           ; BSR set to: 0
  9800                           
  9801                           ; BSR set to: 0
  9802  014186  0100               	movlb	0	; () banked
  9803  014188  AF7E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9804  01418A  D01A               	goto	l7541
  9805                           
  9806                           ; BSR set to: 0
  9807  01418C  0100               	movlb	0	; () banked
  9808  01418E  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9809  014190  0A80               	xorlw	128
  9810  014192  0F97               	addlw	151
  9811  014194  B0D8               	btfsc	status,0,c
  9812  014196  D00A               	goto	l7537
  9813                           
  9814                           ; BSR set to: 0
  9815  014198  0E00               	movlw	0
  9816  01419A  0100               	movlb	0	; () banked
  9817  01419C  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9818  01419E  0E00               	movlw	0
  9819  0141A0  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9820  0141A2  0E00               	movlw	0
  9821  0141A4  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9822  0141A6  0E00               	movlw	0
  9823  0141A8  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9824                           
  9825                           ; BSR set to: 0
  9826  0141AA  0012               	return	
  9827  0141AC                     l7537:
  9828                           
  9829                           ; BSR set to: 0
  9830  0141AC  0100               	movlb	0	; () banked
  9831  0141AE  90D8               	bcf	status,0,c
  9832  0141B0  337C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9833  0141B2  337B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9834  0141B4  337A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9835  0141B6  3379               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9836                           
  9837                           ; BSR set to: 0
  9838  0141B8  0100               	movlb	0	; () banked
  9839  0141BA  3F7E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9840  0141BC  D7F7               	goto	l7537
  9841                           
  9842                           ; BSR set to: 0
  9843  0141BE  D01B               	goto	l1216
  9844  0141C0                     l7541:
  9845                           
  9846                           ; BSR set to: 0
  9847  0141C0  0E17               	movlw	23
  9848  0141C2  0100               	movlb	0	; () banked
  9849  0141C4  657E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9850  0141C6  D012               	goto	l7549
  9851                           
  9852                           ; BSR set to: 0
  9853  0141C8  0E00               	movlw	0
  9854  0141CA  0100               	movlb	0	; () banked
  9855  0141CC  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
  9856  0141CE  0E00               	movlw	0
  9857  0141D0  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9858  0141D2  0E00               	movlw	0
  9859  0141D4  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9860  0141D6  0E00               	movlw	0
  9861  0141D8  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9862                           
  9863                           ; BSR set to: 0
  9864  0141DA  0012               	return	
  9865  0141DC                     l7547:
  9866                           
  9867                           ; BSR set to: 0
  9868  0141DC  0100               	movlb	0	; () banked
  9869  0141DE  90D8               	bcf	status,0,c
  9870  0141E0  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9871  0141E2  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9872  0141E4  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9873  0141E6  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9874  0141E8  0100               	movlb	0	; () banked
  9875  0141EA  077E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9876  0141EC                     l7549:
  9877                           
  9878                           ; BSR set to: 0
  9879  0141EC  0100               	movlb	0	; () banked
  9880  0141EE  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9881  0141F0  0100               	movlb	0	; () banked
  9882  0141F2  A4D8               	btfss	status,2,c
  9883  0141F4  D7F3               	goto	l7547
  9884  0141F6                     l1216:
  9885                           
  9886                           ; BSR set to: 0
  9887  0141F6  C079  F06E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9888  0141FA  C07A  F06F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9889  0141FE  C07B  F070         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9890  014202  C07C  F071         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9891                           
  9892                           ; BSR set to: 0
  9893  014206  0012               	return		;funcret
  9894  014208                     __end_of__tdiv_to_l_:
  9895                           	opt stack 0
  9896                           tblptru	equ	0xFF8
  9897                           tblptrh	equ	0xFF7
  9898                           tblptrl	equ	0xFF6
  9899                           tablat	equ	0xFF5
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           postinc0	equ	0xFEE
  9904                           wreg	equ	0xFE8
  9905                           indf2	equ	0xFDF
  9906                           postinc2	equ	0xFDE
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           
  9911 ;; *************** function __div_to_l_ *****************
  9912 ;; Defined at:
  9913 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  f1              4   14[BANK0 ] unsigned long 
  9916 ;;  f2              4   18[BANK0 ] unsigned long 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  quot            4   22[BANK0 ] unsigned long 
  9919 ;;  exp1            1   27[BANK0 ] unsigned char 
  9920 ;;  cntr            1   26[BANK0 ] unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  4   14[BANK0 ] unsigned long 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9930 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;Total ram usage:       14 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    3
  9937 ;; This function calls:
  9938 ;;		Nothing
  9939 ;; This function is called by:
  9940 ;;		_sprintf
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text20
  9945  014398                     __ptext20:
  9946                           	opt stack 0
  9947  014398                     __div_to_l_:
  9948                           	opt stack 25
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;incstack = 0
  9952  014398  0100               	movlb	0	; () banked
  9953  01439A  3570               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9954  01439C  3571               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9955  01439E  0100               	movlb	0	; () banked
  9956  0143A0  6F7B               	movwf	__div_to_l_@exp1& (0+255),b
  9957  0143A2  0100               	movlb	0	; () banked
  9958  0143A4  517B               	movf	__div_to_l_@exp1& (0+255),w,b
  9959  0143A6  A4D8               	btfss	status,2,c
  9960  0143A8  D00A               	goto	l7557
  9961                           
  9962                           ; BSR set to: 0
  9963  0143AA  0E00               	movlw	0
  9964  0143AC  0100               	movlb	0	; () banked
  9965  0143AE  6F6E               	movwf	?__div_to_l_& (0+255),b
  9966  0143B0  0E00               	movlw	0
  9967  0143B2  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9968  0143B4  0E00               	movlw	0
  9969  0143B6  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9970  0143B8  0E00               	movlw	0
  9971  0143BA  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9972                           
  9973                           ; BSR set to: 0
  9974  0143BC  0012               	return	
  9975  0143BE                     l7557:
  9976                           
  9977                           ; BSR set to: 0
  9978  0143BE  0100               	movlb	0	; () banked
  9979  0143C0  3574               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9980  0143C2  3575               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9981  0143C4  0100               	movlb	0	; () banked
  9982  0143C6  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
  9983  0143C8  0100               	movlb	0	; () banked
  9984  0143CA  517A               	movf	__div_to_l_@cntr& (0+255),w,b
  9985  0143CC  A4D8               	btfss	status,2,c
  9986  0143CE  D00A               	goto	l7563
  9987                           
  9988                           ; BSR set to: 0
  9989  0143D0  0E00               	movlw	0
  9990  0143D2  0100               	movlb	0	; () banked
  9991  0143D4  6F6E               	movwf	?__div_to_l_& (0+255),b
  9992  0143D6  0E00               	movlw	0
  9993  0143D8  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
  9994  0143DA  0E00               	movlw	0
  9995  0143DC  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
  9996  0143DE  0E00               	movlw	0
  9997  0143E0  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
  9998                           
  9999                           ; BSR set to: 0
 10000  0143E2  0012               	return	
 10001  0143E4                     l7563:
 10002                           
 10003                           ; BSR set to: 0
 10004  0143E4  0100               	movlb	0	; () banked
 10005  0143E6  8F70               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10006                           
 10007                           ; BSR set to: 0
 10008  0143E8  0EFF               	movlw	255
 10009  0143EA  0100               	movlb	0	; () banked
 10010  0143EC  176E               	andwf	__div_to_l_@f1& (0+255),f,b
 10011  0143EE  0EFF               	movlw	255
 10012  0143F0  176F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10013  0143F2  0EFF               	movlw	255
 10014  0143F4  1770               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10015  0143F6  0E00               	movlw	0
 10016  0143F8  1771               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10017                           
 10018                           ; BSR set to: 0
 10019  0143FA  0100               	movlb	0	; () banked
 10020  0143FC  8F74               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10021  0143FE  0EFF               	movlw	255
 10022  014400  0100               	movlb	0	; () banked
 10023  014402  1772               	andwf	__div_to_l_@f2& (0+255),f,b
 10024  014404  0EFF               	movlw	255
 10025  014406  1773               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10026  014408  0EFF               	movlw	255
 10027  01440A  1774               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10028  01440C  0E00               	movlw	0
 10029  01440E  1775               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10030                           
 10031                           ; BSR set to: 0
 10032  014410  0E00               	movlw	0
 10033  014412  0100               	movlb	0	; () banked
 10034  014414  6F76               	movwf	__div_to_l_@quot& (0+255),b
 10035  014416  0E00               	movlw	0
 10036  014418  6F77               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10037  01441A  0E00               	movlw	0
 10038  01441C  6F78               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10039  01441E  0E00               	movlw	0
 10040  014420  6F79               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10041                           
 10042                           ; BSR set to: 0
 10043  014422  0E7F               	movlw	127
 10044  014424  0100               	movlb	0	; () banked
 10045  014426  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10046                           
 10047                           ; BSR set to: 0
 10048  014428  0100               	movlb	0	; () banked
 10049  01442A  517A               	movf	__div_to_l_@cntr& (0+255),w,b
 10050  01442C  0FA0               	addlw	160
 10051  01442E  0100               	movlb	0	; () banked
 10052  014430  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10053                           
 10054                           ; BSR set to: 0
 10055  014432  0E20               	movlw	32
 10056  014434  0100               	movlb	0	; () banked
 10057  014436  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
 10058  014438                     l7577:
 10059                           
 10060                           ; BSR set to: 0
 10061  014438  0100               	movlb	0	; () banked
 10062  01443A  90D8               	bcf	status,0,c
 10063  01443C  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
 10064  01443E  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10065  014440  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10066  014442  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10067                           
 10068                           ; BSR set to: 0
 10069  014444  0100               	movlb	0	; () banked
 10070  014446  5172               	movf	__div_to_l_@f2& (0+255),w,b
 10071  014448  0100               	movlb	0	; () banked
 10072  01444A  5D6E               	subwf	__div_to_l_@f1& (0+255),w,b
 10073  01444C  0100               	movlb	0	; () banked
 10074  01444E  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10075  014450  0100               	movlb	0	; () banked
 10076  014452  596F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10077  014454  0100               	movlb	0	; () banked
 10078  014456  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10079  014458  0100               	movlb	0	; () banked
 10080  01445A  5970               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10081  01445C  0100               	movlb	0	; () banked
 10082  01445E  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10083  014460  0100               	movlb	0	; () banked
 10084  014462  5971               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10085  014464  A0D8               	btfss	status,0,c
 10086  014466  D012               	goto	l7585
 10087                           
 10088                           ; BSR set to: 0
 10089  014468  0100               	movlb	0	; () banked
 10090  01446A  5172               	movf	__div_to_l_@f2& (0+255),w,b
 10091  01446C  0100               	movlb	0	; () banked
 10092  01446E  5F6E               	subwf	__div_to_l_@f1& (0+255),f,b
 10093  014470  0100               	movlb	0	; () banked
 10094  014472  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10095  014474  0100               	movlb	0	; () banked
 10096  014476  5B6F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10097  014478  0100               	movlb	0	; () banked
 10098  01447A  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10099  01447C  0100               	movlb	0	; () banked
 10100  01447E  5B70               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10101  014480  0100               	movlb	0	; () banked
 10102  014482  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10103  014484  0100               	movlb	0	; () banked
 10104  014486  5B71               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10105                           
 10106                           ; BSR set to: 0
 10107  014488  0100               	movlb	0	; () banked
 10108  01448A  8176               	bsf	__div_to_l_@quot& (0+255),0,b
 10109  01448C                     l7585:
 10110                           
 10111                           ; BSR set to: 0
 10112  01448C  0100               	movlb	0	; () banked
 10113  01448E  90D8               	bcf	status,0,c
 10114  014490  376E               	rlcf	__div_to_l_@f1& (0+255),f,b
 10115  014492  376F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10116  014494  3770               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10117  014496  3771               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10118                           
 10119                           ; BSR set to: 0
 10120  014498  0100               	movlb	0	; () banked
 10121  01449A  2F7A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10122  01449C  D7CD               	goto	l7577
 10123                           
 10124                           ; BSR set to: 0
 10125                           
 10126                           ; BSR set to: 0
 10127  01449E  0100               	movlb	0	; () banked
 10128  0144A0  AF7B               	btfss	__div_to_l_@exp1& (0+255),7,b
 10129  0144A2  D01A               	goto	l7601
 10130                           
 10131                           ; BSR set to: 0
 10132  0144A4  0100               	movlb	0	; () banked
 10133  0144A6  517B               	movf	__div_to_l_@exp1& (0+255),w,b
 10134  0144A8  0A80               	xorlw	128
 10135  0144AA  0F9F               	addlw	159
 10136  0144AC  B0D8               	btfsc	status,0,c
 10137  0144AE  D00A               	goto	l7597
 10138                           
 10139                           ; BSR set to: 0
 10140  0144B0  0E00               	movlw	0
 10141  0144B2  0100               	movlb	0	; () banked
 10142  0144B4  6F6E               	movwf	?__div_to_l_& (0+255),b
 10143  0144B6  0E00               	movlw	0
 10144  0144B8  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10145  0144BA  0E00               	movlw	0
 10146  0144BC  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10147  0144BE  0E00               	movlw	0
 10148  0144C0  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10149                           
 10150                           ; BSR set to: 0
 10151  0144C2  0012               	return	
 10152  0144C4                     l7597:
 10153                           
 10154                           ; BSR set to: 0
 10155  0144C4  0100               	movlb	0	; () banked
 10156  0144C6  90D8               	bcf	status,0,c
 10157  0144C8  3379               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10158  0144CA  3378               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10159  0144CC  3377               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10160  0144CE  3376               	rrcf	__div_to_l_@quot& (0+255),f,b
 10161                           
 10162                           ; BSR set to: 0
 10163  0144D0  0100               	movlb	0	; () banked
 10164  0144D2  3F7B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10165  0144D4  D7F7               	goto	l7597
 10166                           
 10167                           ; BSR set to: 0
 10168  0144D6  D01B               	goto	l1112
 10169  0144D8                     l7601:
 10170                           
 10171                           ; BSR set to: 0
 10172  0144D8  0E1F               	movlw	31
 10173  0144DA  0100               	movlb	0	; () banked
 10174  0144DC  657B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10175  0144DE  D012               	goto	l7609
 10176                           
 10177                           ; BSR set to: 0
 10178  0144E0  0E00               	movlw	0
 10179  0144E2  0100               	movlb	0	; () banked
 10180  0144E4  6F6E               	movwf	?__div_to_l_& (0+255),b
 10181  0144E6  0E00               	movlw	0
 10182  0144E8  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10183  0144EA  0E00               	movlw	0
 10184  0144EC  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10185  0144EE  0E00               	movlw	0
 10186  0144F0  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10187                           
 10188                           ; BSR set to: 0
 10189  0144F2  0012               	return	
 10190  0144F4                     l7607:
 10191                           
 10192                           ; BSR set to: 0
 10193  0144F4  0100               	movlb	0	; () banked
 10194  0144F6  90D8               	bcf	status,0,c
 10195  0144F8  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
 10196  0144FA  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10197  0144FC  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10198  0144FE  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10199  014500  0100               	movlb	0	; () banked
 10200  014502  077B               	decf	__div_to_l_@exp1& (0+255),f,b
 10201  014504                     l7609:
 10202                           
 10203                           ; BSR set to: 0
 10204  014504  0100               	movlb	0	; () banked
 10205  014506  517B               	movf	__div_to_l_@exp1& (0+255),w,b
 10206  014508  0100               	movlb	0	; () banked
 10207  01450A  A4D8               	btfss	status,2,c
 10208  01450C  D7F3               	goto	l7607
 10209  01450E                     l1112:
 10210                           
 10211                           ; BSR set to: 0
 10212  01450E  C076  F06E         	movff	__div_to_l_@quot,?__div_to_l_
 10213  014512  C077  F06F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10214  014516  C078  F070         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10215  01451A  C079  F071         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10216                           
 10217                           ; BSR set to: 0
 10218  01451E  0012               	return		;funcret
 10219  014520                     __end_of__div_to_l_:
 10220                           	opt stack 0
 10221                           tblptru	equ	0xFF8
 10222                           tblptrh	equ	0xFF7
 10223                           tblptrl	equ	0xFF6
 10224                           tablat	equ	0xFF5
 10225                           prodh	equ	0xFF4
 10226                           prodl	equ	0xFF3
 10227                           intcon	equ	0xFF2
 10228                           postinc0	equ	0xFEE
 10229                           wreg	equ	0xFE8
 10230                           indf2	equ	0xFDF
 10231                           postinc2	equ	0xFDE
 10232                           fsr2h	equ	0xFDA
 10233                           fsr2l	equ	0xFD9
 10234                           status	equ	0xFD8
 10235                           
 10236 ;; *************** function ___llmod *****************
 10237 ;; Defined at:
 10238 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;  dividend        4   14[BANK0 ] unsigned long 
 10241 ;;  divisor         4   18[BANK0 ] unsigned long 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  counter         1   22[BANK0 ] unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  4   14[BANK0 ] unsigned long 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10253 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;Total ram usage:        9 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    3
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_sprintf
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text21
 10268  014F2C                     __ptext21:
 10269                           	opt stack 0
 10270  014F2C                     ___llmod:
 10271                           	opt stack 25
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;incstack = 0
 10275  014F2C  0100               	movlb	0	; () banked
 10276  014F2E  5172               	movf	___llmod@divisor& (0+255),w,b
 10277  014F30  0100               	movlb	0	; () banked
 10278  014F32  1173               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10279  014F34  0100               	movlb	0	; () banked
 10280  014F36  1174               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10281  014F38  0100               	movlb	0	; () banked
 10282  014F3A  1175               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10283  014F3C  B4D8               	btfsc	status,2,c
 10284  014F3E  D03A               	goto	l1315
 10285                           
 10286                           ; BSR set to: 0
 10287  014F40  0E01               	movlw	1
 10288  014F42  0100               	movlb	0	; () banked
 10289  014F44  6F76               	movwf	___llmod@counter& (0+255),b
 10290  014F46  D008               	goto	l7719
 10291  014F48                     l7717:
 10292                           
 10293                           ; BSR set to: 0
 10294  014F48  0100               	movlb	0	; () banked
 10295  014F4A  90D8               	bcf	status,0,c
 10296  014F4C  3772               	rlcf	___llmod@divisor& (0+255),f,b
 10297  014F4E  3773               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10298  014F50  3774               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10299  014F52  3775               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10300  014F54  0100               	movlb	0	; () banked
 10301  014F56  2B76               	incf	___llmod@counter& (0+255),f,b
 10302  014F58                     l7719:
 10303                           
 10304                           ; BSR set to: 0
 10305  014F58  0100               	movlb	0	; () banked
 10306  014F5A  AF75               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10307  014F5C  D7F5               	goto	l7717
 10308  014F5E                     l7721:
 10309                           
 10310                           ; BSR set to: 0
 10311  014F5E  0100               	movlb	0	; () banked
 10312  014F60  5172               	movf	___llmod@divisor& (0+255),w,b
 10313  014F62  0100               	movlb	0	; () banked
 10314  014F64  5D6E               	subwf	___llmod@dividend& (0+255),w,b
 10315  014F66  0100               	movlb	0	; () banked
 10316  014F68  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10317  014F6A  0100               	movlb	0	; () banked
 10318  014F6C  596F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10319  014F6E  0100               	movlb	0	; () banked
 10320  014F70  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10321  014F72  0100               	movlb	0	; () banked
 10322  014F74  5970               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10323  014F76  0100               	movlb	0	; () banked
 10324  014F78  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10325  014F7A  0100               	movlb	0	; () banked
 10326  014F7C  5971               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10327  014F7E  A0D8               	btfss	status,0,c
 10328  014F80  D010               	goto	l7725
 10329                           
 10330                           ; BSR set to: 0
 10331  014F82  0100               	movlb	0	; () banked
 10332  014F84  5172               	movf	___llmod@divisor& (0+255),w,b
 10333  014F86  0100               	movlb	0	; () banked
 10334  014F88  5F6E               	subwf	___llmod@dividend& (0+255),f,b
 10335  014F8A  0100               	movlb	0	; () banked
 10336  014F8C  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 10337  014F8E  0100               	movlb	0	; () banked
 10338  014F90  5B6F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10339  014F92  0100               	movlb	0	; () banked
 10340  014F94  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 10341  014F96  0100               	movlb	0	; () banked
 10342  014F98  5B70               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10343  014F9A  0100               	movlb	0	; () banked
 10344  014F9C  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 10345  014F9E  0100               	movlb	0	; () banked
 10346  014FA0  5B71               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10347  014FA2                     l7725:
 10348                           
 10349                           ; BSR set to: 0
 10350  014FA2  0100               	movlb	0	; () banked
 10351  014FA4  90D8               	bcf	status,0,c
 10352  014FA6  3375               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10353  014FA8  3374               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10354  014FAA  3373               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10355  014FAC  3372               	rrcf	___llmod@divisor& (0+255),f,b
 10356                           
 10357                           ; BSR set to: 0
 10358  014FAE  0100               	movlb	0	; () banked
 10359  014FB0  2F76               	decfsz	___llmod@counter& (0+255),f,b
 10360  014FB2  D7D5               	goto	l7721
 10361  014FB4                     l1315:
 10362                           
 10363                           ; BSR set to: 0
 10364  014FB4  C06E  F06E         	movff	___llmod@dividend,?___llmod
 10365  014FB8  C06F  F06F         	movff	___llmod@dividend+1,?___llmod+1
 10366  014FBC  C070  F070         	movff	___llmod@dividend+2,?___llmod+2
 10367  014FC0  C071  F071         	movff	___llmod@dividend+3,?___llmod+3
 10368                           
 10369                           ; BSR set to: 0
 10370  014FC4  0012               	return		;funcret
 10371  014FC6                     __end_of___llmod:
 10372                           	opt stack 0
 10373                           tblptru	equ	0xFF8
 10374                           tblptrh	equ	0xFF7
 10375                           tblptrl	equ	0xFF6
 10376                           tablat	equ	0xFF5
 10377                           prodh	equ	0xFF4
 10378                           prodl	equ	0xFF3
 10379                           intcon	equ	0xFF2
 10380                           postinc0	equ	0xFEE
 10381                           wreg	equ	0xFE8
 10382                           indf2	equ	0xFDF
 10383                           postinc2	equ	0xFDE
 10384                           fsr2h	equ	0xFDA
 10385                           fsr2l	equ	0xFD9
 10386                           status	equ	0xFD8
 10387                           
 10388 ;; *************** function ___lldiv *****************
 10389 ;; Defined at:
 10390 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  dividend        4   14[BANK0 ] unsigned long 
 10393 ;;  divisor         4   18[BANK0 ] unsigned long 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;  quotient        4   22[BANK0 ] unsigned long 
 10396 ;;  counter         1   26[BANK0 ] unsigned char 
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  4   14[BANK0 ] unsigned long 
 10399 ;; Registers used:
 10400 ;;		wreg, status,2, status,0
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;Total ram usage:       13 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; Hardware stack levels required when called:    3
 10413 ;; This function calls:
 10414 ;;		Nothing
 10415 ;; This function is called by:
 10416 ;;		_sprintf
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text22
 10421  014D14                     __ptext22:
 10422                           	opt stack 0
 10423  014D14                     ___lldiv:
 10424                           	opt stack 25
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;incstack = 0
 10428  014D14  0E00               	movlw	0
 10429  014D16  0100               	movlb	0	; () banked
 10430  014D18  6F76               	movwf	___lldiv@quotient& (0+255),b
 10431  014D1A  0E00               	movlw	0
 10432  014D1C  6F77               	movwf	(___lldiv@quotient+1)& (0+255),b
 10433  014D1E  0E00               	movlw	0
 10434  014D20  6F78               	movwf	(___lldiv@quotient+2)& (0+255),b
 10435  014D22  0E00               	movlw	0
 10436  014D24  6F79               	movwf	(___lldiv@quotient+3)& (0+255),b
 10437                           
 10438                           ; BSR set to: 0
 10439  014D26  0100               	movlb	0	; () banked
 10440  014D28  5172               	movf	___lldiv@divisor& (0+255),w,b
 10441  014D2A  0100               	movlb	0	; () banked
 10442  014D2C  1173               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10443  014D2E  0100               	movlb	0	; () banked
 10444  014D30  1174               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10445  014D32  0100               	movlb	0	; () banked
 10446  014D34  1175               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10447  014D36  B4D8               	btfsc	status,2,c
 10448  014D38  D042               	goto	l1305
 10449                           
 10450                           ; BSR set to: 0
 10451  014D3A  0E01               	movlw	1
 10452  014D3C  0100               	movlb	0	; () banked
 10453  014D3E  6F7A               	movwf	___lldiv@counter& (0+255),b
 10454  014D40  D008               	goto	l7699
 10455  014D42                     l7697:
 10456                           
 10457                           ; BSR set to: 0
 10458  014D42  0100               	movlb	0	; () banked
 10459  014D44  90D8               	bcf	status,0,c
 10460  014D46  3772               	rlcf	___lldiv@divisor& (0+255),f,b
 10461  014D48  3773               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10462  014D4A  3774               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10463  014D4C  3775               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10464  014D4E  0100               	movlb	0	; () banked
 10465  014D50  2B7A               	incf	___lldiv@counter& (0+255),f,b
 10466  014D52                     l7699:
 10467                           
 10468                           ; BSR set to: 0
 10469  014D52  0100               	movlb	0	; () banked
 10470  014D54  AF75               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10471  014D56  D7F5               	goto	l7697
 10472  014D58                     l7701:
 10473                           
 10474                           ; BSR set to: 0
 10475  014D58  0100               	movlb	0	; () banked
 10476  014D5A  90D8               	bcf	status,0,c
 10477  014D5C  3776               	rlcf	___lldiv@quotient& (0+255),f,b
 10478  014D5E  3777               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10479  014D60  3778               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10480  014D62  3779               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10481                           
 10482                           ; BSR set to: 0
 10483  014D64  0100               	movlb	0	; () banked
 10484  014D66  5172               	movf	___lldiv@divisor& (0+255),w,b
 10485  014D68  0100               	movlb	0	; () banked
 10486  014D6A  5D6E               	subwf	___lldiv@dividend& (0+255),w,b
 10487  014D6C  0100               	movlb	0	; () banked
 10488  014D6E  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10489  014D70  0100               	movlb	0	; () banked
 10490  014D72  596F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10491  014D74  0100               	movlb	0	; () banked
 10492  014D76  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10493  014D78  0100               	movlb	0	; () banked
 10494  014D7A  5970               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10495  014D7C  0100               	movlb	0	; () banked
 10496  014D7E  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10497  014D80  0100               	movlb	0	; () banked
 10498  014D82  5971               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10499  014D84  A0D8               	btfss	status,0,c
 10500  014D86  D012               	goto	l7709
 10501                           
 10502                           ; BSR set to: 0
 10503  014D88  0100               	movlb	0	; () banked
 10504  014D8A  5172               	movf	___lldiv@divisor& (0+255),w,b
 10505  014D8C  0100               	movlb	0	; () banked
 10506  014D8E  5F6E               	subwf	___lldiv@dividend& (0+255),f,b
 10507  014D90  0100               	movlb	0	; () banked
 10508  014D92  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10509  014D94  0100               	movlb	0	; () banked
 10510  014D96  5B6F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10511  014D98  0100               	movlb	0	; () banked
 10512  014D9A  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10513  014D9C  0100               	movlb	0	; () banked
 10514  014D9E  5B70               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10515  014DA0  0100               	movlb	0	; () banked
 10516  014DA2  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10517  014DA4  0100               	movlb	0	; () banked
 10518  014DA6  5B71               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 0
 10521  014DA8  0100               	movlb	0	; () banked
 10522  014DAA  8176               	bsf	___lldiv@quotient& (0+255),0,b
 10523  014DAC                     l7709:
 10524                           
 10525                           ; BSR set to: 0
 10526  014DAC  0100               	movlb	0	; () banked
 10527  014DAE  90D8               	bcf	status,0,c
 10528  014DB0  3375               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10529  014DB2  3374               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10530  014DB4  3373               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10531  014DB6  3372               	rrcf	___lldiv@divisor& (0+255),f,b
 10532                           
 10533                           ; BSR set to: 0
 10534  014DB8  0100               	movlb	0	; () banked
 10535  014DBA  2F7A               	decfsz	___lldiv@counter& (0+255),f,b
 10536  014DBC  D7CD               	goto	l7701
 10537  014DBE                     l1305:
 10538                           
 10539                           ; BSR set to: 0
 10540  014DBE  C076  F06E         	movff	___lldiv@quotient,?___lldiv
 10541  014DC2  C077  F06F         	movff	___lldiv@quotient+1,?___lldiv+1
 10542  014DC6  C078  F070         	movff	___lldiv@quotient+2,?___lldiv+2
 10543  014DCA  C079  F071         	movff	___lldiv@quotient+3,?___lldiv+3
 10544                           
 10545                           ; BSR set to: 0
 10546  014DCE  0012               	return		;funcret
 10547  014DD0                     __end_of___lldiv:
 10548                           	opt stack 0
 10549                           tblptru	equ	0xFF8
 10550                           tblptrh	equ	0xFF7
 10551                           tblptrl	equ	0xFF6
 10552                           tablat	equ	0xFF5
 10553                           prodh	equ	0xFF4
 10554                           prodl	equ	0xFF3
 10555                           intcon	equ	0xFF2
 10556                           postinc0	equ	0xFEE
 10557                           wreg	equ	0xFE8
 10558                           indf2	equ	0xFDF
 10559                           postinc2	equ	0xFDE
 10560                           fsr2h	equ	0xFDA
 10561                           fsr2l	equ	0xFD9
 10562                           status	equ	0xFD8
 10563                           
 10564 ;; *************** function ___fltol *****************
 10565 ;; Defined at:
 10566 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  f1              4   62[BANK0 ] unsigned long 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  exp1            1   71[BANK0 ] unsigned char 
 10571 ;;  sign1           1   70[BANK0 ] unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  4   62[BANK0 ] long 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;Total ram usage:       10 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    3
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_main
 10592 ;;		_sprintf
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text23
 10597  0148B6                     __ptext23:
 10598                           	opt stack 0
 10599  0148B6                     ___fltol:
 10600                           	opt stack 27
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;incstack = 0
 10604  0148B6  0100               	movlb	0	; () banked
 10605  0148B8  35A0               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10606  0148BA  35A1               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10607  0148BC  0100               	movlb	0	; () banked
 10608  0148BE  6FA7               	movwf	___fltol@exp1& (0+255),b
 10609  0148C0  0100               	movlb	0	; () banked
 10610  0148C2  51A7               	movf	___fltol@exp1& (0+255),w,b
 10611  0148C4  A4D8               	btfss	status,2,c
 10612  0148C6  D00A               	goto	l7653
 10613                           
 10614                           ; BSR set to: 0
 10615  0148C8  0E00               	movlw	0
 10616  0148CA  0100               	movlb	0	; () banked
 10617  0148CC  6F9E               	movwf	?___fltol& (0+255),b
 10618  0148CE  0E00               	movlw	0
 10619  0148D0  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10620  0148D2  0E00               	movlw	0
 10621  0148D4  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10622  0148D6  0E00               	movlw	0
 10623  0148D8  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10624                           
 10625                           ; BSR set to: 0
 10626  0148DA  0012               	return	
 10627  0148DC                     l7653:
 10628                           
 10629                           ; BSR set to: 0
 10630  0148DC  C09E  F0A2         	movff	___fltol@f1,??___fltol
 10631  0148E0  C09F  F0A3         	movff	___fltol@f1+1,??___fltol+1
 10632  0148E4  C0A0  F0A4         	movff	___fltol@f1+2,??___fltol+2
 10633  0148E8  C0A1  F0A5         	movff	___fltol@f1+3,??___fltol+3
 10634  0148EC  0E20               	movlw	32
 10635  0148EE  D006               	goto	u10190
 10636  0148F0                     u10195:
 10637  0148F0  0100               	movlb	0	; () banked
 10638  0148F2  90D8               	bcf	status,0,c
 10639  0148F4  33A5               	rrcf	(??___fltol+3)& (0+255),f,b
 10640  0148F6  33A4               	rrcf	(??___fltol+2)& (0+255),f,b
 10641  0148F8  33A3               	rrcf	(??___fltol+1)& (0+255),f,b
 10642  0148FA  33A2               	rrcf	??___fltol& (0+255),f,b
 10643  0148FC                     u10190:
 10644  0148FC  2EE8               	decfsz	wreg,f,c
 10645  0148FE  D7F8               	goto	u10195
 10646  014900  0100               	movlb	0	; () banked
 10647  014902  51A2               	movf	??___fltol& (0+255),w,b
 10648  014904  0100               	movlb	0	; () banked
 10649  014906  6FA6               	movwf	___fltol@sign1& (0+255),b
 10650                           
 10651                           ; BSR set to: 0
 10652  014908  0100               	movlb	0	; () banked
 10653  01490A  8FA0               	bsf	(___fltol@f1+2)& (0+255),7,b
 10654                           
 10655                           ; BSR set to: 0
 10656  01490C  0EFF               	movlw	255
 10657  01490E  0100               	movlb	0	; () banked
 10658  014910  179E               	andwf	___fltol@f1& (0+255),f,b
 10659  014912  0EFF               	movlw	255
 10660  014914  179F               	andwf	(___fltol@f1+1)& (0+255),f,b
 10661  014916  0EFF               	movlw	255
 10662  014918  17A0               	andwf	(___fltol@f1+2)& (0+255),f,b
 10663  01491A  0E00               	movlw	0
 10664  01491C  17A1               	andwf	(___fltol@f1+3)& (0+255),f,b
 10665                           
 10666                           ; BSR set to: 0
 10667  01491E  0E96               	movlw	150
 10668  014920  0100               	movlb	0	; () banked
 10669  014922  5FA7               	subwf	___fltol@exp1& (0+255),f,b
 10670                           
 10671                           ; BSR set to: 0
 10672  014924  0100               	movlb	0	; () banked
 10673  014926  AFA7               	btfss	___fltol@exp1& (0+255),7,b
 10674  014928  D01A               	goto	l7673
 10675                           
 10676                           ; BSR set to: 0
 10677  01492A  0100               	movlb	0	; () banked
 10678  01492C  51A7               	movf	___fltol@exp1& (0+255),w,b
 10679  01492E  0A80               	xorlw	128
 10680  014930  0F97               	addlw	151
 10681  014932  B0D8               	btfsc	status,0,c
 10682  014934  D00A               	goto	l7669
 10683                           
 10684                           ; BSR set to: 0
 10685  014936  0E00               	movlw	0
 10686  014938  0100               	movlb	0	; () banked
 10687  01493A  6F9E               	movwf	?___fltol& (0+255),b
 10688  01493C  0E00               	movlw	0
 10689  01493E  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10690  014940  0E00               	movlw	0
 10691  014942  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10692  014944  0E00               	movlw	0
 10693  014946  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10694                           
 10695                           ; BSR set to: 0
 10696  014948  0012               	return	
 10697  01494A                     l7669:
 10698                           
 10699                           ; BSR set to: 0
 10700  01494A  0100               	movlb	0	; () banked
 10701  01494C  90D8               	bcf	status,0,c
 10702  01494E  33A1               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10703  014950  33A0               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10704  014952  339F               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10705  014954  339E               	rrcf	___fltol@f1& (0+255),f,b
 10706                           
 10707                           ; BSR set to: 0
 10708  014956  0100               	movlb	0	; () banked
 10709  014958  3FA7               	incfsz	___fltol@exp1& (0+255),f,b
 10710  01495A  D7F7               	goto	l7669
 10711                           
 10712                           ; BSR set to: 0
 10713  01495C  D01B               	goto	l7683
 10714  01495E                     l7673:
 10715                           
 10716                           ; BSR set to: 0
 10717  01495E  0E1F               	movlw	31
 10718  014960  0100               	movlb	0	; () banked
 10719  014962  65A7               	cpfsgt	___fltol@exp1& (0+255),b
 10720  014964  D012               	goto	l7681
 10721                           
 10722                           ; BSR set to: 0
 10723  014966  0E00               	movlw	0
 10724  014968  0100               	movlb	0	; () banked
 10725  01496A  6F9E               	movwf	?___fltol& (0+255),b
 10726  01496C  0E00               	movlw	0
 10727  01496E  6F9F               	movwf	(?___fltol+1)& (0+255),b
 10728  014970  0E00               	movlw	0
 10729  014972  6FA0               	movwf	(?___fltol+2)& (0+255),b
 10730  014974  0E00               	movlw	0
 10731  014976  6FA1               	movwf	(?___fltol+3)& (0+255),b
 10732                           
 10733                           ; BSR set to: 0
 10734  014978  0012               	return	
 10735  01497A                     l7679:
 10736                           
 10737                           ; BSR set to: 0
 10738  01497A  0100               	movlb	0	; () banked
 10739  01497C  90D8               	bcf	status,0,c
 10740  01497E  379E               	rlcf	___fltol@f1& (0+255),f,b
 10741  014980  379F               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10742  014982  37A0               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10743  014984  37A1               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10744  014986  0100               	movlb	0	; () banked
 10745  014988  07A7               	decf	___fltol@exp1& (0+255),f,b
 10746  01498A                     l7681:
 10747                           
 10748                           ; BSR set to: 0
 10749  01498A  0100               	movlb	0	; () banked
 10750  01498C  51A7               	movf	___fltol@exp1& (0+255),w,b
 10751  01498E  0100               	movlb	0	; () banked
 10752  014990  A4D8               	btfss	status,2,c
 10753  014992  D7F3               	goto	l7679
 10754  014994                     l7683:
 10755                           
 10756                           ; BSR set to: 0
 10757  014994  0100               	movlb	0	; () banked
 10758  014996  51A6               	movf	___fltol@sign1& (0+255),w,b
 10759  014998  0100               	movlb	0	; () banked
 10760  01499A  B4D8               	btfsc	status,2,c
 10761  01499C  D009               	goto	l7687
 10762                           
 10763                           ; BSR set to: 0
 10764  01499E  0100               	movlb	0	; () banked
 10765  0149A0  1FA1               	comf	(___fltol@f1+3)& (0+255),f,b
 10766  0149A2  1FA0               	comf	(___fltol@f1+2)& (0+255),f,b
 10767  0149A4  1F9F               	comf	(___fltol@f1+1)& (0+255),f,b
 10768  0149A6  6D9E               	negf	___fltol@f1& (0+255),b
 10769  0149A8  0E00               	movlw	0
 10770  0149AA  239F               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10771  0149AC  23A0               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10772  0149AE  23A1               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10773  0149B0                     l7687:
 10774                           
 10775                           ; BSR set to: 0
 10776  0149B0  C09E  F09E         	movff	___fltol@f1,?___fltol
 10777  0149B4  C09F  F09F         	movff	___fltol@f1+1,?___fltol+1
 10778  0149B8  C0A0  F0A0         	movff	___fltol@f1+2,?___fltol+2
 10779  0149BC  C0A1  F0A1         	movff	___fltol@f1+3,?___fltol+3
 10780  0149C0  0012               	return	
 10781  0149C2                     __end_of___fltol:
 10782                           	opt stack 0
 10783                           tblptru	equ	0xFF8
 10784                           tblptrh	equ	0xFF7
 10785                           tblptrl	equ	0xFF6
 10786                           tablat	equ	0xFF5
 10787                           prodh	equ	0xFF4
 10788                           prodl	equ	0xFF3
 10789                           intcon	equ	0xFF2
 10790                           postinc0	equ	0xFEE
 10791                           wreg	equ	0xFE8
 10792                           indf2	equ	0xFDF
 10793                           postinc2	equ	0xFDE
 10794                           fsr2h	equ	0xFDA
 10795                           fsr2l	equ	0xFD9
 10796                           status	equ	0xFD8
 10797                           
 10798 ;; *************** function ___flsub *****************
 10799 ;; Defined at:
 10800 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  b               4   86[BANK0 ] long 
 10803 ;;  a               4   90[BANK0 ] long 
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;		None
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  4   86[BANK0 ] long 
 10808 ;; Registers used:
 10809 ;;		wreg, status,2, status,0, cstack
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10815 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;Total ram usage:        8 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:    4
 10822 ;; This function calls:
 10823 ;;		___fladd
 10824 ;; This function is called by:
 10825 ;;		_sprintf
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           	psect	text24
 10830  0150B0                     __ptext24:
 10831                           	opt stack 0
 10832  0150B0                     ___flsub:
 10833                           	opt stack 24
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;incstack = 0
 10837  0150B0  0E00               	movlw	0
 10838  0150B2  0100               	movlb	0	; () banked
 10839  0150B4  1BBA               	xorwf	___flsub@a& (0+255),f,b
 10840  0150B6  0E00               	movlw	0
 10841  0150B8  1BBB               	xorwf	(___flsub@a+1)& (0+255),f,b
 10842  0150BA  0E00               	movlw	0
 10843  0150BC  1BBC               	xorwf	(___flsub@a+2)& (0+255),f,b
 10844  0150BE  0E80               	movlw	128
 10845  0150C0  1BBD               	xorwf	(___flsub@a+3)& (0+255),f,b
 10846                           
 10847                           ; BSR set to: 0
 10848  0150C2  C0B6  F0A2         	movff	___flsub@b,___fladd@b
 10849  0150C6  C0B7  F0A3         	movff	___flsub@b+1,___fladd@b+1
 10850  0150CA  C0B8  F0A4         	movff	___flsub@b+2,___fladd@b+2
 10851  0150CE  C0B9  F0A5         	movff	___flsub@b+3,___fladd@b+3
 10852  0150D2  C0BA  F0A6         	movff	___flsub@a,___fladd@a
 10853  0150D6  C0BB  F0A7         	movff	___flsub@a+1,___fladd@a+1
 10854  0150DA  C0BC  F0A8         	movff	___flsub@a+2,___fladd@a+2
 10855  0150DE  C0BD  F0A9         	movff	___flsub@a+3,___fladd@a+3
 10856  0150E2  ECA6  F092         	call	___fladd	;wreg free
 10857  0150E6  C0A2  F0B6         	movff	?___fladd,?___flsub
 10858  0150EA  C0A3  F0B7         	movff	?___fladd+1,?___flsub+1
 10859  0150EE  C0A4  F0B8         	movff	?___fladd+2,?___flsub+2
 10860  0150F2  C0A5  F0B9         	movff	?___fladd+3,?___flsub+3
 10861  0150F6  0012               	return	
 10862  0150F8                     __end_of___flsub:
 10863                           	opt stack 0
 10864                           tblptru	equ	0xFF8
 10865                           tblptrh	equ	0xFF7
 10866                           tblptrl	equ	0xFF6
 10867                           tablat	equ	0xFF5
 10868                           prodh	equ	0xFF4
 10869                           prodl	equ	0xFF3
 10870                           intcon	equ	0xFF2
 10871                           postinc0	equ	0xFEE
 10872                           wreg	equ	0xFE8
 10873                           indf2	equ	0xFDF
 10874                           postinc2	equ	0xFDE
 10875                           fsr2h	equ	0xFDA
 10876                           fsr2l	equ	0xFD9
 10877                           status	equ	0xFD8
 10878                           
 10879 ;; *************** function ___fladd *****************
 10880 ;; Defined at:
 10881 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;  b               4   66[BANK0 ] long 
 10884 ;;  a               4   70[BANK0 ] long 
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;  grs             1   85[BANK0 ] unsigned char 
 10887 ;;  bexp            1   84[BANK0 ] unsigned char 
 10888 ;;  aexp            1   83[BANK0 ] unsigned char 
 10889 ;;  signs           1   82[BANK0 ] unsigned char 
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  4   66[BANK0 ] unsigned char 
 10892 ;; Registers used:
 10893 ;;		wreg, status,2, status,0
 10894 ;; Tracked objects:
 10895 ;;		On entry : 0/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10899 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10900 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;Total ram usage:       20 bytes
 10904 ;; Hardware stack levels used:    1
 10905 ;; Hardware stack levels required when called:    3
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		_sprintf
 10910 ;;		___flsub
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text25
 10915  01254C                     __ptext25:
 10916                           	opt stack 0
 10917  01254C                     ___fladd:
 10918                           	opt stack 24
 10919                           
 10920                           ;incstack = 0
 10921  01254C  0100               	movlb	0	; () banked
 10922  01254E  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10923  012550  0B80               	andlw	128
 10924  012552  0100               	movlb	0	; () banked
 10925  012554  6FB2               	movwf	___fladd@signs& (0+255),b
 10926  012556  0100               	movlb	0	; () banked
 10927  012558  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 10928  01255A  25A5               	addwf	(___fladd@b+3)& (0+255),w,b
 10929  01255C  0100               	movlb	0	; () banked
 10930  01255E  6FB4               	movwf	___fladd@bexp& (0+255),b
 10931                           
 10932                           ; BSR set to: 0
 10933  012560  0100               	movlb	0	; () banked
 10934  012562  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 10935  012564  D002               	goto	l6581
 10936                           
 10937                           ; BSR set to: 0
 10938  012566  0100               	movlb	0	; () banked
 10939  012568  81B4               	bsf	___fladd@bexp& (0+255),0,b
 10940  01256A                     l6581:
 10941                           
 10942                           ; BSR set to: 0
 10943  01256A  0100               	movlb	0	; () banked
 10944  01256C  51B4               	movf	___fladd@bexp& (0+255),w,b
 10945  01256E  0100               	movlb	0	; () banked
 10946  012570  B4D8               	btfsc	status,2,c
 10947  012572  D012               	goto	l6591
 10948                           
 10949                           ; BSR set to: 0
 10950  012574  0100               	movlb	0	; () banked
 10951  012576  29B4               	incf	___fladd@bexp& (0+255),w,b
 10952  012578  A4D8               	btfss	status,2,c
 10953  01257A  D009               	goto	l6587
 10954                           
 10955                           ; BSR set to: 0
 10956  01257C  0E00               	movlw	0
 10957  01257E  0100               	movlb	0	; () banked
 10958  012580  6FA2               	movwf	___fladd@b& (0+255),b
 10959  012582  0E00               	movlw	0
 10960  012584  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 10961  012586  0E00               	movlw	0
 10962  012588  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 10963  01258A  0E00               	movlw	0
 10964  01258C  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 10965  01258E                     l6587:
 10966                           
 10967                           ; BSR set to: 0
 10968  01258E  0100               	movlb	0	; () banked
 10969  012590  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 10970                           
 10971                           ; BSR set to: 0
 10972  012592  0E00               	movlw	0
 10973  012594  0100               	movlb	0	; () banked
 10974  012596  D008               	goto	L9
 10975  012598                     l6591:
 10976                           
 10977                           ; BSR set to: 0
 10978  012598  0E00               	movlw	0
 10979  01259A  0100               	movlb	0	; () banked
 10980  01259C  6FA2               	movwf	___fladd@b& (0+255),b
 10981  01259E  0E00               	movlw	0
 10982  0125A0  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 10983  0125A2  0E00               	movlw	0
 10984  0125A4  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 10985  0125A6  0E00               	movlw	0
 10986  0125A8                     L9:
 10987  0125A8  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 10988                           
 10989                           ; BSR set to: 0
 10990                           
 10991                           ; BSR set to: 0
 10992  0125AA  0100               	movlb	0	; () banked
 10993  0125AC  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 10994  0125AE  0B80               	andlw	128
 10995  0125B0  0100               	movlb	0	; () banked
 10996  0125B2  6FB3               	movwf	___fladd@aexp& (0+255),b
 10997                           
 10998                           ; BSR set to: 0
 10999  0125B4  0100               	movlb	0	; () banked
 11000  0125B6  51B2               	movf	___fladd@signs& (0+255),w,b
 11001  0125B8  0100               	movlb	0	; () banked
 11002  0125BA  19B3               	xorwf	___fladd@aexp& (0+255),w,b
 11003  0125BC  B4D8               	btfsc	status,2,c
 11004  0125BE  D002               	goto	l6599
 11005                           
 11006                           ; BSR set to: 0
 11007  0125C0  0100               	movlb	0	; () banked
 11008  0125C2  8DB2               	bsf	___fladd@signs& (0+255),6,b
 11009  0125C4                     l6599:
 11010                           
 11011                           ; BSR set to: 0
 11012  0125C4  0100               	movlb	0	; () banked
 11013  0125C6  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11014  0125C8  25A9               	addwf	(___fladd@a+3)& (0+255),w,b
 11015  0125CA  0100               	movlb	0	; () banked
 11016  0125CC  6FB3               	movwf	___fladd@aexp& (0+255),b
 11017                           
 11018                           ; BSR set to: 0
 11019  0125CE  0100               	movlb	0	; () banked
 11020  0125D0  AFA8               	btfss	(___fladd@a+2)& (0+255),7,b
 11021  0125D2  D002               	goto	l6605
 11022                           
 11023                           ; BSR set to: 0
 11024  0125D4  0100               	movlb	0	; () banked
 11025  0125D6  81B3               	bsf	___fladd@aexp& (0+255),0,b
 11026  0125D8                     l6605:
 11027                           
 11028                           ; BSR set to: 0
 11029  0125D8  0100               	movlb	0	; () banked
 11030  0125DA  51B3               	movf	___fladd@aexp& (0+255),w,b
 11031  0125DC  0100               	movlb	0	; () banked
 11032  0125DE  B4D8               	btfsc	status,2,c
 11033  0125E0  D012               	goto	l6615
 11034                           
 11035                           ; BSR set to: 0
 11036  0125E2  0100               	movlb	0	; () banked
 11037  0125E4  29B3               	incf	___fladd@aexp& (0+255),w,b
 11038  0125E6  A4D8               	btfss	status,2,c
 11039  0125E8  D009               	goto	l6611
 11040                           
 11041                           ; BSR set to: 0
 11042  0125EA  0E00               	movlw	0
 11043  0125EC  0100               	movlb	0	; () banked
 11044  0125EE  6FA6               	movwf	___fladd@a& (0+255),b
 11045  0125F0  0E00               	movlw	0
 11046  0125F2  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11047  0125F4  0E00               	movlw	0
 11048  0125F6  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11049  0125F8  0E00               	movlw	0
 11050  0125FA  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11051  0125FC                     l6611:
 11052                           
 11053                           ; BSR set to: 0
 11054  0125FC  0100               	movlb	0	; () banked
 11055  0125FE  8FA8               	bsf	(___fladd@a+2)& (0+255),7,b
 11056                           
 11057                           ; BSR set to: 0
 11058  012600  0E00               	movlw	0
 11059  012602  0100               	movlb	0	; () banked
 11060  012604  D008               	goto	L10
 11061  012606                     l6615:
 11062                           
 11063                           ; BSR set to: 0
 11064  012606  0E00               	movlw	0
 11065  012608  0100               	movlb	0	; () banked
 11066  01260A  6FA6               	movwf	___fladd@a& (0+255),b
 11067  01260C  0E00               	movlw	0
 11068  01260E  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11069  012610  0E00               	movlw	0
 11070  012612  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11071  012614  0E00               	movlw	0
 11072  012616                     L10:
 11073  012616  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11074                           
 11075                           ; BSR set to: 0
 11076                           
 11077                           ; BSR set to: 0
 11078  012618  0100               	movlb	0	; () banked
 11079  01261A  51B4               	movf	___fladd@bexp& (0+255),w,b
 11080  01261C  0100               	movlb	0	; () banked
 11081  01261E  5DB3               	subwf	___fladd@aexp& (0+255),w,b
 11082  012620  B0D8               	btfsc	status,0,c
 11083  012622  D024               	goto	l6653
 11084                           
 11085                           ; BSR set to: 0
 11086  012624  0100               	movlb	0	; () banked
 11087  012626  ADB2               	btfss	___fladd@signs& (0+255),6,b
 11088  012628  D003               	goto	l6623
 11089                           
 11090                           ; BSR set to: 0
 11091  01262A  0E80               	movlw	128
 11092  01262C  0100               	movlb	0	; () banked
 11093  01262E  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11094  012630                     l6623:
 11095                           
 11096                           ; BSR set to: 0
 11097  012630  C0B4  F0B5         	movff	___fladd@bexp,___fladd@grs
 11098                           
 11099                           ; BSR set to: 0
 11100  012634  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11101                           
 11102                           ; BSR set to: 0
 11103  012638  C0B5  F0B3         	movff	___fladd@grs,___fladd@aexp
 11104                           
 11105                           ; BSR set to: 0
 11106  01263C  C0A2  F0B5         	movff	___fladd@b,___fladd@grs
 11107                           
 11108                           ; BSR set to: 0
 11109  012640  C0A6  F0A2         	movff	___fladd@a,___fladd@b
 11110                           
 11111                           ; BSR set to: 0
 11112  012644  C0B5  F0A6         	movff	___fladd@grs,___fladd@a
 11113                           
 11114                           ; BSR set to: 0
 11115  012648  C0A3  F0B5         	movff	___fladd@b+1,___fladd@grs
 11116                           
 11117                           ; BSR set to: 0
 11118  01264C  C0A7  F0A3         	movff	___fladd@a+1,___fladd@b+1
 11119                           
 11120                           ; BSR set to: 0
 11121  012650  C0B5  F0A7         	movff	___fladd@grs,___fladd@a+1
 11122                           
 11123                           ; BSR set to: 0
 11124  012654  C0A4  F0B5         	movff	___fladd@b+2,___fladd@grs
 11125                           
 11126                           ; BSR set to: 0
 11127  012658  C0A8  F0A4         	movff	___fladd@a+2,___fladd@b+2
 11128                           
 11129                           ; BSR set to: 0
 11130  01265C  C0B5  F0A8         	movff	___fladd@grs,___fladd@a+2
 11131                           
 11132                           ; BSR set to: 0
 11133  012660  C0A5  F0B5         	movff	___fladd@b+3,___fladd@grs
 11134                           
 11135                           ; BSR set to: 0
 11136  012664  C0A9  F0A5         	movff	___fladd@a+3,___fladd@b+3
 11137                           
 11138                           ; BSR set to: 0
 11139  012668  C0B5  F0A9         	movff	___fladd@grs,___fladd@a+3
 11140  01266C                     l6653:
 11141                           
 11142                           ; BSR set to: 0
 11143  01266C  0E00               	movlw	0
 11144  01266E  0100               	movlb	0	; () banked
 11145  012670  6FB5               	movwf	___fladd@grs& (0+255),b
 11146                           
 11147                           ; BSR set to: 0
 11148  012672  0100               	movlb	0	; () banked
 11149  012674  51B4               	movf	___fladd@bexp& (0+255),w,b
 11150  012676  0100               	movlb	0	; () banked
 11151  012678  6FAA               	movwf	??___fladd& (0+255),b
 11152  01267A  6BAB               	clrf	(??___fladd+1)& (0+255),b
 11153  01267C  0100               	movlb	0	; () banked
 11154  01267E  1FAA               	comf	??___fladd& (0+255),f,b
 11155  012680  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11156  012682  4BAA               	infsnz	??___fladd& (0+255),f,b
 11157  012684  2BAB               	incf	(??___fladd+1)& (0+255),f,b
 11158  012686  0100               	movlb	0	; () banked
 11159  012688  51B3               	movf	___fladd@aexp& (0+255),w,b
 11160  01268A  0100               	movlb	0	; () banked
 11161  01268C  6FAC               	movwf	(??___fladd+2)& (0+255),b
 11162  01268E  6BAD               	clrf	(??___fladd+3)& (0+255),b
 11163  012690  0100               	movlb	0	; () banked
 11164  012692  51AA               	movf	??___fladd& (0+255),w,b
 11165  012694  0100               	movlb	0	; () banked
 11166  012696  27AC               	addwf	(??___fladd+2)& (0+255),f,b
 11167  012698  0100               	movlb	0	; () banked
 11168  01269A  51AB               	movf	(??___fladd+1)& (0+255),w,b
 11169  01269C  0100               	movlb	0	; () banked
 11170  01269E  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11171  0126A0  0100               	movlb	0	; () banked
 11172  0126A2  BFAD               	btfsc	(??___fladd+3)& (0+255),7,b
 11173  0126A4  D03D               	goto	l1400
 11174  0126A6  0100               	movlb	0	; () banked
 11175  0126A8  51AD               	movf	(??___fladd+3)& (0+255),w,b
 11176  0126AA  E105               	bnz	u8290
 11177  0126AC  0E1A               	movlw	26
 11178  0126AE  0100               	movlb	0	; () banked
 11179  0126B0  5DAC               	subwf	(??___fladd+2)& (0+255),w,b
 11180  0126B2  A0D8               	btfss	status,0,c
 11181  0126B4  D035               	goto	l1400
 11182  0126B6                     u8290:
 11183                           
 11184                           ; BSR set to: 0
 11185  0126B6  0100               	movlb	0	; () banked
 11186  0126B8  51A2               	movf	___fladd@b& (0+255),w,b
 11187  0126BA  0100               	movlb	0	; () banked
 11188  0126BC  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11189  0126BE  0100               	movlb	0	; () banked
 11190  0126C0  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11191  0126C2  0100               	movlb	0	; () banked
 11192  0126C4  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11193  0126C6  B4D8               	btfsc	status,2,c
 11194  0126C8  D002               	goto	u8300
 11195  0126CA  0E01               	movlw	1
 11196  0126CC  D001               	goto	u8310
 11197  0126CE                     u8300:
 11198  0126CE  0E00               	movlw	0
 11199  0126D0                     u8310:
 11200  0126D0  0100               	movlb	0	; () banked
 11201  0126D2  6FB5               	movwf	___fladd@grs& (0+255),b
 11202                           
 11203                           ; BSR set to: 0
 11204  0126D4  0E00               	movlw	0
 11205  0126D6  0100               	movlb	0	; () banked
 11206  0126D8  6FA2               	movwf	___fladd@b& (0+255),b
 11207  0126DA  0E00               	movlw	0
 11208  0126DC  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11209  0126DE  0E00               	movlw	0
 11210  0126E0  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11211  0126E2  0E00               	movlw	0
 11212  0126E4  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11213                           
 11214                           ; BSR set to: 0
 11215  0126E6  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11216  0126EA  D020               	goto	l1399
 11217  0126EC                     l1401:
 11218                           
 11219                           ; BSR set to: 0
 11220  0126EC  0100               	movlb	0	; () banked
 11221  0126EE  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11222  0126F0  D007               	goto	l6665
 11223                           
 11224                           ; BSR set to: 0
 11225  0126F2  0100               	movlb	0	; () banked
 11226  0126F4  90D8               	bcf	status,0,c
 11227  0126F6  31B5               	rrcf	___fladd@grs& (0+255),w,b
 11228  0126F8  0901               	iorlw	1
 11229  0126FA  0100               	movlb	0	; () banked
 11230  0126FC  6FB5               	movwf	___fladd@grs& (0+255),b
 11231  0126FE  D003               	goto	l6667
 11232  012700                     l6665:
 11233                           
 11234                           ; BSR set to: 0
 11235  012700  0100               	movlb	0	; () banked
 11236  012702  90D8               	bcf	status,0,c
 11237  012704  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11238  012706                     l6667:
 11239                           
 11240                           ; BSR set to: 0
 11241  012706  0100               	movlb	0	; () banked
 11242  012708  A1A2               	btfss	___fladd@b& (0+255),0,b
 11243  01270A  D002               	goto	l6671
 11244                           
 11245                           ; BSR set to: 0
 11246  01270C  0100               	movlb	0	; () banked
 11247  01270E  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11248  012710                     l6671:
 11249                           
 11250                           ; BSR set to: 0
 11251  012710  0100               	movlb	0	; () banked
 11252  012712  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11253  012714  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11254  012716  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11255  012718  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11256  01271A  33A2               	rrcf	___fladd@b& (0+255),f,b
 11257                           
 11258                           ; BSR set to: 0
 11259  01271C  0100               	movlb	0	; () banked
 11260  01271E  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11261  012720                     l1400:
 11262                           
 11263                           ; BSR set to: 0
 11264  012720  0100               	movlb	0	; () banked
 11265  012722  51B3               	movf	___fladd@aexp& (0+255),w,b
 11266  012724  0100               	movlb	0	; () banked
 11267  012726  5DB4               	subwf	___fladd@bexp& (0+255),w,b
 11268  012728  A0D8               	btfss	status,0,c
 11269  01272A  D7E0               	goto	l1401
 11270  01272C                     l1399:
 11271                           
 11272                           ; BSR set to: 0
 11273  01272C  0100               	movlb	0	; () banked
 11274  01272E  BDB2               	btfsc	___fladd@signs& (0+255),6,b
 11275  012730  D03F               	goto	l6699
 11276                           
 11277                           ; BSR set to: 0
 11278  012732  0100               	movlb	0	; () banked
 11279  012734  51B4               	movf	___fladd@bexp& (0+255),w,b
 11280  012736  0100               	movlb	0	; () banked
 11281  012738  A4D8               	btfss	status,2,c
 11282  01273A  D00A               	goto	l6681
 11283                           
 11284                           ; BSR set to: 0
 11285  01273C  0E00               	movlw	0
 11286  01273E  0100               	movlb	0	; () banked
 11287  012740  6FA2               	movwf	?___fladd& (0+255),b
 11288  012742  0E00               	movlw	0
 11289  012744  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11290  012746  0E00               	movlw	0
 11291  012748  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11292  01274A  0E00               	movlw	0
 11293  01274C  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11294                           
 11295                           ; BSR set to: 0
 11296  01274E  0012               	return	
 11297  012750                     l6681:
 11298                           
 11299                           ; BSR set to: 0
 11300  012750  0100               	movlb	0	; () banked
 11301  012752  51A6               	movf	___fladd@a& (0+255),w,b
 11302  012754  0100               	movlb	0	; () banked
 11303  012756  27A2               	addwf	___fladd@b& (0+255),f,b
 11304  012758  0100               	movlb	0	; () banked
 11305  01275A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11306  01275C  0100               	movlb	0	; () banked
 11307  01275E  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11308  012760  0100               	movlb	0	; () banked
 11309  012762  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11310  012764  0100               	movlb	0	; () banked
 11311  012766  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11312  012768  0100               	movlb	0	; () banked
 11313  01276A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11314  01276C  0100               	movlb	0	; () banked
 11315  01276E  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11316                           
 11317                           ; BSR set to: 0
 11318  012770  0100               	movlb	0	; () banked
 11319  012772  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11320  012774  D0CC               	goto	l6735
 11321                           
 11322                           ; BSR set to: 0
 11323  012776  0100               	movlb	0	; () banked
 11324  012778  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11325  01277A  D009               	goto	l6689
 11326                           
 11327                           ; BSR set to: 0
 11328  01277C  0100               	movlb	0	; () banked
 11329  01277E  90D8               	bcf	status,0,c
 11330  012780  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11331  012782  0100               	movlb	0	; () banked
 11332  012784  51B5               	movf	___fladd@grs& (0+255),w,b
 11333  012786  0901               	iorlw	1
 11334  012788  0100               	movlb	0	; () banked
 11335  01278A  6FB5               	movwf	___fladd@grs& (0+255),b
 11336  01278C  D003               	goto	l6691
 11337  01278E                     l6689:
 11338                           
 11339                           ; BSR set to: 0
 11340  01278E  0100               	movlb	0	; () banked
 11341  012790  90D8               	bcf	status,0,c
 11342  012792  33B5               	rrcf	___fladd@grs& (0+255),f,b
 11343  012794                     l6691:
 11344                           
 11345                           ; BSR set to: 0
 11346  012794  0100               	movlb	0	; () banked
 11347  012796  A1A2               	btfss	___fladd@b& (0+255),0,b
 11348  012798  D002               	goto	l6695
 11349                           
 11350                           ; BSR set to: 0
 11351  01279A  0100               	movlb	0	; () banked
 11352  01279C  8FB5               	bsf	___fladd@grs& (0+255),7,b
 11353  01279E                     l6695:
 11354                           
 11355                           ; BSR set to: 0
 11356  01279E  0100               	movlb	0	; () banked
 11357  0127A0  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11358  0127A2  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11359  0127A4  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11360  0127A6  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11361  0127A8  33A2               	rrcf	___fladd@b& (0+255),f,b
 11362                           
 11363                           ; BSR set to: 0
 11364  0127AA  0100               	movlb	0	; () banked
 11365  0127AC  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11366                           
 11367                           ; BSR set to: 0
 11368  0127AE  D0AF               	goto	l6735
 11369  0127B0                     l6699:
 11370                           
 11371                           ; BSR set to: 0
 11372  0127B0  0100               	movlb	0	; () banked
 11373  0127B2  51A6               	movf	___fladd@a& (0+255),w,b
 11374  0127B4  0100               	movlb	0	; () banked
 11375  0127B6  5DA2               	subwf	___fladd@b& (0+255),w,b
 11376  0127B8  0100               	movlb	0	; () banked
 11377  0127BA  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11378  0127BC  0100               	movlb	0	; () banked
 11379  0127BE  59A3               	subwfb	(___fladd@b+1)& (0+255),w,b
 11380  0127C0  0100               	movlb	0	; () banked
 11381  0127C2  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11382  0127C4  0100               	movlb	0	; () banked
 11383  0127C6  59A4               	subwfb	(___fladd@b+2)& (0+255),w,b
 11384  0127C8  0100               	movlb	0	; () banked
 11385  0127CA  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 11386  0127CC  0A80               	xorlw	128
 11387  0127CE  0100               	movlb	0	; () banked
 11388  0127D0  6FAA               	movwf	??___fladd& (0+255),b
 11389  0127D2  0100               	movlb	0	; () banked
 11390  0127D4  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11391  0127D6  0A80               	xorlw	128
 11392  0127D8  0100               	movlb	0	; () banked
 11393  0127DA  59AA               	subwfb	??___fladd& (0+255),w,b
 11394  0127DC  B0D8               	btfsc	status,0,c
 11395  0127DE  D050               	goto	l6709
 11396                           
 11397                           ; BSR set to: 0
 11398  0127E0  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11399  0127E4  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11400  0127E8  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11401  0127EC  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11402  0127F0  0100               	movlb	0	; () banked
 11403  0127F2  1FAA               	comf	??___fladd& (0+255),f,b
 11404  0127F4  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11405  0127F6  1FAC               	comf	(??___fladd+2)& (0+255),f,b
 11406  0127F8  1FAD               	comf	(??___fladd+3)& (0+255),f,b
 11407  0127FA  2BAA               	incf	??___fladd& (0+255),f,b
 11408  0127FC  0E00               	movlw	0
 11409  0127FE  23AB               	addwfc	(??___fladd+1)& (0+255),f,b
 11410  012800  23AC               	addwfc	(??___fladd+2)& (0+255),f,b
 11411  012802  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11412  012804  0100               	movlb	0	; () banked
 11413  012806  51A6               	movf	___fladd@a& (0+255),w,b
 11414  012808  0100               	movlb	0	; () banked
 11415  01280A  25AA               	addwf	??___fladd& (0+255),w,b
 11416  01280C  0100               	movlb	0	; () banked
 11417  01280E  6FAE               	movwf	(??___fladd+4)& (0+255),b
 11418  012810  0100               	movlb	0	; () banked
 11419  012812  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11420  012814  0100               	movlb	0	; () banked
 11421  012816  21AB               	addwfc	(??___fladd+1)& (0+255),w,b
 11422  012818  0100               	movlb	0	; () banked
 11423  01281A  6FAF               	movwf	(??___fladd+5)& (0+255),b
 11424  01281C  0100               	movlb	0	; () banked
 11425  01281E  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11426  012820  0100               	movlb	0	; () banked
 11427  012822  21AC               	addwfc	(??___fladd+2)& (0+255),w,b
 11428  012824  0100               	movlb	0	; () banked
 11429  012826  6FB0               	movwf	(??___fladd+6)& (0+255),b
 11430  012828  0100               	movlb	0	; () banked
 11431  01282A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11432  01282C  0100               	movlb	0	; () banked
 11433  01282E  21AD               	addwfc	(??___fladd+3)& (0+255),w,b
 11434  012830  0100               	movlb	0	; () banked
 11435  012832  6FB1               	movwf	(??___fladd+7)& (0+255),b
 11436  012834  0EFF               	movlw	255
 11437  012836  0100               	movlb	0	; () banked
 11438  012838  25AE               	addwf	(??___fladd+4)& (0+255),w,b
 11439  01283A  0100               	movlb	0	; () banked
 11440  01283C  6FA2               	movwf	___fladd@b& (0+255),b
 11441  01283E  0EFF               	movlw	255
 11442  012840  0100               	movlb	0	; () banked
 11443  012842  21AF               	addwfc	(??___fladd+5)& (0+255),w,b
 11444  012844  0100               	movlb	0	; () banked
 11445  012846  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11446  012848  0EFF               	movlw	255
 11447  01284A  0100               	movlb	0	; () banked
 11448  01284C  21B0               	addwfc	(??___fladd+6)& (0+255),w,b
 11449  01284E  0100               	movlb	0	; () banked
 11450  012850  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11451  012852  0EFF               	movlw	255
 11452  012854  0100               	movlb	0	; () banked
 11453  012856  21B1               	addwfc	(??___fladd+7)& (0+255),w,b
 11454  012858  0100               	movlb	0	; () banked
 11455  01285A  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11456  01285C  0E80               	movlw	128
 11457  01285E  0100               	movlb	0	; () banked
 11458  012860  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11459                           
 11460                           ; BSR set to: 0
 11461  012862  0100               	movlb	0	; () banked
 11462  012864  6DB5               	negf	___fladd@grs& (0+255),b
 11463                           
 11464                           ; BSR set to: 0
 11465  012866  0100               	movlb	0	; () banked
 11466  012868  51B5               	movf	___fladd@grs& (0+255),w,b
 11467  01286A  0100               	movlb	0	; () banked
 11468  01286C  A4D8               	btfss	status,2,c
 11469  01286E  D018               	goto	l1416
 11470                           
 11471                           ; BSR set to: 0
 11472  012870  0E01               	movlw	1
 11473  012872  0100               	movlb	0	; () banked
 11474  012874  27A2               	addwf	___fladd@b& (0+255),f,b
 11475  012876  0E00               	movlw	0
 11476  012878  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11477  01287A  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11478  01287C  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11479                           
 11480                           ; BSR set to: 0
 11481  01287E  D010               	goto	l1416
 11482  012880                     l6709:
 11483                           
 11484                           ; BSR set to: 0
 11485  012880  0100               	movlb	0	; () banked
 11486  012882  51A6               	movf	___fladd@a& (0+255),w,b
 11487  012884  0100               	movlb	0	; () banked
 11488  012886  5FA2               	subwf	___fladd@b& (0+255),f,b
 11489  012888  0100               	movlb	0	; () banked
 11490  01288A  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 11491  01288C  0100               	movlb	0	; () banked
 11492  01288E  5BA3               	subwfb	(___fladd@b+1)& (0+255),f,b
 11493  012890  0100               	movlb	0	; () banked
 11494  012892  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 11495  012894  0100               	movlb	0	; () banked
 11496  012896  5BA4               	subwfb	(___fladd@b+2)& (0+255),f,b
 11497  012898  0100               	movlb	0	; () banked
 11498  01289A  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11499  01289C  0100               	movlb	0	; () banked
 11500  01289E  5BA5               	subwfb	(___fladd@b+3)& (0+255),f,b
 11501  0128A0                     l1416:
 11502                           
 11503                           ; BSR set to: 0
 11504  0128A0  0100               	movlb	0	; () banked
 11505  0128A2  51A2               	movf	___fladd@b& (0+255),w,b
 11506  0128A4  0100               	movlb	0	; () banked
 11507  0128A6  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11508  0128A8  0100               	movlb	0	; () banked
 11509  0128AA  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11510  0128AC  0100               	movlb	0	; () banked
 11511  0128AE  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11512  0128B0  A4D8               	btfss	status,2,c
 11513  0128B2  D02A               	goto	l6733
 11514                           
 11515                           ; BSR set to: 0
 11516  0128B4  0100               	movlb	0	; () banked
 11517  0128B6  51B5               	movf	___fladd@grs& (0+255),w,b
 11518  0128B8  0100               	movlb	0	; () banked
 11519  0128BA  A4D8               	btfss	status,2,c
 11520  0128BC  D025               	goto	l6733
 11521                           
 11522                           ; BSR set to: 0
 11523  0128BE  0E00               	movlw	0
 11524  0128C0  0100               	movlb	0	; () banked
 11525  0128C2  6FA2               	movwf	?___fladd& (0+255),b
 11526  0128C4  0E00               	movlw	0
 11527  0128C6  6FA3               	movwf	(?___fladd+1)& (0+255),b
 11528  0128C8  0E00               	movlw	0
 11529  0128CA  6FA4               	movwf	(?___fladd+2)& (0+255),b
 11530  0128CC  0E00               	movlw	0
 11531  0128CE  6FA5               	movwf	(?___fladd+3)& (0+255),b
 11532                           
 11533                           ; BSR set to: 0
 11534  0128D0  0012               	return	
 11535  0128D2                     l6717:
 11536                           
 11537                           ; BSR set to: 0
 11538  0128D2  0100               	movlb	0	; () banked
 11539  0128D4  90D8               	bcf	status,0,c
 11540  0128D6  37A2               	rlcf	___fladd@b& (0+255),f,b
 11541  0128D8  37A3               	rlcf	(___fladd@b+1)& (0+255),f,b
 11542  0128DA  37A4               	rlcf	(___fladd@b+2)& (0+255),f,b
 11543  0128DC  37A5               	rlcf	(___fladd@b+3)& (0+255),f,b
 11544                           
 11545                           ; BSR set to: 0
 11546  0128DE  0100               	movlb	0	; () banked
 11547  0128E0  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11548  0128E2  D002               	goto	l6723
 11549                           
 11550                           ; BSR set to: 0
 11551  0128E4  0100               	movlb	0	; () banked
 11552  0128E6  81A2               	bsf	___fladd@b& (0+255),0,b
 11553  0128E8                     l6723:
 11554                           
 11555                           ; BSR set to: 0
 11556  0128E8  0100               	movlb	0	; () banked
 11557  0128EA  A1B5               	btfss	___fladd@grs& (0+255),0,b
 11558  0128EC  D003               	goto	l6727
 11559                           
 11560                           ; BSR set to: 0
 11561  0128EE  80D8               	bsf	status,0,c
 11562  0128F0  0100               	movlb	0	; () banked
 11563  0128F2  D002               	goto	L11
 11564  0128F4                     l6727:
 11565                           
 11566                           ; BSR set to: 0
 11567  0128F4  0100               	movlb	0	; () banked
 11568  0128F6  90D8               	bcf	status,0,c
 11569  0128F8                     L11:
 11570  0128F8  37B5               	rlcf	___fladd@grs& (0+255),f,b
 11571                           
 11572                           ; BSR set to: 0
 11573                           
 11574                           ; BSR set to: 0
 11575  0128FA  0100               	movlb	0	; () banked
 11576  0128FC  51B4               	movf	___fladd@bexp& (0+255),w,b
 11577  0128FE  0100               	movlb	0	; () banked
 11578  012900  B4D8               	btfsc	status,2,c
 11579  012902  D002               	goto	l6733
 11580                           
 11581                           ; BSR set to: 0
 11582  012904  0100               	movlb	0	; () banked
 11583  012906  07B4               	decf	___fladd@bexp& (0+255),f,b
 11584  012908                     l6733:
 11585                           
 11586                           ; BSR set to: 0
 11587  012908  0100               	movlb	0	; () banked
 11588  01290A  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 11589  01290C  D7E2               	goto	l6717
 11590  01290E                     l6735:
 11591                           
 11592                           ; BSR set to: 0
 11593  01290E  0E00               	movlw	0
 11594  012910  0100               	movlb	0	; () banked
 11595  012912  6FB3               	movwf	___fladd@aexp& (0+255),b
 11596                           
 11597                           ; BSR set to: 0
 11598  012914  0100               	movlb	0	; () banked
 11599  012916  AFB5               	btfss	___fladd@grs& (0+255),7,b
 11600  012918  D00D               	goto	l1425
 11601                           
 11602                           ; BSR set to: 0
 11603  01291A  C0B5  F0AA         	movff	___fladd@grs,??___fladd
 11604  01291E  0E7F               	movlw	127
 11605  012920  0100               	movlb	0	; () banked
 11606  012922  17AA               	andwf	??___fladd& (0+255),f,b
 11607  012924  A4D8               	btfss	status,2,c
 11608  012926  D003               	goto	l6743
 11609                           
 11610                           ; BSR set to: 0
 11611                           
 11612                           ; BSR set to: 0
 11613  012928  0100               	movlb	0	; () banked
 11614  01292A  A1A2               	btfss	___fladd@b& (0+255),0,b
 11615  01292C  D003               	goto	l1425
 11616  01292E                     l6743:
 11617                           
 11618                           ; BSR set to: 0
 11619  01292E  0E01               	movlw	1
 11620  012930  0100               	movlb	0	; () banked
 11621  012932  6FB3               	movwf	___fladd@aexp& (0+255),b
 11622  012934                     l1425:
 11623                           
 11624                           ; BSR set to: 0
 11625  012934  0100               	movlb	0	; () banked
 11626  012936  51B3               	movf	___fladd@aexp& (0+255),w,b
 11627  012938  0100               	movlb	0	; () banked
 11628  01293A  B4D8               	btfsc	status,2,c
 11629  01293C  D026               	goto	l6753
 11630                           
 11631                           ; BSR set to: 0
 11632  01293E  0E01               	movlw	1
 11633  012940  0100               	movlb	0	; () banked
 11634  012942  27A2               	addwf	___fladd@b& (0+255),f,b
 11635  012944  0E00               	movlw	0
 11636  012946  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11637  012948  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11638  01294A  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11639                           
 11640                           ; BSR set to: 0
 11641  01294C  0100               	movlb	0	; () banked
 11642  01294E  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 11643  012950  D01C               	goto	l6753
 11644                           
 11645                           ; BSR set to: 0
 11646  012952  C0A2  F0AA         	movff	___fladd@b,??___fladd
 11647  012956  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 11648  01295A  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 11649  01295E  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 11650  012962  0100               	movlb	0	; () banked
 11651  012964  35AD               	rlcf	(??___fladd+3)& (0+255),w,b
 11652  012966  33AD               	rrcf	(??___fladd+3)& (0+255),f,b
 11653  012968  33AC               	rrcf	(??___fladd+2)& (0+255),f,b
 11654  01296A  33AB               	rrcf	(??___fladd+1)& (0+255),f,b
 11655  01296C  33AA               	rrcf	??___fladd& (0+255),f,b
 11656  01296E  C0AA  F0A2         	movff	??___fladd,___fladd@b
 11657  012972  C0AB  F0A3         	movff	??___fladd+1,___fladd@b+1
 11658  012976  C0AC  F0A4         	movff	??___fladd+2,___fladd@b+2
 11659  01297A  C0AD  F0A5         	movff	??___fladd+3,___fladd@b+3
 11660  01297E  0100               	movlb	0	; () banked
 11661  012980  29B4               	incf	___fladd@bexp& (0+255),w,b
 11662  012982  B4D8               	btfsc	status,2,c
 11663  012984  D002               	goto	l6753
 11664                           
 11665                           ; BSR set to: 0
 11666  012986  0100               	movlb	0	; () banked
 11667  012988  2BB4               	incf	___fladd@bexp& (0+255),f,b
 11668  01298A                     l6753:
 11669                           
 11670                           ; BSR set to: 0
 11671  01298A  0100               	movlb	0	; () banked
 11672  01298C  29B4               	incf	___fladd@bexp& (0+255),w,b
 11673  01298E  B4D8               	btfsc	status,2,c
 11674  012990  D005               	goto	l6757
 11675                           
 11676                           ; BSR set to: 0
 11677  012992  0100               	movlb	0	; () banked
 11678  012994  51B4               	movf	___fladd@bexp& (0+255),w,b
 11679  012996  0100               	movlb	0	; () banked
 11680  012998  A4D8               	btfss	status,2,c
 11681  01299A  D011               	goto	l6761
 11682  01299C                     l6757:
 11683                           
 11684                           ; BSR set to: 0
 11685  01299C  0E00               	movlw	0
 11686  01299E  0100               	movlb	0	; () banked
 11687  0129A0  6FA2               	movwf	___fladd@b& (0+255),b
 11688  0129A2  0E00               	movlw	0
 11689  0129A4  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11690  0129A6  0E00               	movlw	0
 11691  0129A8  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11692  0129AA  0E00               	movlw	0
 11693  0129AC  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11694  0129AE  0100               	movlb	0	; () banked
 11695  0129B0  51B4               	movf	___fladd@bexp& (0+255),w,b
 11696  0129B2  0100               	movlb	0	; () banked
 11697  0129B4  A4D8               	btfss	status,2,c
 11698  0129B6  D003               	goto	l6761
 11699                           
 11700                           ; BSR set to: 0
 11701  0129B8  0E00               	movlw	0
 11702  0129BA  0100               	movlb	0	; () banked
 11703  0129BC  6FB2               	movwf	___fladd@signs& (0+255),b
 11704  0129BE                     l6761:
 11705                           
 11706                           ; BSR set to: 0
 11707  0129BE  0100               	movlb	0	; () banked
 11708  0129C0  A1B4               	btfss	___fladd@bexp& (0+255),0,b
 11709  0129C2  D003               	goto	l6765
 11710                           
 11711                           ; BSR set to: 0
 11712  0129C4  0100               	movlb	0	; () banked
 11713  0129C6  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11714  0129C8  D002               	goto	l6767
 11715  0129CA                     l6765:
 11716                           
 11717                           ; BSR set to: 0
 11718  0129CA  0100               	movlb	0	; () banked
 11719  0129CC  9FA4               	bcf	(___fladd@b+2)& (0+255),7,b
 11720  0129CE                     l6767:
 11721                           
 11722                           ; BSR set to: 0
 11723  0129CE  0100               	movlb	0	; () banked
 11724  0129D0  90D8               	bcf	status,0,c
 11725  0129D2  31B4               	rrcf	___fladd@bexp& (0+255),w,b
 11726  0129D4  0100               	movlb	0	; () banked
 11727  0129D6  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11728                           
 11729                           ; BSR set to: 0
 11730  0129D8  0100               	movlb	0	; () banked
 11731  0129DA  AFB2               	btfss	___fladd@signs& (0+255),7,b
 11732  0129DC  D002               	goto	l6773
 11733                           
 11734                           ; BSR set to: 0
 11735  0129DE  0100               	movlb	0	; () banked
 11736  0129E0  8FA5               	bsf	(___fladd@b+3)& (0+255),7,b
 11737  0129E2                     l6773:
 11738                           
 11739                           ; BSR set to: 0
 11740  0129E2  C0A2  F0A2         	movff	___fladd@b,?___fladd
 11741  0129E6  C0A3  F0A3         	movff	___fladd@b+1,?___fladd+1
 11742  0129EA  C0A4  F0A4         	movff	___fladd@b+2,?___fladd+2
 11743  0129EE  C0A5  F0A5         	movff	___fladd@b+3,?___fladd+3
 11744  0129F2  0012               	return	
 11745  0129F4                     __end_of___fladd:
 11746                           	opt stack 0
 11747                           tblptru	equ	0xFF8
 11748                           tblptrh	equ	0xFF7
 11749                           tblptrl	equ	0xFF6
 11750                           tablat	equ	0xFF5
 11751                           prodh	equ	0xFF4
 11752                           prodl	equ	0xFF3
 11753                           intcon	equ	0xFF2
 11754                           postinc0	equ	0xFEE
 11755                           wreg	equ	0xFE8
 11756                           indf2	equ	0xFDF
 11757                           postinc2	equ	0xFDE
 11758                           fsr2h	equ	0xFDA
 11759                           fsr2l	equ	0xFD9
 11760                           status	equ	0xFD8
 11761                           
 11762 ;; *************** function ___flneg *****************
 11763 ;; Defined at:
 11764 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 11765 ;; Parameters:    Size  Location     Type
 11766 ;;  f1              4   14[BANK0 ] unsigned char 
 11767 ;; Auto vars:     Size  Location     Type
 11768 ;;		None
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  4   14[BANK0 ] unsigned char 
 11771 ;; Registers used:
 11772 ;;		wreg, status,2, status,0
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;Total ram usage:        4 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    3
 11785 ;; This function calls:
 11786 ;;		Nothing
 11787 ;; This function is called by:
 11788 ;;		_sprintf
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	text26
 11793  0151AE                     __ptext26:
 11794                           	opt stack 0
 11795  0151AE                     ___flneg:
 11796                           	opt stack 25
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;incstack = 0
 11800  0151AE  0100               	movlb	0	; () banked
 11801  0151B0  516E               	movf	___flneg@f1& (0+255),w,b
 11802  0151B2  0100               	movlb	0	; () banked
 11803  0151B4  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11804  0151B6  0100               	movlb	0	; () banked
 11805  0151B8  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11806  0151BA  0100               	movlb	0	; () banked
 11807  0151BC  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11808  0151BE  B4D8               	btfsc	status,2,c
 11809  0151C0  D009               	goto	l7643
 11810                           
 11811                           ; BSR set to: 0
 11812  0151C2  0E00               	movlw	0
 11813  0151C4  0100               	movlb	0	; () banked
 11814  0151C6  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 11815  0151C8  0E00               	movlw	0
 11816  0151CA  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11817  0151CC  0E00               	movlw	0
 11818  0151CE  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11819  0151D0  0E80               	movlw	128
 11820  0151D2  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11821  0151D4                     l7643:
 11822                           
 11823                           ; BSR set to: 0
 11824  0151D4  C06E  F06E         	movff	___flneg@f1,?___flneg
 11825  0151D8  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 11826  0151DC  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 11827  0151E0  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 11828  0151E4  0012               	return	
 11829  0151E6                     __end_of___flneg:
 11830                           	opt stack 0
 11831                           tblptru	equ	0xFF8
 11832                           tblptrh	equ	0xFF7
 11833                           tblptrl	equ	0xFF6
 11834                           tablat	equ	0xFF5
 11835                           prodh	equ	0xFF4
 11836                           prodl	equ	0xFF3
 11837                           intcon	equ	0xFF2
 11838                           postinc0	equ	0xFEE
 11839                           wreg	equ	0xFE8
 11840                           indf2	equ	0xFDF
 11841                           postinc2	equ	0xFDE
 11842                           fsr2h	equ	0xFDA
 11843                           fsr2l	equ	0xFD9
 11844                           status	equ	0xFD8
 11845                           
 11846 ;; *************** function ___flge *****************
 11847 ;; Defined at:
 11848 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 11849 ;; Parameters:    Size  Location     Type
 11850 ;;  ff1             4   14[BANK0 ] unsigned char 
 11851 ;;  ff2             4   18[BANK0 ] unsigned char 
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;		None
 11854 ;; Return value:  Size  Location     Type
 11855 ;;		None               void
 11856 ;; Registers used:
 11857 ;;		wreg, status,2, status,0
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11863 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;Total ram usage:       12 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:    3
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_sprintf
 11874 ;; This function uses a non-reentrant model
 11875 ;;
 11876                           
 11877                           	psect	text27
 11878  014208                     __ptext27:
 11879                           	opt stack 0
 11880  014208                     ___flge:
 11881                           	opt stack 25
 11882                           
 11883                           ; BSR set to: 0
 11884                           ;incstack = 0
 11885  014208  0E00               	movlw	0
 11886  01420A  0100               	movlb	0	; () banked
 11887  01420C  156E               	andwf	___flge@ff1& (0+255),w,b
 11888  01420E  0100               	movlb	0	; () banked
 11889  014210  6F76               	movwf	??___flge& (0+255),b
 11890  014212  0E00               	movlw	0
 11891  014214  0100               	movlb	0	; () banked
 11892  014216  156F               	andwf	(___flge@ff1+1)& (0+255),w,b
 11893  014218  0100               	movlb	0	; () banked
 11894  01421A  6F77               	movwf	(??___flge+1)& (0+255),b
 11895  01421C  0E80               	movlw	128
 11896  01421E  0100               	movlb	0	; () banked
 11897  014220  1570               	andwf	(___flge@ff1+2)& (0+255),w,b
 11898  014222  0100               	movlb	0	; () banked
 11899  014224  6F78               	movwf	(??___flge+2)& (0+255),b
 11900  014226  0E7F               	movlw	127
 11901  014228  0100               	movlb	0	; () banked
 11902  01422A  1571               	andwf	(___flge@ff1+3)& (0+255),w,b
 11903  01422C  0100               	movlb	0	; () banked
 11904  01422E  6F79               	movwf	(??___flge+3)& (0+255),b
 11905  014230  0100               	movlb	0	; () banked
 11906  014232  5176               	movf	??___flge& (0+255),w,b
 11907  014234  0100               	movlb	0	; () banked
 11908  014236  1177               	iorwf	(??___flge+1)& (0+255),w,b
 11909  014238  0100               	movlb	0	; () banked
 11910  01423A  1178               	iorwf	(??___flge+2)& (0+255),w,b
 11911  01423C  0100               	movlb	0	; () banked
 11912  01423E  1179               	iorwf	(??___flge+3)& (0+255),w,b
 11913  014240  A4D8               	btfss	status,2,c
 11914  014242  D009               	goto	l7621
 11915                           
 11916                           ; BSR set to: 0
 11917  014244  0E00               	movlw	0
 11918  014246  0100               	movlb	0	; () banked
 11919  014248  6F6E               	movwf	___flge@ff1& (0+255),b
 11920  01424A  0E00               	movlw	0
 11921  01424C  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 11922  01424E  0E00               	movlw	0
 11923  014250  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 11924  014252  0E00               	movlw	0
 11925  014254  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 11926  014256                     l7621:
 11927                           
 11928                           ; BSR set to: 0
 11929  014256  0E00               	movlw	0
 11930  014258  0100               	movlb	0	; () banked
 11931  01425A  1572               	andwf	___flge@ff2& (0+255),w,b
 11932  01425C  0100               	movlb	0	; () banked
 11933  01425E  6F76               	movwf	??___flge& (0+255),b
 11934  014260  0E00               	movlw	0
 11935  014262  0100               	movlb	0	; () banked
 11936  014264  1573               	andwf	(___flge@ff2+1)& (0+255),w,b
 11937  014266  0100               	movlb	0	; () banked
 11938  014268  6F77               	movwf	(??___flge+1)& (0+255),b
 11939  01426A  0E80               	movlw	128
 11940  01426C  0100               	movlb	0	; () banked
 11941  01426E  1574               	andwf	(___flge@ff2+2)& (0+255),w,b
 11942  014270  0100               	movlb	0	; () banked
 11943  014272  6F78               	movwf	(??___flge+2)& (0+255),b
 11944  014274  0E7F               	movlw	127
 11945  014276  0100               	movlb	0	; () banked
 11946  014278  1575               	andwf	(___flge@ff2+3)& (0+255),w,b
 11947  01427A  0100               	movlb	0	; () banked
 11948  01427C  6F79               	movwf	(??___flge+3)& (0+255),b
 11949  01427E  0100               	movlb	0	; () banked
 11950  014280  5176               	movf	??___flge& (0+255),w,b
 11951  014282  0100               	movlb	0	; () banked
 11952  014284  1177               	iorwf	(??___flge+1)& (0+255),w,b
 11953  014286  0100               	movlb	0	; () banked
 11954  014288  1178               	iorwf	(??___flge+2)& (0+255),w,b
 11955  01428A  0100               	movlb	0	; () banked
 11956  01428C  1179               	iorwf	(??___flge+3)& (0+255),w,b
 11957  01428E  A4D8               	btfss	status,2,c
 11958  014290  D009               	goto	l7625
 11959                           
 11960                           ; BSR set to: 0
 11961  014292  0E00               	movlw	0
 11962  014294  0100               	movlb	0	; () banked
 11963  014296  6F72               	movwf	___flge@ff2& (0+255),b
 11964  014298  0E00               	movlw	0
 11965  01429A  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 11966  01429C  0E00               	movlw	0
 11967  01429E  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 11968  0142A0  0E00               	movlw	0
 11969  0142A2  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 11970  0142A4                     l7625:
 11971                           
 11972                           ; BSR set to: 0
 11973  0142A4  0100               	movlb	0	; () banked
 11974  0142A6  AF71               	btfss	(___flge@ff1+3)& (0+255),7,b
 11975  0142A8  D026               	goto	l7629
 11976                           
 11977                           ; BSR set to: 0
 11978  0142AA  C06E  F076         	movff	___flge@ff1,??___flge
 11979  0142AE  C06F  F077         	movff	___flge@ff1+1,??___flge+1
 11980  0142B2  C070  F078         	movff	___flge@ff1+2,??___flge+2
 11981  0142B6  C071  F079         	movff	___flge@ff1+3,??___flge+3
 11982  0142BA  0100               	movlb	0	; () banked
 11983  0142BC  1F76               	comf	??___flge& (0+255),f,b
 11984  0142BE  1F77               	comf	(??___flge+1)& (0+255),f,b
 11985  0142C0  1F78               	comf	(??___flge+2)& (0+255),f,b
 11986  0142C2  1F79               	comf	(??___flge+3)& (0+255),f,b
 11987  0142C4  2B76               	incf	??___flge& (0+255),f,b
 11988  0142C6  0E00               	movlw	0
 11989  0142C8  2377               	addwfc	(??___flge+1)& (0+255),f,b
 11990  0142CA  2378               	addwfc	(??___flge+2)& (0+255),f,b
 11991  0142CC  2379               	addwfc	(??___flge+3)& (0+255),f,b
 11992  0142CE  0E00               	movlw	0
 11993  0142D0  0100               	movlb	0	; () banked
 11994  0142D2  2576               	addwf	??___flge& (0+255),w,b
 11995  0142D4  0100               	movlb	0	; () banked
 11996  0142D6  6F6E               	movwf	___flge@ff1& (0+255),b
 11997  0142D8  0E00               	movlw	0
 11998  0142DA  0100               	movlb	0	; () banked
 11999  0142DC  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12000  0142DE  0100               	movlb	0	; () banked
 12001  0142E0  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 12002  0142E2  0E00               	movlw	0
 12003  0142E4  0100               	movlb	0	; () banked
 12004  0142E6  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12005  0142E8  0100               	movlb	0	; () banked
 12006  0142EA  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 12007  0142EC  0E80               	movlw	128
 12008  0142EE  0100               	movlb	0	; () banked
 12009  0142F0  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12010  0142F2  0100               	movlb	0	; () banked
 12011  0142F4  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 12012  0142F6                     l7629:
 12013                           
 12014                           ; BSR set to: 0
 12015  0142F6  0100               	movlb	0	; () banked
 12016  0142F8  AF75               	btfss	(___flge@ff2+3)& (0+255),7,b
 12017  0142FA  D026               	goto	l1122
 12018                           
 12019                           ; BSR set to: 0
 12020  0142FC  C072  F076         	movff	___flge@ff2,??___flge
 12021  014300  C073  F077         	movff	___flge@ff2+1,??___flge+1
 12022  014304  C074  F078         	movff	___flge@ff2+2,??___flge+2
 12023  014308  C075  F079         	movff	___flge@ff2+3,??___flge+3
 12024  01430C  0100               	movlb	0	; () banked
 12025  01430E  1F76               	comf	??___flge& (0+255),f,b
 12026  014310  1F77               	comf	(??___flge+1)& (0+255),f,b
 12027  014312  1F78               	comf	(??___flge+2)& (0+255),f,b
 12028  014314  1F79               	comf	(??___flge+3)& (0+255),f,b
 12029  014316  2B76               	incf	??___flge& (0+255),f,b
 12030  014318  0E00               	movlw	0
 12031  01431A  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12032  01431C  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12033  01431E  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12034  014320  0E00               	movlw	0
 12035  014322  0100               	movlb	0	; () banked
 12036  014324  2576               	addwf	??___flge& (0+255),w,b
 12037  014326  0100               	movlb	0	; () banked
 12038  014328  6F72               	movwf	___flge@ff2& (0+255),b
 12039  01432A  0E00               	movlw	0
 12040  01432C  0100               	movlb	0	; () banked
 12041  01432E  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12042  014330  0100               	movlb	0	; () banked
 12043  014332  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 12044  014334  0E00               	movlw	0
 12045  014336  0100               	movlb	0	; () banked
 12046  014338  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12047  01433A  0100               	movlb	0	; () banked
 12048  01433C  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12049  01433E  0E80               	movlw	128
 12050  014340  0100               	movlb	0	; () banked
 12051  014342  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12052  014344  0100               	movlb	0	; () banked
 12053  014346  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12054  014348                     l1122:
 12055                           
 12056                           ; BSR set to: 0
 12057  014348  0E00               	movlw	0
 12058  01434A  0100               	movlb	0	; () banked
 12059  01434C  1B6E               	xorwf	___flge@ff1& (0+255),f,b
 12060  01434E  0E00               	movlw	0
 12061  014350  1B6F               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12062  014352  0E00               	movlw	0
 12063  014354  1B70               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12064  014356  0E80               	movlw	128
 12065  014358  1B71               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12066  01435A  0E00               	movlw	0
 12067  01435C  0100               	movlb	0	; () banked
 12068  01435E  1B72               	xorwf	___flge@ff2& (0+255),f,b
 12069  014360  0E00               	movlw	0
 12070  014362  1B73               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12071  014364  0E00               	movlw	0
 12072  014366  1B74               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12073  014368  0E80               	movlw	128
 12074  01436A  1B75               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12075  01436C  0100               	movlb	0	; () banked
 12076  01436E  5172               	movf	___flge@ff2& (0+255),w,b
 12077  014370  0100               	movlb	0	; () banked
 12078  014372  5D6E               	subwf	___flge@ff1& (0+255),w,b
 12079  014374  0100               	movlb	0	; () banked
 12080  014376  5173               	movf	(___flge@ff2+1)& (0+255),w,b
 12081  014378  0100               	movlb	0	; () banked
 12082  01437A  596F               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12083  01437C  0100               	movlb	0	; () banked
 12084  01437E  5174               	movf	(___flge@ff2+2)& (0+255),w,b
 12085  014380  0100               	movlb	0	; () banked
 12086  014382  5970               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12087  014384  0100               	movlb	0	; () banked
 12088  014386  5175               	movf	(___flge@ff2+3)& (0+255),w,b
 12089  014388  0100               	movlb	0	; () banked
 12090  01438A  5971               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12091  01438C  B0D8               	btfsc	status,0,c
 12092  01438E  D002               	goto	l7635
 12093                           
 12094                           ; BSR set to: 0
 12095  014390  90D8               	bcf	status,0,c
 12096  014392  0012               	return	
 12097  014394                     l7635:
 12098                           
 12099                           ; BSR set to: 0
 12100  014394  80D8               	bsf	status,0,c
 12101                           
 12102                           ; BSR set to: 0
 12103  014396  0012               	return	
 12104  014398                     __end_of___flge:
 12105                           	opt stack 0
 12106                           tblptru	equ	0xFF8
 12107                           tblptrh	equ	0xFF7
 12108                           tblptrl	equ	0xFF6
 12109                           tablat	equ	0xFF5
 12110                           prodh	equ	0xFF4
 12111                           prodl	equ	0xFF3
 12112                           intcon	equ	0xFF2
 12113                           postinc0	equ	0xFEE
 12114                           wreg	equ	0xFE8
 12115                           indf2	equ	0xFDF
 12116                           postinc2	equ	0xFDE
 12117                           fsr2h	equ	0xFDA
 12118                           fsr2l	equ	0xFD9
 12119                           status	equ	0xFD8
 12120                           
 12121 ;; *************** function ___fldiv *****************
 12122 ;; Defined at:
 12123 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;  b               4   14[BANK0 ] unsigned char 
 12126 ;;  a               4   18[BANK0 ] unsigned char 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;  grs             4   33[BANK0 ] unsigned long 
 12129 ;;  rem             4   27[BANK0 ] unsigned long 
 12130 ;;  new_exp         2   31[BANK0 ] int 
 12131 ;;  aexp            1   38[BANK0 ] unsigned char 
 12132 ;;  bexp            1   37[BANK0 ] unsigned char 
 12133 ;;  sign            1   26[BANK0 ] unsigned char 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  4   14[BANK0 ] unsigned char 
 12136 ;; Registers used:
 12137 ;;		wreg, status,2, status,0
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12143 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;Total ram usage:       25 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:    3
 12150 ;; This function calls:
 12151 ;;		Nothing
 12152 ;; This function is called by:
 12153 ;;		_LCD_Handler
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text28
 12158  013282                     __ptext28:
 12159                           	opt stack 0
 12160  013282                     ___fldiv:
 12161                           	opt stack 26
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;incstack = 0
 12165  013282  0100               	movlb	0	; () banked
 12166  013284  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 12167  013286  0B80               	andlw	128
 12168  013288  0100               	movlb	0	; () banked
 12169  01328A  6F7A               	movwf	___fldiv@sign& (0+255),b
 12170  01328C  0100               	movlb	0	; () banked
 12171  01328E  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 12172  013290  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 12173  013292  0100               	movlb	0	; () banked
 12174  013294  6F85               	movwf	___fldiv@bexp& (0+255),b
 12175                           
 12176                           ; BSR set to: 0
 12177  013296  0100               	movlb	0	; () banked
 12178  013298  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 12179  01329A  D002               	goto	l8349
 12180                           
 12181                           ; BSR set to: 0
 12182  01329C  0100               	movlb	0	; () banked
 12183  01329E  8185               	bsf	___fldiv@bexp& (0+255),0,b
 12184  0132A0                     l8349:
 12185                           
 12186                           ; BSR set to: 0
 12187  0132A0  0100               	movlb	0	; () banked
 12188  0132A2  5185               	movf	___fldiv@bexp& (0+255),w,b
 12189  0132A4  0100               	movlb	0	; () banked
 12190  0132A6  B4D8               	btfsc	status,2,c
 12191  0132A8  D012               	goto	l8359
 12192                           
 12193                           ; BSR set to: 0
 12194  0132AA  0100               	movlb	0	; () banked
 12195  0132AC  2985               	incf	___fldiv@bexp& (0+255),w,b
 12196  0132AE  A4D8               	btfss	status,2,c
 12197  0132B0  D009               	goto	l8355
 12198                           
 12199                           ; BSR set to: 0
 12200  0132B2  0E00               	movlw	0
 12201  0132B4  0100               	movlb	0	; () banked
 12202  0132B6  6F6E               	movwf	___fldiv@b& (0+255),b
 12203  0132B8  0E00               	movlw	0
 12204  0132BA  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12205  0132BC  0E00               	movlw	0
 12206  0132BE  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12207  0132C0  0E00               	movlw	0
 12208  0132C2  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12209  0132C4                     l8355:
 12210                           
 12211                           ; BSR set to: 0
 12212  0132C4  0100               	movlb	0	; () banked
 12213  0132C6  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 12214                           
 12215                           ; BSR set to: 0
 12216  0132C8  0E00               	movlw	0
 12217  0132CA  0100               	movlb	0	; () banked
 12218  0132CC  D008               	goto	L12
 12219  0132CE                     l8359:
 12220                           
 12221                           ; BSR set to: 0
 12222  0132CE  0E00               	movlw	0
 12223  0132D0  0100               	movlb	0	; () banked
 12224  0132D2  6F6E               	movwf	___fldiv@b& (0+255),b
 12225  0132D4  0E00               	movlw	0
 12226  0132D6  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12227  0132D8  0E00               	movlw	0
 12228  0132DA  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12229  0132DC  0E00               	movlw	0
 12230  0132DE                     L12:
 12231  0132DE  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12232                           
 12233                           ; BSR set to: 0
 12234                           
 12235                           ; BSR set to: 0
 12236  0132E0  0100               	movlb	0	; () banked
 12237  0132E2  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12238  0132E4  0B80               	andlw	128
 12239  0132E6  0100               	movlb	0	; () banked
 12240  0132E8  1B7A               	xorwf	___fldiv@sign& (0+255),f,b
 12241                           
 12242                           ; BSR set to: 0
 12243  0132EA  0100               	movlb	0	; () banked
 12244  0132EC  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12245  0132EE  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 12246  0132F0  0100               	movlb	0	; () banked
 12247  0132F2  6F86               	movwf	___fldiv@aexp& (0+255),b
 12248                           
 12249                           ; BSR set to: 0
 12250  0132F4  0100               	movlb	0	; () banked
 12251  0132F6  AF74               	btfss	(___fldiv@a+2)& (0+255),7,b
 12252  0132F8  D002               	goto	l8369
 12253                           
 12254                           ; BSR set to: 0
 12255  0132FA  0100               	movlb	0	; () banked
 12256  0132FC  8186               	bsf	___fldiv@aexp& (0+255),0,b
 12257  0132FE                     l8369:
 12258                           
 12259                           ; BSR set to: 0
 12260  0132FE  0100               	movlb	0	; () banked
 12261  013300  5186               	movf	___fldiv@aexp& (0+255),w,b
 12262  013302  0100               	movlb	0	; () banked
 12263  013304  B4D8               	btfsc	status,2,c
 12264  013306  D012               	goto	l8379
 12265                           
 12266                           ; BSR set to: 0
 12267  013308  0100               	movlb	0	; () banked
 12268  01330A  2986               	incf	___fldiv@aexp& (0+255),w,b
 12269  01330C  A4D8               	btfss	status,2,c
 12270  01330E  D009               	goto	l8375
 12271                           
 12272                           ; BSR set to: 0
 12273  013310  0E00               	movlw	0
 12274  013312  0100               	movlb	0	; () banked
 12275  013314  6F72               	movwf	___fldiv@a& (0+255),b
 12276  013316  0E00               	movlw	0
 12277  013318  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12278  01331A  0E00               	movlw	0
 12279  01331C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12280  01331E  0E00               	movlw	0
 12281  013320  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12282  013322                     l8375:
 12283                           
 12284                           ; BSR set to: 0
 12285  013322  0100               	movlb	0	; () banked
 12286  013324  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 12287                           
 12288                           ; BSR set to: 0
 12289  013326  0E00               	movlw	0
 12290  013328  0100               	movlb	0	; () banked
 12291  01332A  D008               	goto	L13
 12292  01332C                     l8379:
 12293                           
 12294                           ; BSR set to: 0
 12295  01332C  0E00               	movlw	0
 12296  01332E  0100               	movlb	0	; () banked
 12297  013330  6F72               	movwf	___fldiv@a& (0+255),b
 12298  013332  0E00               	movlw	0
 12299  013334  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12300  013336  0E00               	movlw	0
 12301  013338  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12302  01333A  0E00               	movlw	0
 12303  01333C                     L13:
 12304  01333C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12305                           
 12306                           ; BSR set to: 0
 12307                           
 12308                           ; BSR set to: 0
 12309  01333E  0100               	movlb	0	; () banked
 12310  013340  5172               	movf	___fldiv@a& (0+255),w,b
 12311  013342  0100               	movlb	0	; () banked
 12312  013344  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12313  013346  0100               	movlb	0	; () banked
 12314  013348  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12315  01334A  0100               	movlb	0	; () banked
 12316  01334C  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12317  01334E  A4D8               	btfss	status,2,c
 12318  013350  D017               	goto	l8391
 12319                           
 12320                           ; BSR set to: 0
 12321  013352  0E00               	movlw	0
 12322  013354  0100               	movlb	0	; () banked
 12323  013356  6F6E               	movwf	___fldiv@b& (0+255),b
 12324  013358  0E00               	movlw	0
 12325  01335A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12326  01335C  0E00               	movlw	0
 12327  01335E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12328  013360  0E00               	movlw	0
 12329  013362  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12330                           
 12331                           ; BSR set to: 0
 12332  013364  0100               	movlb	0	; () banked
 12333  013366  0E80               	movlw	128
 12334  013368  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12335  01336A  0E7F               	movlw	127
 12336  01336C  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12337                           
 12338                           ; BSR set to: 0
 12339  01336E  C06E  F06E         	movff	___fldiv@b,?___fldiv
 12340  013372  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 12341  013376  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 12342  01337A  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 12343                           
 12344                           ; BSR set to: 0
 12345  01337E  0012               	return	
 12346  013380                     l8391:
 12347                           
 12348                           ; BSR set to: 0
 12349  013380  0100               	movlb	0	; () banked
 12350  013382  5185               	movf	___fldiv@bexp& (0+255),w,b
 12351  013384  0100               	movlb	0	; () banked
 12352  013386  A4D8               	btfss	status,2,c
 12353  013388  D012               	goto	l8399
 12354                           
 12355                           ; BSR set to: 0
 12356  01338A  0E00               	movlw	0
 12357  01338C  0100               	movlb	0	; () banked
 12358  01338E  6F6E               	movwf	___fldiv@b& (0+255),b
 12359  013390  0E00               	movlw	0
 12360  013392  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12361  013394  0E00               	movlw	0
 12362  013396  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12363  013398  0E00               	movlw	0
 12364  01339A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12365                           
 12366                           ; BSR set to: 0
 12367  01339C  C06E  F06E         	movff	___fldiv@b,?___fldiv
 12368  0133A0  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 12369  0133A4  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 12370  0133A8  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 12371                           
 12372                           ; BSR set to: 0
 12373  0133AC  0012               	return	
 12374  0133AE                     l8399:
 12375                           
 12376                           ; BSR set to: 0
 12377  0133AE  0100               	movlb	0	; () banked
 12378  0133B0  5186               	movf	___fldiv@aexp& (0+255),w,b
 12379  0133B2  0100               	movlb	0	; () banked
 12380  0133B4  6F76               	movwf	??___fldiv& (0+255),b
 12381  0133B6  6B77               	clrf	(??___fldiv+1)& (0+255),b
 12382  0133B8  0100               	movlb	0	; () banked
 12383  0133BA  1F76               	comf	??___fldiv& (0+255),f,b
 12384  0133BC  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 12385  0133BE  4B76               	infsnz	??___fldiv& (0+255),f,b
 12386  0133C0  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 12387  0133C2  0100               	movlb	0	; () banked
 12388  0133C4  5185               	movf	___fldiv@bexp& (0+255),w,b
 12389  0133C6  0100               	movlb	0	; () banked
 12390  0133C8  6F78               	movwf	(??___fldiv+2)& (0+255),b
 12391  0133CA  6B79               	clrf	(??___fldiv+3)& (0+255),b
 12392  0133CC  0100               	movlb	0	; () banked
 12393  0133CE  5176               	movf	??___fldiv& (0+255),w,b
 12394  0133D0  0100               	movlb	0	; () banked
 12395  0133D2  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 12396  0133D4  0100               	movlb	0	; () banked
 12397  0133D6  5177               	movf	(??___fldiv+1)& (0+255),w,b
 12398  0133D8  0100               	movlb	0	; () banked
 12399  0133DA  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 12400  0133DC  0E7F               	movlw	127
 12401  0133DE  0100               	movlb	0	; () banked
 12402  0133E0  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 12403  0133E2  0100               	movlb	0	; () banked
 12404  0133E4  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 12405  0133E6  0E00               	movlw	0
 12406  0133E8  0100               	movlb	0	; () banked
 12407  0133EA  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 12408  0133EC  0100               	movlb	0	; () banked
 12409  0133EE  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12410                           
 12411                           ; BSR set to: 0
 12412  0133F0  C06E  F07B         	movff	___fldiv@b,___fldiv@rem
 12413  0133F4  C06F  F07C         	movff	___fldiv@b+1,___fldiv@rem+1
 12414  0133F8  C070  F07D         	movff	___fldiv@b+2,___fldiv@rem+2
 12415  0133FC  C071  F07E         	movff	___fldiv@b+3,___fldiv@rem+3
 12416                           
 12417                           ; BSR set to: 0
 12418  013400  0E00               	movlw	0
 12419  013402  0100               	movlb	0	; () banked
 12420  013404  6F6E               	movwf	___fldiv@b& (0+255),b
 12421  013406  0E00               	movlw	0
 12422  013408  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12423  01340A  0E00               	movlw	0
 12424  01340C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12425  01340E  0E00               	movlw	0
 12426  013410  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12427                           
 12428                           ; BSR set to: 0
 12429  013412  0E00               	movlw	0
 12430  013414  0100               	movlb	0	; () banked
 12431  013416  6F81               	movwf	___fldiv@grs& (0+255),b
 12432  013418  0E00               	movlw	0
 12433  01341A  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 12434  01341C  0E00               	movlw	0
 12435  01341E  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 12436  013420  0E00               	movlw	0
 12437  013422  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 12438                           
 12439                           ; BSR set to: 0
 12440  013424  0E00               	movlw	0
 12441  013426  0100               	movlb	0	; () banked
 12442  013428  6F86               	movwf	___fldiv@aexp& (0+255),b
 12443  01342A  D042               	goto	l1455
 12444  01342C                     l8409:
 12445                           
 12446                           ; BSR set to: 0
 12447  01342C  0100               	movlb	0	; () banked
 12448  01342E  5186               	movf	___fldiv@aexp& (0+255),w,b
 12449  013430  0100               	movlb	0	; () banked
 12450  013432  B4D8               	btfsc	status,2,c
 12451  013434  D017               	goto	l8417
 12452                           
 12453                           ; BSR set to: 0
 12454  013436  0100               	movlb	0	; () banked
 12455  013438  90D8               	bcf	status,0,c
 12456  01343A  377B               	rlcf	___fldiv@rem& (0+255),f,b
 12457  01343C  377C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12458  01343E  377D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12459  013440  377E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12460  013442  0100               	movlb	0	; () banked
 12461  013444  90D8               	bcf	status,0,c
 12462  013446  376E               	rlcf	___fldiv@b& (0+255),f,b
 12463  013448  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12464  01344A  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12465  01344C  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12466                           
 12467                           ; BSR set to: 0
 12468  01344E  0100               	movlb	0	; () banked
 12469  013450  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12470  013452  D002               	goto	l1458
 12471                           
 12472                           ; BSR set to: 0
 12473  013454  0100               	movlb	0	; () banked
 12474  013456  816E               	bsf	___fldiv@b& (0+255),0,b
 12475  013458                     l1458:
 12476                           
 12477                           ; BSR set to: 0
 12478  013458  0100               	movlb	0	; () banked
 12479  01345A  90D8               	bcf	status,0,c
 12480  01345C  3781               	rlcf	___fldiv@grs& (0+255),f,b
 12481  01345E  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12482  013460  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12483  013462  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12484  013464                     l8417:
 12485                           
 12486                           ; BSR set to: 0
 12487  013464  0100               	movlb	0	; () banked
 12488  013466  5172               	movf	___fldiv@a& (0+255),w,b
 12489  013468  0100               	movlb	0	; () banked
 12490  01346A  5D7B               	subwf	___fldiv@rem& (0+255),w,b
 12491  01346C  0100               	movlb	0	; () banked
 12492  01346E  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 12493  013470  0100               	movlb	0	; () banked
 12494  013472  597C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12495  013474  0100               	movlb	0	; () banked
 12496  013476  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 12497  013478  0100               	movlb	0	; () banked
 12498  01347A  597D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12499  01347C  0100               	movlb	0	; () banked
 12500  01347E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12501  013480  0100               	movlb	0	; () banked
 12502  013482  597E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12503  013484  A0D8               	btfss	status,0,c
 12504  013486  D012               	goto	l8423
 12505                           
 12506                           ; BSR set to: 0
 12507  013488  0100               	movlb	0	; () banked
 12508  01348A  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12509                           
 12510                           ; BSR set to: 0
 12511  01348C  0100               	movlb	0	; () banked
 12512  01348E  5172               	movf	___fldiv@a& (0+255),w,b
 12513  013490  0100               	movlb	0	; () banked
 12514  013492  5F7B               	subwf	___fldiv@rem& (0+255),f,b
 12515  013494  0100               	movlb	0	; () banked
 12516  013496  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 12517  013498  0100               	movlb	0	; () banked
 12518  01349A  5B7C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12519  01349C  0100               	movlb	0	; () banked
 12520  01349E  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 12521  0134A0  0100               	movlb	0	; () banked
 12522  0134A2  5B7D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12523  0134A4  0100               	movlb	0	; () banked
 12524  0134A6  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 12525  0134A8  0100               	movlb	0	; () banked
 12526  0134AA  5B7E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12527  0134AC                     l8423:
 12528                           
 12529                           ; BSR set to: 0
 12530  0134AC  0100               	movlb	0	; () banked
 12531  0134AE  2B86               	incf	___fldiv@aexp& (0+255),f,b
 12532  0134B0                     l1455:
 12533                           
 12534                           ; BSR set to: 0
 12535  0134B0  0E19               	movlw	25
 12536  0134B2  0100               	movlb	0	; () banked
 12537  0134B4  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 12538  0134B6  D7BA               	goto	l8409
 12539                           
 12540                           ; BSR set to: 0
 12541                           
 12542                           ; BSR set to: 0
 12543  0134B8  0100               	movlb	0	; () banked
 12544  0134BA  517B               	movf	___fldiv@rem& (0+255),w,b
 12545  0134BC  0100               	movlb	0	; () banked
 12546  0134BE  117C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12547  0134C0  0100               	movlb	0	; () banked
 12548  0134C2  117D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12549  0134C4  0100               	movlb	0	; () banked
 12550  0134C6  117E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12551  0134C8  B4D8               	btfsc	status,2,c
 12552  0134CA  D018               	goto	l8435
 12553                           
 12554                           ; BSR set to: 0
 12555  0134CC  0100               	movlb	0	; () banked
 12556  0134CE  8181               	bsf	___fldiv@grs& (0+255),0,b
 12557                           
 12558                           ; BSR set to: 0
 12559  0134D0  D015               	goto	l8435
 12560  0134D2                     l8429:
 12561                           
 12562                           ; BSR set to: 0
 12563  0134D2  0100               	movlb	0	; () banked
 12564  0134D4  90D8               	bcf	status,0,c
 12565  0134D6  376E               	rlcf	___fldiv@b& (0+255),f,b
 12566  0134D8  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12567  0134DA  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12568  0134DC  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12569                           
 12570                           ; BSR set to: 0
 12571  0134DE  0100               	movlb	0	; () banked
 12572  0134E0  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12573  0134E2  D002               	goto	l1464
 12574                           
 12575                           ; BSR set to: 0
 12576  0134E4  0100               	movlb	0	; () banked
 12577  0134E6  816E               	bsf	___fldiv@b& (0+255),0,b
 12578  0134E8                     l1464:
 12579                           
 12580                           ; BSR set to: 0
 12581  0134E8  0100               	movlb	0	; () banked
 12582  0134EA  90D8               	bcf	status,0,c
 12583  0134EC  3781               	rlcf	___fldiv@grs& (0+255),f,b
 12584  0134EE  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12585  0134F0  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12586  0134F2  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12587  0134F4  0100               	movlb	0	; () banked
 12588  0134F6  077F               	decf	___fldiv@new_exp& (0+255),f,b
 12589  0134F8  A0D8               	btfss	status,0,c
 12590  0134FA  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12591  0134FC                     l8435:
 12592                           
 12593                           ; BSR set to: 0
 12594  0134FC  0100               	movlb	0	; () banked
 12595  0134FE  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 12596  013500  D7E8               	goto	l8429
 12597                           
 12598                           ; BSR set to: 0
 12599                           
 12600                           ; BSR set to: 0
 12601  013502  0E00               	movlw	0
 12602  013504  0100               	movlb	0	; () banked
 12603  013506  6F86               	movwf	___fldiv@aexp& (0+255),b
 12604                           
 12605                           ; BSR set to: 0
 12606  013508  0100               	movlb	0	; () banked
 12607  01350A  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12608  01350C  D024               	goto	l1466
 12609                           
 12610                           ; BSR set to: 0
 12611  01350E  0EFF               	movlw	255
 12612  013510  0100               	movlb	0	; () banked
 12613  013512  1581               	andwf	___fldiv@grs& (0+255),w,b
 12614  013514  0100               	movlb	0	; () banked
 12615  013516  6F76               	movwf	??___fldiv& (0+255),b
 12616  013518  0EFF               	movlw	255
 12617  01351A  0100               	movlb	0	; () banked
 12618  01351C  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12619  01351E  0100               	movlb	0	; () banked
 12620  013520  6F77               	movwf	(??___fldiv+1)& (0+255),b
 12621  013522  0EFF               	movlw	255
 12622  013524  0100               	movlb	0	; () banked
 12623  013526  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12624  013528  0100               	movlb	0	; () banked
 12625  01352A  6F78               	movwf	(??___fldiv+2)& (0+255),b
 12626  01352C  0E7F               	movlw	127
 12627  01352E  0100               	movlb	0	; () banked
 12628  013530  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12629  013532  0100               	movlb	0	; () banked
 12630  013534  6F79               	movwf	(??___fldiv+3)& (0+255),b
 12631  013536  0100               	movlb	0	; () banked
 12632  013538  5176               	movf	??___fldiv& (0+255),w,b
 12633  01353A  0100               	movlb	0	; () banked
 12634  01353C  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 12635  01353E  0100               	movlb	0	; () banked
 12636  013540  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 12637  013542  0100               	movlb	0	; () banked
 12638  013544  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 12639  013546  A4D8               	btfss	status,2,c
 12640  013548  D003               	goto	l8445
 12641                           
 12642                           ; BSR set to: 0
 12643                           
 12644                           ; BSR set to: 0
 12645  01354A  0100               	movlb	0	; () banked
 12646  01354C  A16E               	btfss	___fldiv@b& (0+255),0,b
 12647  01354E  D003               	goto	l1466
 12648  013550                     l8445:
 12649                           
 12650                           ; BSR set to: 0
 12651  013550  0E01               	movlw	1
 12652  013552  0100               	movlb	0	; () banked
 12653  013554  6F86               	movwf	___fldiv@aexp& (0+255),b
 12654  013556                     l1466:
 12655                           
 12656                           ; BSR set to: 0
 12657  013556  0100               	movlb	0	; () banked
 12658  013558  5186               	movf	___fldiv@aexp& (0+255),w,b
 12659  01355A  0100               	movlb	0	; () banked
 12660  01355C  B4D8               	btfsc	status,2,c
 12661  01355E  D023               	goto	l8455
 12662                           
 12663                           ; BSR set to: 0
 12664  013560  0E01               	movlw	1
 12665  013562  0100               	movlb	0	; () banked
 12666  013564  276E               	addwf	___fldiv@b& (0+255),f,b
 12667  013566  0E00               	movlw	0
 12668  013568  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12669  01356A  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12670  01356C  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12671                           
 12672                           ; BSR set to: 0
 12673  01356E  0100               	movlb	0	; () banked
 12674  013570  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 12675  013572  D019               	goto	l8455
 12676                           
 12677                           ; BSR set to: 0
 12678  013574  C06E  F076         	movff	___fldiv@b,??___fldiv
 12679  013578  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 12680  01357C  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 12681  013580  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 12682  013584  0100               	movlb	0	; () banked
 12683  013586  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 12684  013588  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 12685  01358A  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 12686  01358C  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 12687  01358E  3376               	rrcf	??___fldiv& (0+255),f,b
 12688  013590  C076  F06E         	movff	??___fldiv,___fldiv@b
 12689  013594  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 12690  013598  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 12691  01359C  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 12692                           
 12693                           ; BSR set to: 0
 12694  0135A0  0100               	movlb	0	; () banked
 12695  0135A2  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 12696  0135A4  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12697  0135A6                     l8455:
 12698                           
 12699                           ; BSR set to: 0
 12700  0135A6  0100               	movlb	0	; () banked
 12701  0135A8  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12702  0135AA  D014               	goto	l8459
 12703  0135AC  0100               	movlb	0	; () banked
 12704  0135AE  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12705  0135B0  E104               	bnz	u11420
 12706  0135B2  0100               	movlb	0	; () banked
 12707  0135B4  297F               	incf	___fldiv@new_exp& (0+255),w,b
 12708  0135B6  A0D8               	btfss	status,0,c
 12709  0135B8  D00D               	goto	l8459
 12710  0135BA                     u11420:
 12711                           
 12712                           ; BSR set to: 0
 12713  0135BA  0E00               	movlw	0
 12714  0135BC  0100               	movlb	0	; () banked
 12715  0135BE  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12716  0135C0  697F               	setf	___fldiv@new_exp& (0+255),b
 12717  0135C2  0E00               	movlw	0
 12718  0135C4  0100               	movlb	0	; () banked
 12719  0135C6  6F6E               	movwf	___fldiv@b& (0+255),b
 12720  0135C8  0E00               	movlw	0
 12721  0135CA  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12722  0135CC  0E00               	movlw	0
 12723  0135CE  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12724  0135D0  0E00               	movlw	0
 12725  0135D2  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12726  0135D4                     l8459:
 12727                           
 12728                           ; BSR set to: 0
 12729  0135D4  0100               	movlb	0	; () banked
 12730  0135D6  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12731  0135D8  D007               	goto	l8461
 12732  0135DA  0100               	movlb	0	; () banked
 12733  0135DC  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12734  0135DE  E115               	bnz	l8463
 12735  0135E0  0100               	movlb	0	; () banked
 12736  0135E2  057F               	decf	___fldiv@new_exp& (0+255),w,b
 12737  0135E4  B0D8               	btfsc	status,0,c
 12738  0135E6  D011               	goto	l8463
 12739  0135E8                     l8461:
 12740                           
 12741                           ; BSR set to: 0
 12742  0135E8  0E00               	movlw	0
 12743  0135EA  0100               	movlb	0	; () banked
 12744  0135EC  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12745  0135EE  0E00               	movlw	0
 12746  0135F0  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 12747  0135F2  0E00               	movlw	0
 12748  0135F4  0100               	movlb	0	; () banked
 12749  0135F6  6F6E               	movwf	___fldiv@b& (0+255),b
 12750  0135F8  0E00               	movlw	0
 12751  0135FA  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 12752  0135FC  0E00               	movlw	0
 12753  0135FE  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 12754  013600  0E00               	movlw	0
 12755  013602  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12756  013604  0E00               	movlw	0
 12757  013606  0100               	movlb	0	; () banked
 12758  013608  6F7A               	movwf	___fldiv@sign& (0+255),b
 12759  01360A                     l8463:
 12760                           
 12761                           ; BSR set to: 0
 12762  01360A  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 12763                           
 12764                           ; BSR set to: 0
 12765  01360E  0100               	movlb	0	; () banked
 12766  013610  A185               	btfss	___fldiv@bexp& (0+255),0,b
 12767  013612  D003               	goto	l8469
 12768                           
 12769                           ; BSR set to: 0
 12770  013614  0100               	movlb	0	; () banked
 12771  013616  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 12772  013618  D002               	goto	l8471
 12773  01361A                     l8469:
 12774                           
 12775                           ; BSR set to: 0
 12776  01361A  0100               	movlb	0	; () banked
 12777  01361C  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 12778  01361E                     l8471:
 12779                           
 12780                           ; BSR set to: 0
 12781  01361E  0100               	movlb	0	; () banked
 12782  013620  90D8               	bcf	status,0,c
 12783  013622  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 12784  013624  0100               	movlb	0	; () banked
 12785  013626  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 12786                           
 12787                           ; BSR set to: 0
 12788  013628  0100               	movlb	0	; () banked
 12789  01362A  517A               	movf	___fldiv@sign& (0+255),w,b
 12790  01362C  0100               	movlb	0	; () banked
 12791  01362E  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12792                           
 12793                           ; BSR set to: 0
 12794  013630  C06E  F06E         	movff	___fldiv@b,?___fldiv
 12795  013634  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 12796  013638  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 12797  01363C  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 12798  013640  0012               	return	
 12799  013642                     __end_of___fldiv:
 12800                           	opt stack 0
 12801                           tblptru	equ	0xFF8
 12802                           tblptrh	equ	0xFF7
 12803                           tblptrl	equ	0xFF6
 12804                           tablat	equ	0xFF5
 12805                           prodh	equ	0xFF4
 12806                           prodl	equ	0xFF3
 12807                           intcon	equ	0xFF2
 12808                           postinc0	equ	0xFEE
 12809                           wreg	equ	0xFE8
 12810                           indf2	equ	0xFDF
 12811                           postinc2	equ	0xFDE
 12812                           fsr2h	equ	0xFDA
 12813                           fsr2l	equ	0xFD9
 12814                           status	equ	0xFD8
 12815                           
 12816 ;; *************** function _LCD_write_string *****************
 12817 ;; Defined at:
 12818 ;;		line 194 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;  buffer          2   31[BANK0 ] PTR unsigned char 
 12821 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 12822 ;; Auto vars:     Size  Location     Type
 12823 ;;		None
 12824 ;; Return value:  Size  Location     Type
 12825 ;;		None               void
 12826 ;; Registers used:
 12827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12837 ;;Total ram usage:        2 bytes
 12838 ;; Hardware stack levels used:    1
 12839 ;; Hardware stack levels required when called:    8
 12840 ;; This function calls:
 12841 ;;		_LCD_write_char
 12842 ;; This function is called by:
 12843 ;;		_LCD_Handler
 12844 ;;		_LCD_write_integer
 12845 ;; This function uses a non-reentrant model
 12846 ;;
 12847                           
 12848                           	psect	text29
 12849  0152DE                     __ptext29:
 12850                           	opt stack 0
 12851  0152DE                     _LCD_write_string:
 12852                           	opt stack 21
 12853                           
 12854                           ;src\LCD_44780.c: 197: while(*buffer){
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;incstack = 0
 12858  0152DE  D00A               	goto	l8091
 12859  0152E0                     l8087:
 12860                           
 12861                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 12862  0152E0  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 12863  0152E4  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 12864  0152E8  50DF               	movf	indf2,w,c
 12865  0152EA  ECE3  F0A7         	call	_LCD_write_char
 12866                           
 12867                           ;src\LCD_44780.c: 202: buffer++;
 12868  0152EE  0100               	movlb	0	; () banked
 12869  0152F0  4B7F               	infsnz	LCD_write_string@buffer& (0+255),f,b
 12870  0152F2  2B80               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 12871  0152F4                     l8091:
 12872  0152F4  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 12873  0152F8  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 12874  0152FC  50DF               	movf	indf2,w,c
 12875  0152FE  B4D8               	btfsc	status,2,c
 12876  015300  0012               	return	
 12877  015302  D7EE               	goto	l8087
 12878  015304                     __end_of_LCD_write_string:
 12879                           	opt stack 0
 12880                           tblptru	equ	0xFF8
 12881                           tblptrh	equ	0xFF7
 12882                           tblptrl	equ	0xFF6
 12883                           tablat	equ	0xFF5
 12884                           prodh	equ	0xFF4
 12885                           prodl	equ	0xFF3
 12886                           intcon	equ	0xFF2
 12887                           postinc0	equ	0xFEE
 12888                           wreg	equ	0xFE8
 12889                           indf2	equ	0xFDF
 12890                           postinc2	equ	0xFDE
 12891                           fsr2h	equ	0xFDA
 12892                           fsr2l	equ	0xFD9
 12893                           status	equ	0xFD8
 12894                           
 12895 ;; *************** function _LCD_write_message *****************
 12896 ;; Defined at:
 12897 ;;		line 178 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  buffer          2   31[BANK0 ] PTR const unsigned char 
 12900 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
 12901 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
 12902 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;		None
 12905 ;; Return value:  Size  Location     Type
 12906 ;;		None               void
 12907 ;; Registers used:
 12908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12914 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;Total ram usage:        2 bytes
 12919 ;; Hardware stack levels used:    1
 12920 ;; Hardware stack levels required when called:    8
 12921 ;; This function calls:
 12922 ;;		_LCD_write_char
 12923 ;; This function is called by:
 12924 ;;		_main
 12925 ;;		_LCD_Handler
 12926 ;;		_board_initialization
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text30
 12931  01521C                     __ptext30:
 12932                           	opt stack 0
 12933  01521C                     _LCD_write_message:
 12934                           	opt stack 21
 12935                           
 12936                           ;src\LCD_44780.c: 181: while(*buffer) {
 12937                           
 12938                           ;incstack = 0
 12939  01521C  D00D               	goto	l8083
 12940  01521E                     l8079:
 12941                           
 12942                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 12943  01521E  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12944  015222  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12945  015226                     	if	0	;tblptru may be non-zero
 12946  015226                     	endif
 12947  015226                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12948  015226  0E00               	movlw	low (__mediumconst shr (0+16))
 12949  015228  6EF8               	movwf	tblptru,c
 12950  01522A                     	endif
 12951  01522A  0008               	tblrd		*
 12952  01522C  50F5               	movf	tablat,w,c
 12953  01522E  ECE3  F0A7         	call	_LCD_write_char
 12954                           
 12955                           ;src\LCD_44780.c: 186: buffer++;
 12956  015232  0100               	movlb	0	; () banked
 12957  015234  4B7F               	infsnz	LCD_write_message@buffer& (0+255),f,b
 12958  015236  2B80               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 12959  015238                     l8083:
 12960  015238  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12961  01523C  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12962  015240                     	if	0	;tblptru may be non-zero
 12963  015240                     	endif
 12964  015240                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12965  015240  0E00               	movlw	low (__mediumconst shr (0+16))
 12966  015242  6EF8               	movwf	tblptru,c
 12967  015244                     	endif
 12968  015244  0008               	tblrd		*
 12969  015246  50F5               	movf	tablat,w,c
 12970  015248  0900               	iorlw	0
 12971  01524A  B4D8               	btfsc	status,2,c
 12972  01524C  0012               	return	
 12973  01524E  D7E7               	goto	l8079
 12974  015250                     __end_of_LCD_write_message:
 12975                           	opt stack 0
 12976                           tblptru	equ	0xFF8
 12977                           tblptrh	equ	0xFF7
 12978                           tblptrl	equ	0xFF6
 12979                           tablat	equ	0xFF5
 12980                           prodh	equ	0xFF4
 12981                           prodl	equ	0xFF3
 12982                           intcon	equ	0xFF2
 12983                           postinc0	equ	0xFEE
 12984                           wreg	equ	0xFE8
 12985                           indf2	equ	0xFDF
 12986                           postinc2	equ	0xFDE
 12987                           fsr2h	equ	0xFDA
 12988                           fsr2l	equ	0xFD9
 12989                           status	equ	0xFD8
 12990                           
 12991 ;; *************** function _LCD_write_char *****************
 12992 ;; Defined at:
 12993 ;;		line 145 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  value           1    wreg     unsigned char 
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;  value           1   30[BANK0 ] unsigned char 
 12998 ;;  D0              1   29[BANK0 ] unsigned char 
 12999 ;;  D1              1   28[BANK0 ] unsigned char 
 13000 ;;  D2              1   27[BANK0 ] unsigned char 
 13001 ;;  D3              1   26[BANK0 ] unsigned char 
 13002 ;; Return value:  Size  Location     Type
 13003 ;;		None               void
 13004 ;; Registers used:
 13005 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13012 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;Total ram usage:        5 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; Hardware stack levels required when called:    7
 13018 ;; This function calls:
 13019 ;;		_LCD_send_command
 13020 ;; This function is called by:
 13021 ;;		_LCD_write_message
 13022 ;;		_LCD_write_string
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           	psect	text31
 13027  014FC6                     __ptext31:
 13028                           	opt stack 0
 13029  014FC6                     _LCD_write_char:
 13030                           	opt stack 21
 13031                           
 13032                           ;incstack = 0
 13033                           ;LCD_write_char@value stored from wreg
 13034  014FC6  0100               	movlb	0	; () banked
 13035  014FC8  6F7E               	movwf	LCD_write_char@value& (0+255),b
 13036                           
 13037                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13038                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
 13039  014FCA  828A               	bsf	3978,1,c	;volatile
 13040                           
 13041                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13042  014FCC  0100               	movlb	0	; () banked
 13043  014FCE  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13044  014FD0  0B01               	andlw	1
 13045  014FD2  0100               	movlb	0	; () banked
 13046  014FD4  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 13047                           
 13048                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13049  014FD6  0100               	movlb	0	; () banked
 13050  014FD8  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 13051  014FDA  46E8               	rlncf	wreg,f,c
 13052  014FDC  0B03               	andlw	3
 13053  014FDE  0B01               	andlw	1
 13054  014FE0  0100               	movlb	0	; () banked
 13055  014FE2  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 13056                           
 13057                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13058  014FE4  0100               	movlb	0	; () banked
 13059  014FE6  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13060  014FE8  42E8               	rrncf	wreg,f,c
 13061  014FEA  0B07               	andlw	7
 13062  014FEC  0B01               	andlw	1
 13063  014FEE  0100               	movlb	0	; () banked
 13064  014FF0  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 13065                           
 13066                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13067  014FF2  0100               	movlb	0	; () banked
 13068  014FF4  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13069  014FF6  0B0F               	andlw	15
 13070  014FF8  0B01               	andlw	1
 13071  014FFA  0100               	movlb	0	; () banked
 13072  014FFC  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13076  014FFE  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 13077  015002  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 13078  015006  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 13079  01500A  0100               	movlb	0	; () banked
 13080  01500C  517A               	movf	LCD_write_char@D3& (0+255),w,b
 13081  01500E  EC9D  F0A8         	call	_LCD_send_command
 13082                           
 13083                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13084  015012  0100               	movlb	0	; () banked
 13085  015014  397E               	swapf	LCD_write_char@value& (0+255),w,b
 13086  015016  46E8               	rlncf	wreg,f,c
 13087  015018  0B1F               	andlw	31
 13088  01501A  0B01               	andlw	1
 13089  01501C  0100               	movlb	0	; () banked
 13090  01501E  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 13094  015020  0100               	movlb	0	; () banked
 13095  015022  417E               	rrncf	LCD_write_char@value& (0+255),w,b
 13096  015024  42E8               	rrncf	wreg,f,c
 13097  015026  0B3F               	andlw	63
 13098  015028  0B01               	andlw	1
 13099  01502A  0100               	movlb	0	; () banked
 13100  01502C  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 13104  01502E  0100               	movlb	0	; () banked
 13105  015030  90D8               	bcf	status,0,c
 13106  015032  317E               	rrcf	LCD_write_char@value& (0+255),w,b
 13107  015034  0B01               	andlw	1
 13108  015036  0100               	movlb	0	; () banked
 13109  015038  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 13113  01503A  0100               	movlb	0	; () banked
 13114  01503C  517E               	movf	LCD_write_char@value& (0+255),w,b
 13115  01503E  0B01               	andlw	1
 13116  015040  0100               	movlb	0	; () banked
 13117  015042  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 13121  015044  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 13122  015048  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 13123  01504C  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 13124  015050  0100               	movlb	0	; () banked
 13125  015052  517A               	movf	LCD_write_char@D3& (0+255),w,b
 13126  015054  EC9D  F0A8         	call	_LCD_send_command
 13127                           
 13128                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
 13129  015058  928A               	bcf	3978,1,c	;volatile
 13130  01505A  0012               	return		;funcret
 13131  01505C                     __end_of_LCD_write_char:
 13132                           	opt stack 0
 13133                           tblptru	equ	0xFF8
 13134                           tblptrh	equ	0xFF7
 13135                           tblptrl	equ	0xFF6
 13136                           tablat	equ	0xFF5
 13137                           prodh	equ	0xFF4
 13138                           prodl	equ	0xFF3
 13139                           intcon	equ	0xFF2
 13140                           postinc0	equ	0xFEE
 13141                           wreg	equ	0xFE8
 13142                           indf2	equ	0xFDF
 13143                           postinc2	equ	0xFDE
 13144                           fsr2h	equ	0xFDA
 13145                           fsr2l	equ	0xFD9
 13146                           status	equ	0xFD8
 13147                           
 13148 ;; *************** function _LCD_goto_line *****************
 13149 ;; Defined at:
 13150 ;;		line 111 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;  line            1    wreg     unsigned char 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;  line            1   26[BANK0 ] unsigned char 
 13155 ;; Return value:  Size  Location     Type
 13156 ;;		None               void
 13157 ;; Registers used:
 13158 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;Total ram usage:        1 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:    7
 13171 ;; This function calls:
 13172 ;;		_LCD_send_command
 13173 ;; This function is called by:
 13174 ;;		_main
 13175 ;;		_LCD_Handler
 13176 ;;		_board_initialization
 13177 ;;		_LCD_goto_xy
 13178 ;; This function uses a non-reentrant model
 13179 ;;
 13180                           
 13181                           	psect	text32
 13182  0149C2                     __ptext32:
 13183                           	opt stack 0
 13184  0149C2                     _LCD_goto_line:
 13185                           	opt stack 22
 13186                           
 13187                           ;incstack = 0
 13188                           ;LCD_goto_line@line stored from wreg
 13189  0149C2  0100               	movlb	0	; () banked
 13190  0149C4  6F7A               	movwf	LCD_goto_line@line& (0+255),b
 13191                           
 13192                           ;src\LCD_44780.c: 113: switch(line) {
 13193  0149C6  D064               	goto	l8075
 13194  0149C8                     l8067:
 13195  0149C8  0E00               	movlw	0
 13196  0149CA  0100               	movlb	0	; () banked
 13197  0149CC  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13198  0149CE  0E00               	movlw	0
 13199  0149D0  0100               	movlb	0	; () banked
 13200  0149D2  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13201  0149D4  0E00               	movlw	0
 13202  0149D6  0100               	movlb	0	; () banked
 13203  0149D8  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13204  0149DA  0E01               	movlw	1
 13205  0149DC  EC9D  F0A8         	call	_LCD_send_command
 13206                           
 13207                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 13208  0149E0  0E00               	movlw	0
 13209  0149E2  0100               	movlb	0	; () banked
 13210  0149E4  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13211  0149E6  0E00               	movlw	0
 13212  0149E8  0100               	movlb	0	; () banked
 13213  0149EA  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13214  0149EC  0E00               	movlw	0
 13215  0149EE  0100               	movlb	0	; () banked
 13216  0149F0  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13217  0149F2  0E00               	movlw	0
 13218  0149F4  EC9D  F0A8         	call	_LCD_send_command
 13219                           
 13220                           ;src\LCD_44780.c: 117: break;
 13221  0149F8  0012               	return	
 13222  0149FA                     l8069:
 13223  0149FA  0E01               	movlw	1
 13224  0149FC  0100               	movlb	0	; () banked
 13225  0149FE  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13226  014A00  0E00               	movlw	0
 13227  014A02  0100               	movlb	0	; () banked
 13228  014A04  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13229  014A06  0E00               	movlw	0
 13230  014A08  0100               	movlb	0	; () banked
 13231  014A0A  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13232  014A0C  0E01               	movlw	1
 13233  014A0E  EC9D  F0A8         	call	_LCD_send_command
 13234                           
 13235                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 13236  014A12  0E00               	movlw	0
 13237  014A14  0100               	movlb	0	; () banked
 13238  014A16  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13239  014A18  0E00               	movlw	0
 13240  014A1A  0100               	movlb	0	; () banked
 13241  014A1C  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13242  014A1E  0E00               	movlw	0
 13243  014A20  0100               	movlb	0	; () banked
 13244  014A22  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13245  014A24  0E00               	movlw	0
 13246  014A26  EC9D  F0A8         	call	_LCD_send_command
 13247                           
 13248                           ;src\LCD_44780.c: 121: break;
 13249  014A2A  0012               	return	
 13250  014A2C                     l8071:
 13251  014A2C  0E00               	movlw	0
 13252  014A2E  0100               	movlb	0	; () banked
 13253  014A30  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13254  014A32  0E00               	movlw	0
 13255  014A34  0100               	movlb	0	; () banked
 13256  014A36  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13257  014A38  0E01               	movlw	1
 13258  014A3A  0100               	movlb	0	; () banked
 13259  014A3C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13260  014A3E  0E01               	movlw	1
 13261  014A40  EC9D  F0A8         	call	_LCD_send_command
 13262                           
 13263                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 13264  014A44  0E01               	movlw	1
 13265  014A46  0100               	movlb	0	; () banked
 13266  014A48  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13267  014A4A  0E00               	movlw	0
 13268  014A4C  0100               	movlb	0	; () banked
 13269  014A4E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13270  014A50  0E00               	movlw	0
 13271  014A52  0100               	movlb	0	; () banked
 13272  014A54  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13273  014A56  0E00               	movlw	0
 13274  014A58  EC9D  F0A8         	call	_LCD_send_command
 13275                           
 13276                           ;src\LCD_44780.c: 125: break;
 13277  014A5C  0012               	return	
 13278  014A5E                     l8073:
 13279  014A5E  0E01               	movlw	1
 13280  014A60  0100               	movlb	0	; () banked
 13281  014A62  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13282  014A64  0E00               	movlw	0
 13283  014A66  0100               	movlb	0	; () banked
 13284  014A68  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13285  014A6A  0E01               	movlw	1
 13286  014A6C  0100               	movlb	0	; () banked
 13287  014A6E  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13288  014A70  0E01               	movlw	1
 13289  014A72  EC9D  F0A8         	call	_LCD_send_command
 13290                           
 13291                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 13292  014A76  0E01               	movlw	1
 13293  014A78  0100               	movlb	0	; () banked
 13294  014A7A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13295  014A7C  0E00               	movlw	0
 13296  014A7E  0100               	movlb	0	; () banked
 13297  014A80  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13298  014A82  0E00               	movlw	0
 13299  014A84  0100               	movlb	0	; () banked
 13300  014A86  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13301  014A88  0E00               	movlw	0
 13302  014A8A  EC9D  F0A8         	call	_LCD_send_command
 13303                           
 13304                           ;src\LCD_44780.c: 129: }
 13305  014A8E  0012               	return	
 13306  014A90                     l8075:
 13307  014A90  0100               	movlb	0	; () banked
 13308  014A92  517A               	movf	LCD_goto_line@line& (0+255),w,b
 13309                           
 13310                           ; Switch size 1, requested type "space"
 13311                           ; Number of cases is 4, Range of values is 1 to 4
 13312                           ; switch strategies available:
 13313                           ; Name         Instructions Cycles
 13314                           ; simple_byte           13     7 (average)
 13315                           ;	Chosen strategy is simple_byte
 13316  014A94  0A01               	xorlw	1	; case 1
 13317  014A96  B4D8               	btfsc	status,2,c
 13318  014A98  D797               	goto	l8067
 13319  014A9A  0A03               	xorlw	3	; case 2
 13320  014A9C  B4D8               	btfsc	status,2,c
 13321  014A9E  D7AD               	goto	l8069
 13322  014AA0  0A01               	xorlw	1	; case 3
 13323  014AA2  B4D8               	btfsc	status,2,c
 13324  014AA4  D7C3               	goto	l8071
 13325  014AA6  0A07               	xorlw	7	; case 4
 13326  014AA8  A4D8               	btfss	status,2,c
 13327  014AAA  0012               	return	
 13328  014AAC  D7D8               	goto	l8073
 13329  014AAE                     __end_of_LCD_goto_line:
 13330                           	opt stack 0
 13331                           tblptru	equ	0xFF8
 13332                           tblptrh	equ	0xFF7
 13333                           tblptrl	equ	0xFF6
 13334                           tablat	equ	0xFF5
 13335                           prodh	equ	0xFF4
 13336                           prodl	equ	0xFF3
 13337                           intcon	equ	0xFF2
 13338                           postinc0	equ	0xFEE
 13339                           wreg	equ	0xFE8
 13340                           indf2	equ	0xFDF
 13341                           postinc2	equ	0xFDE
 13342                           fsr2h	equ	0xFDA
 13343                           fsr2l	equ	0xFD9
 13344                           status	equ	0xFD8
 13345                           
 13346 ;; *************** function _LCD_clear *****************
 13347 ;; Defined at:
 13348 ;;		line 257 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13349 ;; Parameters:    Size  Location     Type
 13350 ;;		None
 13351 ;; Auto vars:     Size  Location     Type
 13352 ;;		None
 13353 ;; Return value:  Size  Location     Type
 13354 ;;		None               void
 13355 ;; Registers used:
 13356 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;Total ram usage:        0 bytes
 13367 ;; Hardware stack levels used:    1
 13368 ;; Hardware stack levels required when called:    7
 13369 ;; This function calls:
 13370 ;;		_LCD_send_command
 13371 ;; This function is called by:
 13372 ;;		_LCD_initialize
 13373 ;;		_main
 13374 ;;		_LCD_Handler
 13375 ;;		_board_initialization
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           	psect	text33
 13380  015282                     __ptext33:
 13381                           	opt stack 0
 13382  015282                     _LCD_clear:
 13383                           	opt stack 21
 13384                           
 13385                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 13386                           
 13387                           ;incstack = 0
 13388  015282  0E00               	movlw	0
 13389  015284  0100               	movlb	0	; () banked
 13390  015286  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13391  015288  0E00               	movlw	0
 13392  01528A  0100               	movlb	0	; () banked
 13393  01528C  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13394  01528E  0E00               	movlw	0
 13395  015290  0100               	movlb	0	; () banked
 13396  015292  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13397  015294  0E00               	movlw	0
 13398  015296  EC9D  F0A8         	call	_LCD_send_command
 13399                           
 13400                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 13401  01529A  0E00               	movlw	0
 13402  01529C  0100               	movlb	0	; () banked
 13403  01529E  6F76               	movwf	LCD_send_command@D2& (0+255),b
 13404  0152A0  0E00               	movlw	0
 13405  0152A2  0100               	movlb	0	; () banked
 13406  0152A4  6F77               	movwf	LCD_send_command@D1& (0+255),b
 13407  0152A6  0E01               	movlw	1
 13408  0152A8  0100               	movlb	0	; () banked
 13409  0152AA  6F78               	movwf	LCD_send_command@D0& (0+255),b
 13410  0152AC  0E00               	movlw	0
 13411  0152AE  EC9D  F0A8         	call	_LCD_send_command
 13412  0152B2  0012               	return		;funcret
 13413  0152B4                     __end_of_LCD_clear:
 13414                           	opt stack 0
 13415                           tblptru	equ	0xFF8
 13416                           tblptrh	equ	0xFF7
 13417                           tblptrl	equ	0xFF6
 13418                           tablat	equ	0xFF5
 13419                           prodh	equ	0xFF4
 13420                           prodl	equ	0xFF3
 13421                           intcon	equ	0xFF2
 13422                           postinc0	equ	0xFEE
 13423                           wreg	equ	0xFE8
 13424                           indf2	equ	0xFDF
 13425                           postinc2	equ	0xFDE
 13426                           fsr2h	equ	0xFDA
 13427                           fsr2l	equ	0xFD9
 13428                           status	equ	0xFD8
 13429                           
 13430 ;; *************** function _LCD_send_command *****************
 13431 ;; Defined at:
 13432 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13433 ;; Parameters:    Size  Location     Type
 13434 ;;  D3              1    wreg     unsigned char 
 13435 ;;  D2              1   22[BANK0 ] unsigned char 
 13436 ;;  D1              1   23[BANK0 ] unsigned char 
 13437 ;;  D0              1   24[BANK0 ] unsigned char 
 13438 ;; Auto vars:     Size  Location     Type
 13439 ;;  D3              1   25[BANK0 ] unsigned char 
 13440 ;; Return value:  Size  Location     Type
 13441 ;;		None               void
 13442 ;; Registers used:
 13443 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/0
 13446 ;;		On exit  : 0/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13449 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;Total ram usage:        4 bytes
 13454 ;; Hardware stack levels used:    1
 13455 ;; Hardware stack levels required when called:    6
 13456 ;; This function calls:
 13457 ;;		_LCD_enable_pulse
 13458 ;; This function is called by:
 13459 ;;		_LCD_goto_line
 13460 ;;		_LCD_write_char
 13461 ;;		_LCD_clear
 13462 ;;		_LCD_cursor
 13463 ;;		_LCD_initialize
 13464 ;;		_LCD_home
 13465 ;;		_LCD_shift
 13466 ;;		_LCD_shift_cursor
 13467 ;; This function uses a non-reentrant model
 13468 ;;
 13469                           
 13470                           	psect	text34
 13471  01513A                     __ptext34:
 13472                           	opt stack 0
 13473  01513A                     _LCD_send_command:
 13474                           	opt stack 21
 13475                           
 13476                           ;incstack = 0
 13477                           ;LCD_send_command@D3 stored from wreg
 13478  01513A  0100               	movlb	0	; () banked
 13479  01513C  6F79               	movwf	LCD_send_command@D3& (0+255),b
 13480                           
 13481                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
 13482  01513E  0100               	movlb	0	; () banked
 13483  015140  B178               	btfsc	LCD_send_command@D0& (0+255),0,b
 13484  015142  D002               	bra	u8165
 13485  015144  988A               	bcf	3978,4,c	;volatile
 13486  015146  D001               	bra	u8166
 13487  015148                     u8165:
 13488  015148  888A               	bsf	3978,4,c	;volatile
 13489  01514A                     u8166:
 13490                           
 13491                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
 13492  01514A  0100               	movlb	0	; () banked
 13493  01514C  B177               	btfsc	LCD_send_command@D1& (0+255),0,b
 13494  01514E  D002               	bra	u8175
 13495  015150  9A8A               	bcf	3978,5,c	;volatile
 13496  015152  D001               	bra	u8176
 13497  015154                     u8175:
 13498  015154  8A8A               	bsf	3978,5,c	;volatile
 13499  015156                     u8176:
 13500                           
 13501                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
 13502  015156  0100               	movlb	0	; () banked
 13503  015158  B176               	btfsc	LCD_send_command@D2& (0+255),0,b
 13504  01515A  D002               	bra	u8185
 13505  01515C  9C8A               	bcf	3978,6,c	;volatile
 13506  01515E  D001               	bra	u8186
 13507  015160                     u8185:
 13508  015160  8C8A               	bsf	3978,6,c	;volatile
 13509  015162                     u8186:
 13510                           
 13511                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
 13512  015162  0100               	movlb	0	; () banked
 13513  015164  B179               	btfsc	LCD_send_command@D3& (0+255),0,b
 13514  015166  D002               	bra	u8195
 13515  015168  9E8A               	bcf	3978,7,c	;volatile
 13516  01516A  D001               	bra	u8196
 13517  01516C                     u8195:
 13518  01516C  8E8A               	bsf	3978,7,c	;volatile
 13519  01516E                     u8196:
 13520                           
 13521                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 13522  01516E  EC94  F0A9         	call	_LCD_enable_pulse	;wreg free
 13523  015172  0012               	return		;funcret
 13524  015174                     __end_of_LCD_send_command:
 13525                           	opt stack 0
 13526                           tblptru	equ	0xFF8
 13527                           tblptrh	equ	0xFF7
 13528                           tblptrl	equ	0xFF6
 13529                           tablat	equ	0xFF5
 13530                           prodh	equ	0xFF4
 13531                           prodl	equ	0xFF3
 13532                           intcon	equ	0xFF2
 13533                           postinc0	equ	0xFEE
 13534                           wreg	equ	0xFE8
 13535                           indf2	equ	0xFDF
 13536                           postinc2	equ	0xFDE
 13537                           fsr2h	equ	0xFDA
 13538                           fsr2l	equ	0xFD9
 13539                           status	equ	0xFD8
 13540                           
 13541 ;; *************** function _LCD_enable_pulse *****************
 13542 ;; Defined at:
 13543 ;;		line 49 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;		None
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;		None
 13548 ;; Return value:  Size  Location     Type
 13549 ;;		None               void
 13550 ;; Registers used:
 13551 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13561 ;;Total ram usage:        0 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:    5
 13564 ;; This function calls:
 13565 ;;		_delay_ms
 13566 ;; This function is called by:
 13567 ;;		_LCD_send_command
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           	psect	text35
 13572  015328                     __ptext35:
 13573                           	opt stack 0
 13574  015328                     _LCD_enable_pulse:
 13575                           	opt stack 21
 13576                           
 13577                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 13578                           
 13579                           ;incstack = 0
 13580  015328  868A               	bsf	3978,3,c	;volatile
 13581                           
 13582                           ;src\LCD_44780.c: 52: delay_ms (1);
 13583  01532A  0E00               	movlw	0
 13584  01532C  0100               	movlb	0	; () banked
 13585  01532E  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13586  015330  0E01               	movlw	1
 13587  015332  6F74               	movwf	delay_ms@value_ms& (0+255),b
 13588  015334  ECBA  F0A8         	call	_delay_ms	;wreg free
 13589                           
 13590                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 13591  015338  968A               	bcf	3978,3,c	;volatile
 13592                           
 13593                           ;src\LCD_44780.c: 54: delay_ms (1);
 13594  01533A  0E00               	movlw	0
 13595  01533C  0100               	movlb	0	; () banked
 13596  01533E  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13597  015340  0E01               	movlw	1
 13598  015342  6F74               	movwf	delay_ms@value_ms& (0+255),b
 13599  015344  ECBA  F0A8         	call	_delay_ms	;wreg free
 13600  015348  0012               	return		;funcret
 13601  01534A                     __end_of_LCD_enable_pulse:
 13602                           	opt stack 0
 13603                           tblptru	equ	0xFF8
 13604                           tblptrh	equ	0xFF7
 13605                           tblptrl	equ	0xFF6
 13606                           tablat	equ	0xFF5
 13607                           prodh	equ	0xFF4
 13608                           prodl	equ	0xFF3
 13609                           intcon	equ	0xFF2
 13610                           postinc0	equ	0xFEE
 13611                           wreg	equ	0xFE8
 13612                           indf2	equ	0xFDF
 13613                           postinc2	equ	0xFDE
 13614                           fsr2h	equ	0xFDA
 13615                           fsr2l	equ	0xFD9
 13616                           status	equ	0xFD8
 13617                           
 13618 ;; *************** function _delay_ms *****************
 13619 ;; Defined at:
 13620 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;  value_ms        2   20[BANK0 ] unsigned int 
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;		None
 13625 ;; Return value:  Size  Location     Type
 13626 ;;		None               void
 13627 ;; Registers used:
 13628 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13638 ;;Total ram usage:        2 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    4
 13641 ;; This function calls:
 13642 ;;		___wmul
 13643 ;; This function is called by:
 13644 ;;		_LCD_enable_pulse
 13645 ;;		_LCD_initialize
 13646 ;;		_main
 13647 ;;		_board_initialization
 13648 ;;		_delay_s
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652                           	psect	text36
 13653  015174                     __ptext36:
 13654                           	opt stack 0
 13655  015174                     _delay_ms:
 13656                           	opt stack 26
 13657                           
 13658                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 13659                           
 13660                           ;incstack = 0
 13661  015174  C0EF  F06E         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 13662  015178  0100               	movlb	0	; () banked
 13663  01517A  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 13664  01517C  C074  F070         	movff	delay_ms@value_ms,___wmul@multiplicand
 13665  015180  C075  F071         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 13666  015184  ECF3  F0A8         	call	___wmul	;wreg free
 13667  015188  C06E  F0E6         	movff	?___wmul,_clock_counter_reference	;volatile
 13668  01518C  C06F  F0E7         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 13669                           
 13670                           ;src\delay.c: 75: while (clock_counter_reference) {
 13671  015190  D007               	goto	l579
 13672  015192                     l6559:
 13673                           
 13674                           ;src\delay.c: 85: _delay(240);
 13675  015192  0E50               	movlw	80
 13676  015194                     u11957:
 13677  015194  2EE8               	decfsz	wreg,f,c
 13678  015196  D7FE               	goto	u11957
 13679                           
 13680                           ;src\delay.c: 88: clock_counter_reference--;
 13681  015198  0100               	movlb	0	; () banked
 13682  01519A  07E6               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 13683  01519C  A0D8               	btfss	status,0,c
 13684  01519E  07E7               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 13685  0151A0                     l579:
 13686  0151A0  0100               	movlb	0	; () banked
 13687  0151A2  51E6               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 13688  0151A4  0100               	movlb	0	; () banked
 13689  0151A6  11E7               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 13690  0151A8  B4D8               	btfsc	status,2,c
 13691  0151AA  0012               	return	
 13692  0151AC  D7F2               	goto	l6559
 13693  0151AE                     __end_of_delay_ms:
 13694                           	opt stack 0
 13695                           tblptru	equ	0xFF8
 13696                           tblptrh	equ	0xFF7
 13697                           tblptrl	equ	0xFF6
 13698                           tablat	equ	0xFF5
 13699                           prodh	equ	0xFF4
 13700                           prodl	equ	0xFF3
 13701                           intcon	equ	0xFF2
 13702                           postinc0	equ	0xFEE
 13703                           wreg	equ	0xFE8
 13704                           indf2	equ	0xFDF
 13705                           postinc2	equ	0xFDE
 13706                           fsr2h	equ	0xFDA
 13707                           fsr2l	equ	0xFD9
 13708                           status	equ	0xFD8
 13709                           
 13710 ;; *************** function ___wmul *****************
 13711 ;; Defined at:
 13712 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  multiplier      2   14[BANK0 ] unsigned int 
 13715 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;  product         2   18[BANK0 ] unsigned int 
 13718 ;; Return value:  Size  Location     Type
 13719 ;;                  2   14[BANK0 ] unsigned int 
 13720 ;; Registers used:
 13721 ;;		wreg, status,2, status,0, prodl, prodh
 13722 ;; Tracked objects:
 13723 ;;		On entry : 0/0
 13724 ;;		On exit  : 0/0
 13725 ;;		Unchanged: 0/0
 13726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13731 ;;Total ram usage:        6 bytes
 13732 ;; Hardware stack levels used:    1
 13733 ;; Hardware stack levels required when called:    3
 13734 ;; This function calls:
 13735 ;;		Nothing
 13736 ;; This function is called by:
 13737 ;;		_delay_ms
 13738 ;;		_sprintf
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742                           	psect	text37
 13743  0151E6                     __ptext37:
 13744                           	opt stack 0
 13745  0151E6                     ___wmul:
 13746                           	opt stack 26
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;incstack = 0
 13750  0151E6  0100               	movlb	0	; () banked
 13751  0151E8  516E               	movf	___wmul@multiplier& (0+255),w,b
 13752  0151EA  0100               	movlb	0	; () banked
 13753  0151EC  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13754  0151EE  CFF3 F072          	movff	prodl,___wmul@product
 13755  0151F2  CFF4 F073          	movff	prodh,___wmul@product+1
 13756  0151F6  0100               	movlb	0	; () banked
 13757  0151F8  516E               	movf	___wmul@multiplier& (0+255),w,b
 13758  0151FA  0100               	movlb	0	; () banked
 13759  0151FC  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13760  0151FE  50F3               	movf	prodl,w,c
 13761  015200  0100               	movlb	0	; () banked
 13762  015202  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13763  015204  0100               	movlb	0	; () banked
 13764  015206  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13765  015208  0100               	movlb	0	; () banked
 13766  01520A  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13767  01520C  50F3               	movf	prodl,w,c
 13768  01520E  0100               	movlb	0	; () banked
 13769  015210  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13770                           
 13771                           ; BSR set to: 0
 13772  015212  C072  F06E         	movff	___wmul@product,?___wmul
 13773  015216  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 13774  01521A  0012               	return	
 13775  01521C                     __end_of___wmul:
 13776                           	opt stack 0
 13777                           tblptru	equ	0xFF8
 13778                           tblptrh	equ	0xFF7
 13779                           tblptrl	equ	0xFF6
 13780                           tablat	equ	0xFF5
 13781                           prodh	equ	0xFF4
 13782                           prodl	equ	0xFF3
 13783                           intcon	equ	0xFF2
 13784                           postinc0	equ	0xFEE
 13785                           wreg	equ	0xFE8
 13786                           indf2	equ	0xFDF
 13787                           postinc2	equ	0xFDE
 13788                           fsr2h	equ	0xFDA
 13789                           fsr2l	equ	0xFD9
 13790                           status	equ	0xFD8
 13791                           
 13792 ;; *************** function _Joystick_Polling *****************
 13793 ;; Defined at:
 13794 ;;		line 265 in file "RemoteCan.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;		None
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;  i               1   15[BANK0 ] unsigned char 
 13799 ;; Return value:  Size  Location     Type
 13800 ;;		None               void
 13801 ;; Registers used:
 13802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13803 ;; Tracked objects:
 13804 ;;		On entry : 0/0
 13805 ;;		On exit  : 0/0
 13806 ;;		Unchanged: 0/0
 13807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13812 ;;Total ram usage:        2 bytes
 13813 ;; Hardware stack levels used:    1
 13814 ;; Hardware stack levels required when called:    3
 13815 ;; This function calls:
 13816 ;;		Nothing
 13817 ;; This function is called by:
 13818 ;;		_main
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           	psect	text38
 13823  01505C                     __ptext38:
 13824                           	opt stack 0
 13825  01505C                     _Joystick_Polling:
 13826                           	opt stack 27
 13827                           
 13828                           ;RemoteCan.c: 266: for (unsigned char i = 0; i < 2; i++) {
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;incstack = 0
 13832  01505C  0E00               	movlw	0
 13833  01505E  0100               	movlb	0	; () banked
 13834  015060  6F6F               	movwf	Joystick_Polling@i& (0+255),b
 13835  015062                     l8593:
 13836                           
 13837                           ; BSR set to: 0
 13838  015062  0E01               	movlw	1
 13839  015064  0100               	movlb	0	; () banked
 13840  015066  656F               	cpfsgt	Joystick_Polling@i& (0+255),b
 13841  015068  D001               	goto	l801
 13842  01506A  0012               	return	
 13843  01506C                     l801:
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;RemoteCan.c: 267: ADCON0bits.GO = 1;
 13847  01506C  82C2               	bsf	4034,1,c	;volatile
 13848  01506E                     l803:
 13849  01506E  B2C2               	btfsc	4034,1,c	;volatile
 13850  015070  D7FE               	goto	l803
 13851                           
 13852                           ;RemoteCan.c: 269: JoystickValues[i] = ADRESH;
 13853  015072  0100               	movlb	0	; () banked
 13854  015074  516F               	movf	Joystick_Polling@i& (0+255),w,b
 13855  015076  0D01               	mullw	1
 13856  015078  0EE4               	movlw	low _JoystickValues
 13857  01507A  24F3               	addwf	prodl,w,c
 13858  01507C  6ED9               	movwf	fsr2l,c
 13859  01507E  0E00               	movlw	high _JoystickValues
 13860  015080  20F4               	addwfc	prodh,w,c
 13861  015082  6EDA               	movwf	fsr2h,c
 13862  015084  CFC4 FFDF          	movff	4036,indf2	;volatile
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;RemoteCan.c: 270: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 13866  015088  A4C2               	btfss	4034,2,c	;volatile
 13867  01508A  D002               	goto	u11560
 13868  01508C  0E01               	movlw	1
 13869  01508E  D001               	goto	u11566
 13870  015090                     u11560:
 13871  015090  0E00               	movlw	0
 13872  015092                     u11566:
 13873  015092  0AFF               	xorlw	255
 13874  015094  0100               	movlb	0	; () banked
 13875  015096  6F6E               	movwf	??_Joystick_Polling& (0+255),b
 13876  015098  0100               	movlb	0	; () banked
 13877  01509A  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 13878  01509C  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 13879  01509E  50C2               	movf	4034,w,c	;volatile
 13880  0150A0  0100               	movlb	0	; () banked
 13881  0150A2  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 13882  0150A4  0BFB               	andlw	-5
 13883  0150A6  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 13884  0150A8  6EC2               	movwf	4034,c	;volatile
 13885                           
 13886                           ; BSR set to: 0
 13887  0150AA  0100               	movlb	0	; () banked
 13888  0150AC  2B6F               	incf	Joystick_Polling@i& (0+255),f,b
 13889  0150AE  D7D9               	goto	l8593
 13890  0150B0                     __end_of_Joystick_Polling:
 13891                           	opt stack 0
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           postinc0	equ	0xFEE
 13900                           wreg	equ	0xFE8
 13901                           indf2	equ	0xFDF
 13902                           postinc2	equ	0xFDE
 13903                           fsr2h	equ	0xFDA
 13904                           fsr2l	equ	0xFD9
 13905                           status	equ	0xFD8
 13906                           
 13907 ;; *************** function _CAN_interpreter *****************
 13908 ;; Defined at:
 13909 ;;		line 216 in file "RemoteCan.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;		None
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;		None
 13914 ;; Return value:  Size  Location     Type
 13915 ;;		None               void
 13916 ;; Registers used:
 13917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/0
 13920 ;;		On exit  : 0/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;Total ram usage:        4 bytes
 13928 ;; Hardware stack levels used:    1
 13929 ;; Hardware stack levels required when called:    4
 13930 ;; This function calls:
 13931 ;;		_CANisTxReady
 13932 ;;		_CANsendMessage
 13933 ;;		___xxtofl
 13934 ;; This function is called by:
 13935 ;;		_main
 13936 ;; This function uses a non-reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text39
 13940  0147A8                     __ptext39:
 13941                           	opt stack 0
 13942  0147A8                     _CAN_interpreter:
 13943                           	opt stack 26
 13944                           
 13945                           ;RemoteCan.c: 218: if (id == 0b00000000010) {
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;incstack = 0
 13949  0147A8  0E02               	movlw	2
 13950  0147AA  180B               	xorwf	_id,w,c	;volatile
 13951  0147AC  100C               	iorwf	_id+1,w,c	;volatile
 13952  0147AE  100D               	iorwf	_id+2,w,c	;volatile
 13953  0147B0  100E               	iorwf	_id+3,w,c	;volatile
 13954  0147B2  A4D8               	btfss	status,2,c
 13955  0147B4  D037               	goto	l8633
 13956                           
 13957                           ;RemoteCan.c: 219: if (RTR_Flag == 1) {
 13958  0147B6  A447               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 13959  0147B8  D02A               	goto	l8623
 13960                           
 13961                           ;RemoteCan.c: 220: pr_time_4 = time_counter;
 13962  0147BA  C0E0  F00F         	movff	_time_counter,_pr_time_4	;volatile
 13963  0147BE  C0E1  F010         	movff	_time_counter+1,_pr_time_4+1	;volatile
 13964  0147C2  C0E2  F011         	movff	_time_counter+2,_pr_time_4+2	;volatile
 13965  0147C6  C0E3  F012         	movff	_time_counter+3,_pr_time_4+3	;volatile
 13966                           
 13967                           ;RemoteCan.c: 221: data[0] = 0x03;
 13968  0147CA  0E03               	movlw	3
 13969  0147CC  6E28               	movwf	_data,c
 13970  0147CE                     l8613:
 13971  0147CE  EC82  F0A9         	call	_CANisTxReady	;wreg free
 13972  0147D2  06E8               	decf	wreg,f,c
 13973  0147D4  A4D8               	btfss	status,2,c
 13974  0147D6  D7FB               	goto	l8613
 13975                           
 13976                           ;RemoteCan.c: 223: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 13977  0147D8  0E02               	movlw	2
 13978  0147DA  0100               	movlb	0	; () banked
 13979  0147DC  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 13980  0147DE  0E00               	movlw	0
 13981  0147E0  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 13982  0147E2  0E00               	movlw	0
 13983  0147E4  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 13984  0147E6  0E00               	movlw	0
 13985  0147E8  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 13986  0147EA  0E28               	movlw	low _data
 13987  0147EC  0100               	movlb	0	; () banked
 13988  0147EE  6F72               	movwf	CANsendMessage@data& (0+255),b
 13989  0147F0  0E00               	movlw	high _data
 13990  0147F2  0100               	movlb	0	; () banked
 13991  0147F4  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 13992  0147F6  0E08               	movlw	8
 13993  0147F8  0100               	movlb	0	; () banked
 13994  0147FA  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 13995  0147FC  0EBC               	movlw	188
 13996  0147FE  0100               	movlb	0	; () banked
 13997  014800  6F75               	movwf	CANsendMessage@flags& (0+255),b
 13998  014802  ECCD  F089         	call	_CANsendMessage	;wreg free
 13999                           
 14000                           ;RemoteCan.c: 224: MotoreFlag = 1;
 14001  014806  8247               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 14002                           
 14003                           ;RemoteCan.c: 225: AbsFlag = 0;
 14004  014808  9047               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 14005                           
 14006                           ;RemoteCan.c: 226: SterzoFlag = 0;
 14007  01480A  9647               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 14008                           
 14009                           ;RemoteCan.c: 227: } else {
 14010  01480C  D00B               	goto	l8633
 14011  01480E                     l8623:
 14012                           
 14013                           ;RemoteCan.c: 228: if (data[0] == 0x01) {
 14014  01480E  0428               	decf	_data,w,c
 14015  014810  A4D8               	btfss	status,2,c
 14016  014812  D002               	goto	l8627
 14017                           
 14018                           ;RemoteCan.c: 229: AbsFlag = 1;
 14019  014814  8047               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 14020                           
 14021                           ;RemoteCan.c: 230: PORTCbits.RC5 = 0;
 14022  014816  9A82               	bcf	3970,5,c	;volatile
 14023  014818                     l8627:
 14024                           
 14025                           ;RemoteCan.c: 231: }
 14026                           ;RemoteCan.c: 232: if (data[0] == 0x02) {
 14027  014818  0E02               	movlw	2
 14028  01481A  1828               	xorwf	_data,w,c
 14029  01481C  A4D8               	btfss	status,2,c
 14030  01481E  D002               	goto	l8633
 14031                           
 14032                           ;RemoteCan.c: 233: SterzoFlag = 1;
 14033  014820  8647               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 14034                           
 14035                           ;RemoteCan.c: 234: PORTCbits.RC4 = 0;
 14036  014822  9882               	bcf	3970,4,c	;volatile
 14037  014824                     l8633:
 14038                           
 14039                           ;RemoteCan.c: 239: }
 14040                           ;RemoteCan.c: 240: }
 14041                           ;RemoteCan.c: 242: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 14042  014824  0E06               	movlw	6
 14043  014826  180B               	xorwf	_id,w,c	;volatile
 14044  014828  100C               	iorwf	_id+1,w,c	;volatile
 14045  01482A  100D               	iorwf	_id+2,w,c	;volatile
 14046  01482C  100E               	iorwf	_id+3,w,c	;volatile
 14047  01482E  B4D8               	btfsc	status,2,c
 14048  014830  B447               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 14049  014832  D037               	goto	l8645
 14050                           
 14051                           ;RemoteCan.c: 243: left_speed = data[1];
 14052  014834  C029  F013         	movff	_data+1,_left_speed
 14053  014838  6A14               	clrf	_left_speed+1,c
 14054                           
 14055                           ;RemoteCan.c: 244: left_speed = ((left_speed << 8) | (data[0]));
 14056  01483A  5013               	movf	_left_speed,w,c
 14057  01483C  0100               	movlb	0	; () banked
 14058  01483E  6F7E               	movwf	??_CAN_interpreter& (0+255),b
 14059  014840  5028               	movf	_data,w,c
 14060  014842  6E13               	movwf	_left_speed,c
 14061  014844  C07E  F014         	movff	??_CAN_interpreter,_left_speed+1
 14062                           
 14063                           ; BSR set to: 0
 14064                           ;RemoteCan.c: 245: right_speed = data[3];
 14065  014848  C02B  F015         	movff	_data+3,_right_speed
 14066  01484C  6A16               	clrf	_right_speed+1,c
 14067                           
 14068                           ;RemoteCan.c: 246: right_speed = ((right_speed << 8) | (data[2]));
 14069  01484E  5015               	movf	_right_speed,w,c
 14070  014850  0100               	movlb	0	; () banked
 14071  014852  6F7E               	movwf	??_CAN_interpreter& (0+255),b
 14072  014854  502A               	movf	_data+2,w,c
 14073  014856  6E15               	movwf	_right_speed,c
 14074  014858  C07E  F016         	movff	??_CAN_interpreter,_right_speed+1
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;RemoteCan.c: 247: actual_speed = (right_speed+left_speed)/2;
 14078  01485C  5013               	movf	_left_speed,w,c
 14079  01485E  2415               	addwf	_right_speed,w,c
 14080  014860  0100               	movlb	0	; () banked
 14081  014862  6F7E               	movwf	??_CAN_interpreter& (0+255),b
 14082  014864  5014               	movf	_left_speed+1,w,c
 14083  014866  2016               	addwfc	_right_speed+1,w,c
 14084  014868  0100               	movlb	0	; () banked
 14085  01486A  6F7F               	movwf	(??_CAN_interpreter+1)& (0+255),b
 14086  01486C  90D8               	bcf	status,0,c
 14087  01486E  0100               	movlb	0	; () banked
 14088  014870  317F               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 14089  014872  0100               	movlb	0	; () banked
 14090  014874  6F81               	movwf	(??_CAN_interpreter+3)& (0+255),b
 14091  014876  0100               	movlb	0	; () banked
 14092  014878  317E               	rrcf	??_CAN_interpreter& (0+255),w,b
 14093  01487A  0100               	movlb	0	; () banked
 14094  01487C  6F80               	movwf	(??_CAN_interpreter+2)& (0+255),b
 14095  01487E  C080  F06E         	movff	??_CAN_interpreter+2,___xxtofl@val
 14096  014882  C081  F06F         	movff	??_CAN_interpreter+3,___xxtofl@val+1
 14097  014886  0100               	movlb	0	; () banked
 14098  014888  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
 14099  01488A  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
 14100  01488C  0E00               	movlw	0
 14101  01488E  EC6B  F09E         	call	___xxtofl
 14102  014892  C06E  F007         	movff	?___xxtofl,_actual_speed
 14103  014896  C06F  F008         	movff	?___xxtofl+1,_actual_speed+1
 14104  01489A  C070  F009         	movff	?___xxtofl+2,_actual_speed+2
 14105  01489E  C071  F00A         	movff	?___xxtofl+3,_actual_speed+3
 14106  0148A2                     l8645:
 14107                           
 14108                           ;RemoteCan.c: 248: }
 14109                           ;RemoteCan.c: 250: if (id == 0b00000001001) {
 14110  0148A2  0E09               	movlw	9
 14111  0148A4  180B               	xorwf	_id,w,c	;volatile
 14112  0148A6  100C               	iorwf	_id+1,w,c	;volatile
 14113  0148A8  100D               	iorwf	_id+2,w,c	;volatile
 14114  0148AA  100E               	iorwf	_id+3,w,c	;volatile
 14115  0148AC  A4D8               	btfss	status,2,c
 14116  0148AE  0012               	return	
 14117                           
 14118                           ;RemoteCan.c: 251: battery = data[0];
 14119  0148B0  C028  F017         	movff	_data,_battery	;volatile
 14120  0148B4  0012               	return	
 14121  0148B6                     __end_of_CAN_interpreter:
 14122                           	opt stack 0
 14123                           tblptru	equ	0xFF8
 14124                           tblptrh	equ	0xFF7
 14125                           tblptrl	equ	0xFF6
 14126                           tablat	equ	0xFF5
 14127                           prodh	equ	0xFF4
 14128                           prodl	equ	0xFF3
 14129                           intcon	equ	0xFF2
 14130                           postinc0	equ	0xFEE
 14131                           wreg	equ	0xFE8
 14132                           indf2	equ	0xFDF
 14133                           postinc2	equ	0xFDE
 14134                           fsr2h	equ	0xFDA
 14135                           fsr2l	equ	0xFD9
 14136                           status	equ	0xFD8
 14137                           
 14138 ;; *************** function ___xxtofl *****************
 14139 ;; Defined at:
 14140 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;  sign            1    wreg     unsigned char 
 14143 ;;  val             4   14[BANK0 ] long 
 14144 ;; Auto vars:     Size  Location     Type
 14145 ;;  sign            1   22[BANK0 ] unsigned char 
 14146 ;;  arg             4   24[BANK0 ] unsigned long 
 14147 ;;  exp             1   23[BANK0 ] unsigned char 
 14148 ;; Return value:  Size  Location     Type
 14149 ;;                  4   14[BANK0 ] unsigned char 
 14150 ;; Registers used:
 14151 ;;		wreg, status,2, status,0
 14152 ;; Tracked objects:
 14153 ;;		On entry : 0/0
 14154 ;;		On exit  : 0/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14157 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;Total ram usage:       14 bytes
 14162 ;; Hardware stack levels used:    1
 14163 ;; Hardware stack levels required when called:    3
 14164 ;; This function calls:
 14165 ;;		Nothing
 14166 ;; This function is called by:
 14167 ;;		_main
 14168 ;;		_CAN_interpreter
 14169 ;;		_sprintf
 14170 ;; This function uses a non-reentrant model
 14171 ;;
 14172                           
 14173                           	psect	text40
 14174  013CD6                     __ptext40:
 14175                           	opt stack 0
 14176  013CD6                     ___xxtofl:
 14177                           	opt stack 27
 14178                           
 14179                           ;incstack = 0
 14180                           ;___xxtofl@sign stored from wreg
 14181  013CD6  0100               	movlb	0	; () banked
 14182  013CD8  6F76               	movwf	___xxtofl@sign& (0+255),b
 14183  013CDA  0100               	movlb	0	; () banked
 14184  013CDC  5176               	movf	___xxtofl@sign& (0+255),w,b
 14185  013CDE  0100               	movlb	0	; () banked
 14186  013CE0  B4D8               	btfsc	status,2,c
 14187  013CE2  D01E               	goto	l1507
 14188                           
 14189                           ; BSR set to: 0
 14190  013CE4  0100               	movlb	0	; () banked
 14191  013CE6  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14192  013CE8  D01B               	goto	l1507
 14193                           
 14194                           ; BSR set to: 0
 14195  013CEA  C06E  F072         	movff	___xxtofl@val,??___xxtofl
 14196  013CEE  C06F  F073         	movff	___xxtofl@val+1,??___xxtofl+1
 14197  013CF2  C070  F074         	movff	___xxtofl@val+2,??___xxtofl+2
 14198  013CF6  C071  F075         	movff	___xxtofl@val+3,??___xxtofl+3
 14199  013CFA  0100               	movlb	0	; () banked
 14200  013CFC  1F72               	comf	??___xxtofl& (0+255),f,b
 14201  013CFE  1F73               	comf	(??___xxtofl+1)& (0+255),f,b
 14202  013D00  1F74               	comf	(??___xxtofl+2)& (0+255),f,b
 14203  013D02  1F75               	comf	(??___xxtofl+3)& (0+255),f,b
 14204  013D04  2B72               	incf	??___xxtofl& (0+255),f,b
 14205  013D06  0E00               	movlw	0
 14206  013D08  2373               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14207  013D0A  2374               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14208  013D0C  2375               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14209  013D0E  C072  F078         	movff	??___xxtofl,___xxtofl@arg
 14210  013D12  C073  F079         	movff	??___xxtofl+1,___xxtofl@arg+1
 14211  013D16  C074  F07A         	movff	??___xxtofl+2,___xxtofl@arg+2
 14212  013D1A  C075  F07B         	movff	??___xxtofl+3,___xxtofl@arg+3
 14213  013D1E  D008               	goto	l7735
 14214  013D20                     l1507:
 14215                           
 14216                           ; BSR set to: 0
 14217  013D20  C06E  F078         	movff	___xxtofl@val,___xxtofl@arg
 14218  013D24  C06F  F079         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14219  013D28  C070  F07A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14220  013D2C  C071  F07B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14221  013D30                     l7735:
 14222                           
 14223                           ; BSR set to: 0
 14224  013D30  0100               	movlb	0	; () banked
 14225  013D32  516E               	movf	___xxtofl@val& (0+255),w,b
 14226  013D34  0100               	movlb	0	; () banked
 14227  013D36  116F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14228  013D38  0100               	movlb	0	; () banked
 14229  013D3A  1170               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14230  013D3C  0100               	movlb	0	; () banked
 14231  013D3E  1171               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14232  013D40  A4D8               	btfss	status,2,c
 14233  013D42  D00A               	goto	l7741
 14234                           
 14235                           ; BSR set to: 0
 14236  013D44  0E00               	movlw	0
 14237  013D46  0100               	movlb	0	; () banked
 14238  013D48  6F6E               	movwf	?___xxtofl& (0+255),b
 14239  013D4A  0E00               	movlw	0
 14240  013D4C  6F6F               	movwf	(?___xxtofl+1)& (0+255),b
 14241  013D4E  0E00               	movlw	0
 14242  013D50  6F70               	movwf	(?___xxtofl+2)& (0+255),b
 14243  013D52  0E00               	movlw	0
 14244  013D54  6F71               	movwf	(?___xxtofl+3)& (0+255),b
 14245                           
 14246                           ; BSR set to: 0
 14247  013D56  0012               	return	
 14248  013D58                     l7741:
 14249                           
 14250                           ; BSR set to: 0
 14251  013D58  0E96               	movlw	150
 14252  013D5A  0100               	movlb	0	; () banked
 14253  013D5C  6F77               	movwf	___xxtofl@exp& (0+255),b
 14254  013D5E  D008               	goto	l7745
 14255  013D60                     l7743:
 14256                           
 14257                           ; BSR set to: 0
 14258  013D60  0100               	movlb	0	; () banked
 14259  013D62  2B77               	incf	___xxtofl@exp& (0+255),f,b
 14260  013D64  0100               	movlb	0	; () banked
 14261  013D66  90D8               	bcf	status,0,c
 14262  013D68  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14263  013D6A  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14264  013D6C  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14265  013D6E  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 14266  013D70                     l7745:
 14267                           
 14268                           ; BSR set to: 0
 14269  013D70  0E00               	movlw	0
 14270  013D72  0100               	movlb	0	; () banked
 14271  013D74  1578               	andwf	___xxtofl@arg& (0+255),w,b
 14272  013D76  0100               	movlb	0	; () banked
 14273  013D78  6F72               	movwf	??___xxtofl& (0+255),b
 14274  013D7A  0E00               	movlw	0
 14275  013D7C  0100               	movlb	0	; () banked
 14276  013D7E  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14277  013D80  0100               	movlb	0	; () banked
 14278  013D82  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 14279  013D84  0E00               	movlw	0
 14280  013D86  0100               	movlb	0	; () banked
 14281  013D88  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14282  013D8A  0100               	movlb	0	; () banked
 14283  013D8C  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 14284  013D8E  0EFE               	movlw	254
 14285  013D90  0100               	movlb	0	; () banked
 14286  013D92  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14287  013D94  0100               	movlb	0	; () banked
 14288  013D96  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 14289  013D98  0100               	movlb	0	; () banked
 14290  013D9A  5172               	movf	??___xxtofl& (0+255),w,b
 14291  013D9C  0100               	movlb	0	; () banked
 14292  013D9E  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14293  013DA0  0100               	movlb	0	; () banked
 14294  013DA2  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14295  013DA4  0100               	movlb	0	; () banked
 14296  013DA6  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14297  013DA8  B4D8               	btfsc	status,2,c
 14298  013DAA  D010               	goto	l1514
 14299  013DAC  D7D9               	goto	l7743
 14300  013DAE                     l7747:
 14301                           
 14302                           ; BSR set to: 0
 14303  013DAE  0100               	movlb	0	; () banked
 14304  013DB0  2B77               	incf	___xxtofl@exp& (0+255),f,b
 14305                           
 14306                           ; BSR set to: 0
 14307  013DB2  0E01               	movlw	1
 14308  013DB4  0100               	movlb	0	; () banked
 14309  013DB6  2778               	addwf	___xxtofl@arg& (0+255),f,b
 14310  013DB8  0E00               	movlw	0
 14311  013DBA  2379               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14312  013DBC  237A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14313  013DBE  237B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14314                           
 14315                           ; BSR set to: 0
 14316  013DC0  0100               	movlb	0	; () banked
 14317  013DC2  90D8               	bcf	status,0,c
 14318  013DC4  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14319  013DC6  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14320  013DC8  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14321  013DCA  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 14322  013DCC                     l1514:
 14323                           
 14324                           ; BSR set to: 0
 14325  013DCC  0E00               	movlw	0
 14326  013DCE  0100               	movlb	0	; () banked
 14327  013DD0  1578               	andwf	___xxtofl@arg& (0+255),w,b
 14328  013DD2  0100               	movlb	0	; () banked
 14329  013DD4  6F72               	movwf	??___xxtofl& (0+255),b
 14330  013DD6  0E00               	movlw	0
 14331  013DD8  0100               	movlb	0	; () banked
 14332  013DDA  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14333  013DDC  0100               	movlb	0	; () banked
 14334  013DDE  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 14335  013DE0  0E00               	movlw	0
 14336  013DE2  0100               	movlb	0	; () banked
 14337  013DE4  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14338  013DE6  0100               	movlb	0	; () banked
 14339  013DE8  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 14340  013DEA  0EFF               	movlw	255
 14341  013DEC  0100               	movlb	0	; () banked
 14342  013DEE  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14343  013DF0  0100               	movlb	0	; () banked
 14344  013DF2  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 14345  013DF4  0100               	movlb	0	; () banked
 14346  013DF6  5172               	movf	??___xxtofl& (0+255),w,b
 14347  013DF8  0100               	movlb	0	; () banked
 14348  013DFA  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14349  013DFC  0100               	movlb	0	; () banked
 14350  013DFE  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14351  013E00  0100               	movlb	0	; () banked
 14352  013E02  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14353  013E04  B4D8               	btfsc	status,2,c
 14354  013E06  D009               	goto	l7755
 14355  013E08  D7D2               	goto	l7747
 14356  013E0A                     l7753:
 14357                           
 14358                           ; BSR set to: 0
 14359  013E0A  0100               	movlb	0	; () banked
 14360  013E0C  0777               	decf	___xxtofl@exp& (0+255),f,b
 14361  013E0E  0100               	movlb	0	; () banked
 14362  013E10  90D8               	bcf	status,0,c
 14363  013E12  3778               	rlcf	___xxtofl@arg& (0+255),f,b
 14364  013E14  3779               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14365  013E16  377A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14366  013E18  377B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14367  013E1A                     l7755:
 14368                           
 14369                           ; BSR set to: 0
 14370  013E1A  0100               	movlb	0	; () banked
 14371  013E1C  BF7A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14372  013E1E  D004               	goto	l1521
 14373                           
 14374                           ; BSR set to: 0
 14375  013E20  0E02               	movlw	2
 14376  013E22  0100               	movlb	0	; () banked
 14377  013E24  6177               	cpfslt	___xxtofl@exp& (0+255),b
 14378  013E26  D7F1               	goto	l7753
 14379  013E28                     l1521:
 14380                           
 14381                           ; BSR set to: 0
 14382  013E28  0100               	movlb	0	; () banked
 14383  013E2A  B177               	btfsc	___xxtofl@exp& (0+255),0,b
 14384  013E2C  D009               	goto	l1522
 14385                           
 14386                           ; BSR set to: 0
 14387  013E2E  0EFF               	movlw	255
 14388  013E30  0100               	movlb	0	; () banked
 14389  013E32  1778               	andwf	___xxtofl@arg& (0+255),f,b
 14390  013E34  0EFF               	movlw	255
 14391  013E36  1779               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14392  013E38  0E7F               	movlw	127
 14393  013E3A  177A               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14394  013E3C  0EFF               	movlw	255
 14395  013E3E  177B               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14396  013E40                     l1522:
 14397                           
 14398                           ; BSR set to: 0
 14399  013E40  0100               	movlb	0	; () banked
 14400  013E42  90D8               	bcf	status,0,c
 14401  013E44  3377               	rrcf	___xxtofl@exp& (0+255),f,b
 14402  013E46  C077  F072         	movff	___xxtofl@exp,??___xxtofl
 14403  013E4A  0100               	movlb	0	; () banked
 14404  013E4C  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 14405  013E4E  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 14406  013E50  6B75               	clrf	(??___xxtofl+3)& (0+255),b
 14407  013E52  C072  F075         	movff	??___xxtofl,??___xxtofl+3
 14408  013E56  0100               	movlb	0	; () banked
 14409  013E58  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 14410  013E5A  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 14411  013E5C  6B72               	clrf	??___xxtofl& (0+255),b
 14412  013E5E  0100               	movlb	0	; () banked
 14413  013E60  5172               	movf	??___xxtofl& (0+255),w,b
 14414  013E62  0100               	movlb	0	; () banked
 14415  013E64  1378               	iorwf	___xxtofl@arg& (0+255),f,b
 14416  013E66  0100               	movlb	0	; () banked
 14417  013E68  5173               	movf	(??___xxtofl+1)& (0+255),w,b
 14418  013E6A  0100               	movlb	0	; () banked
 14419  013E6C  1379               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14420  013E6E  0100               	movlb	0	; () banked
 14421  013E70  5174               	movf	(??___xxtofl+2)& (0+255),w,b
 14422  013E72  0100               	movlb	0	; () banked
 14423  013E74  137A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14424  013E76  0100               	movlb	0	; () banked
 14425  013E78  5175               	movf	(??___xxtofl+3)& (0+255),w,b
 14426  013E7A  0100               	movlb	0	; () banked
 14427  013E7C  137B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14428                           
 14429                           ; BSR set to: 0
 14430  013E7E  0100               	movlb	0	; () banked
 14431  013E80  5176               	movf	___xxtofl@sign& (0+255),w,b
 14432  013E82  0100               	movlb	0	; () banked
 14433  013E84  B4D8               	btfsc	status,2,c
 14434  013E86  D005               	goto	l7767
 14435                           
 14436                           ; BSR set to: 0
 14437  013E88  0100               	movlb	0	; () banked
 14438  013E8A  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14439  013E8C  D002               	goto	l7767
 14440                           
 14441                           ; BSR set to: 0
 14442  013E8E  0100               	movlb	0	; () banked
 14443  013E90  8F7B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14444  013E92                     l7767:
 14445                           
 14446                           ; BSR set to: 0
 14447  013E92  C078  F06E         	movff	___xxtofl@arg,?___xxtofl
 14448  013E96  C079  F06F         	movff	___xxtofl@arg+1,?___xxtofl+1
 14449  013E9A  C07A  F070         	movff	___xxtofl@arg+2,?___xxtofl+2
 14450  013E9E  C07B  F071         	movff	___xxtofl@arg+3,?___xxtofl+3
 14451  013EA2  0012               	return	
 14452  013EA4                     __end_of___xxtofl:
 14453                           	opt stack 0
 14454                           tblptru	equ	0xFF8
 14455                           tblptrh	equ	0xFF7
 14456                           tblptrl	equ	0xFF6
 14457                           tablat	equ	0xFF5
 14458                           prodh	equ	0xFF4
 14459                           prodl	equ	0xFF3
 14460                           intcon	equ	0xFF2
 14461                           postinc0	equ	0xFEE
 14462                           wreg	equ	0xFE8
 14463                           indf2	equ	0xFDF
 14464                           postinc2	equ	0xFDE
 14465                           fsr2h	equ	0xFDA
 14466                           fsr2l	equ	0xFD9
 14467                           status	equ	0xFD8
 14468                           
 14469 ;; *************** function _CAN_Send *****************
 14470 ;; Defined at:
 14471 ;;		line 175 in file "RemoteCan.c"
 14472 ;; Parameters:    Size  Location     Type
 14473 ;;		None
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;		None
 14476 ;; Return value:  Size  Location     Type
 14477 ;;		None               void
 14478 ;; Registers used:
 14479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14480 ;; Tracked objects:
 14481 ;;		On entry : 0/0
 14482 ;;		On exit  : 0/0
 14483 ;;		Unchanged: 0/0
 14484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14489 ;;Total ram usage:        0 bytes
 14490 ;; Hardware stack levels used:    1
 14491 ;; Hardware stack levels required when called:    4
 14492 ;; This function calls:
 14493 ;;		_CANisTxReady
 14494 ;;		_CANsendMessage
 14495 ;; This function is called by:
 14496 ;;		_main
 14497 ;; This function uses a non-reentrant model
 14498 ;;
 14499                           
 14500                           	psect	text41
 14501  014DD0                     __ptext41:
 14502                           	opt stack 0
 14503  014DD0                     _CAN_Send:
 14504                           	opt stack 26
 14505  014DD0                     l8573:
 14506  014DD0  EC82  F0A9         	call	_CANisTxReady	;wreg free
 14507  014DD4  0900               	iorlw	0
 14508  014DD6  B4D8               	btfsc	status,2,c
 14509  014DD8  D7FB               	goto	l8573
 14510                           
 14511                           ;RemoteCan.c: 177: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14512  014DDA  0E05               	movlw	5
 14513  014DDC  0100               	movlb	0	; () banked
 14514  014DDE  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 14515  014DE0  0E00               	movlw	0
 14516  014DE2  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14517  014DE4  0E00               	movlw	0
 14518  014DE6  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14519  014DE8  0E00               	movlw	0
 14520  014DEA  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14521  014DEC  0EEE               	movlw	low _data_steering
 14522  014DEE  0100               	movlb	0	; () banked
 14523  014DF0  6F72               	movwf	CANsendMessage@data& (0+255),b
 14524  014DF2  0E00               	movlw	high _data_steering
 14525  014DF4  0100               	movlb	0	; () banked
 14526  014DF6  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 14527  014DF8  0E08               	movlw	8
 14528  014DFA  0100               	movlb	0	; () banked
 14529  014DFC  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 14530  014DFE  0EBC               	movlw	188
 14531  014E00  0100               	movlb	0	; () banked
 14532  014E02  6F75               	movwf	CANsendMessage@flags& (0+255),b
 14533  014E04  ECCD  F089         	call	_CANsendMessage	;wreg free
 14534                           
 14535                           ;RemoteCan.c: 178: data_speed[0] = set_speed;
 14536  014E08  C0E8  F0ED         	movff	_set_speed,_data_speed	;volatile
 14537                           
 14538                           ;RemoteCan.c: 179: data_speed[1] = (set_speed >> 8);
 14539  014E0C  0100               	movlb	0	; () banked
 14540  014E0E  51E9               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 14541  014E10  0100               	movlb	0	; () banked
 14542  014E12  6FEE               	movwf	(_data_speed+1)& (0+255),b
 14543                           
 14544                           ; BSR set to: 0
 14545                           ;RemoteCan.c: 180: data_speed[2] = dir;
 14546  014E14  C0EA  F0EF         	movff	_dir,_data_speed+2	;volatile
 14547  014E18                     l8583:
 14548  014E18  EC82  F0A9         	call	_CANisTxReady	;wreg free
 14549  014E1C  0900               	iorlw	0
 14550  014E1E  B4D8               	btfsc	status,2,c
 14551  014E20  D7FB               	goto	l8583
 14552                           
 14553                           ;RemoteCan.c: 182: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14554  014E22  0E03               	movlw	3
 14555  014E24  0100               	movlb	0	; () banked
 14556  014E26  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 14557  014E28  0E00               	movlw	0
 14558  014E2A  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14559  014E2C  0E00               	movlw	0
 14560  014E2E  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14561  014E30  0E00               	movlw	0
 14562  014E32  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14563  014E34  0EED               	movlw	low _data_speed
 14564  014E36  0100               	movlb	0	; () banked
 14565  014E38  6F72               	movwf	CANsendMessage@data& (0+255),b
 14566  014E3A  0E00               	movlw	high _data_speed
 14567  014E3C  0100               	movlb	0	; () banked
 14568  014E3E  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 14569  014E40  0E08               	movlw	8
 14570  014E42  0100               	movlb	0	; () banked
 14571  014E44  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 14572  014E46  0EBC               	movlw	188
 14573  014E48  0100               	movlb	0	; () banked
 14574  014E4A  6F75               	movwf	CANsendMessage@flags& (0+255),b
 14575  014E4C  ECCD  F089         	call	_CANsendMessage	;wreg free
 14576  014E50                     l8587:
 14577  014E50  EC82  F0A9         	call	_CANisTxReady	;wreg free
 14578  014E54  0900               	iorlw	0
 14579  014E56  B4D8               	btfsc	status,2,c
 14580  014E58  D7FB               	goto	l8587
 14581                           
 14582                           ;RemoteCan.c: 184: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14583  014E5A  0E04               	movlw	4
 14584  014E5C  0100               	movlb	0	; () banked
 14585  014E5E  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 14586  014E60  0E00               	movlw	0
 14587  014E62  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14588  014E64  0E00               	movlw	0
 14589  014E66  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14590  014E68  0E00               	movlw	0
 14591  014E6A  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14592  014E6C  0EEC               	movlw	low _data_brake
 14593  014E6E  0100               	movlb	0	; () banked
 14594  014E70  6F72               	movwf	CANsendMessage@data& (0+255),b
 14595  014E72  0E00               	movlw	high _data_brake
 14596  014E74  0100               	movlb	0	; () banked
 14597  014E76  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 14598  014E78  0E08               	movlw	8
 14599  014E7A  0100               	movlb	0	; () banked
 14600  014E7C  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 14601  014E7E  0EBC               	movlw	188
 14602  014E80  0100               	movlb	0	; () banked
 14603  014E82  6F75               	movwf	CANsendMessage@flags& (0+255),b
 14604  014E84  ECCD  F089         	call	_CANsendMessage	;wreg free
 14605  014E88  0012               	return		;funcret
 14606  014E8A                     __end_of_CAN_Send:
 14607                           	opt stack 0
 14608                           tblptru	equ	0xFF8
 14609                           tblptrh	equ	0xFF7
 14610                           tblptrl	equ	0xFF6
 14611                           tablat	equ	0xFF5
 14612                           prodh	equ	0xFF4
 14613                           prodl	equ	0xFF3
 14614                           intcon	equ	0xFF2
 14615                           postinc0	equ	0xFEE
 14616                           wreg	equ	0xFE8
 14617                           indf2	equ	0xFDF
 14618                           postinc2	equ	0xFDE
 14619                           fsr2h	equ	0xFDA
 14620                           fsr2l	equ	0xFD9
 14621                           status	equ	0xFD8
 14622                           
 14623 ;; *************** function _CANsendMessage *****************
 14624 ;; Defined at:
 14625 ;;		line 293 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;  identifier      4   14[BANK0 ] unsigned long 
 14628 ;;  data            2   18[BANK0 ] PTR unsigned char 
 14629 ;;		 -> data_speed(1), data_brake(1), data_steering(1), data(1), 
 14630 ;;  dataLength      1   20[BANK0 ] unsigned char 
 14631 ;;  flags           1   21[BANK0 ] enum E16909
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;  tamp            4   26[BANK0 ] unsigned long 
 14634 ;; Return value:  Size  Location     Type
 14635 ;;		None               void
 14636 ;; Registers used:
 14637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14638 ;; Tracked objects:
 14639 ;;		On entry : 0/0
 14640 ;;		On exit  : 0/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14643 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;Total ram usage:       16 bytes
 14648 ;; Hardware stack levels used:    1
 14649 ;; Hardware stack levels required when called:    3
 14650 ;; This function calls:
 14651 ;;		Nothing
 14652 ;; This function is called by:
 14653 ;;		_CAN_Send
 14654 ;;		_CAN_interpreter
 14655 ;; This function uses a non-reentrant model
 14656 ;;
 14657                           
 14658                           	psect	text42
 14659  01139A                     __ptext42:
 14660                           	opt stack 0
 14661  01139A                     _CANsendMessage:
 14662                           	opt stack 26
 14663                           
 14664                           ;inc\CANlib.h: 295: unsigned long tamp;
 14665                           ;inc\CANlib.h: 297: if (TXB0CONbits.TXREQ == 0)
 14666                           
 14667                           ;incstack = 0
 14668  01139A  010F               	movlb	15	; () banked
 14669  01139C  B740               	btfsc	64,3,b	;volatile
 14670  01139E  D13F               	goto	l373
 14671                           
 14672                           ; BSR set to: 15
 14673                           ;inc\CANlib.h: 298: { TXB0DLC = dataLength;
 14674  0113A0  C074  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 14675                           
 14676                           ;inc\CANlib.h: 299: if (0b01000000 & flags)
 14677  0113A4  0100               	movlb	0	; () banked
 14678  0113A6  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 14679  0113A8  D003               	goto	l374
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;inc\CANlib.h: 300: TXB0DLCbits.TXRTR = 0x01;
 14683  0113AA  010F               	movlb	15	; () banked
 14684  0113AC  8D45               	bsf	69,6,b	;volatile
 14685  0113AE  D002               	goto	l375
 14686  0113B0                     l374:
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;inc\CANlib.h: 301: else
 14690                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x00;
 14691  0113B0  010F               	movlb	15	; () banked
 14692  0113B2  9D45               	bcf	69,6,b	;volatile
 14693  0113B4                     l375:
 14694                           
 14695                           ; BSR set to: 15
 14696                           ;inc\CANlib.h: 304: if (CAN_TX_FRAME_MASK & flags)
 14697  0113B4  0100               	movlb	0	; () banked
 14698  0113B6  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 14699  0113B8  D079               	goto	l376
 14700                           
 14701                           ; BSR set to: 0
 14702                           ;inc\CANlib.h: 305: {
 14703                           ;inc\CANlib.h: 307: tamp = identifier & 0x000000FF;
 14704  0113BA  0100               	movlb	0	; () banked
 14705  0113BC  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 14706  0113BE  0100               	movlb	0	; () banked
 14707  0113C0  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14708  0113C2  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14709  0113C4  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14710  0113C6  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;inc\CANlib.h: 308: TXB0EIDL = (unsigned char) tamp;
 14714  0113C8  C07A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;inc\CANlib.h: 310: tamp = identifier & 0x0000FF00;
 14718  0113CC  0E00               	movlw	0
 14719  0113CE  0100               	movlb	0	; () banked
 14720  0113D0  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 14721  0113D2  0100               	movlb	0	; () banked
 14722  0113D4  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14723  0113D6  0EFF               	movlw	255
 14724  0113D8  0100               	movlb	0	; () banked
 14725  0113DA  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 14726  0113DC  0100               	movlb	0	; () banked
 14727  0113DE  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 14728  0113E0  0E00               	movlw	0
 14729  0113E2  0100               	movlb	0	; () banked
 14730  0113E4  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 14731  0113E6  0100               	movlb	0	; () banked
 14732  0113E8  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 14733  0113EA  0E00               	movlw	0
 14734  0113EC  0100               	movlb	0	; () banked
 14735  0113EE  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 14736  0113F0  0100               	movlb	0	; () banked
 14737  0113F2  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 14738                           
 14739                           ; BSR set to: 0
 14740                           ;inc\CANlib.h: 311: tamp = tamp >> 8;
 14741  0113F4  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 14742  0113F8  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 14743  0113FC  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 14744  011400  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 14745  011404  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 14746  011408  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 14747  01140C  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 14748  011410  0100               	movlb	0	; () banked
 14749  011412  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 14750  011414  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 14751  011418  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14752  01141C  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14753  011420  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;inc\CANlib.h: 312: TXB0EIDH = (unsigned char) tamp;
 14757  011424  C07A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 14758                           
 14759                           ; BSR set to: 0
 14760                           ;inc\CANlib.h: 314: TXB0SIDL = 0x00;
 14761  011428  0E00               	movlw	0
 14762  01142A  010F               	movlb	15	; () banked
 14763  01142C  6F42               	movwf	66,b	;volatile
 14764                           
 14765                           ; BSR set to: 15
 14766                           ;inc\CANlib.h: 315: TXB0SIDLbits.EXIDE = 0x01;
 14767  01142E  010F               	movlb	15	; () banked
 14768  011430  8742               	bsf	66,3,b	;volatile
 14769                           
 14770                           ; BSR set to: 15
 14771                           ;inc\CANlib.h: 317: if (identifier & 0x00010000)
 14772  011432  0100               	movlb	0	; () banked
 14773  011434  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 14774  011436  D002               	goto	l377
 14775                           
 14776                           ; BSR set to: 0
 14777                           ;inc\CANlib.h: 318: TXB0SIDLbits.EID16 = 0x01;
 14778  011438  010F               	movlb	15	; () banked
 14779  01143A  8142               	bsf	66,0,b	;volatile
 14780  01143C                     l377:
 14781                           
 14782                           ;inc\CANlib.h: 319: if (identifier & 0x00020000)
 14783  01143C  0100               	movlb	0	; () banked
 14784  01143E  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 14785  011440  D002               	goto	l378
 14786                           
 14787                           ; BSR set to: 0
 14788                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID17 = 0x01;
 14789  011442  010F               	movlb	15	; () banked
 14790  011444  8342               	bsf	66,1,b	;volatile
 14791  011446                     l378:
 14792                           
 14793                           ;inc\CANlib.h: 321: if (identifier & 0x00040000)
 14794  011446  0100               	movlb	0	; () banked
 14795  011448  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 14796  01144A  D002               	goto	l379
 14797                           
 14798                           ; BSR set to: 0
 14799                           ;inc\CANlib.h: 322: TXB0SIDLbits.SID0 = 0x01;
 14800  01144C  010F               	movlb	15	; () banked
 14801  01144E  8B42               	bsf	66,5,b	;volatile
 14802  011450                     l379:
 14803                           
 14804                           ;inc\CANlib.h: 323: if (identifier & 0x00080000)
 14805  011450  0100               	movlb	0	; () banked
 14806  011452  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 14807  011454  D002               	goto	l380
 14808                           
 14809                           ; BSR set to: 0
 14810                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID1 = 0x01;
 14811  011456  010F               	movlb	15	; () banked
 14812  011458  8D42               	bsf	66,6,b	;volatile
 14813  01145A                     l380:
 14814                           
 14815                           ;inc\CANlib.h: 325: if (identifier & 0x00100000)
 14816  01145A  0100               	movlb	0	; () banked
 14817  01145C  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 14818  01145E  D002               	goto	l7855
 14819                           
 14820                           ; BSR set to: 0
 14821                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID2 = 0x01;
 14822  011460  010F               	movlb	15	; () banked
 14823  011462  8F42               	bsf	66,7,b	;volatile
 14824  011464                     l7855:
 14825                           
 14826                           ;inc\CANlib.h: 328: tamp = (identifier >> 21);
 14827  011464  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 14828  011468  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 14829  01146C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 14830  011470  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 14831  011474  0E16               	movlw	22
 14832  011476  D006               	goto	u10530
 14833  011478                     u10535:
 14834  011478  0100               	movlb	0	; () banked
 14835  01147A  90D8               	bcf	status,0,c
 14836  01147C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 14837  01147E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 14838  011480  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 14839  011482  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 14840  011484                     u10530:
 14841  011484  2EE8               	decfsz	wreg,f,c
 14842  011486  D7F8               	goto	u10535
 14843  011488  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 14844  01148C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14845  011490  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14846  011494  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;inc\CANlib.h: 329: tamp = tamp & 0x000000FF;
 14850  011498  0100               	movlb	0	; () banked
 14851  01149A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 14852  01149C  0100               	movlb	0	; () banked
 14853  01149E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14854  0114A0  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14855  0114A2  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14856  0114A4  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14857                           
 14858                           ; BSR set to: 0
 14859                           ;inc\CANlib.h: 330: TXB0SIDH = (unsigned char) tamp;
 14860  0114A6  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 14861                           
 14862                           ;inc\CANlib.h: 331: }
 14863  0114AA  D059               	goto	l7875
 14864  0114AC                     l376:
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;inc\CANlib.h: 333: else
 14868                           ;inc\CANlib.h: 335: {
 14869                           ;inc\CANlib.h: 336: TXB0SIDLbits.EXIDE = 0x00;
 14870  0114AC  010F               	movlb	15	; () banked
 14871  0114AE  9742               	bcf	66,3,b	;volatile
 14872                           
 14873                           ; BSR set to: 15
 14874                           ;inc\CANlib.h: 338: tamp = (identifier >> 3);
 14875  0114B0  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 14876  0114B4  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 14877  0114B8  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 14878  0114BC  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 14879  0114C0  0E04               	movlw	4
 14880  0114C2  D006               	goto	u10540
 14881  0114C4                     u10545:
 14882  0114C4  0100               	movlb	0	; () banked
 14883  0114C6  90D8               	bcf	status,0,c
 14884  0114C8  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 14885  0114CA  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 14886  0114CC  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 14887  0114CE  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 14888  0114D0                     u10540:
 14889  0114D0  2EE8               	decfsz	wreg,f,c
 14890  0114D2  D7F8               	goto	u10545
 14891  0114D4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 14892  0114D8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14893  0114DC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14894  0114E0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;inc\CANlib.h: 339: tamp = tamp & 0x000000FF;
 14898  0114E4  0100               	movlb	0	; () banked
 14899  0114E6  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 14900  0114E8  0100               	movlb	0	; () banked
 14901  0114EA  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14902  0114EC  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14903  0114EE  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14904  0114F0  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14905                           
 14906                           ; BSR set to: 0
 14907                           ;inc\CANlib.h: 340: TXB0SIDH = (unsigned char) tamp;
 14908  0114F2  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;inc\CANlib.h: 342: tamp = identifier & 0x00000007;
 14912  0114F6  0E07               	movlw	7
 14913  0114F8  0100               	movlb	0	; () banked
 14914  0114FA  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 14915  0114FC  0100               	movlb	0	; () banked
 14916  0114FE  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 14917  011500  0E00               	movlw	0
 14918  011502  0100               	movlb	0	; () banked
 14919  011504  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 14920  011506  0100               	movlb	0	; () banked
 14921  011508  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 14922  01150A  0E00               	movlw	0
 14923  01150C  0100               	movlb	0	; () banked
 14924  01150E  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 14925  011510  0100               	movlb	0	; () banked
 14926  011512  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 14927  011514  0E00               	movlw	0
 14928  011516  0100               	movlb	0	; () banked
 14929  011518  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 14930  01151A  0100               	movlb	0	; () banked
 14931  01151C  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;inc\CANlib.h: 343: tamp = tamp << 5;
 14935  01151E  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 14936  011522  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 14937  011526  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 14938  01152A  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 14939  01152E  0E05               	movlw	5
 14940  011530                     u10555:
 14941  011530  90D8               	bcf	status,0,c
 14942  011532  0100               	movlb	0	; () banked
 14943  011534  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 14944  011536  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 14945  011538  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 14946  01153A  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 14947  01153C  2EE8               	decfsz	wreg,f,c
 14948  01153E  D7F8               	goto	u10555
 14949  011540  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 14950  011544  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14951  011548  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14952  01154C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;inc\CANlib.h: 344: TXB0SIDL = TXB0SIDL & 0b00011111;
 14956  011550  010F               	movlb	15	; () banked
 14957  011552  5142               	movf	66,w,b	;volatile
 14958  011554  0B1F               	andlw	31
 14959  011556  010F               	movlb	15	; () banked
 14960  011558  6F42               	movwf	66,b	;volatile
 14961                           
 14962                           ; BSR set to: 15
 14963                           ;inc\CANlib.h: 345: TXB0SIDL = (unsigned char) tamp;
 14964  01155A  C07A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 14965  01155E                     l7875:
 14966                           
 14967                           ;inc\CANlib.h: 346: }
 14968                           ;inc\CANlib.h: 348: if (0b00000001 & flags)
 14969  01155E  0100               	movlb	0	; () banked
 14970  011560  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 14971  011562  D003               	goto	l383
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;inc\CANlib.h: 349: TXB0CONbits.TXPRI0 = 0x01;
 14975  011564  010F               	movlb	15	; () banked
 14976  011566  8140               	bsf	64,0,b	;volatile
 14977  011568  D002               	goto	l384
 14978  01156A                     l383:
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;inc\CANlib.h: 350: else
 14982                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x00;
 14983  01156A  010F               	movlb	15	; () banked
 14984  01156C  9140               	bcf	64,0,b	;volatile
 14985  01156E                     l384:
 14986                           
 14987                           ; BSR set to: 15
 14988                           ;inc\CANlib.h: 352: if (0b00000010 & flags)
 14989  01156E  0100               	movlb	0	; () banked
 14990  011570  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 14991  011572  D003               	goto	l385
 14992                           
 14993                           ; BSR set to: 0
 14994                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI1 = 0x01;
 14995  011574  010F               	movlb	15	; () banked
 14996  011576  8340               	bsf	64,1,b	;volatile
 14997  011578  D002               	goto	l7881
 14998  01157A                     l385:
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;inc\CANlib.h: 354: else
 15002                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x00;
 15003  01157A  010F               	movlb	15	; () banked
 15004  01157C  9340               	bcf	64,1,b	;volatile
 15005  01157E                     l7881:
 15006                           
 15007                           ; BSR set to: 15
 15008                           ;inc\CANlib.h: 357: TXB0D0 = data[0];
 15009  01157E  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 15010  011582  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15011  011586  50DF               	movf	indf2,w,c
 15012  011588  010F               	movlb	15	; () banked
 15013  01158A  6F46               	movwf	70,b	;volatile
 15014                           
 15015                           ; BSR set to: 15
 15016                           ;inc\CANlib.h: 358: TXB0D1 = data[1];
 15017  01158C  0100               	movlb	0	; () banked
 15018  01158E  EE20 F001          	lfsr	2,1
 15019  011592  5172               	movf	CANsendMessage@data& (0+255),w,b
 15020  011594  26D9               	addwf	fsr2l,f,c
 15021  011596  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15022  011598  22DA               	addwfc	fsr2h,f,c
 15023  01159A  50DF               	movf	indf2,w,c
 15024  01159C  010F               	movlb	15	; () banked
 15025  01159E  6F47               	movwf	71,b	;volatile
 15026                           
 15027                           ; BSR set to: 15
 15028                           ;inc\CANlib.h: 359: TXB0D2 = data[2];
 15029  0115A0  0100               	movlb	0	; () banked
 15030  0115A2  EE20 F002          	lfsr	2,2
 15031  0115A6  5172               	movf	CANsendMessage@data& (0+255),w,b
 15032  0115A8  26D9               	addwf	fsr2l,f,c
 15033  0115AA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15034  0115AC  22DA               	addwfc	fsr2h,f,c
 15035  0115AE  50DF               	movf	indf2,w,c
 15036  0115B0  010F               	movlb	15	; () banked
 15037  0115B2  6F48               	movwf	72,b	;volatile
 15038                           
 15039                           ; BSR set to: 15
 15040                           ;inc\CANlib.h: 360: TXB0D3 = data[3];
 15041  0115B4  0100               	movlb	0	; () banked
 15042  0115B6  EE20 F003          	lfsr	2,3
 15043  0115BA  5172               	movf	CANsendMessage@data& (0+255),w,b
 15044  0115BC  26D9               	addwf	fsr2l,f,c
 15045  0115BE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15046  0115C0  22DA               	addwfc	fsr2h,f,c
 15047  0115C2  50DF               	movf	indf2,w,c
 15048  0115C4  010F               	movlb	15	; () banked
 15049  0115C6  6F49               	movwf	73,b	;volatile
 15050                           
 15051                           ; BSR set to: 15
 15052                           ;inc\CANlib.h: 361: TXB0D4 = data[4];
 15053  0115C8  0100               	movlb	0	; () banked
 15054  0115CA  EE20 F004          	lfsr	2,4
 15055  0115CE  5172               	movf	CANsendMessage@data& (0+255),w,b
 15056  0115D0  26D9               	addwf	fsr2l,f,c
 15057  0115D2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15058  0115D4  22DA               	addwfc	fsr2h,f,c
 15059  0115D6  50DF               	movf	indf2,w,c
 15060  0115D8  010F               	movlb	15	; () banked
 15061  0115DA  6F4A               	movwf	74,b	;volatile
 15062                           
 15063                           ; BSR set to: 15
 15064                           ;inc\CANlib.h: 362: TXB0D5 = data[5];
 15065  0115DC  0100               	movlb	0	; () banked
 15066  0115DE  EE20 F005          	lfsr	2,5
 15067  0115E2  5172               	movf	CANsendMessage@data& (0+255),w,b
 15068  0115E4  26D9               	addwf	fsr2l,f,c
 15069  0115E6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15070  0115E8  22DA               	addwfc	fsr2h,f,c
 15071  0115EA  50DF               	movf	indf2,w,c
 15072  0115EC  010F               	movlb	15	; () banked
 15073  0115EE  6F4B               	movwf	75,b	;volatile
 15074                           
 15075                           ; BSR set to: 15
 15076                           ;inc\CANlib.h: 363: TXB0D6 = data[6];
 15077  0115F0  0100               	movlb	0	; () banked
 15078  0115F2  EE20 F006          	lfsr	2,6
 15079  0115F6  5172               	movf	CANsendMessage@data& (0+255),w,b
 15080  0115F8  26D9               	addwf	fsr2l,f,c
 15081  0115FA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15082  0115FC  22DA               	addwfc	fsr2h,f,c
 15083  0115FE  50DF               	movf	indf2,w,c
 15084  011600  010F               	movlb	15	; () banked
 15085  011602  6F4C               	movwf	76,b	;volatile
 15086                           
 15087                           ; BSR set to: 15
 15088                           ;inc\CANlib.h: 364: TXB0D7 = data[7];
 15089  011604  0100               	movlb	0	; () banked
 15090  011606  EE20 F007          	lfsr	2,7
 15091  01160A  5172               	movf	CANsendMessage@data& (0+255),w,b
 15092  01160C  26D9               	addwf	fsr2l,f,c
 15093  01160E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15094  011610  22DA               	addwfc	fsr2h,f,c
 15095  011612  50DF               	movf	indf2,w,c
 15096  011614  010F               	movlb	15	; () banked
 15097  011616  6F4D               	movwf	77,b	;volatile
 15098                           
 15099                           ; BSR set to: 15
 15100                           ;inc\CANlib.h: 366: TXB0CONbits.TXREQ = 0x01;
 15101  011618  010F               	movlb	15	; () banked
 15102  01161A  8740               	bsf	64,3,b	;volatile
 15103                           
 15104                           ; BSR set to: 15
 15105                           ;inc\CANlib.h: 367: return;
 15106  01161C  0012               	return	
 15107  01161E                     l373:
 15108                           
 15109                           ; BSR set to: 15
 15110                           ;inc\CANlib.h: 368: }
 15111                           ;inc\CANlib.h: 372: if (TXB1CONbits.TXREQ == 0)
 15112  01161E  010F               	movlb	15	; () banked
 15113  011620  B730               	btfsc	48,3,b	;volatile
 15114  011622  D13F               	goto	l388
 15115                           
 15116                           ; BSR set to: 15
 15117                           ;inc\CANlib.h: 373: { TXB1DLC = dataLength;
 15118  011624  C074  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 15119                           
 15120                           ;inc\CANlib.h: 375: if (0b01000000 & flags)
 15121  011628  0100               	movlb	0	; () banked
 15122  01162A  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 15123  01162C  D003               	goto	l389
 15124                           
 15125                           ; BSR set to: 0
 15126                           ;inc\CANlib.h: 376: TXB1DLCbits.TXRTR = 0x01;
 15127  01162E  010F               	movlb	15	; () banked
 15128  011630  8D35               	bsf	53,6,b	;volatile
 15129  011632  D002               	goto	l390
 15130  011634                     l389:
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;inc\CANlib.h: 377: else
 15134                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x00;
 15135  011634  010F               	movlb	15	; () banked
 15136  011636  9D35               	bcf	53,6,b	;volatile
 15137  011638                     l390:
 15138                           
 15139                           ; BSR set to: 15
 15140                           ;inc\CANlib.h: 380: if (CAN_TX_FRAME_MASK & flags)
 15141  011638  0100               	movlb	0	; () banked
 15142  01163A  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 15143  01163C  D079               	goto	l391
 15144                           
 15145                           ; BSR set to: 0
 15146                           ;inc\CANlib.h: 381: {
 15147                           ;inc\CANlib.h: 382: tamp = identifier & 0x000000FF;
 15148  01163E  0100               	movlb	0	; () banked
 15149  011640  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 15150  011642  0100               	movlb	0	; () banked
 15151  011644  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15152  011646  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15153  011648  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15154  01164A  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15155                           
 15156                           ; BSR set to: 0
 15157                           ;inc\CANlib.h: 383: TXB1EIDL = (unsigned char) tamp;
 15158  01164C  C07A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 15159                           
 15160                           ; BSR set to: 0
 15161                           ;inc\CANlib.h: 385: tamp = identifier & 0x0000FF00;
 15162  011650  0E00               	movlw	0
 15163  011652  0100               	movlb	0	; () banked
 15164  011654  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15165  011656  0100               	movlb	0	; () banked
 15166  011658  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15167  01165A  0EFF               	movlw	255
 15168  01165C  0100               	movlb	0	; () banked
 15169  01165E  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15170  011660  0100               	movlb	0	; () banked
 15171  011662  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15172  011664  0E00               	movlw	0
 15173  011666  0100               	movlb	0	; () banked
 15174  011668  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15175  01166A  0100               	movlb	0	; () banked
 15176  01166C  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15177  01166E  0E00               	movlw	0
 15178  011670  0100               	movlb	0	; () banked
 15179  011672  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15180  011674  0100               	movlb	0	; () banked
 15181  011676  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15182                           
 15183                           ; BSR set to: 0
 15184                           ;inc\CANlib.h: 386: tamp = tamp >> 8;
 15185  011678  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15186  01167C  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15187  011680  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15188  011684  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15189  011688  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 15190  01168C  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15191  011690  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15192  011694  0100               	movlb	0	; () banked
 15193  011696  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 15194  011698  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15195  01169C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15196  0116A0  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15197  0116A4  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15198                           
 15199                           ; BSR set to: 0
 15200                           ;inc\CANlib.h: 387: TXB1EIDH = (unsigned char) tamp;
 15201  0116A8  C07A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 15202                           
 15203                           ; BSR set to: 0
 15204                           ;inc\CANlib.h: 389: TXB1SIDL = 0x00;
 15205  0116AC  0E00               	movlw	0
 15206  0116AE  010F               	movlb	15	; () banked
 15207  0116B0  6F32               	movwf	50,b	;volatile
 15208                           
 15209                           ; BSR set to: 15
 15210                           ;inc\CANlib.h: 390: TXB1SIDLbits.EXIDE = 0x01;
 15211  0116B2  010F               	movlb	15	; () banked
 15212  0116B4  8732               	bsf	50,3,b	;volatile
 15213                           
 15214                           ; BSR set to: 15
 15215                           ;inc\CANlib.h: 392: if (identifier & 0x00010000)
 15216  0116B6  0100               	movlb	0	; () banked
 15217  0116B8  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15218  0116BA  D002               	goto	l392
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;inc\CANlib.h: 393: TXB1SIDLbits.EID16 = 0x01;
 15222  0116BC  010F               	movlb	15	; () banked
 15223  0116BE  8132               	bsf	50,0,b	;volatile
 15224  0116C0                     l392:
 15225                           
 15226                           ;inc\CANlib.h: 394: if (identifier & 0x00020000)
 15227  0116C0  0100               	movlb	0	; () banked
 15228  0116C2  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15229  0116C4  D002               	goto	l393
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID17 = 0x01;
 15233  0116C6  010F               	movlb	15	; () banked
 15234  0116C8  8332               	bsf	50,1,b	;volatile
 15235  0116CA                     l393:
 15236                           
 15237                           ;inc\CANlib.h: 396: if (identifier & 0x00040000)
 15238  0116CA  0100               	movlb	0	; () banked
 15239  0116CC  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15240  0116CE  D002               	goto	l394
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;inc\CANlib.h: 397: TXB1SIDLbits.SID0 = 0x01;
 15244  0116D0  010F               	movlb	15	; () banked
 15245  0116D2  8B32               	bsf	50,5,b	;volatile
 15246  0116D4                     l394:
 15247                           
 15248                           ;inc\CANlib.h: 398: if (identifier & 0x00080000)
 15249  0116D4  0100               	movlb	0	; () banked
 15250  0116D6  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15251  0116D8  D002               	goto	l395
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID1 = 0x01;
 15255  0116DA  010F               	movlb	15	; () banked
 15256  0116DC  8D32               	bsf	50,6,b	;volatile
 15257  0116DE                     l395:
 15258                           
 15259                           ;inc\CANlib.h: 400: if (identifier & 0x00100000)
 15260  0116DE  0100               	movlb	0	; () banked
 15261  0116E0  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15262  0116E2  D002               	goto	l7931
 15263                           
 15264                           ; BSR set to: 0
 15265                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID2 = 0x01;
 15266  0116E4  010F               	movlb	15	; () banked
 15267  0116E6  8F32               	bsf	50,7,b	;volatile
 15268  0116E8                     l7931:
 15269                           
 15270                           ;inc\CANlib.h: 403: tamp = (identifier >> 21);
 15271  0116E8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15272  0116EC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15273  0116F0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15274  0116F4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15275  0116F8  0E16               	movlw	22
 15276  0116FA  D006               	goto	u10660
 15277  0116FC                     u10665:
 15278  0116FC  0100               	movlb	0	; () banked
 15279  0116FE  90D8               	bcf	status,0,c
 15280  011700  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15281  011702  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15282  011704  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15283  011706  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15284  011708                     u10660:
 15285  011708  2EE8               	decfsz	wreg,f,c
 15286  01170A  D7F8               	goto	u10665
 15287  01170C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15288  011710  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15289  011714  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15290  011718  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;inc\CANlib.h: 404: tamp = tamp & 0x000000FF;
 15294  01171C  0100               	movlb	0	; () banked
 15295  01171E  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15296  011720  0100               	movlb	0	; () banked
 15297  011722  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15298  011724  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15299  011726  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15300  011728  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;inc\CANlib.h: 405: TXB1SIDH = (unsigned char) tamp;
 15304  01172A  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 15305                           
 15306                           ;inc\CANlib.h: 406: }
 15307  01172E  D059               	goto	l7951
 15308  011730                     l391:
 15309                           
 15310                           ; BSR set to: 0
 15311                           ;inc\CANlib.h: 408: else
 15312                           ;inc\CANlib.h: 410: {
 15313                           ;inc\CANlib.h: 411: TXB1SIDLbits.EXIDE = 0x00;
 15314  011730  010F               	movlb	15	; () banked
 15315  011732  9732               	bcf	50,3,b	;volatile
 15316                           
 15317                           ; BSR set to: 15
 15318                           ;inc\CANlib.h: 413: tamp = (identifier >> 3);
 15319  011734  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15320  011738  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15321  01173C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15322  011740  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15323  011744  0E04               	movlw	4
 15324  011746  D006               	goto	u10670
 15325  011748                     u10675:
 15326  011748  0100               	movlb	0	; () banked
 15327  01174A  90D8               	bcf	status,0,c
 15328  01174C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15329  01174E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15330  011750  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15331  011752  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15332  011754                     u10670:
 15333  011754  2EE8               	decfsz	wreg,f,c
 15334  011756  D7F8               	goto	u10675
 15335  011758  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15336  01175C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15337  011760  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15338  011764  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15339                           
 15340                           ; BSR set to: 0
 15341                           ;inc\CANlib.h: 414: tamp = tamp & 0x000000FF;
 15342  011768  0100               	movlb	0	; () banked
 15343  01176A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15344  01176C  0100               	movlb	0	; () banked
 15345  01176E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15346  011770  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15347  011772  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15348  011774  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15349                           
 15350                           ; BSR set to: 0
 15351                           ;inc\CANlib.h: 415: TXB1SIDH = (unsigned char) tamp;
 15352  011776  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 15353                           
 15354                           ; BSR set to: 0
 15355                           ;inc\CANlib.h: 417: tamp = identifier & 0x00000007;
 15356  01177A  0E07               	movlw	7
 15357  01177C  0100               	movlb	0	; () banked
 15358  01177E  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15359  011780  0100               	movlb	0	; () banked
 15360  011782  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15361  011784  0E00               	movlw	0
 15362  011786  0100               	movlb	0	; () banked
 15363  011788  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15364  01178A  0100               	movlb	0	; () banked
 15365  01178C  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15366  01178E  0E00               	movlw	0
 15367  011790  0100               	movlb	0	; () banked
 15368  011792  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15369  011794  0100               	movlb	0	; () banked
 15370  011796  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15371  011798  0E00               	movlw	0
 15372  01179A  0100               	movlb	0	; () banked
 15373  01179C  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15374  01179E  0100               	movlb	0	; () banked
 15375  0117A0  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;inc\CANlib.h: 418: tamp = tamp << 5;
 15379  0117A2  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15380  0117A6  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15381  0117AA  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15382  0117AE  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15383  0117B2  0E05               	movlw	5
 15384  0117B4                     u10685:
 15385  0117B4  90D8               	bcf	status,0,c
 15386  0117B6  0100               	movlb	0	; () banked
 15387  0117B8  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 15388  0117BA  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15389  0117BC  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15390  0117BE  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15391  0117C0  2EE8               	decfsz	wreg,f,c
 15392  0117C2  D7F8               	goto	u10685
 15393  0117C4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15394  0117C8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15395  0117CC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15396  0117D0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;inc\CANlib.h: 419: TXB1SIDL = TXB1SIDL & 0b00011111;
 15400  0117D4  010F               	movlb	15	; () banked
 15401  0117D6  5132               	movf	50,w,b	;volatile
 15402  0117D8  0B1F               	andlw	31
 15403  0117DA  010F               	movlb	15	; () banked
 15404  0117DC  6F32               	movwf	50,b	;volatile
 15405                           
 15406                           ; BSR set to: 15
 15407                           ;inc\CANlib.h: 420: TXB1SIDL = (unsigned char) tamp;
 15408  0117DE  C07A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 15409  0117E2                     l7951:
 15410                           
 15411                           ;inc\CANlib.h: 421: }
 15412                           ;inc\CANlib.h: 423: if (0b00000001 & flags)
 15413  0117E2  0100               	movlb	0	; () banked
 15414  0117E4  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 15415  0117E6  D003               	goto	l398
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;inc\CANlib.h: 424: TXB1CONbits.TXPRI0 = 0x01;
 15419  0117E8  010F               	movlb	15	; () banked
 15420  0117EA  8130               	bsf	48,0,b	;volatile
 15421  0117EC  D002               	goto	l399
 15422  0117EE                     l398:
 15423                           
 15424                           ; BSR set to: 0
 15425                           ;inc\CANlib.h: 425: else
 15426                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x00;
 15427  0117EE  010F               	movlb	15	; () banked
 15428  0117F0  9130               	bcf	48,0,b	;volatile
 15429  0117F2                     l399:
 15430                           
 15431                           ; BSR set to: 15
 15432                           ;inc\CANlib.h: 427: if (0b00000010 & flags)
 15433  0117F2  0100               	movlb	0	; () banked
 15434  0117F4  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 15435  0117F6  D003               	goto	l400
 15436                           
 15437                           ; BSR set to: 0
 15438                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI1 = 0x01;
 15439  0117F8  010F               	movlb	15	; () banked
 15440  0117FA  8330               	bsf	48,1,b	;volatile
 15441  0117FC  D002               	goto	l7957
 15442  0117FE                     l400:
 15443                           
 15444                           ; BSR set to: 0
 15445                           ;inc\CANlib.h: 429: else
 15446                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x00;
 15447  0117FE  010F               	movlb	15	; () banked
 15448  011800  9330               	bcf	48,1,b	;volatile
 15449  011802                     l7957:
 15450                           
 15451                           ; BSR set to: 15
 15452                           ;inc\CANlib.h: 432: TXB1D0 = data[0];
 15453  011802  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 15454  011806  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15455  01180A  50DF               	movf	indf2,w,c
 15456  01180C  010F               	movlb	15	; () banked
 15457  01180E  6F36               	movwf	54,b	;volatile
 15458                           
 15459                           ; BSR set to: 15
 15460                           ;inc\CANlib.h: 433: TXB1D1 = data[1];
 15461  011810  0100               	movlb	0	; () banked
 15462  011812  EE20 F001          	lfsr	2,1
 15463  011816  5172               	movf	CANsendMessage@data& (0+255),w,b
 15464  011818  26D9               	addwf	fsr2l,f,c
 15465  01181A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15466  01181C  22DA               	addwfc	fsr2h,f,c
 15467  01181E  50DF               	movf	indf2,w,c
 15468  011820  010F               	movlb	15	; () banked
 15469  011822  6F37               	movwf	55,b	;volatile
 15470                           
 15471                           ; BSR set to: 15
 15472                           ;inc\CANlib.h: 434: TXB1D2 = data[2];
 15473  011824  0100               	movlb	0	; () banked
 15474  011826  EE20 F002          	lfsr	2,2
 15475  01182A  5172               	movf	CANsendMessage@data& (0+255),w,b
 15476  01182C  26D9               	addwf	fsr2l,f,c
 15477  01182E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15478  011830  22DA               	addwfc	fsr2h,f,c
 15479  011832  50DF               	movf	indf2,w,c
 15480  011834  010F               	movlb	15	; () banked
 15481  011836  6F38               	movwf	56,b	;volatile
 15482                           
 15483                           ; BSR set to: 15
 15484                           ;inc\CANlib.h: 435: TXB1D3 = data[3];
 15485  011838  0100               	movlb	0	; () banked
 15486  01183A  EE20 F003          	lfsr	2,3
 15487  01183E  5172               	movf	CANsendMessage@data& (0+255),w,b
 15488  011840  26D9               	addwf	fsr2l,f,c
 15489  011842  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15490  011844  22DA               	addwfc	fsr2h,f,c
 15491  011846  50DF               	movf	indf2,w,c
 15492  011848  010F               	movlb	15	; () banked
 15493  01184A  6F39               	movwf	57,b	;volatile
 15494                           
 15495                           ; BSR set to: 15
 15496                           ;inc\CANlib.h: 436: TXB1D4 = data[4];
 15497  01184C  0100               	movlb	0	; () banked
 15498  01184E  EE20 F004          	lfsr	2,4
 15499  011852  5172               	movf	CANsendMessage@data& (0+255),w,b
 15500  011854  26D9               	addwf	fsr2l,f,c
 15501  011856  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15502  011858  22DA               	addwfc	fsr2h,f,c
 15503  01185A  50DF               	movf	indf2,w,c
 15504  01185C  010F               	movlb	15	; () banked
 15505  01185E  6F3A               	movwf	58,b	;volatile
 15506                           
 15507                           ; BSR set to: 15
 15508                           ;inc\CANlib.h: 437: TXB1D5 = data[5];
 15509  011860  0100               	movlb	0	; () banked
 15510  011862  EE20 F005          	lfsr	2,5
 15511  011866  5172               	movf	CANsendMessage@data& (0+255),w,b
 15512  011868  26D9               	addwf	fsr2l,f,c
 15513  01186A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15514  01186C  22DA               	addwfc	fsr2h,f,c
 15515  01186E  50DF               	movf	indf2,w,c
 15516  011870  010F               	movlb	15	; () banked
 15517  011872  6F3B               	movwf	59,b	;volatile
 15518                           
 15519                           ; BSR set to: 15
 15520                           ;inc\CANlib.h: 438: TXB1D6 = data[6];
 15521  011874  0100               	movlb	0	; () banked
 15522  011876  EE20 F006          	lfsr	2,6
 15523  01187A  5172               	movf	CANsendMessage@data& (0+255),w,b
 15524  01187C  26D9               	addwf	fsr2l,f,c
 15525  01187E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15526  011880  22DA               	addwfc	fsr2h,f,c
 15527  011882  50DF               	movf	indf2,w,c
 15528  011884  010F               	movlb	15	; () banked
 15529  011886  6F3C               	movwf	60,b	;volatile
 15530                           
 15531                           ; BSR set to: 15
 15532                           ;inc\CANlib.h: 439: TXB1D7 = data[7];
 15533  011888  0100               	movlb	0	; () banked
 15534  01188A  EE20 F007          	lfsr	2,7
 15535  01188E  5172               	movf	CANsendMessage@data& (0+255),w,b
 15536  011890  26D9               	addwf	fsr2l,f,c
 15537  011892  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15538  011894  22DA               	addwfc	fsr2h,f,c
 15539  011896  50DF               	movf	indf2,w,c
 15540  011898  010F               	movlb	15	; () banked
 15541  01189A  6F3D               	movwf	61,b	;volatile
 15542                           
 15543                           ; BSR set to: 15
 15544                           ;inc\CANlib.h: 441: TXB1CONbits.TXREQ = 0x01;
 15545  01189C  010F               	movlb	15	; () banked
 15546  01189E  8730               	bsf	48,3,b	;volatile
 15547                           
 15548                           ; BSR set to: 15
 15549                           ;inc\CANlib.h: 443: return;
 15550  0118A0  0012               	return	
 15551  0118A2                     l388:
 15552                           
 15553                           ; BSR set to: 15
 15554                           ;inc\CANlib.h: 444: }
 15555                           ;inc\CANlib.h: 448: if (TXB2CONbits.TXREQ == 0)
 15556  0118A2  010F               	movlb	15	; () banked
 15557  0118A4  B720               	btfsc	32,3,b	;volatile
 15558  0118A6  0012               	return	
 15559                           
 15560                           ; BSR set to: 15
 15561                           ;inc\CANlib.h: 449: { TXB2DLC = dataLength;
 15562  0118A8  C074  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 15563                           
 15564                           ;inc\CANlib.h: 451: if (0b01000000 & flags)
 15565  0118AC  0100               	movlb	0	; () banked
 15566  0118AE  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 15567  0118B0  D003               	goto	l403
 15568                           
 15569                           ; BSR set to: 0
 15570                           ;inc\CANlib.h: 452: TXB2DLCbits.TXRTR = 0x01;
 15571  0118B2  010F               	movlb	15	; () banked
 15572  0118B4  8D25               	bsf	37,6,b	;volatile
 15573  0118B6  D002               	goto	l404
 15574  0118B8                     l403:
 15575                           
 15576                           ; BSR set to: 0
 15577                           ;inc\CANlib.h: 453: else
 15578                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x00;
 15579  0118B8  010F               	movlb	15	; () banked
 15580  0118BA  9D25               	bcf	37,6,b	;volatile
 15581  0118BC                     l404:
 15582                           
 15583                           ; BSR set to: 15
 15584                           ;inc\CANlib.h: 456: if (CAN_TX_FRAME_MASK & flags)
 15585  0118BC  0100               	movlb	0	; () banked
 15586  0118BE  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 15587  0118C0  D079               	goto	l405
 15588                           
 15589                           ; BSR set to: 0
 15590                           ;inc\CANlib.h: 457: {
 15591                           ;inc\CANlib.h: 458: tamp = identifier & 0x000000FF;
 15592  0118C2  0100               	movlb	0	; () banked
 15593  0118C4  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 15594  0118C6  0100               	movlb	0	; () banked
 15595  0118C8  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15596  0118CA  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15597  0118CC  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15598  0118CE  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15599                           
 15600                           ; BSR set to: 0
 15601                           ;inc\CANlib.h: 459: TXB2EIDL = (unsigned char) tamp;
 15602  0118D0  C07A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;inc\CANlib.h: 461: tamp = identifier & 0x0000FF00;
 15606  0118D4  0E00               	movlw	0
 15607  0118D6  0100               	movlb	0	; () banked
 15608  0118D8  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15609  0118DA  0100               	movlb	0	; () banked
 15610  0118DC  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15611  0118DE  0EFF               	movlw	255
 15612  0118E0  0100               	movlb	0	; () banked
 15613  0118E2  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15614  0118E4  0100               	movlb	0	; () banked
 15615  0118E6  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15616  0118E8  0E00               	movlw	0
 15617  0118EA  0100               	movlb	0	; () banked
 15618  0118EC  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15619  0118EE  0100               	movlb	0	; () banked
 15620  0118F0  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15621  0118F2  0E00               	movlw	0
 15622  0118F4  0100               	movlb	0	; () banked
 15623  0118F6  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15624  0118F8  0100               	movlb	0	; () banked
 15625  0118FA  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15626                           
 15627                           ; BSR set to: 0
 15628                           ;inc\CANlib.h: 462: tamp = tamp >> 8;
 15629  0118FC  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15630  011900  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15631  011904  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15632  011908  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15633  01190C  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 15634  011910  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15635  011914  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15636  011918  0100               	movlb	0	; () banked
 15637  01191A  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 15638  01191C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15639  011920  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15640  011924  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15641  011928  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15642                           
 15643                           ; BSR set to: 0
 15644                           ;inc\CANlib.h: 463: TXB2EIDH = (unsigned char) tamp;
 15645  01192C  C07A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 15646                           
 15647                           ; BSR set to: 0
 15648                           ;inc\CANlib.h: 465: TXB2SIDL = 0x00;
 15649  011930  0E00               	movlw	0
 15650  011932  010F               	movlb	15	; () banked
 15651  011934  6F22               	movwf	34,b	;volatile
 15652                           
 15653                           ; BSR set to: 15
 15654                           ;inc\CANlib.h: 466: TXB2SIDLbits.EXIDE = 0x01;
 15655  011936  010F               	movlb	15	; () banked
 15656  011938  8722               	bsf	34,3,b	;volatile
 15657                           
 15658                           ; BSR set to: 15
 15659                           ;inc\CANlib.h: 468: if (identifier & 0x00010000)
 15660  01193A  0100               	movlb	0	; () banked
 15661  01193C  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15662  01193E  D002               	goto	l406
 15663                           
 15664                           ; BSR set to: 0
 15665                           ;inc\CANlib.h: 469: TXB2SIDLbits.EID16 = 0x01;
 15666  011940  010F               	movlb	15	; () banked
 15667  011942  8122               	bsf	34,0,b	;volatile
 15668  011944                     l406:
 15669                           
 15670                           ;inc\CANlib.h: 470: if (identifier & 0x00020000)
 15671  011944  0100               	movlb	0	; () banked
 15672  011946  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15673  011948  D002               	goto	l407
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID17 = 0x01;
 15677  01194A  010F               	movlb	15	; () banked
 15678  01194C  8322               	bsf	34,1,b	;volatile
 15679  01194E                     l407:
 15680                           
 15681                           ;inc\CANlib.h: 472: if (identifier & 0x00040000)
 15682  01194E  0100               	movlb	0	; () banked
 15683  011950  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15684  011952  D002               	goto	l408
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;inc\CANlib.h: 473: TXB2SIDLbits.SID0 = 0x01;
 15688  011954  010F               	movlb	15	; () banked
 15689  011956  8B22               	bsf	34,5,b	;volatile
 15690  011958                     l408:
 15691                           
 15692                           ;inc\CANlib.h: 474: if (identifier & 0x00080000)
 15693  011958  0100               	movlb	0	; () banked
 15694  01195A  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15695  01195C  D002               	goto	l409
 15696                           
 15697                           ; BSR set to: 0
 15698                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID1 = 0x01;
 15699  01195E  010F               	movlb	15	; () banked
 15700  011960  8D22               	bsf	34,6,b	;volatile
 15701  011962                     l409:
 15702                           
 15703                           ;inc\CANlib.h: 476: if (identifier & 0x00100000)
 15704  011962  0100               	movlb	0	; () banked
 15705  011964  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15706  011966  D002               	goto	l8007
 15707                           
 15708                           ; BSR set to: 0
 15709                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID2 = 0x01;
 15710  011968  010F               	movlb	15	; () banked
 15711  01196A  8F22               	bsf	34,7,b	;volatile
 15712  01196C                     l8007:
 15713                           
 15714                           ;inc\CANlib.h: 479: tamp = (identifier >> 21);
 15715  01196C  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15716  011970  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15717  011974  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15718  011978  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15719  01197C  0E16               	movlw	22
 15720  01197E  D006               	goto	u10790
 15721  011980                     u10795:
 15722  011980  0100               	movlb	0	; () banked
 15723  011982  90D8               	bcf	status,0,c
 15724  011984  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15725  011986  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15726  011988  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15727  01198A  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15728  01198C                     u10790:
 15729  01198C  2EE8               	decfsz	wreg,f,c
 15730  01198E  D7F8               	goto	u10795
 15731  011990  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15732  011994  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15733  011998  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15734  01199C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15735                           
 15736                           ; BSR set to: 0
 15737                           ;inc\CANlib.h: 480: tamp = tamp & 0x000000FF;
 15738  0119A0  0100               	movlb	0	; () banked
 15739  0119A2  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15740  0119A4  0100               	movlb	0	; () banked
 15741  0119A6  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15742  0119A8  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15743  0119AA  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15744  0119AC  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15745                           
 15746                           ; BSR set to: 0
 15747                           ;inc\CANlib.h: 481: TXB2SIDH = (unsigned char) tamp;
 15748  0119AE  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 15749                           
 15750                           ;inc\CANlib.h: 482: }
 15751  0119B2  D059               	goto	l8027
 15752  0119B4                     l405:
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;inc\CANlib.h: 484: else
 15756                           ;inc\CANlib.h: 486: {
 15757                           ;inc\CANlib.h: 487: TXB2SIDLbits.EXIDE = 0x00;
 15758  0119B4  010F               	movlb	15	; () banked
 15759  0119B6  9722               	bcf	34,3,b	;volatile
 15760                           
 15761                           ; BSR set to: 15
 15762                           ;inc\CANlib.h: 489: tamp = (identifier >> 3);
 15763  0119B8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 15764  0119BC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15765  0119C0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15766  0119C4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15767  0119C8  0E04               	movlw	4
 15768  0119CA  D006               	goto	u10800
 15769  0119CC                     u10805:
 15770  0119CC  0100               	movlb	0	; () banked
 15771  0119CE  90D8               	bcf	status,0,c
 15772  0119D0  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15773  0119D2  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15774  0119D4  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15775  0119D6  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 15776  0119D8                     u10800:
 15777  0119D8  2EE8               	decfsz	wreg,f,c
 15778  0119DA  D7F8               	goto	u10805
 15779  0119DC  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15780  0119E0  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15781  0119E4  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15782  0119E8  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;inc\CANlib.h: 490: tamp = tamp & 0x000000FF;
 15786  0119EC  0100               	movlb	0	; () banked
 15787  0119EE  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 15788  0119F0  0100               	movlb	0	; () banked
 15789  0119F2  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15790  0119F4  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15791  0119F6  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15792  0119F8  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15793                           
 15794                           ; BSR set to: 0
 15795                           ;inc\CANlib.h: 491: TXB2SIDH = (unsigned char) tamp;
 15796  0119FA  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;inc\CANlib.h: 493: tamp = identifier & 0x00000007;
 15800  0119FE  0E07               	movlw	7
 15801  011A00  0100               	movlb	0	; () banked
 15802  011A02  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 15803  011A04  0100               	movlb	0	; () banked
 15804  011A06  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 15805  011A08  0E00               	movlw	0
 15806  011A0A  0100               	movlb	0	; () banked
 15807  011A0C  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15808  011A0E  0100               	movlb	0	; () banked
 15809  011A10  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15810  011A12  0E00               	movlw	0
 15811  011A14  0100               	movlb	0	; () banked
 15812  011A16  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15813  011A18  0100               	movlb	0	; () banked
 15814  011A1A  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15815  011A1C  0E00               	movlw	0
 15816  011A1E  0100               	movlb	0	; () banked
 15817  011A20  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15818  011A22  0100               	movlb	0	; () banked
 15819  011A24  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15820                           
 15821                           ; BSR set to: 0
 15822                           ;inc\CANlib.h: 494: tamp = tamp << 5;
 15823  011A26  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 15824  011A2A  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15825  011A2E  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15826  011A32  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15827  011A36  0E05               	movlw	5
 15828  011A38                     u10815:
 15829  011A38  90D8               	bcf	status,0,c
 15830  011A3A  0100               	movlb	0	; () banked
 15831  011A3C  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 15832  011A3E  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15833  011A40  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15834  011A42  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15835  011A44  2EE8               	decfsz	wreg,f,c
 15836  011A46  D7F8               	goto	u10815
 15837  011A48  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 15838  011A4C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15839  011A50  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15840  011A54  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;inc\CANlib.h: 495: TXB2SIDL = TXB2SIDL & 0b00011111;
 15844  011A58  010F               	movlb	15	; () banked
 15845  011A5A  5122               	movf	34,w,b	;volatile
 15846  011A5C  0B1F               	andlw	31
 15847  011A5E  010F               	movlb	15	; () banked
 15848  011A60  6F22               	movwf	34,b	;volatile
 15849                           
 15850                           ; BSR set to: 15
 15851                           ;inc\CANlib.h: 496: TXB2SIDL = (unsigned char) tamp;
 15852  011A62  C07A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 15853  011A66                     l8027:
 15854                           
 15855                           ;inc\CANlib.h: 497: }
 15856                           ;inc\CANlib.h: 499: if (0b00000001 & flags)
 15857  011A66  0100               	movlb	0	; () banked
 15858  011A68  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 15859  011A6A  D003               	goto	l412
 15860                           
 15861                           ; BSR set to: 0
 15862                           ;inc\CANlib.h: 500: TXB2CONbits.TXPRI0 = 0x01;
 15863  011A6C  010F               	movlb	15	; () banked
 15864  011A6E  8120               	bsf	32,0,b	;volatile
 15865  011A70  D002               	goto	l413
 15866  011A72                     l412:
 15867                           
 15868                           ; BSR set to: 0
 15869                           ;inc\CANlib.h: 501: else
 15870                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x00;
 15871  011A72  010F               	movlb	15	; () banked
 15872  011A74  9120               	bcf	32,0,b	;volatile
 15873  011A76                     l413:
 15874                           
 15875                           ; BSR set to: 15
 15876                           ;inc\CANlib.h: 503: if (0b00000010 & flags)
 15877  011A76  0100               	movlb	0	; () banked
 15878  011A78  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 15879  011A7A  D003               	goto	l414
 15880                           
 15881                           ; BSR set to: 0
 15882                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI1 = 0x01;
 15883  011A7C  010F               	movlb	15	; () banked
 15884  011A7E  8320               	bsf	32,1,b	;volatile
 15885  011A80  D002               	goto	l8033
 15886  011A82                     l414:
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;inc\CANlib.h: 505: else
 15890                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x00;
 15891  011A82  010F               	movlb	15	; () banked
 15892  011A84  9320               	bcf	32,1,b	;volatile
 15893  011A86                     l8033:
 15894                           
 15895                           ; BSR set to: 15
 15896                           ;inc\CANlib.h: 508: TXB2D0 = data[0];
 15897  011A86  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 15898  011A8A  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15899  011A8E  50DF               	movf	indf2,w,c
 15900  011A90  010F               	movlb	15	; () banked
 15901  011A92  6F26               	movwf	38,b	;volatile
 15902                           
 15903                           ; BSR set to: 15
 15904                           ;inc\CANlib.h: 509: TXB2D1 = data[1];
 15905  011A94  0100               	movlb	0	; () banked
 15906  011A96  EE20 F001          	lfsr	2,1
 15907  011A9A  5172               	movf	CANsendMessage@data& (0+255),w,b
 15908  011A9C  26D9               	addwf	fsr2l,f,c
 15909  011A9E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15910  011AA0  22DA               	addwfc	fsr2h,f,c
 15911  011AA2  50DF               	movf	indf2,w,c
 15912  011AA4  010F               	movlb	15	; () banked
 15913  011AA6  6F27               	movwf	39,b	;volatile
 15914                           
 15915                           ; BSR set to: 15
 15916                           ;inc\CANlib.h: 510: TXB2D2 = data[2];
 15917  011AA8  0100               	movlb	0	; () banked
 15918  011AAA  EE20 F002          	lfsr	2,2
 15919  011AAE  5172               	movf	CANsendMessage@data& (0+255),w,b
 15920  011AB0  26D9               	addwf	fsr2l,f,c
 15921  011AB2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15922  011AB4  22DA               	addwfc	fsr2h,f,c
 15923  011AB6  50DF               	movf	indf2,w,c
 15924  011AB8  010F               	movlb	15	; () banked
 15925  011ABA  6F28               	movwf	40,b	;volatile
 15926                           
 15927                           ; BSR set to: 15
 15928                           ;inc\CANlib.h: 511: TXB2D3 = data[3];
 15929  011ABC  0100               	movlb	0	; () banked
 15930  011ABE  EE20 F003          	lfsr	2,3
 15931  011AC2  5172               	movf	CANsendMessage@data& (0+255),w,b
 15932  011AC4  26D9               	addwf	fsr2l,f,c
 15933  011AC6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15934  011AC8  22DA               	addwfc	fsr2h,f,c
 15935  011ACA  50DF               	movf	indf2,w,c
 15936  011ACC  010F               	movlb	15	; () banked
 15937  011ACE  6F29               	movwf	41,b	;volatile
 15938                           
 15939                           ; BSR set to: 15
 15940                           ;inc\CANlib.h: 512: TXB2D4 = data[4];
 15941  011AD0  0100               	movlb	0	; () banked
 15942  011AD2  EE20 F004          	lfsr	2,4
 15943  011AD6  5172               	movf	CANsendMessage@data& (0+255),w,b
 15944  011AD8  26D9               	addwf	fsr2l,f,c
 15945  011ADA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15946  011ADC  22DA               	addwfc	fsr2h,f,c
 15947  011ADE  50DF               	movf	indf2,w,c
 15948  011AE0  010F               	movlb	15	; () banked
 15949  011AE2  6F2A               	movwf	42,b	;volatile
 15950                           
 15951                           ; BSR set to: 15
 15952                           ;inc\CANlib.h: 513: TXB2D5 = data[5];
 15953  011AE4  0100               	movlb	0	; () banked
 15954  011AE6  EE20 F005          	lfsr	2,5
 15955  011AEA  5172               	movf	CANsendMessage@data& (0+255),w,b
 15956  011AEC  26D9               	addwf	fsr2l,f,c
 15957  011AEE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15958  011AF0  22DA               	addwfc	fsr2h,f,c
 15959  011AF2  50DF               	movf	indf2,w,c
 15960  011AF4  010F               	movlb	15	; () banked
 15961  011AF6  6F2B               	movwf	43,b	;volatile
 15962                           
 15963                           ; BSR set to: 15
 15964                           ;inc\CANlib.h: 514: TXB2D6 = data[6];
 15965  011AF8  0100               	movlb	0	; () banked
 15966  011AFA  EE20 F006          	lfsr	2,6
 15967  011AFE  5172               	movf	CANsendMessage@data& (0+255),w,b
 15968  011B00  26D9               	addwf	fsr2l,f,c
 15969  011B02  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15970  011B04  22DA               	addwfc	fsr2h,f,c
 15971  011B06  50DF               	movf	indf2,w,c
 15972  011B08  010F               	movlb	15	; () banked
 15973  011B0A  6F2C               	movwf	44,b	;volatile
 15974                           
 15975                           ; BSR set to: 15
 15976                           ;inc\CANlib.h: 515: TXB2D7 = data[7];
 15977  011B0C  0100               	movlb	0	; () banked
 15978  011B0E  EE20 F007          	lfsr	2,7
 15979  011B12  5172               	movf	CANsendMessage@data& (0+255),w,b
 15980  011B14  26D9               	addwf	fsr2l,f,c
 15981  011B16  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15982  011B18  22DA               	addwfc	fsr2h,f,c
 15983  011B1A  50DF               	movf	indf2,w,c
 15984  011B1C  010F               	movlb	15	; () banked
 15985  011B1E  6F2D               	movwf	45,b	;volatile
 15986                           
 15987                           ; BSR set to: 15
 15988                           ;inc\CANlib.h: 517: TXB2CONbits.TXREQ = 0x01;
 15989  011B20  010F               	movlb	15	; () banked
 15990  011B22  8720               	bsf	32,3,b	;volatile
 15991                           
 15992                           ; BSR set to: 15
 15993                           ;inc\CANlib.h: 519: return;
 15994  011B24  0012               	return	
 15995  011B26                     __end_of_CANsendMessage:
 15996                           	opt stack 0
 15997                           tblptru	equ	0xFF8
 15998                           tblptrh	equ	0xFF7
 15999                           tblptrl	equ	0xFF6
 16000                           tablat	equ	0xFF5
 16001                           prodh	equ	0xFF4
 16002                           prodl	equ	0xFF3
 16003                           intcon	equ	0xFF2
 16004                           postinc0	equ	0xFEE
 16005                           wreg	equ	0xFE8
 16006                           indf2	equ	0xFDF
 16007                           postinc2	equ	0xFDE
 16008                           fsr2h	equ	0xFDA
 16009                           fsr2l	equ	0xFD9
 16010                           status	equ	0xFD8
 16011                           
 16012 ;; *************** function _CANisTxReady *****************
 16013 ;; Defined at:
 16014 ;;		line 1153 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;		None
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;		None
 16019 ;; Return value:  Size  Location     Type
 16020 ;;                  1    wreg      unsigned char 
 16021 ;; Registers used:
 16022 ;;		wreg, status,2
 16023 ;; Tracked objects:
 16024 ;;		On entry : 0/0
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16031 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16032 ;;Total ram usage:        1 bytes
 16033 ;; Hardware stack levels used:    1
 16034 ;; Hardware stack levels required when called:    3
 16035 ;; This function calls:
 16036 ;;		Nothing
 16037 ;; This function is called by:
 16038 ;;		_CAN_Send
 16039 ;;		_CAN_interpreter
 16040 ;; This function uses a non-reentrant model
 16041 ;;
 16042                           
 16043                           	psect	text43
 16044  015304                     __ptext43:
 16045                           	opt stack 0
 16046  015304                     _CANisTxReady:
 16047                           	opt stack 26
 16048                           
 16049                           ;inc\CANlib.h: 1155: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16050                           
 16051                           ; BSR set to: 15
 16052                           ;incstack = 0
 16053  015304  0E01               	movlw	1
 16054  015306  0100               	movlb	0	; () banked
 16055  015308  6F6E               	movwf	_CANisTxReady$3294& (0+255),b
 16056                           
 16057                           ; BSR set to: 0
 16058  01530A  010F               	movlb	15	; () banked
 16059  01530C  A740               	btfss	64,3,b	;volatile
 16060  01530E  D009               	goto	l566
 16061                           
 16062                           ; BSR set to: 15
 16063  015310  010F               	movlb	15	; () banked
 16064  015312  A730               	btfss	48,3,b	;volatile
 16065  015314  D006               	goto	l566
 16066                           
 16067                           ; BSR set to: 15
 16068  015316  010F               	movlb	15	; () banked
 16069  015318  A720               	btfss	32,3,b	;volatile
 16070  01531A  D003               	goto	l566
 16071                           
 16072                           ; BSR set to: 15
 16073  01531C  0E00               	movlw	0
 16074  01531E  0100               	movlb	0	; () banked
 16075  015320  6F6E               	movwf	_CANisTxReady$3294& (0+255),b
 16076  015322                     l566:
 16077  015322  0100               	movlb	0	; () banked
 16078  015324  516E               	movf	_CANisTxReady$3294& (0+255),w,b
 16079  015326  0012               	return	
 16080  015328                     __end_of_CANisTxReady:
 16081                           	opt stack 0
 16082                           tblptru	equ	0xFF8
 16083                           tblptrh	equ	0xFF7
 16084                           tblptrl	equ	0xFF6
 16085                           tablat	equ	0xFF5
 16086                           prodh	equ	0xFF4
 16087                           prodl	equ	0xFF3
 16088                           intcon	equ	0xFF2
 16089                           postinc0	equ	0xFEE
 16090                           wreg	equ	0xFE8
 16091                           indf2	equ	0xFDF
 16092                           postinc2	equ	0xFDE
 16093                           fsr2h	equ	0xFDA
 16094                           fsr2l	equ	0xFD9
 16095                           status	equ	0xFD8
 16096                           
 16097 ;; *************** function _ISR_bassa *****************
 16098 ;; Defined at:
 16099 ;;		line 88 in file "RemoteCan.c"
 16100 ;; Parameters:    Size  Location     Type
 16101 ;;		None
 16102 ;; Auto vars:     Size  Location     Type
 16103 ;;		None
 16104 ;; Return value:  Size  Location     Type
 16105 ;;		None               void
 16106 ;; Registers used:
 16107 ;;		wreg, status,2, status,0
 16108 ;; Tracked objects:
 16109 ;;		On entry : 0/0
 16110 ;;		On exit  : 0/0
 16111 ;;		Unchanged: 0/0
 16112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16117 ;;Total ram usage:       17 bytes
 16118 ;; Hardware stack levels used:    1
 16119 ;; Hardware stack levels required when called:    2
 16120 ;; This function calls:
 16121 ;;		Nothing
 16122 ;; This function is called by:
 16123 ;;		Interrupt level 1
 16124 ;; This function uses a non-reentrant model
 16125 ;;
 16126                           
 16127                           	psect	intcodelo
 16128  000018                     __pintcodelo:
 16129                           	opt stack 0
 16130  000018                     _ISR_bassa:
 16131                           	opt stack 21
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;incstack = 0
 16135  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16136  00001A  CFD8 F029          	movff	status,??_ISR_bassa
 16137  00001E  CFE8 F02A          	movff	wreg,??_ISR_bassa+1
 16138  000022  CFE0 F02B          	movff	bsr,??_ISR_bassa+2
 16139  000026  CFFA F02C          	movff	pclath,??_ISR_bassa+3
 16140  00002A  CFFB F02D          	movff	pclatu,??_ISR_bassa+4
 16141  00002E  CFE9 F02E          	movff	fsr0l,??_ISR_bassa+5
 16142  000032  CFEA F02F          	movff	fsr0h,??_ISR_bassa+6
 16143  000036  CFE1 F030          	movff	fsr1l,??_ISR_bassa+7
 16144  00003A  CFE2 F031          	movff	fsr1h,??_ISR_bassa+8
 16145  00003E  CFD9 F032          	movff	fsr2l,??_ISR_bassa+9
 16146  000042  CFDA F033          	movff	fsr2h,??_ISR_bassa+10
 16147  000046  CFF3 F034          	movff	prodl,??_ISR_bassa+11
 16148  00004A  CFF4 F035          	movff	prodh,??_ISR_bassa+12
 16149  00004E  CFF6 F036          	movff	tblptrl,??_ISR_bassa+13
 16150  000052  CFF7 F037          	movff	tblptrh,??_ISR_bassa+14
 16151  000056  CFF8 F038          	movff	tblptru,??_ISR_bassa+15
 16152  00005A  CFF5 F039          	movff	tablat,??_ISR_bassa+16
 16153                           
 16154                           ;RemoteCan.c: 89: if (PIR2bits.TMR3IF == 1) {
 16155  00005E  A2A1               	btfss	4001,1,c	;volatile
 16156  000060  D00C               	goto	i1l737
 16157                           
 16158                           ;RemoteCan.c: 90: time_counter++;
 16159  000062  0E01               	movlw	1
 16160  000064  0100               	movlb	0	; () banked
 16161  000066  27E0               	addwf	_time_counter& (0+255),f,b	;volatile
 16162  000068  0E00               	movlw	0
 16163  00006A  23E1               	addwfc	(_time_counter+1)& (0+255),f,b	;volatile
 16164  00006C  23E2               	addwfc	(_time_counter+2)& (0+255),f,b	;volatile
 16165  00006E  23E3               	addwfc	(_time_counter+3)& (0+255),f,b	;volatile
 16166                           
 16167                           ; BSR set to: 0
 16168                           ;RemoteCan.c: 91: TMR3H = 0x63;
 16169  000070  0E63               	movlw	99
 16170  000072  6EB3               	movwf	4019,c	;volatile
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;RemoteCan.c: 92: TMR3L = 0xC0;
 16174  000074  0EC0               	movlw	192
 16175  000076  6EB2               	movwf	4018,c	;volatile
 16176                           
 16177                           ; BSR set to: 0
 16178                           ;RemoteCan.c: 93: PIR2bits.TMR3IF = 0;
 16179  000078  92A1               	bcf	4001,1,c	;volatile
 16180  00007A                     i1l737:
 16181  00007A  C039  FFF5         	movff	??_ISR_bassa+16,tablat
 16182  00007E  C038  FFF8         	movff	??_ISR_bassa+15,tblptru
 16183  000082  C037  FFF7         	movff	??_ISR_bassa+14,tblptrh
 16184  000086  C036  FFF6         	movff	??_ISR_bassa+13,tblptrl
 16185  00008A  C035  FFF4         	movff	??_ISR_bassa+12,prodh
 16186  00008E  C034  FFF3         	movff	??_ISR_bassa+11,prodl
 16187  000092  C033  FFDA         	movff	??_ISR_bassa+10,fsr2h
 16188  000096  C032  FFD9         	movff	??_ISR_bassa+9,fsr2l
 16189  00009A  C031  FFE2         	movff	??_ISR_bassa+8,fsr1h
 16190  00009E  C030  FFE1         	movff	??_ISR_bassa+7,fsr1l
 16191  0000A2  C02F  FFEA         	movff	??_ISR_bassa+6,fsr0h
 16192  0000A6  C02E  FFE9         	movff	??_ISR_bassa+5,fsr0l
 16193  0000AA  C02D  FFFB         	movff	??_ISR_bassa+4,pclatu
 16194  0000AE  C02C  FFFA         	movff	??_ISR_bassa+3,pclath
 16195  0000B2  C02B  FFE0         	movff	??_ISR_bassa+2,bsr
 16196  0000B6  C02A  FFE8         	movff	??_ISR_bassa+1,wreg
 16197  0000BA  C029  FFD8         	movff	??_ISR_bassa,status
 16198  0000BE  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16199  0000C0  0010               	retfie	
 16200  0000C2                     __end_of_ISR_bassa:
 16201                           	opt stack 0
 16202                           pclatu	equ	0xFFB
 16203                           pclath	equ	0xFFA
 16204                           tblptru	equ	0xFF8
 16205                           tblptrh	equ	0xFF7
 16206                           tblptrl	equ	0xFF6
 16207                           tablat	equ	0xFF5
 16208                           prodh	equ	0xFF4
 16209                           prodl	equ	0xFF3
 16210                           intcon	equ	0xFF2
 16211                           postinc0	equ	0xFEE
 16212                           fsr0h	equ	0xFEA
 16213                           fsr0l	equ	0xFE9
 16214                           wreg	equ	0xFE8
 16215                           fsr1h	equ	0xFE2
 16216                           fsr1l	equ	0xFE1
 16217                           bsr	equ	0xFE0
 16218                           indf2	equ	0xFDF
 16219                           postinc2	equ	0xFDE
 16220                           fsr2h	equ	0xFDA
 16221                           fsr2l	equ	0xFD9
 16222                           status	equ	0xFD8
 16223                           
 16224 ;; *************** function _ISR_alta *****************
 16225 ;; Defined at:
 16226 ;;		line 72 in file "RemoteCan.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;		None
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;  i               1   29[COMRAM] unsigned char 
 16231 ;; Return value:  Size  Location     Type
 16232 ;;		None               void
 16233 ;; Registers used:
 16234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16235 ;; Tracked objects:
 16236 ;;		On entry : 0/0
 16237 ;;		On exit  : 0/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16242 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16243 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16244 ;;Total ram usage:       15 bytes
 16245 ;; Hardware stack levels used:    1
 16246 ;; Hardware stack levels required when called:    1
 16247 ;; This function calls:
 16248 ;;		_CANisRxReady
 16249 ;;		_CANreceiveMessage
 16250 ;; This function is called by:
 16251 ;;		Interrupt level 2
 16252 ;; This function uses a non-reentrant model
 16253 ;;
 16254                           
 16255                           	psect	intcode
 16256  000008                     __pintcode:
 16257                           	opt stack 0
 16258  000008                     _ISR_alta:
 16259                           	opt stack 21
 16260                           
 16261                           ;incstack = 0
 16262  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16263  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 16264  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 16265  000012  EF57  F0A5         	goto	int_func
 16266                           pclatu	equ	0xFFB
 16267                           pclath	equ	0xFFA
 16268                           tblptru	equ	0xFF8
 16269                           tblptrh	equ	0xFF7
 16270                           tblptrl	equ	0xFF6
 16271                           tablat	equ	0xFF5
 16272                           prodh	equ	0xFF4
 16273                           prodl	equ	0xFF3
 16274                           intcon	equ	0xFF2
 16275                           postinc0	equ	0xFEE
 16276                           fsr0h	equ	0xFEA
 16277                           fsr0l	equ	0xFE9
 16278                           wreg	equ	0xFE8
 16279                           fsr1h	equ	0xFE2
 16280                           fsr1l	equ	0xFE1
 16281                           bsr	equ	0xFE0
 16282                           indf2	equ	0xFDF
 16283                           postinc2	equ	0xFDE
 16284                           fsr2h	equ	0xFDA
 16285                           fsr2l	equ	0xFD9
 16286                           status	equ	0xFD8
 16287                           
 16288                           	psect	intcode_body
 16289  014AAE                     __pintcode_body:
 16290                           	opt stack 21
 16291  014AAE                     int_func:
 16292                           	opt stack 21
 16293  014AAE  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 16294  014AB2  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 16295  014AB6  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 16296  014ABA  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 16297  014ABE  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 16298  014AC2  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 16299  014AC6  CFF3 F068          	movff	prodl,??_ISR_alta+8
 16300  014ACA  CFF4 F069          	movff	prodh,??_ISR_alta+9
 16301  014ACE  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 16302  014AD2  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 16303  014AD6  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 16304  014ADA  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 16305                           
 16306                           ;RemoteCan.c: 73: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 16307  014ADE  A2A4               	btfss	4004,1,c	;volatile
 16308  014AE0  B0A4               	btfsc	4004,0,c	;volatile
 16309  014AE2  D001               	goto	i2l8741
 16310  014AE4  D035               	goto	i2l733
 16311  014AE6                     i2l8741:
 16312                           
 16313                           ;RemoteCan.c: 74: if (CANisRxReady()) {
 16314  014AE6  ECBE  F0A9         	call	_CANisRxReady	;wreg free
 16315  014AEA  0900               	iorlw	0
 16316  014AEC  B4D8               	btfsc	status,2,c
 16317  014AEE  D02E               	goto	i2l730
 16318                           
 16319                           ;RemoteCan.c: 75: CANreceiveMessage(&msg);
 16320  014AF0  0E19               	movlw	low _msg
 16321  014AF2  6E3A               	movwf	CANreceiveMessage@msg,c
 16322  014AF4  0E00               	movlw	high _msg
 16323  014AF6  6E3B               	movwf	CANreceiveMessage@msg+1,c
 16324  014AF8  EC20  F090         	call	_CANreceiveMessage	;wreg free
 16325                           
 16326                           ;RemoteCan.c: 76: RTR_Flag = msg.RTR;
 16327  014AFC  A027               	btfss	_msg+14,0,c
 16328  014AFE  D002               	goto	i2u1180_40
 16329  014B00  8447               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16330  014B02  D001               	goto	i2l8747
 16331  014B04                     i2u1180_40:
 16332  014B04  9447               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16333  014B06                     i2l8747:
 16334                           
 16335                           ;RemoteCan.c: 77: id = msg.identifier;
 16336  014B06  C019  F00B         	movff	_msg,_id	;volatile
 16337  014B0A  C01A  F00C         	movff	_msg+1,_id+1	;volatile
 16338  014B0E  C01B  F00D         	movff	_msg+2,_id+2	;volatile
 16339  014B12  C01C  F00E         	movff	_msg+3,_id+3	;volatile
 16340                           
 16341                           ;RemoteCan.c: 78: newMessageCan = 1;
 16342  014B16  8847               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 16343                           
 16344                           ;RemoteCan.c: 79: for (unsigned char i = 0; i < 8; i++) {
 16345  014B18  0E00               	movlw	0
 16346  014B1A  6E46               	movwf	ISR_alta@i,c
 16347  014B1C                     i2l8753:
 16348  014B1C  0E07               	movlw	7
 16349  014B1E  6446               	cpfsgt	ISR_alta@i,c
 16350  014B20  D001               	goto	i2l8757
 16351  014B22  D014               	goto	i2l730
 16352  014B24                     i2l8757:
 16353                           
 16354                           ;RemoteCan.c: 80: data[i] = msg.data[i];
 16355  014B24  5046               	movf	ISR_alta@i,w,c
 16356  014B26  0D01               	mullw	1
 16357  014B28  0E1D               	movlw	low (_msg+4)
 16358  014B2A  24F3               	addwf	prodl,w,c
 16359  014B2C  6ED9               	movwf	fsr2l,c
 16360  014B2E  0E00               	movlw	high (_msg+4)
 16361  014B30  20F4               	addwfc	prodh,w,c
 16362  014B32  6EDA               	movwf	fsr2h,c
 16363  014B34  5046               	movf	ISR_alta@i,w,c
 16364  014B36  0D01               	mullw	1
 16365  014B38  0E28               	movlw	low _data
 16366  014B3A  24F3               	addwf	prodl,w,c
 16367  014B3C  6EE1               	movwf	fsr1l,c
 16368  014B3E  0E00               	movlw	high _data
 16369  014B40  20F4               	addwfc	prodh,w,c
 16370  014B42  6EE2               	movwf	fsr1h,c
 16371  014B44  CFDF FFE7          	movff	indf2,indf1
 16372  014B48  2A46               	incf	ISR_alta@i,f,c
 16373  014B4A  D7E8               	goto	i2l8753
 16374  014B4C                     i2l730:
 16375                           
 16376                           ;RemoteCan.c: 81: }
 16377                           ;RemoteCan.c: 82: }
 16378                           ;RemoteCan.c: 83: PIR3bits.RXB1IF = 0;
 16379  014B4C  92A4               	bcf	4004,1,c	;volatile
 16380                           
 16381                           ;RemoteCan.c: 84: PIR3bits.RXB0IF = 0;
 16382  014B4E  90A4               	bcf	4004,0,c	;volatile
 16383  014B50                     i2l733:
 16384  014B50  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 16385  014B54  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 16386  014B58  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 16387  014B5C  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 16388  014B60  C069  FFF4         	movff	??_ISR_alta+9,prodh
 16389  014B64  C068  FFF3         	movff	??_ISR_alta+8,prodl
 16390  014B68  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 16391  014B6C  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 16392  014B70  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 16393  014B74  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 16394  014B78  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 16395  014B7C  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 16396  014B80  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 16397  014B84  C060  FFFA         	movff	??_ISR_alta,pclath
 16398  014B88  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16399  014B8A  0011               	retfie		f
 16400  014B8C                     __end_of_ISR_alta:
 16401                           	opt stack 0
 16402                           pclatu	equ	0xFFB
 16403                           pclath	equ	0xFFA
 16404                           tblptru	equ	0xFF8
 16405                           tblptrh	equ	0xFF7
 16406                           tblptrl	equ	0xFF6
 16407                           tablat	equ	0xFF5
 16408                           prodh	equ	0xFF4
 16409                           prodl	equ	0xFF3
 16410                           intcon	equ	0xFF2
 16411                           postinc0	equ	0xFEE
 16412                           fsr0h	equ	0xFEA
 16413                           fsr0l	equ	0xFE9
 16414                           wreg	equ	0xFE8
 16415                           indf1	equ	0xFE7
 16416                           fsr1h	equ	0xFE2
 16417                           fsr1l	equ	0xFE1
 16418                           bsr	equ	0xFE0
 16419                           indf2	equ	0xFDF
 16420                           postinc2	equ	0xFDE
 16421                           fsr2h	equ	0xFDA
 16422                           fsr2l	equ	0xFD9
 16423                           status	equ	0xFD8
 16424                           
 16425 ;; *************** function _CANreceiveMessage *****************
 16426 ;; Defined at:
 16427 ;;		line 527 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;  msg             2   17[COMRAM] PTR struct .
 16430 ;;		 -> msg(15), 
 16431 ;; Auto vars:     Size  Location     Type
 16432 ;;  tamp            1   28[COMRAM] unsigned char 
 16433 ;;  error           1   27[COMRAM] unsigned char 
 16434 ;; Return value:  Size  Location     Type
 16435 ;;                  1    wreg      unsigned char 
 16436 ;; Registers used:
 16437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16438 ;; Tracked objects:
 16439 ;;		On entry : 0/0
 16440 ;;		On exit  : 0/0
 16441 ;;		Unchanged: 0/0
 16442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16445 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16446 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16447 ;;Total ram usage:       12 bytes
 16448 ;; Hardware stack levels used:    1
 16449 ;; This function calls:
 16450 ;;		Nothing
 16451 ;; This function is called by:
 16452 ;;		_ISR_alta
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456                           	psect	text46
 16457  012040                     __ptext46:
 16458                           	opt stack 0
 16459  012040                     _CANreceiveMessage:
 16460                           	opt stack 21
 16461                           
 16462                           ;inc\CANlib.h: 529: BYTE tamp;
 16463                           ;inc\CANlib.h: 530: BYTE error = 0;
 16464                           
 16465                           ;incstack = 0
 16466  012040  0E00               	movlw	0
 16467  012042  6E44               	movwf	CANreceiveMessage@error,c
 16468                           
 16469                           ;inc\CANlib.h: 532: if (COMSTATbits.RXB0OVFL == 0x01)
 16470  012044  BE74               	btfsc	3956,7,c	;volatile
 16471                           
 16472                           ;inc\CANlib.h: 533: error |= CAN_RX_BUFFER_1_OVFL;
 16473  012046  8044               	bsf	CANreceiveMessage@error,0,c
 16474                           
 16475                           ;inc\CANlib.h: 535: if (COMSTATbits.RXB1OVFL == 0x01)
 16476  012048  BC74               	btfsc	3956,6,c	;volatile
 16477                           
 16478                           ;inc\CANlib.h: 536: error |= CAN_RX_BUFFER_2_OVFL;
 16479  01204A  8244               	bsf	CANreceiveMessage@error,1,c
 16480                           
 16481                           ;inc\CANlib.h: 539: if (RXB1CONbits.RXFUL ==0x01)
 16482  01204C  010F               	movlb	15	; () banked
 16483  01204E  AF50               	btfss	80,7,b	;volatile
 16484  012050  D143               	goto	i2l420
 16485                           
 16486                           ; BSR set to: 15
 16487                           ;inc\CANlib.h: 540: {
 16488                           ;inc\CANlib.h: 541: msg->identifier = 0;
 16489  012052  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16490  012056  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16491  01205A  6ADE               	clrf	postinc2,c
 16492  01205C  6ADE               	clrf	postinc2,c
 16493  01205E  6ADE               	clrf	postinc2,c
 16494  012060  6ADD               	clrf	postdec2,c
 16495                           
 16496                           ; BSR set to: 15
 16497                           ;inc\CANlib.h: 542: msg->data[0] =RXB1D0;
 16498  012062  EE20 F004          	lfsr	2,4
 16499  012066  503A               	movf	CANreceiveMessage@msg,w,c
 16500  012068  26D9               	addwf	fsr2l,f,c
 16501  01206A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16502  01206C  22DA               	addwfc	fsr2h,f,c
 16503  01206E  CF56 FFDF          	movff	3926,indf2	;volatile
 16504                           
 16505                           ; BSR set to: 15
 16506                           ;inc\CANlib.h: 543: msg->data[1] =RXB1D1;
 16507  012072  EE20 F005          	lfsr	2,5
 16508  012076  503A               	movf	CANreceiveMessage@msg,w,c
 16509  012078  26D9               	addwf	fsr2l,f,c
 16510  01207A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16511  01207C  22DA               	addwfc	fsr2h,f,c
 16512  01207E  CF57 FFDF          	movff	3927,indf2	;volatile
 16513                           
 16514                           ; BSR set to: 15
 16515                           ;inc\CANlib.h: 544: msg->data[2] =RXB1D2;
 16516  012082  EE20 F006          	lfsr	2,6
 16517  012086  503A               	movf	CANreceiveMessage@msg,w,c
 16518  012088  26D9               	addwf	fsr2l,f,c
 16519  01208A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16520  01208C  22DA               	addwfc	fsr2h,f,c
 16521  01208E  CF58 FFDF          	movff	3928,indf2	;volatile
 16522                           
 16523                           ; BSR set to: 15
 16524                           ;inc\CANlib.h: 545: msg->data[3] =RXB1D3;
 16525  012092  EE20 F007          	lfsr	2,7
 16526  012096  503A               	movf	CANreceiveMessage@msg,w,c
 16527  012098  26D9               	addwf	fsr2l,f,c
 16528  01209A  503B               	movf	CANreceiveMessage@msg+1,w,c
 16529  01209C  22DA               	addwfc	fsr2h,f,c
 16530  01209E  CF59 FFDF          	movff	3929,indf2	;volatile
 16531                           
 16532                           ; BSR set to: 15
 16533                           ;inc\CANlib.h: 546: msg->data[4] =RXB1D4;
 16534  0120A2  EE20 F008          	lfsr	2,8
 16535  0120A6  503A               	movf	CANreceiveMessage@msg,w,c
 16536  0120A8  26D9               	addwf	fsr2l,f,c
 16537  0120AA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16538  0120AC  22DA               	addwfc	fsr2h,f,c
 16539  0120AE  CF5A FFDF          	movff	3930,indf2	;volatile
 16540                           
 16541                           ; BSR set to: 15
 16542                           ;inc\CANlib.h: 547: msg->data[5] =RXB1D5;
 16543  0120B2  EE20 F009          	lfsr	2,9
 16544  0120B6  503A               	movf	CANreceiveMessage@msg,w,c
 16545  0120B8  26D9               	addwf	fsr2l,f,c
 16546  0120BA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16547  0120BC  22DA               	addwfc	fsr2h,f,c
 16548  0120BE  CF5B FFDF          	movff	3931,indf2	;volatile
 16549                           
 16550                           ; BSR set to: 15
 16551                           ;inc\CANlib.h: 548: msg->data[6] =RXB1D6;
 16552  0120C2  EE20 F00A          	lfsr	2,10
 16553  0120C6  503A               	movf	CANreceiveMessage@msg,w,c
 16554  0120C8  26D9               	addwf	fsr2l,f,c
 16555  0120CA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16556  0120CC  22DA               	addwfc	fsr2h,f,c
 16557  0120CE  CF5C FFDF          	movff	3932,indf2	;volatile
 16558                           
 16559                           ; BSR set to: 15
 16560                           ;inc\CANlib.h: 549: msg->data[7] =RXB1D7;
 16561  0120D2  EE20 F00B          	lfsr	2,11
 16562  0120D6  503A               	movf	CANreceiveMessage@msg,w,c
 16563  0120D8  26D9               	addwf	fsr2l,f,c
 16564  0120DA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16565  0120DC  22DA               	addwfc	fsr2h,f,c
 16566  0120DE  CF5D FFDF          	movff	3933,indf2	;volatile
 16567                           
 16568                           ; BSR set to: 15
 16569                           ;inc\CANlib.h: 551: msg->RTR = RXB1DLCbits.RXRTR;
 16570  0120E2  EE20 F00E          	lfsr	2,14
 16571  0120E6  503A               	movf	CANreceiveMessage@msg,w,c
 16572  0120E8  26D9               	addwf	fsr2l,f,c
 16573  0120EA  503B               	movf	CANreceiveMessage@msg+1,w,c
 16574  0120EC  22DA               	addwfc	fsr2h,f,c
 16575  0120EE  010F               	movlb	15	; () banked
 16576  0120F0  AD55               	btfss	85,6,b	;volatile
 16577  0120F2  D002               	goto	i2u741_40
 16578  0120F4  0E01               	movlw	1
 16579  0120F6  D001               	goto	i2u741_46
 16580  0120F8                     i2u741_40:
 16581  0120F8  0E00               	movlw	0
 16582  0120FA                     i2u741_46:
 16583  0120FA  6EDF               	movwf	indf2,c
 16584                           
 16585                           ; BSR set to: 15
 16586                           ;inc\CANlib.h: 553: msg->length = RXB1DLC & 0x0F;
 16587  0120FC  EE20 F00D          	lfsr	2,13
 16588  012100  503A               	movf	CANreceiveMessage@msg,w,c
 16589  012102  26D9               	addwf	fsr2l,f,c
 16590  012104  503B               	movf	CANreceiveMessage@msg+1,w,c
 16591  012106  22DA               	addwfc	fsr2h,f,c
 16592  012108  010F               	movlb	15	; () banked
 16593  01210A  5155               	movf	85,w,b	;volatile
 16594  01210C  0B0F               	andlw	15
 16595  01210E  6EDF               	movwf	indf2,c
 16596                           
 16597                           ; BSR set to: 15
 16598                           ;inc\CANlib.h: 555: msg->type = RXB1SIDLbits.EXID;
 16599  012110  EE20 F00C          	lfsr	2,12
 16600  012114  503A               	movf	CANreceiveMessage@msg,w,c
 16601  012116  26D9               	addwf	fsr2l,f,c
 16602  012118  503B               	movf	CANreceiveMessage@msg+1,w,c
 16603  01211A  22DA               	addwfc	fsr2h,f,c
 16604  01211C  010F               	movlb	15	; () banked
 16605  01211E  A752               	btfss	82,3,b	;volatile
 16606  012120  D002               	goto	i2u742_40
 16607  012122  0E01               	movlw	1
 16608  012124  D001               	goto	i2u742_46
 16609  012126                     i2u742_40:
 16610  012126  0E00               	movlw	0
 16611  012128                     i2u742_46:
 16612  012128  6EDF               	movwf	indf2,c
 16613                           
 16614                           ; BSR set to: 15
 16615                           ;inc\CANlib.h: 557: if (RXB1SIDLbits.EXID == 0)
 16616  01212A  010F               	movlb	15	; () banked
 16617  01212C  B752               	btfsc	82,3,b	;volatile
 16618  01212E  D044               	goto	i2l6055
 16619                           
 16620                           ; BSR set to: 15
 16621                           ;inc\CANlib.h: 558: {
 16622                           ;inc\CANlib.h: 559: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16623  012130  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 16624  012134  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16625  012136  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16626  012138  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16627  01213A  0E03               	movlw	3
 16628  01213C                     i2u744_45:
 16629  01213C  90D8               	bcf	status,0,c
 16630  01213E  363C               	rlcf	??_CANreceiveMessage,f,c
 16631  012140  363D               	rlcf	??_CANreceiveMessage+1,f,c
 16632  012142  363E               	rlcf	??_CANreceiveMessage+2,f,c
 16633  012144  363F               	rlcf	??_CANreceiveMessage+3,f,c
 16634  012146  2EE8               	decfsz	wreg,f,c
 16635  012148  D7F9               	goto	i2u744_45
 16636  01214A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16637  01214E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16638  012152  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 16639  012156  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16640  01215A  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16641  01215E  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16642                           
 16643                           ; BSR set to: 15
 16644                           ;inc\CANlib.h: 560: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16645  012162  010F               	movlb	15	; () banked
 16646  012164  3952               	swapf	82,w,b	;volatile
 16647  012166  42E8               	rrncf	wreg,f,c
 16648  012168  0B07               	andlw	7
 16649  01216A  0B07               	andlw	7
 16650  01216C  6E45               	movwf	CANreceiveMessage@tamp,c
 16651                           
 16652                           ; BSR set to: 15
 16653                           ;inc\CANlib.h: 561: msg->identifier = msg->identifier + tamp;
 16654  01216E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16655  012172  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16656  012176  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 16657  01217A  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 16658  01217E  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 16659  012182  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 16660  012186  5045               	movf	CANreceiveMessage@tamp,w,c
 16661  012188  243C               	addwf	??_CANreceiveMessage,w,c
 16662  01218A  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16663  01218C  0E00               	movlw	0
 16664  01218E  203D               	addwfc	??_CANreceiveMessage+1,w,c
 16665  012190  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16666  012192  0E00               	movlw	0
 16667  012194  203E               	addwfc	??_CANreceiveMessage+2,w,c
 16668  012196  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16669  012198  0E00               	movlw	0
 16670  01219A  203F               	addwfc	??_CANreceiveMessage+3,w,c
 16671  01219C  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16672  01219E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16673  0121A2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16674  0121A6  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16675  0121AA  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16676  0121AE  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16677  0121B2  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16678                           
 16679                           ;inc\CANlib.h: 562: }
 16680  0121B6  D08D               	goto	i2l6081
 16681  0121B8                     i2l6055:
 16682                           
 16683                           ; BSR set to: 15
 16684                           ;inc\CANlib.h: 563: else
 16685                           ;inc\CANlib.h: 564: {
 16686                           ;inc\CANlib.h: 565: msg->identifier = (unsigned long) RXB1EIDL;
 16687  0121B8  CF54 F03C          	movff	3924,??_CANreceiveMessage	;volatile
 16688  0121BC  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16689  0121BE  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16690  0121C0  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16691  0121C2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16692  0121C6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16693  0121CA  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 16694  0121CE  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16695  0121D2  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16696  0121D6  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16697                           
 16698                           ; BSR set to: 15
 16699                           ;inc\CANlib.h: 566: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16700  0121DA  CF53 F03C          	movff	3923,??_CANreceiveMessage	;volatile
 16701  0121DE  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16702  0121E0  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16703  0121E2  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16704  0121E4  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16705  0121E8  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16706  0121EC  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16707  0121F0  6A3C               	clrf	??_CANreceiveMessage,c
 16708  0121F2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16709  0121F6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16710  0121FA  503C               	movf	??_CANreceiveMessage,w,c
 16711  0121FC  26DE               	addwf	postinc2,f,c
 16712  0121FE  503D               	movf	??_CANreceiveMessage+1,w,c
 16713  012200  22DE               	addwfc	postinc2,f,c
 16714  012202  503E               	movf	??_CANreceiveMessage+2,w,c
 16715  012204  22DE               	addwfc	postinc2,f,c
 16716  012206  503F               	movf	??_CANreceiveMessage+3,w,c
 16717  012208  22DE               	addwfc	postinc2,f,c
 16718                           
 16719                           ; BSR set to: 15
 16720                           ;inc\CANlib.h: 568: if (RXB1SIDLbits.EID16)
 16721  01220A  010F               	movlb	15	; () banked
 16722  01220C  A152               	btfss	82,0,b	;volatile
 16723  01220E  D00C               	goto	i2l6063
 16724                           
 16725                           ; BSR set to: 15
 16726                           ;inc\CANlib.h: 569: msg->identifier |= 0x00010000;
 16727  012210  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16728  012214  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16729  012218  0E00               	movlw	0
 16730  01221A  12DE               	iorwf	postinc2,f,c
 16731  01221C  0E00               	movlw	0
 16732  01221E  12DE               	iorwf	postinc2,f,c
 16733  012220  0E01               	movlw	1
 16734  012222  12DE               	iorwf	postinc2,f,c
 16735  012224  0E00               	movlw	0
 16736  012226  12DE               	iorwf	postinc2,f,c
 16737  012228                     i2l6063:
 16738                           
 16739                           ; BSR set to: 15
 16740                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID17)
 16741  012228  010F               	movlb	15	; () banked
 16742  01222A  A352               	btfss	82,1,b	;volatile
 16743  01222C  D00C               	goto	i2l6067
 16744                           
 16745                           ; BSR set to: 15
 16746                           ;inc\CANlib.h: 571: msg->identifier |= 0x00020000;
 16747  01222E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16748  012232  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16749  012236  0E00               	movlw	0
 16750  012238  12DE               	iorwf	postinc2,f,c
 16751  01223A  0E00               	movlw	0
 16752  01223C  12DE               	iorwf	postinc2,f,c
 16753  01223E  0E02               	movlw	2
 16754  012240  12DE               	iorwf	postinc2,f,c
 16755  012242  0E00               	movlw	0
 16756  012244  12DE               	iorwf	postinc2,f,c
 16757  012246                     i2l6067:
 16758                           
 16759                           ; BSR set to: 15
 16760                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.SID0)
 16761  012246  010F               	movlb	15	; () banked
 16762  012248  AB52               	btfss	82,5,b	;volatile
 16763  01224A  D00C               	goto	i2l6071
 16764                           
 16765                           ; BSR set to: 15
 16766                           ;inc\CANlib.h: 573: msg->identifier |= 0x00040000;
 16767  01224C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16768  012250  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16769  012254  0E00               	movlw	0
 16770  012256  12DE               	iorwf	postinc2,f,c
 16771  012258  0E00               	movlw	0
 16772  01225A  12DE               	iorwf	postinc2,f,c
 16773  01225C  0E04               	movlw	4
 16774  01225E  12DE               	iorwf	postinc2,f,c
 16775  012260  0E00               	movlw	0
 16776  012262  12DE               	iorwf	postinc2,f,c
 16777  012264                     i2l6071:
 16778                           
 16779                           ; BSR set to: 15
 16780                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID1)
 16781  012264  010F               	movlb	15	; () banked
 16782  012266  AD52               	btfss	82,6,b	;volatile
 16783  012268  D00C               	goto	i2l6075
 16784                           
 16785                           ; BSR set to: 15
 16786                           ;inc\CANlib.h: 575: msg->identifier |= 0x00080000;
 16787  01226A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16788  01226E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16789  012272  0E00               	movlw	0
 16790  012274  12DE               	iorwf	postinc2,f,c
 16791  012276  0E00               	movlw	0
 16792  012278  12DE               	iorwf	postinc2,f,c
 16793  01227A  0E08               	movlw	8
 16794  01227C  12DE               	iorwf	postinc2,f,c
 16795  01227E  0E00               	movlw	0
 16796  012280  12DE               	iorwf	postinc2,f,c
 16797  012282                     i2l6075:
 16798                           
 16799                           ; BSR set to: 15
 16800                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID2)
 16801  012282  010F               	movlb	15	; () banked
 16802  012284  AF52               	btfss	82,7,b	;volatile
 16803  012286  D00C               	goto	i2l6079
 16804                           
 16805                           ; BSR set to: 15
 16806                           ;inc\CANlib.h: 577: msg->identifier |= 0x00100000;
 16807  012288  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16808  01228C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16809  012290  0E00               	movlw	0
 16810  012292  12DE               	iorwf	postinc2,f,c
 16811  012294  0E00               	movlw	0
 16812  012296  12DE               	iorwf	postinc2,f,c
 16813  012298  0E10               	movlw	16
 16814  01229A  12DE               	iorwf	postinc2,f,c
 16815  01229C  0E00               	movlw	0
 16816  01229E  12DE               	iorwf	postinc2,f,c
 16817  0122A0                     i2l6079:
 16818                           
 16819                           ; BSR set to: 15
 16820                           ;inc\CANlib.h: 579: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 16821  0122A0  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 16822  0122A4  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16823  0122A6  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16824  0122A8  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16825  0122AA  0E15               	movlw	21
 16826  0122AC                     i2u750_45:
 16827  0122AC  90D8               	bcf	status,0,c
 16828  0122AE  363C               	rlcf	??_CANreceiveMessage,f,c
 16829  0122B0  363D               	rlcf	??_CANreceiveMessage+1,f,c
 16830  0122B2  363E               	rlcf	??_CANreceiveMessage+2,f,c
 16831  0122B4  363F               	rlcf	??_CANreceiveMessage+3,f,c
 16832  0122B6  2EE8               	decfsz	wreg,f,c
 16833  0122B8  D7F9               	goto	i2u750_45
 16834  0122BA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16835  0122BE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16836  0122C2  503C               	movf	??_CANreceiveMessage,w,c
 16837  0122C4  12DE               	iorwf	postinc2,f,c
 16838  0122C6  503D               	movf	??_CANreceiveMessage+1,w,c
 16839  0122C8  12DE               	iorwf	postinc2,f,c
 16840  0122CA  503E               	movf	??_CANreceiveMessage+2,w,c
 16841  0122CC  12DE               	iorwf	postinc2,f,c
 16842  0122CE  503F               	movf	??_CANreceiveMessage+3,w,c
 16843  0122D0  12DE               	iorwf	postinc2,f,c
 16844  0122D2                     i2l6081:
 16845                           
 16846                           ; BSR set to: 15
 16847                           ;inc\CANlib.h: 580: }
 16848                           ;inc\CANlib.h: 582: RXB1CONbits.RXFUL = 0x00;
 16849  0122D2  010F               	movlb	15	; () banked
 16850  0122D4  9F50               	bcf	80,7,b	;volatile
 16851                           
 16852                           ; BSR set to: 15
 16853                           ;inc\CANlib.h: 583: return (error);
 16854                           ;	Return value of _CANreceiveMessage is never used
 16855  0122D6  0012               	return	
 16856  0122D8                     i2l420:
 16857                           
 16858                           ; BSR set to: 15
 16859                           ;inc\CANlib.h: 584: }
 16860                           ;inc\CANlib.h: 586: if (RXB0CONbits.RXFUL ==0x01)
 16861  0122D8  AE60               	btfss	3936,7,c	;volatile
 16862  0122DA  0012               	return	
 16863                           
 16864                           ; BSR set to: 15
 16865                           ;inc\CANlib.h: 587: {
 16866                           ;inc\CANlib.h: 588: msg->identifier = 0;
 16867  0122DC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16868  0122E0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16869  0122E4  6ADE               	clrf	postinc2,c
 16870  0122E6  6ADE               	clrf	postinc2,c
 16871  0122E8  6ADE               	clrf	postinc2,c
 16872  0122EA  6ADD               	clrf	postdec2,c
 16873                           
 16874                           ; BSR set to: 15
 16875                           ;inc\CANlib.h: 589: msg->data[0] =RXB0D0;
 16876  0122EC  EE20 F004          	lfsr	2,4
 16877  0122F0  503A               	movf	CANreceiveMessage@msg,w,c
 16878  0122F2  26D9               	addwf	fsr2l,f,c
 16879  0122F4  503B               	movf	CANreceiveMessage@msg+1,w,c
 16880  0122F6  22DA               	addwfc	fsr2h,f,c
 16881  0122F8  CF66 FFDF          	movff	3942,indf2	;volatile
 16882                           
 16883                           ; BSR set to: 15
 16884                           ;inc\CANlib.h: 590: msg->data[1] =RXB0D1;
 16885  0122FC  EE20 F005          	lfsr	2,5
 16886  012300  503A               	movf	CANreceiveMessage@msg,w,c
 16887  012302  26D9               	addwf	fsr2l,f,c
 16888  012304  503B               	movf	CANreceiveMessage@msg+1,w,c
 16889  012306  22DA               	addwfc	fsr2h,f,c
 16890  012308  CF67 FFDF          	movff	3943,indf2	;volatile
 16891                           
 16892                           ; BSR set to: 15
 16893                           ;inc\CANlib.h: 591: msg->data[2] =RXB0D2;
 16894  01230C  EE20 F006          	lfsr	2,6
 16895  012310  503A               	movf	CANreceiveMessage@msg,w,c
 16896  012312  26D9               	addwf	fsr2l,f,c
 16897  012314  503B               	movf	CANreceiveMessage@msg+1,w,c
 16898  012316  22DA               	addwfc	fsr2h,f,c
 16899  012318  CF68 FFDF          	movff	3944,indf2	;volatile
 16900                           
 16901                           ; BSR set to: 15
 16902                           ;inc\CANlib.h: 592: msg->data[3] =RXB0D3;
 16903  01231C  EE20 F007          	lfsr	2,7
 16904  012320  503A               	movf	CANreceiveMessage@msg,w,c
 16905  012322  26D9               	addwf	fsr2l,f,c
 16906  012324  503B               	movf	CANreceiveMessage@msg+1,w,c
 16907  012326  22DA               	addwfc	fsr2h,f,c
 16908  012328  CF69 FFDF          	movff	3945,indf2	;volatile
 16909                           
 16910                           ; BSR set to: 15
 16911                           ;inc\CANlib.h: 593: msg->data[4] =RXB0D4;
 16912  01232C  EE20 F008          	lfsr	2,8
 16913  012330  503A               	movf	CANreceiveMessage@msg,w,c
 16914  012332  26D9               	addwf	fsr2l,f,c
 16915  012334  503B               	movf	CANreceiveMessage@msg+1,w,c
 16916  012336  22DA               	addwfc	fsr2h,f,c
 16917  012338  CF6A FFDF          	movff	3946,indf2	;volatile
 16918                           
 16919                           ; BSR set to: 15
 16920                           ;inc\CANlib.h: 594: msg->data[5] =RXB0D5;
 16921  01233C  EE20 F009          	lfsr	2,9
 16922  012340  503A               	movf	CANreceiveMessage@msg,w,c
 16923  012342  26D9               	addwf	fsr2l,f,c
 16924  012344  503B               	movf	CANreceiveMessage@msg+1,w,c
 16925  012346  22DA               	addwfc	fsr2h,f,c
 16926  012348  CF6B FFDF          	movff	3947,indf2	;volatile
 16927                           
 16928                           ; BSR set to: 15
 16929                           ;inc\CANlib.h: 595: msg->data[6] =RXB0D6;
 16930  01234C  EE20 F00A          	lfsr	2,10
 16931  012350  503A               	movf	CANreceiveMessage@msg,w,c
 16932  012352  26D9               	addwf	fsr2l,f,c
 16933  012354  503B               	movf	CANreceiveMessage@msg+1,w,c
 16934  012356  22DA               	addwfc	fsr2h,f,c
 16935  012358  CF6C FFDF          	movff	3948,indf2	;volatile
 16936                           
 16937                           ; BSR set to: 15
 16938                           ;inc\CANlib.h: 596: msg->data[7] =RXB0D7;
 16939  01235C  EE20 F00B          	lfsr	2,11
 16940  012360  503A               	movf	CANreceiveMessage@msg,w,c
 16941  012362  26D9               	addwf	fsr2l,f,c
 16942  012364  503B               	movf	CANreceiveMessage@msg+1,w,c
 16943  012366  22DA               	addwfc	fsr2h,f,c
 16944  012368  CF6D FFDF          	movff	3949,indf2	;volatile
 16945                           
 16946                           ; BSR set to: 15
 16947                           ;inc\CANlib.h: 598: msg->RTR = RXB0DLCbits.RXRTR;
 16948  01236C  EE20 F00E          	lfsr	2,14
 16949  012370  503A               	movf	CANreceiveMessage@msg,w,c
 16950  012372  26D9               	addwf	fsr2l,f,c
 16951  012374  503B               	movf	CANreceiveMessage@msg+1,w,c
 16952  012376  22DA               	addwfc	fsr2h,f,c
 16953  012378  AC65               	btfss	3941,6,c	;volatile
 16954  01237A  D002               	goto	i2u752_40
 16955  01237C  0E01               	movlw	1
 16956  01237E  D001               	goto	i2u752_46
 16957  012380                     i2u752_40:
 16958  012380  0E00               	movlw	0
 16959  012382                     i2u752_46:
 16960  012382  6EDF               	movwf	indf2,c
 16961                           
 16962                           ; BSR set to: 15
 16963                           ;inc\CANlib.h: 600: msg->length = RXB0DLC & 0x0F;
 16964  012384  EE20 F00D          	lfsr	2,13
 16965  012388  503A               	movf	CANreceiveMessage@msg,w,c
 16966  01238A  26D9               	addwf	fsr2l,f,c
 16967  01238C  503B               	movf	CANreceiveMessage@msg+1,w,c
 16968  01238E  22DA               	addwfc	fsr2h,f,c
 16969  012390  5065               	movf	3941,w,c	;volatile
 16970  012392  0B0F               	andlw	15
 16971  012394  6EDF               	movwf	indf2,c
 16972                           
 16973                           ; BSR set to: 15
 16974                           ;inc\CANlib.h: 602: msg->type = RXB0SIDLbits.EXID;
 16975  012396  EE20 F00C          	lfsr	2,12
 16976  01239A  503A               	movf	CANreceiveMessage@msg,w,c
 16977  01239C  26D9               	addwf	fsr2l,f,c
 16978  01239E  503B               	movf	CANreceiveMessage@msg+1,w,c
 16979  0123A0  22DA               	addwfc	fsr2h,f,c
 16980  0123A2  A662               	btfss	3938,3,c	;volatile
 16981  0123A4  D002               	goto	i2u753_40
 16982  0123A6  0E01               	movlw	1
 16983  0123A8  D001               	goto	i2u753_46
 16984  0123AA                     i2u753_40:
 16985  0123AA  0E00               	movlw	0
 16986  0123AC                     i2u753_46:
 16987  0123AC  6EDF               	movwf	indf2,c
 16988                           
 16989                           ; BSR set to: 15
 16990                           ;inc\CANlib.h: 604: if (RXB0SIDLbits.EXID == 0)
 16991  0123AE  B662               	btfsc	3938,3,c	;volatile
 16992  0123B0  D043               	goto	i2l6117
 16993                           
 16994                           ; BSR set to: 15
 16995                           ;inc\CANlib.h: 605: {
 16996                           ;inc\CANlib.h: 606: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 16997  0123B2  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 16998  0123B6  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16999  0123B8  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17000  0123BA  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17001  0123BC  0E03               	movlw	3
 17002  0123BE                     i2u755_45:
 17003  0123BE  90D8               	bcf	status,0,c
 17004  0123C0  363C               	rlcf	??_CANreceiveMessage,f,c
 17005  0123C2  363D               	rlcf	??_CANreceiveMessage+1,f,c
 17006  0123C4  363E               	rlcf	??_CANreceiveMessage+2,f,c
 17007  0123C6  363F               	rlcf	??_CANreceiveMessage+3,f,c
 17008  0123C8  2EE8               	decfsz	wreg,f,c
 17009  0123CA  D7F9               	goto	i2u755_45
 17010  0123CC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17011  0123D0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17012  0123D4  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 17013  0123D8  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17014  0123DC  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17015  0123E0  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17016                           
 17017                           ; BSR set to: 15
 17018                           ;inc\CANlib.h: 607: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17019  0123E4  3862               	swapf	3938,w,c	;volatile
 17020  0123E6  42E8               	rrncf	wreg,f,c
 17021  0123E8  0B07               	andlw	7
 17022  0123EA  0B07               	andlw	7
 17023  0123EC  6E45               	movwf	CANreceiveMessage@tamp,c
 17024                           
 17025                           ; BSR set to: 15
 17026                           ;inc\CANlib.h: 608: msg->identifier = msg->identifier + tamp;
 17027  0123EE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17028  0123F2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17029  0123F6  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 17030  0123FA  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 17031  0123FE  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 17032  012402  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 17033  012406  5045               	movf	CANreceiveMessage@tamp,w,c
 17034  012408  243C               	addwf	??_CANreceiveMessage,w,c
 17035  01240A  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17036  01240C  0E00               	movlw	0
 17037  01240E  203D               	addwfc	??_CANreceiveMessage+1,w,c
 17038  012410  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17039  012412  0E00               	movlw	0
 17040  012414  203E               	addwfc	??_CANreceiveMessage+2,w,c
 17041  012416  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17042  012418  0E00               	movlw	0
 17043  01241A  203F               	addwfc	??_CANreceiveMessage+3,w,c
 17044  01241C  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17045  01241E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17046  012422  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17047  012426  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17048  01242A  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17049  01242E  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17050  012432  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17051                           
 17052                           ;inc\CANlib.h: 609: }
 17053  012436  D088               	goto	i2l6143
 17054  012438                     i2l6117:
 17055                           
 17056                           ; BSR set to: 15
 17057                           ;inc\CANlib.h: 610: else
 17058                           ;inc\CANlib.h: 611: {
 17059                           ;inc\CANlib.h: 612: msg->identifier = (unsigned long) RXB0EIDL;
 17060  012438  CF64 F03C          	movff	3940,??_CANreceiveMessage	;volatile
 17061  01243C  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17062  01243E  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17063  012440  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17064  012442  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17065  012446  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17066  01244A  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 17067  01244E  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17068  012452  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17069  012456  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17070                           
 17071                           ; BSR set to: 15
 17072                           ;inc\CANlib.h: 613: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17073  01245A  CF63 F03C          	movff	3939,??_CANreceiveMessage	;volatile
 17074  01245E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17075  012460  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17076  012462  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17077  012464  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17078  012468  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17079  01246C  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17080  012470  6A3C               	clrf	??_CANreceiveMessage,c
 17081  012472  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17082  012476  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17083  01247A  503C               	movf	??_CANreceiveMessage,w,c
 17084  01247C  26DE               	addwf	postinc2,f,c
 17085  01247E  503D               	movf	??_CANreceiveMessage+1,w,c
 17086  012480  22DE               	addwfc	postinc2,f,c
 17087  012482  503E               	movf	??_CANreceiveMessage+2,w,c
 17088  012484  22DE               	addwfc	postinc2,f,c
 17089  012486  503F               	movf	??_CANreceiveMessage+3,w,c
 17090  012488  22DE               	addwfc	postinc2,f,c
 17091                           
 17092                           ; BSR set to: 15
 17093                           ;inc\CANlib.h: 615: if (RXB0SIDLbits.EID16)
 17094  01248A  A062               	btfss	3938,0,c	;volatile
 17095  01248C  D00C               	goto	i2l6125
 17096                           
 17097                           ; BSR set to: 15
 17098                           ;inc\CANlib.h: 616: msg->identifier |= 0x00010000;
 17099  01248E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17100  012492  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17101  012496  0E00               	movlw	0
 17102  012498  12DE               	iorwf	postinc2,f,c
 17103  01249A  0E00               	movlw	0
 17104  01249C  12DE               	iorwf	postinc2,f,c
 17105  01249E  0E01               	movlw	1
 17106  0124A0  12DE               	iorwf	postinc2,f,c
 17107  0124A2  0E00               	movlw	0
 17108  0124A4  12DE               	iorwf	postinc2,f,c
 17109  0124A6                     i2l6125:
 17110                           
 17111                           ; BSR set to: 15
 17112                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID17)
 17113  0124A6  A262               	btfss	3938,1,c	;volatile
 17114  0124A8  D00C               	goto	i2l6129
 17115                           
 17116                           ; BSR set to: 15
 17117                           ;inc\CANlib.h: 618: msg->identifier |= 0x00020000;
 17118  0124AA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17119  0124AE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17120  0124B2  0E00               	movlw	0
 17121  0124B4  12DE               	iorwf	postinc2,f,c
 17122  0124B6  0E00               	movlw	0
 17123  0124B8  12DE               	iorwf	postinc2,f,c
 17124  0124BA  0E02               	movlw	2
 17125  0124BC  12DE               	iorwf	postinc2,f,c
 17126  0124BE  0E00               	movlw	0
 17127  0124C0  12DE               	iorwf	postinc2,f,c
 17128  0124C2                     i2l6129:
 17129                           
 17130                           ; BSR set to: 15
 17131                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.SID0)
 17132  0124C2  AA62               	btfss	3938,5,c	;volatile
 17133  0124C4  D00C               	goto	i2l6133
 17134                           
 17135                           ; BSR set to: 15
 17136                           ;inc\CANlib.h: 620: msg->identifier |= 0x00040000;
 17137  0124C6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17138  0124CA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17139  0124CE  0E00               	movlw	0
 17140  0124D0  12DE               	iorwf	postinc2,f,c
 17141  0124D2  0E00               	movlw	0
 17142  0124D4  12DE               	iorwf	postinc2,f,c
 17143  0124D6  0E04               	movlw	4
 17144  0124D8  12DE               	iorwf	postinc2,f,c
 17145  0124DA  0E00               	movlw	0
 17146  0124DC  12DE               	iorwf	postinc2,f,c
 17147  0124DE                     i2l6133:
 17148                           
 17149                           ; BSR set to: 15
 17150                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID1)
 17151  0124DE  AC62               	btfss	3938,6,c	;volatile
 17152  0124E0  D00C               	goto	i2l6137
 17153                           
 17154                           ; BSR set to: 15
 17155                           ;inc\CANlib.h: 622: msg->identifier |= 0x00080000;
 17156  0124E2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17157  0124E6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17158  0124EA  0E00               	movlw	0
 17159  0124EC  12DE               	iorwf	postinc2,f,c
 17160  0124EE  0E00               	movlw	0
 17161  0124F0  12DE               	iorwf	postinc2,f,c
 17162  0124F2  0E08               	movlw	8
 17163  0124F4  12DE               	iorwf	postinc2,f,c
 17164  0124F6  0E00               	movlw	0
 17165  0124F8  12DE               	iorwf	postinc2,f,c
 17166  0124FA                     i2l6137:
 17167                           
 17168                           ; BSR set to: 15
 17169                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID2)
 17170  0124FA  AE62               	btfss	3938,7,c	;volatile
 17171  0124FC  D00C               	goto	i2l6141
 17172                           
 17173                           ; BSR set to: 15
 17174                           ;inc\CANlib.h: 624: msg->identifier |= 0x00100000;
 17175  0124FE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17176  012502  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17177  012506  0E00               	movlw	0
 17178  012508  12DE               	iorwf	postinc2,f,c
 17179  01250A  0E00               	movlw	0
 17180  01250C  12DE               	iorwf	postinc2,f,c
 17181  01250E  0E10               	movlw	16
 17182  012510  12DE               	iorwf	postinc2,f,c
 17183  012512  0E00               	movlw	0
 17184  012514  12DE               	iorwf	postinc2,f,c
 17185  012516                     i2l6141:
 17186                           
 17187                           ; BSR set to: 15
 17188                           ;inc\CANlib.h: 626: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17189  012516  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 17190  01251A  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17191  01251C  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17192  01251E  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17193  012520  0E15               	movlw	21
 17194  012522                     i2u761_45:
 17195  012522  90D8               	bcf	status,0,c
 17196  012524  363C               	rlcf	??_CANreceiveMessage,f,c
 17197  012526  363D               	rlcf	??_CANreceiveMessage+1,f,c
 17198  012528  363E               	rlcf	??_CANreceiveMessage+2,f,c
 17199  01252A  363F               	rlcf	??_CANreceiveMessage+3,f,c
 17200  01252C  2EE8               	decfsz	wreg,f,c
 17201  01252E  D7F9               	goto	i2u761_45
 17202  012530  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17203  012534  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17204  012538  503C               	movf	??_CANreceiveMessage,w,c
 17205  01253A  12DE               	iorwf	postinc2,f,c
 17206  01253C  503D               	movf	??_CANreceiveMessage+1,w,c
 17207  01253E  12DE               	iorwf	postinc2,f,c
 17208  012540  503E               	movf	??_CANreceiveMessage+2,w,c
 17209  012542  12DE               	iorwf	postinc2,f,c
 17210  012544  503F               	movf	??_CANreceiveMessage+3,w,c
 17211  012546  12DE               	iorwf	postinc2,f,c
 17212  012548                     i2l6143:
 17213                           
 17214                           ; BSR set to: 15
 17215                           ;inc\CANlib.h: 628: }
 17216                           ;inc\CANlib.h: 629: RXB0CONbits.RXFUL = 0x00;
 17217  012548  9E60               	bcf	3936,7,c	;volatile
 17218                           
 17219                           ; BSR set to: 15
 17220                           ;inc\CANlib.h: 631: return (error);
 17221                           ;	Return value of _CANreceiveMessage is never used
 17222  01254A  0012               	return	
 17223  01254C                     __end_of_CANreceiveMessage:
 17224                           	opt stack 0
 17225                           pclatu	equ	0xFFB
 17226                           pclath	equ	0xFFA
 17227                           tblptru	equ	0xFF8
 17228                           tblptrh	equ	0xFF7
 17229                           tblptrl	equ	0xFF6
 17230                           tablat	equ	0xFF5
 17231                           prodh	equ	0xFF4
 17232                           prodl	equ	0xFF3
 17233                           intcon	equ	0xFF2
 17234                           postinc0	equ	0xFEE
 17235                           fsr0h	equ	0xFEA
 17236                           fsr0l	equ	0xFE9
 17237                           wreg	equ	0xFE8
 17238                           indf1	equ	0xFE7
 17239                           fsr1h	equ	0xFE2
 17240                           fsr1l	equ	0xFE1
 17241                           bsr	equ	0xFE0
 17242                           indf2	equ	0xFDF
 17243                           postinc2	equ	0xFDE
 17244                           postdec2	equ	0xFDD
 17245                           fsr2h	equ	0xFDA
 17246                           fsr2l	equ	0xFD9
 17247                           status	equ	0xFD8
 17248                           
 17249 ;; *************** function _CANisRxReady *****************
 17250 ;; Defined at:
 17251 ;;		line 1162 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;		None
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;		None
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      unsigned char 
 17258 ;; Registers used:
 17259 ;;		wreg, status,2
 17260 ;; Tracked objects:
 17261 ;;		On entry : 0/0
 17262 ;;		On exit  : 0/0
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;Total ram usage:        1 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; This function calls:
 17272 ;;		Nothing
 17273 ;; This function is called by:
 17274 ;;		_ISR_alta
 17275 ;; This function uses a non-reentrant model
 17276 ;;
 17277                           
 17278                           	psect	text47
 17279  01537C                     __ptext47:
 17280                           	opt stack 0
 17281  01537C                     _CANisRxReady:
 17282                           	opt stack 21
 17283                           
 17284                           ;inc\CANlib.h: 1164: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 17285                           
 17286                           ; BSR set to: 15
 17287                           ;incstack = 0
 17288  01537C  0E01               	movlw	1
 17289  01537E  6E3A               	movwf	_CANisRxReady$3296,c
 17290  015380  BE60               	btfsc	3936,7,c	;volatile
 17291  015382  D005               	goto	i2l571
 17292  015384  010F               	movlb	15	; () banked
 17293  015386  BF50               	btfsc	80,7,b	;volatile
 17294  015388  D002               	goto	i2l571
 17295                           
 17296                           ; BSR set to: 15
 17297  01538A  0E00               	movlw	0
 17298  01538C  6E3A               	movwf	_CANisRxReady$3296,c
 17299  01538E                     i2l571:
 17300  01538E  503A               	movf	_CANisRxReady$3296,w,c
 17301  015390  0012               	return	
 17302  015392                     __end_of_CANisRxReady:
 17303                           	opt stack 0
 17304                           pclatu	equ	0xFFB
 17305                           pclath	equ	0xFFA
 17306                           tblptru	equ	0xFF8
 17307                           tblptrh	equ	0xFF7
 17308                           tblptrl	equ	0xFF6
 17309                           tablat	equ	0xFF5
 17310                           prodh	equ	0xFF4
 17311                           prodl	equ	0xFF3
 17312                           intcon	equ	0xFF2
 17313                           postinc0	equ	0xFEE
 17314                           fsr0h	equ	0xFEA
 17315                           fsr0l	equ	0xFE9
 17316                           wreg	equ	0xFE8
 17317                           indf1	equ	0xFE7
 17318                           fsr1h	equ	0xFE2
 17319                           fsr1l	equ	0xFE1
 17320                           bsr	equ	0xFE0
 17321                           indf2	equ	0xFDF
 17322                           postinc2	equ	0xFDE
 17323                           postdec2	equ	0xFDD
 17324                           fsr2h	equ	0xFDA
 17325                           fsr2l	equ	0xFD9
 17326                           status	equ	0xFD8
 17327                           pclatu	equ	0xFFB
 17328                           pclath	equ	0xFFA
 17329                           tblptru	equ	0xFF8
 17330                           tblptrh	equ	0xFF7
 17331                           tblptrl	equ	0xFF6
 17332                           tablat	equ	0xFF5
 17333                           prodh	equ	0xFF4
 17334                           prodl	equ	0xFF3
 17335                           intcon	equ	0xFF2
 17336                           postinc0	equ	0xFEE
 17337                           fsr0h	equ	0xFEA
 17338                           fsr0l	equ	0xFE9
 17339                           wreg	equ	0xFE8
 17340                           indf1	equ	0xFE7
 17341                           fsr1h	equ	0xFE2
 17342                           fsr1l	equ	0xFE1
 17343                           bsr	equ	0xFE0
 17344                           indf2	equ	0xFDF
 17345                           postinc2	equ	0xFDE
 17346                           postdec2	equ	0xFDD
 17347                           fsr2h	equ	0xFDA
 17348                           fsr2l	equ	0xFD9
 17349                           status	equ	0xFD8
 17350                           
 17351                           	psect	rparam
 17352  0000                     pclatu	equ	0xFFB
 17353                           pclath	equ	0xFFA
 17354                           tblptru	equ	0xFF8
 17355                           tblptrh	equ	0xFF7
 17356                           tblptrl	equ	0xFF6
 17357                           tablat	equ	0xFF5
 17358                           prodh	equ	0xFF4
 17359                           prodl	equ	0xFF3
 17360                           intcon	equ	0xFF2
 17361                           postinc0	equ	0xFEE
 17362                           fsr0h	equ	0xFEA
 17363                           fsr0l	equ	0xFE9
 17364                           wreg	equ	0xFE8
 17365                           indf1	equ	0xFE7
 17366                           fsr1h	equ	0xFE2
 17367                           fsr1l	equ	0xFE1
 17368                           bsr	equ	0xFE0
 17369                           indf2	equ	0xFDF
 17370                           postinc2	equ	0xFDE
 17371                           postdec2	equ	0xFDD
 17372                           fsr2h	equ	0xFDA
 17373                           fsr2l	equ	0xFD9
 17374                           status	equ	0xFD8
 17375                           
 17376                           	psect	temp
 17377  000048                     btemp:
 17378                           	opt stack 0
 17379  000048                     	ds	1
 17380  0000                     int$flags	set	btemp
 17381                           pclatu	equ	0xFFB
 17382                           pclath	equ	0xFFA
 17383                           tblptru	equ	0xFF8
 17384                           tblptrh	equ	0xFF7
 17385                           tblptrl	equ	0xFF6
 17386                           tablat	equ	0xFF5
 17387                           prodh	equ	0xFF4
 17388                           prodl	equ	0xFF3
 17389                           intcon	equ	0xFF2
 17390                           postinc0	equ	0xFEE
 17391                           fsr0h	equ	0xFEA
 17392                           fsr0l	equ	0xFE9
 17393                           wreg	equ	0xFE8
 17394                           indf1	equ	0xFE7
 17395                           fsr1h	equ	0xFE2
 17396                           fsr1l	equ	0xFE1
 17397                           bsr	equ	0xFE0
 17398                           indf2	equ	0xFDF
 17399                           postinc2	equ	0xFDE
 17400                           postdec2	equ	0xFDD
 17401                           fsr2h	equ	0xFDA
 17402                           fsr2l	equ	0xFD9
 17403                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      71
    BANK0           160    104     144
    BANK1           256     33      45
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 1
		 -> data_speed(BANK0[1]), data_brake(BANK0[1]), data_steering(BANK0[1]), data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_interpreter->_CANsendMessage
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  192286
                                             25 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   65808
                      _CANInitialize
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28113
                                             28 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8996
                                             26 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   80829
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41239
                                             94 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             53 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             53 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             28 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             20 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             14 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             14 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             14 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             62 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             86 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             66 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1883
                                             14 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9596
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10366
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9377
                                             26 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8888
                                             26 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8857
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8857
                                             22 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1341
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1341
                                             20 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      99
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0    5187
                                             30 BANK0      4     4      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             14 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4326
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    1291
                                             29 COMRAM     1     1      0
                                              0 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      2D       7       17.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      90       5       90.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1E      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104      20        0.0%
DATA                 0      0     104       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Mar 26 13:59:47 2016

                  ___fldiv@aexp 0086                    ___fldiv@bexp 0085       __size_of_delay_set_quartz 000A  
          __end_of_CANSetFilter 0B06                    ?_LCD_Handler 0029                    ___fldiv@sign 007A  
                  ___awdiv@sign 0079                              _id 000B                              bsr 000FE0  
           ___wmul@multiplicand 0070                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000                             l400 17FE  
                           l403 18B8                             l412 1A72                             l404 18BC  
                           l500 074A                             l413 1A76                             l405 19B4  
                           l501 0756                             l414 1A82                             l406 1944  
                           l510 0862                             l502 075A                             l407 194E  
                           l511 0866                             l503 0766                             l408 1958  
                           l520 0972                             l512 0872                             l409 1962  
                           l521 097E                             l513 0876                             l530 0A8A  
                           l522 0982                             l514 0882                             l506 0842  
                           l450 387C                             l442 383C                             l531 0A8E  
                           l523 098E                             l507 0846                             l443 3840  
                           l380 145A                             l532 0A9A                             l524 0992  
                           l508 0852                             l460 3988                             l444 384C  
                           l373 161E                             l533 0A9E                             l525 099E  
                           l517 095E                             l509 0856                             l461 3994  
                           l453 3954                             l445 3850                             l390 1638  
                           l374 13B0                             l534 0AAA                             l518 0962  
                           l454 3958                             l446 385C                             l391 1730  
                           l383 156A                             l375 13B4                             l535 0AAE  
                           l519 096E                             l455 3964                             l447 3860  
                           l392 16C0                             l384 156E                             l376 14AC  
                           l536 0ABA                             l528 0A7A                             l480 0524  
                           l456 3968                             l448 386C                             l368 3F60  
                           l393 16CA                             l385 157A                             l377 143C  
                           l801 506C                             l529 0A7E                             l481 0530  
                           l473 04F0                             l457 3974                             l449 3870  
                           l369 3F6A                             l394 16D4                             l378 1446  
                           l490 063A                             l474 04F4                             l458 3978  
                           l395 16DE                             l379 1450                             l803 506E  
                           l491 063E                             l475 0500                             l459 3984  
                           l388 18A2                             l492 064A                             l484 060A  
                           l476 0504                             l389 1634                             l485 060E  
                           l477 0510                             l566 5322                             l398 17EE  
                           l486 061A                             l478 0514                             l399 17F2  
                           l495 0726                             l487 061E                             l479 0520  
                           l496 072A                             l488 062A                             l497 0736  
                           l489 062E                             l498 073A                             l746 2FF0  
                           l579 51A0                             l499 0746                             l796 5352  
                           l887 10FA            ??_PWR_Button_Polling 006E                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                     ?_LCD_cursor 007A                             _dir 00EA  
                           _msg 0019                             _str 0121                    ___awmod@sign 0073  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0089  
                  ___flmul@bexp 008E                    ___flmul@sign 0088                    ___flmul@temp 0093  
                  ___flmul@prod 008F                    __CFG_LVP$OFF 000000          __size_of_LCD_goto_line 00EC  
                  ___fltol@exp1 00A7                    __CFG_WDT$OFF 000000                            l1112 450E  
                          l1122 4348                            l1210 4176                            l1400 2720  
                          l1216 41F6                            l1401 26EC                            l1305 4DBE  
                          l1209 4132                            l1315 4FB4                            l1502 2E56  
                          l1416 28A0                            l1521 3E28                            l1425 2934  
                          l1522 3E40                            l1514 3DCC                            l1507 3D20  
                          l1455 34B0                            l1464 34E8                            l1466 3556  
                          l1458 3458                            l1492 2D44                            l1485 2AA8  
                          l1494 2DB2                            l1399 272C                            l7023 37B0  
                          l7007 36FA                            l7105 00BE                            l7123 0176  
                          l7141 0230                            l8007 196C                            l7223 0534  
                          l7055 38C6                            l8033 1A86                            l8201 0CFA  
                          l7081 3998                            l7049 3880                            l8027 1A66  
                          l6611 25FC                            l7331 08CC                            l6605 25D8  
                          l7501 40A4                            l8213 0DB0                            l7325 0886  
                          l7229 057A                            l8071 4A2C                            l6623 2630  
                          l6615 2606                            l8215 0DC6                            l7263 0694  
                          l7159 02EA                            l8073 4A5E                            l7601 44D8  
                          l6801 2A6C                            l7441 3C7E                            l7433 3B86  
                          l8225 0E6A                            l8217 0E02                            l8209 0D7E  
                          l8153 0B66                            l8145 0B30                            l7257 064E  
                          l7177 03A4                            l8067 49C8                            l8075 4A90  
                          l8083 5238                            l8091 52F4                            l6723 28E8  
                          l7507 40DE                            l8331 1338                            l8323 12E0  
                          l8315 12AC                            l8307 1284                            l8243 0F7E  
                          l8219 0E18                            l8163 0BDA                            l8139 0B16  
                          l7291 076A                            l7195 045E                            l8069 49FA  
                          l7621 4256                            l6717 28D2                            l6733 2908  
                          l6709 2880                            l6653 266C                            l6581 256A  
                          l7701 4D58                            l7541 41C0                            l6901 2E80  
                          l6813 2ABC                            l7461 1D88                            l8309 1292  
                          l8261 0FFC                            l8245 0F84                            l8229 0E9C  
                          l8317 12BA                            l8157 0BB0                            l7365 09E8  
                          l6559 5192                            l8079 521E                            l8087 52E0  
                          l8423 34AC                            l6743 292E                            l6727 28F4  
                          l6735 290E                            l6671 2710                            l6591 2598  
                          l7607 44F4                            l6807 2A90                            l7455 1CB6  
                          l8335 1364                            l8327 1308                            l8263 1004  
                          l8271 10A0                            l8239 0F06                            l8175 0C24  
                          l8167 0BE0                            l8159 0BCA                            l7359 09A2  
                          l8417 3464                            l8409 342C                            l7625 42A4  
                          l6761 29BE                            l6753 298A                            l6681 2750  
                          l6665 2700                            l7721 4F5E                            l7609 4504  
                          l7537 41AC                            l6921 4C88                            l6817 2AD0  
                          l6809 2A96                            l7473 1F3C                            l7465 1DBA  
                          l8281 10DC                            l8273 10AE                            l8257 0FD0  
                          l8185 0C76                            l8169 0C0A                            l8337 136A  
                          l7393 0ABE                            l7297 07B0                            l8435 34FC  
                          l8355 32C4                            l7635 4394                            l7643 51D4  
                          l6691 2794                            l6667 2706                            l6587 258E  
                          l7563 43E4                            l7547 41DC                            l6931 4CB8  
                          l6915 4C72                            l7491 52D4                            l8339 138C  
                          l7811 3F6E                            l7741 3D58                            l8613 47CE  
                          l8461 35E8                            l8445 3550                            l8429 34D2  
                          l8349 32A0                            l7629 42F6                            l6773 29E2  
                          l6765 29CA                            l6757 299C                            l7653 48DC  
                          l7709 4DAC                            l7725 4FA2                            l7717 4F48  
                          l7557 43BE                            l7549 41EC                            l8293 112E  
                          l8285 10FE                            l7743 3D60                            l7735 3D30  
                          l8623 480E                            l8471 361E                            l8463 360A  
                          l8455 35A6                            l8391 3380                            l8375 3322  
                          l8359 32CE                            l6767 29CE                            l6695 279E  
                          l6599 25C4                            l7719 4F58                            l6927 4CA6  
                          l6943 4CF6                            l6791 2A3C                            l6783 2A12  
                          l7479 200E                            l8279 10C8                            l7815 3F76  
                          l7753 3E0A                            l7745 3D70                            l8633 4824  
                          l8369 32FE                            l6689 278E                            l7681 498A  
                          l7673 495E                            l7585 448C                            l7577 4438  
                          l6929 4CB2                            l6865 2D58                            l6793 2A4E  
                          l8297 1190                            l7817 3FBA                            l7809 3F58  
                          l7931 16E8                            l7755 3E1A                            l7747 3DAE  
                          l8627 4818                            l8459 35D4                            l8379 332C  
                          l6699 27B0                            l7683 4994                            l6947 4D0A  
                          l6939 4CE8                            l6971 4EDC                            l6963 4EB6  
                          l6891 2E3C                            l6875 2DAC                            l6859 2D2E  
                          l8573 4DD0                            l8645 48A2                            l8469 361A  
                          l7669 494A                            l7597 44C4                            l6885 2E02  
                          l6789 2A36                            l8821 3176                            l8805 2FFE  
                          l7951 17E2                            l7855 1464                            l8583 4E18  
                          l7767 3E92                            l8399 33AE                            l7687 49B0  
                          l7679 497A                            l6983 4F22                            l6975 4F00  
                          l6967 4ECA                            l6959 4EA6                            l8671 4738  
                          l8807 300A                            l7881 157E                            l8593 5062  
                          l7697 4D42                            l6969 4ED6                            l6889 2E28  
                          l8833 3200                            l8817 30F2                            l7875 155E  
                          l8587 4E50                            l7699 4D52                            l6979 4F0E  
                          l6899 2E76                            l8667 4716                            l8827 3180  
                          l7957 1802                            l8669 4728                            l6989 536E  
                          l8773 2ECE                            l8765 2E9E                            l8791 2FC8  
                          l8795 2FDA                            l8797 2FE0                            STR_1 FFBA  
                          STR_2 FF90                            STR_3 FF7B                            STR_4 FFBA  
                          STR_5 FFA5                            STR_6 FFCF                            STR_7 FFF9  
                          STR_8 FFEF                            STR_9 FFFD                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u8300 26CE                            u8310 26D0  
                          u9210 00F2                            u9140 39B8                            u9060 38A0  
                          u8165 5148                            u8166 514A                            u8175 5154  
                          u9215 00E6                            u8176 5156                            u8185 5160  
                          u9305 02C6                            u9225 0152                            u9145 39AC  
                          u9065 3894                            u8186 5162                            u8290 26B6  
                          u9330 0320                            u9250 01AC                            u9170 003A  
                          u8195 516C                            u8196 516E                            u9335 0314  
                          u9255 01A0                            u9175 002E                            u9345 0380  
                          u9265 020C                            u9185 009A                            u9370 03DA  
                          u9290 0266                            u9700 08A6                            u9620 078A  
                          u9540 066E                            u9460 0554                            u8750 2E16  
                          u8670 2CD0                            u9375 03CE                            u9295 025A  
                          u9705 089A                            u9625 077E                            u9545 0662  
                          u9465 0548                            u9385 043A                            u8930 3676  
                          u8675 2CC4                            u8935 366A                            u8945 36D6  
                          u8970 372C                            u9860 0ADE                            u9780 09C2  
                          u8975 3720                            u9961 4080                            u9865 0AD2  
                          u9785 09B6                            u8985 378C                            u9981 40BA  
           __size_of_CANSetMask 039E                            _data 0028                            _main 2E9A  
     __size_of_LCD_send_command 003A                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0048                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00C2                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 007F              __size_of_LCD_clear 0032                __end_of_CAN_Send 4E8A  
                  _sprintf$4272 0100                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 534A                   _LCD_backlight 5392                _CANOperationMode 5366  
       __size_of_LCD_initialize 016E      __size_of_CANreceiveMessage 050C                   ___fltol@sign1 00A6  
               __end_of___fladd 29F4                           ?_main 0029                 __end_of___fldiv 3642  
               __end_of___awdiv 4D14                 __end_of___flneg 51E6                           STR_10 FFDB  
                         STR_11 FFF4                           STR_12 FFBA                           STR_13 FFE7  
               __end_of___awmod 4F2C                 __end_of___flmul 2E9A                 __end_of___flsub 50F8  
               __end_of___fltol 49C2                 __end_of___lldiv 4DD0                           u11120 10F2  
                         u10190 48FC                           u10530 1484                           u10195 48F0  
                         u10540 14D0                           u11420 35BA                 ___awdiv@divisor 0076  
                         u10535 1478                           u10800 19D8                           u10545 14C4  
               __end_of___llmod 4FC6                           u11505 5362                           u10555 1530  
                         u10660 1708                           u10805 19CC                           u10670 1754  
                         u10815 1A38                           u11560 5090                           u10665 16FC  
                         u11490 5360                           u10675 1748                           u10685 17B4  
                         u10790 198C                           u11566 5092                           _T3CON 000FB1  
                         u11930 31EC                           u11850 2F96                           u10795 1980  
                         u11940 326C                           u11860 2FAE                           u10895 53A0  
                         u10896 53A2                           u11866 2FB0                           u11957 5194  
                         i2l420 22D8                           i1l737 007A                           i2l730 4B4C  
                         i2l571 538E                           i2l733 4B50                 ___awdiv@counter 0078  
                         _TMR3H 000FB3                           _TMR3L 000FB2               _CANisRxReady$3296 003A  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000              __size_of_ISR_bassa 00AA  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
            CANInitialize@flags 0080                __end_of_ISR_alta 4B8C                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers FF7B                           _scale 1B26                 __end_of_isdigit 52DE  
                __pbitbssCOMRAM 0238            __end_of_CANisRxReady 5392                           tablat 000FF5  
          __end_of_CANisTxReady 5328                           status 000FD8                 __end_of_sprintf 139A  
                __CFG_PBADEN$ON 000000             __size_of_LCD_cursor 0032                 __initialization 50F8  
                ?_LCD_backlight 0029                    __end_of_main 3282   __size_of_board_initialization 00CA  
                 _LCD_goto_line 49C2               ?_Joystick_Polling 0029              ??_Joystick_Polling 006E  
             ?_LCD_write_string 007F                          ??_main 0119                   __activetblptr 000003  
                _JoystickValues 00E4              ??_LCD_write_string 0081            __size_of__tdiv_to_l_ 019E  
             _CANisTxReady$3294 006E        __size_of_CAN_interpreter 010E               __end_of_LCD_clear 52B4  
        LCD_write_string@buffer 007F                          _ADCON1 000FC1                          _CANCON 000F6F  
              ___llmod@dividend 006E                          ?_scale 0095                          _ADRESH 000FC4  
              ___awdiv@dividend 0074                 __CFG_BBSIZ$1024 000000                          i2l6141 2516  
                        i2l6133 24DE                          i2l6125 24A6                          i2l6117 2438  
                        i2l6143 2548                          i2l6071 2264                          i2l6063 2228  
                        i2l6055 21B8                          i2l6137 24FA                          i2l6129 24C2  
                        i2l6081 22D2                          i2l6075 2282                          i2l6067 2246  
                        i2l6079 22A0                          i2l8741 4AE6                          i2l8753 4B1C  
                        i2l8747 4B06                          i2l8757 4B24                          _RXB0D0 000F66  
                        _RXB0D1 000F67                          _RXB0D2 000F68                          _RXB0D3 000F69  
                        _RXB0D4 000F6A                          _RXB1D0 000F56                          _RXB0D5 000F6B  
                        _RXB1D1 000F57                          _RXB0D6 000F6C                          _RXB1D2 000F58  
                        _RXB0D7 000F6D                          _RXB1D3 000F59                          _RXB1D4 000F5A  
                        _RXB1D5 000F5B                          _RXB1D6 000F5C                          _RXB1D7 000F5D  
                        _TXB0D0 000F46                          _TXB0D1 000F47                          _TXB0D2 000F48  
                        _TXB0D3 000F49                          _TXB1D0 000F36                          _TXB0D4 000F4A  
                        _TXB1D1 000F37                          _TXB0D5 000F4B                          _TXB1D2 000F38  
                        _TXB0D6 000F4C                          _TXB1D3 000F39                          _TXB0D7 000F4D  
                        _TXB2D0 000F26                          _TXB1D4 000F3A                          _TXB2D1 000F27  
                        _TXB1D5 000F3B                          _TXB2D2 000F28                          _TXB1D6 000F3C  
                        _TXB2D3 000F29                          _TXB1D7 000F3D                          _TXB2D4 000F2A  
                        _TXB2D5 000F2B                          _TXB2D6 000F2C                          _TXB2D7 000F2D  
            CANsendMessage@data 0072              CANsendMessage@tamp 007A                __end_of___xxtofl 3EA4  
               _switch_position 00EB                __end_of_delay_ms 51AE           __size_of_CANSetFilter 0B06  
                __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C2                __end_of__powers_ FF53  
                    _MotoreFlag 0239                  ?_LCD_goto_line 0029                          ___flge 4208  
                     ??___fladd 00AA                _delay_set_quartz 53A4                          ___wmul 51E6  
                     ??___fldiv 0076                       ??___awdiv 0078                       ??___flneg 0072  
                __CFG_STVREN$ON 000000                       ??___awmod 0072                       ??___flmul 0084  
                     ??___flsub 00BE                       ??___fltol 00A2                       ??___lldiv 0076  
                     ??___llmod 0076                    ??_CANSetMask 0073         __size_of_LCD_write_char 0096  
                        _fround 39E0  LCD_initialize@quartz_frequency 007C                          clear_0 50FE  
                        clear_1 510A                          clear_2 5118                ___awdiv@quotient 007A  
               ___awmod@divisor 0070            __size_of_LCD_Handler 011A                 ___awmod@counter 0072  
               __CFG_BOREN$BOHW 000000               _JoystickConstants 00C8                       ??_isdigit 006E  
                  __mediumconst FEEA                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ?_CAN_Send 0029                       ??_sprintf 00C6  
                  _CANSetFilter 0000                      ___flge@ff1 006E                      ___flge@ff2 0072  
                  ___xxtofl@arg 0078                    ___xxtofl@exp 0077                    ___xxtofl@val 006E  
                    __accesstop 0060         __end_of__initialization 5130              __end_of_CANSetMask 39E0  
                    _SterzoFlag 023B                      ___flneg@f1 006E                _LCD_send_command 513A  
                 ___rparam_used 000001                      ___fltol@f1 009E                 ??_LCD_backlight 006E  
                __pcstackCOMRAM 0029                    __pidataBANK0 53AE                       ?_ISR_alta 0029  
                 __end_of_scale 2040                  _LCD_initialize 4520               _LCD_write_message 521C  
         CANSetFilter@numBuffer 0077              ?_LCD_write_message 007F                      __div_to_l_ 4398  
                  ??_LCD_cursor 007B                   _newMessageCan 023C                    _actual_speed 0007  
         __size_of_CANisRxReady 0016           __size_of_CANisTxReady 0024                      ??_CAN_Send 007E  
               __div_to_l_@exp1 007B             ??_LCD_write_message 0081                 __div_to_l_@cntr 007A  
                       ??_scale 0099                 __div_to_l_@quot 0076        __end_of_CANOperationMode 537C  
                    __pbssBANK0 00C8                      __pbssBANK1 0121               ??_CAN_interpreter 007E  
                    _data_brake 00EC         __size_of_CANsendMessage 078C                      _data_speed 00ED  
                 __div_to_l_@f1 006E                   __div_to_l_@f2 0072                 ??_LCD_goto_line 007A  
            __end_of_LCD_cursor 5282          __end_of_LCD_initialize 468E                         ?___flge 006E  
                       ?___wmul 006E                      ??_ISR_alta 0060       __end_of_LCD_write_message 5250  
             ?_LCD_enable_pulse 0029                         ?_fround 0095                    _CANisRxReady 537C  
                       _CANSTAT 000F6E              ??_LCD_enable_pulse 0076                    _CANisTxReady 5304  
                     ISR_alta@i 0046                         _BRGCON1 000F70                         _BRGCON2 000F71  
                       _BRGCON3 000F72     __size_of_PWR_Button_Polling 001C                       ?___xxtofl 006E  
        __size_of_CANInitialize 01C6                LCD_cursor@active 007B                       ?_delay_ms 0074  
                       _RXB0DLC 000F65                         _RXB1DLC 000F55                         _RXB0CON 000F60  
                       _RXB1CON 000F50                         _TXB0DLC 000F45                         _TXB1DLC 000F35  
                       _TXB2DLC 000F25             CANsendMessage@flags 0075                         _AbsFlag 0238  
             __end_of__npowers_ FF1F                         __Hparam 0000                      _left_speed 0013  
                    _scale$4271 0099                         __Lparam 0000                delay_ms@value_ms 0074  
               ?_LCD_initialize 0029                 __size_of___flge 0190                         ___fladd 254C  
                       ___fldiv 3282                         ___awdiv 4C56                         ___flneg 51AE  
                       ___awmod 4E8A                         ___flmul 29F4                         ___flsub 50B0  
                       ___fltol 48B6                         ___lldiv 4D14                 __size_of___wmul 0036  
                _LCD_write_char 4FC6                         ___llmod 4F2C            CANInitialize@propSeg 0085  
                       __pcinit 50F8                         _battery 0017                 __size_of_fround 02F6  
                       __ramtop 0D00             LCD_write_char@value 007E                         __ptext0 2E9A  
                       __ptext1 4B8C                         __ptext2 4520                         __ptext3 53A4  
                       __ptext4 5250                         __ptext5 5392                         __ptext6 3EA4  
                       __ptext7 3642                         __ptext8 0000                         __ptext9 5366  
                   ?__div_to_l_ 006E                LCD_write_char@D0 007D                LCD_write_char@D1 007C  
              LCD_write_char@D2 007B                LCD_write_char@D3 007A                         _dpowers FF53  
                       _isdigit 52B4                      ??___xxtofl 0072                ___awmod@dividend 006E  
                    ??_delay_ms 0076          CANreceiveMessage@error 0044    __end_of_board_initialization 4C56  
     __size_of_Joystick_Polling 0054        __end_of_delay_set_quartz 53AE                         _sprintf 0B06  
                __pintcode_body 4AAE                       _LCD_clear 5282            end_of_initialization 5130  
     __size_of_LCD_write_string 0026                         int_func 4AAE                       i2u1180_40 4B04  
           LCD_backlight@active 006E                   _CANInitialize 3EA4                 ___lldiv@divisor 0072  
            LCD_cursor@blinking 007A                 ___lldiv@counter 007A          __end_of_LCD_write_char 505C  
                     _RCSTAbits 000FAB                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE      __size_of_LCD_write_message 0034                  __tdiv_to_l_@f1 006E  
                __tdiv_to_l_@f2 0072                       _ISR_bassa 0018                   ??__tdiv_to_l_ 0076  
                     _PORTAbits 000F80                       _PORTBbits 000F81                  CANSetMask@mask 006E  
                     _PORTCbits 000F82                       _PORTDbits 000F83                  CANSetMask@tamp 0078  
      __end_of_LCD_send_command 5174                  CANSetMask@type 0072                     ___fladd@grs 00B5  
                 ___xxtofl@sign 0076                     ___fldiv@grs 0081                     ___fldiv@rem 007B  
                    ?_LCD_clear 0029               __size_of_CAN_Send 00BA         _clock_counter_reference 00E6  
                   ___flmul@grs 008A                  _CANsendMessage 139A                CANInitialize@BRP 007F  
              CANInitialize@SJW 007E                  ?_CANInitialize 007C             __size_of__div_to_l_ 0188  
       LCD_write_integer@F17272 0001                 ?_LCD_write_char 0029                   ??_LCD_Handler 00C8  
                __end_of___flge 4398                      ?_ISR_bassa 0029                  __end_of___wmul 521C  
             __size_of_ISR_alta 4B84                  __end_of_fround 3CD6                 _CAN_interpreter 47A8  
           start_initialization 50F8             __end_of__tdiv_to_l_ 4208             CANSetMask@numBuffer 0077  
        __end_of_CANsendMessage 1B26               ?_CANOperationMode 0029                   _data_steering 00EE  
            ??_CANOperationMode 006E                 ___llmod@divisor 0072      CANInitialize@FilterConfig1 0086  
    CANInitialize@FilterConfig2 0087                 ___llmod@counter 0076           __end_of_LCD_backlight 53A4  
                      ??___flge 0076            _board_initialization 4B8C                        ??___wmul 0072  
                   __pdataBANK0 00EF                __CFG_LPT1OSC$OFF 000000                        ??_fround 0099  
                 sprintf@tmpval 010E                       ___fladd@a 00A6                       ___fladd@b 00A2  
        CANInitialize@phaseSeg1 007C          CANInitialize@phaseSeg2 007D                      fround@prec 00A1  
           __end_of_LCD_Handler 47A8                       ___fldiv@a 0072                       ___fldiv@b 006E  
                     ___flmul@a 0080                       ___flmul@b 007C                     __pbssCOMRAM 0001  
                     ___flsub@a 00BA                       ___flsub@b 00B6                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                     _BRGCON2bits 000F71                     _BRGCON3bits 000F72  
              _Joystick_Polling 505C               __size_of___xxtofl 01CE       __size_of_LCD_enable_pulse 0022  
                  _isdigit$3851 006F               __size_of_delay_ms 003A                     ??_LCD_clear 007A  
               ?_CANsendMessage 006E         LCD_write_message@buffer 007F                _LCD_write_string 52DE  
               ??_CANInitialize 0081                     sprintf@flag 0106                     sprintf@fval 0114  
                   sprintf@prec 0112                ??_LCD_initialize 007C              CANSetFilter@filter 006E  
     delay_set_quartz@frequency 006E              LCD_send_command@D0 0078              LCD_send_command@D1 0077  
            LCD_send_command@D2 0076              LCD_send_command@D3 0079           __end_of_LCD_goto_line 4AAE  
         ?_board_initialization 0029                       __pintcode 0008                   __pmediumconst FEEA  
                      ?___fladd 00A2                        ?___fldiv 006E                        ?___awdiv 0074  
                      ?___flneg 006E                        ?___awmod 006E                        ?___flmul 007C  
       __end_of_CAN_interpreter 48B6                        ?___flsub 00B6                        ?___fltol 009E  
                      ?___lldiv 006E                        ?___llmod 006E                       __npowers_ FEEB  
                   ??_ISR_bassa 0029                     __pintcodelo 0018      __end_of_PWR_Button_Polling 5366  
                   __tdiv_to_l_ 406A                    ??__div_to_l_ 0076                     _COMSTATbits 000F74  
                      ?_isdigit 0029                        _CAN_Send 4DD0                        ?_sprintf 00BE  
                __size_of_scale 051A               ?_delay_set_quartz 0029           CANreceiveMessage@tamp 0045  
            ??_delay_set_quartz 006E                  ___wmul@product 0072                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _IPR2bits 000FA2    _delay_quartz_frequency_value 00EF  
                      _IPR3bits 000FA5                        _PIE2bits 000FA0                        _PIE3bits 000FA3  
            __end_of__div_to_l_ 4520                        _PIR2bits 000FA1                        _PIR3bits 000FA4  
                      i2u741_40 20F8                        i2u741_46 20FA                        i2u742_40 2126  
                      i2u750_45 22AC                        i2u742_46 2128                        i2u752_40 2380  
                      i2u744_45 213C                        i2u752_46 2382                        i2u753_40 23AA  
                      i2u761_45 2522                        i2u753_46 23AC                        i2u755_45 23BE  
                      _RXB0EIDH 000F63                        _RXB0EIDL 000F64                        _RXB1EIDH 000F53  
                     _pr_time_1 00D4                       _pr_time_2 00D8                        _RXB1EIDL 000F54  
                     _pr_time_3 00DC                       _pr_time_4 000F                       _set_speed 00E8  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000                        _RXB0SIDH 000F61  
                      _RXB0SIDL 000F62                        _RXF0EIDH 000F02                        _RXB1SIDH 000F51  
                      _RXF0EIDL 000F03                        _RXB1SIDL 000F52                        _RXF1EIDH 000F06  
                      _RXF1EIDL 000F07                        _RXF2EIDH 000F0A                        _RXF2EIDL 000F0B  
                      _RXF3EIDH 000F0E                        _RXF3EIDL 000F0F                        _RXF4EIDH 000F12  
                      _RXF4EIDL 000F13                        _RXF5EIDH 000F16                        _RXF5EIDL 000F17  
                      _RXF0SIDH 000F00                        _RXF0SIDL 000F01                        _TXB0EIDH 000F43  
                      _RXF1SIDH 000F04                        _TXB0EIDL 000F44                        _RXF1SIDL 000F05  
                      _TXB1EIDH 000F33                        _RXF2SIDH 000F08                        _TXB1EIDL 000F34  
                      _RXF2SIDL 000F09                        _ISR_alta 0008                        _TXB2EIDH 000F23  
                      _RXF3SIDH 000F0C                        _TXB2EIDL 000F24                        _RXF3SIDL 000F0D  
                      _RXF4SIDH 000F10                        _RXF4SIDL 000F11                        _RXF5SIDH 000F14  
                      _RXF5SIDL 000F15                        _RXM0EIDH 000F1A                        _RXM0EIDL 000F1B  
                      _TXB0SIDH 000F41                        _RXM1EIDH 000F1E                        _TXB0SIDL 000F42  
                      _RXM1EIDL 000F1F                        _TXB1SIDH 000F31                        _TXB1SIDL 000F32  
                      _TXB2SIDH 000F21                        _TXB2SIDL 000F22                     _LCD_Handler 468E  
                      _RXM0SIDH 000F18                        _RXM0SIDL 000F19                        _RXM1SIDH 000F1C  
                      _RXM1SIDL 000F1D                        _RXERRCNT 000F75                        _TXERRCNT 000F76  
                    _ADCON0bits 000FC2                      _ADCON2bits 000FC0               ___wmul@multiplier 006E  
                      _RTR_Flag 023A               ?_LCD_send_command 0076                _actual_speed_kmh 00D0  
            ??_LCD_send_command 0079                   ?_CANSetFilter 006E                      _CANCONbits 000F6F  
              ??_LCD_write_char 007A               LCD_goto_line@line 007A                        __Hrparam 0000  
                  _RXB0SIDLbits 000F62          ??_board_initialization 0088                        __Lrparam 0000  
                  _RXB1SIDLbits 000F52                ?_CAN_interpreter 0029                __size_of___fladd 04A8  
                    _CANSetMask 3642                __size_of___fldiv 03C0                __size_of___awdiv 00BE  
              __size_of___flneg 0038                __size_of___awmod 00A2                __size_of___flmul 04A6  
              __size_of___flsub 0048                __size_of___fltol 010C                __size_of___lldiv 00BC  
              __size_of___llmod 009A                     _fround$4270 0099                     _fround$4269 009D  
                    sprintf@exp 010C                      sprintf@val 0108                        ___xxtofl 3CD6  
                  _RXF0SIDLbits 000F01                __size_of_isdigit 002A                        _delay_ms 5174  
                  _RXF1SIDLbits 000F05                  ??_CANSetFilter 0073                _LCD_enable_pulse 5328  
                      __ptext10 534A                        __ptext11 468E                        __ptext20 4398  
                      __ptext12 0B06                        __ptext21 4F2C                        __ptext13 1B26  
                      __ptext30 521C                        __ptext22 4D14                        __ptext14 52B4  
                      __ptext31 4FC6                        __ptext23 48B6                        __ptext15 39E0  
                      __ptext40 3CD6                        __ptext32 49C2                        __ptext24 50B0  
                      __ptext16 29F4                        __ptext41 4DD0                        __ptext33 5282  
                      __ptext25 254C                        __ptext17 4E8A                        __ptext42 139A  
                      __ptext34 513A                        __ptext26 51AE                        __ptext18 4C56  
                      __ptext43 5304                        __ptext35 5328                        __ptext27 4208  
                      __ptext19 406A                        __ptext36 5174                        __ptext28 3282  
                      __ptext37 51E6                        __ptext29 52DE                        __ptext46 2040  
                      __ptext38 505C                        __ptext47 537C                        __ptext39 47A8  
                  _RXF2SIDLbits 000F09                        __powers_ FF1F                    _RXF3SIDLbits 000F0D  
              __size_of_sprintf 0894                    _RXF4SIDLbits 000F11                    _RXF5SIDLbits 000F15  
      CANsendMessage@dataLength 0074                   __size_of_main 03E8            CANreceiveMessage@msg 003A  
                  _TXB0SIDLbits 000F42               Joystick_Polling@i 006F                    _TXB1SIDLbits 000F32  
                      _wait_low 023E        __end_of_Joystick_Polling 50B0                    _TXB2SIDLbits 000F22  
                      int$flags 0048       __size_of_CANOperationMode 0016                   ?_CANisRxReady 0029  
                 ?_CANisTxReady 0029        __end_of_LCD_write_string 5304                     _RXB0DLCbits 000F65  
                   _RXB1DLCbits 000F55                    _RXM0SIDLbits 000F19                     _RXB0CONbits 000F60  
                    _LCD_cursor 5250                     _RXB1CONbits 000F50               _CANreceiveMessage 2040  
                  _RXM1SIDLbits 000F1D                      _INTCONbits 000FF2                    _set_steering 0018  
              ??_CANsendMessage 0076              ?_CANreceiveMessage 003A                        isdigit@c 0070  
                      scale@scl 009D        CANsendMessage@identifier 006E                    _time_counter 00E0  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 007E                       sprintf@sp 00BE                __tdiv_to_l_@cntr 007D  
              CANSetFilter@tamp 0078                __tdiv_to_l_@quot 0079                CANSetFilter@type 0072  
           ??_CANreceiveMessage 003C                ___lldiv@dividend 006E                     _TXB0DLCbits 000F45  
                   _right_speed 0015                     _TXB1DLCbits 000F35                     _TXB0CONbits 000F40  
                   _TXB2DLCbits 000F25                     _TXB1CONbits 000F30                     _TXB2CONbits 000F20  
          CANOperationMode@mode 006E                  ??_CANisRxReady 003A                     ?_CANSetMask 006E  
                ??_CANisTxReady 006E                    ?__tdiv_to_l_ 006E       __end_of_CANreceiveMessage 254C  
                      sprintf@c 0118                        sprintf@f 00C0                ___lldiv@quotient 0076  
        __size_of_LCD_backlight 0012                   ___fladd@signs 00B2              _PWR_Button_Polling 534A  
                  ___fladd@aexp 00B3                    ___fladd@bexp 00B4           __end_of_CANInitialize 406A  
           ?_PWR_Button_Polling 0029                    _power_switch 023D  
