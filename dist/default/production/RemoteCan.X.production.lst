

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jun 01 15:10:01 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           	psect	idataBANK0
    85  0165C2                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _delay_quartz_frequency_value
    89  0165C2  14                 	db	20
    90                           
    91                           	psect	mediumconst
    92  00FD9E                     __pmediumconst:
    93                           	opt stack 0
    94  00FD9E  00                 	db	0
    95  00FD9F                     __npowers_:
    96                           	opt stack 0
    97  00FD9F  0000               	dw	0
    98  00FDA1  3F80               	dw	16256
    99  00FDA3  CCCD               	dw	52429
   100  00FDA5  3DCC               	dw	15820
   101  00FDA7  D70A               	dw	55050
   102  00FDA9  3C23               	dw	15395
   103  00FDAB  126F               	dw	4719
   104  00FDAD  3A83               	dw	14979
   105  00FDAF  B717               	dw	46871
   106  00FDB1  38D1               	dw	14545
   107  00FDB3  C5AC               	dw	50604
   108  00FDB5  3727               	dw	14119
   109  00FDB7  37BD               	dw	14269
   110  00FDB9  3586               	dw	13702
   111  00FDBB  BF95               	dw	49045
   112  00FDBD  33D6               	dw	13270
   113  00FDBF  CC77               	dw	52343
   114  00FDC1  322B               	dw	12843
   115  00FDC3  705F               	dw	28767
   116  00FDC5  3089               	dw	12425
   117  00FDC7  E6FF               	dw	59135
   118  00FDC9  2EDB               	dw	11995
   119  00FDCB  E508               	dw	58632
   120  00FDCD  1E3C               	dw	7740
   121  00FDCF  4260               	dw	16992
   122  00FDD1  0DA2               	dw	3490
   123  00FDD3                     __end_of__npowers_:
   124                           	opt stack 0
   125  00FDD3                     __powers_:
   126                           	opt stack 0
   127  00FDD3  0000               	dw	0
   128  00FDD5  3F80               	dw	16256
   129  00FDD7  0000               	dw	0
   130  00FDD9  4120               	dw	16672
   131  00FDDB  0000               	dw	0
   132  00FDDD  42C8               	dw	17096
   133  00FDDF  0000               	dw	0
   134  00FDE1  447A               	dw	17530
   135  00FDE3  4000               	dw	16384
   136  00FDE5  461C               	dw	17948
   137  00FDE7  5000               	dw	20480
   138  00FDE9  47C3               	dw	18371
   139  00FDEB  2400               	dw	9216
   140  00FDED  4974               	dw	18804
   141  00FDEF  9680               	dw	38528
   142  00FDF1  4B18               	dw	19224
   143  00FDF3  BC20               	dw	48160
   144  00FDF5  4CBE               	dw	19646
   145  00FDF7  6B28               	dw	27432
   146  00FDF9  4E6E               	dw	20078
   147  00FDFB  02F9               	dw	761
   148  00FDFD  5015               	dw	20501
   149  00FDFF  78EC               	dw	30956
   150  00FE01  60AD               	dw	24749
   151  00FE03  F2CA               	dw	62154
   152  00FE05  7149               	dw	29001
   153  00FE07                     __end_of__powers_:
   154                           	opt stack 0
   155  00FE07                     _dpowers:
   156                           	opt stack 0
   157  00FE07  0001               	dw	1
   158  00FE09  0000               	dw	0
   159  00FE0B  000A               	dw	10
   160  00FE0D  0000               	dw	0
   161  00FE0F  0064               	dw	100
   162  00FE11  0000               	dw	0
   163  00FE13  03E8               	dw	1000
   164  00FE15  0000               	dw	0
   165  00FE17  2710               	dw	10000
   166  00FE19  0000               	dw	0
   167  00FE1B  86A0               	dw	34464
   168  00FE1D  0001               	dw	1
   169  00FE1F  4240               	dw	16960
   170  00FE21  000F               	dw	15
   171  00FE23  9680               	dw	38528
   172  00FE25  0098               	dw	152
   173  00FE27  E100               	dw	57600
   174  00FE29  05F5               	dw	1525
   175  00FE2B  CA00               	dw	51712
   176  00FE2D  3B9A               	dw	15258
   177  00FE2F                     __end_of_dpowers:
   178                           	opt stack 0
   179  0000                     _RXB1CON	set	3920
   180  0000                     _RXB1CONbits	set	3920
   181  0000                     _RXB1D0	set	3926
   182  0000                     _RXB1D1	set	3927
   183  0000                     _RXB1D2	set	3928
   184  0000                     _RXB1D3	set	3929
   185  0000                     _RXB1D4	set	3930
   186  0000                     _RXB1D5	set	3931
   187  0000                     _RXB1D6	set	3932
   188  0000                     _RXB1D7	set	3933
   189  0000                     _RXB1DLC	set	3925
   190  0000                     _RXB1DLCbits	set	3925
   191  0000                     _RXB1EIDH	set	3923
   192  0000                     _RXB1EIDL	set	3924
   193  0000                     _RXB1SIDH	set	3921
   194  0000                     _RXB1SIDL	set	3922
   195  0000                     _RXB1SIDLbits	set	3922
   196  0000                     _RXF0EIDH	set	3842
   197  0000                     _RXF0EIDL	set	3843
   198  0000                     _RXF0SIDH	set	3840
   199  0000                     _RXF0SIDL	set	3841
   200  0000                     _RXF0SIDLbits	set	3841
   201  0000                     _RXF1EIDH	set	3846
   202  0000                     _RXF1EIDL	set	3847
   203  0000                     _RXF1SIDH	set	3844
   204  0000                     _RXF1SIDL	set	3845
   205  0000                     _RXF1SIDLbits	set	3845
   206  0000                     _RXF2EIDH	set	3850
   207  0000                     _RXF2EIDL	set	3851
   208  0000                     _RXF2SIDH	set	3848
   209  0000                     _RXF2SIDL	set	3849
   210  0000                     _RXF2SIDLbits	set	3849
   211  0000                     _RXF3EIDH	set	3854
   212  0000                     _RXF3EIDL	set	3855
   213  0000                     _RXF3SIDH	set	3852
   214  0000                     _RXF3SIDL	set	3853
   215  0000                     _RXF3SIDLbits	set	3853
   216  0000                     _RXF4EIDH	set	3858
   217  0000                     _RXF4EIDL	set	3859
   218  0000                     _RXF4SIDH	set	3856
   219  0000                     _RXF4SIDL	set	3857
   220  0000                     _RXF4SIDLbits	set	3857
   221  0000                     _RXF5EIDH	set	3862
   222  0000                     _RXF5EIDL	set	3863
   223  0000                     _RXF5SIDH	set	3860
   224  0000                     _RXF5SIDL	set	3861
   225  0000                     _RXF5SIDLbits	set	3861
   226  0000                     _RXM0EIDH	set	3866
   227  0000                     _RXM0EIDL	set	3867
   228  0000                     _RXM0SIDH	set	3864
   229  0000                     _RXM0SIDL	set	3865
   230  0000                     _RXM0SIDLbits	set	3865
   231  0000                     _RXM1EIDH	set	3870
   232  0000                     _RXM1EIDL	set	3871
   233  0000                     _RXM1SIDH	set	3868
   234  0000                     _RXM1SIDL	set	3869
   235  0000                     _RXM1SIDLbits	set	3869
   236  0000                     _TXB0CONbits	set	3904
   237  0000                     _TXB0D0	set	3910
   238  0000                     _TXB0D1	set	3911
   239  0000                     _TXB0D2	set	3912
   240  0000                     _TXB0D3	set	3913
   241  0000                     _TXB0D4	set	3914
   242  0000                     _TXB0D5	set	3915
   243  0000                     _TXB0D6	set	3916
   244  0000                     _TXB0D7	set	3917
   245  0000                     _TXB0DLC	set	3909
   246  0000                     _TXB0DLCbits	set	3909
   247  0000                     _TXB0EIDH	set	3907
   248  0000                     _TXB0EIDL	set	3908
   249  0000                     _TXB0SIDH	set	3905
   250  0000                     _TXB0SIDL	set	3906
   251  0000                     _TXB0SIDLbits	set	3906
   252  0000                     _TXB1CONbits	set	3888
   253  0000                     _TXB1D0	set	3894
   254  0000                     _TXB1D1	set	3895
   255  0000                     _TXB1D2	set	3896
   256  0000                     _TXB1D3	set	3897
   257  0000                     _TXB1D4	set	3898
   258  0000                     _TXB1D5	set	3899
   259  0000                     _TXB1D6	set	3900
   260  0000                     _TXB1D7	set	3901
   261  0000                     _TXB1DLC	set	3893
   262  0000                     _TXB1DLCbits	set	3893
   263  0000                     _TXB1EIDH	set	3891
   264  0000                     _TXB1EIDL	set	3892
   265  0000                     _TXB1SIDH	set	3889
   266  0000                     _TXB1SIDL	set	3890
   267  0000                     _TXB1SIDLbits	set	3890
   268  0000                     _TXB2CONbits	set	3872
   269  0000                     _TXB2D0	set	3878
   270  0000                     _TXB2D1	set	3879
   271  0000                     _TXB2D2	set	3880
   272  0000                     _TXB2D3	set	3881
   273  0000                     _TXB2D4	set	3882
   274  0000                     _TXB2D5	set	3883
   275  0000                     _TXB2D6	set	3884
   276  0000                     _TXB2D7	set	3885
   277  0000                     _TXB2DLC	set	3877
   278  0000                     _TXB2DLCbits	set	3877
   279  0000                     _TXB2EIDH	set	3875
   280  0000                     _TXB2EIDL	set	3876
   281  0000                     _TXB2SIDH	set	3873
   282  0000                     _TXB2SIDL	set	3874
   283  0000                     _TXB2SIDLbits	set	3874
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _ADCON1	set	4033
   286  0000                     _ADCON2bits	set	4032
   287  0000                     _ADRESH	set	4036
   288  0000                     _BRGCON1	set	3952
   289  0000                     _BRGCON2	set	3953
   290  0000                     _BRGCON2bits	set	3953
   291  0000                     _BRGCON3	set	3954
   292  0000                     _BRGCON3bits	set	3954
   293  0000                     _CANCON	set	3951
   294  0000                     _CANCONbits	set	3951
   295  0000                     _CANSTAT	set	3950
   296  0000                     _COMSTATbits	set	3956
   297  0000                     _INTCONbits	set	4082
   298  0000                     _IPR2bits	set	4002
   299  0000                     _IPR3bits	set	4005
   300  0000                     _LATA	set	3977
   301  0000                     _LATB	set	3978
   302  0000                     _LATBbits	set	3978
   303  0000                     _LATC	set	3979
   304  0000                     _LATD	set	3980
   305  0000                     _LATE	set	3981
   306  0000                     _PIE2bits	set	4000
   307  0000                     _PIE3bits	set	4003
   308  0000                     _PIR2bits	set	4001
   309  0000                     _PIR3bits	set	4004
   310  0000                     _PORTAbits	set	3968
   311  0000                     _PORTBbits	set	3969
   312  0000                     _PORTDbits	set	3971
   313  0000                     _RCONbits	set	4048
   314  0000                     _RXB0CON	set	3936
   315  0000                     _RXB0CONbits	set	3936
   316  0000                     _RXB0D0	set	3942
   317  0000                     _RXB0D1	set	3943
   318  0000                     _RXB0D2	set	3944
   319  0000                     _RXB0D3	set	3945
   320  0000                     _RXB0D4	set	3946
   321  0000                     _RXB0D5	set	3947
   322  0000                     _RXB0D6	set	3948
   323  0000                     _RXB0D7	set	3949
   324  0000                     _RXB0DLC	set	3941
   325  0000                     _RXB0DLCbits	set	3941
   326  0000                     _RXB0EIDH	set	3939
   327  0000                     _RXB0EIDL	set	3940
   328  0000                     _RXB0SIDH	set	3937
   329  0000                     _RXB0SIDL	set	3938
   330  0000                     _RXB0SIDLbits	set	3938
   331  0000                     _RXERRCNT	set	3957
   332  0000                     _T3CON	set	4017
   333  0000                     _TMR3H	set	4019
   334  0000                     _TMR3L	set	4018
   335  0000                     _TRISA	set	3986
   336  0000                     _TRISB	set	3987
   337  0000                     _TRISC	set	3988
   338  0000                     _TRISD	set	3989
   339  0000                     _TRISE	set	3990
   340  0000                     _TXERRCNT	set	3958
   341  00FE2F                     STR_34:
   342  00FE2F  20                 	db	32
   343  00FE30  20                 	db	32
   344  00FE31  20                 	db	32
   345  00FE32  20                 	db	32
   346  00FE33  20                 	db	32
   347  00FE34  20                 	db	32
   348  00FE35  20                 	db	32
   349  00FE36  46                 	db	70	;'F'
   350  00FE37  41                 	db	65	;'A'
   351  00FE38  49                 	db	73	;'I'
   352  00FE39  4C                 	db	76	;'L'
   353  00FE3A  45                 	db	69	;'E'
   354  00FE3B  44                 	db	68	;'D'
   355  00FE3C  21                 	db	33
   356  00FE3D  20                 	db	32
   357  00FE3E  20                 	db	32
   358  00FE3F  20                 	db	32
   359  00FE40  20                 	db	32
   360  00FE41  20                 	db	32
   361  00FE42  20                 	db	32
   362  00FE43  00                 	db	0
   363  00FE44                     STR_31:
   364  00FE44  20                 	db	32
   365  00FE45  20                 	db	32
   366  00FE46  20                 	db	32
   367  00FE47  20                 	db	32
   368  00FE48  20                 	db	32
   369  00FE49  43                 	db	67	;'C'
   370  00FE4A  4F                 	db	79	;'O'
   371  00FE4B  4D                 	db	77	;'M'
   372  00FE4C  50                 	db	80	;'P'
   373  00FE4D  4C                 	db	76	;'L'
   374  00FE4E  45                 	db	69	;'E'
   375  00FE4F  54                 	db	84	;'T'
   376  00FE50  45                 	db	69	;'E'
   377  00FE51  44                 	db	68	;'D'
   378  00FE52  21                 	db	33
   379  00FE53  20                 	db	32
   380  00FE54  20                 	db	32
   381  00FE55  20                 	db	32
   382  00FE56  20                 	db	32
   383  00FE57  20                 	db	32
   384  00FE58  00                 	db	0
   385  00FE59                     STR_30:
   386  00FE59  20                 	db	32
   387  00FE5A  20                 	db	32
   388  00FE5B  20                 	db	32
   389  00FE5C  20                 	db	32
   390  00FE5D  53                 	db	83	;'S'
   391  00FE5E  55                 	db	85	;'U'
   392  00FE5F  43                 	db	67	;'C'
   393  00FE60  43                 	db	67	;'C'
   394  00FE61  45                 	db	69	;'E'
   395  00FE62  53                 	db	83	;'S'
   396  00FE63  53                 	db	83	;'S'
   397  00FE64  46                 	db	70	;'F'
   398  00FE65  55                 	db	85	;'U'
   399  00FE66  4C                 	db	76	;'L'
   400  00FE67  4C                 	db	76	;'L'
   401  00FE68  59                 	db	89	;'Y'
   402  00FE69  20                 	db	32
   403  00FE6A  20                 	db	32
   404  00FE6B  20                 	db	32
   405  00FE6C  20                 	db	32
   406  00FE6D  00                 	db	0
   407  00FE6E                     STR_23:
   408  00FE6E  20                 	db	32
   409  00FE6F  20                 	db	32
   410  00FE70  20                 	db	32
   411  00FE71  73                 	db	115	;'s'
   412  00FE72  74                 	db	116	;'t'
   413  00FE73  61                 	db	97	;'a'
   414  00FE74  72                 	db	114	;'r'
   415  00FE75  74                 	db	116	;'t'
   416  00FE76  20                 	db	32
   417  00FE77  70                 	db	112	;'p'
   418  00FE78  61                 	db	97	;'a'
   419  00FE79  72                 	db	114	;'r'
   420  00FE7A  6B                 	db	107	;'k'
   421  00FE7B  69                 	db	105	;'i'
   422  00FE7C  6E                 	db	110	;'n'
   423  00FE7D  67                 	db	103	;'g'
   424  00FE7E  20                 	db	32
   425  00FE7F  20                 	db	32
   426  00FE80  20                 	db	32
   427  00FE81  20                 	db	32
   428  00FE82  00                 	db	0
   429  00FE83                     STR_3:
   430  00FE83  20                 	db	32
   431  00FE84  20                 	db	32
   432  00FE85  50                 	db	80	;'P'
   433  00FE86  72                 	db	114	;'r'
   434  00FE87  65                 	db	101	;'e'
   435  00FE88  73                 	db	115	;'s'
   436  00FE89  73                 	db	115	;'s'
   437  00FE8A  20                 	db	32
   438  00FE8B  74                 	db	116	;'t'
   439  00FE8C  68                 	db	104	;'h'
   440  00FE8D  65                 	db	101	;'e'
   441  00FE8E  20                 	db	32
   442  00FE8F  62                 	db	98	;'b'
   443  00FE90  75                 	db	117	;'u'
   444  00FE91  74                 	db	116	;'t'
   445  00FE92  74                 	db	116	;'t'
   446  00FE93  6F                 	db	111	;'o'
   447  00FE94  6E                 	db	110	;'n'
   448  00FE95  20                 	db	32
   449  00FE96  20                 	db	32
   450  00FE97  00                 	db	0
   451  00FE98                     STR_35:
   452  00FE98  20                 	db	32
   453  00FE99  20                 	db	32
   454  00FE9A  20                 	db	32
   455  00FE9B  64                 	db	100	;'d'
   456  00FE9C  75                 	db	117	;'u'
   457  00FE9D  65                 	db	101	;'e'
   458  00FE9E  20                 	db	32
   459  00FE9F  74                 	db	116	;'t'
   460  00FEA0  6F                 	db	111	;'o'
   461  00FEA1  20                 	db	32
   462  00FEA2  61                 	db	97	;'a'
   463  00FEA3  6E                 	db	110	;'n'
   464  00FEA4  20                 	db	32
   465  00FEA5  65                 	db	101	;'e'
   466  00FEA6  72                 	db	114	;'r'
   467  00FEA7  72                 	db	114	;'r'
   468  00FEA8  6F                 	db	111	;'o'
   469  00FEA9  72                 	db	114	;'r'
   470  00FEAA  20                 	db	32
   471  00FEAB  20                 	db	32
   472  00FEAC  00                 	db	0
   473  00FEAD                     STR_19:
   474  00FEAD  20                 	db	32
   475  00FEAE  75                 	db	117	;'u'
   476  00FEAF  6E                 	db	110	;'n'
   477  00FEB0  74                 	db	116	;'t'
   478  00FEB1  69                 	db	105	;'i'
   479  00FEB2  6C                 	db	108	;'l'
   480  00FEB3  20                 	db	32
   481  00FEB4  6E                 	db	110	;'n'
   482  00FEB5  65                 	db	101	;'e'
   483  00FEB6  78                 	db	120	;'x'
   484  00FEB7  74                 	db	116	;'t'
   485  00FEB8  20                 	db	32
   486  00FEB9  6D                 	db	109	;'m'
   487  00FEBA  65                 	db	101	;'e'
   488  00FEBB  73                 	db	115	;'s'
   489  00FEBC  73                 	db	115	;'s'
   490  00FEBD  61                 	db	97	;'a'
   491  00FEBE  67                 	db	103	;'g'
   492  00FEBF  65                 	db	101	;'e'
   493  00FEC0  20                 	db	32
   494  00FEC1  00                 	db	0
   495  00FEC2                     STR_22:
   496  00FEC2  50                 	db	80	;'P'
   497  00FEC3  72                 	db	114	;'r'
   498  00FEC4  65                 	db	101	;'e'
   499  00FEC5  73                 	db	115	;'s'
   500  00FEC6  73                 	db	115	;'s'
   501  00FEC7  20                 	db	32
   502  00FEC8  74                 	db	116	;'t'
   503  00FEC9  68                 	db	104	;'h'
   504  00FECA  65                 	db	101	;'e'
   505  00FECB  20                 	db	32
   506  00FECC  42                 	db	66	;'B'
   507  00FECD  55                 	db	85	;'U'
   508  00FECE  54                 	db	84	;'T'
   509  00FECF  54                 	db	84	;'T'
   510  00FED0  4F                 	db	79	;'O'
   511  00FED1  4E                 	db	78	;'N'
   512  00FED2  20                 	db	32
   513  00FED3  74                 	db	116	;'t'
   514  00FED4  6F                 	db	111	;'o'
   515  00FED5  20                 	db	32
   516  00FED6  00                 	db	0
   517  00FED7                     STR_29:
   518  00FED7  20                 	db	32
   519  00FED8  50                 	db	80	;'P'
   520  00FED9  61                 	db	97	;'a'
   521  00FEDA  72                 	db	114	;'r'
   522  00FEDB  6B                 	db	107	;'k'
   523  00FEDC  69                 	db	105	;'i'
   524  00FEDD  6E                 	db	110	;'n'
   525  00FEDE  67                 	db	103	;'g'
   526  00FEDF  20                 	db	32
   527  00FEE0  70                 	db	112	;'p'
   528  00FEE1  72                 	db	114	;'r'
   529  00FEE2  6F                 	db	111	;'o'
   530  00FEE3  63                 	db	99	;'c'
   531  00FEE4  65                 	db	101	;'e'
   532  00FEE5  64                 	db	100	;'d'
   533  00FEE6  75                 	db	117	;'u'
   534  00FEE7  72                 	db	114	;'r'
   535  00FEE8  65                 	db	101	;'e'
   536  00FEE9  73                 	db	115	;'s'
   537  00FEEA  20                 	db	32
   538  00FEEB  00                 	db	0
   539  00FEEC                     STR_21:
   540  00FEEC  2D                 	db	45
   541  00FEED  20                 	db	32
   542  00FEEE  44                 	db	68	;'D'
   543  00FEEF  69                 	db	105	;'i'
   544  00FEF0  73                 	db	115	;'s'
   545  00FEF1  74                 	db	116	;'t'
   546  00FEF2  61                 	db	97	;'a'
   547  00FEF3  6E                 	db	110	;'n'
   548  00FEF4  63                 	db	99	;'c'
   549  00FEF5  65                 	db	101	;'e'
   550  00FEF6  20                 	db	32
   551  00FEF7  52                 	db	82	;'R'
   552  00FEF8  45                 	db	69	;'E'
   553  00FEF9  41                 	db	65	;'A'
   554  00FEFA  43                 	db	67	;'C'
   555  00FEFB  48                 	db	72	;'H'
   556  00FEFC  45                 	db	69	;'E'
   557  00FEFD  44                 	db	68	;'D'
   558  00FEFE  20                 	db	32
   559  00FEFF  2D                 	db	45
   560  00FF00  00                 	db	0
   561  00FF01                     STR_18:
   562  00FF01  2D                 	db	45
   563  00FF02  3E                 	db	62	;'>'
   564  00FF03  20                 	db	32
   565  00FF04  20                 	db	32
   566  00FF05  4B                 	db	75	;'K'
   567  00FF06  45                 	db	69	;'E'
   568  00FF07  45                 	db	69	;'E'
   569  00FF08  50                 	db	80	;'P'
   570  00FF09  20                 	db	32
   571  00FF0A  4D                 	db	77	;'M'
   572  00FF0B  4F                 	db	79	;'O'
   573  00FF0C  56                 	db	86	;'V'
   574  00FF0D  49                 	db	73	;'I'
   575  00FF0E  4E                 	db	78	;'N'
   576  00FF0F  47                 	db	71	;'G'
   577  00FF10  20                 	db	32
   578  00FF11  20                 	db	32
   579  00FF12  20                 	db	32
   580  00FF13  3C                 	db	60	;'<'
   581  00FF14  2D                 	db	45
   582  00FF15  00                 	db	0
   583  00FF16                     STR_25:
   584  00FF16  3D                 	db	61	;'='
   585  00FF17  20                 	db	32
   586  00FF18  20                 	db	32
   587  00FF19  20                 	db	32
   588  00FF1A  20                 	db	32
   589  00FF1B  50                 	db	80	;'P'
   590  00FF1C  61                 	db	97	;'a'
   591  00FF1D  72                 	db	114	;'r'
   592  00FF1E  6B                 	db	107	;'k'
   593  00FF1F  69                 	db	105	;'i'
   594  00FF20  6E                 	db	110	;'n'
   595  00FF21  67                 	db	103	;'g'
   596  00FF22  20                 	db	32
   597  00FF23  69                 	db	105	;'i'
   598  00FF24  6E                 	db	110	;'n'
   599  00FF25  20                 	db	32
   600  00FF26  20                 	db	32
   601  00FF27  20                 	db	32
   602  00FF28  20                 	db	32
   603  00FF29  3D                 	db	61	;'='
   604  00FF2A  00                 	db	0
   605  00FF2B                     STR_26:
   606  00FF2B  3D                 	db	61	;'='
   607  00FF2C  20                 	db	32
   608  00FF2D  20                 	db	32
   609  00FF2E  20                 	db	32
   610  00FF2F  20                 	db	32
   611  00FF30  70                 	db	112	;'p'
   612  00FF31  72                 	db	114	;'r'
   613  00FF32  6F                 	db	111	;'o'
   614  00FF33  67                 	db	103	;'g'
   615  00FF34  72                 	db	114	;'r'
   616  00FF35  65                 	db	101	;'e'
   617  00FF36  73                 	db	115	;'s'
   618  00FF37  73                 	db	115	;'s'
   619  00FF38  2E                 	db	46
   620  00FF39  2E                 	db	46
   621  00FF3A  2E                 	db	46
   622  00FF3B  20                 	db	32
   623  00FF3C  20                 	db	32
   624  00FF3D  20                 	db	32
   625  00FF3E  3D                 	db	61	;'='
   626  00FF3F  00                 	db	0
   627  00FF40                     STR_16:
   628  00FF40  3D                 	db	61	;'='
   629  00FF41  20                 	db	32
   630  00FF42  50                 	db	80	;'P'
   631  00FF43  41                 	db	65	;'A'
   632  00FF44  52                 	db	82	;'R'
   633  00FF45  4B                 	db	75	;'K'
   634  00FF46  49                 	db	73	;'I'
   635  00FF47  4E                 	db	78	;'N'
   636  00FF48  47                 	db	71	;'G'
   637  00FF49  20                 	db	32
   638  00FF4A  4D                 	db	77	;'M'
   639  00FF4B  45                 	db	69	;'E'
   640  00FF4C  53                 	db	83	;'S'
   641  00FF4D  53                 	db	83	;'S'
   642  00FF4E  41                 	db	65	;'A'
   643  00FF4F  47                 	db	71	;'G'
   644  00FF50  45                 	db	69	;'E'
   645  00FF51  53                 	db	83	;'S'
   646  00FF52  20                 	db	32
   647  00FF53  3D                 	db	61	;'='
   648  00FF54  00                 	db	0
   649  00FF55                     STR_2:
   650  00FF55  3D                 	db	61	;'='
   651  00FF56  3D                 	db	61	;'='
   652  00FF57  3E                 	db	62	;'>'
   653  00FF58  20                 	db	32
   654  00FF59  56                 	db	86	;'V'
   655  00FF5A  45                 	db	69	;'E'
   656  00FF5B  48                 	db	72	;'H'
   657  00FF5C  49                 	db	73	;'I'
   658  00FF5D  43                 	db	67	;'C'
   659  00FF5E  4C                 	db	76	;'L'
   660  00FF5F  45                 	db	69	;'E'
   661  00FF60  20                 	db	32
   662  00FF61  20                 	db	32
   663  00FF62  4F                 	db	79	;'O'
   664  00FF63  46                 	db	70	;'F'
   665  00FF64  46                 	db	70	;'F'
   666  00FF65  20                 	db	32
   667  00FF66  3C                 	db	60	;'<'
   668  00FF67  3D                 	db	61	;'='
   669  00FF68  3D                 	db	61	;'='
   670  00FF69  00                 	db	0
   671  00FF6A                     STR_6:
   672  00FF6A  3D                 	db	61	;'='
   673  00FF6B  3D                 	db	61	;'='
   674  00FF6C  3D                 	db	61	;'='
   675  00FF6D  20                 	db	32
   676  00FF6E  56                 	db	86	;'V'
   677  00FF6F  45                 	db	69	;'E'
   678  00FF70  48                 	db	72	;'H'
   679  00FF71  49                 	db	73	;'I'
   680  00FF72  43                 	db	67	;'C'
   681  00FF73  4C                 	db	76	;'L'
   682  00FF74  45                 	db	69	;'E'
   683  00FF75  20                 	db	32
   684  00FF76  44                 	db	68	;'D'
   685  00FF77  41                 	db	65	;'A'
   686  00FF78  54                 	db	84	;'T'
   687  00FF79  41                 	db	65	;'A'
   688  00FF7A  20                 	db	32
   689  00FF7B  3D                 	db	61	;'='
   690  00FF7C  3D                 	db	61	;'='
   691  00FF7D  3D                 	db	61	;'='
   692  00FF7E  00                 	db	0
   693  00FF7F                     STR_1:
   694  00FF7F  3D                 	db	61	;'='
   695  00FF80  3D                 	db	61	;'='
   696  00FF81  3D                 	db	61	;'='
   697  00FF82  3D                 	db	61	;'='
   698  00FF83  3D                 	db	61	;'='
   699  00FF84  3D                 	db	61	;'='
   700  00FF85  3D                 	db	61	;'='
   701  00FF86  3D                 	db	61	;'='
   702  00FF87  3D                 	db	61	;'='
   703  00FF88  3D                 	db	61	;'='
   704  00FF89  3D                 	db	61	;'='
   705  00FF8A  3D                 	db	61	;'='
   706  00FF8B  3D                 	db	61	;'='
   707  00FF8C  3D                 	db	61	;'='
   708  00FF8D  3D                 	db	61	;'='
   709  00FF8E  3D                 	db	61	;'='
   710  00FF8F  3D                 	db	61	;'='
   711  00FF90  3D                 	db	61	;'='
   712  00FF91  3D                 	db	61	;'='
   713  00FF92  3D                 	db	61	;'='
   714  00FF93  00                 	db	0
   715  00FF94                     STR_17:
   716  00FF94  20                 	db	32
   717  00FF95  50                 	db	80	;'P'
   718  00FF96  61                 	db	97	;'a'
   719  00FF97  72                 	db	114	;'r'
   720  00FF98  6B                 	db	107	;'k'
   721  00FF99  69                 	db	105	;'i'
   722  00FF9A  6E                 	db	110	;'n'
   723  00FF9B  67                 	db	103	;'g'
   724  00FF9C  20                 	db	32
   725  00FF9D  73                 	db	115	;'s'
   726  00FF9E  70                 	db	112	;'p'
   727  00FF9F  61                 	db	97	;'a'
   728  00FFA0  63                 	db	99	;'c'
   729  00FFA1  65                 	db	101	;'e'
   730  00FFA2  20                 	db	32
   731  00FFA3  46                 	db	70	;'F'
   732  00FFA4  4F                 	db	79	;'O'
   733  00FFA5  55                 	db	85	;'U'
   734  00FFA6  4E                 	db	78	;'N'
   735  00FFA7  44                 	db	68	;'D'
   736  00FFA8  00                 	db	0
   737  00FFA9                     STR_8:
   738  00FFA9  53                 	db	83	;'S'
   739  00FFAA  70                 	db	112	;'p'
   740  00FFAB  65                 	db	101	;'e'
   741  00FFAC  65                 	db	101	;'e'
   742  00FFAD  64                 	db	100	;'d'
   743  00FFAE  3A                 	db	58	;':'
   744  00FFAF  20                 	db	32
   745  00FFB0  30                 	db	48	;'0'
   746  00FFB1  2E                 	db	46
   747  00FFB2  30                 	db	48	;'0'
   748  00FFB3  30                 	db	48	;'0'
   749  00FFB4  20                 	db	32
   750  00FFB5  4B                 	db	75	;'K'
   751  00FFB6  6D                 	db	109	;'m'
   752  00FFB7  2F                 	db	47
   753  00FFB8  68                 	db	104	;'h'
   754  00FFB9  00                 	db	0
   755  00FFBA                     STR_9:
   756  00FFBA  50                 	db	80	;'P'
   757  00FFBB  61                 	db	97	;'a'
   758  00FFBC  72                 	db	114	;'r'
   759  00FFBD  6B                 	db	107	;'k'
   760  00FFBE  20                 	db	32
   761  00FFBF  61                 	db	97	;'a'
   762  00FFC0  73                 	db	115	;'s'
   763  00FFC1  73                 	db	115	;'s'
   764  00FFC2  69                 	db	105	;'i'
   765  00FFC3  73                 	db	115	;'s'
   766  00FFC4  74                 	db	116	;'t'
   767  00FFC5  3A                 	db	58	;':'
   768  00FFC6  20                 	db	32
   769  00FFC7  00                 	db	0
   770  00FFC8                     STR_7:
   771  00FFC8  44                 	db	68	;'D'
   772  00FFC9  69                 	db	105	;'i'
   773  00FFCA  72                 	db	114	;'r'
   774  00FFCB  65                 	db	101	;'e'
   775  00FFCC  63                 	db	99	;'c'
   776  00FFCD  74                 	db	116	;'t'
   777  00FFCE  69                 	db	105	;'i'
   778  00FFCF  6F                 	db	111	;'o'
   779  00FFD0  6E                 	db	110	;'n'
   780  00FFD1  3A                 	db	58	;':'
   781  00FFD2  20                 	db	32
   782  00FFD3  00                 	db	0
   783  00FFD4                     STR_14:
   784  00FFD4  4F                 	db	79	;'O'
   785  00FFD5  46                 	db	70	;'F'
   786  00FFD6  46                 	db	70	;'F'
   787  00FFD7  20                 	db	32
   788  00FFD8  20                 	db	32
   789  00FFD9  20                 	db	32
   790  00FFDA  20                 	db	32
   791  00FFDB  00                 	db	0
   792  00FFDC                     STR_15:
   793  00FFDC  53                 	db	83	;'S'
   794  00FFDD  45                 	db	69	;'E'
   795  00FFDE  41                 	db	65	;'A'
   796  00FFDF  52                 	db	82	;'R'
   797  00FFE0  43                 	db	67	;'C'
   798  00FFE1  48                 	db	72	;'H'
   799  00FFE2  20                 	db	32
   800  00FFE3  00                 	db	0
   801  00FFE4                     STR_10:
   802  00FFE4  44                 	db	68	;'D'
   803  00FFE5  61                 	db	97	;'a'
   804  00FFE6  74                 	db	116	;'t'
   805  00FFE7  61                 	db	97	;'a'
   806  00FFE8  3A                 	db	58	;':'
   807  00FFE9  20                 	db	32
   808  00FFEA  00                 	db	0
   809  00FFEB                     STR_13:
   810  00FFEB  50                 	db	80	;'P'
   811  00FFEC  20                 	db	32
   812  00FFED  20                 	db	32
   813  00FFEE  20                 	db	32
   814  00FFEF  00                 	db	0
   815  00FFF0                     STR_11:
   816  00FFF0  46                 	db	70	;'F'
   817  00FFF1  57                 	db	87	;'W'
   818  00FFF2  44                 	db	68	;'D'
   819  00FFF3  20                 	db	32
   820  00FFF4  00                 	db	0
   821  00FFF5                     STR_12:
   822  00FFF5  42                 	db	66	;'B'
   823  00FFF6  4B                 	db	75	;'K'
   824  00FFF7  57                 	db	87	;'W'
   825  00FFF8  44                 	db	68	;'D'
   826  00FFF9  00                 	db	0
   827  00FFFA                     STR_5:
   828  00FFFA  25                 	db	37
   829  00FFFB  2E                 	db	46
   830  00FFFC  32                 	db	50	;'2'
   831  00FFFD  66                 	db	102	;'f'
   832  00FFFE  00                 	db	0
   833  0000                     
   834                           ; #config settings
   835  00FFFF  00                 	db	0	; dummy byte at the end
   836  0000                     
   837                           	psect	cinit
   838  0162A8                     __pcinit:
   839                           	opt stack 0
   840  0162A8                     start_initialization:
   841                           	opt stack 0
   842  0162A8                     __initialization:
   843                           	opt stack 0
   844                           
   845                           ; Clear objects allocated to BANK1 (77 bytes)
   846  0162A8  EE01  F000         	lfsr	0,__pbssBANK1
   847  0162AC  0E4D               	movlw	77
   848  0162AE                     clear_0:
   849  0162AE  6AEE               	clrf	postinc0,c
   850  0162B0  06E8               	decf	wreg,f,c
   851  0162B2  E1FD               	bnz	clear_0
   852                           
   853                           ; Clear objects allocated to BANK0 (33 bytes)
   854  0162B4  EE00  F0CC         	lfsr	0,__pbssBANK0
   855  0162B8  0E21               	movlw	33
   856  0162BA                     clear_1:
   857  0162BA  6AEE               	clrf	postinc0,c
   858  0162BC  06E8               	decf	wreg,f,c
   859  0162BE  E1FD               	bnz	clear_1
   860                           
   861                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   862  0162C0  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   863  0162C2  6A4B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   864  0162C4  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   865                           
   866                           ; Clear objects allocated to COMRAM (39 bytes)
   867  0162C6  EE00  F001         	lfsr	0,__pbssCOMRAM
   868  0162CA  0E27               	movlw	39
   869  0162CC                     clear_2:
   870  0162CC  6AEE               	clrf	postinc0,c
   871  0162CE  06E8               	decf	wreg,f,c
   872  0162D0  E1FD               	bnz	clear_2
   873                           
   874                           ; Initialize objects allocated to BANK0 (1 bytes)
   875                           ; load TBLPTR registers with __pidataBANK0
   876  0162D2  0EC2               	movlw	low __pidataBANK0
   877  0162D4  6EF6               	movwf	tblptrl,c
   878  0162D6  0E65               	movlw	high __pidataBANK0
   879  0162D8  6EF7               	movwf	tblptrh,c
   880  0162DA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   881  0162DC  6EF8               	movwf	tblptru,c
   882  0162DE  0009               	tblrd		*+	;fetch initializer
   883  0162E0  CFF5 F0ED          	movff	tablat,__pdataBANK0
   884  0162E4                     end_of_initialization:
   885                           	opt stack 0
   886  0162E4                     __end_of__initialization:
   887                           	opt stack 0
   888  0162E4  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   889  0162E6  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   890  0162E8  0100               	movlb	0
   891  0162EA  EFCD  F089         	goto	_main	;jump to C main() function
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           
   899                           	psect	bitbssCOMRAM
   900  000250                     __pbitbssCOMRAM:
   901                           	opt stack 0
   902  000250                     _AbsFlag:
   903                           	opt stack 0
   904  000250                     	ds	1
   905  000251                     _BKWD_sensor:
   906                           	opt stack 0
   907  000251                     	ds	1
   908  000252                     _Can_Tx_Force:
   909                           	opt stack 0
   910  000252                     	ds	1
   911  000253                     _F1_switch:
   912                           	opt stack 0
   913  000253                     	ds	1
   914  000254                     _F2_switch:
   915                           	opt stack 0
   916  000254                     	ds	1
   917  000255                     _FWD_sensor:
   918                           	opt stack 0
   919  000255                     	ds	1
   920  000256                     _MotoreFlag:
   921                           	opt stack 0
   922  000256                     	ds	1
   923  000257                     _RTR_Flag:
   924                           	opt stack 0
   925  000257                     	ds	1
   926  000258                     _SterzoFlag:
   927                           	opt stack 0
   928  000258                     	ds	1
   929  000259                     _collision_risk:
   930                           	opt stack 0
   931  000259                     	ds	1
   932  00025A                     _display_refresh:
   933                           	opt stack 0
   934  00025A                     	ds	1
   935  00025B                     _newMessageCan:
   936                           	opt stack 0
   937  00025B                     	ds	1
   938  00025C                     _parking_error:
   939                           	opt stack 0
   940  00025C                     	ds	1
   941  00025D                     _parking_message_E:
   942                           	opt stack 0
   943  00025D                     	ds	1
   944  00025E                     _power_switch:
   945                           	opt stack 0
   946  00025E                     	ds	1
   947  00025F                     _space_available:
   948                           	opt stack 0
   949  00025F                     	ds	1
   950  000260                     _space_gap_reached:
   951                           	opt stack 0
   952  000260                     	ds	1
   953  000261                     _steering_correction_dir:
   954                           	opt stack 0
   955  000261                     	ds	1
   956  000262                     _wait_low_1:
   957                           	opt stack 0
   958  000262                     	ds	1
   959  000263                     _wait_low_2:
   960                           	opt stack 0
   961  000263                     	ds	1
   962  000264                     _wait_low_3:
   963                           	opt stack 0
   964  000264                     	ds	1
   965  000265                     _x:
   966                           	opt stack 0
   967  000265                     	ds	1
   968  000266                     _y:
   969                           	opt stack 0
   970  000266                     	ds	1
   971  000267                     _z:
   972                           	opt stack 0
   973  000267                     	ds	1
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           
   981                           	psect	bssCOMRAM
   982  000001                     __pbssCOMRAM:
   983                           	opt stack 0
   984  000001                     _data_speed_rx:
   985                           	opt stack 0
   986  000001                     	ds	7
   987  000008                     _actual_speed_kmh:
   988                           	opt stack 0
   989  000008                     	ds	4
   990  00000C                     _id:
   991                           	opt stack 0
   992  00000C                     	ds	4
   993  000010                     _pr_time_3:
   994                           	opt stack 0
   995  000010                     	ds	4
   996  000014                     _pr_time_5:
   997                           	opt stack 0
   998  000014                     	ds	4
   999  000018                     _pr_time_6:
  1000                           	opt stack 0
  1001  000018                     	ds	4
  1002  00001C                     _time_counter:
  1003                           	opt stack 0
  1004  00001C                     	ds	4
  1005  000020                     _left_speed:
  1006                           	opt stack 0
  1007  000020                     	ds	2
  1008  000022                     _right_speed:
  1009                           	opt stack 0
  1010  000022                     	ds	2
  1011  000024                     _user_data:
  1012                           	opt stack 0
  1013  000024                     	ds	2
  1014  000026                     _battery:
  1015                           	opt stack 0
  1016  000026                     	ds	1
  1017  000027                     _set_steering:
  1018                           	opt stack 0
  1019  000027                     	ds	1
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           
  1027                           	psect	bssBANK0
  1028  0000CC                     __pbssBANK0:
  1029                           	opt stack 0
  1030  0000CC                     _JoystickConstants:
  1031                           	opt stack 0
  1032  0000CC                     	ds	8
  1033  0000D4                     _check:
  1034                           	opt stack 0
  1035  0000D4                     	ds	4
  1036  0000D8                     _pr_time_1:
  1037                           	opt stack 0
  1038  0000D8                     	ds	4
  1039  0000DC                     _pr_time_2:
  1040                           	opt stack 0
  1041  0000DC                     	ds	4
  1042  0000E0                     _JoystickValues:
  1043                           	opt stack 0
  1044  0000E0                     	ds	2
  1045  0000E2                     _actual_speed:
  1046                           	opt stack 0
  1047  0000E2                     	ds	2
  1048  0000E4                     _clock_counter_reference:
  1049                           	opt stack 0
  1050  0000E4                     	ds	2
  1051  0000E6                     _set_speed:
  1052                           	opt stack 0
  1053  0000E6                     	ds	2
  1054  0000E8                     _dir:
  1055                           	opt stack 0
  1056  0000E8                     	ds	1
  1057  0000E9                     _parking_message_ID:
  1058                           	opt stack 0
  1059  0000E9                     	ds	1
  1060  0000EA                     _parking_state:
  1061                           	opt stack 0
  1062  0000EA                     	ds	1
  1063  0000EB                     _steering_correction:
  1064                           	opt stack 0
  1065  0000EB                     	ds	1
  1066  0000EC                     _switch_position:
  1067                           	opt stack 0
  1068  0000EC                     	ds	1
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           
  1076                           	psect	dataBANK0
  1077  0000ED                     __pdataBANK0:
  1078                           	opt stack 0
  1079  0000ED                     _delay_quartz_frequency_value:
  1080                           	opt stack 0
  1081  0000ED                     	ds	1
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           
  1089                           	psect	bssBANK1
  1090  000100                     __pbssBANK1:
  1091                           	opt stack 0
  1092  000100                     LCD_write_integer@F17272:
  1093                           	opt stack 0
  1094  000100                     	ds	6
  1095  000106                     _pr_time_4:
  1096                           	opt stack 0
  1097  000106                     	ds	4
  1098  00010A                     _msg:
  1099                           	opt stack 0
  1100  00010A                     	ds	15
  1101  000119                     _str:
  1102                           	opt stack 0
  1103  000119                     	ds	12
  1104  000125                     _data:
  1105                           	opt stack 0
  1106  000125                     	ds	8
  1107  00012D                     _data_brake:
  1108                           	opt stack 0
  1109  00012D                     	ds	8
  1110  000135                     _data_speed:
  1111                           	opt stack 0
  1112  000135                     	ds	8
  1113  00013D                     _data_steering:
  1114                           	opt stack 0
  1115  00013D                     	ds	8
  1116  000145                     _park_assist_state:
  1117                           	opt stack 0
  1118  000145                     	ds	8
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           postinc0	equ	0xFEE
  1124                           wreg	equ	0xFE8
  1125                           
  1126                           	psect	cstackBANK1
  1127  00014D                     __pcstackBANK1:
  1128                           	opt stack 0
  1129  00014D                     _sprintf$4119:
  1130                           	opt stack 0
  1131                           
  1132                           ; 4 bytes @ 0x0
  1133  00014D                     	ds	4
  1134  000151                     sprintf@ap:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0x4
  1138  000151                     	ds	2
  1139  000153                     sprintf@flag:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x6
  1143  000153                     	ds	2
  1144  000155                     sprintf@val:
  1145                           	opt stack 0
  1146                           
  1147                           ; 4 bytes @ 0x8
  1148  000155                     	ds	4
  1149  000159                     sprintf@exp:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0xC
  1153  000159                     	ds	2
  1154  00015B                     sprintf@tmpval:
  1155                           	opt stack 0
  1156                           
  1157                           ; 4 bytes @ 0xE
  1158  00015B                     	ds	4
  1159  00015F                     sprintf@prec:
  1160                           	opt stack 0
  1161                           
  1162                           ; 2 bytes @ 0x12
  1163  00015F                     	ds	2
  1164  000161                     sprintf@fval:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x14
  1168  000161                     	ds	4
  1169  000165                     sprintf@c:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x18
  1173  000165                     	ds	1
  1174  000166                     ??_main:
  1175                           
  1176                           ; 0 bytes @ 0x19
  1177  000166                     	ds	8
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           
  1185                           	psect	cstackBANK0
  1186  000060                     __pcstackBANK0:
  1187                           	opt stack 0
  1188  000060                     ??_ISR_alta:
  1189                           
  1190                           ; 0 bytes @ 0x0
  1191  000060                     	ds	16
  1192  000070                     ??_Joystick_Polling:
  1193  000070                     ??_CAN_Rx:
  1194  000070                     ??_isdigit:
  1195  000070                     ?___wmul:
  1196                           	opt stack 0
  1197  000070                     ?___awmod:
  1198                           	opt stack 0
  1199  000070                     ?___lwdiv:
  1200                           	opt stack 0
  1201  000070                     ?___lwmod:
  1202                           	opt stack 0
  1203  000070                     ?__tdiv_to_l_:
  1204                           	opt stack 0
  1205  000070                     ?__div_to_l_:
  1206                           	opt stack 0
  1207  000070                     ?___lldiv:
  1208                           	opt stack 0
  1209  000070                     ?___llmod:
  1210                           	opt stack 0
  1211  000070                     ?___xxtofl:
  1212                           	opt stack 0
  1213  000070                     CANOperationMode@mode:
  1214                           	opt stack 0
  1215  000070                     _CANisTxReady$3115:
  1216                           	opt stack 0
  1217  000070                     delay_set_quartz@frequency:
  1218                           	opt stack 0
  1219  000070                     ___wmul@multiplier:
  1220                           	opt stack 0
  1221  000070                     ___awmod@dividend:
  1222                           	opt stack 0
  1223  000070                     ___lwdiv@dividend:
  1224                           	opt stack 0
  1225  000070                     ___lwmod@dividend:
  1226                           	opt stack 0
  1227  000070                     CANsendMessage@identifier:
  1228                           	opt stack 0
  1229  000070                     CANSetMask@mask:
  1230                           	opt stack 0
  1231  000070                     CANSetFilter@filter:
  1232                           	opt stack 0
  1233  000070                     __div_to_l_@f1:
  1234                           	opt stack 0
  1235  000070                     ___flge@ff1:
  1236                           	opt stack 0
  1237  000070                     __tdiv_to_l_@f1:
  1238                           	opt stack 0
  1239  000070                     ___lldiv@dividend:
  1240                           	opt stack 0
  1241  000070                     ___llmod@dividend:
  1242                           	opt stack 0
  1243  000070                     ___xxtofl@val:
  1244                           	opt stack 0
  1245                           
  1246                           ; 4 bytes @ 0x10
  1247  000070                     	ds	1
  1248  000071                     Joystick_Polling@i:
  1249                           	opt stack 0
  1250  000071                     _isdigit$3702:
  1251                           	opt stack 0
  1252                           
  1253                           ; 1 bytes @ 0x11
  1254  000071                     	ds	1
  1255  000072                     isdigit@c:
  1256                           	opt stack 0
  1257  000072                     ___wmul@multiplicand:
  1258                           	opt stack 0
  1259  000072                     ___awmod@divisor:
  1260                           	opt stack 0
  1261  000072                     ___lwdiv@divisor:
  1262                           	opt stack 0
  1263  000072                     ___lwmod@divisor:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0x12
  1267  000072                     	ds	2
  1268  000074                     ??___xxtofl:
  1269  000074                     CANSetMask@type:
  1270                           	opt stack 0
  1271  000074                     CANSetFilter@type:
  1272                           	opt stack 0
  1273  000074                     ___awmod@counter:
  1274                           	opt stack 0
  1275  000074                     ___lwmod@counter:
  1276                           	opt stack 0
  1277  000074                     CANsendMessage@data:
  1278                           	opt stack 0
  1279  000074                     ___wmul@product:
  1280                           	opt stack 0
  1281  000074                     ___lwdiv@quotient:
  1282                           	opt stack 0
  1283  000074                     __div_to_l_@f2:
  1284                           	opt stack 0
  1285  000074                     ___flge@ff2:
  1286                           	opt stack 0
  1287  000074                     __tdiv_to_l_@f2:
  1288                           	opt stack 0
  1289  000074                     ___lldiv@divisor:
  1290                           	opt stack 0
  1291  000074                     ___llmod@divisor:
  1292                           	opt stack 0
  1293                           
  1294                           ; 4 bytes @ 0x14
  1295  000074                     	ds	1
  1296  000075                     ??_CANSetMask:
  1297  000075                     ??_CANSetFilter:
  1298  000075                     ___awmod@sign:
  1299                           	opt stack 0
  1300                           
  1301                           ; 1 bytes @ 0x15
  1302  000075                     	ds	1
  1303  000076                     ?___awdiv:
  1304                           	opt stack 0
  1305  000076                     CANsendMessage@dataLength:
  1306                           	opt stack 0
  1307  000076                     ___lwdiv@counter:
  1308                           	opt stack 0
  1309  000076                     delay_ms@value_ms:
  1310                           	opt stack 0
  1311  000076                     ___awdiv@dividend:
  1312                           	opt stack 0
  1313                           
  1314                           ; 2 bytes @ 0x16
  1315  000076                     	ds	1
  1316  000077                     CANsendMessage@flags:
  1317                           	opt stack 0
  1318  000077                     utoa@buf:
  1319                           	opt stack 0
  1320                           
  1321                           ; 2 bytes @ 0x17
  1322  000077                     	ds	1
  1323  000078                     ??__tdiv_to_l_:
  1324  000078                     ??_CANsendMessage:
  1325  000078                     ??___flge:
  1326  000078                     LCD_send_command@D2:
  1327                           	opt stack 0
  1328  000078                     ___llmod@counter:
  1329                           	opt stack 0
  1330  000078                     ___xxtofl@sign:
  1331                           	opt stack 0
  1332  000078                     ___awdiv@divisor:
  1333                           	opt stack 0
  1334  000078                     __div_to_l_@quot:
  1335                           	opt stack 0
  1336  000078                     ___lldiv@quotient:
  1337                           	opt stack 0
  1338                           
  1339                           ; 4 bytes @ 0x18
  1340  000078                     	ds	1
  1341  000079                     CANSetMask@numBuffer:
  1342                           	opt stack 0
  1343  000079                     CANSetFilter@numBuffer:
  1344                           	opt stack 0
  1345  000079                     LCD_send_command@D1:
  1346                           	opt stack 0
  1347  000079                     ___xxtofl@exp:
  1348                           	opt stack 0
  1349  000079                     utoa@val:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x19
  1353  000079                     	ds	1
  1354  00007A                     LCD_send_command@D0:
  1355                           	opt stack 0
  1356  00007A                     ___awdiv@counter:
  1357                           	opt stack 0
  1358  00007A                     CANSetMask@tamp:
  1359                           	opt stack 0
  1360  00007A                     CANSetFilter@tamp:
  1361                           	opt stack 0
  1362  00007A                     ___xxtofl@arg:
  1363                           	opt stack 0
  1364                           
  1365                           ; 4 bytes @ 0x1A
  1366  00007A                     	ds	1
  1367  00007B                     LCD_send_command@D3:
  1368                           	opt stack 0
  1369  00007B                     ___awdiv@sign:
  1370                           	opt stack 0
  1371  00007B                     utoa@base:
  1372                           	opt stack 0
  1373  00007B                     __tdiv_to_l_@quot:
  1374                           	opt stack 0
  1375                           
  1376                           ; 4 bytes @ 0x1B
  1377  00007B                     	ds	1
  1378  00007C                     LCD_shift_cursor@number_of_shift:
  1379                           	opt stack 0
  1380  00007C                     LCD_goto_line@line:
  1381                           	opt stack 0
  1382  00007C                     LCD_write_char@D3:
  1383                           	opt stack 0
  1384  00007C                     LCD_cursor@blinking:
  1385                           	opt stack 0
  1386  00007C                     __div_to_l_@cntr:
  1387                           	opt stack 0
  1388  00007C                     ___lldiv@counter:
  1389                           	opt stack 0
  1390  00007C                     ___awdiv@quotient:
  1391                           	opt stack 0
  1392  00007C                     CANsendMessage@tamp:
  1393                           	opt stack 0
  1394                           
  1395                           ; 4 bytes @ 0x1C
  1396  00007C                     	ds	1
  1397  00007D                     LCD_shift_cursor@shift:
  1398                           	opt stack 0
  1399  00007D                     LCD_write_char@D2:
  1400                           	opt stack 0
  1401  00007D                     LCD_cursor@active:
  1402                           	opt stack 0
  1403  00007D                     __div_to_l_@exp1:
  1404                           	opt stack 0
  1405  00007D                     utoa@v:
  1406                           	opt stack 0
  1407                           
  1408                           ; 2 bytes @ 0x1D
  1409  00007D                     	ds	1
  1410  00007E                     ?___fldiv:
  1411                           	opt stack 0
  1412  00007E                     ?___flmul:
  1413                           	opt stack 0
  1414  00007E                     CANInitialize@phaseSeg1:
  1415                           	opt stack 0
  1416  00007E                     LCD_shift_cursor@i:
  1417                           	opt stack 0
  1418  00007E                     LCD_write_char@D1:
  1419                           	opt stack 0
  1420  00007E                     LCD_initialize@quartz_frequency:
  1421                           	opt stack 0
  1422  00007E                     ___fldiv@b:
  1423                           	opt stack 0
  1424  00007E                     ___flmul@b:
  1425                           	opt stack 0
  1426                           
  1427                           ; 4 bytes @ 0x1E
  1428  00007E                     	ds	1
  1429  00007F                     CANInitialize@phaseSeg2:
  1430                           	opt stack 0
  1431  00007F                     LCD_goto_xy@y:
  1432                           	opt stack 0
  1433  00007F                     LCD_write_char@D0:
  1434                           	opt stack 0
  1435  00007F                     __tdiv_to_l_@cntr:
  1436                           	opt stack 0
  1437  00007F                     utoa@c:
  1438                           	opt stack 0
  1439                           
  1440                           ; 1 bytes @ 0x1F
  1441  00007F                     	ds	1
  1442  000080                     CANInitialize@SJW:
  1443                           	opt stack 0
  1444  000080                     LCD_goto_xy@x:
  1445                           	opt stack 0
  1446  000080                     LCD_write_char@value:
  1447                           	opt stack 0
  1448  000080                     __tdiv_to_l_@exp1:
  1449                           	opt stack 0
  1450  000080                     itoa@buf:
  1451                           	opt stack 0
  1452                           
  1453                           ; 2 bytes @ 0x20
  1454  000080                     	ds	1
  1455  000081                     CANInitialize@BRP:
  1456                           	opt stack 0
  1457  000081                     LCD_write_message@buffer:
  1458                           	opt stack 0
  1459  000081                     LCD_write_string@buffer:
  1460                           	opt stack 0
  1461                           
  1462                           ; 2 bytes @ 0x21
  1463  000081                     	ds	1
  1464  000082                     CANInitialize@flags:
  1465                           	opt stack 0
  1466  000082                     itoa@val:
  1467                           	opt stack 0
  1468  000082                     ___fldiv@a:
  1469                           	opt stack 0
  1470  000082                     ___flmul@a:
  1471                           	opt stack 0
  1472                           
  1473                           ; 4 bytes @ 0x22
  1474  000082                     	ds	1
  1475  000083                     ??_CANInitialize:
  1476  000083                     
  1477                           ; 0 bytes @ 0x23
  1478  000083                     	ds	1
  1479  000084                     itoa@base:
  1480                           	opt stack 0
  1481                           
  1482                           ; 2 bytes @ 0x24
  1483  000084                     	ds	2
  1484  000086                     ??___fldiv:
  1485  000086                     ??___flmul:
  1486  000086                     itoa@cp:
  1487                           	opt stack 0
  1488                           
  1489                           ; 2 bytes @ 0x26
  1490  000086                     	ds	1
  1491  000087                     CANInitialize@propSeg:
  1492                           	opt stack 0
  1493                           
  1494                           ; 1 bytes @ 0x27
  1495  000087                     	ds	1
  1496  000088                     CANInitialize@FilterConfig1:
  1497                           	opt stack 0
  1498  000088                     LCD_write_integer@value:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x28
  1502  000088                     	ds	1
  1503  000089                     CANInitialize@FilterConfig2:
  1504                           	opt stack 0
  1505                           
  1506                           ; 1 bytes @ 0x29
  1507  000089                     	ds	1
  1508  00008A                     LCD_write_integer@number_of_digits:
  1509                           	opt stack 0
  1510  00008A                     ___fldiv@sign:
  1511                           	opt stack 0
  1512  00008A                     ___flmul@sign:
  1513                           	opt stack 0
  1514                           
  1515                           ; 1 bytes @ 0x2A
  1516  00008A                     	ds	1
  1517  00008B                     LCD_write_integer@zero_cleaning:
  1518                           	opt stack 0
  1519  00008B                     ___flmul@aexp:
  1520                           	opt stack 0
  1521  00008B                     ___fldiv@rem:
  1522                           	opt stack 0
  1523                           
  1524                           ; 4 bytes @ 0x2B
  1525  00008B                     	ds	1
  1526  00008C                     ??_LCD_write_integer:
  1527  00008C                     ___flmul@grs:
  1528                           	opt stack 0
  1529                           
  1530                           ; 4 bytes @ 0x2C
  1531  00008C                     	ds	3
  1532  00008F                     ___fldiv@new_exp:
  1533                           	opt stack 0
  1534                           
  1535                           ; 2 bytes @ 0x2F
  1536  00008F                     	ds	1
  1537  000090                     ___flmul@bexp:
  1538                           	opt stack 0
  1539                           
  1540                           ; 1 bytes @ 0x30
  1541  000090                     	ds	1
  1542  000091                     ___fldiv@grs:
  1543                           	opt stack 0
  1544  000091                     ___flmul@prod:
  1545                           	opt stack 0
  1546  000091                     LCD_write_integer@convertedInt:
  1547                           	opt stack 0
  1548                           
  1549                           ; 6 bytes @ 0x31
  1550  000091                     	ds	4
  1551  000095                     ___fldiv@bexp:
  1552                           	opt stack 0
  1553  000095                     ___flmul@temp:
  1554                           	opt stack 0
  1555                           
  1556                           ; 2 bytes @ 0x35
  1557  000095                     	ds	1
  1558  000096                     ___fldiv@aexp:
  1559                           	opt stack 0
  1560                           
  1561                           ; 1 bytes @ 0x36
  1562  000096                     	ds	1
  1563  000097                     ?_fround:
  1564                           	opt stack 0
  1565  000097                     ?_scale:
  1566                           	opt stack 0
  1567  000097                     ?___flneg:
  1568                           	opt stack 0
  1569  000097                     LCD_write_integer@index:
  1570                           	opt stack 0
  1571  000097                     ___flneg@f1:
  1572                           	opt stack 0
  1573                           
  1574                           ; 4 bytes @ 0x37
  1575  000097                     	ds	4
  1576  00009B                     _fround$4117:
  1577                           	opt stack 0
  1578  00009B                     _scale$4118:
  1579                           	opt stack 0
  1580                           
  1581                           ; 4 bytes @ 0x3B
  1582  00009B                     	ds	4
  1583  00009F                     scale@scl:
  1584                           	opt stack 0
  1585  00009F                     _fround$4116:
  1586                           	opt stack 0
  1587                           
  1588                           ; 4 bytes @ 0x3F
  1589  00009F                     	ds	4
  1590  0000A3                     fround@prec:
  1591                           	opt stack 0
  1592                           
  1593                           ; 1 bytes @ 0x43
  1594  0000A3                     	ds	1
  1595  0000A4                     ?___fladd:
  1596                           	opt stack 0
  1597  0000A4                     ___fladd@b:
  1598                           	opt stack 0
  1599                           
  1600                           ; 4 bytes @ 0x44
  1601  0000A4                     	ds	4
  1602  0000A8                     ___fladd@a:
  1603                           	opt stack 0
  1604                           
  1605                           ; 4 bytes @ 0x48
  1606  0000A8                     	ds	4
  1607  0000AC                     ??___fladd:
  1608                           
  1609                           ; 0 bytes @ 0x4C
  1610  0000AC                     	ds	8
  1611  0000B4                     ___fladd@signs:
  1612                           	opt stack 0
  1613                           
  1614                           ; 1 bytes @ 0x54
  1615  0000B4                     	ds	1
  1616  0000B5                     ___fladd@aexp:
  1617                           	opt stack 0
  1618                           
  1619                           ; 1 bytes @ 0x55
  1620  0000B5                     	ds	1
  1621  0000B6                     ___fladd@bexp:
  1622                           	opt stack 0
  1623                           
  1624                           ; 1 bytes @ 0x56
  1625  0000B6                     	ds	1
  1626  0000B7                     ___fladd@grs:
  1627                           	opt stack 0
  1628                           
  1629                           ; 1 bytes @ 0x57
  1630  0000B7                     	ds	1
  1631  0000B8                     ?___flsub:
  1632                           	opt stack 0
  1633  0000B8                     ?___fltol:
  1634                           	opt stack 0
  1635  0000B8                     ___fltol@f1:
  1636                           	opt stack 0
  1637  0000B8                     ___flsub@b:
  1638                           	opt stack 0
  1639                           
  1640                           ; 4 bytes @ 0x58
  1641  0000B8                     	ds	4
  1642  0000BC                     ??___fltol:
  1643  0000BC                     ___flsub@a:
  1644                           	opt stack 0
  1645                           
  1646                           ; 4 bytes @ 0x5C
  1647  0000BC                     	ds	4
  1648  0000C0                     ___fltol@sign1:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x60
  1652  0000C0                     	ds	1
  1653  0000C1                     ___fltol@exp1:
  1654                           	opt stack 0
  1655                           
  1656                           ; 1 bytes @ 0x61
  1657  0000C1                     	ds	1
  1658  0000C2                     ?_sprintf:
  1659                           	opt stack 0
  1660  0000C2                     sprintf@sp:
  1661                           	opt stack 0
  1662                           
  1663                           ; 2 bytes @ 0x62
  1664  0000C2                     	ds	2
  1665  0000C4                     sprintf@f:
  1666                           	opt stack 0
  1667                           
  1668                           ; 2 bytes @ 0x64
  1669  0000C4                     	ds	6
  1670  0000CA                     ??_sprintf:
  1671                           
  1672                           ; 0 bytes @ 0x6A
  1673  0000CA                     	ds	2
  1674  0000CC                     tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           
  1681                           ; 0 bytes @ 0x6C
  1682                           
  1683                           	psect	cstackCOMRAM
  1684  000028                     __pcstackCOMRAM:
  1685                           	opt stack 0
  1686  000028                     ??_ISR_bassa:
  1687  000028                     
  1688                           ; 1 bytes @ 0x0
  1689  000028                     	ds	17
  1690  000039                     _CANisRxReady$3117:
  1691                           	opt stack 0
  1692  000039                     i2_CANisTxReady$3115:
  1693                           	opt stack 0
  1694  000039                     CANreceiveMessage@msg:
  1695                           	opt stack 0
  1696  000039                     i2CANsendMessage@identifier:
  1697                           	opt stack 0
  1698                           
  1699                           ; 4 bytes @ 0x11
  1700  000039                     	ds	2
  1701  00003B                     ??_CANreceiveMessage:
  1702                           
  1703                           ; 0 bytes @ 0x13
  1704  00003B                     	ds	2
  1705  00003D                     i2CANsendMessage@data:
  1706                           	opt stack 0
  1707                           
  1708                           ; 2 bytes @ 0x15
  1709  00003D                     	ds	2
  1710  00003F                     i2CANsendMessage@dataLength:
  1711                           	opt stack 0
  1712                           
  1713                           ; 1 bytes @ 0x17
  1714  00003F                     	ds	1
  1715  000040                     i2CANsendMessage@flags:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x18
  1719  000040                     	ds	1
  1720  000041                     ??i2_CANsendMessage:
  1721                           
  1722                           ; 0 bytes @ 0x19
  1723  000041                     	ds	2
  1724  000043                     CANreceiveMessage@error:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0x1B
  1728  000043                     	ds	1
  1729  000044                     CANreceiveMessage@tamp:
  1730                           	opt stack 0
  1731                           
  1732                           ; 1 bytes @ 0x1C
  1733  000044                     	ds	1
  1734  000045                     i2CANsendMessage@tamp:
  1735                           	opt stack 0
  1736                           
  1737                           ; 4 bytes @ 0x1D
  1738  000045                     	ds	4
  1739  000049                     ISR_alta@i:
  1740                           	opt stack 0
  1741                           
  1742                           ; 1 bytes @ 0x21
  1743  000049                     	ds	1
  1744                           tblptru	equ	0xFF8
  1745                           tblptrh	equ	0xFF7
  1746                           tblptrl	equ	0xFF6
  1747                           tablat	equ	0xFF5
  1748                           postinc0	equ	0xFEE
  1749                           wreg	equ	0xFE8
  1750                           
  1751 ;;
  1752 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1753 ;;
  1754 ;; *************** function _main *****************
  1755 ;; Defined at:
  1756 ;;		line 209 in file "RemoteCan.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1774 ;;Total ram usage:        8 bytes
  1775 ;; Hardware stack levels required when called:   11
  1776 ;; This function calls:
  1777 ;;		_CAN_Rx
  1778 ;;		_CAN_Tx
  1779 ;;		_CANisTxReady
  1780 ;;		_CANsendMessage
  1781 ;;		_F1_Button_Polling
  1782 ;;		_F2_Button_Polling
  1783 ;;		_Joystick_Polling
  1784 ;;		_LCD_End
  1785 ;;		_LCD_Error
  1786 ;;		_LCD_Gap
  1787 ;;		_LCD_Handler
  1788 ;;		_LCD_Park
  1789 ;;		_LCD_Parking
  1790 ;;		_LCD_goto_line
  1791 ;;		_LCD_initialize
  1792 ;;		_LCD_write_message
  1793 ;;		_PWR_Button_Polling
  1794 ;;		___fladd
  1795 ;;		___flmul
  1796 ;;		___flneg
  1797 ;;		___fltol
  1798 ;;		___xxtofl
  1799 ;;		_board_initialization
  1800 ;;		_delay_ms
  1801 ;; This function is called by:
  1802 ;;		Startup code after reset
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text0
  1807  01139A                     __ptext0:
  1808                           	opt stack 0
  1809  01139A                     _main:
  1810                           	opt stack 20
  1811                           
  1812                           ;RemoteCan.c: 210: board_initialization();
  1813                           
  1814                           ;incstack = 0
  1815  01139A  ECE1  F0AD         	call	_board_initialization	;wreg free
  1816                           
  1817                           ;RemoteCan.c: 218: JoystickConstants[0] = 0.703;
  1818  01139E  0ECF               	movlw	207
  1819  0113A0  0100               	movlb	0	; () banked
  1820  0113A2  6FCC               	movwf	_JoystickConstants& (0+255),b	;volatile
  1821  0113A4  0EF7               	movlw	247
  1822  0113A6  6FCD               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1823  0113A8  0E33               	movlw	51
  1824  0113AA  6FCE               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1825  0113AC  0E3F               	movlw	63
  1826  0113AE  6FCF               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;RemoteCan.c: 219: JoystickConstants[1] = 15;
  1830  0113B0  0E00               	movlw	0
  1831  0113B2  0100               	movlb	0	; () banked
  1832  0113B4  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1833  0113B6  0E00               	movlw	0
  1834  0113B8  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1835  0113BA  0E70               	movlw	112
  1836  0113BC  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1837  0113BE  0E41               	movlw	65
  1838  0113C0  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;RemoteCan.c: 221: data_brake [1] = 1;
  1842  0113C2  0E01               	movlw	1
  1843  0113C4  0101               	movlb	1	; () banked
  1844  0113C6  6F2E               	movwf	(_data_brake+1)& (0+255),b
  1845  0113C8                     l9349:
  1846                           
  1847                           ;RemoteCan.c: 226: PWR_Button_Polling();
  1848  0113C8  EC8E  F0B2         	call	_PWR_Button_Polling	;wreg free
  1849                           
  1850                           ;RemoteCan.c: 227: F1_Button_Polling();
  1851  0113CC  ECB8  F0B2         	call	_F1_Button_Polling	;wreg free
  1852                           
  1853                           ;RemoteCan.c: 228: F2_Button_Polling();
  1854  0113D0  ECAA  F0B2         	call	_F2_Button_Polling	;wreg free
  1855                           
  1856                           ;RemoteCan.c: 231: if (power_switch == 0) {
  1857  0113D4  BC4B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1858  0113D6  D09A               	goto	l812
  1859                           
  1860                           ;RemoteCan.c: 232: dir = 1;
  1861  0113D8  0E01               	movlw	1
  1862  0113DA  0100               	movlb	0	; () banked
  1863  0113DC  6FE8               	movwf	_dir& (0+255),b	;volatile
  1864                           
  1865                           ;RemoteCan.c: 233: set_speed = 0;
  1866  0113DE  0E00               	movlw	0
  1867  0113E0  0100               	movlb	0	; () banked
  1868  0113E2  6FE7               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1869  0113E4  0E00               	movlw	0
  1870  0113E6  6FE6               	movwf	_set_speed& (0+255),b	;volatile
  1871                           
  1872                           ;RemoteCan.c: 234: data_steering [0] = 90;
  1873  0113E8  0E5A               	movlw	90
  1874  0113EA  0101               	movlb	1	; () banked
  1875  0113EC  6F3D               	movwf	_data_steering& (0+255),b
  1876                           
  1877                           ;RemoteCan.c: 235: data_brake [0] = 0b00000000;
  1878  0113EE  0E00               	movlw	0
  1879  0113F0  0101               	movlb	1	; () banked
  1880  0113F2  6F2D               	movwf	_data_brake& (0+255),b
  1881                           
  1882                           ; BSR set to: 1
  1883                           ;RemoteCan.c: 236: CAN_Tx();
  1884  0113F4  EC84  F0AD         	call	_CAN_Tx	;wreg free
  1885                           
  1886                           ;RemoteCan.c: 237: PORTDbits.RD6 = 0;
  1887  0113F8  9C83               	bcf	3971,6,c	;volatile
  1888                           
  1889                           ;RemoteCan.c: 238: PORTDbits.RD5 = 0;
  1890  0113FA  9A83               	bcf	3971,5,c	;volatile
  1891                           
  1892                           ;RemoteCan.c: 239: LCD_initialize(16);
  1893  0113FC  0E10               	movlw	16
  1894  0113FE  ECB5  F0AA         	call	_LCD_initialize
  1895                           
  1896                           ;RemoteCan.c: 240: LCD_goto_line(1);
  1897  011402  0E01               	movlw	1
  1898  011404  ECF2  F0AB         	call	_LCD_goto_line
  1899                           
  1900                           ;RemoteCan.c: 241: LCD_write_message("====================");
  1901  011408  0E7F               	movlw	low STR_1
  1902  01140A  0100               	movlb	0	; () banked
  1903  01140C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1904  01140E  0EFF               	movlw	high STR_1
  1905  011410  0100               	movlb	0	; () banked
  1906  011412  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1907  011414  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  1908                           
  1909                           ;RemoteCan.c: 242: LCD_goto_line(2);
  1910  011418  0E02               	movlw	2
  1911  01141A  ECF2  F0AB         	call	_LCD_goto_line
  1912                           
  1913                           ;RemoteCan.c: 243: LCD_write_message("==> VEHICLE  OFF <==");
  1914  01141E  0E55               	movlw	low STR_2
  1915  011420  0100               	movlb	0	; () banked
  1916  011422  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1917  011424  0EFF               	movlw	high STR_2
  1918  011426  0100               	movlb	0	; () banked
  1919  011428  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1920  01142A  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  1921                           
  1922                           ;RemoteCan.c: 244: LCD_goto_line(3);
  1923  01142E  0E03               	movlw	3
  1924  011430  ECF2  F0AB         	call	_LCD_goto_line
  1925                           
  1926                           ;RemoteCan.c: 245: LCD_write_message("  Press the button  ");
  1927  011434  0E83               	movlw	low STR_3
  1928  011436  0100               	movlb	0	; () banked
  1929  011438  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1930  01143A  0EFE               	movlw	high STR_3
  1931  01143C  0100               	movlb	0	; () banked
  1932  01143E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1933  011440  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  1934                           
  1935                           ;RemoteCan.c: 246: LCD_goto_line(4);
  1936  011444  0E04               	movlw	4
  1937  011446  ECF2  F0AB         	call	_LCD_goto_line
  1938                           
  1939                           ;RemoteCan.c: 247: LCD_write_message("====================");
  1940  01144A  0E7F               	movlw	low STR_1
  1941  01144C  0100               	movlb	0	; () banked
  1942  01144E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1943  011450  0EFF               	movlw	high STR_1
  1944  011452  0100               	movlb	0	; () banked
  1945  011454  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1946  011456  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  1947                           
  1948                           ;RemoteCan.c: 248: while (power_switch == 0) {
  1949  01145A  D054               	goto	l9393
  1950  01145C                     l9383:
  1951                           
  1952                           ;RemoteCan.c: 249: if ((time_counter - pr_time_1) >= 30) {
  1953  01145C  C0D8  F166         	movff	_pr_time_1,??_main	;volatile
  1954  011460  C0D9  F167         	movff	_pr_time_1+1,??_main+1	;volatile
  1955  011464  C0DA  F168         	movff	_pr_time_1+2,??_main+2	;volatile
  1956  011468  C0DB  F169         	movff	_pr_time_1+3,??_main+3	;volatile
  1957  01146C  0101               	movlb	1	; () banked
  1958  01146E  1F66               	comf	??_main& (0+255),f,b
  1959  011470  1F67               	comf	(??_main+1)& (0+255),f,b
  1960  011472  1F68               	comf	(??_main+2)& (0+255),f,b
  1961  011474  1F69               	comf	(??_main+3)& (0+255),f,b
  1962  011476  2B66               	incf	??_main& (0+255),f,b
  1963  011478  0E00               	movlw	0
  1964  01147A  2367               	addwfc	(??_main+1)& (0+255),f,b
  1965  01147C  2368               	addwfc	(??_main+2)& (0+255),f,b
  1966  01147E  2369               	addwfc	(??_main+3)& (0+255),f,b
  1967  011480  501C               	movf	_time_counter,w,c	;volatile
  1968  011482  0101               	movlb	1	; () banked
  1969  011484  2566               	addwf	??_main& (0+255),w,b
  1970  011486  0101               	movlb	1	; () banked
  1971  011488  6F6A               	movwf	(??_main+4)& (0+255),b
  1972  01148A  501D               	movf	_time_counter+1,w,c	;volatile
  1973  01148C  0101               	movlb	1	; () banked
  1974  01148E  2167               	addwfc	(??_main+1)& (0+255),w,b
  1975  011490  0101               	movlb	1	; () banked
  1976  011492  6F6B               	movwf	(??_main+5)& (0+255),b
  1977  011494  501E               	movf	_time_counter+2,w,c	;volatile
  1978  011496  0101               	movlb	1	; () banked
  1979  011498  2168               	addwfc	(??_main+2)& (0+255),w,b
  1980  01149A  0101               	movlb	1	; () banked
  1981  01149C  6F6C               	movwf	(??_main+6)& (0+255),b
  1982  01149E  501F               	movf	_time_counter+3,w,c	;volatile
  1983  0114A0  0101               	movlb	1	; () banked
  1984  0114A2  2169               	addwfc	(??_main+3)& (0+255),w,b
  1985  0114A4  0101               	movlb	1	; () banked
  1986  0114A6  6F6D               	movwf	(??_main+7)& (0+255),b
  1987  0114A8  0101               	movlb	1	; () banked
  1988  0114AA  516D               	movf	(??_main+7)& (0+255),w,b
  1989  0114AC  0101               	movlb	1	; () banked
  1990  0114AE  116C               	iorwf	(??_main+6)& (0+255),w,b
  1991  0114B0  0101               	movlb	1	; () banked
  1992  0114B2  116B               	iorwf	(??_main+5)& (0+255),w,b
  1993  0114B4  E105               	bnz	u12530
  1994  0114B6  0E1E               	movlw	30
  1995  0114B8  0101               	movlb	1	; () banked
  1996  0114BA  5D6A               	subwf	(??_main+4)& (0+255),w,b
  1997  0114BC  A0D8               	btfss	status,0,c
  1998  0114BE  D019               	goto	l9389
  1999  0114C0                     u12530:
  2000                           
  2001                           ; BSR set to: 1
  2002                           ;RemoteCan.c: 250: pr_time_1 = time_counter;
  2003  0114C0  C01C  F0D8         	movff	_time_counter,_pr_time_1	;volatile
  2004  0114C4  C01D  F0D9         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2005  0114C8  C01E  F0DA         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2006  0114CC  C01F  F0DB         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;RemoteCan.c: 251: PORTDbits.RD7 = ~PORTDbits.RD7;
  2010  0114D0  AE83               	btfss	3971,7,c	;volatile
  2011  0114D2  D002               	goto	u12540
  2012  0114D4  0E01               	movlw	1
  2013  0114D6  D001               	goto	u12546
  2014  0114D8                     u12540:
  2015  0114D8  0E00               	movlw	0
  2016  0114DA                     u12546:
  2017  0114DA  0AFF               	xorlw	255
  2018  0114DC  0101               	movlb	1	; () banked
  2019  0114DE  6F66               	movwf	??_main& (0+255),b
  2020  0114E0  0101               	movlb	1	; () banked
  2021  0114E2  3366               	rrcf	??_main& (0+255),f,b
  2022  0114E4  3366               	rrcf	??_main& (0+255),f,b
  2023  0114E6  5083               	movf	3971,w,c	;volatile
  2024  0114E8  0101               	movlb	1	; () banked
  2025  0114EA  1966               	xorwf	??_main& (0+255),w,b
  2026  0114EC  0B7F               	andlw	-129
  2027  0114EE  1966               	xorwf	??_main& (0+255),w,b
  2028  0114F0  6E83               	movwf	3971,c	;volatile
  2029  0114F2                     l9389:
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;RemoteCan.c: 252: }
  2033                           ;RemoteCan.c: 253: PWR_Button_Polling();
  2034  0114F2  EC8E  F0B2         	call	_PWR_Button_Polling	;wreg free
  2035                           
  2036                           ;RemoteCan.c: 254: delay_ms(10);
  2037  0114F6  0E00               	movlw	0
  2038  0114F8  0100               	movlb	0	; () banked
  2039  0114FA  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2040  0114FC  0E0A               	movlw	10
  2041  0114FE  6F76               	movwf	delay_ms@value_ms& (0+255),b
  2042  011500  EC94  F0B1         	call	_delay_ms	;wreg free
  2043  011504                     l9393:
  2044  011504  AC4B               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2045  011506  D7AA               	goto	l9383
  2046                           
  2047                           ;RemoteCan.c: 255: }
  2048                           ;RemoteCan.c: 256: PORTDbits.RD7 = 0;
  2049  011508  9E83               	bcf	3971,7,c	;volatile
  2050                           
  2051                           ;RemoteCan.c: 257: display_refresh = 1;
  2052  01150A  844B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2053  01150C                     l812:
  2054                           
  2055                           ;RemoteCan.c: 258: }
  2056                           ;RemoteCan.c: 261: if (PORTAbits.RA2 == 1) {
  2057  01150C  A480               	btfss	3968,2,c	;volatile
  2058  01150E  D004               	goto	l817
  2059                           
  2060                           ;RemoteCan.c: 262: switch_position = 0;
  2061  011510  0E00               	movlw	0
  2062  011512  0100               	movlb	0	; () banked
  2063  011514  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2064                           
  2065                           ;RemoteCan.c: 263: } else {
  2066  011516  D016               	goto	l818
  2067  011518                     l817:
  2068                           
  2069                           ;RemoteCan.c: 264: if (PORTAbits.RA3 == 0) {
  2070  011518  B680               	btfsc	3968,3,c	;volatile
  2071  01151A  D009               	goto	l9403
  2072                           
  2073                           ;RemoteCan.c: 265: switch_position = 1;
  2074  01151C  0E01               	movlw	1
  2075  01151E  0100               	movlb	0	; () banked
  2076  011520  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2077                           
  2078                           ;RemoteCan.c: 266: dir = 1;
  2079  011522  0E01               	movlw	1
  2080  011524  0100               	movlb	0	; () banked
  2081  011526  6FE8               	movwf	_dir& (0+255),b	;volatile
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;RemoteCan.c: 267: if (FWD_sensor == 1) {
  2085  011528  AA4A               	btfss	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
  2086  01152A  D00B               	goto	l823
  2087  01152C  D008               	goto	l9407
  2088  01152E                     l9403:
  2089                           
  2090                           ;RemoteCan.c: 273: switch_position = 2;
  2091  01152E  0E02               	movlw	2
  2092  011530  0100               	movlb	0	; () banked
  2093  011532  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2094                           
  2095                           ;RemoteCan.c: 274: dir = 0;
  2096  011534  0E00               	movlw	0
  2097  011536  0100               	movlb	0	; () banked
  2098  011538  6FE8               	movwf	_dir& (0+255),b	;volatile
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;RemoteCan.c: 275: if (BKWD_sensor == 1) {
  2102  01153A  A24A               	btfss	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
  2103  01153C  D002               	goto	l823
  2104  01153E                     l9407:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;RemoteCan.c: 276: collision_risk = 1;
  2108  01153E  824B               	bsf	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2109                           
  2110                           ;RemoteCan.c: 277: } else {
  2111  011540  D001               	goto	l818
  2112  011542                     l823:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;RemoteCan.c: 278: collision_risk = 0;
  2116  011542  924B               	bcf	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2117  011544                     l818:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;RemoteCan.c: 279: }
  2121                           ;RemoteCan.c: 280: }
  2122                           ;RemoteCan.c: 281: }
  2123                           ;RemoteCan.c: 284: if (F1_switch == 1) {
  2124  011544  A64A               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2125  011546  D0C5               	goto	l825
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;RemoteCan.c: 285: y = 0;
  2129  011548  9C4C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2130                           
  2131                           ;RemoteCan.c: 286: if ((x == 0)&&(F2_switch == 0)) {
  2132  01154A  AA4C               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2133                           
  2134                           ; BSR set to: 0
  2135  01154C  B84A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2136  01154E  D02D               	goto	l9425
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;RemoteCan.c: 287: space_available = 0;
  2140  011550  9E4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;RemoteCan.c: 288: parking_state = 1;
  2144  011552  0E01               	movlw	1
  2145  011554  0100               	movlb	0	; () banked
  2146  011556  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2147                           
  2148                           ;RemoteCan.c: 289: JoystickConstants[1] = 1;
  2149  011558  0E00               	movlw	0
  2150  01155A  0100               	movlb	0	; () banked
  2151  01155C  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2152  01155E  0E00               	movlw	0
  2153  011560  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2154  011562  0E80               	movlw	128
  2155  011564  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2156  011566  0E3F               	movlw	63
  2157  011568  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2158  01156A                     l9417:
  2159  01156A  EC5C  F0B2         	call	_CANisTxReady	;wreg free
  2160  01156E  0900               	iorlw	0
  2161  011570  B4D8               	btfsc	status,2,c
  2162  011572  D7FB               	goto	l9417
  2163                           
  2164                           ;RemoteCan.c: 291: park_assist_state[0] = 0b00000001;
  2165  011574  0E01               	movlw	1
  2166  011576  0101               	movlb	1	; () banked
  2167  011578  6F45               	movwf	_park_assist_state& (0+255),b
  2168                           
  2169                           ; BSR set to: 1
  2170                           ;RemoteCan.c: 292: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2171  01157A  0E0C               	movlw	12
  2172  01157C  0100               	movlb	0	; () banked
  2173  01157E  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2174  011580  0E00               	movlw	0
  2175  011582  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2176  011584  0E00               	movlw	0
  2177  011586  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2178  011588  0E00               	movlw	0
  2179  01158A  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2180  01158C  0E45               	movlw	low _park_assist_state
  2181  01158E  0100               	movlb	0	; () banked
  2182  011590  6F74               	movwf	CANsendMessage@data& (0+255),b
  2183  011592  0E01               	movlw	high _park_assist_state
  2184  011594  0100               	movlb	0	; () banked
  2185  011596  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2186  011598  0E08               	movlw	8
  2187  01159A  0100               	movlb	0	; () banked
  2188  01159C  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2189  01159E  0EBC               	movlw	188
  2190  0115A0  0100               	movlb	0	; () banked
  2191  0115A2  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2192  0115A4  ECAC  F08D         	call	_CANsendMessage	;wreg free
  2193                           
  2194                           ;RemoteCan.c: 293: x = 1;
  2195  0115A8  8A4C               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2196  0115AA                     l9425:
  2197                           
  2198                           ;RemoteCan.c: 294: }
  2199                           ;RemoteCan.c: 296: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2200  0115AA  B84A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2201  0115AC  AE4B               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2202  0115AE  D029               	goto	l830
  2203  0115B0  A04C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2204  0115B2  D027               	goto	l830
  2205                           
  2206                           ;RemoteCan.c: 297: if (z == 0) {
  2207  0115B4  BE4C               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2208  0115B6  D026               	goto	l9443
  2209                           
  2210                           ;RemoteCan.c: 298: parking_message_ID = 4;
  2211  0115B8  0E04               	movlw	4
  2212  0115BA  0100               	movlb	0	; () banked
  2213  0115BC  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  2214                           
  2215                           ;RemoteCan.c: 299: parking_state = 2;
  2216  0115BE  0E02               	movlw	2
  2217  0115C0  0100               	movlb	0	; () banked
  2218  0115C2  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2219  0115C4                     l9435:
  2220  0115C4  EC5C  F0B2         	call	_CANisTxReady	;wreg free
  2221  0115C8  0900               	iorlw	0
  2222  0115CA  B4D8               	btfsc	status,2,c
  2223  0115CC  D7FB               	goto	l9435
  2224                           
  2225                           ;RemoteCan.c: 301: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2226  0115CE  0E0E               	movlw	14
  2227  0115D0  0100               	movlb	0	; () banked
  2228  0115D2  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2229  0115D4  0E00               	movlw	0
  2230  0115D6  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2231  0115D8  0E00               	movlw	0
  2232  0115DA  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2233  0115DC  0E00               	movlw	0
  2234  0115DE  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2235  0115E0  0E25               	movlw	low _data
  2236  0115E2  0100               	movlb	0	; () banked
  2237  0115E4  6F74               	movwf	CANsendMessage@data& (0+255),b
  2238  0115E6  0E01               	movlw	high _data
  2239  0115E8  0100               	movlb	0	; () banked
  2240  0115EA  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2241  0115EC  0E08               	movlw	8
  2242  0115EE  0100               	movlb	0	; () banked
  2243  0115F0  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2244  0115F2  0EBC               	movlw	188
  2245  0115F4  0100               	movlb	0	; () banked
  2246  0115F6  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2247  0115F8  ECAC  F08D         	call	_CANsendMessage	;wreg free
  2248                           
  2249                           ;RemoteCan.c: 302: x = 0;
  2250  0115FC  9A4C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2251                           
  2252                           ;RemoteCan.c: 303: z = 1;
  2253  0115FE  8E4C               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2254                           
  2255                           ;RemoteCan.c: 304: }
  2256                           ;RemoteCan.c: 305: } else {
  2257  011600  D001               	goto	l9443
  2258  011602                     l830:
  2259                           
  2260                           ;RemoteCan.c: 306: z = 0;
  2261  011602  9E4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2262  011604                     l9443:
  2263                           
  2264                           ;RemoteCan.c: 307: }
  2265                           ;RemoteCan.c: 309: if ((time_counter - pr_time_5) >= 30) {
  2266  011604  C014  F166         	movff	_pr_time_5,??_main	;volatile
  2267  011608  C015  F167         	movff	_pr_time_5+1,??_main+1	;volatile
  2268  01160C  C016  F168         	movff	_pr_time_5+2,??_main+2	;volatile
  2269  011610  C017  F169         	movff	_pr_time_5+3,??_main+3	;volatile
  2270  011614  0101               	movlb	1	; () banked
  2271  011616  1F66               	comf	??_main& (0+255),f,b
  2272  011618  1F67               	comf	(??_main+1)& (0+255),f,b
  2273  01161A  1F68               	comf	(??_main+2)& (0+255),f,b
  2274  01161C  1F69               	comf	(??_main+3)& (0+255),f,b
  2275  01161E  2B66               	incf	??_main& (0+255),f,b
  2276  011620  0E00               	movlw	0
  2277  011622  2367               	addwfc	(??_main+1)& (0+255),f,b
  2278  011624  2368               	addwfc	(??_main+2)& (0+255),f,b
  2279  011626  2369               	addwfc	(??_main+3)& (0+255),f,b
  2280  011628  501C               	movf	_time_counter,w,c	;volatile
  2281  01162A  0101               	movlb	1	; () banked
  2282  01162C  2566               	addwf	??_main& (0+255),w,b
  2283  01162E  0101               	movlb	1	; () banked
  2284  011630  6F6A               	movwf	(??_main+4)& (0+255),b
  2285  011632  501D               	movf	_time_counter+1,w,c	;volatile
  2286  011634  0101               	movlb	1	; () banked
  2287  011636  2167               	addwfc	(??_main+1)& (0+255),w,b
  2288  011638  0101               	movlb	1	; () banked
  2289  01163A  6F6B               	movwf	(??_main+5)& (0+255),b
  2290  01163C  501E               	movf	_time_counter+2,w,c	;volatile
  2291  01163E  0101               	movlb	1	; () banked
  2292  011640  2168               	addwfc	(??_main+2)& (0+255),w,b
  2293  011642  0101               	movlb	1	; () banked
  2294  011644  6F6C               	movwf	(??_main+6)& (0+255),b
  2295  011646  501F               	movf	_time_counter+3,w,c	;volatile
  2296  011648  0101               	movlb	1	; () banked
  2297  01164A  2169               	addwfc	(??_main+3)& (0+255),w,b
  2298  01164C  0101               	movlb	1	; () banked
  2299  01164E  6F6D               	movwf	(??_main+7)& (0+255),b
  2300  011650  0101               	movlb	1	; () banked
  2301  011652  516D               	movf	(??_main+7)& (0+255),w,b
  2302  011654  0101               	movlb	1	; () banked
  2303  011656  116C               	iorwf	(??_main+6)& (0+255),w,b
  2304  011658  0101               	movlb	1	; () banked
  2305  01165A  116B               	iorwf	(??_main+5)& (0+255),w,b
  2306  01165C  E105               	bnz	u12690
  2307  01165E  0E1E               	movlw	30
  2308  011660  0101               	movlb	1	; () banked
  2309  011662  5D6A               	subwf	(??_main+4)& (0+255),w,b
  2310  011664  A0D8               	btfss	status,0,c
  2311  011666  D06D               	goto	l9471
  2312  011668                     u12690:
  2313                           
  2314                           ; BSR set to: 1
  2315                           ;RemoteCan.c: 310: pr_time_5 = time_counter;
  2316  011668  C01C  F014         	movff	_time_counter,_pr_time_5	;volatile
  2317  01166C  C01D  F015         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2318  011670  C01E  F016         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2319  011674  C01F  F017         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2320                           
  2321                           ;RemoteCan.c: 311: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2322  011678  BE4B               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2323                           
  2324                           ; BSR set to: 1
  2325  01167A  A04C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2326  01167C  D017               	goto	l9453
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;RemoteCan.c: 312: PORTDbits.RD6 = 1;
  2330  01167E  8C83               	bsf	3971,6,c	;volatile
  2331                           
  2332                           ;RemoteCan.c: 313: if (F2_switch == 0) {
  2333  011680  B84A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2334  011682  D012               	goto	l838
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;RemoteCan.c: 314: PORTDbits.RD5 = ~PORTDbits.RD5;
  2338  011684  AA83               	btfss	3971,5,c	;volatile
  2339  011686  D002               	goto	u12730
  2340  011688  0E01               	movlw	1
  2341  01168A  D001               	goto	u12736
  2342  01168C                     u12730:
  2343  01168C  0E00               	movlw	0
  2344  01168E                     u12736:
  2345  01168E  0AFF               	xorlw	255
  2346  011690  0101               	movlb	1	; () banked
  2347  011692  6F66               	movwf	??_main& (0+255),b
  2348  011694  0101               	movlb	1	; () banked
  2349  011696  3B66               	swapf	??_main& (0+255),f,b
  2350  011698  4766               	rlncf	??_main& (0+255),f,b
  2351  01169A  5083               	movf	3971,w,c	;volatile
  2352  01169C  0101               	movlb	1	; () banked
  2353  01169E  1966               	xorwf	??_main& (0+255),w,b
  2354  0116A0  0BDF               	andlw	-33
  2355  0116A2  1966               	xorwf	??_main& (0+255),w,b
  2356  0116A4  6E83               	movwf	3971,c	;volatile
  2357                           
  2358                           ;RemoteCan.c: 315: } else {
  2359  0116A6  D04D               	goto	l9471
  2360  0116A8                     l838:
  2361                           
  2362                           ; BSR set to: 1
  2363                           ;RemoteCan.c: 316: PORTDbits.RD5 = 1;
  2364  0116A8  8A83               	bsf	3971,5,c	;volatile
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;RemoteCan.c: 317: }
  2368                           ;RemoteCan.c: 318: } else {
  2369  0116AA  D04B               	goto	l9471
  2370  0116AC                     l9453:
  2371                           
  2372                           ; BSR set to: 1
  2373                           ;RemoteCan.c: 319: PORTDbits.RD6 = ~PORTDbits.RD6;
  2374  0116AC  AC83               	btfss	3971,6,c	;volatile
  2375  0116AE  D002               	goto	u12740
  2376  0116B0  0E01               	movlw	1
  2377  0116B2  D001               	goto	u12746
  2378  0116B4                     u12740:
  2379  0116B4  0E00               	movlw	0
  2380  0116B6                     u12746:
  2381  0116B6  0AFF               	xorlw	255
  2382  0116B8  0101               	movlb	1	; () banked
  2383  0116BA  6F66               	movwf	??_main& (0+255),b
  2384  0116BC  0101               	movlb	1	; () banked
  2385  0116BE  3B66               	swapf	??_main& (0+255),f,b
  2386  0116C0  4766               	rlncf	??_main& (0+255),f,b
  2387  0116C2  4766               	rlncf	??_main& (0+255),f,b
  2388  0116C4  5083               	movf	3971,w,c	;volatile
  2389  0116C6  0101               	movlb	1	; () banked
  2390  0116C8  1966               	xorwf	??_main& (0+255),w,b
  2391  0116CA  0BBF               	andlw	-65
  2392  0116CC  1966               	xorwf	??_main& (0+255),w,b
  2393  0116CE  6E83               	movwf	3971,c	;volatile
  2394  0116D0  D037               	goto	l9469
  2395  0116D2                     l825:
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;RemoteCan.c: 324: x = 0;
  2399  0116D2  9A4C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2400                           
  2401                           ;RemoteCan.c: 325: z = 0;
  2402  0116D4  9E4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2403                           
  2404                           ;RemoteCan.c: 326: parking_message_E = 0;
  2405  0116D6  9A4B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2406                           
  2407                           ;RemoteCan.c: 327: F2_switch = 0;
  2408  0116D8  984A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2409                           
  2410                           ;RemoteCan.c: 328: space_available = 0;
  2411  0116DA  9E4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2412                           
  2413                           ;RemoteCan.c: 329: space_gap_reached = 0;
  2414  0116DC  904C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2415                           
  2416                           ;RemoteCan.c: 330: PORTDbits.RD5 = 0;
  2417  0116DE  9A83               	bcf	3971,5,c	;volatile
  2418                           
  2419                           ;RemoteCan.c: 331: PORTDbits.RD6 = 0;
  2420  0116E0  9C83               	bcf	3971,6,c	;volatile
  2421                           
  2422                           ;RemoteCan.c: 332: if (y == 0) {
  2423  0116E2  BC4C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2424  0116E4  D02C               	goto	l9467
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;RemoteCan.c: 333: parking_state = 0;
  2428  0116E6  0E00               	movlw	0
  2429  0116E8  0100               	movlb	0	; () banked
  2430  0116EA  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2431                           
  2432                           ;RemoteCan.c: 334: JoystickConstants[1] = 15;
  2433  0116EC  0E00               	movlw	0
  2434  0116EE  0100               	movlb	0	; () banked
  2435  0116F0  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2436  0116F2  0E00               	movlw	0
  2437  0116F4  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2438  0116F6  0E70               	movlw	112
  2439  0116F8  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2440  0116FA  0E41               	movlw	65
  2441  0116FC  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2442  0116FE                     l9459:
  2443  0116FE  EC5C  F0B2         	call	_CANisTxReady	;wreg free
  2444  011702  0900               	iorlw	0
  2445  011704  B4D8               	btfsc	status,2,c
  2446  011706  D7FB               	goto	l9459
  2447                           
  2448                           ;RemoteCan.c: 336: park_assist_state[0] = 0b00000000;
  2449  011708  0E00               	movlw	0
  2450  01170A  0101               	movlb	1	; () banked
  2451  01170C  6F45               	movwf	_park_assist_state& (0+255),b
  2452                           
  2453                           ; BSR set to: 1
  2454                           ;RemoteCan.c: 337: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2455  01170E  0E0C               	movlw	12
  2456  011710  0100               	movlb	0	; () banked
  2457  011712  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2458  011714  0E00               	movlw	0
  2459  011716  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2460  011718  0E00               	movlw	0
  2461  01171A  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2462  01171C  0E00               	movlw	0
  2463  01171E  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2464  011720  0E45               	movlw	low _park_assist_state
  2465  011722  0100               	movlb	0	; () banked
  2466  011724  6F74               	movwf	CANsendMessage@data& (0+255),b
  2467  011726  0E01               	movlw	high _park_assist_state
  2468  011728  0100               	movlb	0	; () banked
  2469  01172A  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2470  01172C  0E08               	movlw	8
  2471  01172E  0100               	movlb	0	; () banked
  2472  011730  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2473  011732  0EBC               	movlw	188
  2474  011734  0100               	movlb	0	; () banked
  2475  011736  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2476  011738  ECAC  F08D         	call	_CANsendMessage	;wreg free
  2477                           
  2478                           ;RemoteCan.c: 338: y = 1;
  2479  01173C  8C4C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2480  01173E                     l9467:
  2481                           
  2482                           ;RemoteCan.c: 339: }
  2483                           ;RemoteCan.c: 340: PORTDbits.RD6 = 0;
  2484  01173E  9C83               	bcf	3971,6,c	;volatile
  2485  011740                     l9469:
  2486                           
  2487                           ;RemoteCan.c: 341: PORTDbits.RD5 = 0;
  2488  011740  9A83               	bcf	3971,5,c	;volatile
  2489  011742                     l9471:
  2490                           
  2491                           ;RemoteCan.c: 342: }
  2492                           ;RemoteCan.c: 344: Joystick_Polling();
  2493  011742  ECBC  F0B0         	call	_Joystick_Polling	;wreg free
  2494                           
  2495                           ;RemoteCan.c: 347: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2496  011746  0E00               	movlw	0
  2497  011748  0100               	movlb	0	; () banked
  2498  01174A  6FA8               	movwf	___fladd@a& (0+255),b
  2499  01174C  0E00               	movlw	0
  2500  01174E  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  2501  011750  0E34               	movlw	52
  2502  011752  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  2503  011754  0E43               	movlw	67
  2504  011756  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  2505  011758  C0CC  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  2506  01175C  C0CD  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2507  011760  C0CE  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2508  011764  C0CF  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2509  011768  0100               	movlb	0	; () banked
  2510  01176A  51E0               	movf	_JoystickValues& (0+255),w,b	;volatile
  2511  01176C  0100               	movlb	0	; () banked
  2512  01176E  6F70               	movwf	___xxtofl@val& (0+255),b
  2513  011770  6B71               	clrf	(___xxtofl@val+1)& (0+255),b
  2514  011772  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2515  011774  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2516  011776  0E00               	movlw	0
  2517  011778  ECD9  F0A4         	call	___xxtofl
  2518  01177C  C070  F07E         	movff	?___xxtofl,___flmul@b
  2519  011780  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2520  011784  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2521  011788  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2522  01178C  EC21  F09C         	call	___flmul	;wreg free
  2523  011790  C07E  F097         	movff	?___flmul,___flneg@f1
  2524  011794  C07F  F098         	movff	?___flmul+1,___flneg@f1+1
  2525  011798  C080  F099         	movff	?___flmul+2,___flneg@f1+2
  2526  01179C  C081  F09A         	movff	?___flmul+3,___flneg@f1+3
  2527  0117A0  ECB1  F0B1         	call	___flneg	;wreg free
  2528  0117A4  C097  F0A4         	movff	?___flneg,___fladd@b
  2529  0117A8  C098  F0A5         	movff	?___flneg+1,___fladd@b+1
  2530  0117AC  C099  F0A6         	movff	?___flneg+2,___fladd@b+2
  2531  0117B0  C09A  F0A7         	movff	?___flneg+3,___fladd@b+3
  2532  0117B4  ECCD  F099         	call	___fladd	;wreg free
  2533  0117B8  C0A4  F0B8         	movff	?___fladd,___fltol@f1
  2534  0117BC  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
  2535  0117C0  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
  2536  0117C4  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
  2537  0117C8  EC6C  F0AB         	call	___fltol	;wreg free
  2538  0117CC  0100               	movlb	0	; () banked
  2539  0117CE  51B8               	movf	?___fltol& (0+255),w,b
  2540  0117D0  0101               	movlb	1	; () banked
  2541  0117D2  6F3D               	movwf	_data_steering& (0+255),b
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;RemoteCan.c: 348: if (parking_state == 1) {
  2545  0117D4  0100               	movlb	0	; () banked
  2546  0117D6  05EA               	decf	_parking_state& (0+255),w,b	;volatile
  2547  0117D8  A4D8               	btfss	status,2,c
  2548  0117DA  D05C               	goto	l846
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;RemoteCan.c: 349: if (steering_correction_dir == 1) {
  2552  0117DC  A24C               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2553  0117DE  D00F               	goto	l9481
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;RemoteCan.c: 350: check = data_steering[0] + steering_correction;
  2557  0117E0  0100               	movlb	0	; () banked
  2558  0117E2  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2559  0117E4  C13D  F166         	movff	_data_steering,??_main
  2560  0117E8  0101               	movlb	1	; () banked
  2561  0117EA  6B67               	clrf	(??_main+1)& (0+255),b
  2562  0117EC  0101               	movlb	1	; () banked
  2563  0117EE  2766               	addwf	??_main& (0+255),f,b
  2564  0117F0  0E00               	movlw	0
  2565  0117F2  2367               	addwfc	(??_main+1)& (0+255),f,b
  2566  0117F4  C166  F0D4         	movff	??_main,_check	;volatile
  2567  0117F8  C167  F0D5         	movff	??_main+1,_check+1	;volatile
  2568  0117FC  D01B               	goto	L1
  2569  0117FE                     l9481:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;RemoteCan.c: 352: check = data_steering[0] - steering_correction;
  2573  0117FE  0100               	movlb	0	; () banked
  2574  011800  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2575  011802  0101               	movlb	1	; () banked
  2576  011804  6F66               	movwf	??_main& (0+255),b
  2577  011806  6B67               	clrf	(??_main+1)& (0+255),b
  2578  011808  0101               	movlb	1	; () banked
  2579  01180A  1F66               	comf	??_main& (0+255),f,b
  2580  01180C  1F67               	comf	(??_main+1)& (0+255),f,b
  2581  01180E  4B66               	infsnz	??_main& (0+255),f,b
  2582  011810  2B67               	incf	(??_main+1)& (0+255),f,b
  2583  011812  0101               	movlb	1	; () banked
  2584  011814  513D               	movf	_data_steering& (0+255),w,b
  2585  011816  0101               	movlb	1	; () banked
  2586  011818  6F68               	movwf	(??_main+2)& (0+255),b
  2587  01181A  6B69               	clrf	(??_main+3)& (0+255),b
  2588  01181C  0101               	movlb	1	; () banked
  2589  01181E  5166               	movf	??_main& (0+255),w,b
  2590  011820  0101               	movlb	1	; () banked
  2591  011822  2768               	addwf	(??_main+2)& (0+255),f,b
  2592  011824  0101               	movlb	1	; () banked
  2593  011826  5167               	movf	(??_main+1)& (0+255),w,b
  2594  011828  0101               	movlb	1	; () banked
  2595  01182A  2369               	addwfc	(??_main+3)& (0+255),f,b
  2596  01182C  C168  F0D4         	movff	??_main+2,_check	;volatile
  2597  011830  C169  F0D5         	movff	??_main+3,_check+1	;volatile
  2598  011834                     L1:
  2599  011834  0100               	movlb	0	; () banked
  2600  011836  0E00               	movlw	0
  2601  011838  BFD5               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2602  01183A  0EFF               	movlw	-1
  2603  01183C  6FD6               	movwf	(_check+2)& (0+255),b	;volatile
  2604  01183E  6FD7               	movwf	(_check+3)& (0+255),b	;volatile
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;RemoteCan.c: 353: }
  2608                           ;RemoteCan.c: 354: if ((check >= 0)&&(check <= 180)) {
  2609  011840  0100               	movlb	0	; () banked
  2610  011842  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2611  011844  D012               	goto	l9487
  2612                           
  2613                           ; BSR set to: 0
  2614  011846  0100               	movlb	0	; () banked
  2615  011848  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2616  01184A  D00C               	goto	l9485
  2617  01184C  0100               	movlb	0	; () banked
  2618  01184E  51D7               	movf	(_check+3)& (0+255),w,b	;volatile
  2619  011850  0100               	movlb	0	; () banked
  2620  011852  11D6               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2621  011854  0100               	movlb	0	; () banked
  2622  011856  11D5               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2623  011858  E108               	bnz	l9487
  2624  01185A  0EB5               	movlw	181
  2625  01185C  0100               	movlb	0	; () banked
  2626  01185E  5DD4               	subwf	_check& (0+255),w,b	;volatile
  2627  011860  B0D8               	btfsc	status,0,c
  2628  011862  D003               	goto	l9487
  2629  011864                     l9485:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;RemoteCan.c: 355: data_steering[0] = check;
  2633  011864  C0D4  F13D         	movff	_check,_data_steering	;volatile
  2634                           
  2635                           ;RemoteCan.c: 356: } else {
  2636  011868  D019               	goto	l853
  2637  01186A                     l9487:
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;RemoteCan.c: 357: if (check > 180) {
  2641  01186A  0100               	movlb	0	; () banked
  2642  01186C  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2643  01186E  D00E               	goto	l9491
  2644  011870  0100               	movlb	0	; () banked
  2645  011872  51D7               	movf	(_check+3)& (0+255),w,b	;volatile
  2646  011874  0100               	movlb	0	; () banked
  2647  011876  11D6               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2648  011878  0100               	movlb	0	; () banked
  2649  01187A  11D5               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2650  01187C  E105               	bnz	u12810
  2651  01187E  0EB5               	movlw	181
  2652  011880  0100               	movlb	0	; () banked
  2653  011882  5DD4               	subwf	_check& (0+255),w,b	;volatile
  2654  011884  A0D8               	btfss	status,0,c
  2655  011886  D002               	goto	l9491
  2656  011888                     u12810:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;RemoteCan.c: 358: data_steering[0] = 180;
  2660  011888  0EB4               	movlw	180
  2661  01188A  D001               	goto	L2
  2662  01188C                     l9491:
  2663                           
  2664                           ;RemoteCan.c: 360: data_steering[0] = 0;
  2665  01188C  0E00               	movlw	0
  2666  01188E                     L2:
  2667  01188E  0101               	movlb	1	; () banked
  2668  011890  6F3D               	movwf	_data_steering& (0+255),b
  2669                           
  2670                           ; BSR set to: 1
  2671                           ;RemoteCan.c: 361: }
  2672                           ;RemoteCan.c: 362: }
  2673                           ;RemoteCan.c: 363: } else {
  2674                           
  2675                           ; BSR set to: 1
  2676  011892  D004               	goto	l853
  2677  011894                     l846:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;RemoteCan.c: 364: steering_correction_dir = 0;
  2681  011894  924C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;RemoteCan.c: 365: steering_correction = 0;
  2685  011896  0E00               	movlw	0
  2686  011898  0100               	movlb	0	; () banked
  2687  01189A  6FEB               	movwf	_steering_correction& (0+255),b	;volatile
  2688  01189C                     l853:
  2689                           
  2690                           ;RemoteCan.c: 366: }
  2691                           ;RemoteCan.c: 369: if ((switch_position != 0)&&(collision_risk == 0)) {
  2692  01189C  0100               	movlb	0	; () banked
  2693  01189E  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  2694  0118A0  A4D8               	btfss	status,2,c
  2695                           
  2696                           ; BSR set to: 0
  2697  0118A2  B24B               	btfsc	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2698  0118A4  D063               	goto	l9519
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;RemoteCan.c: 370: if (JoystickValues[1] > 132) {
  2702  0118A6  0E84               	movlw	132
  2703  0118A8  0100               	movlb	0	; () banked
  2704  0118AA  65E1               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2705  0118AC  D047               	goto	l9505
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;RemoteCan.c: 371: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2709  0118AE  C0D0  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2710  0118B2  C0D1  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2711  0118B6  C0D2  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2712  0118BA  C0D3  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2713  0118BE  0E7E               	movlw	126
  2714  0118C0  0101               	movlb	1	; () banked
  2715  0118C2  6F66               	movwf	??_main& (0+255),b
  2716  0118C4  0EFF               	movlw	255
  2717  0118C6  0101               	movlb	1	; () banked
  2718  0118C8  6F67               	movwf	(??_main+1)& (0+255),b
  2719  0118CA  0100               	movlb	0	; () banked
  2720  0118CC  51E1               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2721  0118CE  0101               	movlb	1	; () banked
  2722  0118D0  6F68               	movwf	(??_main+2)& (0+255),b
  2723  0118D2  6B69               	clrf	(??_main+3)& (0+255),b
  2724  0118D4  0101               	movlb	1	; () banked
  2725  0118D6  5166               	movf	??_main& (0+255),w,b
  2726  0118D8  0101               	movlb	1	; () banked
  2727  0118DA  2768               	addwf	(??_main+2)& (0+255),f,b
  2728  0118DC  0101               	movlb	1	; () banked
  2729  0118DE  5167               	movf	(??_main+1)& (0+255),w,b
  2730  0118E0  0101               	movlb	1	; () banked
  2731  0118E2  2369               	addwfc	(??_main+3)& (0+255),f,b
  2732  0118E4  C168  F070         	movff	??_main+2,___xxtofl@val
  2733  0118E8  C169  F071         	movff	??_main+3,___xxtofl@val+1
  2734  0118EC  0100               	movlb	0	; () banked
  2735  0118EE  0E00               	movlw	0
  2736  0118F0  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2737  0118F2  0EFF               	movlw	-1
  2738  0118F4  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  2739  0118F6  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  2740  0118F8  0E01               	movlw	1
  2741  0118FA  ECD9  F0A4         	call	___xxtofl
  2742  0118FE  C070  F07E         	movff	?___xxtofl,___flmul@b
  2743  011902  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2744  011906  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2745  01190A  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2746  01190E  EC21  F09C         	call	___flmul	;wreg free
  2747  011912  C07E  F0B8         	movff	?___flmul,___fltol@f1
  2748  011916  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  2749  01191A  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  2750  01191E  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  2751  011922  EC6C  F0AB         	call	___fltol	;wreg free
  2752  011926  C0B8  F0E6         	movff	?___fltol,_set_speed	;volatile
  2753  01192A  C0B9  F0E7         	movff	?___fltol+1,_set_speed+1	;volatile
  2754                           
  2755                           ;RemoteCan.c: 372: data_brake [0] = 3;
  2756  01192E  0E03               	movlw	3
  2757  011930  0101               	movlb	1	; () banked
  2758  011932  6F2D               	movwf	_data_brake& (0+255),b
  2759                           
  2760                           ; BSR set to: 1
  2761                           ;RemoteCan.c: 373: data_brake [1] = 1;
  2762  011934  0E01               	movlw	1
  2763  011936  0101               	movlb	1	; () banked
  2764  011938  6F2E               	movwf	(_data_brake+1)& (0+255),b
  2765                           
  2766                           ;RemoteCan.c: 374: } else {
  2767  01193A  D020               	goto	l9521
  2768  01193C                     l9505:
  2769                           
  2770                           ;RemoteCan.c: 375: set_speed = 0;
  2771  01193C  0E00               	movlw	0
  2772  01193E  0100               	movlb	0	; () banked
  2773  011940  6FE7               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2774  011942  0E00               	movlw	0
  2775  011944  6FE6               	movwf	_set_speed& (0+255),b	;volatile
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;RemoteCan.c: 376: if (JoystickValues[1] <= 65) {
  2779  011946  0E42               	movlw	66
  2780  011948  0100               	movlb	0	; () banked
  2781  01194A  61E1               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2782  01194C  D003               	goto	l9511
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;RemoteCan.c: 377: data_brake [0] = 0b00000010;
  2786  01194E  0E02               	movlw	2
  2787  011950  0101               	movlb	1	; () banked
  2788  011952  6F2D               	movwf	_data_brake& (0+255),b
  2789  011954                     l9511:
  2790                           
  2791                           ;RemoteCan.c: 378: }
  2792                           ;RemoteCan.c: 379: if (JoystickValues[1] <= 20) {
  2793  011954  0E15               	movlw	21
  2794  011956  0100               	movlb	0	; () banked
  2795  011958  61E1               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2796  01195A  D003               	goto	l9515
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;RemoteCan.c: 380: data_brake [0] = 0b00000001;
  2800  01195C  0E01               	movlw	1
  2801  01195E  0101               	movlb	1	; () banked
  2802  011960  6F2D               	movwf	_data_brake& (0+255),b
  2803  011962                     l9515:
  2804                           
  2805                           ;RemoteCan.c: 381: }
  2806                           ;RemoteCan.c: 382: if (JoystickValues[1] <= 5) {
  2807  011962  0E06               	movlw	6
  2808  011964  0100               	movlb	0	; () banked
  2809  011966  61E1               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2810  011968  D009               	goto	l9521
  2811  01196A  D005               	goto	L3
  2812  01196C                     l9519:
  2813                           
  2814                           ;RemoteCan.c: 387: set_speed = 0;
  2815  01196C  0E00               	movlw	0
  2816  01196E  0100               	movlb	0	; () banked
  2817  011970  6FE7               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2818  011972  0E00               	movlw	0
  2819  011974  6FE6               	movwf	_set_speed& (0+255),b	;volatile
  2820  011976                     L3:
  2821                           
  2822                           ;RemoteCan.c: 388: data_brake [0] = 0b00000000;
  2823  011976  0E00               	movlw	0
  2824  011978  0101               	movlb	1	; () banked
  2825  01197A  6F2D               	movwf	_data_brake& (0+255),b
  2826  01197C                     l9521:
  2827                           
  2828                           ;RemoteCan.c: 389: }
  2829                           ;RemoteCan.c: 391: if (newMessageCan == 1) {
  2830  01197C  A64B               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2831  01197E  D003               	goto	l9527
  2832                           
  2833                           ;RemoteCan.c: 392: CAN_Rx();
  2834  011980  EC58  F0AF         	call	_CAN_Rx	;wreg free
  2835                           
  2836                           ;RemoteCan.c: 393: newMessageCan = 0;
  2837  011984  964B               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2838  011986                     l9527:
  2839                           
  2840                           ;RemoteCan.c: 394: }
  2841                           ;RemoteCan.c: 396: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2842  011986  C0DC  F166         	movff	_pr_time_2,??_main	;volatile
  2843  01198A  C0DD  F167         	movff	_pr_time_2+1,??_main+1	;volatile
  2844  01198E  C0DE  F168         	movff	_pr_time_2+2,??_main+2	;volatile
  2845  011992  C0DF  F169         	movff	_pr_time_2+3,??_main+3	;volatile
  2846  011996  0101               	movlb	1	; () banked
  2847  011998  1F66               	comf	??_main& (0+255),f,b
  2848  01199A  1F67               	comf	(??_main+1)& (0+255),f,b
  2849  01199C  1F68               	comf	(??_main+2)& (0+255),f,b
  2850  01199E  1F69               	comf	(??_main+3)& (0+255),f,b
  2851  0119A0  2B66               	incf	??_main& (0+255),f,b
  2852  0119A2  0E00               	movlw	0
  2853  0119A4  2367               	addwfc	(??_main+1)& (0+255),f,b
  2854  0119A6  2368               	addwfc	(??_main+2)& (0+255),f,b
  2855  0119A8  2369               	addwfc	(??_main+3)& (0+255),f,b
  2856  0119AA  501C               	movf	_time_counter,w,c	;volatile
  2857  0119AC  0101               	movlb	1	; () banked
  2858  0119AE  2566               	addwf	??_main& (0+255),w,b
  2859  0119B0  0101               	movlb	1	; () banked
  2860  0119B2  6F6A               	movwf	(??_main+4)& (0+255),b
  2861  0119B4  501D               	movf	_time_counter+1,w,c	;volatile
  2862  0119B6  0101               	movlb	1	; () banked
  2863  0119B8  2167               	addwfc	(??_main+1)& (0+255),w,b
  2864  0119BA  0101               	movlb	1	; () banked
  2865  0119BC  6F6B               	movwf	(??_main+5)& (0+255),b
  2866  0119BE  501E               	movf	_time_counter+2,w,c	;volatile
  2867  0119C0  0101               	movlb	1	; () banked
  2868  0119C2  2168               	addwfc	(??_main+2)& (0+255),w,b
  2869  0119C4  0101               	movlb	1	; () banked
  2870  0119C6  6F6C               	movwf	(??_main+6)& (0+255),b
  2871  0119C8  501F               	movf	_time_counter+3,w,c	;volatile
  2872  0119CA  0101               	movlb	1	; () banked
  2873  0119CC  2169               	addwfc	(??_main+3)& (0+255),w,b
  2874  0119CE  0101               	movlb	1	; () banked
  2875  0119D0  6F6D               	movwf	(??_main+7)& (0+255),b
  2876  0119D2  0101               	movlb	1	; () banked
  2877  0119D4  516D               	movf	(??_main+7)& (0+255),w,b
  2878  0119D6  0101               	movlb	1	; () banked
  2879  0119D8  116C               	iorwf	(??_main+6)& (0+255),w,b
  2880  0119DA  0101               	movlb	1	; () banked
  2881  0119DC  116B               	iorwf	(??_main+5)& (0+255),w,b
  2882  0119DE  E105               	bnz	u12890
  2883  0119E0  0E02               	movlw	2
  2884  0119E2  0101               	movlb	1	; () banked
  2885  0119E4  5D6A               	subwf	(??_main+4)& (0+255),w,b
  2886  0119E6  A0D8               	btfss	status,0,c
  2887  0119E8  D004               	goto	l866
  2888  0119EA                     u12890:
  2889                           
  2890                           ; BSR set to: 1
  2891  0119EA  0E01               	movlw	1
  2892  0119EC  0100               	movlb	0	; () banked
  2893  0119EE  65E9               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  2894  0119F0  D002               	goto	l864
  2895  0119F2                     l866:
  2896  0119F2  A44A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2897  0119F4  D01B               	goto	l9539
  2898  0119F6                     l864:
  2899                           
  2900                           ;RemoteCan.c: 397: if (Can_Tx_Force == 1) {
  2901  0119F6  A44A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2902  0119F8  D00F               	goto	l9535
  2903                           
  2904                           ;RemoteCan.c: 398: dir = 1;
  2905  0119FA  0E01               	movlw	1
  2906  0119FC  0100               	movlb	0	; () banked
  2907  0119FE  6FE8               	movwf	_dir& (0+255),b	;volatile
  2908                           
  2909                           ;RemoteCan.c: 399: set_speed = 0;
  2910  011A00  0E00               	movlw	0
  2911  011A02  0100               	movlb	0	; () banked
  2912  011A04  6FE7               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2913  011A06  0E00               	movlw	0
  2914  011A08  6FE6               	movwf	_set_speed& (0+255),b	;volatile
  2915                           
  2916                           ;RemoteCan.c: 400: data_steering [0] = 90;
  2917  011A0A  0E5A               	movlw	90
  2918  011A0C  0101               	movlb	1	; () banked
  2919  011A0E  6F3D               	movwf	_data_steering& (0+255),b
  2920                           
  2921                           ;RemoteCan.c: 401: data_brake [0] = 0b00000000;
  2922  011A10  0E00               	movlw	0
  2923  011A12  0101               	movlb	1	; () banked
  2924  011A14  6F2D               	movwf	_data_brake& (0+255),b
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;RemoteCan.c: 402: Can_Tx_Force = 0;
  2928  011A16  944A               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2929  011A18                     l9535:
  2930                           
  2931                           ;RemoteCan.c: 403: }
  2932                           ;RemoteCan.c: 404: pr_time_2 = time_counter;
  2933  011A18  C01C  F0DC         	movff	_time_counter,_pr_time_2	;volatile
  2934  011A1C  C01D  F0DD         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2935  011A20  C01E  F0DE         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2936  011A24  C01F  F0DF         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2937                           
  2938                           ;RemoteCan.c: 405: CAN_Tx();
  2939  011A28  EC84  F0AD         	call	_CAN_Tx	;wreg free
  2940  011A2C                     l9539:
  2941                           
  2942                           ;RemoteCan.c: 406: }
  2943                           ;RemoteCan.c: 409: if (time_counter >= pr_time_6) {
  2944  011A2C  5018               	movf	_pr_time_6,w,c	;volatile
  2945  011A2E  5C1C               	subwf	_time_counter,w,c	;volatile
  2946  011A30  5019               	movf	_pr_time_6+1,w,c	;volatile
  2947  011A32  581D               	subwfb	_time_counter+1,w,c	;volatile
  2948  011A34  501A               	movf	_pr_time_6+2,w,c	;volatile
  2949  011A36  581E               	subwfb	_time_counter+2,w,c	;volatile
  2950  011A38  501B               	movf	_pr_time_6+3,w,c	;volatile
  2951  011A3A  581F               	subwfb	_time_counter+3,w,c	;volatile
  2952  011A3C  A0D8               	btfss	status,0,c
  2953  011A3E  D05B               	goto	l9567
  2954                           
  2955                           ;RemoteCan.c: 410: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2956  011A40  C010  F166         	movff	_pr_time_3,??_main	;volatile
  2957  011A44  C011  F167         	movff	_pr_time_3+1,??_main+1	;volatile
  2958  011A48  C012  F168         	movff	_pr_time_3+2,??_main+2	;volatile
  2959  011A4C  C013  F169         	movff	_pr_time_3+3,??_main+3	;volatile
  2960  011A50  0101               	movlb	1	; () banked
  2961  011A52  1F66               	comf	??_main& (0+255),f,b
  2962  011A54  1F67               	comf	(??_main+1)& (0+255),f,b
  2963  011A56  1F68               	comf	(??_main+2)& (0+255),f,b
  2964  011A58  1F69               	comf	(??_main+3)& (0+255),f,b
  2965  011A5A  2B66               	incf	??_main& (0+255),f,b
  2966  011A5C  0E00               	movlw	0
  2967  011A5E  2367               	addwfc	(??_main+1)& (0+255),f,b
  2968  011A60  2368               	addwfc	(??_main+2)& (0+255),f,b
  2969  011A62  2369               	addwfc	(??_main+3)& (0+255),f,b
  2970  011A64  501C               	movf	_time_counter,w,c	;volatile
  2971  011A66  0101               	movlb	1	; () banked
  2972  011A68  2566               	addwf	??_main& (0+255),w,b
  2973  011A6A  0101               	movlb	1	; () banked
  2974  011A6C  6F6A               	movwf	(??_main+4)& (0+255),b
  2975  011A6E  501D               	movf	_time_counter+1,w,c	;volatile
  2976  011A70  0101               	movlb	1	; () banked
  2977  011A72  2167               	addwfc	(??_main+1)& (0+255),w,b
  2978  011A74  0101               	movlb	1	; () banked
  2979  011A76  6F6B               	movwf	(??_main+5)& (0+255),b
  2980  011A78  501E               	movf	_time_counter+2,w,c	;volatile
  2981  011A7A  0101               	movlb	1	; () banked
  2982  011A7C  2168               	addwfc	(??_main+2)& (0+255),w,b
  2983  011A7E  0101               	movlb	1	; () banked
  2984  011A80  6F6C               	movwf	(??_main+6)& (0+255),b
  2985  011A82  501F               	movf	_time_counter+3,w,c	;volatile
  2986  011A84  0101               	movlb	1	; () banked
  2987  011A86  2169               	addwfc	(??_main+3)& (0+255),w,b
  2988  011A88  0101               	movlb	1	; () banked
  2989  011A8A  6F6D               	movwf	(??_main+7)& (0+255),b
  2990  011A8C  0101               	movlb	1	; () banked
  2991  011A8E  516D               	movf	(??_main+7)& (0+255),w,b
  2992  011A90  0101               	movlb	1	; () banked
  2993  011A92  116C               	iorwf	(??_main+6)& (0+255),w,b
  2994  011A94  0101               	movlb	1	; () banked
  2995  011A96  116B               	iorwf	(??_main+5)& (0+255),w,b
  2996  011A98  E105               	bnz	u12940
  2997  011A9A  0E0A               	movlw	10
  2998  011A9C  0101               	movlb	1	; () banked
  2999  011A9E  5D6A               	subwf	(??_main+4)& (0+255),w,b
  3000  011AA0  A0D8               	btfss	status,0,c
  3001  011AA2  D492               	goto	l9349
  3002  011AA4                     u12940:
  3003                           
  3004                           ; BSR set to: 1
  3005                           ;RemoteCan.c: 411: pr_time_3 = time_counter;
  3006  011AA4  C01C  F010         	movff	_time_counter,_pr_time_3	;volatile
  3007  011AA8  C01D  F011         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3008  011AAC  C01E  F012         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3009  011AB0  C01F  F013         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3010                           
  3011                           ;RemoteCan.c: 412: if (parking_message_E == 1) {
  3012  011AB4  AA4B               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3013  011AB6  D01C               	goto	l9565
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;RemoteCan.c: 413: display_refresh = 1;
  3017  011AB8  844B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3018                           
  3019                           ; BSR set to: 1
  3020                           ;RemoteCan.c: 414: if (parking_message_ID == 0) {
  3021  011ABA  0100               	movlb	0	; () banked
  3022  011ABC  51E9               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3023  011ABE  A4D8               	btfss	status,2,c
  3024  011AC0  D004               	goto	l9553
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;RemoteCan.c: 415: LCD_Gap();
  3028  011AC2  ECF5  F0AF         	call	_LCD_Gap	;wreg free
  3029                           
  3030                           ;RemoteCan.c: 416: parking_message_ID++;
  3031  011AC6  0100               	movlb	0	; () banked
  3032  011AC8  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3033  011ACA                     l9553:
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;RemoteCan.c: 417: }
  3037                           ;RemoteCan.c: 418: if (parking_message_ID == 2) {
  3038  011ACA  0E02               	movlw	2
  3039  011ACC  0100               	movlb	0	; () banked
  3040  011ACE  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3041  011AD0  A4D8               	btfss	status,2,c
  3042  011AD2  D004               	goto	l9559
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;RemoteCan.c: 419: LCD_Park();
  3046  011AD4  ECC3  F0AF         	call	_LCD_Park	;wreg free
  3047                           
  3048                           ;RemoteCan.c: 420: parking_message_ID++;
  3049  011AD8  0100               	movlb	0	; () banked
  3050  011ADA  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3051  011ADC                     l9559:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;RemoteCan.c: 421: }
  3055                           ;RemoteCan.c: 422: if (parking_message_ID == 4) {
  3056  011ADC  0E04               	movlw	4
  3057  011ADE  0100               	movlb	0	; () banked
  3058  011AE0  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3059  011AE2  A4D8               	btfss	status,2,c
  3060  011AE4  D471               	goto	l9349
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;RemoteCan.c: 423: LCD_Parking();
  3064  011AE6  EC91  F0AF         	call	_LCD_Parking	;wreg free
  3065                           
  3066                           ;RemoteCan.c: 424: parking_message_ID++;
  3067  011AEA  0100               	movlb	0	; () banked
  3068  011AEC  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;RemoteCan.c: 425: }
  3072                           ;RemoteCan.c: 426: } else {
  3073  011AEE  D46C               	goto	l9349
  3074  011AF0                     l9565:
  3075                           
  3076                           ;RemoteCan.c: 427: LCD_Handler();
  3077  011AF0  EC83  F0A7         	call	_LCD_Handler	;wreg free
  3078                           
  3079                           ;RemoteCan.c: 428: }
  3080                           ;RemoteCan.c: 429: }
  3081                           ;RemoteCan.c: 430: } else {
  3082  011AF4  D469               	goto	l9349
  3083  011AF6                     l9567:
  3084                           
  3085                           ;RemoteCan.c: 431: if (parking_message_ID == 6) {
  3086  011AF6  0E06               	movlw	6
  3087  011AF8  0100               	movlb	0	; () banked
  3088  011AFA  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3089  011AFC  A4D8               	btfss	status,2,c
  3090  011AFE  D464               	goto	l9349
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;RemoteCan.c: 432: if (parking_error == 1) {
  3094  011B00  A84B               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3095  011B02  D023               	goto	l9581
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;RemoteCan.c: 433: parking_error = 0;
  3099  011B04  984B               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;RemoteCan.c: 434: LCD_Error();
  3103  011B06  EC27  F0B0         	call	_LCD_Error	;wreg free
  3104  011B0A                     l9575:
  3105  011B0A  EC5C  F0B2         	call	_CANisTxReady	;wreg free
  3106  011B0E  06E8               	decf	wreg,f,c
  3107  011B10  A4D8               	btfss	status,2,c
  3108  011B12  D7FB               	goto	l9575
  3109                           
  3110                           ;RemoteCan.c: 436: data_brake [0] = 0b00000000;
  3111  011B14  0E00               	movlw	0
  3112  011B16  0101               	movlb	1	; () banked
  3113  011B18  6F2D               	movwf	_data_brake& (0+255),b
  3114                           
  3115                           ; BSR set to: 1
  3116                           ;RemoteCan.c: 437: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3117  011B1A  0E06               	movlw	6
  3118  011B1C  0100               	movlb	0	; () banked
  3119  011B1E  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  3120  011B20  0E00               	movlw	0
  3121  011B22  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3122  011B24  0E00               	movlw	0
  3123  011B26  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3124  011B28  0E00               	movlw	0
  3125  011B2A  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3126  011B2C  0E2D               	movlw	low _data_brake
  3127  011B2E  0100               	movlb	0	; () banked
  3128  011B30  6F74               	movwf	CANsendMessage@data& (0+255),b
  3129  011B32  0E01               	movlw	high _data_brake
  3130  011B34  0100               	movlb	0	; () banked
  3131  011B36  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  3132  011B38  0E08               	movlw	8
  3133  011B3A  0100               	movlb	0	; () banked
  3134  011B3C  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  3135  011B3E  0EBC               	movlw	188
  3136  011B40  0100               	movlb	0	; () banked
  3137  011B42  6F77               	movwf	CANsendMessage@flags& (0+255),b
  3138  011B44  ECAC  F08D         	call	_CANsendMessage	;wreg free
  3139                           
  3140                           ;RemoteCan.c: 438: } else {
  3141  011B48  D002               	goto	l9583
  3142  011B4A                     l9581:
  3143                           
  3144                           ;RemoteCan.c: 439: LCD_End();
  3145  011B4A  EC59  F0B0         	call	_LCD_End	;wreg free
  3146  011B4E                     l9583:
  3147                           
  3148                           ;RemoteCan.c: 440: }
  3149                           ;RemoteCan.c: 441: parking_message_ID = 0;
  3150  011B4E  0E00               	movlw	0
  3151  011B50  0100               	movlb	0	; () banked
  3152  011B52  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;RemoteCan.c: 442: parking_message_E = 0;
  3156  011B54  9A4B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3157                           
  3158                           ; BSR set to: 0
  3159                           
  3160                           ; BSR set to: 0
  3161                           
  3162                           ; BSR set to: 0
  3163  011B56  D438               	goto	l9349
  3164  011B58                     __end_of_main:
  3165                           	opt stack 0
  3166                           tblptru	equ	0xFF8
  3167                           tblptrh	equ	0xFF7
  3168                           tblptrl	equ	0xFF6
  3169                           tablat	equ	0xFF5
  3170                           postinc0	equ	0xFEE
  3171                           wreg	equ	0xFE8
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _board_initialization *****************
  3175 ;; Defined at:
  3176 ;;		line 662 in file "RemoteCan.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    9
  3197 ;; This function calls:
  3198 ;;		_CANInitialize
  3199 ;;		_LCD_clear
  3200 ;;		_LCD_goto_line
  3201 ;;		_LCD_initialize
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text1
  3208  015BC2                     __ptext1:
  3209                           	opt stack 0
  3210  015BC2                     _board_initialization:
  3211                           	opt stack 21
  3212                           
  3213                           ;RemoteCan.c: 664: LATA = 0x00;
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;incstack = 0
  3217  015BC2  0E00               	movlw	0
  3218  015BC4  6E89               	movwf	3977,c	;volatile
  3219                           
  3220                           ;RemoteCan.c: 665: TRISA = 0b00011111;
  3221  015BC6  0E1F               	movlw	31
  3222  015BC8  6E92               	movwf	3986,c	;volatile
  3223                           
  3224                           ;RemoteCan.c: 666: LATB = 0x00;
  3225  015BCA  0E00               	movlw	0
  3226  015BCC  6E8A               	movwf	3978,c	;volatile
  3227                           
  3228                           ;RemoteCan.c: 667: TRISB = 0b11111011;
  3229  015BCE  0EFB               	movlw	251
  3230  015BD0  6E93               	movwf	3987,c	;volatile
  3231                           
  3232                           ;RemoteCan.c: 668: LATC = 0x00;
  3233  015BD2  0E00               	movlw	0
  3234  015BD4  6E8B               	movwf	3979,c	;volatile
  3235                           
  3236                           ;RemoteCan.c: 669: TRISC = 0b11110000;
  3237  015BD6  0EF0               	movlw	240
  3238  015BD8  6E94               	movwf	3988,c	;volatile
  3239                           
  3240                           ;RemoteCan.c: 670: LATD = 0x00;
  3241  015BDA  0E00               	movlw	0
  3242  015BDC  6E8C               	movwf	3980,c	;volatile
  3243                           
  3244                           ;RemoteCan.c: 671: TRISD = 0x00;
  3245  015BDE  0E00               	movlw	0
  3246  015BE0  6E95               	movwf	3989,c	;volatile
  3247                           
  3248                           ;RemoteCan.c: 672: LATE = 0x00;
  3249  015BE2  0E00               	movlw	0
  3250  015BE4  6E8D               	movwf	3981,c	;volatile
  3251                           
  3252                           ;RemoteCan.c: 673: TRISE = 0x00;
  3253  015BE6  0E00               	movlw	0
  3254  015BE8  6E96               	movwf	3990,c	;volatile
  3255                           
  3256                           ;RemoteCan.c: 675: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3257  015BEA  0E06               	movlw	6
  3258  015BEC  0100               	movlb	0	; () banked
  3259  015BEE  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3260  015BF0  0E05               	movlw	5
  3261  015BF2  0100               	movlb	0	; () banked
  3262  015BF4  6F7F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3263  015BF6  0E01               	movlw	1
  3264  015BF8  0100               	movlb	0	; () banked
  3265  015BFA  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3266  015BFC  0E03               	movlw	3
  3267  015BFE  0100               	movlb	0	; () banked
  3268  015C00  6F81               	movwf	CANInitialize@BRP& (0+255),b
  3269  015C02  0E9D               	movlw	157
  3270  015C04  0100               	movlb	0	; () banked
  3271  015C06  6F82               	movwf	CANInitialize@flags& (0+255),b
  3272  015C08  0E04               	movlw	4
  3273  015C0A  ECC0  F0A5         	call	_CANInitialize
  3274                           
  3275                           ;RemoteCan.c: 679: PIR2bits.TMR3IF = 0;
  3276  015C0E  92A1               	bcf	4001,1,c	;volatile
  3277                           
  3278                           ;RemoteCan.c: 680: PIR3bits.RXB1IF = 0;
  3279  015C10  92A4               	bcf	4004,1,c	;volatile
  3280                           
  3281                           ;RemoteCan.c: 681: PIR3bits.RXB0IF = 0;
  3282  015C12  90A4               	bcf	4004,0,c	;volatile
  3283                           
  3284                           ;RemoteCan.c: 684: RCONbits.IPEN = 1;
  3285  015C14  8ED0               	bsf	4048,7,c	;volatile
  3286                           
  3287                           ;RemoteCan.c: 685: IPR3bits.RXB1IP = 1;
  3288  015C16  82A5               	bsf	4005,1,c	;volatile
  3289                           
  3290                           ;RemoteCan.c: 686: IPR3bits.RXB0IP = 1;
  3291  015C18  80A5               	bsf	4005,0,c	;volatile
  3292                           
  3293                           ;RemoteCan.c: 687: IPR2bits.TMR3IP = 0;
  3294  015C1A  92A2               	bcf	4002,1,c	;volatile
  3295                           
  3296                           ;RemoteCan.c: 690: ADCON1 = 0b00001101;
  3297  015C1C  0E0D               	movlw	13
  3298  015C1E  6EC1               	movwf	4033,c	;volatile
  3299                           
  3300                           ;RemoteCan.c: 691: ADCON0bits.CHS2 = 0;
  3301  015C20  98C2               	bcf	4034,4,c	;volatile
  3302                           
  3303                           ;RemoteCan.c: 692: ADCON0bits.CHS1 = 0;
  3304  015C22  96C2               	bcf	4034,3,c	;volatile
  3305                           
  3306                           ;RemoteCan.c: 693: ADCON0bits.CHS0 = 0;
  3307  015C24  94C2               	bcf	4034,2,c	;volatile
  3308                           
  3309                           ;RemoteCan.c: 694: ADCON2bits.ACQT2 = 1;
  3310  015C26  8AC0               	bsf	4032,5,c	;volatile
  3311                           
  3312                           ;RemoteCan.c: 695: ADCON2bits.ACQT1 = 1;
  3313  015C28  88C0               	bsf	4032,4,c	;volatile
  3314                           
  3315                           ;RemoteCan.c: 696: ADCON2bits.ACQT0 = 0;
  3316  015C2A  96C0               	bcf	4032,3,c	;volatile
  3317                           
  3318                           ;RemoteCan.c: 697: ADCON2bits.ADCS2 = 1;
  3319  015C2C  84C0               	bsf	4032,2,c	;volatile
  3320                           
  3321                           ;RemoteCan.c: 698: ADCON2bits.ADCS1 = 0;
  3322  015C2E  92C0               	bcf	4032,1,c	;volatile
  3323                           
  3324                           ;RemoteCan.c: 699: ADCON2bits.ADCS0 = 1;
  3325  015C30  80C0               	bsf	4032,0,c	;volatile
  3326                           
  3327                           ;RemoteCan.c: 700: ADCON2bits.ADFM = 0;
  3328  015C32  9EC0               	bcf	4032,7,c	;volatile
  3329                           
  3330                           ;RemoteCan.c: 701: ADCON0bits.ADON = 1;
  3331  015C34  80C2               	bsf	4034,0,c	;volatile
  3332                           
  3333                           ;RemoteCan.c: 704: LCD_initialize(16);
  3334  015C36  0E10               	movlw	16
  3335  015C38  ECB5  F0AA         	call	_LCD_initialize
  3336                           
  3337                           ;RemoteCan.c: 706: LCD_clear();
  3338  015C3C  EC1B  F0B2         	call	_LCD_clear	;wreg free
  3339                           
  3340                           ;RemoteCan.c: 707: LCD_goto_line(1);
  3341  015C40  0E01               	movlw	1
  3342  015C42  ECF2  F0AB         	call	_LCD_goto_line
  3343                           
  3344                           ;RemoteCan.c: 711: PORTDbits.RD2 = 0;
  3345  015C46  9483               	bcf	3971,2,c	;volatile
  3346                           
  3347                           ;RemoteCan.c: 712: PORTDbits.RD3 = 0;
  3348  015C48  9683               	bcf	3971,3,c	;volatile
  3349                           
  3350                           ;RemoteCan.c: 715: TMR3H = 0x63;
  3351  015C4A  0E63               	movlw	99
  3352  015C4C  6EB3               	movwf	4019,c	;volatile
  3353                           
  3354                           ;RemoteCan.c: 716: TMR3L = 0xC0;
  3355  015C4E  0EC0               	movlw	192
  3356  015C50  6EB2               	movwf	4018,c	;volatile
  3357                           
  3358                           ;RemoteCan.c: 719: PIE3bits.RXB1IE = 1;
  3359  015C52  82A3               	bsf	4003,1,c	;volatile
  3360                           
  3361                           ;RemoteCan.c: 720: PIE3bits.RXB0IE = 1;
  3362  015C54  80A3               	bsf	4003,0,c	;volatile
  3363                           
  3364                           ;RemoteCan.c: 721: PIE2bits.TMR3IE = 1;
  3365  015C56  82A0               	bsf	4000,1,c	;volatile
  3366                           
  3367                           ;RemoteCan.c: 724: T3CON = 0x01;
  3368  015C58  0E01               	movlw	1
  3369  015C5A  6EB1               	movwf	4017,c	;volatile
  3370                           
  3371                           ;RemoteCan.c: 725: LCD_clear();
  3372  015C5C  EC1B  F0B2         	call	_LCD_clear	;wreg free
  3373                           
  3374                           ;RemoteCan.c: 726: INTCONbits.GIEH = 1;
  3375  015C60  8EF2               	bsf	intcon,7,c	;volatile
  3376                           
  3377                           ;RemoteCan.c: 727: INTCONbits.GIEL = 1;
  3378  015C62  8CF2               	bsf	intcon,6,c	;volatile
  3379  015C64  0012               	return		;funcret
  3380  015C66                     __end_of_board_initialization:
  3381                           	opt stack 0
  3382                           tblptru	equ	0xFF8
  3383                           tblptrh	equ	0xFF7
  3384                           tblptrl	equ	0xFF6
  3385                           tablat	equ	0xFF5
  3386                           intcon	equ	0xFF2
  3387                           postinc0	equ	0xFEE
  3388                           wreg	equ	0xFE8
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _CANInitialize *****************
  3392 ;; Defined at:
  3393 ;;		line 218 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  propSeg         1    wreg     unsigned char 
  3396 ;;  phaseSeg1       1   30[BANK0 ] unsigned char 
  3397 ;;  phaseSeg2       1   31[BANK0 ] unsigned char 
  3398 ;;  SJW             1   32[BANK0 ] unsigned char 
  3399 ;;  BRP             1   33[BANK0 ] unsigned char 
  3400 ;;  flags           1   34[BANK0 ] enum E16887
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  propSeg         1   39[BANK0 ] unsigned char 
  3403 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3404 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;		None               void
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3414 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;Total ram usage:       12 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    4
  3421 ;; This function calls:
  3422 ;;		_CANOperationMode
  3423 ;;		_CANSetFilter
  3424 ;;		_CANSetMask
  3425 ;; This function is called by:
  3426 ;;		_board_initialization
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text2
  3431  014B80                     __ptext2:
  3432                           	opt stack 0
  3433  014B80                     _CANInitialize:
  3434                           	opt stack 25
  3435                           
  3436                           ;incstack = 0
  3437                           ;CANInitialize@propSeg stored from wreg
  3438  014B80  0100               	movlb	0	; () banked
  3439  014B82  6F87               	movwf	CANInitialize@propSeg& (0+255),b
  3440                           
  3441                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3442                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3443                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3444  014B84  0E80               	movlw	128
  3445  014B86  ECC6  F0B2         	call	_CANOperationMode
  3446                           
  3447                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3448  014B8A  0E00               	movlw	0
  3449  014B8C  6E70               	movwf	3952,c	;volatile
  3450                           
  3451                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3452  014B8E  0E00               	movlw	0
  3453  014B90  6E71               	movwf	3953,c	;volatile
  3454                           
  3455                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3456  014B92  0E00               	movlw	0
  3457  014B94  6E72               	movwf	3954,c	;volatile
  3458                           
  3459                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3460  014B96  0100               	movlb	0	; () banked
  3461  014B98  4180               	rrncf	CANInitialize@SJW& (0+255),w,b
  3462  014B9A  42E8               	rrncf	wreg,f,c
  3463  014B9C  0BC0               	andlw	192
  3464  014B9E  0100               	movlb	0	; () banked
  3465  014BA0  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3469  014BA2  0100               	movlb	0	; () banked
  3470  014BA4  5180               	movf	CANInitialize@SJW& (0+255),w,b
  3471  014BA6  1270               	iorwf	3952,f,c	;volatile
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3475  014BA8  0100               	movlb	0	; () banked
  3476  014BAA  5181               	movf	CANInitialize@BRP& (0+255),w,b
  3477  014BAC  1270               	iorwf	3952,f,c	;volatile
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3481  014BAE  0100               	movlb	0	; () banked
  3482  014BB0  5187               	movf	CANInitialize@propSeg& (0+255),w,b
  3483  014BB2  1271               	iorwf	3953,f,c	;volatile
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3487  014BB4  0100               	movlb	0	; () banked
  3488  014BB6  397E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3489  014BB8  42E8               	rrncf	wreg,f,c
  3490  014BBA  0BF8               	andlw	248
  3491  014BBC  0100               	movlb	0	; () banked
  3492  014BBE  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3496  014BC0  0100               	movlb	0	; () banked
  3497  014BC2  517E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3498  014BC4  1271               	iorwf	3953,f,c	;volatile
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3502  014BC6  0100               	movlb	0	; () banked
  3503  014BC8  A582               	btfss	CANInitialize@flags& (0+255),2,b
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3507  014BCA  8C71               	bsf	3953,6,c	;volatile
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3511  014BCC  0100               	movlb	0	; () banked
  3512  014BCE  B182               	btfsc	CANInitialize@flags& (0+255),0,b
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3516  014BD0  8E71               	bsf	3953,7,c	;volatile
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3520                           
  3521                           ; BSR set to: 0
  3522  014BD2  0100               	movlb	0	; () banked
  3523  014BD4  517F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3524  014BD6  1272               	iorwf	3954,f,c	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3528  014BD8  0100               	movlb	0	; () banked
  3529  014BDA  B382               	btfsc	CANInitialize@flags& (0+255),1,b
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3533  014BDC  8C72               	bsf	3954,6,c	;volatile
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3537                           
  3538                           ; BSR set to: 0
  3539  014BDE  0100               	movlb	0	; () banked
  3540  014BE0  5182               	movf	CANInitialize@flags& (0+255),w,b
  3541  014BE2  0B60               	andlw	96
  3542  014BE4  6E60               	movwf	3936,c	;volatile
  3543                           
  3544                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3545  014BE6  0100               	movlb	0	; () banked
  3546  014BE8  5182               	movf	CANInitialize@flags& (0+255),w,b
  3547  014BEA  0B10               	andlw	16
  3548  014BEC  0AFF               	xorlw	255
  3549  014BEE  B4D8               	btfsc	status,2,c
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3553  014BF0  8460               	bsf	3936,2,c	;volatile
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3557  014BF2  CF60 FF50          	movff	3936,3920	;volatile
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3561  014BF6  0E00               	movlw	0
  3562  014BF8  0100               	movlb	0	; () banked
  3563  014BFA  6F70               	movwf	CANSetMask@mask& (0+255),b
  3564  014BFC  0E00               	movlw	0
  3565  014BFE  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3566  014C00  0E00               	movlw	0
  3567  014C02  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3568  014C04  0E00               	movlw	0
  3569  014C06  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3570  014C08  0EF7               	movlw	247
  3571  014C0A  0100               	movlb	0	; () banked
  3572  014C0C  6F74               	movwf	CANSetMask@type& (0+255),b
  3573  014C0E  0E01               	movlw	1
  3574  014C10  EC54  F0A0         	call	_CANSetMask
  3575                           
  3576                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3577  014C14  0E00               	movlw	0
  3578  014C16  0100               	movlb	0	; () banked
  3579  014C18  6F70               	movwf	CANSetMask@mask& (0+255),b
  3580  014C1A  0E00               	movlw	0
  3581  014C1C  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3582  014C1E  0E00               	movlw	0
  3583  014C20  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3584  014C22  0E00               	movlw	0
  3585  014C24  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3586  014C26  0EF7               	movlw	247
  3587  014C28  0100               	movlb	0	; () banked
  3588  014C2A  6F74               	movwf	CANSetMask@type& (0+255),b
  3589  014C2C  0E02               	movlw	2
  3590  014C2E  EC54  F0A0         	call	_CANSetMask
  3591                           
  3592                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3593  014C32  D00F               	goto	l6223
  3594  014C34                     l6217:
  3595                           
  3596                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3597  014C34  0EF7               	movlw	247
  3598  014C36  0100               	movlb	0	; () banked
  3599  014C38  6F88               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3600  014C3A  D007               	goto	l6219
  3601  014C3C                     l376:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3605  014C3C  0100               	movlb	0	; () banked
  3606  014C3E  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3607                           
  3608                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3609  014C40  0100               	movlb	0	; () banked
  3610  014C42  6989               	setf	CANInitialize@FilterConfig2& (0+255),b
  3611                           
  3612                           ;inc\CANlib.h: 273: break;
  3613  014C44  D028               	goto	l6225
  3614  014C46                     l377:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3618  014C46  0100               	movlb	0	; () banked
  3619  014C48  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3620  014C4A                     l6219:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3624  014C4A  0EF7               	movlw	247
  3625  014C4C  0100               	movlb	0	; () banked
  3626  014C4E  6F89               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;inc\CANlib.h: 278: }
  3630                           
  3631                           ;inc\CANlib.h: 277: break;
  3632  014C50  D022               	goto	l6225
  3633  014C52                     l6223:
  3634  014C52  0E9F               	movlw	159
  3635  014C54  0100               	movlb	0	; () banked
  3636  014C56  6F83               	movwf	??_CANInitialize& (0+255),b
  3637  014C58  0EFF               	movlw	255
  3638  014C5A  0100               	movlb	0	; () banked
  3639  014C5C  6F84               	movwf	(??_CANInitialize+1)& (0+255),b
  3640  014C5E  0100               	movlb	0	; () banked
  3641  014C60  5182               	movf	CANInitialize@flags& (0+255),w,b
  3642  014C62  0B60               	andlw	96
  3643  014C64  0100               	movlb	0	; () banked
  3644  014C66  6F85               	movwf	(??_CANInitialize+2)& (0+255),b
  3645  014C68  6B86               	clrf	(??_CANInitialize+3)& (0+255),b
  3646  014C6A  0100               	movlb	0	; () banked
  3647  014C6C  5183               	movf	??_CANInitialize& (0+255),w,b
  3648  014C6E  0100               	movlb	0	; () banked
  3649  014C70  1385               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3650  014C72  0100               	movlb	0	; () banked
  3651  014C74  5184               	movf	(??_CANInitialize+1)& (0+255),w,b
  3652  014C76  0100               	movlb	0	; () banked
  3653  014C78  1386               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3654                           
  3655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3656                           ; Switch size 1, requested type "space"
  3657                           ; Number of cases is 1, Range of values is 0 to 0
  3658                           ; switch strategies available:
  3659                           ; Name         Instructions Cycles
  3660                           ; simple_byte            4     3 (average)
  3661                           ;	Chosen strategy is simple_byte
  3662  014C7A  0100               	movlb	0	; () banked
  3663  014C7C  5186               	movf	(??_CANInitialize+3)& (0+255),w,b
  3664  014C7E  0A00               	xorlw	0	; case 0
  3665  014C80  A4D8               	btfss	status,2,c
  3666  014C82  D7E1               	goto	l377
  3667                           
  3668                           ; BSR set to: 0
  3669                           ; Switch size 1, requested type "space"
  3670                           ; Number of cases is 2, Range of values is 191 to 223
  3671                           ; switch strategies available:
  3672                           ; Name         Instructions Cycles
  3673                           ; simple_byte            7     4 (average)
  3674                           ;	Chosen strategy is simple_byte
  3675  014C84  0100               	movlb	0	; () banked
  3676  014C86  5185               	movf	(??_CANInitialize+2)& (0+255),w,b
  3677  014C88  0ABF               	xorlw	191	; case 191
  3678  014C8A  B4D8               	btfsc	status,2,c
  3679  014C8C  D7D7               	goto	l376
  3680  014C8E  0A60               	xorlw	96	; case 223
  3681  014C90  B4D8               	btfsc	status,2,c
  3682  014C92  D7D0               	goto	l6217
  3683  014C94  D7D8               	goto	l377
  3684  014C96                     l6225:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3688  014C96  0E00               	movlw	0
  3689  014C98  0100               	movlb	0	; () banked
  3690  014C9A  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3691  014C9C  0E00               	movlw	0
  3692  014C9E  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3693  014CA0  0E00               	movlw	0
  3694  014CA2  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3695  014CA4  0E00               	movlw	0
  3696  014CA6  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3697  014CA8  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3698  014CAC  0E00               	movlw	0
  3699  014CAE  EC00  F080         	call	_CANSetFilter
  3700                           
  3701                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3702  014CB2  0E00               	movlw	0
  3703  014CB4  0100               	movlb	0	; () banked
  3704  014CB6  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3705  014CB8  0E00               	movlw	0
  3706  014CBA  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3707  014CBC  0E00               	movlw	0
  3708  014CBE  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3709  014CC0  0E00               	movlw	0
  3710  014CC2  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3711  014CC4  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3712  014CC8  0E01               	movlw	1
  3713  014CCA  EC00  F080         	call	_CANSetFilter
  3714                           
  3715                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3716  014CCE  0E00               	movlw	0
  3717  014CD0  0100               	movlb	0	; () banked
  3718  014CD2  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3719  014CD4  0E00               	movlw	0
  3720  014CD6  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3721  014CD8  0E00               	movlw	0
  3722  014CDA  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3723  014CDC  0E00               	movlw	0
  3724  014CDE  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3725  014CE0  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3726  014CE4  0E02               	movlw	2
  3727  014CE6  EC00  F080         	call	_CANSetFilter
  3728                           
  3729                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3730  014CEA  0E00               	movlw	0
  3731  014CEC  0100               	movlb	0	; () banked
  3732  014CEE  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3733  014CF0  0E00               	movlw	0
  3734  014CF2  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3735  014CF4  0E00               	movlw	0
  3736  014CF6  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3737  014CF8  0E00               	movlw	0
  3738  014CFA  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3739  014CFC  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3740  014D00  0E03               	movlw	3
  3741  014D02  EC00  F080         	call	_CANSetFilter
  3742                           
  3743                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3744  014D06  0E00               	movlw	0
  3745  014D08  0100               	movlb	0	; () banked
  3746  014D0A  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3747  014D0C  0E00               	movlw	0
  3748  014D0E  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3749  014D10  0E00               	movlw	0
  3750  014D12  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3751  014D14  0E00               	movlw	0
  3752  014D16  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3753  014D18  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3754  014D1C  0E04               	movlw	4
  3755  014D1E  EC00  F080         	call	_CANSetFilter
  3756                           
  3757                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3758  014D22  0E00               	movlw	0
  3759  014D24  0100               	movlb	0	; () banked
  3760  014D26  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3761  014D28  0E00               	movlw	0
  3762  014D2A  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3763  014D2C  0E00               	movlw	0
  3764  014D2E  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3765  014D30  0E00               	movlw	0
  3766  014D32  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3767  014D34  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3768  014D38  0E05               	movlw	5
  3769  014D3A  EC00  F080         	call	_CANSetFilter
  3770                           
  3771                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3772  014D3E  0E00               	movlw	0
  3773  014D40  ECC6  F0B2         	call	_CANOperationMode
  3774  014D44  0012               	return		;funcret
  3775  014D46                     __end_of_CANInitialize:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           intcon	equ	0xFF2
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _CANSetMask *****************
  3787 ;; Defined at:
  3788 ;;		line 640 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  numBuffer       1    wreg     enum E16921
  3791 ;;  mask            4   16[BANK0 ] unsigned long 
  3792 ;;  type            1   20[BANK0 ] enum E16887
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  numBuffer       1   25[BANK0 ] enum E16921
  3795 ;;  tamp            4   26[BANK0 ] unsigned long 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;		None               void
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3805 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;Total ram usage:       14 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    3
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_CANInitialize
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text3
  3820  0140A8                     __ptext3:
  3821                           	opt stack 0
  3822  0140A8                     _CANSetMask:
  3823                           	opt stack 25
  3824                           
  3825                           ;incstack = 0
  3826                           ;CANSetMask@numBuffer stored from wreg
  3827  0140A8  0100               	movlb	0	; () banked
  3828  0140AA  6F79               	movwf	CANSetMask@numBuffer& (0+255),b
  3829                           
  3830                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3831  0140AC  0100               	movlb	0	; () banked
  3832  0140AE  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3833  0140B0  A4D8               	btfss	status,2,c
  3834  0140B2  D056               	goto	l5393
  3835                           
  3836                           ; BSR set to: 0
  3837  0140B4  0100               	movlb	0	; () banked
  3838  0140B6  2974               	incf	CANSetMask@type& (0+255),w,b
  3839  0140B8  A4D8               	btfss	status,2,c
  3840  0140BA  D052               	goto	l5393
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 644: {
  3844                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3845  0140BC  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3846  0140C0  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3847  0140C4  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3848  0140C8  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3849  0140CC  0E04               	movlw	4
  3850  0140CE  D006               	goto	u6120
  3851  0140D0                     u6125:
  3852  0140D0  0100               	movlb	0	; () banked
  3853  0140D2  90D8               	bcf	status,0,c
  3854  0140D4  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3855  0140D6  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3856  0140D8  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3857  0140DA  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3858  0140DC                     u6120:
  3859  0140DC  2EE8               	decfsz	wreg,f,c
  3860  0140DE  D7F8               	goto	u6125
  3861  0140E0  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3862  0140E4  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3863  0140E8  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3864  0140EC  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3868  0140F0  0100               	movlb	0	; () banked
  3869  0140F2  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3870  0140F4  0100               	movlb	0	; () banked
  3871  0140F6  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3872  0140F8  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3873  0140FA  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3874  0140FC  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3878  0140FE  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3882  014102  0E07               	movlw	7
  3883  014104  0100               	movlb	0	; () banked
  3884  014106  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3885  014108  0100               	movlb	0	; () banked
  3886  01410A  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3887  01410C  0E00               	movlw	0
  3888  01410E  0100               	movlb	0	; () banked
  3889  014110  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3890  014112  0100               	movlb	0	; () banked
  3891  014114  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3892  014116  0E00               	movlw	0
  3893  014118  0100               	movlb	0	; () banked
  3894  01411A  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3895  01411C  0100               	movlb	0	; () banked
  3896  01411E  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3897  014120  0E00               	movlw	0
  3898  014122  0100               	movlb	0	; () banked
  3899  014124  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3900  014126  0100               	movlb	0	; () banked
  3901  014128  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3905  01412A  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3906  01412E  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3907  014132  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3908  014136  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3909  01413A  0E05               	movlw	5
  3910  01413C                     u6135:
  3911  01413C  90D8               	bcf	status,0,c
  3912  01413E  0100               	movlb	0	; () banked
  3913  014140  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3914  014142  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3915  014144  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3916  014146  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3917  014148  2EE8               	decfsz	wreg,f,c
  3918  01414A  D7F8               	goto	u6135
  3919  01414C  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3920  014150  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3921  014154  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3922  014158  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3926  01415C  C07A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3927  014160                     l5393:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;inc\CANlib.h: 652: }
  3931                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3932  014160  0E02               	movlw	2
  3933  014162  0100               	movlb	0	; () banked
  3934  014164  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3935  014166  A4D8               	btfss	status,2,c
  3936  014168  D056               	goto	l5409
  3937                           
  3938                           ; BSR set to: 0
  3939  01416A  0100               	movlb	0	; () banked
  3940  01416C  2974               	incf	CANSetMask@type& (0+255),w,b
  3941  01416E  A4D8               	btfss	status,2,c
  3942  014170  D052               	goto	l5409
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;inc\CANlib.h: 655: {
  3946                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3947  014172  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3948  014176  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3949  01417A  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3950  01417E  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3951  014182  0E04               	movlw	4
  3952  014184  D006               	goto	u6160
  3953  014186                     u6165:
  3954  014186  0100               	movlb	0	; () banked
  3955  014188  90D8               	bcf	status,0,c
  3956  01418A  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3957  01418C  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3958  01418E  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3959  014190  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3960  014192                     u6160:
  3961  014192  2EE8               	decfsz	wreg,f,c
  3962  014194  D7F8               	goto	u6165
  3963  014196  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3964  01419A  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3965  01419E  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3966  0141A2  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3970  0141A6  0100               	movlb	0	; () banked
  3971  0141A8  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3972  0141AA  0100               	movlb	0	; () banked
  3973  0141AC  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3974  0141AE  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3975  0141B0  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3976  0141B2  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3980  0141B4  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3984  0141B8  0E07               	movlw	7
  3985  0141BA  0100               	movlb	0	; () banked
  3986  0141BC  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3987  0141BE  0100               	movlb	0	; () banked
  3988  0141C0  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3989  0141C2  0E00               	movlw	0
  3990  0141C4  0100               	movlb	0	; () banked
  3991  0141C6  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3992  0141C8  0100               	movlb	0	; () banked
  3993  0141CA  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3994  0141CC  0E00               	movlw	0
  3995  0141CE  0100               	movlb	0	; () banked
  3996  0141D0  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3997  0141D2  0100               	movlb	0	; () banked
  3998  0141D4  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3999  0141D6  0E00               	movlw	0
  4000  0141D8  0100               	movlb	0	; () banked
  4001  0141DA  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4002  0141DC  0100               	movlb	0	; () banked
  4003  0141DE  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4007  0141E0  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4008  0141E4  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4009  0141E8  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4010  0141EC  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4011  0141F0  0E05               	movlw	5
  4012  0141F2                     u6175:
  4013  0141F2  90D8               	bcf	status,0,c
  4014  0141F4  0100               	movlb	0	; () banked
  4015  0141F6  3775               	rlcf	??_CANSetMask& (0+255),f,b
  4016  0141F8  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4017  0141FA  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4018  0141FC  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4019  0141FE  2EE8               	decfsz	wreg,f,c
  4020  014200  D7F8               	goto	u6175
  4021  014202  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4022  014206  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4023  01420A  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4024  01420E  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4028  014212  C07A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4029  014216                     l5409:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;inc\CANlib.h: 663: }
  4033                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4034  014216  0100               	movlb	0	; () banked
  4035  014218  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  4036  01421A  A4D8               	btfss	status,2,c
  4037  01421C  D087               	goto	l5441
  4038                           
  4039                           ; BSR set to: 0
  4040  01421E  0EF7               	movlw	247
  4041  014220  0100               	movlb	0	; () banked
  4042  014222  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4043  014224  A4D8               	btfss	status,2,c
  4044  014226  D082               	goto	l5441
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;inc\CANlib.h: 666: {
  4048                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4049  014228  0100               	movlb	0	; () banked
  4050  01422A  5170               	movf	CANSetMask@mask& (0+255),w,b
  4051  01422C  0100               	movlb	0	; () banked
  4052  01422E  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4053  014230  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4054  014232  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4055  014234  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4059  014236  C07A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4063  01423A  0E00               	movlw	0
  4064  01423C  0100               	movlb	0	; () banked
  4065  01423E  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4066  014240  0100               	movlb	0	; () banked
  4067  014242  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4068  014244  0EFF               	movlw	255
  4069  014246  0100               	movlb	0	; () banked
  4070  014248  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4071  01424A  0100               	movlb	0	; () banked
  4072  01424C  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4073  01424E  0E00               	movlw	0
  4074  014250  0100               	movlb	0	; () banked
  4075  014252  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4076  014254  0100               	movlb	0	; () banked
  4077  014256  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4078  014258  0E00               	movlw	0
  4079  01425A  0100               	movlb	0	; () banked
  4080  01425C  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4081  01425E  0100               	movlb	0	; () banked
  4082  014260  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4086  014262  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4087  014266  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4088  01426A  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4089  01426E  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4090  014272  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4091  014276  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4092  01427A  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4093  01427E  0100               	movlb	0	; () banked
  4094  014280  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4095  014282  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4096  014286  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4097  01428A  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4098  01428E  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4102  014292  C07A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4106  014296  0100               	movlb	0	; () banked
  4107  014298  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4108  01429A  D003               	goto	l450
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4112  01429C  010F               	movlb	15	; () banked
  4113  01429E  8119               	bsf	25,0,b	;volatile
  4114  0142A0  D002               	goto	l451
  4115  0142A2                     l450:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;inc\CANlib.h: 676: else
  4119                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4120  0142A2  010F               	movlb	15	; () banked
  4121  0142A4  9119               	bcf	25,0,b	;volatile
  4122  0142A6                     l451:
  4123                           
  4124                           ; BSR set to: 15
  4125                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4126  0142A6  0100               	movlb	0	; () banked
  4127  0142A8  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4128  0142AA  D003               	goto	l452
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4132  0142AC  010F               	movlb	15	; () banked
  4133  0142AE  8319               	bsf	25,1,b	;volatile
  4134  0142B0  D002               	goto	l453
  4135  0142B2                     l452:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;inc\CANlib.h: 681: else
  4139                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4140  0142B2  010F               	movlb	15	; () banked
  4141  0142B4  9319               	bcf	25,1,b	;volatile
  4142  0142B6                     l453:
  4143                           
  4144                           ; BSR set to: 15
  4145                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4146  0142B6  0100               	movlb	0	; () banked
  4147  0142B8  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4148  0142BA  D003               	goto	l454
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4152  0142BC  010F               	movlb	15	; () banked
  4153  0142BE  8B19               	bsf	25,5,b	;volatile
  4154  0142C0  D002               	goto	l455
  4155  0142C2                     l454:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;inc\CANlib.h: 686: else
  4159                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4160  0142C2  010F               	movlb	15	; () banked
  4161  0142C4  9B19               	bcf	25,5,b	;volatile
  4162  0142C6                     l455:
  4163                           
  4164                           ; BSR set to: 15
  4165                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4166  0142C6  0100               	movlb	0	; () banked
  4167  0142C8  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4168  0142CA  D003               	goto	l456
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4172  0142CC  010F               	movlb	15	; () banked
  4173  0142CE  8D19               	bsf	25,6,b	;volatile
  4174  0142D0  D002               	goto	l457
  4175  0142D2                     l456:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 691: else
  4179                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4180  0142D2  010F               	movlb	15	; () banked
  4181  0142D4  9D19               	bcf	25,6,b	;volatile
  4182  0142D6                     l457:
  4183                           
  4184                           ; BSR set to: 15
  4185                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4186  0142D6  0100               	movlb	0	; () banked
  4187  0142D8  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4188  0142DA  D003               	goto	l458
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4192  0142DC  010F               	movlb	15	; () banked
  4193  0142DE  8F19               	bsf	25,7,b	;volatile
  4194  0142E0  D002               	goto	l5435
  4195  0142E2                     l458:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;inc\CANlib.h: 696: else
  4199                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4200  0142E2  010F               	movlb	15	; () banked
  4201  0142E4  9F19               	bcf	25,7,b	;volatile
  4202  0142E6                     l5435:
  4203                           
  4204                           ; BSR set to: 15
  4205                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4206  0142E6  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4207  0142EA  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4208  0142EE  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4209  0142F2  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4210  0142F6  0E16               	movlw	22
  4211  0142F8  D006               	goto	u6250
  4212  0142FA                     u6255:
  4213  0142FA  0100               	movlb	0	; () banked
  4214  0142FC  90D8               	bcf	status,0,c
  4215  0142FE  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4216  014300  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4217  014302  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4218  014304  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4219  014306                     u6250:
  4220  014306  2EE8               	decfsz	wreg,f,c
  4221  014308  D7F8               	goto	u6255
  4222  01430A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4223  01430E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4224  014312  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4225  014316  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4229  01431A  0100               	movlb	0	; () banked
  4230  01431C  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4231  01431E  0100               	movlb	0	; () banked
  4232  014320  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4233  014322  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4234  014324  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4235  014326  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4239  014328  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4240  01432C                     l5441:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;inc\CANlib.h: 702: }
  4244                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4245  01432C  0E02               	movlw	2
  4246  01432E  0100               	movlb	0	; () banked
  4247  014330  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4248  014332  A4D8               	btfss	status,2,c
  4249  014334  0012               	return	
  4250                           
  4251                           ; BSR set to: 0
  4252  014336  0EF7               	movlw	247
  4253  014338  0100               	movlb	0	; () banked
  4254  01433A  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4255  01433C  A4D8               	btfss	status,2,c
  4256  01433E  0012               	return	
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;inc\CANlib.h: 705: {
  4260                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4261  014340  0100               	movlb	0	; () banked
  4262  014342  5170               	movf	CANSetMask@mask& (0+255),w,b
  4263  014344  0100               	movlb	0	; () banked
  4264  014346  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4265  014348  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4266  01434A  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4267  01434C  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4271  01434E  C07A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4275  014352  0E00               	movlw	0
  4276  014354  0100               	movlb	0	; () banked
  4277  014356  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4278  014358  0100               	movlb	0	; () banked
  4279  01435A  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4280  01435C  0EFF               	movlw	255
  4281  01435E  0100               	movlb	0	; () banked
  4282  014360  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4283  014362  0100               	movlb	0	; () banked
  4284  014364  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4285  014366  0E00               	movlw	0
  4286  014368  0100               	movlb	0	; () banked
  4287  01436A  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4288  01436C  0100               	movlb	0	; () banked
  4289  01436E  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4290  014370  0E00               	movlw	0
  4291  014372  0100               	movlb	0	; () banked
  4292  014374  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4293  014376  0100               	movlb	0	; () banked
  4294  014378  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4298  01437A  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4299  01437E  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4300  014382  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4301  014386  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4302  01438A  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4303  01438E  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4304  014392  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4305  014396  0100               	movlb	0	; () banked
  4306  014398  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4307  01439A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4308  01439E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4309  0143A2  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4310  0143A6  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4314  0143AA  C07A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4318  0143AE  0100               	movlb	0	; () banked
  4319  0143B0  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4320  0143B2  D003               	goto	l461
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4324  0143B4  010F               	movlb	15	; () banked
  4325  0143B6  811D               	bsf	29,0,b	;volatile
  4326  0143B8  D002               	goto	l462
  4327  0143BA                     l461:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;inc\CANlib.h: 715: else
  4331                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4332  0143BA  010F               	movlb	15	; () banked
  4333  0143BC  911D               	bcf	29,0,b	;volatile
  4334  0143BE                     l462:
  4335                           
  4336                           ; BSR set to: 15
  4337                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4338  0143BE  0100               	movlb	0	; () banked
  4339  0143C0  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4340  0143C2  D003               	goto	l463
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4344  0143C4  010F               	movlb	15	; () banked
  4345  0143C6  831D               	bsf	29,1,b	;volatile
  4346  0143C8  D002               	goto	l464
  4347  0143CA                     l463:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;inc\CANlib.h: 720: else
  4351                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4352  0143CA  010F               	movlb	15	; () banked
  4353  0143CC  931D               	bcf	29,1,b	;volatile
  4354  0143CE                     l464:
  4355                           
  4356                           ; BSR set to: 15
  4357                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4358  0143CE  0100               	movlb	0	; () banked
  4359  0143D0  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4360  0143D2  D003               	goto	l465
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4364  0143D4  010F               	movlb	15	; () banked
  4365  0143D6  8B1D               	bsf	29,5,b	;volatile
  4366  0143D8  D002               	goto	l466
  4367  0143DA                     l465:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;inc\CANlib.h: 725: else
  4371                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4372  0143DA  010F               	movlb	15	; () banked
  4373  0143DC  9B1D               	bcf	29,5,b	;volatile
  4374  0143DE                     l466:
  4375                           
  4376                           ; BSR set to: 15
  4377                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4378  0143DE  0100               	movlb	0	; () banked
  4379  0143E0  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4380  0143E2  D003               	goto	l467
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4384  0143E4  010F               	movlb	15	; () banked
  4385  0143E6  8D1D               	bsf	29,6,b	;volatile
  4386  0143E8  D002               	goto	l468
  4387  0143EA                     l467:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;inc\CANlib.h: 730: else
  4391                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4392  0143EA  010F               	movlb	15	; () banked
  4393  0143EC  9D1D               	bcf	29,6,b	;volatile
  4394  0143EE                     l468:
  4395                           
  4396                           ; BSR set to: 15
  4397                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4398  0143EE  0100               	movlb	0	; () banked
  4399  0143F0  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4400  0143F2  D003               	goto	l469
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4404  0143F4  010F               	movlb	15	; () banked
  4405  0143F6  8F1D               	bsf	29,7,b	;volatile
  4406  0143F8  D002               	goto	l5467
  4407  0143FA                     l469:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;inc\CANlib.h: 735: else
  4411                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4412  0143FA  010F               	movlb	15	; () banked
  4413  0143FC  9F1D               	bcf	29,7,b	;volatile
  4414  0143FE                     l5467:
  4415                           
  4416                           ; BSR set to: 15
  4417                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4418  0143FE  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4419  014402  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4420  014406  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4421  01440A  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4422  01440E  0E16               	movlw	22
  4423  014410  D006               	goto	u6330
  4424  014412                     u6335:
  4425  014412  0100               	movlb	0	; () banked
  4426  014414  90D8               	bcf	status,0,c
  4427  014416  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4428  014418  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4429  01441A  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4430  01441C  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4431  01441E                     u6330:
  4432  01441E  2EE8               	decfsz	wreg,f,c
  4433  014420  D7F8               	goto	u6335
  4434  014422  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4435  014426  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4436  01442A  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4437  01442E  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4441  014432  0100               	movlb	0	; () banked
  4442  014434  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4443  014436  0100               	movlb	0	; () banked
  4444  014438  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4445  01443A  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4446  01443C  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4447  01443E  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4451  014440  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4452  014444  0012               	return	
  4453  014446                     __end_of_CANSetMask:
  4454                           	opt stack 0
  4455                           tblptru	equ	0xFF8
  4456                           tblptrh	equ	0xFF7
  4457                           tblptrl	equ	0xFF6
  4458                           tablat	equ	0xFF5
  4459                           intcon	equ	0xFF2
  4460                           postinc0	equ	0xFEE
  4461                           wreg	equ	0xFE8
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _CANSetFilter *****************
  4465 ;; Defined at:
  4466 ;;		line 748 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  numBuffer       1    wreg     enum E16924
  4469 ;;  filter          4   16[BANK0 ] unsigned long 
  4470 ;;  type            1   20[BANK0 ] enum E16887
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  numBuffer       1   25[BANK0 ] enum E16924
  4473 ;;  tamp            4   26[BANK0 ] unsigned long 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;		None               void
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4483 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;Total ram usage:       14 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    3
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_CANInitialize
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text4
  4498  010000                     __ptext4:
  4499                           	opt stack 0
  4500  010000                     _CANSetFilter:
  4501                           	opt stack 25
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;incstack = 0
  4505                           ;CANSetFilter@numBuffer stored from wreg
  4506  010000  0100               	movlb	0	; () banked
  4507  010002  6F79               	movwf	CANSetFilter@numBuffer& (0+255),b
  4508                           
  4509                           ;inc\CANlib.h: 750: unsigned long tamp;
  4510                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4511  010004  0100               	movlb	0	; () banked
  4512  010006  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4513  010008  0100               	movlb	0	; () banked
  4514  01000A  A4D8               	btfss	status,2,c
  4515  01000C  D058               	goto	l5491
  4516                           
  4517                           ; BSR set to: 0
  4518  01000E  0100               	movlb	0	; () banked
  4519  010010  2974               	incf	CANSetFilter@type& (0+255),w,b
  4520  010012  A4D8               	btfss	status,2,c
  4521  010014  D054               	goto	l5491
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;inc\CANlib.h: 753: {
  4525                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4526  010016  010F               	movlb	15	; () banked
  4527  010018  9701               	bcf	1,3,b	;volatile
  4528                           
  4529                           ; BSR set to: 15
  4530                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4531  01001A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4532  01001E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4533  010022  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4534  010026  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4535  01002A  0E04               	movlw	4
  4536  01002C  D006               	goto	u6360
  4537  01002E                     u6365:
  4538  01002E  0100               	movlb	0	; () banked
  4539  010030  90D8               	bcf	status,0,c
  4540  010032  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4541  010034  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4542  010036  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4543  010038  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4544  01003A                     u6360:
  4545  01003A  2EE8               	decfsz	wreg,f,c
  4546  01003C  D7F8               	goto	u6365
  4547  01003E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4548  010042  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4549  010046  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4550  01004A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4554  01004E  0100               	movlb	0	; () banked
  4555  010050  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4556  010052  0100               	movlb	0	; () banked
  4557  010054  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4558  010056  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4559  010058  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4560  01005A  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4564  01005C  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4568  010060  0E07               	movlw	7
  4569  010062  0100               	movlb	0	; () banked
  4570  010064  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4571  010066  0100               	movlb	0	; () banked
  4572  010068  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4573  01006A  0E00               	movlw	0
  4574  01006C  0100               	movlb	0	; () banked
  4575  01006E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4576  010070  0100               	movlb	0	; () banked
  4577  010072  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4578  010074  0E00               	movlw	0
  4579  010076  0100               	movlb	0	; () banked
  4580  010078  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4581  01007A  0100               	movlb	0	; () banked
  4582  01007C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4583  01007E  0E00               	movlw	0
  4584  010080  0100               	movlb	0	; () banked
  4585  010082  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4586  010084  0100               	movlb	0	; () banked
  4587  010086  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4591  010088  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4592  01008C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4593  010090  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4594  010094  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4595  010098  0E05               	movlw	5
  4596  01009A                     u6375:
  4597  01009A  90D8               	bcf	status,0,c
  4598  01009C  0100               	movlb	0	; () banked
  4599  01009E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4600  0100A0  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4601  0100A2  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4602  0100A4  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4603  0100A6  2EE8               	decfsz	wreg,f,c
  4604  0100A8  D7F8               	goto	u6375
  4605  0100AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4606  0100AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4607  0100B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4608  0100B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4612  0100BA  C07A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4613  0100BE                     l5491:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;inc\CANlib.h: 763: }
  4617                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4618  0100BE  0100               	movlb	0	; () banked
  4619  0100C0  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4620  0100C2  A4D8               	btfss	status,2,c
  4621  0100C4  D058               	goto	l5509
  4622                           
  4623                           ; BSR set to: 0
  4624  0100C6  0100               	movlb	0	; () banked
  4625  0100C8  2974               	incf	CANSetFilter@type& (0+255),w,b
  4626  0100CA  A4D8               	btfss	status,2,c
  4627  0100CC  D054               	goto	l5509
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;inc\CANlib.h: 766: {
  4631                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4632  0100CE  010F               	movlb	15	; () banked
  4633  0100D0  9705               	bcf	5,3,b	;volatile
  4634                           
  4635                           ; BSR set to: 15
  4636                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4637  0100D2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4638  0100D6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4639  0100DA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4640  0100DE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4641  0100E2  0E04               	movlw	4
  4642  0100E4  D006               	goto	u6400
  4643  0100E6                     u6405:
  4644  0100E6  0100               	movlb	0	; () banked
  4645  0100E8  90D8               	bcf	status,0,c
  4646  0100EA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4647  0100EC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4648  0100EE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4649  0100F0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4650  0100F2                     u6400:
  4651  0100F2  2EE8               	decfsz	wreg,f,c
  4652  0100F4  D7F8               	goto	u6405
  4653  0100F6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4654  0100FA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4655  0100FE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4656  010102  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4660  010106  0100               	movlb	0	; () banked
  4661  010108  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4662  01010A  0100               	movlb	0	; () banked
  4663  01010C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4664  01010E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4665  010110  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4666  010112  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4670  010114  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4674  010118  0E07               	movlw	7
  4675  01011A  0100               	movlb	0	; () banked
  4676  01011C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4677  01011E  0100               	movlb	0	; () banked
  4678  010120  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4679  010122  0E00               	movlw	0
  4680  010124  0100               	movlb	0	; () banked
  4681  010126  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4682  010128  0100               	movlb	0	; () banked
  4683  01012A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4684  01012C  0E00               	movlw	0
  4685  01012E  0100               	movlb	0	; () banked
  4686  010130  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4687  010132  0100               	movlb	0	; () banked
  4688  010134  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4689  010136  0E00               	movlw	0
  4690  010138  0100               	movlb	0	; () banked
  4691  01013A  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4692  01013C  0100               	movlb	0	; () banked
  4693  01013E  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4697  010140  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4698  010144  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4699  010148  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4700  01014C  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4701  010150  0E05               	movlw	5
  4702  010152                     u6415:
  4703  010152  90D8               	bcf	status,0,c
  4704  010154  0100               	movlb	0	; () banked
  4705  010156  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4706  010158  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4707  01015A  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4708  01015C  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4709  01015E  2EE8               	decfsz	wreg,f,c
  4710  010160  D7F8               	goto	u6415
  4711  010162  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4712  010166  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4713  01016A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4714  01016E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4718  010172  C07A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4719  010176                     l5509:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;inc\CANlib.h: 776: }
  4723                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4724  010176  0E02               	movlw	2
  4725  010178  0100               	movlb	0	; () banked
  4726  01017A  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4727  01017C  A4D8               	btfss	status,2,c
  4728  01017E  D058               	goto	l5527
  4729                           
  4730                           ; BSR set to: 0
  4731  010180  0100               	movlb	0	; () banked
  4732  010182  2974               	incf	CANSetFilter@type& (0+255),w,b
  4733  010184  A4D8               	btfss	status,2,c
  4734  010186  D054               	goto	l5527
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;inc\CANlib.h: 779: {
  4738                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4739  010188  010F               	movlb	15	; () banked
  4740  01018A  9709               	bcf	9,3,b	;volatile
  4741                           
  4742                           ; BSR set to: 15
  4743                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4744  01018C  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4745  010190  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4746  010194  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4747  010198  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4748  01019C  0E04               	movlw	4
  4749  01019E  D006               	goto	u6440
  4750  0101A0                     u6445:
  4751  0101A0  0100               	movlb	0	; () banked
  4752  0101A2  90D8               	bcf	status,0,c
  4753  0101A4  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4754  0101A6  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4755  0101A8  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4756  0101AA  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4757  0101AC                     u6440:
  4758  0101AC  2EE8               	decfsz	wreg,f,c
  4759  0101AE  D7F8               	goto	u6445
  4760  0101B0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4761  0101B4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4762  0101B8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4763  0101BC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4767  0101C0  0100               	movlb	0	; () banked
  4768  0101C2  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4769  0101C4  0100               	movlb	0	; () banked
  4770  0101C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4771  0101C8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4772  0101CA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4773  0101CC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4777  0101CE  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4781  0101D2  0E07               	movlw	7
  4782  0101D4  0100               	movlb	0	; () banked
  4783  0101D6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4784  0101D8  0100               	movlb	0	; () banked
  4785  0101DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4786  0101DC  0E00               	movlw	0
  4787  0101DE  0100               	movlb	0	; () banked
  4788  0101E0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4789  0101E2  0100               	movlb	0	; () banked
  4790  0101E4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4791  0101E6  0E00               	movlw	0
  4792  0101E8  0100               	movlb	0	; () banked
  4793  0101EA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4794  0101EC  0100               	movlb	0	; () banked
  4795  0101EE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4796  0101F0  0E00               	movlw	0
  4797  0101F2  0100               	movlb	0	; () banked
  4798  0101F4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4799  0101F6  0100               	movlb	0	; () banked
  4800  0101F8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4804  0101FA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4805  0101FE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4806  010202  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4807  010206  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4808  01020A  0E05               	movlw	5
  4809  01020C                     u6455:
  4810  01020C  90D8               	bcf	status,0,c
  4811  01020E  0100               	movlb	0	; () banked
  4812  010210  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4813  010212  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4814  010214  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4815  010216  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4816  010218  2EE8               	decfsz	wreg,f,c
  4817  01021A  D7F8               	goto	u6455
  4818  01021C  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4819  010220  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4820  010224  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4821  010228  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4825  01022C  C07A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4826  010230                     l5527:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;inc\CANlib.h: 789: }
  4830                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4831  010230  0E03               	movlw	3
  4832  010232  0100               	movlb	0	; () banked
  4833  010234  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4834  010236  A4D8               	btfss	status,2,c
  4835  010238  D058               	goto	l5545
  4836                           
  4837                           ; BSR set to: 0
  4838  01023A  0100               	movlb	0	; () banked
  4839  01023C  2974               	incf	CANSetFilter@type& (0+255),w,b
  4840  01023E  A4D8               	btfss	status,2,c
  4841  010240  D054               	goto	l5545
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;inc\CANlib.h: 792: {
  4845                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4846  010242  010F               	movlb	15	; () banked
  4847  010244  970D               	bcf	13,3,b	;volatile
  4848                           
  4849                           ; BSR set to: 15
  4850                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4851  010246  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4852  01024A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4853  01024E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4854  010252  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4855  010256  0E04               	movlw	4
  4856  010258  D006               	goto	u6480
  4857  01025A                     u6485:
  4858  01025A  0100               	movlb	0	; () banked
  4859  01025C  90D8               	bcf	status,0,c
  4860  01025E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4861  010260  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4862  010262  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4863  010264  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4864  010266                     u6480:
  4865  010266  2EE8               	decfsz	wreg,f,c
  4866  010268  D7F8               	goto	u6485
  4867  01026A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4868  01026E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4869  010272  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4870  010276  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4874  01027A  0100               	movlb	0	; () banked
  4875  01027C  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4876  01027E  0100               	movlb	0	; () banked
  4877  010280  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4878  010282  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4879  010284  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4880  010286  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4884  010288  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4888  01028C  0E07               	movlw	7
  4889  01028E  0100               	movlb	0	; () banked
  4890  010290  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4891  010292  0100               	movlb	0	; () banked
  4892  010294  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4893  010296  0E00               	movlw	0
  4894  010298  0100               	movlb	0	; () banked
  4895  01029A  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4896  01029C  0100               	movlb	0	; () banked
  4897  01029E  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4898  0102A0  0E00               	movlw	0
  4899  0102A2  0100               	movlb	0	; () banked
  4900  0102A4  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4901  0102A6  0100               	movlb	0	; () banked
  4902  0102A8  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4903  0102AA  0E00               	movlw	0
  4904  0102AC  0100               	movlb	0	; () banked
  4905  0102AE  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4906  0102B0  0100               	movlb	0	; () banked
  4907  0102B2  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4911  0102B4  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4912  0102B8  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4913  0102BC  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4914  0102C0  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4915  0102C4  0E05               	movlw	5
  4916  0102C6                     u6495:
  4917  0102C6  90D8               	bcf	status,0,c
  4918  0102C8  0100               	movlb	0	; () banked
  4919  0102CA  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4920  0102CC  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4921  0102CE  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4922  0102D0  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4923  0102D2  2EE8               	decfsz	wreg,f,c
  4924  0102D4  D7F8               	goto	u6495
  4925  0102D6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4926  0102DA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4927  0102DE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4928  0102E2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4932  0102E6  C07A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4933  0102EA                     l5545:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;inc\CANlib.h: 802: }
  4937                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4938  0102EA  0E04               	movlw	4
  4939  0102EC  0100               	movlb	0	; () banked
  4940  0102EE  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4941  0102F0  A4D8               	btfss	status,2,c
  4942  0102F2  D058               	goto	l5563
  4943                           
  4944                           ; BSR set to: 0
  4945  0102F4  0100               	movlb	0	; () banked
  4946  0102F6  2974               	incf	CANSetFilter@type& (0+255),w,b
  4947  0102F8  A4D8               	btfss	status,2,c
  4948  0102FA  D054               	goto	l5563
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 805: {
  4952                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4953  0102FC  010F               	movlb	15	; () banked
  4954  0102FE  9711               	bcf	17,3,b	;volatile
  4955                           
  4956                           ; BSR set to: 15
  4957                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4958  010300  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4959  010304  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4960  010308  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4961  01030C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4962  010310  0E04               	movlw	4
  4963  010312  D006               	goto	u6520
  4964  010314                     u6525:
  4965  010314  0100               	movlb	0	; () banked
  4966  010316  90D8               	bcf	status,0,c
  4967  010318  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4968  01031A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4969  01031C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4970  01031E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4971  010320                     u6520:
  4972  010320  2EE8               	decfsz	wreg,f,c
  4973  010322  D7F8               	goto	u6525
  4974  010324  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4975  010328  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4976  01032C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4977  010330  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4981  010334  0100               	movlb	0	; () banked
  4982  010336  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4983  010338  0100               	movlb	0	; () banked
  4984  01033A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4985  01033C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4986  01033E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4987  010340  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4991  010342  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4995  010346  0E07               	movlw	7
  4996  010348  0100               	movlb	0	; () banked
  4997  01034A  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4998  01034C  0100               	movlb	0	; () banked
  4999  01034E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5000  010350  0E00               	movlw	0
  5001  010352  0100               	movlb	0	; () banked
  5002  010354  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5003  010356  0100               	movlb	0	; () banked
  5004  010358  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5005  01035A  0E00               	movlw	0
  5006  01035C  0100               	movlb	0	; () banked
  5007  01035E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5008  010360  0100               	movlb	0	; () banked
  5009  010362  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5010  010364  0E00               	movlw	0
  5011  010366  0100               	movlb	0	; () banked
  5012  010368  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5013  01036A  0100               	movlb	0	; () banked
  5014  01036C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5018  01036E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5019  010372  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5020  010376  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5021  01037A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5022  01037E  0E05               	movlw	5
  5023  010380                     u6535:
  5024  010380  90D8               	bcf	status,0,c
  5025  010382  0100               	movlb	0	; () banked
  5026  010384  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  5027  010386  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5028  010388  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5029  01038A  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5030  01038C  2EE8               	decfsz	wreg,f,c
  5031  01038E  D7F8               	goto	u6535
  5032  010390  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5033  010394  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5034  010398  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5035  01039C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5039  0103A0  C07A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5040  0103A4                     l5563:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;inc\CANlib.h: 815: }
  5044                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5045  0103A4  0E05               	movlw	5
  5046  0103A6  0100               	movlb	0	; () banked
  5047  0103A8  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5048  0103AA  A4D8               	btfss	status,2,c
  5049  0103AC  D058               	goto	l5581
  5050                           
  5051                           ; BSR set to: 0
  5052  0103AE  0100               	movlb	0	; () banked
  5053  0103B0  2974               	incf	CANSetFilter@type& (0+255),w,b
  5054  0103B2  A4D8               	btfss	status,2,c
  5055  0103B4  D054               	goto	l5581
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;inc\CANlib.h: 818: {
  5059                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5060  0103B6  010F               	movlb	15	; () banked
  5061  0103B8  9715               	bcf	21,3,b	;volatile
  5062                           
  5063                           ; BSR set to: 15
  5064                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5065  0103BA  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5066  0103BE  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5067  0103C2  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5068  0103C6  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5069  0103CA  0E04               	movlw	4
  5070  0103CC  D006               	goto	u6560
  5071  0103CE                     u6565:
  5072  0103CE  0100               	movlb	0	; () banked
  5073  0103D0  90D8               	bcf	status,0,c
  5074  0103D2  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5075  0103D4  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5076  0103D6  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5077  0103D8  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5078  0103DA                     u6560:
  5079  0103DA  2EE8               	decfsz	wreg,f,c
  5080  0103DC  D7F8               	goto	u6565
  5081  0103DE  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5082  0103E2  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5083  0103E6  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5084  0103EA  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5088  0103EE  0100               	movlb	0	; () banked
  5089  0103F0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5090  0103F2  0100               	movlb	0	; () banked
  5091  0103F4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5092  0103F6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5093  0103F8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5094  0103FA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5098  0103FC  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5102  010400  0E07               	movlw	7
  5103  010402  0100               	movlb	0	; () banked
  5104  010404  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5105  010406  0100               	movlb	0	; () banked
  5106  010408  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5107  01040A  0E00               	movlw	0
  5108  01040C  0100               	movlb	0	; () banked
  5109  01040E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5110  010410  0100               	movlb	0	; () banked
  5111  010412  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5112  010414  0E00               	movlw	0
  5113  010416  0100               	movlb	0	; () banked
  5114  010418  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5115  01041A  0100               	movlb	0	; () banked
  5116  01041C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5117  01041E  0E00               	movlw	0
  5118  010420  0100               	movlb	0	; () banked
  5119  010422  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5120  010424  0100               	movlb	0	; () banked
  5121  010426  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5125  010428  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5126  01042C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5127  010430  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5128  010434  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5129  010438  0E05               	movlw	5
  5130  01043A                     u6575:
  5131  01043A  90D8               	bcf	status,0,c
  5132  01043C  0100               	movlb	0	; () banked
  5133  01043E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  5134  010440  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5135  010442  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5136  010444  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5137  010446  2EE8               	decfsz	wreg,f,c
  5138  010448  D7F8               	goto	u6575
  5139  01044A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5140  01044E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5141  010452  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5142  010456  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5146  01045A  C07A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5147  01045E                     l5581:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;inc\CANlib.h: 828: }
  5151                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5152  01045E  0100               	movlb	0	; () banked
  5153  010460  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5154  010462  0100               	movlb	0	; () banked
  5155  010464  A4D8               	btfss	status,2,c
  5156  010466  D089               	goto	l5615
  5157                           
  5158                           ; BSR set to: 0
  5159  010468  0EF7               	movlw	247
  5160  01046A  0100               	movlb	0	; () banked
  5161  01046C  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5162  01046E  A4D8               	btfss	status,2,c
  5163  010470  D084               	goto	l5615
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;inc\CANlib.h: 832: {
  5167                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5168  010472  010F               	movlb	15	; () banked
  5169  010474  8701               	bsf	1,3,b	;volatile
  5170                           
  5171                           ; BSR set to: 15
  5172                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5173  010476  0100               	movlb	0	; () banked
  5174  010478  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5175  01047A  0100               	movlb	0	; () banked
  5176  01047C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5177  01047E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5178  010480  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5179  010482  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5183  010484  C07A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5187  010488  0E00               	movlw	0
  5188  01048A  0100               	movlb	0	; () banked
  5189  01048C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5190  01048E  0100               	movlb	0	; () banked
  5191  010490  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5192  010492  0EFF               	movlw	255
  5193  010494  0100               	movlb	0	; () banked
  5194  010496  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5195  010498  0100               	movlb	0	; () banked
  5196  01049A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5197  01049C  0E00               	movlw	0
  5198  01049E  0100               	movlb	0	; () banked
  5199  0104A0  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5200  0104A2  0100               	movlb	0	; () banked
  5201  0104A4  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5202  0104A6  0E00               	movlw	0
  5203  0104A8  0100               	movlb	0	; () banked
  5204  0104AA  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5205  0104AC  0100               	movlb	0	; () banked
  5206  0104AE  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5210  0104B0  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5211  0104B4  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5212  0104B8  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5213  0104BC  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5214  0104C0  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5215  0104C4  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5216  0104C8  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5217  0104CC  0100               	movlb	0	; () banked
  5218  0104CE  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5219  0104D0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5220  0104D4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5221  0104D8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5222  0104DC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5226  0104E0  C07A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5230  0104E4  0100               	movlb	0	; () banked
  5231  0104E6  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5232  0104E8  D003               	goto	l481
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5236  0104EA  010F               	movlb	15	; () banked
  5237  0104EC  8101               	bsf	1,0,b	;volatile
  5238  0104EE  D002               	goto	l482
  5239  0104F0                     l481:
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;inc\CANlib.h: 844: else
  5243                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5244  0104F0  010F               	movlb	15	; () banked
  5245  0104F2  9101               	bcf	1,0,b	;volatile
  5246  0104F4                     l482:
  5247                           
  5248                           ; BSR set to: 15
  5249                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5250  0104F4  0100               	movlb	0	; () banked
  5251  0104F6  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5252  0104F8  D003               	goto	l483
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5256  0104FA  010F               	movlb	15	; () banked
  5257  0104FC  8301               	bsf	1,1,b	;volatile
  5258  0104FE  D002               	goto	l484
  5259  010500                     l483:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 849: else
  5263                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5264  010500  010F               	movlb	15	; () banked
  5265  010502  9301               	bcf	1,1,b	;volatile
  5266  010504                     l484:
  5267                           
  5268                           ; BSR set to: 15
  5269                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5270  010504  0100               	movlb	0	; () banked
  5271  010506  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5272  010508  D003               	goto	l485
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5276  01050A  010F               	movlb	15	; () banked
  5277  01050C  8B01               	bsf	1,5,b	;volatile
  5278  01050E  D002               	goto	l486
  5279  010510                     l485:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 854: else
  5283                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5284  010510  010F               	movlb	15	; () banked
  5285  010512  9B01               	bcf	1,5,b	;volatile
  5286  010514                     l486:
  5287                           
  5288                           ; BSR set to: 15
  5289                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5290  010514  0100               	movlb	0	; () banked
  5291  010516  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5292  010518  D003               	goto	l487
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5296  01051A  010F               	movlb	15	; () banked
  5297  01051C  8D01               	bsf	1,6,b	;volatile
  5298  01051E  D002               	goto	l488
  5299  010520                     l487:
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;inc\CANlib.h: 859: else
  5303                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5304  010520  010F               	movlb	15	; () banked
  5305  010522  9D01               	bcf	1,6,b	;volatile
  5306  010524                     l488:
  5307                           
  5308                           ; BSR set to: 15
  5309                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5310  010524  0100               	movlb	0	; () banked
  5311  010526  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5312  010528  D003               	goto	l489
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5316  01052A  010F               	movlb	15	; () banked
  5317  01052C  8F01               	bsf	1,7,b	;volatile
  5318  01052E  D002               	goto	l5609
  5319  010530                     l489:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 864: else
  5323                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5324  010530  010F               	movlb	15	; () banked
  5325  010532  9F01               	bcf	1,7,b	;volatile
  5326  010534                     l5609:
  5327                           
  5328                           ; BSR set to: 15
  5329                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5330  010534  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5331  010538  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5332  01053C  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5333  010540  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5334  010544  0E16               	movlw	22
  5335  010546  D006               	goto	u6650
  5336  010548                     u6655:
  5337  010548  0100               	movlb	0	; () banked
  5338  01054A  90D8               	bcf	status,0,c
  5339  01054C  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5340  01054E  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5341  010550  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5342  010552  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5343  010554                     u6650:
  5344  010554  2EE8               	decfsz	wreg,f,c
  5345  010556  D7F8               	goto	u6655
  5346  010558  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5347  01055C  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5348  010560  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5349  010564  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5353  010568  0100               	movlb	0	; () banked
  5354  01056A  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5355  01056C  0100               	movlb	0	; () banked
  5356  01056E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5357  010570  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5358  010572  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5359  010574  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5363  010576  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5364  01057A                     l5615:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 870: }
  5368                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5369  01057A  0100               	movlb	0	; () banked
  5370  01057C  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5371  01057E  A4D8               	btfss	status,2,c
  5372  010580  D089               	goto	l5649
  5373                           
  5374                           ; BSR set to: 0
  5375  010582  0EF7               	movlw	247
  5376  010584  0100               	movlb	0	; () banked
  5377  010586  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5378  010588  A4D8               	btfss	status,2,c
  5379  01058A  D084               	goto	l5649
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;inc\CANlib.h: 873: {
  5383                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5384  01058C  010F               	movlb	15	; () banked
  5385  01058E  8705               	bsf	5,3,b	;volatile
  5386                           
  5387                           ; BSR set to: 15
  5388                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5389  010590  0100               	movlb	0	; () banked
  5390  010592  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5391  010594  0100               	movlb	0	; () banked
  5392  010596  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5393  010598  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5394  01059A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5395  01059C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5399  01059E  C07A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5403  0105A2  0E00               	movlw	0
  5404  0105A4  0100               	movlb	0	; () banked
  5405  0105A6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5406  0105A8  0100               	movlb	0	; () banked
  5407  0105AA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5408  0105AC  0EFF               	movlw	255
  5409  0105AE  0100               	movlb	0	; () banked
  5410  0105B0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5411  0105B2  0100               	movlb	0	; () banked
  5412  0105B4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5413  0105B6  0E00               	movlw	0
  5414  0105B8  0100               	movlb	0	; () banked
  5415  0105BA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5416  0105BC  0100               	movlb	0	; () banked
  5417  0105BE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5418  0105C0  0E00               	movlw	0
  5419  0105C2  0100               	movlb	0	; () banked
  5420  0105C4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5421  0105C6  0100               	movlb	0	; () banked
  5422  0105C8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5426  0105CA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5427  0105CE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5428  0105D2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5429  0105D6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5430  0105DA  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5431  0105DE  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5432  0105E2  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5433  0105E6  0100               	movlb	0	; () banked
  5434  0105E8  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5435  0105EA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5436  0105EE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5437  0105F2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5438  0105F6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5442  0105FA  C07A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5446  0105FE  0100               	movlb	0	; () banked
  5447  010600  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5448  010602  D003               	goto	l492
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5452  010604  010F               	movlb	15	; () banked
  5453  010606  8105               	bsf	5,0,b	;volatile
  5454  010608  D002               	goto	l493
  5455  01060A                     l492:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 885: else
  5459                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5460  01060A  010F               	movlb	15	; () banked
  5461  01060C  9105               	bcf	5,0,b	;volatile
  5462  01060E                     l493:
  5463                           
  5464                           ; BSR set to: 15
  5465                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5466  01060E  0100               	movlb	0	; () banked
  5467  010610  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5468  010612  D003               	goto	l494
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5472  010614  010F               	movlb	15	; () banked
  5473  010616  8305               	bsf	5,1,b	;volatile
  5474  010618  D002               	goto	l495
  5475  01061A                     l494:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 890: else
  5479                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5480  01061A  010F               	movlb	15	; () banked
  5481  01061C  9305               	bcf	5,1,b	;volatile
  5482  01061E                     l495:
  5483                           
  5484                           ; BSR set to: 15
  5485                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5486  01061E  0100               	movlb	0	; () banked
  5487  010620  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5488  010622  D003               	goto	l496
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5492  010624  010F               	movlb	15	; () banked
  5493  010626  8B05               	bsf	5,5,b	;volatile
  5494  010628  D002               	goto	l497
  5495  01062A                     l496:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 895: else
  5499                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5500  01062A  010F               	movlb	15	; () banked
  5501  01062C  9B05               	bcf	5,5,b	;volatile
  5502  01062E                     l497:
  5503                           
  5504                           ; BSR set to: 15
  5505                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5506  01062E  0100               	movlb	0	; () banked
  5507  010630  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5508  010632  D003               	goto	l498
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5512  010634  010F               	movlb	15	; () banked
  5513  010636  8D05               	bsf	5,6,b	;volatile
  5514  010638  D002               	goto	l499
  5515  01063A                     l498:
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 900: else
  5519                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5520  01063A  010F               	movlb	15	; () banked
  5521  01063C  9D05               	bcf	5,6,b	;volatile
  5522  01063E                     l499:
  5523                           
  5524                           ; BSR set to: 15
  5525                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5526  01063E  0100               	movlb	0	; () banked
  5527  010640  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5528  010642  D003               	goto	l500
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5532  010644  010F               	movlb	15	; () banked
  5533  010646  8F05               	bsf	5,7,b	;volatile
  5534  010648  D002               	goto	l5643
  5535  01064A                     l500:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 905: else
  5539                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5540  01064A  010F               	movlb	15	; () banked
  5541  01064C  9F05               	bcf	5,7,b	;volatile
  5542  01064E                     l5643:
  5543                           
  5544                           ; BSR set to: 15
  5545                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5546  01064E  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5547  010652  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5548  010656  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5549  01065A  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5550  01065E  0E16               	movlw	22
  5551  010660  D006               	goto	u6730
  5552  010662                     u6735:
  5553  010662  0100               	movlb	0	; () banked
  5554  010664  90D8               	bcf	status,0,c
  5555  010666  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5556  010668  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5557  01066A  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5558  01066C  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5559  01066E                     u6730:
  5560  01066E  2EE8               	decfsz	wreg,f,c
  5561  010670  D7F8               	goto	u6735
  5562  010672  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5563  010676  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5564  01067A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5565  01067E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5569  010682  0100               	movlb	0	; () banked
  5570  010684  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5571  010686  0100               	movlb	0	; () banked
  5572  010688  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5573  01068A  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5574  01068C  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5575  01068E  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5579  010690  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5580  010694                     l5649:
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;inc\CANlib.h: 911: }
  5584                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5585  010694  0E02               	movlw	2
  5586  010696  0100               	movlb	0	; () banked
  5587  010698  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5588  01069A  A4D8               	btfss	status,2,c
  5589  01069C  D089               	goto	l5683
  5590                           
  5591                           ; BSR set to: 0
  5592  01069E  0EF7               	movlw	247
  5593  0106A0  0100               	movlb	0	; () banked
  5594  0106A2  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5595  0106A4  A4D8               	btfss	status,2,c
  5596  0106A6  D084               	goto	l5683
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;inc\CANlib.h: 915: {
  5600                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5601  0106A8  010F               	movlb	15	; () banked
  5602  0106AA  8709               	bsf	9,3,b	;volatile
  5603                           
  5604                           ; BSR set to: 15
  5605                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5606  0106AC  0100               	movlb	0	; () banked
  5607  0106AE  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5608  0106B0  0100               	movlb	0	; () banked
  5609  0106B2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5610  0106B4  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5611  0106B6  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5612  0106B8  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5616  0106BA  C07A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5620  0106BE  0E00               	movlw	0
  5621  0106C0  0100               	movlb	0	; () banked
  5622  0106C2  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5623  0106C4  0100               	movlb	0	; () banked
  5624  0106C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5625  0106C8  0EFF               	movlw	255
  5626  0106CA  0100               	movlb	0	; () banked
  5627  0106CC  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5628  0106CE  0100               	movlb	0	; () banked
  5629  0106D0  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5630  0106D2  0E00               	movlw	0
  5631  0106D4  0100               	movlb	0	; () banked
  5632  0106D6  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5633  0106D8  0100               	movlb	0	; () banked
  5634  0106DA  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5635  0106DC  0E00               	movlw	0
  5636  0106DE  0100               	movlb	0	; () banked
  5637  0106E0  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5638  0106E2  0100               	movlb	0	; () banked
  5639  0106E4  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5643  0106E6  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5644  0106EA  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5645  0106EE  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5646  0106F2  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5647  0106F6  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5648  0106FA  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5649  0106FE  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5650  010702  0100               	movlb	0	; () banked
  5651  010704  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5652  010706  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5653  01070A  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5654  01070E  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5655  010712  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5659  010716  C07A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5663  01071A  0100               	movlb	0	; () banked
  5664  01071C  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5665  01071E  D003               	goto	l503
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5669  010720  010F               	movlb	15	; () banked
  5670  010722  8109               	bsf	9,0,b	;volatile
  5671  010724  D002               	goto	l504
  5672  010726                     l503:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 927: else
  5676                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5677  010726  010F               	movlb	15	; () banked
  5678  010728  9109               	bcf	9,0,b	;volatile
  5679  01072A                     l504:
  5680                           
  5681                           ; BSR set to: 15
  5682                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5683  01072A  0100               	movlb	0	; () banked
  5684  01072C  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5685  01072E  D003               	goto	l505
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5689  010730  010F               	movlb	15	; () banked
  5690  010732  8309               	bsf	9,1,b	;volatile
  5691  010734  D002               	goto	l506
  5692  010736                     l505:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 932: else
  5696                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5697  010736  010F               	movlb	15	; () banked
  5698  010738  9309               	bcf	9,1,b	;volatile
  5699  01073A                     l506:
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5703  01073A  0100               	movlb	0	; () banked
  5704  01073C  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5705  01073E  D003               	goto	l507
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5709  010740  010F               	movlb	15	; () banked
  5710  010742  8B09               	bsf	9,5,b	;volatile
  5711  010744  D002               	goto	l508
  5712  010746                     l507:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 937: else
  5716                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5717  010746  010F               	movlb	15	; () banked
  5718  010748  9B09               	bcf	9,5,b	;volatile
  5719  01074A                     l508:
  5720                           
  5721                           ; BSR set to: 15
  5722                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5723  01074A  0100               	movlb	0	; () banked
  5724  01074C  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5725  01074E  D003               	goto	l509
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5729  010750  010F               	movlb	15	; () banked
  5730  010752  8D09               	bsf	9,6,b	;volatile
  5731  010754  D002               	goto	l510
  5732  010756                     l509:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 942: else
  5736                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5737  010756  010F               	movlb	15	; () banked
  5738  010758  9D09               	bcf	9,6,b	;volatile
  5739  01075A                     l510:
  5740                           
  5741                           ; BSR set to: 15
  5742                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5743  01075A  0100               	movlb	0	; () banked
  5744  01075C  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5745  01075E  D003               	goto	l511
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5749  010760  010F               	movlb	15	; () banked
  5750  010762  8F09               	bsf	9,7,b	;volatile
  5751  010764  D002               	goto	l5677
  5752  010766                     l511:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;inc\CANlib.h: 947: else
  5756                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5757  010766  010F               	movlb	15	; () banked
  5758  010768  9F09               	bcf	9,7,b	;volatile
  5759  01076A                     l5677:
  5760                           
  5761                           ; BSR set to: 15
  5762                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5763  01076A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5764  01076E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5765  010772  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5766  010776  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5767  01077A  0E16               	movlw	22
  5768  01077C  D006               	goto	u6810
  5769  01077E                     u6815:
  5770  01077E  0100               	movlb	0	; () banked
  5771  010780  90D8               	bcf	status,0,c
  5772  010782  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5773  010784  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5774  010786  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5775  010788  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5776  01078A                     u6810:
  5777  01078A  2EE8               	decfsz	wreg,f,c
  5778  01078C  D7F8               	goto	u6815
  5779  01078E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5780  010792  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5781  010796  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5782  01079A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5786  01079E  0100               	movlb	0	; () banked
  5787  0107A0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5788  0107A2  0100               	movlb	0	; () banked
  5789  0107A4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5790  0107A6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5791  0107A8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5792  0107AA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5796  0107AC  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5797  0107B0                     l5683:
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;inc\CANlib.h: 953: }
  5801                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5802  0107B0  0E03               	movlw	3
  5803  0107B2  0100               	movlb	0	; () banked
  5804  0107B4  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5805  0107B6  A4D8               	btfss	status,2,c
  5806  0107B8  D089               	goto	l5717
  5807                           
  5808                           ; BSR set to: 0
  5809  0107BA  0EF7               	movlw	247
  5810  0107BC  0100               	movlb	0	; () banked
  5811  0107BE  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5812  0107C0  A4D8               	btfss	status,2,c
  5813  0107C2  D084               	goto	l5717
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;inc\CANlib.h: 956: {
  5817                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5818  0107C4  010F               	movlb	15	; () banked
  5819  0107C6  870D               	bsf	13,3,b	;volatile
  5820                           
  5821                           ; BSR set to: 15
  5822                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5823  0107C8  0100               	movlb	0	; () banked
  5824  0107CA  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5825  0107CC  0100               	movlb	0	; () banked
  5826  0107CE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5827  0107D0  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5828  0107D2  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5829  0107D4  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5833  0107D6  C07A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5837  0107DA  0E00               	movlw	0
  5838  0107DC  0100               	movlb	0	; () banked
  5839  0107DE  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5840  0107E0  0100               	movlb	0	; () banked
  5841  0107E2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5842  0107E4  0EFF               	movlw	255
  5843  0107E6  0100               	movlb	0	; () banked
  5844  0107E8  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5845  0107EA  0100               	movlb	0	; () banked
  5846  0107EC  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5847  0107EE  0E00               	movlw	0
  5848  0107F0  0100               	movlb	0	; () banked
  5849  0107F2  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5850  0107F4  0100               	movlb	0	; () banked
  5851  0107F6  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5852  0107F8  0E00               	movlw	0
  5853  0107FA  0100               	movlb	0	; () banked
  5854  0107FC  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5855  0107FE  0100               	movlb	0	; () banked
  5856  010800  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5860  010802  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5861  010806  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5862  01080A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5863  01080E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5864  010812  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5865  010816  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5866  01081A  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5867  01081E  0100               	movlb	0	; () banked
  5868  010820  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5869  010822  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5870  010826  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5871  01082A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5872  01082E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5876  010832  C07A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5880  010836  0100               	movlb	0	; () banked
  5881  010838  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5882  01083A  D003               	goto	l514
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5886  01083C  010F               	movlb	15	; () banked
  5887  01083E  810D               	bsf	13,0,b	;volatile
  5888  010840  D002               	goto	l515
  5889  010842                     l514:
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;inc\CANlib.h: 968: else
  5893                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5894  010842  010F               	movlb	15	; () banked
  5895  010844  910D               	bcf	13,0,b	;volatile
  5896  010846                     l515:
  5897                           
  5898                           ; BSR set to: 15
  5899                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5900  010846  0100               	movlb	0	; () banked
  5901  010848  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5902  01084A  D003               	goto	l516
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5906  01084C  010F               	movlb	15	; () banked
  5907  01084E  830D               	bsf	13,1,b	;volatile
  5908  010850  D002               	goto	l517
  5909  010852                     l516:
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 973: else
  5913                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5914  010852  010F               	movlb	15	; () banked
  5915  010854  930D               	bcf	13,1,b	;volatile
  5916  010856                     l517:
  5917                           
  5918                           ; BSR set to: 15
  5919                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5920  010856  0100               	movlb	0	; () banked
  5921  010858  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5922  01085A  D003               	goto	l518
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5926  01085C  010F               	movlb	15	; () banked
  5927  01085E  8B0D               	bsf	13,5,b	;volatile
  5928  010860  D002               	goto	l519
  5929  010862                     l518:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;inc\CANlib.h: 978: else
  5933                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5934  010862  010F               	movlb	15	; () banked
  5935  010864  9B0D               	bcf	13,5,b	;volatile
  5936  010866                     l519:
  5937                           
  5938                           ; BSR set to: 15
  5939                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5940  010866  0100               	movlb	0	; () banked
  5941  010868  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5942  01086A  D003               	goto	l520
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5946  01086C  010F               	movlb	15	; () banked
  5947  01086E  8D0D               	bsf	13,6,b	;volatile
  5948  010870  D002               	goto	l521
  5949  010872                     l520:
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;inc\CANlib.h: 983: else
  5953                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5954  010872  010F               	movlb	15	; () banked
  5955  010874  9D0D               	bcf	13,6,b	;volatile
  5956  010876                     l521:
  5957                           
  5958                           ; BSR set to: 15
  5959                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5960  010876  0100               	movlb	0	; () banked
  5961  010878  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5962  01087A  D003               	goto	l522
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5966  01087C  010F               	movlb	15	; () banked
  5967  01087E  8F0D               	bsf	13,7,b	;volatile
  5968  010880  D002               	goto	l5711
  5969  010882                     l522:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 988: else
  5973                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5974  010882  010F               	movlb	15	; () banked
  5975  010884  9F0D               	bcf	13,7,b	;volatile
  5976  010886                     l5711:
  5977                           
  5978                           ; BSR set to: 15
  5979                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5980  010886  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5981  01088A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5982  01088E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5983  010892  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5984  010896  0E16               	movlw	22
  5985  010898  D006               	goto	u6890
  5986  01089A                     u6895:
  5987  01089A  0100               	movlb	0	; () banked
  5988  01089C  90D8               	bcf	status,0,c
  5989  01089E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5990  0108A0  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5991  0108A2  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5992  0108A4  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5993  0108A6                     u6890:
  5994  0108A6  2EE8               	decfsz	wreg,f,c
  5995  0108A8  D7F8               	goto	u6895
  5996  0108AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5997  0108AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5998  0108B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5999  0108B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6003  0108BA  0100               	movlb	0	; () banked
  6004  0108BC  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6005  0108BE  0100               	movlb	0	; () banked
  6006  0108C0  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6007  0108C2  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6008  0108C4  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6009  0108C6  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6013  0108C8  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6014  0108CC                     l5717:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;inc\CANlib.h: 994: }
  6018                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6019  0108CC  0E04               	movlw	4
  6020  0108CE  0100               	movlb	0	; () banked
  6021  0108D0  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6022  0108D2  A4D8               	btfss	status,2,c
  6023  0108D4  D089               	goto	l5751
  6024                           
  6025                           ; BSR set to: 0
  6026  0108D6  0EF7               	movlw	247
  6027  0108D8  0100               	movlb	0	; () banked
  6028  0108DA  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6029  0108DC  A4D8               	btfss	status,2,c
  6030  0108DE  D084               	goto	l5751
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;inc\CANlib.h: 997: {
  6034                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6035  0108E0  010F               	movlb	15	; () banked
  6036  0108E2  8711               	bsf	17,3,b	;volatile
  6037                           
  6038                           ; BSR set to: 15
  6039                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6040  0108E4  0100               	movlb	0	; () banked
  6041  0108E6  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6042  0108E8  0100               	movlb	0	; () banked
  6043  0108EA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6044  0108EC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6045  0108EE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6046  0108F0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6050  0108F2  C07A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6054  0108F6  0E00               	movlw	0
  6055  0108F8  0100               	movlb	0	; () banked
  6056  0108FA  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6057  0108FC  0100               	movlb	0	; () banked
  6058  0108FE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6059  010900  0EFF               	movlw	255
  6060  010902  0100               	movlb	0	; () banked
  6061  010904  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6062  010906  0100               	movlb	0	; () banked
  6063  010908  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6064  01090A  0E00               	movlw	0
  6065  01090C  0100               	movlb	0	; () banked
  6066  01090E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6067  010910  0100               	movlb	0	; () banked
  6068  010912  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6069  010914  0E00               	movlw	0
  6070  010916  0100               	movlb	0	; () banked
  6071  010918  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6072  01091A  0100               	movlb	0	; () banked
  6073  01091C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6077  01091E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6078  010922  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6079  010926  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6080  01092A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6081  01092E  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6082  010932  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6083  010936  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6084  01093A  0100               	movlb	0	; () banked
  6085  01093C  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6086  01093E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6087  010942  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6088  010946  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6089  01094A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6093  01094E  C07A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6097  010952  0100               	movlb	0	; () banked
  6098  010954  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6099  010956  D003               	goto	l525
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6103  010958  010F               	movlb	15	; () banked
  6104  01095A  8111               	bsf	17,0,b	;volatile
  6105  01095C  D002               	goto	l526
  6106  01095E                     l525:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;inc\CANlib.h: 1009: else
  6110                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6111  01095E  010F               	movlb	15	; () banked
  6112  010960  9111               	bcf	17,0,b	;volatile
  6113  010962                     l526:
  6114                           
  6115                           ; BSR set to: 15
  6116                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6117  010962  0100               	movlb	0	; () banked
  6118  010964  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6119  010966  D003               	goto	l527
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6123  010968  010F               	movlb	15	; () banked
  6124  01096A  8311               	bsf	17,1,b	;volatile
  6125  01096C  D002               	goto	l528
  6126  01096E                     l527:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;inc\CANlib.h: 1014: else
  6130                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6131  01096E  010F               	movlb	15	; () banked
  6132  010970  9311               	bcf	17,1,b	;volatile
  6133  010972                     l528:
  6134                           
  6135                           ; BSR set to: 15
  6136                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6137  010972  0100               	movlb	0	; () banked
  6138  010974  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6139  010976  D003               	goto	l529
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6143  010978  010F               	movlb	15	; () banked
  6144  01097A  8B11               	bsf	17,5,b	;volatile
  6145  01097C  D002               	goto	l530
  6146  01097E                     l529:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;inc\CANlib.h: 1019: else
  6150                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6151  01097E  010F               	movlb	15	; () banked
  6152  010980  9B11               	bcf	17,5,b	;volatile
  6153  010982                     l530:
  6154                           
  6155                           ; BSR set to: 15
  6156                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6157  010982  0100               	movlb	0	; () banked
  6158  010984  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6159  010986  D003               	goto	l531
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6163  010988  010F               	movlb	15	; () banked
  6164  01098A  8D11               	bsf	17,6,b	;volatile
  6165  01098C  D002               	goto	l532
  6166  01098E                     l531:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;inc\CANlib.h: 1024: else
  6170                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6171  01098E  010F               	movlb	15	; () banked
  6172  010990  9D11               	bcf	17,6,b	;volatile
  6173  010992                     l532:
  6174                           
  6175                           ; BSR set to: 15
  6176                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6177  010992  0100               	movlb	0	; () banked
  6178  010994  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6179  010996  D003               	goto	l533
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6183  010998  010F               	movlb	15	; () banked
  6184  01099A  8F11               	bsf	17,7,b	;volatile
  6185  01099C  D002               	goto	l5745
  6186  01099E                     l533:
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;inc\CANlib.h: 1029: else
  6190                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6191  01099E  010F               	movlb	15	; () banked
  6192  0109A0  9F11               	bcf	17,7,b	;volatile
  6193  0109A2                     l5745:
  6194                           
  6195                           ; BSR set to: 15
  6196                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6197  0109A2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6198  0109A6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6199  0109AA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6200  0109AE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6201  0109B2  0E16               	movlw	22
  6202  0109B4  D006               	goto	u6970
  6203  0109B6                     u6975:
  6204  0109B6  0100               	movlb	0	; () banked
  6205  0109B8  90D8               	bcf	status,0,c
  6206  0109BA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6207  0109BC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6208  0109BE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6209  0109C0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6210  0109C2                     u6970:
  6211  0109C2  2EE8               	decfsz	wreg,f,c
  6212  0109C4  D7F8               	goto	u6975
  6213  0109C6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6214  0109CA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6215  0109CE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6216  0109D2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6220  0109D6  0100               	movlb	0	; () banked
  6221  0109D8  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6222  0109DA  0100               	movlb	0	; () banked
  6223  0109DC  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6224  0109DE  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6225  0109E0  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6226  0109E2  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6230  0109E4  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6231  0109E8                     l5751:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;inc\CANlib.h: 1035: }
  6235                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6236  0109E8  0E05               	movlw	5
  6237  0109EA  0100               	movlb	0	; () banked
  6238  0109EC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6239  0109EE  A4D8               	btfss	status,2,c
  6240  0109F0  0012               	return	
  6241                           
  6242                           ; BSR set to: 0
  6243  0109F2  0EF7               	movlw	247
  6244  0109F4  0100               	movlb	0	; () banked
  6245  0109F6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6246  0109F8  A4D8               	btfss	status,2,c
  6247  0109FA  0012               	return	
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;inc\CANlib.h: 1038: {
  6251                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6252  0109FC  010F               	movlb	15	; () banked
  6253  0109FE  8715               	bsf	21,3,b	;volatile
  6254                           
  6255                           ; BSR set to: 15
  6256                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6257  010A00  0100               	movlb	0	; () banked
  6258  010A02  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6259  010A04  0100               	movlb	0	; () banked
  6260  010A06  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6261  010A08  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6262  010A0A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6263  010A0C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6267  010A0E  C07A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6271  010A12  0E00               	movlw	0
  6272  010A14  0100               	movlb	0	; () banked
  6273  010A16  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6274  010A18  0100               	movlb	0	; () banked
  6275  010A1A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6276  010A1C  0EFF               	movlw	255
  6277  010A1E  0100               	movlb	0	; () banked
  6278  010A20  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6279  010A22  0100               	movlb	0	; () banked
  6280  010A24  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6281  010A26  0E00               	movlw	0
  6282  010A28  0100               	movlb	0	; () banked
  6283  010A2A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6284  010A2C  0100               	movlb	0	; () banked
  6285  010A2E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6286  010A30  0E00               	movlw	0
  6287  010A32  0100               	movlb	0	; () banked
  6288  010A34  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6289  010A36  0100               	movlb	0	; () banked
  6290  010A38  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6294  010A3A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6295  010A3E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6296  010A42  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6297  010A46  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6298  010A4A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6299  010A4E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6300  010A52  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6301  010A56  0100               	movlb	0	; () banked
  6302  010A58  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6303  010A5A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6304  010A5E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6305  010A62  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6306  010A66  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6310  010A6A  C07A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6314  010A6E  0100               	movlb	0	; () banked
  6315  010A70  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6316  010A72  D003               	goto	l536
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6320  010A74  010F               	movlb	15	; () banked
  6321  010A76  8115               	bsf	21,0,b	;volatile
  6322  010A78  D002               	goto	l537
  6323  010A7A                     l536:
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;inc\CANlib.h: 1050: else
  6327                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6328  010A7A  010F               	movlb	15	; () banked
  6329  010A7C  9115               	bcf	21,0,b	;volatile
  6330  010A7E                     l537:
  6331                           
  6332                           ; BSR set to: 15
  6333                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6334  010A7E  0100               	movlb	0	; () banked
  6335  010A80  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6336  010A82  D003               	goto	l538
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6340  010A84  010F               	movlb	15	; () banked
  6341  010A86  8315               	bsf	21,1,b	;volatile
  6342  010A88  D002               	goto	l539
  6343  010A8A                     l538:
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;inc\CANlib.h: 1055: else
  6347                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6348  010A8A  010F               	movlb	15	; () banked
  6349  010A8C  9315               	bcf	21,1,b	;volatile
  6350  010A8E                     l539:
  6351                           
  6352                           ; BSR set to: 15
  6353                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6354  010A8E  0100               	movlb	0	; () banked
  6355  010A90  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6356  010A92  D003               	goto	l540
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6360  010A94  010F               	movlb	15	; () banked
  6361  010A96  8B15               	bsf	21,5,b	;volatile
  6362  010A98  D002               	goto	l541
  6363  010A9A                     l540:
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;inc\CANlib.h: 1060: else
  6367                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6368  010A9A  010F               	movlb	15	; () banked
  6369  010A9C  9B15               	bcf	21,5,b	;volatile
  6370  010A9E                     l541:
  6371                           
  6372                           ; BSR set to: 15
  6373                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6374  010A9E  0100               	movlb	0	; () banked
  6375  010AA0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6376  010AA2  D003               	goto	l542
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6380  010AA4  010F               	movlb	15	; () banked
  6381  010AA6  8D15               	bsf	21,6,b	;volatile
  6382  010AA8  D002               	goto	l543
  6383  010AAA                     l542:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;inc\CANlib.h: 1065: else
  6387                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6388  010AAA  010F               	movlb	15	; () banked
  6389  010AAC  9D15               	bcf	21,6,b	;volatile
  6390  010AAE                     l543:
  6391                           
  6392                           ; BSR set to: 15
  6393                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6394  010AAE  0100               	movlb	0	; () banked
  6395  010AB0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6396  010AB2  D003               	goto	l544
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6400  010AB4  010F               	movlb	15	; () banked
  6401  010AB6  8F15               	bsf	21,7,b	;volatile
  6402  010AB8  D002               	goto	l5779
  6403  010ABA                     l544:
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;inc\CANlib.h: 1070: else
  6407                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6408  010ABA  010F               	movlb	15	; () banked
  6409  010ABC  9F15               	bcf	21,7,b	;volatile
  6410  010ABE                     l5779:
  6411                           
  6412                           ; BSR set to: 15
  6413                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6414  010ABE  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6415  010AC2  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6416  010AC6  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6417  010ACA  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6418  010ACE  0E16               	movlw	22
  6419  010AD0  D006               	goto	u7050
  6420  010AD2                     u7055:
  6421  010AD2  0100               	movlb	0	; () banked
  6422  010AD4  90D8               	bcf	status,0,c
  6423  010AD6  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6424  010AD8  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6425  010ADA  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6426  010ADC  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6427  010ADE                     u7050:
  6428  010ADE  2EE8               	decfsz	wreg,f,c
  6429  010AE0  D7F8               	goto	u7055
  6430  010AE2  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6431  010AE6  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6432  010AEA  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6433  010AEE  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6437  010AF2  0100               	movlb	0	; () banked
  6438  010AF4  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6439  010AF6  0100               	movlb	0	; () banked
  6440  010AF8  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6441  010AFA  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6442  010AFC  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6443  010AFE  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6447  010B00  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6448  010B04  0012               	return	
  6449  010B06                     __end_of_CANSetFilter:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           intcon	equ	0xFF2
  6456                           postinc0	equ	0xFEE
  6457                           wreg	equ	0xFE8
  6458                           status	equ	0xFD8
  6459                           
  6460 ;; *************** function _CANOperationMode *****************
  6461 ;; Defined at:
  6462 ;;		line 206 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  mode            1    wreg     enum E16881
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  mode            1   16[BANK0 ] enum E16881
  6467 ;; Return value:  Size  Location     Type
  6468 ;;		None               void
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, status,0
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;Total ram usage:        1 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    3
  6483 ;; This function calls:
  6484 ;;		Nothing
  6485 ;; This function is called by:
  6486 ;;		_CANInitialize
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text5
  6491  01658C                     __ptext5:
  6492                           	opt stack 0
  6493  01658C                     _CANOperationMode:
  6494                           	opt stack 25
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;incstack = 0
  6498                           ;CANOperationMode@mode stored from wreg
  6499  01658C  0100               	movlb	0	; () banked
  6500  01658E  6F70               	movwf	CANOperationMode@mode& (0+255),b
  6501                           
  6502                           ;inc\CANlib.h: 208: CANCON = mode;
  6503  016590  C070  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6504  016594                     l5375:
  6505  016594  506E               	movf	3950,w,c	;volatile
  6506  016596  0BE0               	andlw	224
  6507  016598  0100               	movlb	0	; () banked
  6508  01659A  1970               	xorwf	CANOperationMode@mode& (0+255),w,b
  6509  01659C  B4D8               	btfsc	status,2,c
  6510  01659E  0012               	return	
  6511  0165A0  D7F9               	goto	l5375
  6512  0165A2                     __end_of_CANOperationMode:
  6513                           	opt stack 0
  6514                           tblptru	equ	0xFF8
  6515                           tblptrh	equ	0xFF7
  6516                           tblptrl	equ	0xFF6
  6517                           tablat	equ	0xFF5
  6518                           intcon	equ	0xFF2
  6519                           postinc0	equ	0xFEE
  6520                           wreg	equ	0xFE8
  6521                           status	equ	0xFD8
  6522                           
  6523 ;; *************** function _PWR_Button_Polling *****************
  6524 ;; Defined at:
  6525 ;;		line 571 in file "RemoteCan.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;		None               void
  6532 ;; Registers used:
  6533 ;;		None
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;Total ram usage:        0 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    3
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_main
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text6
  6554  01651C                     __ptext6:
  6555                           	opt stack 0
  6556  01651C                     _PWR_Button_Polling:
  6557                           	opt stack 27
  6558                           
  6559                           ;RemoteCan.c: 572: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;incstack = 0
  6563  01651C  AA81               	btfss	3969,5,c	;volatile
  6564  01651E  D002               	goto	l921
  6565  016520  B44C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6566  016522  0012               	return	
  6567  016524                     l921:
  6568                           
  6569                           ;RemoteCan.c: 573: wait_low_1 = 0;
  6570  016524  944C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6571                           
  6572                           ;RemoteCan.c: 574: if (PORTBbits.RB5 == 1) {
  6573  016526  AA81               	btfss	3969,5,c	;volatile
  6574  016528  0012               	return	
  6575                           
  6576                           ;RemoteCan.c: 575: power_switch = ~power_switch;
  6577  01652A  BC4B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6578  01652C  D002               	goto	u9010
  6579  01652E  8C4B               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6580  016530  D001               	goto	u9025
  6581  016532                     u9010:
  6582  016532  9C4B               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6583  016534                     u9025:
  6584                           
  6585                           ;RemoteCan.c: 576: wait_low_1 = 1;
  6586  016534  844C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6587  016536  0012               	return	
  6588  016538                     __end_of_PWR_Button_Polling:
  6589                           	opt stack 0
  6590                           tblptru	equ	0xFF8
  6591                           tblptrh	equ	0xFF7
  6592                           tblptrl	equ	0xFF6
  6593                           tablat	equ	0xFF5
  6594                           intcon	equ	0xFF2
  6595                           postinc0	equ	0xFEE
  6596                           wreg	equ	0xFE8
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _LCD_Parking *****************
  6600 ;; Defined at:
  6601 ;;		line 532 in file "RemoteCan.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;		None               void
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;Total ram usage:        0 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    9
  6622 ;; This function calls:
  6623 ;;		_LCD_clear
  6624 ;;		_LCD_goto_line
  6625 ;;		_LCD_initialize
  6626 ;;		_LCD_write_message
  6627 ;; This function is called by:
  6628 ;;		_main
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text7
  6633  015F22                     __ptext7:
  6634                           	opt stack 0
  6635  015F22                     _LCD_Parking:
  6636                           	opt stack 21
  6637                           
  6638                           ;RemoteCan.c: 533: LCD_initialize(16);
  6639                           
  6640                           ;incstack = 0
  6641  015F22  0E10               	movlw	16
  6642  015F24  ECB5  F0AA         	call	_LCD_initialize
  6643                           
  6644                           ;RemoteCan.c: 534: LCD_clear();
  6645  015F28  EC1B  F0B2         	call	_LCD_clear	;wreg free
  6646                           
  6647                           ;RemoteCan.c: 535: LCD_goto_line(1);
  6648  015F2C  0E01               	movlw	1
  6649  015F2E  ECF2  F0AB         	call	_LCD_goto_line
  6650                           
  6651                           ;RemoteCan.c: 536: LCD_write_message("= PARKING MESSAGES =");
  6652  015F32  0E40               	movlw	low STR_16
  6653  015F34  0100               	movlb	0	; () banked
  6654  015F36  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6655  015F38  0EFF               	movlw	high STR_16
  6656  015F3A  0100               	movlb	0	; () banked
  6657  015F3C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6658  015F3E  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6659                           
  6660                           ;RemoteCan.c: 537: LCD_goto_line(2);
  6661  015F42  0E02               	movlw	2
  6662  015F44  ECF2  F0AB         	call	_LCD_goto_line
  6663                           
  6664                           ;RemoteCan.c: 538: LCD_write_message("=    Parking in    =");
  6665  015F48  0E16               	movlw	low STR_25
  6666  015F4A  0100               	movlb	0	; () banked
  6667  015F4C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6668  015F4E  0EFF               	movlw	high STR_25
  6669  015F50  0100               	movlb	0	; () banked
  6670  015F52  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6671  015F54  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6672                           
  6673                           ;RemoteCan.c: 539: LCD_goto_line(3);
  6674  015F58  0E03               	movlw	3
  6675  015F5A  ECF2  F0AB         	call	_LCD_goto_line
  6676                           
  6677                           ;RemoteCan.c: 540: LCD_write_message("=    progress...   =");
  6678  015F5E  0E2B               	movlw	low STR_26
  6679  015F60  0100               	movlb	0	; () banked
  6680  015F62  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6681  015F64  0EFF               	movlw	high STR_26
  6682  015F66  0100               	movlb	0	; () banked
  6683  015F68  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6684  015F6A  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6685                           
  6686                           ;RemoteCan.c: 541: LCD_goto_line(4);
  6687  015F6E  0E04               	movlw	4
  6688  015F70  ECF2  F0AB         	call	_LCD_goto_line
  6689                           
  6690                           ;RemoteCan.c: 542: LCD_write_message("====================");
  6691  015F74  0E7F               	movlw	low STR_1
  6692  015F76  0100               	movlb	0	; () banked
  6693  015F78  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6694  015F7A  0EFF               	movlw	high STR_1
  6695  015F7C  0100               	movlb	0	; () banked
  6696  015F7E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6697  015F80  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6698  015F84  0012               	return		;funcret
  6699  015F86                     __end_of_LCD_Parking:
  6700                           	opt stack 0
  6701                           tblptru	equ	0xFF8
  6702                           tblptrh	equ	0xFF7
  6703                           tblptrl	equ	0xFF6
  6704                           tablat	equ	0xFF5
  6705                           intcon	equ	0xFF2
  6706                           postinc0	equ	0xFEE
  6707                           wreg	equ	0xFE8
  6708                           status	equ	0xFD8
  6709                           
  6710 ;; *************** function _LCD_Park *****************
  6711 ;; Defined at:
  6712 ;;		line 519 in file "RemoteCan.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;		None               void
  6719 ;; Registers used:
  6720 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;Total ram usage:        0 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    9
  6733 ;; This function calls:
  6734 ;;		_LCD_clear
  6735 ;;		_LCD_goto_line
  6736 ;;		_LCD_initialize
  6737 ;;		_LCD_write_message
  6738 ;; This function is called by:
  6739 ;;		_main
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text8
  6744  015F86                     __ptext8:
  6745                           	opt stack 0
  6746  015F86                     _LCD_Park:
  6747                           	opt stack 21
  6748                           
  6749                           ;RemoteCan.c: 520: LCD_initialize(16);
  6750                           
  6751                           ;incstack = 0
  6752  015F86  0E10               	movlw	16
  6753  015F88  ECB5  F0AA         	call	_LCD_initialize
  6754                           
  6755                           ;RemoteCan.c: 521: LCD_clear();
  6756  015F8C  EC1B  F0B2         	call	_LCD_clear	;wreg free
  6757                           
  6758                           ;RemoteCan.c: 522: LCD_goto_line(1);
  6759  015F90  0E01               	movlw	1
  6760  015F92  ECF2  F0AB         	call	_LCD_goto_line
  6761                           
  6762                           ;RemoteCan.c: 523: LCD_write_message("= PARKING MESSAGES =");
  6763  015F96  0E40               	movlw	low STR_16
  6764  015F98  0100               	movlb	0	; () banked
  6765  015F9A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6766  015F9C  0EFF               	movlw	high STR_16
  6767  015F9E  0100               	movlb	0	; () banked
  6768  015FA0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6769  015FA2  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6770                           
  6771                           ;RemoteCan.c: 524: LCD_goto_line(2);
  6772  015FA6  0E02               	movlw	2
  6773  015FA8  ECF2  F0AB         	call	_LCD_goto_line
  6774                           
  6775                           ;RemoteCan.c: 525: LCD_write_message("- Distance REACHED -");
  6776  015FAC  0EEC               	movlw	low STR_21
  6777  015FAE  0100               	movlb	0	; () banked
  6778  015FB0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6779  015FB2  0EFE               	movlw	high STR_21
  6780  015FB4  0100               	movlb	0	; () banked
  6781  015FB6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6782  015FB8  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6783                           
  6784                           ;RemoteCan.c: 526: LCD_goto_line(3);
  6785  015FBC  0E03               	movlw	3
  6786  015FBE  ECF2  F0AB         	call	_LCD_goto_line
  6787                           
  6788                           ;RemoteCan.c: 527: LCD_write_message("Press the BUTTON to ");
  6789  015FC2  0EC2               	movlw	low STR_22
  6790  015FC4  0100               	movlb	0	; () banked
  6791  015FC6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6792  015FC8  0EFE               	movlw	high STR_22
  6793  015FCA  0100               	movlb	0	; () banked
  6794  015FCC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6795  015FCE  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6796                           
  6797                           ;RemoteCan.c: 528: LCD_goto_line(4);
  6798  015FD2  0E04               	movlw	4
  6799  015FD4  ECF2  F0AB         	call	_LCD_goto_line
  6800                           
  6801                           ;RemoteCan.c: 529: LCD_write_message("   start parking    ");
  6802  015FD8  0E6E               	movlw	low STR_23
  6803  015FDA  0100               	movlb	0	; () banked
  6804  015FDC  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6805  015FDE  0EFE               	movlw	high STR_23
  6806  015FE0  0100               	movlb	0	; () banked
  6807  015FE2  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6808  015FE4  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6809  015FE8  0012               	return		;funcret
  6810  015FEA                     __end_of_LCD_Park:
  6811                           	opt stack 0
  6812                           tblptru	equ	0xFF8
  6813                           tblptrh	equ	0xFF7
  6814                           tblptrl	equ	0xFF6
  6815                           tablat	equ	0xFF5
  6816                           intcon	equ	0xFF2
  6817                           postinc0	equ	0xFEE
  6818                           wreg	equ	0xFE8
  6819                           status	equ	0xFD8
  6820                           
  6821 ;; *************** function _LCD_Handler *****************
  6822 ;; Defined at:
  6823 ;;		line 448 in file "RemoteCan.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;		None
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;		None               void
  6830 ;; Registers used:
  6831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6841 ;;Total ram usage:        0 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:   10
  6844 ;; This function calls:
  6845 ;;		_CANisTxReady
  6846 ;;		_CANsendMessage
  6847 ;;		_LCD_clear
  6848 ;;		_LCD_goto_line
  6849 ;;		_LCD_goto_xy
  6850 ;;		_LCD_initialize
  6851 ;;		_LCD_write_integer
  6852 ;;		_LCD_write_message
  6853 ;;		_LCD_write_string
  6854 ;;		___fldiv
  6855 ;;		___xxtofl
  6856 ;;		_sprintf
  6857 ;; This function is called by:
  6858 ;;		_main
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text9
  6863  014F06                     __ptext9:
  6864                           	opt stack 0
  6865  014F06                     _LCD_Handler:
  6866                           	opt stack 20
  6867  014F06                     l9153:
  6868  014F06  EC5C  F0B2         	call	_CANisTxReady	;wreg free
  6869  014F0A  06E8               	decf	wreg,f,c
  6870  014F0C  A4D8               	btfss	status,2,c
  6871  014F0E  D7FB               	goto	l9153
  6872                           
  6873                           ;RemoteCan.c: 451: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  6874  014F10  0E08               	movlw	8
  6875  014F12  0100               	movlb	0	; () banked
  6876  014F14  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  6877  014F16  0E00               	movlw	0
  6878  014F18  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6879  014F1A  0E00               	movlw	0
  6880  014F1C  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6881  014F1E  0E00               	movlw	0
  6882  014F20  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6883  014F22  0E35               	movlw	low _data_speed
  6884  014F24  0100               	movlb	0	; () banked
  6885  014F26  6F74               	movwf	CANsendMessage@data& (0+255),b
  6886  014F28  0E01               	movlw	high _data_speed
  6887  014F2A  0100               	movlb	0	; () banked
  6888  014F2C  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  6889  014F2E  0E08               	movlw	8
  6890  014F30  0100               	movlb	0	; () banked
  6891  014F32  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  6892  014F34  0EFC               	movlw	252
  6893  014F36  0100               	movlb	0	; () banked
  6894  014F38  6F77               	movwf	CANsendMessage@flags& (0+255),b
  6895  014F3A  ECAC  F08D         	call	_CANsendMessage	;wreg free
  6896                           
  6897                           ;RemoteCan.c: 453: actual_speed_kmh = ((actual_speed) / 278.0);
  6898  014F3E  C0E2  F070         	movff	_actual_speed,___xxtofl@val	;volatile
  6899  014F42  C0E3  F071         	movff	_actual_speed+1,___xxtofl@val+1	;volatile
  6900  014F46  0100               	movlb	0	; () banked
  6901  014F48  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  6902  014F4A  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  6903  014F4C  0E00               	movlw	0
  6904  014F4E  ECD9  F0A4         	call	___xxtofl
  6905  014F52  C070  F07E         	movff	?___xxtofl,___fldiv@b
  6906  014F56  C071  F07F         	movff	?___xxtofl+1,___fldiv@b+1
  6907  014F5A  C072  F080         	movff	?___xxtofl+2,___fldiv@b+2
  6908  014F5E  C073  F081         	movff	?___xxtofl+3,___fldiv@b+3
  6909  014F62  0E00               	movlw	0
  6910  014F64  0100               	movlb	0	; () banked
  6911  014F66  6F82               	movwf	___fldiv@a& (0+255),b
  6912  014F68  0E00               	movlw	0
  6913  014F6A  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  6914  014F6C  0E8B               	movlw	139
  6915  014F6E  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  6916  014F70  0E43               	movlw	67
  6917  014F72  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  6918  014F74  EC74  F09E         	call	___fldiv	;wreg free
  6919  014F78  C07E  F008         	movff	?___fldiv,_actual_speed_kmh	;volatile
  6920  014F7C  C07F  F009         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  6921  014F80  C080  F00A         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  6922  014F84  C081  F00B         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  6923                           
  6924                           ;RemoteCan.c: 454: sprintf(str, "%.2f", actual_speed_kmh);
  6925  014F88  0E19               	movlw	low _str
  6926  014F8A  0100               	movlb	0	; () banked
  6927  014F8C  6FC2               	movwf	sprintf@sp& (0+255),b
  6928  014F8E  0E01               	movlw	high _str
  6929  014F90  0100               	movlb	0	; () banked
  6930  014F92  6FC3               	movwf	(sprintf@sp+1)& (0+255),b
  6931  014F94  0EFA               	movlw	low STR_5
  6932  014F96  0100               	movlb	0	; () banked
  6933  014F98  6FC4               	movwf	sprintf@f& (0+255),b
  6934  014F9A  0EFF               	movlw	high STR_5
  6935  014F9C  0100               	movlb	0	; () banked
  6936  014F9E  6FC5               	movwf	(sprintf@f+1)& (0+255),b
  6937  014FA0  C008  F0C6         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  6938  014FA4  C009  F0C7         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  6939  014FA8  C00A  F0C8         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  6940  014FAC  C00B  F0C9         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  6941  014FB0  EC83  F085         	call	_sprintf	;wreg free
  6942                           
  6943                           ;RemoteCan.c: 455: str[11] = '\0';
  6944  014FB4  0E00               	movlw	0
  6945  014FB6  0101               	movlb	1	; () banked
  6946  014FB8  6F24               	movwf	(_str+11)& (0+255),b	;volatile
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;RemoteCan.c: 457: if (display_refresh == 1) {
  6950  014FBA  A44B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6951  014FBC  D032               	goto	l9181
  6952                           
  6953                           ; BSR set to: 1
  6954                           ;RemoteCan.c: 458: LCD_initialize(16);
  6955  014FBE  0E10               	movlw	16
  6956  014FC0  ECB5  F0AA         	call	_LCD_initialize
  6957                           
  6958                           ;RemoteCan.c: 459: LCD_clear();
  6959  014FC4  EC1B  F0B2         	call	_LCD_clear	;wreg free
  6960                           
  6961                           ;RemoteCan.c: 460: LCD_goto_line(1);
  6962  014FC8  0E01               	movlw	1
  6963  014FCA  ECF2  F0AB         	call	_LCD_goto_line
  6964                           
  6965                           ;RemoteCan.c: 461: LCD_write_message("=== VEHICLE DATA ===");
  6966  014FCE  0E6A               	movlw	low STR_6
  6967  014FD0  0100               	movlb	0	; () banked
  6968  014FD2  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6969  014FD4  0EFF               	movlw	high STR_6
  6970  014FD6  0100               	movlb	0	; () banked
  6971  014FD8  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6972  014FDA  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6973                           
  6974                           ;RemoteCan.c: 462: LCD_goto_line(2);
  6975  014FDE  0E02               	movlw	2
  6976  014FE0  ECF2  F0AB         	call	_LCD_goto_line
  6977                           
  6978                           ;RemoteCan.c: 463: LCD_write_message("Direction: ");
  6979  014FE4  0EC8               	movlw	low STR_7
  6980  014FE6  0100               	movlb	0	; () banked
  6981  014FE8  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6982  014FEA  0EFF               	movlw	high STR_7
  6983  014FEC  0100               	movlb	0	; () banked
  6984  014FEE  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6985  014FF0  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6986                           
  6987                           ;RemoteCan.c: 464: LCD_goto_line(3);
  6988  014FF4  0E03               	movlw	3
  6989  014FF6  ECF2  F0AB         	call	_LCD_goto_line
  6990                           
  6991                           ;RemoteCan.c: 465: LCD_write_message("Speed: 0.00 Km/h");
  6992  014FFA  0EA9               	movlw	low STR_8
  6993  014FFC  0100               	movlb	0	; () banked
  6994  014FFE  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6995  015000  0EFF               	movlw	high STR_8
  6996  015002  0100               	movlb	0	; () banked
  6997  015004  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6998  015006  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  6999                           
  7000                           ;RemoteCan.c: 466: LCD_goto_line(4);
  7001  01500A  0E04               	movlw	4
  7002  01500C  ECF2  F0AB         	call	_LCD_goto_line
  7003                           
  7004                           ;RemoteCan.c: 470: LCD_write_message("Data: ");
  7005                           
  7006                           ;RemoteCan.c: 469: } else {
  7007                           
  7008                           ;RemoteCan.c: 468: LCD_write_message("Park assist: ");
  7009                           
  7010                           ;RemoteCan.c: 467: if (1 == 0) {
  7011  015010  0EE4               	movlw	low STR_10
  7012  015012  0100               	movlb	0	; () banked
  7013  015014  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7014  015016  0EFF               	movlw	high STR_10
  7015  015018  0100               	movlb	0	; () banked
  7016  01501A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7017  01501C  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  7018                           
  7019                           ;RemoteCan.c: 471: }
  7020                           ;RemoteCan.c: 472: display_refresh = 0;
  7021  015020  944B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7022  015022                     l9181:
  7023                           
  7024                           ;RemoteCan.c: 473: }
  7025                           ;RemoteCan.c: 476: LCD_goto_xy(12, 2);
  7026  015022  0E02               	movlw	2
  7027  015024  0100               	movlb	0	; () banked
  7028  015026  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7029  015028  0E0C               	movlw	12
  7030  01502A  EC9C  F0B2         	call	_LCD_goto_xy
  7031                           
  7032                           ;RemoteCan.c: 477: if (switch_position != 0) {
  7033  01502E  0100               	movlb	0	; () banked
  7034  015030  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  7035  015032  B4D8               	btfsc	status,2,c
  7036  015034  D016               	goto	l9191
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;RemoteCan.c: 478: if (dir == 1) {
  7040  015036  0100               	movlb	0	; () banked
  7041  015038  05E8               	decf	_dir& (0+255),w,b	;volatile
  7042  01503A  A4D8               	btfss	status,2,c
  7043  01503C  D009               	goto	l9189
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;RemoteCan.c: 479: LCD_write_message("FWD ");
  7047  01503E  0EF0               	movlw	low STR_11
  7048  015040  0100               	movlb	0	; () banked
  7049  015042  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7050  015044  0EFF               	movlw	high STR_11
  7051  015046  0100               	movlb	0	; () banked
  7052  015048  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7053  01504A  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  7054                           
  7055                           ;RemoteCan.c: 480: } else {
  7056  01504E  D011               	goto	l9193
  7057  015050                     l9189:
  7058                           
  7059                           ;RemoteCan.c: 481: LCD_write_message("BKWD");
  7060  015050  0EF5               	movlw	low STR_12
  7061  015052  0100               	movlb	0	; () banked
  7062  015054  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7063  015056  0EFF               	movlw	high STR_12
  7064  015058  0100               	movlb	0	; () banked
  7065  01505A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7066  01505C  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  7067                           
  7068                           ;RemoteCan.c: 482: }
  7069                           ;RemoteCan.c: 483: } else {
  7070  015060  D008               	goto	l9193
  7071  015062                     l9191:
  7072                           
  7073                           ;RemoteCan.c: 484: LCD_write_message("P   ");
  7074  015062  0EEB               	movlw	low STR_13
  7075  015064  0100               	movlb	0	; () banked
  7076  015066  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7077  015068  0EFF               	movlw	high STR_13
  7078  01506A  0100               	movlb	0	; () banked
  7079  01506C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7080  01506E  ECE8  F0B1         	call	_LCD_write_message	;wreg free
  7081  015072                     l9193:
  7082                           
  7083                           ;RemoteCan.c: 485: }
  7084                           ;RemoteCan.c: 488: LCD_goto_xy(8, 3);
  7085  015072  0E03               	movlw	3
  7086  015074  0100               	movlb	0	; () banked
  7087  015076  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7088  015078  0E08               	movlw	8
  7089  01507A  EC9C  F0B2         	call	_LCD_goto_xy
  7090                           
  7091                           ;RemoteCan.c: 489: LCD_write_string(str);
  7092  01507E  0E19               	movlw	low _str
  7093  015080  0100               	movlb	0	; () banked
  7094  015082  6F81               	movwf	LCD_write_string@buffer& (0+255),b
  7095  015084  0E01               	movlw	high _str
  7096  015086  0100               	movlb	0	; () banked
  7097  015088  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7098  01508A  EC49  F0B2         	call	_LCD_write_string	;wreg free
  7099                           
  7100                           ;RemoteCan.c: 501: LCD_goto_xy(7, 4);
  7101                           
  7102                           ;RemoteCan.c: 498: }
  7103                           ;RemoteCan.c: 499: } else {
  7104                           
  7105                           ;RemoteCan.c: 497: LCD_write_message("SEARCH ");
  7106                           
  7107                           ;RemoteCan.c: 496: } else {
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;RemoteCan.c: 495: LCD_write_message("OFF    ");
  7111                           
  7112                           ;RemoteCan.c: 494: if (parking_state == 0) {
  7113                           
  7114                           ;RemoteCan.c: 493: LCD_goto_xy(14, 4);
  7115                           
  7116                           ;RemoteCan.c: 491: if (1 == 0) {
  7117  01508E  0E04               	movlw	4
  7118  015090  0100               	movlb	0	; () banked
  7119  015092  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7120  015094  0E07               	movlw	7
  7121  015096  EC9C  F0B2         	call	_LCD_goto_xy
  7122                           
  7123                           ;RemoteCan.c: 502: LCD_write_integer(user_data, 0, 0x01);
  7124  01509A  C024  F088         	movff	_user_data,LCD_write_integer@value	;volatile
  7125  01509E  C025  F089         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7126  0150A2  0E00               	movlw	0
  7127  0150A4  0100               	movlb	0	; () banked
  7128  0150A6  6F8A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7129  0150A8  0E01               	movlw	1
  7130  0150AA  0100               	movlb	0	; () banked
  7131  0150AC  6F8B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7132  0150AE  ECA3  F0A6         	call	_LCD_write_integer	;wreg free
  7133  0150B2  0012               	return	
  7134  0150B4                     __end_of_LCD_Handler:
  7135                           	opt stack 0
  7136                           tblptru	equ	0xFF8
  7137                           tblptrh	equ	0xFF7
  7138                           tblptrl	equ	0xFF6
  7139                           tablat	equ	0xFF5
  7140                           intcon	equ	0xFF2
  7141                           postinc0	equ	0xFEE
  7142                           wreg	equ	0xFE8
  7143                           status	equ	0xFD8
  7144                           
  7145 ;; *************** function _sprintf *****************
  7146 ;; Defined at:
  7147 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  sp              2   98[BANK0 ] PTR unsigned char 
  7150 ;;		 -> str(12), 
  7151 ;;  f               2  100[BANK0 ] PTR const unsigned char 
  7152 ;;		 -> STR_5(5), 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  7155 ;;  tmpval          4   14[BANK1 ] struct .
  7156 ;;  val             4    8[BANK1 ] unsigned long 
  7157 ;;  cp              3    0        PTR const unsigned char 
  7158 ;;  prec            2   18[BANK1 ] int 
  7159 ;;  exp             2   12[BANK1 ] int 
  7160 ;;  flag            2    6[BANK1 ] unsigned short 
  7161 ;;  ap              2    4[BANK1 ] PTR void [1]
  7162 ;;		 -> ?_sprintf(2), 
  7163 ;;  len             2    0        unsigned int 
  7164 ;;  width           2    0        int 
  7165 ;;  c               1   24[BANK1 ] char 
  7166 ;;  d               1    0        unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  2   98[BANK0 ] int 
  7169 ;; Registers used:
  7170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7176 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;Total ram usage:       35 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    5
  7183 ;; This function calls:
  7184 ;;		___awdiv
  7185 ;;		___fladd
  7186 ;;		___flge
  7187 ;;		___flmul
  7188 ;;		___flneg
  7189 ;;		___flsub
  7190 ;;		___fltol
  7191 ;;		___lldiv
  7192 ;;		___llmod
  7193 ;;		___wmul
  7194 ;;		___xxtofl
  7195 ;;		__div_to_l_
  7196 ;;		__tdiv_to_l_
  7197 ;;		_fround
  7198 ;;		_isdigit
  7199 ;;		_scale
  7200 ;; This function is called by:
  7201 ;;		_LCD_Handler
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           	psect	text10
  7206  010B06                     __ptext10:
  7207                           	opt stack 0
  7208  010B06                     _sprintf:
  7209                           	opt stack 24
  7210                           
  7211                           ;doprnt.c: 494: va_list ap;
  7212                           ;doprnt.c: 499: signed char c;
  7213                           ;doprnt.c: 501: int width;
  7214                           ;doprnt.c: 504: int prec;
  7215                           ;doprnt.c: 508: unsigned short flag;
  7216                           ;doprnt.c: 515: char d;
  7217                           ;doprnt.c: 516: double fval;
  7218                           ;doprnt.c: 517: int exp;
  7219                           ;doprnt.c: 523: union {
  7220                           ;doprnt.c: 524: unsigned long vd;
  7221                           ;doprnt.c: 525: double integ;
  7222                           ;doprnt.c: 526: } tmpval;
  7223                           ;doprnt.c: 528: unsigned long val;
  7224                           ;doprnt.c: 529: unsigned len;
  7225                           ;doprnt.c: 530: const char * cp;
  7226                           ;doprnt.c: 533: *ap = __va_start();
  7227                           
  7228                           ;incstack = 0
  7229  010B06  0EC6               	movlw	low (?_sprintf+4)
  7230  010B08  0101               	movlb	1	; () banked
  7231  010B0A  6F51               	movwf	sprintf@ap& (0+255),b
  7232  010B0C  0E00               	movlw	high (?_sprintf+4)
  7233  010B0E  0101               	movlb	1	; () banked
  7234  010B10  6F52               	movwf	(sprintf@ap+1)& (0+255),b
  7235                           
  7236                           ;doprnt.c: 536: while(c = *f++) {
  7237  010B12  EFB5  F089         	goto	l9039
  7238  010B16                     l8841:
  7239                           
  7240                           ; BSR set to: 1
  7241                           ;doprnt.c: 538: if(c != '%')
  7242  010B16  0E25               	movlw	37
  7243  010B18  0101               	movlb	1	; () banked
  7244  010B1A  1965               	xorwf	sprintf@c& (0+255),w,b
  7245  010B1C  B4D8               	btfsc	status,2,c
  7246  010B1E  D008               	goto	l8847
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;doprnt.c: 540: {
  7250                           ;doprnt.c: 541: ((*sp++ = (c)));
  7251  010B20  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7252  010B24  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7253  010B28  C165  FFDF         	movff	sprintf@c,indf2
  7254  010B2C  EFB2  F089         	goto	l9037
  7255  010B30                     l8847:
  7256                           
  7257                           ;doprnt.c: 543: }
  7258                           ;doprnt.c: 548: flag = 0;
  7259  010B30  0E00               	movlw	0
  7260  010B32  0101               	movlb	1	; () banked
  7261  010B34  6F54               	movwf	(sprintf@flag+1)& (0+255),b
  7262  010B36  0E00               	movlw	0
  7263  010B38  6F53               	movwf	sprintf@flag& (0+255),b
  7264                           
  7265                           ; BSR set to: 1
  7266                           ;doprnt.c: 611: if(*f == '.') {
  7267  010B3A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7268  010B3E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7269  010B42                     	if	0	;tblptru may be non-zero
  7270  010B42                     	endif
  7271  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7272  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  7273  010B44  6EF8               	movwf	tblptru,c
  7274  010B46                     	endif
  7275  010B46  0008               	tblrd		*
  7276  010B48  50F5               	movf	tablat,w,c
  7277  010B4A  0A2E               	xorlw	46
  7278  010B4C  A4D8               	btfss	status,2,c
  7279  010B4E  D03D               	goto	l8861
  7280                           
  7281                           ; BSR set to: 1
  7282                           ;doprnt.c: 612: flag |= 0x4000;
  7283  010B50  0101               	movlb	1	; () banked
  7284  010B52  8D54               	bsf	(sprintf@flag+1)& (0+255),6,b
  7285                           
  7286                           ;doprnt.c: 613: f++;
  7287  010B54  0100               	movlb	0	; () banked
  7288  010B56  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7289  010B58  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;doprnt.c: 620: {
  7293                           ;doprnt.c: 621: prec = 0;
  7294  010B5A  0E00               	movlw	0
  7295  010B5C  0101               	movlb	1	; () banked
  7296  010B5E  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  7297  010B60  0E00               	movlw	0
  7298  010B62  6F5F               	movwf	sprintf@prec& (0+255),b
  7299                           
  7300                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7301  010B64  D025               	goto	l8859
  7302  010B66                     l8855:
  7303                           
  7304                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7305  010B66  C15F  F070         	movff	sprintf@prec,___wmul@multiplier
  7306  010B6A  C160  F071         	movff	sprintf@prec+1,___wmul@multiplier+1
  7307  010B6E  0E00               	movlw	0
  7308  010B70  0100               	movlb	0	; () banked
  7309  010B72  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7310  010B74  0E0A               	movlw	10
  7311  010B76  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7312  010B78  ECCD  F0B1         	call	___wmul	;wreg free
  7313  010B7C  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7314  010B80  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7315  010B84                     	if	0	;tblptru may be non-zero
  7316  010B84                     	endif
  7317  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7318  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  7319  010B86  6EF8               	movwf	tblptru,c
  7320  010B88                     	endif
  7321  010B88  0008               	tblrd		*
  7322  010B8A  50F5               	movf	tablat,w,c
  7323  010B8C  0100               	movlb	0	; () banked
  7324  010B8E  2770               	addwf	?___wmul& (0+255),f,b
  7325  010B90  0E00               	movlw	0
  7326  010B92  0100               	movlb	0	; () banked
  7327  010B94  2371               	addwfc	(?___wmul+1)& (0+255),f,b
  7328  010B96  0ED0               	movlw	208
  7329  010B98  0100               	movlb	0	; () banked
  7330  010B9A  2570               	addwf	?___wmul& (0+255),w,b
  7331  010B9C  0101               	movlb	1	; () banked
  7332  010B9E  6F5F               	movwf	sprintf@prec& (0+255),b
  7333  010BA0  0EFF               	movlw	255
  7334  010BA2  0100               	movlb	0	; () banked
  7335  010BA4  2171               	addwfc	(?___wmul+1)& (0+255),w,b
  7336  010BA6  0101               	movlb	1	; () banked
  7337  010BA8  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  7338                           
  7339                           ; BSR set to: 1
  7340  010BAA  0100               	movlb	0	; () banked
  7341  010BAC  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7342  010BAE  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7343  010BB0                     l8859:
  7344  010BB0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7345  010BB4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7346  010BB8                     	if	0	;tblptru may be non-zero
  7347  010BB8                     	endif
  7348  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7349  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  7350  010BBA  6EF8               	movwf	tblptru,c
  7351  010BBC                     	endif
  7352  010BBC  0008               	tblrd		*
  7353  010BBE  50F5               	movf	tablat,w,c
  7354  010BC0  EC34  F0B2         	call	_isdigit
  7355  010BC4  A0D8               	btfss	status,0,c
  7356  010BC6  D00C               	goto	l8869
  7357  010BC8  D7CE               	goto	l8855
  7358  010BCA                     l8861:
  7359                           
  7360                           ;doprnt.c: 626: prec = 0;
  7361  010BCA  0E00               	movlw	0
  7362  010BCC  0101               	movlb	1	; () banked
  7363  010BCE  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  7364  010BD0  0E00               	movlw	0
  7365  010BD2  6F5F               	movwf	sprintf@prec& (0+255),b
  7366                           
  7367                           ; BSR set to: 1
  7368                           ;doprnt.c: 628: flag |= 0x1000;
  7369  010BD4  0101               	movlb	1	; () banked
  7370  010BD6  8954               	bsf	(sprintf@flag+1)& (0+255),4,b
  7371                           
  7372                           ; BSR set to: 1
  7373                           ;doprnt.c: 630: }
  7374                           ;doprnt.c: 635: switch(c = *f++) {
  7375  010BD8  D003               	goto	l8869
  7376  010BDA                     l8865:
  7377                           
  7378                           ; BSR set to: 1
  7379                           ;doprnt.c: 663: flag |= 0x400;
  7380  010BDA  0101               	movlb	1	; () banked
  7381  010BDC  8554               	bsf	(sprintf@flag+1)& (0+255),2,b
  7382                           
  7383                           ;doprnt.c: 664: break;
  7384  010BDE  D015               	goto	l8871
  7385  010BE0                     l8869:
  7386  010BE0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7387  010BE4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7388  010BE8  0100               	movlb	0	; () banked
  7389  010BEA  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7390  010BEC  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7391  010BEE                     	if	0	;tblptru may be non-zero
  7392  010BEE                     	endif
  7393  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7394  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7395  010BF0  6EF8               	movwf	tblptru,c
  7396  010BF2                     	endif
  7397  010BF2  0008               	tblrd		*
  7398  010BF4  CFF5 F165          	movff	tablat,sprintf@c
  7399  010BF8  0101               	movlb	1	; () banked
  7400  010BFA  5165               	movf	sprintf@c& (0+255),w,b
  7401                           
  7402                           ; Switch size 1, requested type "space"
  7403                           ; Number of cases is 2, Range of values is 0 to 102
  7404                           ; switch strategies available:
  7405                           ; Name         Instructions Cycles
  7406                           ; simple_byte            7     4 (average)
  7407                           ;	Chosen strategy is simple_byte
  7408  010BFC  0A00               	xorlw	0	; case 0
  7409  010BFE  B4D8               	btfsc	status,2,c
  7410  010C00  D3C5               	goto	l9041
  7411  010C02  0A66               	xorlw	102	; case 102
  7412  010C04  B4D8               	btfsc	status,2,c
  7413  010C06  D7E9               	goto	l8865
  7414  010C08  D3B0               	goto	l9039
  7415  010C0A                     l8871:
  7416                           
  7417                           ; BSR set to: 1
  7418                           ;doprnt.c: 825: if(flag & (0x700)) {
  7419  010C0A  0E07               	movlw	7
  7420  010C0C  0101               	movlb	1	; () banked
  7421  010C0E  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  7422  010C10  B4D8               	btfsc	status,2,c
  7423  010C12  D353               	goto	l9019
  7424                           
  7425                           ; BSR set to: 1
  7426                           ;doprnt.c: 827: if(flag & 0x1000)
  7427  010C14  0101               	movlb	1	; () banked
  7428  010C16  A954               	btfss	(sprintf@flag+1)& (0+255),4,b
  7429  010C18  D005               	goto	l8877
  7430                           
  7431                           ; BSR set to: 1
  7432                           ;doprnt.c: 829: prec = 6;
  7433  010C1A  0E00               	movlw	0
  7434  010C1C  0101               	movlb	1	; () banked
  7435  010C1E  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  7436  010C20  0E06               	movlw	6
  7437  010C22  6F5F               	movwf	sprintf@prec& (0+255),b
  7438  010C24                     l8877:
  7439                           
  7440                           ; BSR set to: 1
  7441                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7442  010C24  C151  FFD9         	movff	sprintf@ap,fsr2l
  7443  010C28  C152  FFDA         	movff	sprintf@ap+1,fsr2h
  7444  010C2C  CFDE F161          	movff	postinc2,sprintf@fval
  7445  010C30  CFDE F162          	movff	postinc2,sprintf@fval+1
  7446  010C34  CFDE F163          	movff	postinc2,sprintf@fval+2
  7447  010C38  CFDE F164          	movff	postinc2,sprintf@fval+3
  7448                           
  7449                           ; BSR set to: 1
  7450  010C3C  0E04               	movlw	4
  7451  010C3E  0101               	movlb	1	; () banked
  7452  010C40  2751               	addwf	sprintf@ap& (0+255),f,b
  7453  010C42  0E00               	movlw	0
  7454  010C44  2352               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7455                           
  7456                           ; BSR set to: 1
  7457                           ;doprnt.c: 831: if(fval < 0.0) {
  7458  010C46  0101               	movlb	1	; () banked
  7459  010C48  AF64               	btfss	(sprintf@fval+3)& (0+255),7,b
  7460  010C4A  D015               	goto	l8887
  7461                           
  7462                           ; BSR set to: 1
  7463                           ;doprnt.c: 832: fval = -fval;
  7464  010C4C  C161  F097         	movff	sprintf@fval,___flneg@f1
  7465  010C50  C162  F098         	movff	sprintf@fval+1,___flneg@f1+1
  7466  010C54  C163  F099         	movff	sprintf@fval+2,___flneg@f1+2
  7467  010C58  C164  F09A         	movff	sprintf@fval+3,___flneg@f1+3
  7468  010C5C  ECB1  F0B1         	call	___flneg	;wreg free
  7469  010C60  C097  F161         	movff	?___flneg,sprintf@fval
  7470  010C64  C098  F162         	movff	?___flneg+1,sprintf@fval+1
  7471  010C68  C099  F163         	movff	?___flneg+2,sprintf@fval+2
  7472  010C6C  C09A  F164         	movff	?___flneg+3,sprintf@fval+3
  7473                           
  7474                           ;doprnt.c: 833: flag |= 0x03;
  7475  010C70  0E03               	movlw	3
  7476  010C72  0101               	movlb	1	; () banked
  7477  010C74  1353               	iorwf	sprintf@flag& (0+255),f,b
  7478  010C76                     l8887:
  7479                           
  7480                           ; BSR set to: 1
  7481                           ;doprnt.c: 834: }
  7482                           ;doprnt.c: 835: exp = 0;
  7483  010C76  0E00               	movlw	0
  7484  010C78  0101               	movlb	1	; () banked
  7485  010C7A  6F5A               	movwf	(sprintf@exp+1)& (0+255),b
  7486  010C7C  0E00               	movlw	0
  7487  010C7E  6F59               	movwf	sprintf@exp& (0+255),b
  7488                           
  7489                           ; BSR set to: 1
  7490                           ;doprnt.c: 836: if( fval!=0) {
  7491  010C80  0101               	movlb	1	; () banked
  7492  010C82  5161               	movf	sprintf@fval& (0+255),w,b
  7493  010C84  0101               	movlb	1	; () banked
  7494  010C86  1162               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7495  010C88  0101               	movlb	1	; () banked
  7496  010C8A  1163               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7497  010C8C  0101               	movlb	1	; () banked
  7498  010C8E  1164               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7499  010C90  B4D8               	btfsc	status,2,c
  7500  010C92  D08E               	goto	l8915
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7504  010C94  0101               	movlb	1	; () banked
  7505  010C96  3563               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7506  010C98  3564               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7507  010C9A  0F82               	addlw	130
  7508  010C9C  0101               	movlb	1	; () banked
  7509  010C9E  6F59               	movwf	sprintf@exp& (0+255),b
  7510  010CA0  0101               	movlb	1	; () banked
  7511  010CA2  6B5A               	clrf	(sprintf@exp+1)& (0+255),b
  7512  010CA4  0EFF               	movlw	255
  7513  010CA6  235A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7514                           
  7515                           ; BSR set to: 1
  7516                           ;doprnt.c: 838: exp--;
  7517  010CA8  0101               	movlb	1	; () banked
  7518  010CAA  0759               	decf	sprintf@exp& (0+255),f,b
  7519  010CAC  A0D8               	btfss	status,0,c
  7520  010CAE  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;doprnt.c: 839: exp *= 3;
  7524  010CB0  C159  F070         	movff	sprintf@exp,___wmul@multiplier
  7525  010CB4  C15A  F071         	movff	sprintf@exp+1,___wmul@multiplier+1
  7526  010CB8  0E00               	movlw	0
  7527  010CBA  0100               	movlb	0	; () banked
  7528  010CBC  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7529  010CBE  0E03               	movlw	3
  7530  010CC0  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7531  010CC2  ECCD  F0B1         	call	___wmul	;wreg free
  7532  010CC6  C070  F159         	movff	?___wmul,sprintf@exp
  7533  010CCA  C071  F15A         	movff	?___wmul+1,sprintf@exp+1
  7534                           
  7535                           ;doprnt.c: 840: exp /= 10;
  7536  010CCE  C159  F076         	movff	sprintf@exp,___awdiv@dividend
  7537  010CD2  C15A  F077         	movff	sprintf@exp+1,___awdiv@dividend+1
  7538  010CD6  0E00               	movlw	0
  7539  010CD8  0100               	movlb	0	; () banked
  7540  010CDA  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7541  010CDC  0E0A               	movlw	10
  7542  010CDE  6F78               	movwf	___awdiv@divisor& (0+255),b
  7543  010CE0  EC68  F0AC         	call	___awdiv	;wreg free
  7544  010CE4  C076  F159         	movff	?___awdiv,sprintf@exp
  7545  010CE8  C077  F15A         	movff	?___awdiv+1,sprintf@exp+1
  7546                           
  7547                           ;doprnt.c: 841: if(exp < 0)
  7548  010CEC  0101               	movlb	1	; () banked
  7549  010CEE  AF5A               	btfss	(sprintf@exp+1)& (0+255),7,b
  7550  010CF0  D004               	goto	l8903
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;doprnt.c: 842: exp--;
  7554  010CF2  0101               	movlb	1	; () banked
  7555  010CF4  0759               	decf	sprintf@exp& (0+255),f,b
  7556  010CF6  A0D8               	btfss	status,0,c
  7557  010CF8  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  7558  010CFA                     l8903:
  7559                           
  7560                           ; BSR set to: 1
  7561                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7562  010CFA  0101               	movlb	1	; () banked
  7563  010CFC  5159               	movf	sprintf@exp& (0+255),w,b
  7564  010CFE  0800               	sublw	0
  7565  010D00  ECBA  F094         	call	_scale
  7566  010D04  C097  F15B         	movff	?_scale,sprintf@tmpval
  7567  010D08  C098  F15C         	movff	?_scale+1,sprintf@tmpval+1
  7568  010D0C  C099  F15D         	movff	?_scale+2,sprintf@tmpval+2
  7569  010D10  C09A  F15E         	movff	?_scale+3,sprintf@tmpval+3
  7570                           
  7571                           ;doprnt.c: 847: tmpval.integ *= fval;
  7572  010D14  C15B  F07E         	movff	sprintf@tmpval,___flmul@b
  7573  010D18  C15C  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  7574  010D1C  C15D  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  7575  010D20  C15E  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  7576  010D24  C161  F082         	movff	sprintf@fval,___flmul@a
  7577  010D28  C162  F083         	movff	sprintf@fval+1,___flmul@a+1
  7578  010D2C  C163  F084         	movff	sprintf@fval+2,___flmul@a+2
  7579  010D30  C164  F085         	movff	sprintf@fval+3,___flmul@a+3
  7580  010D34  EC21  F09C         	call	___flmul	;wreg free
  7581  010D38  C07E  F15B         	movff	?___flmul,sprintf@tmpval
  7582  010D3C  C07F  F15C         	movff	?___flmul+1,sprintf@tmpval+1
  7583  010D40  C080  F15D         	movff	?___flmul+2,sprintf@tmpval+2
  7584  010D44  C081  F15E         	movff	?___flmul+3,sprintf@tmpval+3
  7585                           
  7586                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7587  010D48  C15B  F070         	movff	sprintf@tmpval,___flge@ff1
  7588  010D4C  C15C  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7589  010D50  C15D  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7590  010D54  C15E  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7591  010D58  0E00               	movlw	0
  7592  010D5A  0100               	movlb	0	; () banked
  7593  010D5C  6F74               	movwf	___flge@ff2& (0+255),b
  7594  010D5E  0E00               	movlw	0
  7595  010D60  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7596  010D62  0E80               	movlw	128
  7597  010D64  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7598  010D66  0E3F               	movlw	63
  7599  010D68  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7600  010D6A  EC29  F0A9         	call	___flge	;wreg free
  7601  010D6E  0100               	movlb	0	; () banked
  7602  010D70  B0D8               	btfsc	status,0,c
  7603  010D72  D005               	goto	l8911
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;doprnt.c: 849: exp--;
  7607  010D74  0101               	movlb	1	; () banked
  7608  010D76  0759               	decf	sprintf@exp& (0+255),f,b
  7609  010D78  A0D8               	btfss	status,0,c
  7610  010D7A  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  7611  010D7C  D019               	goto	l8915
  7612  010D7E                     l8911:
  7613                           
  7614                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7615  010D7E  C15B  F070         	movff	sprintf@tmpval,___flge@ff1
  7616  010D82  C15C  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7617  010D86  C15D  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7618  010D8A  C15E  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7619  010D8E  0E00               	movlw	0
  7620  010D90  0100               	movlb	0	; () banked
  7621  010D92  6F74               	movwf	___flge@ff2& (0+255),b
  7622  010D94  0E00               	movlw	0
  7623  010D96  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7624  010D98  0E20               	movlw	32
  7625  010D9A  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7626  010D9C  0E41               	movlw	65
  7627  010D9E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7628  010DA0  EC29  F0A9         	call	___flge	;wreg free
  7629  010DA4  0100               	movlb	0	; () banked
  7630  010DA6  A0D8               	btfss	status,0,c
  7631  010DA8  D003               	goto	l8915
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;doprnt.c: 851: exp++;
  7635  010DAA  0101               	movlb	1	; () banked
  7636  010DAC  4B59               	infsnz	sprintf@exp& (0+255),f,b
  7637  010DAE  2B5A               	incf	(sprintf@exp+1)& (0+255),f,b
  7638  010DB0                     l8915:
  7639                           
  7640                           ;doprnt.c: 852: }
  7641                           ;doprnt.c: 1112: if(prec <= 12)
  7642  010DB0  0101               	movlb	1	; () banked
  7643  010DB2  BF60               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7644  010DB4  D008               	goto	l8917
  7645  010DB6  0101               	movlb	1	; () banked
  7646  010DB8  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  7647  010DBA  E123               	bnz	l8919
  7648  010DBC  0E0D               	movlw	13
  7649  010DBE  0101               	movlb	1	; () banked
  7650  010DC0  5D5F               	subwf	sprintf@prec& (0+255),w,b
  7651  010DC2  B0D8               	btfsc	status,0,c
  7652  010DC4  D01E               	goto	l8919
  7653  010DC6                     l8917:
  7654                           
  7655                           ; BSR set to: 1
  7656                           ;doprnt.c: 1113: fval += fround(prec);
  7657  010DC6  C161  F0A4         	movff	sprintf@fval,___fladd@b
  7658  010DCA  C162  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  7659  010DCE  C163  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  7660  010DD2  C164  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  7661  010DD6  0101               	movlb	1	; () banked
  7662  010DD8  515F               	movf	sprintf@prec& (0+255),w,b
  7663  010DDA  EC23  F0A2         	call	_fround
  7664  010DDE  C097  F0A8         	movff	?_fround,___fladd@a
  7665  010DE2  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  7666  010DE6  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  7667  010DEA  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  7668  010DEE  ECCD  F099         	call	___fladd	;wreg free
  7669  010DF2  C0A4  F161         	movff	?___fladd,sprintf@fval
  7670  010DF6  C0A5  F162         	movff	?___fladd+1,sprintf@fval+1
  7671  010DFA  C0A6  F163         	movff	?___fladd+2,sprintf@fval+2
  7672  010DFE  C0A7  F164         	movff	?___fladd+3,sprintf@fval+3
  7673  010E02                     l8919:
  7674                           
  7675                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7676  010E02  0101               	movlb	1	; () banked
  7677  010E04  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7678  010E06  D008               	goto	l8921
  7679  010E08  0101               	movlb	1	; () banked
  7680  010E0A  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  7681  010E0C  E12E               	bnz	l8927
  7682  010E0E  0E0A               	movlw	10
  7683  010E10  0101               	movlb	1	; () banked
  7684  010E12  5D59               	subwf	sprintf@exp& (0+255),w,b
  7685  010E14  B0D8               	btfsc	status,0,c
  7686  010E16  D029               	goto	l8927
  7687  010E18                     l8921:
  7688                           
  7689                           ; BSR set to: 1
  7690  010E18  0101               	movlb	1	; () banked
  7691  010E1A  5161               	movf	sprintf@fval& (0+255),w,b
  7692  010E1C  0101               	movlb	1	; () banked
  7693  010E1E  1162               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7694  010E20  0101               	movlb	1	; () banked
  7695  010E22  1163               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7696  010E24  0101               	movlb	1	; () banked
  7697  010E26  1164               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7698  010E28  B4D8               	btfsc	status,2,c
  7699  010E2A  D06D               	goto	l8941
  7700                           
  7701                           ; BSR set to: 1
  7702  010E2C  C161  F0B8         	movff	sprintf@fval,___fltol@f1
  7703  010E30  C162  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  7704  010E34  C163  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  7705  010E38  C164  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  7706  010E3C  EC6C  F0AB         	call	___fltol	;wreg free
  7707  010E40  0100               	movlb	0	; () banked
  7708  010E42  51B8               	movf	?___fltol& (0+255),w,b
  7709  010E44  0100               	movlb	0	; () banked
  7710  010E46  11B9               	iorwf	(?___fltol+1)& (0+255),w,b
  7711  010E48  0100               	movlb	0	; () banked
  7712  010E4A  11BA               	iorwf	(?___fltol+2)& (0+255),w,b
  7713  010E4C  0100               	movlb	0	; () banked
  7714  010E4E  11BB               	iorwf	(?___fltol+3)& (0+255),w,b
  7715  010E50  A4D8               	btfss	status,2,c
  7716  010E52  D059               	goto	l8941
  7717                           
  7718                           ; BSR set to: 0
  7719  010E54  0101               	movlb	1	; () banked
  7720  010E56  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7721  010E58  D056               	goto	l8941
  7722  010E5A  0101               	movlb	1	; () banked
  7723  010E5C  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  7724  010E5E  E105               	bnz	l8927
  7725  010E60  0E02               	movlw	2
  7726  010E62  0101               	movlb	1	; () banked
  7727  010E64  5D59               	subwf	sprintf@exp& (0+255),w,b
  7728  010E66  A0D8               	btfss	status,0,c
  7729  010E68  D04E               	goto	l8941
  7730  010E6A                     l8927:
  7731                           
  7732                           ; BSR set to: 1
  7733                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7734  010E6A  C15B  F070         	movff	sprintf@tmpval,___flge@ff1
  7735  010E6E  C15C  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7736  010E72  C15D  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7737  010E76  C15E  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7738  010E7A  0E5F               	movlw	95
  7739  010E7C  0100               	movlb	0	; () banked
  7740  010E7E  6F74               	movwf	___flge@ff2& (0+255),b
  7741  010E80  0E70               	movlw	112
  7742  010E82  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7743  010E84  0E89               	movlw	137
  7744  010E86  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7745  010E88  0E40               	movlw	64
  7746  010E8A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7747  010E8C  EC29  F0A9         	call	___flge	;wreg free
  7748  010E90  0100               	movlb	0	; () banked
  7749  010E92  B0D8               	btfsc	status,0,c
  7750  010E94  D003               	goto	l8931
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7754  010E96  0101               	movlb	1	; () banked
  7755  010E98  0EF7               	movlw	247
  7756  010E9A  D002               	goto	L4
  7757  010E9C                     l8931:
  7758                           
  7759                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7760  010E9C  0101               	movlb	1	; () banked
  7761  010E9E  0EF8               	movlw	248
  7762  010EA0                     L4:
  7763  010EA0  2759               	addwf	sprintf@exp& (0+255),f,b
  7764  010EA2  0EFF               	movlw	255
  7765  010EA4  235A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7766                           
  7767                           ; BSR set to: 1
  7768                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7769                           
  7770                           ; BSR set to: 1
  7771  010EA6  0101               	movlb	1	; () banked
  7772  010EA8  5159               	movf	sprintf@exp& (0+255),w,b
  7773  010EAA  ECBA  F094         	call	_scale
  7774  010EAE  C097  F15B         	movff	?_scale,sprintf@tmpval
  7775  010EB2  C098  F15C         	movff	?_scale+1,sprintf@tmpval+1
  7776  010EB6  C099  F15D         	movff	?_scale+2,sprintf@tmpval+2
  7777  010EBA  C09A  F15E         	movff	?_scale+3,sprintf@tmpval+3
  7778  010EBE  C161  F070         	movff	sprintf@fval,__div_to_l_@f1
  7779  010EC2  C162  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7780  010EC6  C163  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7781  010ECA  C164  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7782  010ECE  C15B  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  7783  010ED2  C15C  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7784  010ED6  C15D  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7785  010EDA  C15E  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7786  010EDE  ECF1  F0A9         	call	__div_to_l_	;wreg free
  7787  010EE2  C070  F155         	movff	?__div_to_l_,sprintf@val
  7788  010EE6  C071  F156         	movff	?__div_to_l_+1,sprintf@val+1
  7789  010EEA  C072  F157         	movff	?__div_to_l_+2,sprintf@val+2
  7790  010EEE  C073  F158         	movff	?__div_to_l_+3,sprintf@val+3
  7791                           
  7792                           ;doprnt.c: 1129: fval = 0.0;
  7793  010EF2  0E00               	movlw	0
  7794  010EF4  0101               	movlb	1	; () banked
  7795  010EF6  6F61               	movwf	sprintf@fval& (0+255),b
  7796  010EF8  0E00               	movlw	0
  7797  010EFA  6F62               	movwf	(sprintf@fval+1)& (0+255),b
  7798  010EFC  0E00               	movlw	0
  7799  010EFE  6F63               	movwf	(sprintf@fval+2)& (0+255),b
  7800  010F00  0E00               	movlw	0
  7801  010F02  6F64               	movwf	(sprintf@fval+3)& (0+255),b
  7802                           
  7803                           ;doprnt.c: 1130: } else {
  7804  010F04  D03C               	goto	l8945
  7805  010F06                     l8941:
  7806                           
  7807                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7808  010F06  C161  F0B8         	movff	sprintf@fval,___fltol@f1
  7809  010F0A  C162  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  7810  010F0E  C163  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  7811  010F12  C164  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  7812  010F16  EC6C  F0AB         	call	___fltol	;wreg free
  7813  010F1A  C0B8  F155         	movff	?___fltol,sprintf@val
  7814  010F1E  C0B9  F156         	movff	?___fltol+1,sprintf@val+1
  7815  010F22  C0BA  F157         	movff	?___fltol+2,sprintf@val+2
  7816  010F26  C0BB  F158         	movff	?___fltol+3,sprintf@val+3
  7817                           
  7818                           ;doprnt.c: 1132: fval -= (double)val;
  7819  010F2A  C161  F0B8         	movff	sprintf@fval,___flsub@b
  7820  010F2E  C162  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  7821  010F32  C163  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  7822  010F36  C164  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  7823  010F3A  C155  F070         	movff	sprintf@val,___xxtofl@val
  7824  010F3E  C156  F071         	movff	sprintf@val+1,___xxtofl@val+1
  7825  010F42  C157  F072         	movff	sprintf@val+2,___xxtofl@val+2
  7826  010F46  C158  F073         	movff	sprintf@val+3,___xxtofl@val+3
  7827  010F4A  0E00               	movlw	0
  7828  010F4C  ECD9  F0A4         	call	___xxtofl
  7829  010F50  C070  F0BC         	movff	?___xxtofl,___flsub@a
  7830  010F54  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  7831  010F58  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  7832  010F5C  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  7833  010F60  EC0C  F0B1         	call	___flsub	;wreg free
  7834  010F64  C0B8  F161         	movff	?___flsub,sprintf@fval
  7835  010F68  C0B9  F162         	movff	?___flsub+1,sprintf@fval+1
  7836  010F6C  C0BA  F163         	movff	?___flsub+2,sprintf@fval+2
  7837  010F70  C0BB  F164         	movff	?___flsub+3,sprintf@fval+3
  7838                           
  7839                           ;doprnt.c: 1133: exp = 0;
  7840  010F74  0E00               	movlw	0
  7841  010F76  0101               	movlb	1	; () banked
  7842  010F78  6F5A               	movwf	(sprintf@exp+1)& (0+255),b
  7843  010F7A  0E00               	movlw	0
  7844  010F7C  6F59               	movwf	sprintf@exp& (0+255),b
  7845  010F7E                     l8945:
  7846                           
  7847                           ; BSR set to: 1
  7848                           ;doprnt.c: 1134: }
  7849                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7850  010F7E  0E01               	movlw	1
  7851  010F80  0101               	movlb	1	; () banked
  7852  010F82  6F65               	movwf	sprintf@c& (0+255),b
  7853  010F84                     l8947:
  7854                           
  7855                           ; BSR set to: 1
  7856  010F84  0E0A               	movlw	10
  7857  010F86  0101               	movlb	1	; () banked
  7858  010F88  1965               	xorwf	sprintf@c& (0+255),w,b
  7859  010F8A  B4D8               	btfsc	status,2,c
  7860  010F8C  D021               	goto	l8959
  7861                           
  7862                           ; BSR set to: 1
  7863                           ;doprnt.c: 1137: if(val < dpowers[c])
  7864                           
  7865                           ; BSR set to: 1
  7866                           
  7867                           ; BSR set to: 1
  7868  010F8E  0101               	movlb	1	; () banked
  7869  010F90  5165               	movf	sprintf@c& (0+255),w,b
  7870  010F92  0D04               	mullw	4
  7871  010F94  0E07               	movlw	low _dpowers
  7872  010F96  24F3               	addwf	prodl,w,c
  7873  010F98  6EF6               	movwf	tblptrl,c
  7874  010F9A  0EFE               	movlw	high _dpowers
  7875  010F9C  20F4               	addwfc	prodh,w,c
  7876  010F9E  6EF7               	movwf	tblptrh,c
  7877  010FA0                     	if	1	;There are 3 active tblptr bytes
  7878  010FA0  6AF8               	clrf	tblptru,c
  7879  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7880  010FA4  22F8               	addwfc	tblptru,f,c
  7881  010FA6                     	endif
  7882  010FA6  0009               	tblrd		*+
  7883  010FA8  50F5               	movf	tablat,w,c
  7884  010FAA  0101               	movlb	1	; () banked
  7885  010FAC  5D55               	subwf	sprintf@val& (0+255),w,b
  7886  010FAE  0009               	tblrd		*+
  7887  010FB0  50F5               	movf	tablat,w,c
  7888  010FB2  0101               	movlb	1	; () banked
  7889  010FB4  5956               	subwfb	(sprintf@val+1)& (0+255),w,b
  7890  010FB6  0009               	tblrd		*+
  7891  010FB8  50F5               	movf	tablat,w,c
  7892  010FBA  0101               	movlb	1	; () banked
  7893  010FBC  5957               	subwfb	(sprintf@val+2)& (0+255),w,b
  7894  010FBE  0009               	tblrd		*+
  7895  010FC0  50F5               	movf	tablat,w,c
  7896  010FC2  0101               	movlb	1	; () banked
  7897  010FC4  5958               	subwfb	(sprintf@val+3)& (0+255),w,b
  7898  010FC6  A0D8               	btfss	status,0,c
  7899  010FC8  D003               	goto	l8959
  7900                           
  7901                           ; BSR set to: 1
  7902                           
  7903                           ; BSR set to: 1
  7904                           
  7905                           ; BSR set to: 1
  7906                           ;doprnt.c: 1138: break;
  7907  010FCA  0101               	movlb	1	; () banked
  7908  010FCC  2B65               	incf	sprintf@c& (0+255),f,b
  7909  010FCE  D7DA               	goto	l8947
  7910  010FD0                     l8959:
  7911                           
  7912                           ; BSR set to: 1
  7913                           ;doprnt.c: 1175: {
  7914                           ;doprnt.c: 1188: if(flag & 0x03)
  7915  010FD0  0E03               	movlw	3
  7916  010FD2  0101               	movlb	1	; () banked
  7917  010FD4  1553               	andwf	sprintf@flag& (0+255),w,b
  7918  010FD6  0100               	movlb	0	; () banked
  7919  010FD8  6FCA               	movwf	??_sprintf& (0+255),b
  7920  010FDA  0E00               	movlw	0
  7921  010FDC  0101               	movlb	1	; () banked
  7922  010FDE  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  7923  010FE0  0100               	movlb	0	; () banked
  7924  010FE2  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7925  010FE4  0100               	movlb	0	; () banked
  7926  010FE6  51CA               	movf	??_sprintf& (0+255),w,b
  7927  010FE8  0100               	movlb	0	; () banked
  7928  010FEA  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7929  010FEC  B4D8               	btfsc	status,2,c
  7930  010FEE  D058               	goto	l8973
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7934  010FF0  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7935  010FF4  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7936  010FF8  0E2D               	movlw	45
  7937  010FFA  D050               	goto	L5
  7938  010FFC                     l8963:
  7939                           
  7940                           ; BSR set to: 0
  7941  010FFC  0100               	movlb	0	; () banked
  7942  010FFE  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7943  011000  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;doprnt.c: 1195: }
  7947                           ;doprnt.c: 1196: while(c--) {
  7948  011002  D04E               	goto	l8973
  7949  011004                     l8965:
  7950                           
  7951                           ;doprnt.c: 1200: {
  7952                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7953  011004  C155  F070         	movff	sprintf@val,___lldiv@dividend
  7954  011008  C156  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  7955  01100C  C157  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  7956  011010  C158  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  7957  011014  0101               	movlb	1	; () banked
  7958  011016  5165               	movf	sprintf@c& (0+255),w,b
  7959  011018  0D04               	mullw	4
  7960  01101A  0E07               	movlw	low _dpowers
  7961  01101C  24F3               	addwf	prodl,w,c
  7962  01101E  6EF6               	movwf	tblptrl,c
  7963  011020  0EFE               	movlw	high _dpowers
  7964  011022  20F4               	addwfc	prodh,w,c
  7965  011024  6EF7               	movwf	tblptrh,c
  7966  011026                     	if	1	;There are 3 active tblptr bytes
  7967  011026  6AF8               	clrf	tblptru,c
  7968  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7969  01102A  22F8               	addwfc	tblptru,f,c
  7970  01102C                     	endif
  7971  01102C  0009               	tblrd		*+
  7972  01102E  CFF5 F074          	movff	tablat,___lldiv@divisor
  7973  011032  0009               	tblrd		*+
  7974  011034  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  7975  011038  0009               	tblrd		*+
  7976  01103A  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  7977  01103E  000A               	tblrd		*-
  7978  011040  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  7979  011044  EC26  F0AD         	call	___lldiv	;wreg free
  7980  011048  C070  F15B         	movff	?___lldiv,sprintf@tmpval
  7981  01104C  C071  F15C         	movff	?___lldiv+1,sprintf@tmpval+1
  7982  011050  C072  F15D         	movff	?___lldiv+2,sprintf@tmpval+2
  7983  011054  C073  F15E         	movff	?___lldiv+3,sprintf@tmpval+3
  7984                           
  7985                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7986  011058  C15B  F070         	movff	sprintf@tmpval,___llmod@dividend
  7987  01105C  C15C  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7988  011060  C15D  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7989  011064  C15E  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7990  011068  0E0A               	movlw	10
  7991  01106A  0100               	movlb	0	; () banked
  7992  01106C  6F74               	movwf	___llmod@divisor& (0+255),b
  7993  01106E  0E00               	movlw	0
  7994  011070  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  7995  011072  0E00               	movlw	0
  7996  011074  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  7997  011076  0E00               	movlw	0
  7998  011078  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  7999  01107A  EC84  F0AE         	call	___llmod	;wreg free
  8000  01107E  C070  F15B         	movff	?___llmod,sprintf@tmpval
  8001  011082  C071  F15C         	movff	?___llmod+1,sprintf@tmpval+1
  8002  011086  C072  F15D         	movff	?___llmod+2,sprintf@tmpval+2
  8003  01108A  C073  F15E         	movff	?___llmod+3,sprintf@tmpval+3
  8004                           
  8005                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8006  01108E  0101               	movlb	1	; () banked
  8007  011090  515B               	movf	sprintf@tmpval& (0+255),w,b
  8008  011092  0F30               	addlw	48
  8009  011094  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8010  011098  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8011  01109C                     L5:
  8012  01109C  6EDF               	movwf	indf2,c
  8013  01109E  D7AE               	goto	l8963
  8014  0110A0                     l8973:
  8015                           
  8016                           ; BSR set to: 0
  8017  0110A0  0101               	movlb	1	; () banked
  8018  0110A2  0765               	decf	sprintf@c& (0+255),f,b
  8019  0110A4  0101               	movlb	1	; () banked
  8020  0110A6  2965               	incf	sprintf@c& (0+255),w,b
  8021  0110A8  B4D8               	btfsc	status,2,c
  8022  0110AA  D00E               	goto	l8981
  8023  0110AC  D7AB               	goto	l8965
  8024  0110AE                     l8975:
  8025                           
  8026                           ; BSR set to: 1
  8027                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8028  0110AE  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8029  0110B2  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8030  0110B6  0E30               	movlw	48
  8031  0110B8  6EDF               	movwf	indf2,c
  8032                           
  8033                           ; BSR set to: 1
  8034  0110BA  0100               	movlb	0	; () banked
  8035  0110BC  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8036  0110BE  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;doprnt.c: 1209: exp--;
  8040  0110C0  0101               	movlb	1	; () banked
  8041  0110C2  0759               	decf	sprintf@exp& (0+255),f,b
  8042  0110C4  A0D8               	btfss	status,0,c
  8043  0110C6  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8044  0110C8                     l8981:
  8045                           
  8046                           ; BSR set to: 1
  8047  0110C8  0101               	movlb	1	; () banked
  8048  0110CA  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8049  0110CC  D007               	goto	l8983
  8050  0110CE  0101               	movlb	1	; () banked
  8051  0110D0  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  8052  0110D2  E1ED               	bnz	l8975
  8053  0110D4  0101               	movlb	1	; () banked
  8054  0110D6  0559               	decf	sprintf@exp& (0+255),w,b
  8055  0110D8  B0D8               	btfsc	status,0,c
  8056  0110DA  D7E9               	goto	l8975
  8057  0110DC                     l8983:
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;doprnt.c: 1210: }
  8061                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8062  0110DC  0101               	movlb	1	; () banked
  8063  0110DE  BF60               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8064  0110E0  D00C               	goto	l1043
  8065  0110E2  0101               	movlb	1	; () banked
  8066  0110E4  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  8067  0110E6  E105               	bnz	u12090
  8068  0110E8  0E09               	movlw	9
  8069  0110EA  0101               	movlb	1	; () banked
  8070  0110EC  5D5F               	subwf	sprintf@prec& (0+255),w,b
  8071  0110EE  A0D8               	btfss	status,0,c
  8072  0110F0  D004               	goto	l1043
  8073  0110F2                     u12090:
  8074                           
  8075                           ; BSR set to: 1
  8076                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8077  0110F2  0E08               	movlw	8
  8078  0110F4  0101               	movlb	1	; () banked
  8079  0110F6  6F65               	movwf	sprintf@c& (0+255),b
  8080  0110F8  D002               	goto	l8987
  8081  0110FA                     l1043:
  8082                           
  8083                           ; BSR set to: 1
  8084                           ;doprnt.c: 1213: else
  8085                           ;doprnt.c: 1214: c = prec;
  8086  0110FA  C15F  F165         	movff	sprintf@prec,sprintf@c
  8087  0110FE                     l8987:
  8088                           
  8089                           ; BSR set to: 1
  8090                           ;doprnt.c: 1215: prec -= c;
  8091  0110FE  0101               	movlb	1	; () banked
  8092  011100  5165               	movf	sprintf@c& (0+255),w,b
  8093  011102  0101               	movlb	1	; () banked
  8094  011104  5F5F               	subwf	sprintf@prec& (0+255),f,b
  8095  011106  0E00               	movlw	0
  8096  011108  0101               	movlb	1	; () banked
  8097  01110A  BF65               	btfsc	sprintf@c& (0+255),7,b
  8098  01110C  0EFF               	movlw	255
  8099  01110E  0101               	movlb	1	; () banked
  8100  011110  5B60               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;doprnt.c: 1219: if(c)
  8104  011112  0101               	movlb	1	; () banked
  8105  011114  5165               	movf	sprintf@c& (0+255),w,b
  8106  011116  0101               	movlb	1	; () banked
  8107  011118  B4D8               	btfsc	status,2,c
  8108  01111A  D009               	goto	l8995
  8109                           
  8110                           ; BSR set to: 1
  8111                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8112  01111C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8113  011120  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8114  011124  0E2E               	movlw	46
  8115  011126  6EDF               	movwf	indf2,c
  8116                           
  8117                           ; BSR set to: 1
  8118  011128  0100               	movlb	0	; () banked
  8119  01112A  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8120  01112C  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8121  01112E                     l8995:
  8122                           
  8123                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8124  01112E  0101               	movlb	1	; () banked
  8125  011130  5165               	movf	sprintf@c& (0+255),w,b
  8126  011132  ECBA  F094         	call	_scale
  8127  011136  C097  F14D         	movff	?_scale,_sprintf$4119
  8128  01113A  C098  F14E         	movff	?_scale+1,_sprintf$4119+1
  8129  01113E  C099  F14F         	movff	?_scale+2,_sprintf$4119+2
  8130  011142  C09A  F150         	movff	?_scale+3,_sprintf$4119+3
  8131                           
  8132                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8133  011146  C161  F082         	movff	sprintf@fval,___flmul@a
  8134  01114A  C162  F083         	movff	sprintf@fval+1,___flmul@a+1
  8135  01114E  C163  F084         	movff	sprintf@fval+2,___flmul@a+2
  8136  011152  C164  F085         	movff	sprintf@fval+3,___flmul@a+3
  8137  011156  C14D  F07E         	movff	_sprintf$4119,___flmul@b
  8138  01115A  C14E  F07F         	movff	_sprintf$4119+1,___flmul@b+1
  8139  01115E  C14F  F080         	movff	_sprintf$4119+2,___flmul@b+2
  8140  011162  C150  F081         	movff	_sprintf$4119+3,___flmul@b+3
  8141  011166  EC21  F09C         	call	___flmul	;wreg free
  8142  01116A  C07E  F0B8         	movff	?___flmul,___fltol@f1
  8143  01116E  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  8144  011172  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  8145  011176  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  8146  01117A  EC6C  F0AB         	call	___fltol	;wreg free
  8147  01117E  C0B8  F155         	movff	?___fltol,sprintf@val
  8148  011182  C0B9  F156         	movff	?___fltol+1,sprintf@val+1
  8149  011186  C0BA  F157         	movff	?___fltol+2,sprintf@val+2
  8150  01118A  C0BB  F158         	movff	?___fltol+3,sprintf@val+3
  8151                           
  8152                           ;doprnt.c: 1228: while(c--) {
  8153  01118E  D07A               	goto	l9009
  8154  011190                     l8999:
  8155                           
  8156                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8157  011190  C155  F070         	movff	sprintf@val,___lldiv@dividend
  8158  011194  C156  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  8159  011198  C157  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  8160  01119C  C158  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  8161  0111A0  0101               	movlb	1	; () banked
  8162  0111A2  5165               	movf	sprintf@c& (0+255),w,b
  8163  0111A4  0D04               	mullw	4
  8164  0111A6  0E07               	movlw	low _dpowers
  8165  0111A8  24F3               	addwf	prodl,w,c
  8166  0111AA  6EF6               	movwf	tblptrl,c
  8167  0111AC  0EFE               	movlw	high _dpowers
  8168  0111AE  20F4               	addwfc	prodh,w,c
  8169  0111B0  6EF7               	movwf	tblptrh,c
  8170  0111B2                     	if	1	;There are 3 active tblptr bytes
  8171  0111B2  6AF8               	clrf	tblptru,c
  8172  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  8173  0111B6  22F8               	addwfc	tblptru,f,c
  8174  0111B8                     	endif
  8175  0111B8  0009               	tblrd		*+
  8176  0111BA  CFF5 F074          	movff	tablat,___lldiv@divisor
  8177  0111BE  0009               	tblrd		*+
  8178  0111C0  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  8179  0111C4  0009               	tblrd		*+
  8180  0111C6  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  8181  0111CA  000A               	tblrd		*-
  8182  0111CC  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  8183  0111D0  EC26  F0AD         	call	___lldiv	;wreg free
  8184  0111D4  C070  F15B         	movff	?___lldiv,sprintf@tmpval
  8185  0111D8  C071  F15C         	movff	?___lldiv+1,sprintf@tmpval+1
  8186  0111DC  C072  F15D         	movff	?___lldiv+2,sprintf@tmpval+2
  8187  0111E0  C073  F15E         	movff	?___lldiv+3,sprintf@tmpval+3
  8188                           
  8189                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8190  0111E4  C15B  F070         	movff	sprintf@tmpval,___llmod@dividend
  8191  0111E8  C15C  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8192  0111EC  C15D  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8193  0111F0  C15E  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8194  0111F4  0E0A               	movlw	10
  8195  0111F6  0100               	movlb	0	; () banked
  8196  0111F8  6F74               	movwf	___llmod@divisor& (0+255),b
  8197  0111FA  0E00               	movlw	0
  8198  0111FC  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  8199  0111FE  0E00               	movlw	0
  8200  011200  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  8201  011202  0E00               	movlw	0
  8202  011204  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  8203  011206  EC84  F0AE         	call	___llmod	;wreg free
  8204  01120A  C070  F15B         	movff	?___llmod,sprintf@tmpval
  8205  01120E  C071  F15C         	movff	?___llmod+1,sprintf@tmpval+1
  8206  011212  C072  F15D         	movff	?___llmod+2,sprintf@tmpval+2
  8207  011216  C073  F15E         	movff	?___llmod+3,sprintf@tmpval+3
  8208                           
  8209                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8210  01121A  0101               	movlb	1	; () banked
  8211  01121C  515B               	movf	sprintf@tmpval& (0+255),w,b
  8212  01121E  0F30               	addlw	48
  8213  011220  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8214  011224  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8215  011228  6EDF               	movwf	indf2,c
  8216                           
  8217                           ; BSR set to: 1
  8218  01122A  0100               	movlb	0	; () banked
  8219  01122C  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8220  01122E  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;doprnt.c: 1232: val %= dpowers[c];
  8224  011230  C155  F070         	movff	sprintf@val,___llmod@dividend
  8225  011234  C156  F071         	movff	sprintf@val+1,___llmod@dividend+1
  8226  011238  C157  F072         	movff	sprintf@val+2,___llmod@dividend+2
  8227  01123C  C158  F073         	movff	sprintf@val+3,___llmod@dividend+3
  8228  011240  0101               	movlb	1	; () banked
  8229  011242  5165               	movf	sprintf@c& (0+255),w,b
  8230  011244  0D04               	mullw	4
  8231  011246  0E07               	movlw	low _dpowers
  8232  011248  24F3               	addwf	prodl,w,c
  8233  01124A  6EF6               	movwf	tblptrl,c
  8234  01124C  0EFE               	movlw	high _dpowers
  8235  01124E  20F4               	addwfc	prodh,w,c
  8236  011250  6EF7               	movwf	tblptrh,c
  8237  011252                     	if	1	;There are 3 active tblptr bytes
  8238  011252  6AF8               	clrf	tblptru,c
  8239  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  8240  011256  22F8               	addwfc	tblptru,f,c
  8241  011258                     	endif
  8242  011258  0009               	tblrd		*+
  8243  01125A  CFF5 F074          	movff	tablat,___llmod@divisor
  8244  01125E  0009               	tblrd		*+
  8245  011260  CFF5 F075          	movff	tablat,___llmod@divisor+1
  8246  011264  0009               	tblrd		*+
  8247  011266  CFF5 F076          	movff	tablat,___llmod@divisor+2
  8248  01126A  000A               	tblrd		*-
  8249  01126C  CFF5 F077          	movff	tablat,___llmod@divisor+3
  8250  011270  EC84  F0AE         	call	___llmod	;wreg free
  8251  011274  C070  F155         	movff	?___llmod,sprintf@val
  8252  011278  C071  F156         	movff	?___llmod+1,sprintf@val+1
  8253  01127C  C072  F157         	movff	?___llmod+2,sprintf@val+2
  8254  011280  C073  F158         	movff	?___llmod+3,sprintf@val+3
  8255  011284                     l9009:
  8256  011284  0101               	movlb	1	; () banked
  8257  011286  0765               	decf	sprintf@c& (0+255),f,b
  8258  011288  0101               	movlb	1	; () banked
  8259  01128A  2965               	incf	sprintf@c& (0+255),w,b
  8260  01128C  B4D8               	btfsc	status,2,c
  8261  01128E  D00E               	goto	l9017
  8262  011290  D77F               	goto	l8999
  8263  011292                     l9011:
  8264                           
  8265                           ; BSR set to: 1
  8266                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8267  011292  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8268  011296  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8269  01129A  0E30               	movlw	48
  8270  01129C  6EDF               	movwf	indf2,c
  8271                           
  8272                           ; BSR set to: 1
  8273  01129E  0100               	movlb	0	; () banked
  8274  0112A0  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8275  0112A2  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;doprnt.c: 1237: prec--;
  8279  0112A4  0101               	movlb	1	; () banked
  8280  0112A6  075F               	decf	sprintf@prec& (0+255),f,b
  8281  0112A8  A0D8               	btfss	status,0,c
  8282  0112AA  0760               	decf	(sprintf@prec+1)& (0+255),f,b
  8283  0112AC                     l9017:
  8284                           
  8285                           ; BSR set to: 1
  8286  0112AC  0101               	movlb	1	; () banked
  8287  0112AE  515F               	movf	sprintf@prec& (0+255),w,b
  8288  0112B0  0101               	movlb	1	; () banked
  8289  0112B2  1160               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8290  0112B4  B4D8               	btfsc	status,2,c
  8291  0112B6  D059               	goto	l9039
  8292  0112B8  D7EC               	goto	l9011
  8293  0112BA                     l9019:
  8294                           
  8295                           ; BSR set to: 1
  8296                           ;doprnt.c: 1246: }
  8297                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8298  0112BA  0101               	movlb	1	; () banked
  8299  0112BC  515F               	movf	sprintf@prec& (0+255),w,b
  8300  0112BE  0101               	movlb	1	; () banked
  8301  0112C0  1160               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8302  0112C2  A4D8               	btfss	status,2,c
  8303  0112C4  D00D               	goto	l9025
  8304                           
  8305                           ; BSR set to: 1
  8306  0112C6  0101               	movlb	1	; () banked
  8307  0112C8  5155               	movf	sprintf@val& (0+255),w,b
  8308  0112CA  0101               	movlb	1	; () banked
  8309  0112CC  1156               	iorwf	(sprintf@val+1)& (0+255),w,b
  8310  0112CE  0101               	movlb	1	; () banked
  8311  0112D0  1157               	iorwf	(sprintf@val+2)& (0+255),w,b
  8312  0112D2  0101               	movlb	1	; () banked
  8313  0112D4  1158               	iorwf	(sprintf@val+3)& (0+255),w,b
  8314  0112D6  A4D8               	btfss	status,2,c
  8315  0112D8  D003               	goto	l9025
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;doprnt.c: 1291: prec++;
  8319  0112DA  0101               	movlb	1	; () banked
  8320  0112DC  4B5F               	infsnz	sprintf@prec& (0+255),f,b
  8321  0112DE  2B60               	incf	(sprintf@prec+1)& (0+255),f,b
  8322  0112E0                     l9025:
  8323                           
  8324                           ; BSR set to: 1
  8325                           ;doprnt.c: 1339: if(c < prec)
  8326  0112E0  0E80               	movlw	128
  8327  0112E2  0101               	movlb	1	; () banked
  8328  0112E4  BF65               	btfsc	sprintf@c& (0+255),7,b
  8329  0112E6  0E7F               	movlw	127
  8330  0112E8  0100               	movlb	0	; () banked
  8331  0112EA  6FCA               	movwf	??_sprintf& (0+255),b
  8332  0112EC  0101               	movlb	1	; () banked
  8333  0112EE  515F               	movf	sprintf@prec& (0+255),w,b
  8334  0112F0  0101               	movlb	1	; () banked
  8335  0112F2  5D65               	subwf	sprintf@c& (0+255),w,b
  8336  0112F4  0101               	movlb	1	; () banked
  8337  0112F6  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  8338  0112F8  0A80               	xorlw	128
  8339  0112FA  0100               	movlb	0	; () banked
  8340  0112FC  59CA               	subwfb	??_sprintf& (0+255),w,b
  8341  0112FE  B0D8               	btfsc	status,0,c
  8342  011300  D003               	goto	l9029
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;doprnt.c: 1340: c = prec;
  8346  011302  C15F  F165         	movff	sprintf@prec,sprintf@c
  8347  011306  D018               	goto	l9033
  8348  011308                     l9029:
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;doprnt.c: 1341: else if(prec < c)
  8352  011308  0101               	movlb	1	; () banked
  8353  01130A  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  8354  01130C  0A80               	xorlw	128
  8355  01130E  0100               	movlb	0	; () banked
  8356  011310  6FCA               	movwf	??_sprintf& (0+255),b
  8357  011312  0101               	movlb	1	; () banked
  8358  011314  5165               	movf	sprintf@c& (0+255),w,b
  8359  011316  0101               	movlb	1	; () banked
  8360  011318  5D5F               	subwf	sprintf@prec& (0+255),w,b
  8361  01131A  0E80               	movlw	128
  8362  01131C  0101               	movlb	1	; () banked
  8363  01131E  BF65               	btfsc	sprintf@c& (0+255),7,b
  8364  011320  0E7F               	movlw	127
  8365  011322  0100               	movlb	0	; () banked
  8366  011324  59CA               	subwfb	??_sprintf& (0+255),w,b
  8367  011326  B0D8               	btfsc	status,0,c
  8368  011328  D007               	goto	l9033
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;doprnt.c: 1342: prec = c;
  8372  01132A  0101               	movlb	1	; () banked
  8373  01132C  5165               	movf	sprintf@c& (0+255),w,b
  8374  01132E  0101               	movlb	1	; () banked
  8375  011330  6F5F               	movwf	sprintf@prec& (0+255),b
  8376  011332  6B60               	clrf	(sprintf@prec+1)& (0+255),b
  8377  011334  BF5F               	btfsc	sprintf@prec& (0+255),7,b
  8378  011336  0760               	decf	(sprintf@prec+1)& (0+255),f,b
  8379  011338                     l9033:
  8380                           
  8381                           ;doprnt.c: 1422: {
  8382                           ;doprnt.c: 1438: if(flag & 0x03)
  8383  011338  0E03               	movlw	3
  8384  01133A  0101               	movlb	1	; () banked
  8385  01133C  1553               	andwf	sprintf@flag& (0+255),w,b
  8386  01133E  0100               	movlb	0	; () banked
  8387  011340  6FCA               	movwf	??_sprintf& (0+255),b
  8388  011342  0E00               	movlw	0
  8389  011344  0101               	movlb	1	; () banked
  8390  011346  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  8391  011348  0100               	movlb	0	; () banked
  8392  01134A  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  8393  01134C  0100               	movlb	0	; () banked
  8394  01134E  51CA               	movf	??_sprintf& (0+255),w,b
  8395  011350  0100               	movlb	0	; () banked
  8396  011352  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  8397  011354  B4D8               	btfsc	status,2,c
  8398  011356  D009               	goto	l9039
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8402  011358  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8403  01135C  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8404  011360  0E2D               	movlw	45
  8405  011362  6EDF               	movwf	indf2,c
  8406  011364                     l9037:
  8407                           
  8408                           ; BSR set to: 0
  8409  011364  0100               	movlb	0	; () banked
  8410  011366  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8411  011368  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8412  01136A                     l9039:
  8413  01136A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  8414  01136E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  8415  011372  0100               	movlb	0	; () banked
  8416  011374  4BC4               	infsnz	sprintf@f& (0+255),f,b
  8417  011376  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  8418  011378                     	if	0	;tblptru may be non-zero
  8419  011378                     	endif
  8420  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8421  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  8422  01137A  6EF8               	movwf	tblptru,c
  8423  01137C                     	endif
  8424  01137C  0008               	tblrd		*
  8425  01137E  CFF5 F165          	movff	tablat,sprintf@c
  8426  011382  0101               	movlb	1	; () banked
  8427  011384  5165               	movf	sprintf@c& (0+255),w,b
  8428  011386  A4D8               	btfss	status,2,c
  8429  011388  EF8B  F085         	goto	l8841
  8430  01138C                     l9041:
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;doprnt.c: 1538: *sp = 0;
  8434  01138C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8435  011390  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8436  011394  0E00               	movlw	0
  8437  011396  6EDF               	movwf	indf2,c
  8438  011398  0012               	return	
  8439  01139A                     __end_of_sprintf:
  8440                           	opt stack 0
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           postinc0	equ	0xFEE
  8449                           wreg	equ	0xFE8
  8450                           indf2	equ	0xFDF
  8451                           postinc2	equ	0xFDE
  8452                           fsr2h	equ	0xFDA
  8453                           fsr2l	equ	0xFD9
  8454                           status	equ	0xFD8
  8455                           
  8456 ;; *************** function _scale *****************
  8457 ;; Defined at:
  8458 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  scl             1    wreg     char 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  scl             1   63[BANK0 ] char 
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  4   55[BANK0 ] char 
  8465 ;; Registers used:
  8466 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8472 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8473 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;Total ram usage:        9 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:    4
  8479 ;; This function calls:
  8480 ;;		___awdiv
  8481 ;;		___awmod
  8482 ;;		___flmul
  8483 ;; This function is called by:
  8484 ;;		_sprintf
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text11
  8489  012974                     __ptext11:
  8490                           	opt stack 0
  8491  012974                     _scale:
  8492                           	opt stack 24
  8493                           
  8494                           ; BSR set to: 1
  8495                           ;incstack = 0
  8496                           ;scale@scl stored from wreg
  8497  012974  0100               	movlb	0	; () banked
  8498  012976  6F9F               	movwf	scale@scl& (0+255),b
  8499                           
  8500                           ;doprnt.c: 428: if(scl < 0) {
  8501  012978  0100               	movlb	0	; () banked
  8502  01297A  AF9F               	btfss	scale@scl& (0+255),7,b
  8503  01297C  D145               	goto	l8449
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;doprnt.c: 429: scl = -scl;
  8507  01297E  0100               	movlb	0	; () banked
  8508  012980  6D9F               	negf	scale@scl& (0+255),b
  8509                           
  8510                           ;doprnt.c: 430: if(scl>=110)
  8511  012982  0100               	movlb	0	; () banked
  8512  012984  519F               	movf	scale@scl& (0+255),w,b
  8513  012986  0A80               	xorlw	128
  8514  012988  0F12               	addlw	-238
  8515  01298A  A0D8               	btfss	status,0,c
  8516  01298C  D0BB               	goto	l8439
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8520  01298E  0E00               	movlw	0
  8521  012990  0100               	movlb	0	; () banked
  8522  012992  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8523  012994  0E0A               	movlw	10
  8524  012996  6F78               	movwf	___awdiv@divisor& (0+255),b
  8525  012998  0E00               	movlw	0
  8526  01299A  0100               	movlb	0	; () banked
  8527  01299C  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8528  01299E  0E64               	movlw	100
  8529  0129A0  6F72               	movwf	___awmod@divisor& (0+255),b
  8530  0129A2  0100               	movlb	0	; () banked
  8531  0129A4  519F               	movf	scale@scl& (0+255),w,b
  8532  0129A6  0100               	movlb	0	; () banked
  8533  0129A8  6F70               	movwf	___awmod@dividend& (0+255),b
  8534  0129AA  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8535  0129AC  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8536  0129AE  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8537  0129B0  EC33  F0AE         	call	___awmod	;wreg free
  8538  0129B4  C070  F076         	movff	?___awmod,___awdiv@dividend
  8539  0129B8  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8540  0129BC  EC68  F0AC         	call	___awdiv	;wreg free
  8541  0129C0  0100               	movlb	0	; () banked
  8542  0129C2  90D8               	bcf	status,0,c
  8543  0129C4  3776               	rlcf	?___awdiv& (0+255),f,b
  8544  0129C6  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8545  0129C8  0100               	movlb	0	; () banked
  8546  0129CA  90D8               	bcf	status,0,c
  8547  0129CC  3776               	rlcf	?___awdiv& (0+255),f,b
  8548  0129CE  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8549  0129D0  0E24               	movlw	36
  8550  0129D2  0100               	movlb	0	; () banked
  8551  0129D4  2776               	addwf	?___awdiv& (0+255),f,b
  8552  0129D6  0E00               	movlw	0
  8553  0129D8  0100               	movlb	0	; () banked
  8554  0129DA  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8555  0129DC  0E9F               	movlw	low __npowers_
  8556  0129DE  0100               	movlb	0	; () banked
  8557  0129E0  2576               	addwf	?___awdiv& (0+255),w,b
  8558  0129E2  6EF6               	movwf	tblptrl,c
  8559  0129E4  0EFD               	movlw	high __npowers_
  8560  0129E6  0100               	movlb	0	; () banked
  8561  0129E8  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8562  0129EA  6EF7               	movwf	tblptrh,c
  8563  0129EC                     	if	1	;There are 3 active tblptr bytes
  8564  0129EC  6AF8               	clrf	tblptru,c
  8565  0129EE  0E00               	movlw	low (__mediumconst shr (0+16))
  8566  0129F0  22F8               	addwfc	tblptru,f,c
  8567  0129F2                     	endif
  8568  0129F2  0009               	tblrd		*+
  8569  0129F4  CFF5 F082          	movff	tablat,___flmul@a
  8570  0129F8  0009               	tblrd		*+
  8571  0129FA  CFF5 F083          	movff	tablat,___flmul@a+1
  8572  0129FE  0009               	tblrd		*+
  8573  012A00  CFF5 F084          	movff	tablat,___flmul@a+2
  8574  012A04  000A               	tblrd		*-
  8575  012A06  CFF5 F085          	movff	tablat,___flmul@a+3
  8576  012A0A  0E00               	movlw	0
  8577  012A0C  0100               	movlb	0	; () banked
  8578  012A0E  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8579  012A10  0E64               	movlw	100
  8580  012A12  6F78               	movwf	___awdiv@divisor& (0+255),b
  8581  012A14  0100               	movlb	0	; () banked
  8582  012A16  519F               	movf	scale@scl& (0+255),w,b
  8583  012A18  0100               	movlb	0	; () banked
  8584  012A1A  6F76               	movwf	___awdiv@dividend& (0+255),b
  8585  012A1C  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8586  012A1E  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8587  012A20  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8588  012A22  EC68  F0AC         	call	___awdiv	;wreg free
  8589  012A26  0100               	movlb	0	; () banked
  8590  012A28  90D8               	bcf	status,0,c
  8591  012A2A  3776               	rlcf	?___awdiv& (0+255),f,b
  8592  012A2C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8593  012A2E  0100               	movlb	0	; () banked
  8594  012A30  90D8               	bcf	status,0,c
  8595  012A32  3776               	rlcf	?___awdiv& (0+255),f,b
  8596  012A34  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8597  012A36  0E48               	movlw	72
  8598  012A38  0100               	movlb	0	; () banked
  8599  012A3A  2776               	addwf	?___awdiv& (0+255),f,b
  8600  012A3C  0E00               	movlw	0
  8601  012A3E  0100               	movlb	0	; () banked
  8602  012A40  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8603  012A42  0E9F               	movlw	low __npowers_
  8604  012A44  0100               	movlb	0	; () banked
  8605  012A46  2576               	addwf	?___awdiv& (0+255),w,b
  8606  012A48  6EF6               	movwf	tblptrl,c
  8607  012A4A  0EFD               	movlw	high __npowers_
  8608  012A4C  0100               	movlb	0	; () banked
  8609  012A4E  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8610  012A50  6EF7               	movwf	tblptrh,c
  8611  012A52                     	if	1	;There are 3 active tblptr bytes
  8612  012A52  6AF8               	clrf	tblptru,c
  8613  012A54  0E00               	movlw	low (__mediumconst shr (0+16))
  8614  012A56  22F8               	addwfc	tblptru,f,c
  8615  012A58                     	endif
  8616  012A58  0009               	tblrd		*+
  8617  012A5A  CFF5 F07E          	movff	tablat,___flmul@b
  8618  012A5E  0009               	tblrd		*+
  8619  012A60  CFF5 F07F          	movff	tablat,___flmul@b+1
  8620  012A64  0009               	tblrd		*+
  8621  012A66  CFF5 F080          	movff	tablat,___flmul@b+2
  8622  012A6A  000A               	tblrd		*-
  8623  012A6C  CFF5 F081          	movff	tablat,___flmul@b+3
  8624  012A70  EC21  F09C         	call	___flmul	;wreg free
  8625  012A74  C07E  F09B         	movff	?___flmul,_scale$4118
  8626  012A78  C07F  F09C         	movff	?___flmul+1,_scale$4118+1
  8627  012A7C  C080  F09D         	movff	?___flmul+2,_scale$4118+2
  8628  012A80  C081  F09E         	movff	?___flmul+3,_scale$4118+3
  8629                           
  8630                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8631  012A84  C09B  F07E         	movff	_scale$4118,___flmul@b
  8632  012A88  C09C  F07F         	movff	_scale$4118+1,___flmul@b+1
  8633  012A8C  C09D  F080         	movff	_scale$4118+2,___flmul@b+2
  8634  012A90  C09E  F081         	movff	_scale$4118+3,___flmul@b+3
  8635  012A94  0E00               	movlw	0
  8636  012A96  0100               	movlb	0	; () banked
  8637  012A98  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8638  012A9A  0E0A               	movlw	10
  8639  012A9C  6F72               	movwf	___awmod@divisor& (0+255),b
  8640  012A9E  0100               	movlb	0	; () banked
  8641  012AA0  519F               	movf	scale@scl& (0+255),w,b
  8642  012AA2  0100               	movlb	0	; () banked
  8643  012AA4  6F70               	movwf	___awmod@dividend& (0+255),b
  8644  012AA6  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8645  012AA8  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8646  012AAA  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8647  012AAC  EC33  F0AE         	call	___awmod	;wreg free
  8648  012AB0  0100               	movlb	0	; () banked
  8649  012AB2  90D8               	bcf	status,0,c
  8650  012AB4  3770               	rlcf	?___awmod& (0+255),f,b
  8651  012AB6  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8652  012AB8  0100               	movlb	0	; () banked
  8653  012ABA  90D8               	bcf	status,0,c
  8654  012ABC  3770               	rlcf	?___awmod& (0+255),f,b
  8655  012ABE  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8656  012AC0  0E9F               	movlw	low __npowers_
  8657  012AC2  0100               	movlb	0	; () banked
  8658  012AC4  2570               	addwf	?___awmod& (0+255),w,b
  8659  012AC6  6EF6               	movwf	tblptrl,c
  8660  012AC8  0EFD               	movlw	high __npowers_
  8661  012ACA  0100               	movlb	0	; () banked
  8662  012ACC  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8663  012ACE  6EF7               	movwf	tblptrh,c
  8664  012AD0                     	if	1	;There are 3 active tblptr bytes
  8665  012AD0  6AF8               	clrf	tblptru,c
  8666  012AD2  0E00               	movlw	low (__mediumconst shr (0+16))
  8667  012AD4  22F8               	addwfc	tblptru,f,c
  8668  012AD6                     	endif
  8669  012AD6  0009               	tblrd		*+
  8670  012AD8  CFF5 F082          	movff	tablat,___flmul@a
  8671  012ADC  0009               	tblrd		*+
  8672  012ADE  CFF5 F083          	movff	tablat,___flmul@a+1
  8673  012AE2  0009               	tblrd		*+
  8674  012AE4  CFF5 F084          	movff	tablat,___flmul@a+2
  8675  012AE8  000A               	tblrd		*-
  8676  012AEA  CFF5 F085          	movff	tablat,___flmul@a+3
  8677  012AEE  EC21  F09C         	call	___flmul	;wreg free
  8678  012AF2  C07E  F097         	movff	?___flmul,?_scale
  8679  012AF6  C07F  F098         	movff	?___flmul+1,?_scale+1
  8680  012AFA  C080  F099         	movff	?___flmul+2,?_scale+2
  8681  012AFE  C081  F09A         	movff	?___flmul+3,?_scale+3
  8682  012B02  0012               	return	
  8683  012B04                     l8439:
  8684                           
  8685                           ;doprnt.c: 432: else if(scl > 10)
  8686  012B04  0100               	movlb	0	; () banked
  8687  012B06  519F               	movf	scale@scl& (0+255),w,b
  8688  012B08  0A80               	xorlw	128
  8689  012B0A  0F75               	addlw	-139
  8690  012B0C  A0D8               	btfss	status,0,c
  8691  012B0E  D063               	goto	l8445
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8695  012B10  0E00               	movlw	0
  8696  012B12  0100               	movlb	0	; () banked
  8697  012B14  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8698  012B16  0E0A               	movlw	10
  8699  012B18  6F78               	movwf	___awdiv@divisor& (0+255),b
  8700  012B1A  0100               	movlb	0	; () banked
  8701  012B1C  519F               	movf	scale@scl& (0+255),w,b
  8702  012B1E  0100               	movlb	0	; () banked
  8703  012B20  6F76               	movwf	___awdiv@dividend& (0+255),b
  8704  012B22  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8705  012B24  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8706  012B26  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8707  012B28  EC68  F0AC         	call	___awdiv	;wreg free
  8708  012B2C  0100               	movlb	0	; () banked
  8709  012B2E  90D8               	bcf	status,0,c
  8710  012B30  3776               	rlcf	?___awdiv& (0+255),f,b
  8711  012B32  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8712  012B34  0100               	movlb	0	; () banked
  8713  012B36  90D8               	bcf	status,0,c
  8714  012B38  3776               	rlcf	?___awdiv& (0+255),f,b
  8715  012B3A  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8716  012B3C  0E24               	movlw	36
  8717  012B3E  0100               	movlb	0	; () banked
  8718  012B40  2776               	addwf	?___awdiv& (0+255),f,b
  8719  012B42  0E00               	movlw	0
  8720  012B44  0100               	movlb	0	; () banked
  8721  012B46  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8722  012B48  0E9F               	movlw	low __npowers_
  8723  012B4A  0100               	movlb	0	; () banked
  8724  012B4C  2576               	addwf	?___awdiv& (0+255),w,b
  8725  012B4E  6EF6               	movwf	tblptrl,c
  8726  012B50  0EFD               	movlw	high __npowers_
  8727  012B52  0100               	movlb	0	; () banked
  8728  012B54  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8729  012B56  6EF7               	movwf	tblptrh,c
  8730  012B58                     	if	1	;There are 3 active tblptr bytes
  8731  012B58  6AF8               	clrf	tblptru,c
  8732  012B5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8733  012B5C  22F8               	addwfc	tblptru,f,c
  8734  012B5E                     	endif
  8735  012B5E  0009               	tblrd		*+
  8736  012B60  CFF5 F07E          	movff	tablat,___flmul@b
  8737  012B64  0009               	tblrd		*+
  8738  012B66  CFF5 F07F          	movff	tablat,___flmul@b+1
  8739  012B6A  0009               	tblrd		*+
  8740  012B6C  CFF5 F080          	movff	tablat,___flmul@b+2
  8741  012B70  000A               	tblrd		*-
  8742  012B72  CFF5 F081          	movff	tablat,___flmul@b+3
  8743  012B76  0E00               	movlw	0
  8744  012B78  0100               	movlb	0	; () banked
  8745  012B7A  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8746  012B7C  0E0A               	movlw	10
  8747  012B7E  6F72               	movwf	___awmod@divisor& (0+255),b
  8748  012B80  0100               	movlb	0	; () banked
  8749  012B82  519F               	movf	scale@scl& (0+255),w,b
  8750  012B84  0100               	movlb	0	; () banked
  8751  012B86  6F70               	movwf	___awmod@dividend& (0+255),b
  8752  012B88  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8753  012B8A  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8754  012B8C  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8755  012B8E  EC33  F0AE         	call	___awmod	;wreg free
  8756  012B92  0100               	movlb	0	; () banked
  8757  012B94  90D8               	bcf	status,0,c
  8758  012B96  3770               	rlcf	?___awmod& (0+255),f,b
  8759  012B98  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8760  012B9A  0100               	movlb	0	; () banked
  8761  012B9C  90D8               	bcf	status,0,c
  8762  012B9E  3770               	rlcf	?___awmod& (0+255),f,b
  8763  012BA0  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8764  012BA2  0E9F               	movlw	low __npowers_
  8765  012BA4  0100               	movlb	0	; () banked
  8766  012BA6  2570               	addwf	?___awmod& (0+255),w,b
  8767  012BA8  6EF6               	movwf	tblptrl,c
  8768  012BAA  0EFD               	movlw	high __npowers_
  8769  012BAC  0100               	movlb	0	; () banked
  8770  012BAE  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8771  012BB0  6EF7               	movwf	tblptrh,c
  8772  012BB2                     	if	1	;There are 3 active tblptr bytes
  8773  012BB2  6AF8               	clrf	tblptru,c
  8774  012BB4  0E00               	movlw	low (__mediumconst shr (0+16))
  8775  012BB6  22F8               	addwfc	tblptru,f,c
  8776  012BB8                     	endif
  8777  012BB8  0009               	tblrd		*+
  8778  012BBA  CFF5 F082          	movff	tablat,___flmul@a
  8779  012BBE  0009               	tblrd		*+
  8780  012BC0  CFF5 F083          	movff	tablat,___flmul@a+1
  8781  012BC4  0009               	tblrd		*+
  8782  012BC6  CFF5 F084          	movff	tablat,___flmul@a+2
  8783  012BCA  000A               	tblrd		*-
  8784  012BCC  CFF5 F085          	movff	tablat,___flmul@a+3
  8785  012BD0  EC21  F09C         	call	___flmul	;wreg free
  8786  012BD4  D78E               	goto	L6
  8787  012BD6                     l8445:
  8788                           
  8789                           ;doprnt.c: 434: return _npowers_[scl];
  8790  012BD6  0100               	movlb	0	; () banked
  8791  012BD8  519F               	movf	scale@scl& (0+255),w,b
  8792  012BDA  0D04               	mullw	4
  8793  012BDC  0E9F               	movlw	low __npowers_
  8794  012BDE  24F3               	addwf	prodl,w,c
  8795  012BE0  6EF6               	movwf	tblptrl,c
  8796  012BE2  0EFD               	movlw	high __npowers_
  8797  012BE4  20F4               	addwfc	prodh,w,c
  8798  012BE6  6EF7               	movwf	tblptrh,c
  8799  012BE8                     	if	1	;There are 3 active tblptr bytes
  8800  012BE8  6AF8               	clrf	tblptru,c
  8801  012BEA  0E00               	movlw	low (__mediumconst shr (0+16))
  8802  012BEC  22F8               	addwfc	tblptru,f,c
  8803  012BEE                     	endif
  8804  012BEE  0009               	tblrd		*+
  8805  012BF0  CFF5 F097          	movff	tablat,?_scale
  8806  012BF4  0009               	tblrd		*+
  8807  012BF6  CFF5 F098          	movff	tablat,?_scale+1
  8808  012BFA  0009               	tblrd		*+
  8809  012BFC  CFF5 F099          	movff	tablat,?_scale+2
  8810  012C00  000A               	tblrd		*-
  8811  012C02  CFF5 F09A          	movff	tablat,?_scale+3
  8812                           
  8813                           ; BSR set to: 0
  8814  012C06  0012               	return	
  8815  012C08                     l8449:
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;doprnt.c: 435: }
  8819                           ;doprnt.c: 436: if(scl>=110)
  8820  012C08  0100               	movlb	0	; () banked
  8821  012C0A  519F               	movf	scale@scl& (0+255),w,b
  8822  012C0C  0A80               	xorlw	128
  8823  012C0E  0F12               	addlw	-238
  8824  012C10  A0D8               	btfss	status,0,c
  8825  012C12  D0BB               	goto	l8457
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8829  012C14  0E00               	movlw	0
  8830  012C16  0100               	movlb	0	; () banked
  8831  012C18  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8832  012C1A  0E0A               	movlw	10
  8833  012C1C  6F78               	movwf	___awdiv@divisor& (0+255),b
  8834  012C1E  0E00               	movlw	0
  8835  012C20  0100               	movlb	0	; () banked
  8836  012C22  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8837  012C24  0E64               	movlw	100
  8838  012C26  6F72               	movwf	___awmod@divisor& (0+255),b
  8839  012C28  0100               	movlb	0	; () banked
  8840  012C2A  519F               	movf	scale@scl& (0+255),w,b
  8841  012C2C  0100               	movlb	0	; () banked
  8842  012C2E  6F70               	movwf	___awmod@dividend& (0+255),b
  8843  012C30  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8844  012C32  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8845  012C34  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8846  012C36  EC33  F0AE         	call	___awmod	;wreg free
  8847  012C3A  C070  F076         	movff	?___awmod,___awdiv@dividend
  8848  012C3E  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8849  012C42  EC68  F0AC         	call	___awdiv	;wreg free
  8850  012C46  0100               	movlb	0	; () banked
  8851  012C48  90D8               	bcf	status,0,c
  8852  012C4A  3776               	rlcf	?___awdiv& (0+255),f,b
  8853  012C4C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8854  012C4E  0100               	movlb	0	; () banked
  8855  012C50  90D8               	bcf	status,0,c
  8856  012C52  3776               	rlcf	?___awdiv& (0+255),f,b
  8857  012C54  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8858  012C56  0E24               	movlw	36
  8859  012C58  0100               	movlb	0	; () banked
  8860  012C5A  2776               	addwf	?___awdiv& (0+255),f,b
  8861  012C5C  0E00               	movlw	0
  8862  012C5E  0100               	movlb	0	; () banked
  8863  012C60  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8864  012C62  0ED3               	movlw	low __powers_
  8865  012C64  0100               	movlb	0	; () banked
  8866  012C66  2576               	addwf	?___awdiv& (0+255),w,b
  8867  012C68  6EF6               	movwf	tblptrl,c
  8868  012C6A  0EFD               	movlw	high __powers_
  8869  012C6C  0100               	movlb	0	; () banked
  8870  012C6E  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8871  012C70  6EF7               	movwf	tblptrh,c
  8872  012C72                     	if	1	;There are 3 active tblptr bytes
  8873  012C72  6AF8               	clrf	tblptru,c
  8874  012C74  0E00               	movlw	low (__mediumconst shr (0+16))
  8875  012C76  22F8               	addwfc	tblptru,f,c
  8876  012C78                     	endif
  8877  012C78  0009               	tblrd		*+
  8878  012C7A  CFF5 F082          	movff	tablat,___flmul@a
  8879  012C7E  0009               	tblrd		*+
  8880  012C80  CFF5 F083          	movff	tablat,___flmul@a+1
  8881  012C84  0009               	tblrd		*+
  8882  012C86  CFF5 F084          	movff	tablat,___flmul@a+2
  8883  012C8A  000A               	tblrd		*-
  8884  012C8C  CFF5 F085          	movff	tablat,___flmul@a+3
  8885  012C90  0E00               	movlw	0
  8886  012C92  0100               	movlb	0	; () banked
  8887  012C94  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8888  012C96  0E64               	movlw	100
  8889  012C98  6F78               	movwf	___awdiv@divisor& (0+255),b
  8890  012C9A  0100               	movlb	0	; () banked
  8891  012C9C  519F               	movf	scale@scl& (0+255),w,b
  8892  012C9E  0100               	movlb	0	; () banked
  8893  012CA0  6F76               	movwf	___awdiv@dividend& (0+255),b
  8894  012CA2  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8895  012CA4  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8896  012CA6  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8897  012CA8  EC68  F0AC         	call	___awdiv	;wreg free
  8898  012CAC  0100               	movlb	0	; () banked
  8899  012CAE  90D8               	bcf	status,0,c
  8900  012CB0  3776               	rlcf	?___awdiv& (0+255),f,b
  8901  012CB2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8902  012CB4  0100               	movlb	0	; () banked
  8903  012CB6  90D8               	bcf	status,0,c
  8904  012CB8  3776               	rlcf	?___awdiv& (0+255),f,b
  8905  012CBA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8906  012CBC  0E48               	movlw	72
  8907  012CBE  0100               	movlb	0	; () banked
  8908  012CC0  2776               	addwf	?___awdiv& (0+255),f,b
  8909  012CC2  0E00               	movlw	0
  8910  012CC4  0100               	movlb	0	; () banked
  8911  012CC6  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8912  012CC8  0ED3               	movlw	low __powers_
  8913  012CCA  0100               	movlb	0	; () banked
  8914  012CCC  2576               	addwf	?___awdiv& (0+255),w,b
  8915  012CCE  6EF6               	movwf	tblptrl,c
  8916  012CD0  0EFD               	movlw	high __powers_
  8917  012CD2  0100               	movlb	0	; () banked
  8918  012CD4  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8919  012CD6  6EF7               	movwf	tblptrh,c
  8920  012CD8                     	if	1	;There are 3 active tblptr bytes
  8921  012CD8  6AF8               	clrf	tblptru,c
  8922  012CDA  0E00               	movlw	low (__mediumconst shr (0+16))
  8923  012CDC  22F8               	addwfc	tblptru,f,c
  8924  012CDE                     	endif
  8925  012CDE  0009               	tblrd		*+
  8926  012CE0  CFF5 F07E          	movff	tablat,___flmul@b
  8927  012CE4  0009               	tblrd		*+
  8928  012CE6  CFF5 F07F          	movff	tablat,___flmul@b+1
  8929  012CEA  0009               	tblrd		*+
  8930  012CEC  CFF5 F080          	movff	tablat,___flmul@b+2
  8931  012CF0  000A               	tblrd		*-
  8932  012CF2  CFF5 F081          	movff	tablat,___flmul@b+3
  8933  012CF6  EC21  F09C         	call	___flmul	;wreg free
  8934  012CFA  C07E  F09B         	movff	?___flmul,_scale$4118
  8935  012CFE  C07F  F09C         	movff	?___flmul+1,_scale$4118+1
  8936  012D02  C080  F09D         	movff	?___flmul+2,_scale$4118+2
  8937  012D06  C081  F09E         	movff	?___flmul+3,_scale$4118+3
  8938                           
  8939                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8940  012D0A  C09B  F07E         	movff	_scale$4118,___flmul@b
  8941  012D0E  C09C  F07F         	movff	_scale$4118+1,___flmul@b+1
  8942  012D12  C09D  F080         	movff	_scale$4118+2,___flmul@b+2
  8943  012D16  C09E  F081         	movff	_scale$4118+3,___flmul@b+3
  8944  012D1A  0E00               	movlw	0
  8945  012D1C  0100               	movlb	0	; () banked
  8946  012D1E  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8947  012D20  0E0A               	movlw	10
  8948  012D22  6F72               	movwf	___awmod@divisor& (0+255),b
  8949  012D24  0100               	movlb	0	; () banked
  8950  012D26  519F               	movf	scale@scl& (0+255),w,b
  8951  012D28  0100               	movlb	0	; () banked
  8952  012D2A  6F70               	movwf	___awmod@dividend& (0+255),b
  8953  012D2C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8954  012D2E  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8955  012D30  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8956  012D32  EC33  F0AE         	call	___awmod	;wreg free
  8957  012D36  0100               	movlb	0	; () banked
  8958  012D38  90D8               	bcf	status,0,c
  8959  012D3A  3770               	rlcf	?___awmod& (0+255),f,b
  8960  012D3C  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8961  012D3E  0100               	movlb	0	; () banked
  8962  012D40  90D8               	bcf	status,0,c
  8963  012D42  3770               	rlcf	?___awmod& (0+255),f,b
  8964  012D44  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8965  012D46  0ED3               	movlw	low __powers_
  8966  012D48  0100               	movlb	0	; () banked
  8967  012D4A  2570               	addwf	?___awmod& (0+255),w,b
  8968  012D4C  6EF6               	movwf	tblptrl,c
  8969  012D4E  0EFD               	movlw	high __powers_
  8970  012D50  0100               	movlb	0	; () banked
  8971  012D52  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8972  012D54  6EF7               	movwf	tblptrh,c
  8973  012D56                     	if	1	;There are 3 active tblptr bytes
  8974  012D56  6AF8               	clrf	tblptru,c
  8975  012D58  0E00               	movlw	low (__mediumconst shr (0+16))
  8976  012D5A  22F8               	addwfc	tblptru,f,c
  8977  012D5C                     	endif
  8978  012D5C  0009               	tblrd		*+
  8979  012D5E  CFF5 F082          	movff	tablat,___flmul@a
  8980  012D62  0009               	tblrd		*+
  8981  012D64  CFF5 F083          	movff	tablat,___flmul@a+1
  8982  012D68  0009               	tblrd		*+
  8983  012D6A  CFF5 F084          	movff	tablat,___flmul@a+2
  8984  012D6E  000A               	tblrd		*-
  8985  012D70  CFF5 F085          	movff	tablat,___flmul@a+3
  8986  012D74  EC21  F09C         	call	___flmul	;wreg free
  8987  012D78  C07E  F097         	movff	?___flmul,?_scale
  8988  012D7C  C07F  F098         	movff	?___flmul+1,?_scale+1
  8989  012D80  C080  F099         	movff	?___flmul+2,?_scale+2
  8990  012D84  C081  F09A         	movff	?___flmul+3,?_scale+3
  8991  012D88  0012               	return	
  8992  012D8A                     l8457:
  8993                           
  8994                           ;doprnt.c: 438: else if(scl > 10)
  8995  012D8A  0100               	movlb	0	; () banked
  8996  012D8C  519F               	movf	scale@scl& (0+255),w,b
  8997  012D8E  0A80               	xorlw	128
  8998  012D90  0F75               	addlw	-139
  8999  012D92  A0D8               	btfss	status,0,c
  9000  012D94  D063               	goto	l8463
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9004  012D96  0E00               	movlw	0
  9005  012D98  0100               	movlb	0	; () banked
  9006  012D9A  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9007  012D9C  0E0A               	movlw	10
  9008  012D9E  6F78               	movwf	___awdiv@divisor& (0+255),b
  9009  012DA0  0100               	movlb	0	; () banked
  9010  012DA2  519F               	movf	scale@scl& (0+255),w,b
  9011  012DA4  0100               	movlb	0	; () banked
  9012  012DA6  6F76               	movwf	___awdiv@dividend& (0+255),b
  9013  012DA8  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9014  012DAA  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  9015  012DAC  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9016  012DAE  EC68  F0AC         	call	___awdiv	;wreg free
  9017  012DB2  0100               	movlb	0	; () banked
  9018  012DB4  90D8               	bcf	status,0,c
  9019  012DB6  3776               	rlcf	?___awdiv& (0+255),f,b
  9020  012DB8  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9021  012DBA  0100               	movlb	0	; () banked
  9022  012DBC  90D8               	bcf	status,0,c
  9023  012DBE  3776               	rlcf	?___awdiv& (0+255),f,b
  9024  012DC0  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9025  012DC2  0E24               	movlw	36
  9026  012DC4  0100               	movlb	0	; () banked
  9027  012DC6  2776               	addwf	?___awdiv& (0+255),f,b
  9028  012DC8  0E00               	movlw	0
  9029  012DCA  0100               	movlb	0	; () banked
  9030  012DCC  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9031  012DCE  0ED3               	movlw	low __powers_
  9032  012DD0  0100               	movlb	0	; () banked
  9033  012DD2  2576               	addwf	?___awdiv& (0+255),w,b
  9034  012DD4  6EF6               	movwf	tblptrl,c
  9035  012DD6  0EFD               	movlw	high __powers_
  9036  012DD8  0100               	movlb	0	; () banked
  9037  012DDA  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9038  012DDC  6EF7               	movwf	tblptrh,c
  9039  012DDE                     	if	1	;There are 3 active tblptr bytes
  9040  012DDE  6AF8               	clrf	tblptru,c
  9041  012DE0  0E00               	movlw	low (__mediumconst shr (0+16))
  9042  012DE2  22F8               	addwfc	tblptru,f,c
  9043  012DE4                     	endif
  9044  012DE4  0009               	tblrd		*+
  9045  012DE6  CFF5 F07E          	movff	tablat,___flmul@b
  9046  012DEA  0009               	tblrd		*+
  9047  012DEC  CFF5 F07F          	movff	tablat,___flmul@b+1
  9048  012DF0  0009               	tblrd		*+
  9049  012DF2  CFF5 F080          	movff	tablat,___flmul@b+2
  9050  012DF6  000A               	tblrd		*-
  9051  012DF8  CFF5 F081          	movff	tablat,___flmul@b+3
  9052  012DFC  0E00               	movlw	0
  9053  012DFE  0100               	movlb	0	; () banked
  9054  012E00  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9055  012E02  0E0A               	movlw	10
  9056  012E04  6F72               	movwf	___awmod@divisor& (0+255),b
  9057  012E06  0100               	movlb	0	; () banked
  9058  012E08  519F               	movf	scale@scl& (0+255),w,b
  9059  012E0A  0100               	movlb	0	; () banked
  9060  012E0C  6F70               	movwf	___awmod@dividend& (0+255),b
  9061  012E0E  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9062  012E10  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9063  012E12  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9064  012E14  EC33  F0AE         	call	___awmod	;wreg free
  9065  012E18  0100               	movlb	0	; () banked
  9066  012E1A  90D8               	bcf	status,0,c
  9067  012E1C  3770               	rlcf	?___awmod& (0+255),f,b
  9068  012E1E  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9069  012E20  0100               	movlb	0	; () banked
  9070  012E22  90D8               	bcf	status,0,c
  9071  012E24  3770               	rlcf	?___awmod& (0+255),f,b
  9072  012E26  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9073  012E28  0ED3               	movlw	low __powers_
  9074  012E2A  0100               	movlb	0	; () banked
  9075  012E2C  2570               	addwf	?___awmod& (0+255),w,b
  9076  012E2E  6EF6               	movwf	tblptrl,c
  9077  012E30  0EFD               	movlw	high __powers_
  9078  012E32  0100               	movlb	0	; () banked
  9079  012E34  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9080  012E36  6EF7               	movwf	tblptrh,c
  9081  012E38                     	if	1	;There are 3 active tblptr bytes
  9082  012E38  6AF8               	clrf	tblptru,c
  9083  012E3A  0E00               	movlw	low (__mediumconst shr (0+16))
  9084  012E3C  22F8               	addwfc	tblptru,f,c
  9085  012E3E                     	endif
  9086  012E3E  0009               	tblrd		*+
  9087  012E40  CFF5 F082          	movff	tablat,___flmul@a
  9088  012E44  0009               	tblrd		*+
  9089  012E46  CFF5 F083          	movff	tablat,___flmul@a+1
  9090  012E4A  0009               	tblrd		*+
  9091  012E4C  CFF5 F084          	movff	tablat,___flmul@a+2
  9092  012E50  000A               	tblrd		*-
  9093  012E52  CFF5 F085          	movff	tablat,___flmul@a+3
  9094  012E56  EC21  F09C         	call	___flmul	;wreg free
  9095  012E5A  D78E               	goto	L7
  9096  012E5C                     l8463:
  9097                           
  9098                           ;doprnt.c: 440: return _powers_[scl];
  9099  012E5C  0100               	movlb	0	; () banked
  9100  012E5E  519F               	movf	scale@scl& (0+255),w,b
  9101  012E60  0D04               	mullw	4
  9102  012E62  0ED3               	movlw	low __powers_
  9103  012E64  24F3               	addwf	prodl,w,c
  9104  012E66  6EF6               	movwf	tblptrl,c
  9105  012E68  0EFD               	movlw	high __powers_
  9106  012E6A  20F4               	addwfc	prodh,w,c
  9107  012E6C  6EF7               	movwf	tblptrh,c
  9108  012E6E                     	if	1	;There are 3 active tblptr bytes
  9109  012E6E  6AF8               	clrf	tblptru,c
  9110  012E70  0E00               	movlw	low (__mediumconst shr (0+16))
  9111  012E72  22F8               	addwfc	tblptru,f,c
  9112  012E74                     	endif
  9113  012E74  0009               	tblrd		*+
  9114  012E76  CFF5 F097          	movff	tablat,?_scale
  9115  012E7A  0009               	tblrd		*+
  9116  012E7C  CFF5 F098          	movff	tablat,?_scale+1
  9117  012E80  0009               	tblrd		*+
  9118  012E82  CFF5 F099          	movff	tablat,?_scale+2
  9119  012E86  000A               	tblrd		*-
  9120  012E88  CFF5 F09A          	movff	tablat,?_scale+3
  9121  012E8C  0012               	return	
  9122  012E8E                     __end_of_scale:
  9123                           	opt stack 0
  9124                           tblptru	equ	0xFF8
  9125                           tblptrh	equ	0xFF7
  9126                           tblptrl	equ	0xFF6
  9127                           tablat	equ	0xFF5
  9128                           prodh	equ	0xFF4
  9129                           prodl	equ	0xFF3
  9130                           intcon	equ	0xFF2
  9131                           postinc0	equ	0xFEE
  9132                           wreg	equ	0xFE8
  9133                           indf2	equ	0xFDF
  9134                           postinc2	equ	0xFDE
  9135                           fsr2h	equ	0xFDA
  9136                           fsr2l	equ	0xFD9
  9137                           status	equ	0xFD8
  9138                           
  9139 ;; *************** function _isdigit *****************
  9140 ;; Defined at:
  9141 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  c               1    wreg     unsigned char 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  c               1   18[BANK0 ] unsigned char 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;		None               void
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;Total ram usage:        3 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:    3
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_sprintf
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text12
  9170  016468                     __ptext12:
  9171                           	opt stack 0
  9172  016468                     _isdigit:
  9173                           	opt stack 25
  9174                           
  9175                           ;incstack = 0
  9176                           ;isdigit@c stored from wreg
  9177  016468  0100               	movlb	0	; () banked
  9178  01646A  6F72               	movwf	isdigit@c& (0+255),b
  9179  01646C  0E00               	movlw	0
  9180  01646E  0100               	movlb	0	; () banked
  9181  016470  6F71               	movwf	_isdigit$3702& (0+255),b
  9182                           
  9183                           ; BSR set to: 0
  9184  016472  0E3A               	movlw	58
  9185  016474  0100               	movlb	0	; () banked
  9186  016476  6172               	cpfslt	isdigit@c& (0+255),b
  9187  016478  D007               	goto	l8475
  9188                           
  9189                           ; BSR set to: 0
  9190  01647A  0E2F               	movlw	47
  9191  01647C  0100               	movlb	0	; () banked
  9192  01647E  6572               	cpfsgt	isdigit@c& (0+255),b
  9193  016480  D003               	goto	l8475
  9194                           
  9195                           ; BSR set to: 0
  9196  016482  0E01               	movlw	1
  9197  016484  0100               	movlb	0	; () banked
  9198  016486  6F71               	movwf	_isdigit$3702& (0+255),b
  9199  016488                     l8475:
  9200                           
  9201                           ; BSR set to: 0
  9202  016488  C071  F070         	movff	_isdigit$3702,??_isdigit
  9203  01648C  0100               	movlb	0	; () banked
  9204  01648E  3170               	rrcf	??_isdigit& (0+255),w,b
  9205  016490  0012               	return	
  9206  016492                     __end_of_isdigit:
  9207                           	opt stack 0
  9208                           tblptru	equ	0xFF8
  9209                           tblptrh	equ	0xFF7
  9210                           tblptrl	equ	0xFF6
  9211                           tablat	equ	0xFF5
  9212                           prodh	equ	0xFF4
  9213                           prodl	equ	0xFF3
  9214                           intcon	equ	0xFF2
  9215                           postinc0	equ	0xFEE
  9216                           wreg	equ	0xFE8
  9217                           indf2	equ	0xFDF
  9218                           postinc2	equ	0xFDE
  9219                           fsr2h	equ	0xFDA
  9220                           fsr2l	equ	0xFD9
  9221                           status	equ	0xFD8
  9222                           
  9223 ;; *************** function _fround *****************
  9224 ;; Defined at:
  9225 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;  prec            1    wreg     unsigned char 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  prec            1   67[BANK0 ] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  4   55[BANK0 ] unsigned char 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9239 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;Total ram usage:       13 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    4
  9246 ;; This function calls:
  9247 ;;		___awdiv
  9248 ;;		___awmod
  9249 ;;		___flmul
  9250 ;; This function is called by:
  9251 ;;		_sprintf
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text13
  9256  014446                     __ptext13:
  9257                           	opt stack 0
  9258  014446                     _fround:
  9259                           	opt stack 24
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;incstack = 0
  9263                           ;fround@prec stored from wreg
  9264  014446  0100               	movlb	0	; () banked
  9265  014448  6FA3               	movwf	fround@prec& (0+255),b
  9266                           
  9267                           ;doprnt.c: 413: if(prec>=110)
  9268  01444A  0E6D               	movlw	109
  9269  01444C  0100               	movlb	0	; () banked
  9270  01444E  65A3               	cpfsgt	fround@prec& (0+255),b
  9271  014450  D0CD               	goto	l8417
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9275  014452  0E00               	movlw	0
  9276  014454  0100               	movlb	0	; () banked
  9277  014456  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9278  014458  0E0A               	movlw	10
  9279  01445A  6F78               	movwf	___awdiv@divisor& (0+255),b
  9280  01445C  0E00               	movlw	0
  9281  01445E  0100               	movlb	0	; () banked
  9282  014460  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9283  014462  0E64               	movlw	100
  9284  014464  6F72               	movwf	___awmod@divisor& (0+255),b
  9285  014466  C0A3  F070         	movff	fround@prec,___awmod@dividend
  9286  01446A  0100               	movlb	0	; () banked
  9287  01446C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9288  01446E  EC33  F0AE         	call	___awmod	;wreg free
  9289  014472  C070  F076         	movff	?___awmod,___awdiv@dividend
  9290  014476  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  9291  01447A  EC68  F0AC         	call	___awdiv	;wreg free
  9292  01447E  0100               	movlb	0	; () banked
  9293  014480  90D8               	bcf	status,0,c
  9294  014482  3776               	rlcf	?___awdiv& (0+255),f,b
  9295  014484  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9296  014486  0100               	movlb	0	; () banked
  9297  014488  90D8               	bcf	status,0,c
  9298  01448A  3776               	rlcf	?___awdiv& (0+255),f,b
  9299  01448C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9300  01448E  0E24               	movlw	36
  9301  014490  0100               	movlb	0	; () banked
  9302  014492  2776               	addwf	?___awdiv& (0+255),f,b
  9303  014494  0E00               	movlw	0
  9304  014496  0100               	movlb	0	; () banked
  9305  014498  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9306  01449A  0E9F               	movlw	low __npowers_
  9307  01449C  0100               	movlb	0	; () banked
  9308  01449E  2576               	addwf	?___awdiv& (0+255),w,b
  9309  0144A0  6EF6               	movwf	tblptrl,c
  9310  0144A2  0EFD               	movlw	high __npowers_
  9311  0144A4  0100               	movlb	0	; () banked
  9312  0144A6  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9313  0144A8  6EF7               	movwf	tblptrh,c
  9314  0144AA                     	if	1	;There are 3 active tblptr bytes
  9315  0144AA  6AF8               	clrf	tblptru,c
  9316  0144AC  0E00               	movlw	low (__mediumconst shr (0+16))
  9317  0144AE  22F8               	addwfc	tblptru,f,c
  9318  0144B0                     	endif
  9319  0144B0  0009               	tblrd		*+
  9320  0144B2  CFF5 F082          	movff	tablat,___flmul@a
  9321  0144B6  0009               	tblrd		*+
  9322  0144B8  CFF5 F083          	movff	tablat,___flmul@a+1
  9323  0144BC  0009               	tblrd		*+
  9324  0144BE  CFF5 F084          	movff	tablat,___flmul@a+2
  9325  0144C2  000A               	tblrd		*-
  9326  0144C4  CFF5 F085          	movff	tablat,___flmul@a+3
  9327  0144C8  0E00               	movlw	0
  9328  0144CA  0100               	movlb	0	; () banked
  9329  0144CC  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9330  0144CE  0E64               	movlw	100
  9331  0144D0  6F78               	movwf	___awdiv@divisor& (0+255),b
  9332  0144D2  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  9333  0144D6  0100               	movlb	0	; () banked
  9334  0144D8  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9335  0144DA  EC68  F0AC         	call	___awdiv	;wreg free
  9336  0144DE  0100               	movlb	0	; () banked
  9337  0144E0  90D8               	bcf	status,0,c
  9338  0144E2  3776               	rlcf	?___awdiv& (0+255),f,b
  9339  0144E4  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9340  0144E6  0100               	movlb	0	; () banked
  9341  0144E8  90D8               	bcf	status,0,c
  9342  0144EA  3776               	rlcf	?___awdiv& (0+255),f,b
  9343  0144EC  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9344  0144EE  0E48               	movlw	72
  9345  0144F0  0100               	movlb	0	; () banked
  9346  0144F2  2776               	addwf	?___awdiv& (0+255),f,b
  9347  0144F4  0E00               	movlw	0
  9348  0144F6  0100               	movlb	0	; () banked
  9349  0144F8  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9350  0144FA  0E9F               	movlw	low __npowers_
  9351  0144FC  0100               	movlb	0	; () banked
  9352  0144FE  2576               	addwf	?___awdiv& (0+255),w,b
  9353  014500  6EF6               	movwf	tblptrl,c
  9354  014502  0EFD               	movlw	high __npowers_
  9355  014504  0100               	movlb	0	; () banked
  9356  014506  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9357  014508  6EF7               	movwf	tblptrh,c
  9358  01450A                     	if	1	;There are 3 active tblptr bytes
  9359  01450A  6AF8               	clrf	tblptru,c
  9360  01450C  0E00               	movlw	low (__mediumconst shr (0+16))
  9361  01450E  22F8               	addwfc	tblptru,f,c
  9362  014510                     	endif
  9363  014510  0009               	tblrd		*+
  9364  014512  CFF5 F07E          	movff	tablat,___flmul@b
  9365  014516  0009               	tblrd		*+
  9366  014518  CFF5 F07F          	movff	tablat,___flmul@b+1
  9367  01451C  0009               	tblrd		*+
  9368  01451E  CFF5 F080          	movff	tablat,___flmul@b+2
  9369  014522  000A               	tblrd		*-
  9370  014524  CFF5 F081          	movff	tablat,___flmul@b+3
  9371  014528  EC21  F09C         	call	___flmul	;wreg free
  9372  01452C  C07E  F09F         	movff	?___flmul,_fround$4116
  9373  014530  C07F  F0A0         	movff	?___flmul+1,_fround$4116+1
  9374  014534  C080  F0A1         	movff	?___flmul+2,_fround$4116+2
  9375  014538  C081  F0A2         	movff	?___flmul+3,_fround$4116+3
  9376                           
  9377                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9378  01453C  0E00               	movlw	0
  9379  01453E  0100               	movlb	0	; () banked
  9380  014540  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9381  014542  0E0A               	movlw	10
  9382  014544  6F72               	movwf	___awmod@divisor& (0+255),b
  9383  014546  C0A3  F070         	movff	fround@prec,___awmod@dividend
  9384  01454A  0100               	movlb	0	; () banked
  9385  01454C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9386  01454E  EC33  F0AE         	call	___awmod	;wreg free
  9387  014552  0100               	movlb	0	; () banked
  9388  014554  90D8               	bcf	status,0,c
  9389  014556  3770               	rlcf	?___awmod& (0+255),f,b
  9390  014558  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9391  01455A  0100               	movlb	0	; () banked
  9392  01455C  90D8               	bcf	status,0,c
  9393  01455E  3770               	rlcf	?___awmod& (0+255),f,b
  9394  014560  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9395  014562  0E9F               	movlw	low __npowers_
  9396  014564  0100               	movlb	0	; () banked
  9397  014566  2570               	addwf	?___awmod& (0+255),w,b
  9398  014568  6EF6               	movwf	tblptrl,c
  9399  01456A  0EFD               	movlw	high __npowers_
  9400  01456C  0100               	movlb	0	; () banked
  9401  01456E  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9402  014570  6EF7               	movwf	tblptrh,c
  9403  014572                     	if	1	;There are 3 active tblptr bytes
  9404  014572  6AF8               	clrf	tblptru,c
  9405  014574  0E00               	movlw	low (__mediumconst shr (0+16))
  9406  014576  22F8               	addwfc	tblptru,f,c
  9407  014578                     	endif
  9408  014578  0009               	tblrd		*+
  9409  01457A  CFF5 F082          	movff	tablat,___flmul@a
  9410  01457E  0009               	tblrd		*+
  9411  014580  CFF5 F083          	movff	tablat,___flmul@a+1
  9412  014584  0009               	tblrd		*+
  9413  014586  CFF5 F084          	movff	tablat,___flmul@a+2
  9414  01458A  000A               	tblrd		*-
  9415  01458C  CFF5 F085          	movff	tablat,___flmul@a+3
  9416  014590  C09F  F07E         	movff	_fround$4116,___flmul@b
  9417  014594  C0A0  F07F         	movff	_fround$4116+1,___flmul@b+1
  9418  014598  C0A1  F080         	movff	_fround$4116+2,___flmul@b+2
  9419  01459C  C0A2  F081         	movff	_fround$4116+3,___flmul@b+3
  9420  0145A0  EC21  F09C         	call	___flmul	;wreg free
  9421  0145A4  C07E  F09B         	movff	?___flmul,_fround$4117
  9422  0145A8  C07F  F09C         	movff	?___flmul+1,_fround$4117+1
  9423  0145AC  C080  F09D         	movff	?___flmul+2,_fround$4117+2
  9424  0145B0  C081  F09E         	movff	?___flmul+3,_fround$4117+3
  9425                           
  9426                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9427  0145B4  C09B  F07E         	movff	_fround$4117,___flmul@b
  9428  0145B8  C09C  F07F         	movff	_fround$4117+1,___flmul@b+1
  9429  0145BC  C09D  F080         	movff	_fround$4117+2,___flmul@b+2
  9430  0145C0  C09E  F081         	movff	_fround$4117+3,___flmul@b+3
  9431  0145C4  0E00               	movlw	0
  9432  0145C6  0100               	movlb	0	; () banked
  9433  0145C8  6F82               	movwf	___flmul@a& (0+255),b
  9434  0145CA  0E00               	movlw	0
  9435  0145CC  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9436  0145CE  0E00               	movlw	0
  9437  0145D0  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9438  0145D2  0E3F               	movlw	63
  9439  0145D4  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9440  0145D6  EC21  F09C         	call	___flmul	;wreg free
  9441  0145DA  C07E  F097         	movff	?___flmul,?_fround
  9442  0145DE  C07F  F098         	movff	?___flmul+1,?_fround+1
  9443  0145E2  C080  F099         	movff	?___flmul+2,?_fround+2
  9444  0145E6  C081  F09A         	movff	?___flmul+3,?_fround+3
  9445  0145EA  0012               	return	
  9446  0145EC                     l8417:
  9447                           
  9448                           ;doprnt.c: 415: else if(prec > 10)
  9449  0145EC  0E0A               	movlw	10
  9450  0145EE  0100               	movlb	0	; () banked
  9451  0145F0  65A3               	cpfsgt	fround@prec& (0+255),b
  9452  0145F2  D078               	goto	l8425
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9456  0145F4  0E00               	movlw	0
  9457  0145F6  0100               	movlb	0	; () banked
  9458  0145F8  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9459  0145FA  0E0A               	movlw	10
  9460  0145FC  6F72               	movwf	___awmod@divisor& (0+255),b
  9461  0145FE  C0A3  F070         	movff	fround@prec,___awmod@dividend
  9462  014602  0100               	movlb	0	; () banked
  9463  014604  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9464  014606  EC33  F0AE         	call	___awmod	;wreg free
  9465  01460A  0100               	movlb	0	; () banked
  9466  01460C  90D8               	bcf	status,0,c
  9467  01460E  3770               	rlcf	?___awmod& (0+255),f,b
  9468  014610  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9469  014612  0100               	movlb	0	; () banked
  9470  014614  90D8               	bcf	status,0,c
  9471  014616  3770               	rlcf	?___awmod& (0+255),f,b
  9472  014618  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9473  01461A  0E9F               	movlw	low __npowers_
  9474  01461C  0100               	movlb	0	; () banked
  9475  01461E  2570               	addwf	?___awmod& (0+255),w,b
  9476  014620  6EF6               	movwf	tblptrl,c
  9477  014622  0EFD               	movlw	high __npowers_
  9478  014624  0100               	movlb	0	; () banked
  9479  014626  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9480  014628  6EF7               	movwf	tblptrh,c
  9481  01462A                     	if	1	;There are 3 active tblptr bytes
  9482  01462A  6AF8               	clrf	tblptru,c
  9483  01462C  0E00               	movlw	low (__mediumconst shr (0+16))
  9484  01462E  22F8               	addwfc	tblptru,f,c
  9485  014630                     	endif
  9486  014630  0009               	tblrd		*+
  9487  014632  CFF5 F082          	movff	tablat,___flmul@a
  9488  014636  0009               	tblrd		*+
  9489  014638  CFF5 F083          	movff	tablat,___flmul@a+1
  9490  01463C  0009               	tblrd		*+
  9491  01463E  CFF5 F084          	movff	tablat,___flmul@a+2
  9492  014642  000A               	tblrd		*-
  9493  014644  CFF5 F085          	movff	tablat,___flmul@a+3
  9494  014648  0E00               	movlw	0
  9495  01464A  0100               	movlb	0	; () banked
  9496  01464C  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9497  01464E  0E0A               	movlw	10
  9498  014650  6F78               	movwf	___awdiv@divisor& (0+255),b
  9499  014652  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  9500  014656  0100               	movlb	0	; () banked
  9501  014658  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9502  01465A  EC68  F0AC         	call	___awdiv	;wreg free
  9503  01465E  0100               	movlb	0	; () banked
  9504  014660  90D8               	bcf	status,0,c
  9505  014662  3776               	rlcf	?___awdiv& (0+255),f,b
  9506  014664  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9507  014666  0100               	movlb	0	; () banked
  9508  014668  90D8               	bcf	status,0,c
  9509  01466A  3776               	rlcf	?___awdiv& (0+255),f,b
  9510  01466C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9511  01466E  0E24               	movlw	36
  9512  014670  0100               	movlb	0	; () banked
  9513  014672  2776               	addwf	?___awdiv& (0+255),f,b
  9514  014674  0E00               	movlw	0
  9515  014676  0100               	movlb	0	; () banked
  9516  014678  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9517  01467A  0E9F               	movlw	low __npowers_
  9518  01467C  0100               	movlb	0	; () banked
  9519  01467E  2576               	addwf	?___awdiv& (0+255),w,b
  9520  014680  6EF6               	movwf	tblptrl,c
  9521  014682  0EFD               	movlw	high __npowers_
  9522  014684  0100               	movlb	0	; () banked
  9523  014686  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9524  014688  6EF7               	movwf	tblptrh,c
  9525  01468A                     	if	1	;There are 3 active tblptr bytes
  9526  01468A  6AF8               	clrf	tblptru,c
  9527  01468C  0E00               	movlw	low (__mediumconst shr (0+16))
  9528  01468E  22F8               	addwfc	tblptru,f,c
  9529  014690                     	endif
  9530  014690  0009               	tblrd		*+
  9531  014692  CFF5 F07E          	movff	tablat,___flmul@b
  9532  014696  0009               	tblrd		*+
  9533  014698  CFF5 F07F          	movff	tablat,___flmul@b+1
  9534  01469C  0009               	tblrd		*+
  9535  01469E  CFF5 F080          	movff	tablat,___flmul@b+2
  9536  0146A2  000A               	tblrd		*-
  9537  0146A4  CFF5 F081          	movff	tablat,___flmul@b+3
  9538  0146A8  EC21  F09C         	call	___flmul	;wreg free
  9539  0146AC  C07E  F09F         	movff	?___flmul,_fround$4116
  9540  0146B0  C07F  F0A0         	movff	?___flmul+1,_fround$4116+1
  9541  0146B4  C080  F0A1         	movff	?___flmul+2,_fround$4116+2
  9542  0146B8  C081  F0A2         	movff	?___flmul+3,_fround$4116+3
  9543                           
  9544                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9545  0146BC  C09F  F07E         	movff	_fround$4116,___flmul@b
  9546  0146C0  C0A0  F07F         	movff	_fround$4116+1,___flmul@b+1
  9547  0146C4  C0A1  F080         	movff	_fround$4116+2,___flmul@b+2
  9548  0146C8  C0A2  F081         	movff	_fround$4116+3,___flmul@b+3
  9549  0146CC  0E00               	movlw	0
  9550  0146CE  0100               	movlb	0	; () banked
  9551  0146D0  6F82               	movwf	___flmul@a& (0+255),b
  9552  0146D2  0E00               	movlw	0
  9553  0146D4  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9554  0146D6  0E00               	movlw	0
  9555  0146D8  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9556  0146DA  0E3F               	movlw	63
  9557  0146DC  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9558  0146DE  EC21  F09C         	call	___flmul	;wreg free
  9559  0146E2  D77B               	goto	L8
  9560  0146E4                     l8425:
  9561                           
  9562                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9563  0146E4  0100               	movlb	0	; () banked
  9564  0146E6  51A3               	movf	fround@prec& (0+255),w,b
  9565  0146E8  0D04               	mullw	4
  9566  0146EA  0E9F               	movlw	low __npowers_
  9567  0146EC  24F3               	addwf	prodl,w,c
  9568  0146EE  6EF6               	movwf	tblptrl,c
  9569  0146F0  0EFD               	movlw	high __npowers_
  9570  0146F2  20F4               	addwfc	prodh,w,c
  9571  0146F4  6EF7               	movwf	tblptrh,c
  9572  0146F6                     	if	1	;There are 3 active tblptr bytes
  9573  0146F6  6AF8               	clrf	tblptru,c
  9574  0146F8  0E00               	movlw	low (__mediumconst shr (0+16))
  9575  0146FA  22F8               	addwfc	tblptru,f,c
  9576  0146FC                     	endif
  9577  0146FC  0009               	tblrd		*+
  9578  0146FE  CFF5 F07E          	movff	tablat,___flmul@b
  9579  014702  0009               	tblrd		*+
  9580  014704  CFF5 F07F          	movff	tablat,___flmul@b+1
  9581  014708  0009               	tblrd		*+
  9582  01470A  CFF5 F080          	movff	tablat,___flmul@b+2
  9583  01470E  000A               	tblrd		*-
  9584  014710  CFF5 F081          	movff	tablat,___flmul@b+3
  9585  014714  0E00               	movlw	0
  9586  014716  0100               	movlb	0	; () banked
  9587  014718  6F82               	movwf	___flmul@a& (0+255),b
  9588  01471A  0E00               	movlw	0
  9589  01471C  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9590  01471E  0E00               	movlw	0
  9591  014720  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9592  014722  0E3F               	movlw	63
  9593  014724  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9594  014726  EC21  F09C         	call	___flmul	;wreg free
  9595  01472A  C07E  F097         	movff	?___flmul,?_fround
  9596  01472E  C07F  F098         	movff	?___flmul+1,?_fround+1
  9597  014732  C080  F099         	movff	?___flmul+2,?_fround+2
  9598  014736  C081  F09A         	movff	?___flmul+3,?_fround+3
  9599  01473A  0012               	return	
  9600  01473C                     __end_of_fround:
  9601                           	opt stack 0
  9602                           tblptru	equ	0xFF8
  9603                           tblptrh	equ	0xFF7
  9604                           tblptrl	equ	0xFF6
  9605                           tablat	equ	0xFF5
  9606                           prodh	equ	0xFF4
  9607                           prodl	equ	0xFF3
  9608                           intcon	equ	0xFF2
  9609                           postinc0	equ	0xFEE
  9610                           wreg	equ	0xFE8
  9611                           indf2	equ	0xFDF
  9612                           postinc2	equ	0xFDE
  9613                           fsr2h	equ	0xFDA
  9614                           fsr2l	equ	0xFD9
  9615                           status	equ	0xFD8
  9616                           
  9617 ;; *************** function ___flmul *****************
  9618 ;; Defined at:
  9619 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  b               4   30[BANK0 ] unsigned char 
  9622 ;;  a               4   34[BANK0 ] unsigned char 
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;  prod            4   49[BANK0 ] struct .
  9625 ;;  grs             4   44[BANK0 ] unsigned long 
  9626 ;;  temp            2   53[BANK0 ] struct .
  9627 ;;  bexp            1   48[BANK0 ] unsigned char 
  9628 ;;  aexp            1   43[BANK0 ] unsigned char 
  9629 ;;  sign            1   42[BANK0 ] unsigned char 
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  4   30[BANK0 ] unsigned char 
  9632 ;; Registers used:
  9633 ;;		wreg, status,2, status,0, prodl, prodh
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9639 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;Total ram usage:       25 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    3
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_main
  9650 ;;		_fround
  9651 ;;		_scale
  9652 ;;		_sprintf
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text14
  9657  013842                     __ptext14:
  9658                           	opt stack 0
  9659  013842                     ___flmul:
  9660                           	opt stack 27
  9661                           
  9662                           ;incstack = 0
  9663  013842  0100               	movlb	0	; () banked
  9664  013844  5181               	movf	(___flmul@b+3)& (0+255),w,b
  9665  013846  0B80               	andlw	128
  9666  013848  0100               	movlb	0	; () banked
  9667  01384A  6F8A               	movwf	___flmul@sign& (0+255),b
  9668  01384C  0100               	movlb	0	; () banked
  9669  01384E  5181               	movf	(___flmul@b+3)& (0+255),w,b
  9670  013850  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  9671  013852  0100               	movlb	0	; () banked
  9672  013854  6F90               	movwf	___flmul@bexp& (0+255),b
  9673                           
  9674                           ; BSR set to: 0
  9675  013856  0100               	movlb	0	; () banked
  9676  013858  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  9677  01385A  D002               	goto	l8171
  9678                           
  9679                           ; BSR set to: 0
  9680  01385C  0100               	movlb	0	; () banked
  9681  01385E  8190               	bsf	___flmul@bexp& (0+255),0,b
  9682  013860                     l8171:
  9683                           
  9684                           ; BSR set to: 0
  9685  013860  0100               	movlb	0	; () banked
  9686  013862  5190               	movf	___flmul@bexp& (0+255),w,b
  9687  013864  0100               	movlb	0	; () banked
  9688  013866  B4D8               	btfsc	status,2,c
  9689  013868  D010               	goto	l8179
  9690                           
  9691                           ; BSR set to: 0
  9692  01386A  0100               	movlb	0	; () banked
  9693  01386C  2990               	incf	___flmul@bexp& (0+255),w,b
  9694  01386E  A4D8               	btfss	status,2,c
  9695  013870  D009               	goto	l8177
  9696                           
  9697                           ; BSR set to: 0
  9698  013872  0E00               	movlw	0
  9699  013874  0100               	movlb	0	; () banked
  9700  013876  6F7E               	movwf	___flmul@b& (0+255),b
  9701  013878  0E00               	movlw	0
  9702  01387A  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  9703  01387C  0E00               	movlw	0
  9704  01387E  6F80               	movwf	(___flmul@b+2)& (0+255),b
  9705  013880  0E00               	movlw	0
  9706  013882  6F81               	movwf	(___flmul@b+3)& (0+255),b
  9707  013884                     l8177:
  9708                           
  9709                           ; BSR set to: 0
  9710  013884  0100               	movlb	0	; () banked
  9711  013886  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  9712  013888  D009               	goto	l8181
  9713  01388A                     l8179:
  9714                           
  9715                           ; BSR set to: 0
  9716  01388A  0E00               	movlw	0
  9717  01388C  0100               	movlb	0	; () banked
  9718  01388E  6F7E               	movwf	___flmul@b& (0+255),b
  9719  013890  0E00               	movlw	0
  9720  013892  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  9721  013894  0E00               	movlw	0
  9722  013896  6F80               	movwf	(___flmul@b+2)& (0+255),b
  9723  013898  0E00               	movlw	0
  9724  01389A  6F81               	movwf	(___flmul@b+3)& (0+255),b
  9725  01389C                     l8181:
  9726                           
  9727                           ; BSR set to: 0
  9728  01389C  0100               	movlb	0	; () banked
  9729  01389E  5185               	movf	(___flmul@a+3)& (0+255),w,b
  9730  0138A0  0B80               	andlw	128
  9731  0138A2  0100               	movlb	0	; () banked
  9732  0138A4  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  9733                           
  9734                           ; BSR set to: 0
  9735  0138A6  0100               	movlb	0	; () banked
  9736  0138A8  5185               	movf	(___flmul@a+3)& (0+255),w,b
  9737  0138AA  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  9738  0138AC  0100               	movlb	0	; () banked
  9739  0138AE  6F8B               	movwf	___flmul@aexp& (0+255),b
  9740                           
  9741                           ; BSR set to: 0
  9742  0138B0  0100               	movlb	0	; () banked
  9743  0138B2  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  9744  0138B4  D002               	goto	l8189
  9745                           
  9746                           ; BSR set to: 0
  9747  0138B6  0100               	movlb	0	; () banked
  9748  0138B8  818B               	bsf	___flmul@aexp& (0+255),0,b
  9749  0138BA                     l8189:
  9750                           
  9751                           ; BSR set to: 0
  9752  0138BA  0100               	movlb	0	; () banked
  9753  0138BC  518B               	movf	___flmul@aexp& (0+255),w,b
  9754  0138BE  0100               	movlb	0	; () banked
  9755  0138C0  B4D8               	btfsc	status,2,c
  9756  0138C2  D010               	goto	l8197
  9757                           
  9758                           ; BSR set to: 0
  9759  0138C4  0100               	movlb	0	; () banked
  9760  0138C6  298B               	incf	___flmul@aexp& (0+255),w,b
  9761  0138C8  A4D8               	btfss	status,2,c
  9762  0138CA  D009               	goto	l8195
  9763                           
  9764                           ; BSR set to: 0
  9765  0138CC  0E00               	movlw	0
  9766  0138CE  0100               	movlb	0	; () banked
  9767  0138D0  6F82               	movwf	___flmul@a& (0+255),b
  9768  0138D2  0E00               	movlw	0
  9769  0138D4  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9770  0138D6  0E00               	movlw	0
  9771  0138D8  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9772  0138DA  0E00               	movlw	0
  9773  0138DC  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9774  0138DE                     l8195:
  9775                           
  9776                           ; BSR set to: 0
  9777  0138DE  0100               	movlb	0	; () banked
  9778  0138E0  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  9779  0138E2  D009               	goto	l1641
  9780  0138E4                     l8197:
  9781                           
  9782                           ; BSR set to: 0
  9783  0138E4  0E00               	movlw	0
  9784  0138E6  0100               	movlb	0	; () banked
  9785  0138E8  6F82               	movwf	___flmul@a& (0+255),b
  9786  0138EA  0E00               	movlw	0
  9787  0138EC  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9788  0138EE  0E00               	movlw	0
  9789  0138F0  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9790  0138F2  0E00               	movlw	0
  9791  0138F4  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9792  0138F6                     l1641:
  9793                           
  9794                           ; BSR set to: 0
  9795  0138F6  0100               	movlb	0	; () banked
  9796  0138F8  518B               	movf	___flmul@aexp& (0+255),w,b
  9797  0138FA  0100               	movlb	0	; () banked
  9798  0138FC  B4D8               	btfsc	status,2,c
  9799  0138FE  D005               	goto	l8201
  9800                           
  9801                           ; BSR set to: 0
  9802  013900  0100               	movlb	0	; () banked
  9803  013902  5190               	movf	___flmul@bexp& (0+255),w,b
  9804  013904  0100               	movlb	0	; () banked
  9805  013906  A4D8               	btfss	status,2,c
  9806  013908  D00A               	goto	l8205
  9807  01390A                     l8201:
  9808                           
  9809                           ; BSR set to: 0
  9810  01390A  0E00               	movlw	0
  9811  01390C  0100               	movlb	0	; () banked
  9812  01390E  6F7E               	movwf	?___flmul& (0+255),b
  9813  013910  0E00               	movlw	0
  9814  013912  6F7F               	movwf	(?___flmul+1)& (0+255),b
  9815  013914  0E00               	movlw	0
  9816  013916  6F80               	movwf	(?___flmul+2)& (0+255),b
  9817  013918  0E00               	movlw	0
  9818  01391A  6F81               	movwf	(?___flmul+3)& (0+255),b
  9819                           
  9820                           ; BSR set to: 0
  9821  01391C  0012               	return	
  9822  01391E                     l8205:
  9823                           
  9824                           ; BSR set to: 0
  9825  01391E  0100               	movlb	0	; () banked
  9826  013920  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9827  013922  0100               	movlb	0	; () banked
  9828  013924  037E               	mulwf	___flmul@b& (0+255),b
  9829  013926  CFF3 F095          	movff	prodl,___flmul@temp
  9830  01392A  CFF4 F096          	movff	prodh,___flmul@temp+1
  9831                           
  9832                           ; BSR set to: 0
  9833  01392E  0100               	movlb	0	; () banked
  9834  013930  5195               	movf	___flmul@temp& (0+255),w,b
  9835  013932  0100               	movlb	0	; () banked
  9836  013934  6F8C               	movwf	___flmul@grs& (0+255),b
  9837  013936  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  9838  013938  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  9839  01393A  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  9840                           
  9841                           ; BSR set to: 0
  9842  01393C  0100               	movlb	0	; () banked
  9843  01393E  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9844  013940  0100               	movlb	0	; () banked
  9845  013942  6F91               	movwf	___flmul@prod& (0+255),b
  9846  013944  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  9847  013946  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  9848  013948  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  9849  01394A  0100               	movlb	0	; () banked
  9850  01394C  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9851  01394E  0100               	movlb	0	; () banked
  9852  013950  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9853  013952  CFF3 F095          	movff	prodl,___flmul@temp
  9854  013956  CFF4 F096          	movff	prodh,___flmul@temp+1
  9855                           
  9856                           ; BSR set to: 0
  9857  01395A  0100               	movlb	0	; () banked
  9858  01395C  5195               	movf	___flmul@temp& (0+255),w,b
  9859  01395E  0100               	movlb	0	; () banked
  9860  013960  278C               	addwf	___flmul@grs& (0+255),f,b
  9861  013962  0E00               	movlw	0
  9862  013964  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9863  013966  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9864  013968  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9865                           
  9866                           ; BSR set to: 0
  9867  01396A  0100               	movlb	0	; () banked
  9868  01396C  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9869  01396E  0100               	movlb	0	; () banked
  9870  013970  2791               	addwf	___flmul@prod& (0+255),f,b
  9871  013972  0E00               	movlw	0
  9872  013974  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9873  013976  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9874  013978  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9875  01397A  0100               	movlb	0	; () banked
  9876  01397C  5182               	movf	___flmul@a& (0+255),w,b
  9877  01397E  0100               	movlb	0	; () banked
  9878  013980  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9879  013982  CFF3 F095          	movff	prodl,___flmul@temp
  9880  013986  CFF4 F096          	movff	prodh,___flmul@temp+1
  9881                           
  9882                           ; BSR set to: 0
  9883  01398A  0100               	movlb	0	; () banked
  9884  01398C  5195               	movf	___flmul@temp& (0+255),w,b
  9885  01398E  0100               	movlb	0	; () banked
  9886  013990  278C               	addwf	___flmul@grs& (0+255),f,b
  9887  013992  0E00               	movlw	0
  9888  013994  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9889  013996  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9890  013998  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9891                           
  9892                           ; BSR set to: 0
  9893  01399A  0100               	movlb	0	; () banked
  9894  01399C  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9895  01399E  0100               	movlb	0	; () banked
  9896  0139A0  2791               	addwf	___flmul@prod& (0+255),f,b
  9897  0139A2  0E00               	movlw	0
  9898  0139A4  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9899  0139A6  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9900  0139A8  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9901                           
  9902                           ; BSR set to: 0
  9903  0139AA  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9904  0139AE  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9905  0139B2  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9906  0139B6  0100               	movlb	0	; () banked
  9907  0139B8  6B8C               	clrf	___flmul@grs& (0+255),b
  9908                           
  9909                           ; BSR set to: 0
  9910  0139BA  0100               	movlb	0	; () banked
  9911  0139BC  5182               	movf	___flmul@a& (0+255),w,b
  9912  0139BE  0100               	movlb	0	; () banked
  9913  0139C0  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9914  0139C2  CFF3 F095          	movff	prodl,___flmul@temp
  9915  0139C6  CFF4 F096          	movff	prodh,___flmul@temp+1
  9916                           
  9917                           ; BSR set to: 0
  9918  0139CA  0100               	movlb	0	; () banked
  9919  0139CC  5195               	movf	___flmul@temp& (0+255),w,b
  9920  0139CE  0100               	movlb	0	; () banked
  9921  0139D0  278C               	addwf	___flmul@grs& (0+255),f,b
  9922  0139D2  0100               	movlb	0	; () banked
  9923  0139D4  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9924  0139D6  0100               	movlb	0	; () banked
  9925  0139D8  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9926  0139DA  0E00               	movlw	0
  9927  0139DC  0100               	movlb	0	; () banked
  9928  0139DE  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9929  0139E0  0E00               	movlw	0
  9930  0139E2  0100               	movlb	0	; () banked
  9931  0139E4  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9932                           
  9933                           ; BSR set to: 0
  9934  0139E6  0100               	movlb	0	; () banked
  9935  0139E8  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9936  0139EA  0100               	movlb	0	; () banked
  9937  0139EC  037E               	mulwf	___flmul@b& (0+255),b
  9938  0139EE  CFF3 F095          	movff	prodl,___flmul@temp
  9939  0139F2  CFF4 F096          	movff	prodh,___flmul@temp+1
  9940                           
  9941                           ; BSR set to: 0
  9942  0139F6  0100               	movlb	0	; () banked
  9943  0139F8  5195               	movf	___flmul@temp& (0+255),w,b
  9944  0139FA  0100               	movlb	0	; () banked
  9945  0139FC  278C               	addwf	___flmul@grs& (0+255),f,b
  9946  0139FE  0100               	movlb	0	; () banked
  9947  013A00  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9948  013A02  0100               	movlb	0	; () banked
  9949  013A04  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9950  013A06  0E00               	movlw	0
  9951  013A08  0100               	movlb	0	; () banked
  9952  013A0A  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9953  013A0C  0E00               	movlw	0
  9954  013A0E  0100               	movlb	0	; () banked
  9955  013A10  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9956                           
  9957                           ; BSR set to: 0
  9958  013A12  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9959  013A16  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9960  013A1A  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9961  013A1E  0100               	movlb	0	; () banked
  9962  013A20  6B8C               	clrf	___flmul@grs& (0+255),b
  9963  013A22  0100               	movlb	0	; () banked
  9964  013A24  5182               	movf	___flmul@a& (0+255),w,b
  9965  013A26  0100               	movlb	0	; () banked
  9966  013A28  037E               	mulwf	___flmul@b& (0+255),b
  9967  013A2A  CFF3 F095          	movff	prodl,___flmul@temp
  9968  013A2E  CFF4 F096          	movff	prodh,___flmul@temp+1
  9969                           
  9970                           ; BSR set to: 0
  9971  013A32  0100               	movlb	0	; () banked
  9972  013A34  5195               	movf	___flmul@temp& (0+255),w,b
  9973  013A36  0100               	movlb	0	; () banked
  9974  013A38  278C               	addwf	___flmul@grs& (0+255),f,b
  9975  013A3A  0100               	movlb	0	; () banked
  9976  013A3C  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9977  013A3E  0100               	movlb	0	; () banked
  9978  013A40  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9979  013A42  0E00               	movlw	0
  9980  013A44  0100               	movlb	0	; () banked
  9981  013A46  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9982  013A48  0E00               	movlw	0
  9983  013A4A  0100               	movlb	0	; () banked
  9984  013A4C  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9985                           
  9986                           ; BSR set to: 0
  9987  013A4E  0100               	movlb	0	; () banked
  9988  013A50  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9989  013A52  0100               	movlb	0	; () banked
  9990  013A54  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9991  013A56  CFF3 F095          	movff	prodl,___flmul@temp
  9992  013A5A  CFF4 F096          	movff	prodh,___flmul@temp+1
  9993  013A5E  0100               	movlb	0	; () banked
  9994  013A60  5195               	movf	___flmul@temp& (0+255),w,b
  9995  013A62  0100               	movlb	0	; () banked
  9996  013A64  2791               	addwf	___flmul@prod& (0+255),f,b
  9997  013A66  0100               	movlb	0	; () banked
  9998  013A68  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9999  013A6A  0100               	movlb	0	; () banked
 10000  013A6C  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10001  013A6E  0E00               	movlw	0
 10002  013A70  0100               	movlb	0	; () banked
 10003  013A72  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10004  013A74  0E00               	movlw	0
 10005  013A76  0100               	movlb	0	; () banked
 10006  013A78  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10007                           
 10008                           ; BSR set to: 0
 10009  013A7A  0100               	movlb	0	; () banked
 10010  013A7C  5183               	movf	(___flmul@a+1)& (0+255),w,b
 10011  013A7E  0100               	movlb	0	; () banked
 10012  013A80  0380               	mulwf	(___flmul@b+2)& (0+255),b
 10013  013A82  CFF3 F095          	movff	prodl,___flmul@temp
 10014  013A86  CFF4 F096          	movff	prodh,___flmul@temp+1
 10015                           
 10016                           ; BSR set to: 0
 10017  013A8A  0100               	movlb	0	; () banked
 10018  013A8C  5195               	movf	___flmul@temp& (0+255),w,b
 10019  013A8E  0100               	movlb	0	; () banked
 10020  013A90  2791               	addwf	___flmul@prod& (0+255),f,b
 10021  013A92  0100               	movlb	0	; () banked
 10022  013A94  5196               	movf	(___flmul@temp+1)& (0+255),w,b
 10023  013A96  0100               	movlb	0	; () banked
 10024  013A98  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10025  013A9A  0E00               	movlw	0
 10026  013A9C  0100               	movlb	0	; () banked
 10027  013A9E  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10028  013AA0  0E00               	movlw	0
 10029  013AA2  0100               	movlb	0	; () banked
 10030  013AA4  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10031  013AA6  0100               	movlb	0	; () banked
 10032  013AA8  5184               	movf	(___flmul@a+2)& (0+255),w,b
 10033  013AAA  0100               	movlb	0	; () banked
 10034  013AAC  0380               	mulwf	(___flmul@b+2)& (0+255),b
 10035  013AAE  CFF3 F095          	movff	prodl,___flmul@temp
 10036  013AB2  CFF4 F096          	movff	prodh,___flmul@temp+1
 10037                           
 10038                           ; BSR set to: 0
 10039  013AB6  0100               	movlb	0	; () banked
 10040  013AB8  5195               	movf	___flmul@temp& (0+255),w,b
 10041  013ABA  0100               	movlb	0	; () banked
 10042  013ABC  6F86               	movwf	??___flmul& (0+255),b
 10043  013ABE  0100               	movlb	0	; () banked
 10044  013AC0  5196               	movf	(___flmul@temp+1)& (0+255),w,b
 10045  013AC2  0100               	movlb	0	; () banked
 10046  013AC4  6F87               	movwf	(??___flmul+1)& (0+255),b
 10047  013AC6  0100               	movlb	0	; () banked
 10048  013AC8  6B88               	clrf	(??___flmul+2)& (0+255),b
 10049  013ACA  0100               	movlb	0	; () banked
 10050  013ACC  6B89               	clrf	(??___flmul+3)& (0+255),b
 10051  013ACE  C088  F089         	movff	??___flmul+2,??___flmul+3
 10052  013AD2  C087  F088         	movff	??___flmul+1,??___flmul+2
 10053  013AD6  C086  F087         	movff	??___flmul,??___flmul+1
 10054  013ADA  0100               	movlb	0	; () banked
 10055  013ADC  6B86               	clrf	??___flmul& (0+255),b
 10056  013ADE  0100               	movlb	0	; () banked
 10057  013AE0  5186               	movf	??___flmul& (0+255),w,b
 10058  013AE2  0100               	movlb	0	; () banked
 10059  013AE4  2791               	addwf	___flmul@prod& (0+255),f,b
 10060  013AE6  0100               	movlb	0	; () banked
 10061  013AE8  5187               	movf	(??___flmul+1)& (0+255),w,b
 10062  013AEA  0100               	movlb	0	; () banked
 10063  013AEC  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10064  013AEE  0100               	movlb	0	; () banked
 10065  013AF0  5188               	movf	(??___flmul+2)& (0+255),w,b
 10066  013AF2  0100               	movlb	0	; () banked
 10067  013AF4  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10068  013AF6  0100               	movlb	0	; () banked
 10069  013AF8  5189               	movf	(??___flmul+3)& (0+255),w,b
 10070  013AFA  0100               	movlb	0	; () banked
 10071  013AFC  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10072                           
 10073                           ; BSR set to: 0
 10074  013AFE  C08C  F086         	movff	___flmul@grs,??___flmul
 10075  013B02  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
 10076  013B06  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
 10077  013B0A  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
 10078  013B0E  0E19               	movlw	25
 10079  013B10  D006               	goto	u11000
 10080  013B12                     u11005:
 10081  013B12  0100               	movlb	0	; () banked
 10082  013B14  90D8               	bcf	status,0,c
 10083  013B16  3389               	rrcf	(??___flmul+3)& (0+255),f,b
 10084  013B18  3388               	rrcf	(??___flmul+2)& (0+255),f,b
 10085  013B1A  3387               	rrcf	(??___flmul+1)& (0+255),f,b
 10086  013B1C  3386               	rrcf	??___flmul& (0+255),f,b
 10087  013B1E                     u11000:
 10088  013B1E  2EE8               	decfsz	wreg,f,c
 10089  013B20  D7F8               	goto	u11005
 10090  013B22  0100               	movlb	0	; () banked
 10091  013B24  5186               	movf	??___flmul& (0+255),w,b
 10092  013B26  0100               	movlb	0	; () banked
 10093  013B28  2791               	addwf	___flmul@prod& (0+255),f,b
 10094  013B2A  0100               	movlb	0	; () banked
 10095  013B2C  5187               	movf	(??___flmul+1)& (0+255),w,b
 10096  013B2E  0100               	movlb	0	; () banked
 10097  013B30  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10098  013B32  0100               	movlb	0	; () banked
 10099  013B34  5188               	movf	(??___flmul+2)& (0+255),w,b
 10100  013B36  0100               	movlb	0	; () banked
 10101  013B38  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10102  013B3A  0100               	movlb	0	; () banked
 10103  013B3C  5189               	movf	(??___flmul+3)& (0+255),w,b
 10104  013B3E  0100               	movlb	0	; () banked
 10105  013B40  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10106                           
 10107                           ; BSR set to: 0
 10108  013B42  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
 10109  013B46  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
 10110  013B4A  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
 10111  013B4E  0100               	movlb	0	; () banked
 10112  013B50  6B8C               	clrf	___flmul@grs& (0+255),b
 10113                           
 10114                           ; BSR set to: 0
 10115  013B52  0100               	movlb	0	; () banked
 10116  013B54  518B               	movf	___flmul@aexp& (0+255),w,b
 10117  013B56  C090  F086         	movff	___flmul@bexp,??___flmul
 10118  013B5A  0100               	movlb	0	; () banked
 10119  013B5C  6B87               	clrf	(??___flmul+1)& (0+255),b
 10120  013B5E  0100               	movlb	0	; () banked
 10121  013B60  2786               	addwf	??___flmul& (0+255),f,b
 10122  013B62  0E00               	movlw	0
 10123  013B64  2387               	addwfc	(??___flmul+1)& (0+255),f,b
 10124  013B66  0E82               	movlw	130
 10125  013B68  0100               	movlb	0	; () banked
 10126  013B6A  2586               	addwf	??___flmul& (0+255),w,b
 10127  013B6C  0100               	movlb	0	; () banked
 10128  013B6E  6F95               	movwf	___flmul@temp& (0+255),b
 10129  013B70  0EFF               	movlw	255
 10130  013B72  0100               	movlb	0	; () banked
 10131  013B74  2187               	addwfc	(??___flmul+1)& (0+255),w,b
 10132  013B76  0100               	movlb	0	; () banked
 10133  013B78  6F96               	movwf	(___flmul@temp+1)& (0+255),b
 10134  013B7A  D015               	goto	l8253
 10135  013B7C                     l8247:
 10136                           
 10137                           ; BSR set to: 0
 10138  013B7C  0100               	movlb	0	; () banked
 10139  013B7E  90D8               	bcf	status,0,c
 10140  013B80  3791               	rlcf	___flmul@prod& (0+255),f,b
 10141  013B82  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10142  013B84  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10143  013B86  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10144                           
 10145                           ; BSR set to: 0
 10146  013B88  0100               	movlb	0	; () banked
 10147  013B8A  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
 10148  013B8C  D002               	goto	l1648
 10149                           
 10150                           ; BSR set to: 0
 10151  013B8E  0100               	movlb	0	; () banked
 10152  013B90  8191               	bsf	___flmul@prod& (0+255),0,b
 10153  013B92                     l1648:
 10154                           
 10155                           ; BSR set to: 0
 10156  013B92  0100               	movlb	0	; () banked
 10157  013B94  90D8               	bcf	status,0,c
 10158  013B96  378C               	rlcf	___flmul@grs& (0+255),f,b
 10159  013B98  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10160  013B9A  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10161  013B9C  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10162  013B9E  0100               	movlb	0	; () banked
 10163  013BA0  0795               	decf	___flmul@temp& (0+255),f,b
 10164  013BA2  A0D8               	btfss	status,0,c
 10165  013BA4  0796               	decf	(___flmul@temp+1)& (0+255),f,b
 10166  013BA6                     l8253:
 10167                           
 10168                           ; BSR set to: 0
 10169  013BA6  0100               	movlb	0	; () banked
 10170  013BA8  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
 10171  013BAA  D7E8               	goto	l8247
 10172                           
 10173                           ; BSR set to: 0
 10174                           
 10175                           ; BSR set to: 0
 10176  013BAC  0E00               	movlw	0
 10177  013BAE  0100               	movlb	0	; () banked
 10178  013BB0  6F8B               	movwf	___flmul@aexp& (0+255),b
 10179                           
 10180                           ; BSR set to: 0
 10181  013BB2  0100               	movlb	0	; () banked
 10182  013BB4  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
 10183  013BB6  D024               	goto	l1650
 10184                           
 10185                           ; BSR set to: 0
 10186  013BB8  0EFF               	movlw	255
 10187  013BBA  0100               	movlb	0	; () banked
 10188  013BBC  158C               	andwf	___flmul@grs& (0+255),w,b
 10189  013BBE  0100               	movlb	0	; () banked
 10190  013BC0  6F86               	movwf	??___flmul& (0+255),b
 10191  013BC2  0EFF               	movlw	255
 10192  013BC4  0100               	movlb	0	; () banked
 10193  013BC6  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
 10194  013BC8  0100               	movlb	0	; () banked
 10195  013BCA  6F87               	movwf	(??___flmul+1)& (0+255),b
 10196  013BCC  0EFF               	movlw	255
 10197  013BCE  0100               	movlb	0	; () banked
 10198  013BD0  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
 10199  013BD2  0100               	movlb	0	; () banked
 10200  013BD4  6F88               	movwf	(??___flmul+2)& (0+255),b
 10201  013BD6  0E7F               	movlw	127
 10202  013BD8  0100               	movlb	0	; () banked
 10203  013BDA  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
 10204  013BDC  0100               	movlb	0	; () banked
 10205  013BDE  6F89               	movwf	(??___flmul+3)& (0+255),b
 10206  013BE0  0100               	movlb	0	; () banked
 10207  013BE2  5186               	movf	??___flmul& (0+255),w,b
 10208  013BE4  0100               	movlb	0	; () banked
 10209  013BE6  1187               	iorwf	(??___flmul+1)& (0+255),w,b
 10210  013BE8  0100               	movlb	0	; () banked
 10211  013BEA  1188               	iorwf	(??___flmul+2)& (0+255),w,b
 10212  013BEC  0100               	movlb	0	; () banked
 10213  013BEE  1189               	iorwf	(??___flmul+3)& (0+255),w,b
 10214  013BF0  A4D8               	btfss	status,2,c
 10215  013BF2  D003               	goto	l8263
 10216                           
 10217                           ; BSR set to: 0
 10218                           
 10219                           ; BSR set to: 0
 10220  013BF4  0100               	movlb	0	; () banked
 10221  013BF6  A191               	btfss	___flmul@prod& (0+255),0,b
 10222  013BF8  D003               	goto	l1650
 10223  013BFA                     l8263:
 10224                           
 10225                           ; BSR set to: 0
 10226  013BFA  0E01               	movlw	1
 10227  013BFC  0100               	movlb	0	; () banked
 10228  013BFE  6F8B               	movwf	___flmul@aexp& (0+255),b
 10229  013C00                     l1650:
 10230                           
 10231                           ; BSR set to: 0
 10232  013C00  0100               	movlb	0	; () banked
 10233  013C02  518B               	movf	___flmul@aexp& (0+255),w,b
 10234  013C04  0100               	movlb	0	; () banked
 10235  013C06  B4D8               	btfsc	status,2,c
 10236  013C08  D023               	goto	l8273
 10237                           
 10238                           ; BSR set to: 0
 10239  013C0A  0E01               	movlw	1
 10240  013C0C  0100               	movlb	0	; () banked
 10241  013C0E  2791               	addwf	___flmul@prod& (0+255),f,b
 10242  013C10  0E00               	movlw	0
 10243  013C12  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10244  013C14  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10245  013C16  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10246                           
 10247                           ; BSR set to: 0
 10248  013C18  0100               	movlb	0	; () banked
 10249  013C1A  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
 10250  013C1C  D019               	goto	l8273
 10251                           
 10252                           ; BSR set to: 0
 10253  013C1E  C091  F086         	movff	___flmul@prod,??___flmul
 10254  013C22  C092  F087         	movff	___flmul@prod+1,??___flmul+1
 10255  013C26  C093  F088         	movff	___flmul@prod+2,??___flmul+2
 10256  013C2A  C094  F089         	movff	___flmul@prod+3,??___flmul+3
 10257  013C2E  0100               	movlb	0	; () banked
 10258  013C30  3589               	rlcf	(??___flmul+3)& (0+255),w,b
 10259  013C32  3389               	rrcf	(??___flmul+3)& (0+255),f,b
 10260  013C34  3388               	rrcf	(??___flmul+2)& (0+255),f,b
 10261  013C36  3387               	rrcf	(??___flmul+1)& (0+255),f,b
 10262  013C38  3386               	rrcf	??___flmul& (0+255),f,b
 10263  013C3A  C086  F091         	movff	??___flmul,___flmul@prod
 10264  013C3E  C087  F092         	movff	??___flmul+1,___flmul@prod+1
 10265  013C42  C088  F093         	movff	??___flmul+2,___flmul@prod+2
 10266  013C46  C089  F094         	movff	??___flmul+3,___flmul@prod+3
 10267                           
 10268                           ; BSR set to: 0
 10269  013C4A  0100               	movlb	0	; () banked
 10270  013C4C  4B95               	infsnz	___flmul@temp& (0+255),f,b
 10271  013C4E  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
 10272  013C50                     l8273:
 10273                           
 10274                           ; BSR set to: 0
 10275  013C50  0100               	movlb	0	; () banked
 10276  013C52  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10277  013C54  D010               	goto	l8277
 10278  013C56  0100               	movlb	0	; () banked
 10279  013C58  5196               	movf	(___flmul@temp+1)& (0+255),w,b
 10280  013C5A  E104               	bnz	u11080
 10281  013C5C  0100               	movlb	0	; () banked
 10282  013C5E  2995               	incf	___flmul@temp& (0+255),w,b
 10283  013C60  A0D8               	btfss	status,0,c
 10284  013C62  D009               	goto	l8277
 10285  013C64                     u11080:
 10286                           
 10287                           ; BSR set to: 0
 10288  013C64  0E00               	movlw	0
 10289  013C66  0100               	movlb	0	; () banked
 10290  013C68  6F91               	movwf	___flmul@prod& (0+255),b
 10291  013C6A  0E00               	movlw	0
 10292  013C6C  6F92               	movwf	(___flmul@prod+1)& (0+255),b
 10293  013C6E  0E80               	movlw	128
 10294  013C70  6F93               	movwf	(___flmul@prod+2)& (0+255),b
 10295  013C72  0E7F               	movlw	127
 10296  013C74  D02B               	goto	L9
 10297  013C76                     l8277:
 10298                           
 10299                           ; BSR set to: 0
 10300  013C76  0100               	movlb	0	; () banked
 10301  013C78  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10302  013C7A  D007               	goto	l8279
 10303  013C7C  0100               	movlb	0	; () banked
 10304  013C7E  5196               	movf	(___flmul@temp+1)& (0+255),w,b
 10305  013C80  E111               	bnz	l1658
 10306  013C82  0100               	movlb	0	; () banked
 10307  013C84  0595               	decf	___flmul@temp& (0+255),w,b
 10308  013C86  B0D8               	btfsc	status,0,c
 10309  013C88  D00D               	goto	l1658
 10310  013C8A                     l8279:
 10311                           
 10312                           ; BSR set to: 0
 10313  013C8A  0E00               	movlw	0
 10314  013C8C  0100               	movlb	0	; () banked
 10315  013C8E  6F91               	movwf	___flmul@prod& (0+255),b
 10316  013C90  0E00               	movlw	0
 10317  013C92  6F92               	movwf	(___flmul@prod+1)& (0+255),b
 10318  013C94  0E00               	movlw	0
 10319  013C96  6F93               	movwf	(___flmul@prod+2)& (0+255),b
 10320  013C98  0E00               	movlw	0
 10321  013C9A  6F94               	movwf	(___flmul@prod+3)& (0+255),b
 10322  013C9C  0E00               	movlw	0
 10323  013C9E  0100               	movlb	0	; () banked
 10324  013CA0  6F8A               	movwf	___flmul@sign& (0+255),b
 10325  013CA2  D015               	goto	l8289
 10326  013CA4                     l1658:
 10327                           
 10328                           ; BSR set to: 0
 10329  013CA4  C095  F090         	movff	___flmul@temp,___flmul@bexp
 10330                           
 10331                           ; BSR set to: 0
 10332  013CA8  0EFF               	movlw	255
 10333  013CAA  0100               	movlb	0	; () banked
 10334  013CAC  1791               	andwf	___flmul@prod& (0+255),f,b
 10335  013CAE  0EFF               	movlw	255
 10336  013CB0  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
 10337  013CB2  0E7F               	movlw	127
 10338  013CB4  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
 10339  013CB6  0E00               	movlw	0
 10340  013CB8  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
 10341                           
 10342                           ; BSR set to: 0
 10343  013CBA  0100               	movlb	0	; () banked
 10344  013CBC  A190               	btfss	___flmul@bexp& (0+255),0,b
 10345  013CBE  D002               	goto	l8287
 10346                           
 10347                           ; BSR set to: 0
 10348  013CC0  0100               	movlb	0	; () banked
 10349  013CC2  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
 10350  013CC4                     l8287:
 10351                           
 10352                           ; BSR set to: 0
 10353  013CC4  0100               	movlb	0	; () banked
 10354  013CC6  90D8               	bcf	status,0,c
 10355  013CC8  3190               	rrcf	___flmul@bexp& (0+255),w,b
 10356  013CCA  0100               	movlb	0	; () banked
 10357  013CCC                     L9:
 10358  013CCC  6F94               	movwf	(___flmul@prod+3)& (0+255),b
 10359  013CCE                     l8289:
 10360                           
 10361                           ; BSR set to: 0
 10362  013CCE  0100               	movlb	0	; () banked
 10363  013CD0  518A               	movf	___flmul@sign& (0+255),w,b
 10364  013CD2  0100               	movlb	0	; () banked
 10365  013CD4  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10366                           
 10367                           ; BSR set to: 0
 10368  013CD6  C091  F07E         	movff	___flmul@prod,?___flmul
 10369  013CDA  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
 10370  013CDE  C093  F080         	movff	___flmul@prod+2,?___flmul+2
 10371  013CE2  C094  F081         	movff	___flmul@prod+3,?___flmul+3
 10372  013CE6  0012               	return	
 10373  013CE8                     __end_of___flmul:
 10374                           	opt stack 0
 10375                           tblptru	equ	0xFF8
 10376                           tblptrh	equ	0xFF7
 10377                           tblptrl	equ	0xFF6
 10378                           tablat	equ	0xFF5
 10379                           prodh	equ	0xFF4
 10380                           prodl	equ	0xFF3
 10381                           intcon	equ	0xFF2
 10382                           postinc0	equ	0xFEE
 10383                           wreg	equ	0xFE8
 10384                           indf2	equ	0xFDF
 10385                           postinc2	equ	0xFDE
 10386                           fsr2h	equ	0xFDA
 10387                           fsr2l	equ	0xFD9
 10388                           status	equ	0xFD8
 10389                           
 10390 ;; *************** function ___awmod *****************
 10391 ;; Defined at:
 10392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;  dividend        2   16[BANK0 ] int 
 10395 ;;  divisor         2   18[BANK0 ] int 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;  sign            1   21[BANK0 ] unsigned char 
 10398 ;;  counter         1   20[BANK0 ] unsigned char 
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  2   16[BANK0 ] int 
 10401 ;; Registers used:
 10402 ;;		wreg, status,2, status,0
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10408 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;Total ram usage:        6 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    3
 10415 ;; This function calls:
 10416 ;;		Nothing
 10417 ;; This function is called by:
 10418 ;;		_fround
 10419 ;;		_scale
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text15
 10424  015C66                     __ptext15:
 10425                           	opt stack 0
 10426  015C66                     ___awmod:
 10427                           	opt stack 24
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;incstack = 0
 10431  015C66  0E00               	movlw	0
 10432  015C68  0100               	movlb	0	; () banked
 10433  015C6A  6F75               	movwf	___awmod@sign& (0+255),b
 10434                           
 10435                           ; BSR set to: 0
 10436  015C6C  0100               	movlb	0	; () banked
 10437  015C6E  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10438  015C70  D008               	goto	l8347
 10439                           
 10440                           ; BSR set to: 0
 10441  015C72  0100               	movlb	0	; () banked
 10442  015C74  6D70               	negf	___awmod@dividend& (0+255),b
 10443  015C76  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10444  015C78  B0D8               	btfsc	status,0,c
 10445  015C7A  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10446                           
 10447                           ; BSR set to: 0
 10448  015C7C  0E01               	movlw	1
 10449  015C7E  0100               	movlb	0	; () banked
 10450  015C80  6F75               	movwf	___awmod@sign& (0+255),b
 10451  015C82                     l8347:
 10452                           
 10453                           ; BSR set to: 0
 10454  015C82  0100               	movlb	0	; () banked
 10455  015C84  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10456  015C86  D005               	goto	l8351
 10457                           
 10458                           ; BSR set to: 0
 10459  015C88  0100               	movlb	0	; () banked
 10460  015C8A  6D72               	negf	___awmod@divisor& (0+255),b
 10461  015C8C  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
 10462  015C8E  B0D8               	btfsc	status,0,c
 10463  015C90  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
 10464  015C92                     l8351:
 10465                           
 10466                           ; BSR set to: 0
 10467  015C92  0100               	movlb	0	; () banked
 10468  015C94  5172               	movf	___awmod@divisor& (0+255),w,b
 10469  015C96  0100               	movlb	0	; () banked
 10470  015C98  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10471  015C9A  B4D8               	btfsc	status,2,c
 10472  015C9C  D026               	goto	l8367
 10473                           
 10474                           ; BSR set to: 0
 10475  015C9E  0E01               	movlw	1
 10476  015CA0  0100               	movlb	0	; () banked
 10477  015CA2  6F74               	movwf	___awmod@counter& (0+255),b
 10478  015CA4  D006               	goto	l8357
 10479  015CA6                     l8355:
 10480                           
 10481                           ; BSR set to: 0
 10482  015CA6  0100               	movlb	0	; () banked
 10483  015CA8  90D8               	bcf	status,0,c
 10484  015CAA  3772               	rlcf	___awmod@divisor& (0+255),f,b
 10485  015CAC  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10486  015CAE  0100               	movlb	0	; () banked
 10487  015CB0  2B74               	incf	___awmod@counter& (0+255),f,b
 10488  015CB2                     l8357:
 10489                           
 10490                           ; BSR set to: 0
 10491  015CB2  0100               	movlb	0	; () banked
 10492  015CB4  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10493  015CB6  D7F7               	goto	l8355
 10494  015CB8                     l8359:
 10495                           
 10496                           ; BSR set to: 0
 10497  015CB8  0100               	movlb	0	; () banked
 10498  015CBA  5172               	movf	___awmod@divisor& (0+255),w,b
 10499  015CBC  0100               	movlb	0	; () banked
 10500  015CBE  5D70               	subwf	___awmod@dividend& (0+255),w,b
 10501  015CC0  0100               	movlb	0	; () banked
 10502  015CC2  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10503  015CC4  0100               	movlb	0	; () banked
 10504  015CC6  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10505  015CC8  A0D8               	btfss	status,0,c
 10506  015CCA  D008               	goto	l8363
 10507                           
 10508                           ; BSR set to: 0
 10509  015CCC  0100               	movlb	0	; () banked
 10510  015CCE  5172               	movf	___awmod@divisor& (0+255),w,b
 10511  015CD0  0100               	movlb	0	; () banked
 10512  015CD2  5F70               	subwf	___awmod@dividend& (0+255),f,b
 10513  015CD4  0100               	movlb	0	; () banked
 10514  015CD6  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10515  015CD8  0100               	movlb	0	; () banked
 10516  015CDA  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10517  015CDC                     l8363:
 10518                           
 10519                           ; BSR set to: 0
 10520  015CDC  0100               	movlb	0	; () banked
 10521  015CDE  90D8               	bcf	status,0,c
 10522  015CE0  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10523  015CE2  3372               	rrcf	___awmod@divisor& (0+255),f,b
 10524                           
 10525                           ; BSR set to: 0
 10526  015CE4  0100               	movlb	0	; () banked
 10527  015CE6  2F74               	decfsz	___awmod@counter& (0+255),f,b
 10528  015CE8  D7E7               	goto	l8359
 10529  015CEA                     l8367:
 10530                           
 10531                           ; BSR set to: 0
 10532  015CEA  0100               	movlb	0	; () banked
 10533  015CEC  5175               	movf	___awmod@sign& (0+255),w,b
 10534  015CEE  0100               	movlb	0	; () banked
 10535  015CF0  B4D8               	btfsc	status,2,c
 10536  015CF2  D005               	goto	l8371
 10537                           
 10538                           ; BSR set to: 0
 10539  015CF4  0100               	movlb	0	; () banked
 10540  015CF6  6D70               	negf	___awmod@dividend& (0+255),b
 10541  015CF8  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10542  015CFA  B0D8               	btfsc	status,0,c
 10543  015CFC  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10544  015CFE                     l8371:
 10545                           
 10546                           ; BSR set to: 0
 10547  015CFE  C070  F070         	movff	___awmod@dividend,?___awmod
 10548  015D02  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
 10549  015D06  0012               	return	
 10550  015D08                     __end_of___awmod:
 10551                           	opt stack 0
 10552                           tblptru	equ	0xFF8
 10553                           tblptrh	equ	0xFF7
 10554                           tblptrl	equ	0xFF6
 10555                           tablat	equ	0xFF5
 10556                           prodh	equ	0xFF4
 10557                           prodl	equ	0xFF3
 10558                           intcon	equ	0xFF2
 10559                           postinc0	equ	0xFEE
 10560                           wreg	equ	0xFE8
 10561                           indf2	equ	0xFDF
 10562                           postinc2	equ	0xFDE
 10563                           fsr2h	equ	0xFDA
 10564                           fsr2l	equ	0xFD9
 10565                           status	equ	0xFD8
 10566                           
 10567 ;; *************** function ___awdiv *****************
 10568 ;; Defined at:
 10569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  dividend        2   22[BANK0 ] int 
 10572 ;;  divisor         2   24[BANK0 ] int 
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;  quotient        2   28[BANK0 ] int 
 10575 ;;  sign            1   27[BANK0 ] unsigned char 
 10576 ;;  counter         1   26[BANK0 ] unsigned char 
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  2   22[BANK0 ] int 
 10579 ;; Registers used:
 10580 ;;		wreg, status,2, status,0
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;Total ram usage:        8 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    3
 10593 ;; This function calls:
 10594 ;;		Nothing
 10595 ;; This function is called by:
 10596 ;;		_fround
 10597 ;;		_scale
 10598 ;;		_sprintf
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text16
 10603  0158D0                     __ptext16:
 10604                           	opt stack 0
 10605  0158D0                     ___awdiv:
 10606                           	opt stack 24
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;incstack = 0
 10610  0158D0  0E00               	movlw	0
 10611  0158D2  0100               	movlb	0	; () banked
 10612  0158D4  6F7B               	movwf	___awdiv@sign& (0+255),b
 10613                           
 10614                           ; BSR set to: 0
 10615  0158D6  0100               	movlb	0	; () banked
 10616  0158D8  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10617  0158DA  D008               	goto	l8303
 10618                           
 10619                           ; BSR set to: 0
 10620  0158DC  0100               	movlb	0	; () banked
 10621  0158DE  6D78               	negf	___awdiv@divisor& (0+255),b
 10622  0158E0  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10623  0158E2  B0D8               	btfsc	status,0,c
 10624  0158E4  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10625                           
 10626                           ; BSR set to: 0
 10627  0158E6  0E01               	movlw	1
 10628  0158E8  0100               	movlb	0	; () banked
 10629  0158EA  6F7B               	movwf	___awdiv@sign& (0+255),b
 10630  0158EC                     l8303:
 10631                           
 10632                           ; BSR set to: 0
 10633  0158EC  0100               	movlb	0	; () banked
 10634  0158EE  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10635  0158F0  D008               	goto	l8309
 10636                           
 10637                           ; BSR set to: 0
 10638  0158F2  0100               	movlb	0	; () banked
 10639  0158F4  6D76               	negf	___awdiv@dividend& (0+255),b
 10640  0158F6  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10641  0158F8  B0D8               	btfsc	status,0,c
 10642  0158FA  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10643                           
 10644                           ; BSR set to: 0
 10645  0158FC  0E01               	movlw	1
 10646  0158FE  0100               	movlb	0	; () banked
 10647  015900  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
 10648  015902                     l8309:
 10649                           
 10650                           ; BSR set to: 0
 10651  015902  0E00               	movlw	0
 10652  015904  0100               	movlb	0	; () banked
 10653  015906  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10654  015908  0E00               	movlw	0
 10655  01590A  6F7C               	movwf	___awdiv@quotient& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658  01590C  0100               	movlb	0	; () banked
 10659  01590E  5178               	movf	___awdiv@divisor& (0+255),w,b
 10660  015910  0100               	movlb	0	; () banked
 10661  015912  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10662  015914  B4D8               	btfsc	status,2,c
 10663  015916  D02C               	goto	l8331
 10664                           
 10665                           ; BSR set to: 0
 10666  015918  0E01               	movlw	1
 10667  01591A  0100               	movlb	0	; () banked
 10668  01591C  6F7A               	movwf	___awdiv@counter& (0+255),b
 10669  01591E  D006               	goto	l8317
 10670  015920                     l8315:
 10671                           
 10672                           ; BSR set to: 0
 10673  015920  0100               	movlb	0	; () banked
 10674  015922  90D8               	bcf	status,0,c
 10675  015924  3778               	rlcf	___awdiv@divisor& (0+255),f,b
 10676  015926  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10677  015928  0100               	movlb	0	; () banked
 10678  01592A  2B7A               	incf	___awdiv@counter& (0+255),f,b
 10679  01592C                     l8317:
 10680                           
 10681                           ; BSR set to: 0
 10682  01592C  0100               	movlb	0	; () banked
 10683  01592E  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10684  015930  D7F7               	goto	l8315
 10685  015932                     l8319:
 10686                           
 10687                           ; BSR set to: 0
 10688  015932  0100               	movlb	0	; () banked
 10689  015934  90D8               	bcf	status,0,c
 10690  015936  377C               	rlcf	___awdiv@quotient& (0+255),f,b
 10691  015938  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10692                           
 10693                           ; BSR set to: 0
 10694  01593A  0100               	movlb	0	; () banked
 10695  01593C  5178               	movf	___awdiv@divisor& (0+255),w,b
 10696  01593E  0100               	movlb	0	; () banked
 10697  015940  5D76               	subwf	___awdiv@dividend& (0+255),w,b
 10698  015942  0100               	movlb	0	; () banked
 10699  015944  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10700  015946  0100               	movlb	0	; () banked
 10701  015948  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10702  01594A  A0D8               	btfss	status,0,c
 10703  01594C  D00A               	goto	l8327
 10704                           
 10705                           ; BSR set to: 0
 10706  01594E  0100               	movlb	0	; () banked
 10707  015950  5178               	movf	___awdiv@divisor& (0+255),w,b
 10708  015952  0100               	movlb	0	; () banked
 10709  015954  5F76               	subwf	___awdiv@dividend& (0+255),f,b
 10710  015956  0100               	movlb	0	; () banked
 10711  015958  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10712  01595A  0100               	movlb	0	; () banked
 10713  01595C  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10714                           
 10715                           ; BSR set to: 0
 10716  01595E  0100               	movlb	0	; () banked
 10717  015960  817C               	bsf	___awdiv@quotient& (0+255),0,b
 10718  015962                     l8327:
 10719                           
 10720                           ; BSR set to: 0
 10721  015962  0100               	movlb	0	; () banked
 10722  015964  90D8               	bcf	status,0,c
 10723  015966  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10724  015968  3378               	rrcf	___awdiv@divisor& (0+255),f,b
 10725                           
 10726                           ; BSR set to: 0
 10727  01596A  0100               	movlb	0	; () banked
 10728  01596C  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
 10729  01596E  D7E1               	goto	l8319
 10730  015970                     l8331:
 10731                           
 10732                           ; BSR set to: 0
 10733  015970  0100               	movlb	0	; () banked
 10734  015972  517B               	movf	___awdiv@sign& (0+255),w,b
 10735  015974  0100               	movlb	0	; () banked
 10736  015976  B4D8               	btfsc	status,2,c
 10737  015978  D005               	goto	l8335
 10738                           
 10739                           ; BSR set to: 0
 10740  01597A  0100               	movlb	0	; () banked
 10741  01597C  6D7C               	negf	___awdiv@quotient& (0+255),b
 10742  01597E  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10743  015980  B0D8               	btfsc	status,0,c
 10744  015982  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10745  015984                     l8335:
 10746                           
 10747                           ; BSR set to: 0
 10748  015984  C07C  F076         	movff	___awdiv@quotient,?___awdiv
 10749  015988  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
 10750  01598C  0012               	return	
 10751  01598E                     __end_of___awdiv:
 10752                           	opt stack 0
 10753                           tblptru	equ	0xFF8
 10754                           tblptrh	equ	0xFF7
 10755                           tblptrl	equ	0xFF6
 10756                           tablat	equ	0xFF5
 10757                           prodh	equ	0xFF4
 10758                           prodl	equ	0xFF3
 10759                           intcon	equ	0xFF2
 10760                           postinc0	equ	0xFEE
 10761                           wreg	equ	0xFE8
 10762                           indf2	equ	0xFDF
 10763                           postinc2	equ	0xFDE
 10764                           fsr2h	equ	0xFDA
 10765                           fsr2l	equ	0xFD9
 10766                           status	equ	0xFD8
 10767                           
 10768 ;; *************** function __tdiv_to_l_ *****************
 10769 ;; Defined at:
 10770 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  f1              4   16[BANK0 ] float 
 10773 ;;  f2              4   20[BANK0 ] float 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  quot            4   27[BANK0 ] unsigned long 
 10776 ;;  exp1            1   32[BANK0 ] unsigned char 
 10777 ;;  cntr            1   31[BANK0 ] unsigned char 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  4   16[BANK0 ] unsigned long 
 10780 ;; Registers used:
 10781 ;;		wreg, status,2, status,0
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10787 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10791 ;;Total ram usage:       17 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:    3
 10794 ;; This function calls:
 10795 ;;		Nothing
 10796 ;; This function is called by:
 10797 ;;		_sprintf
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text17
 10802  0150B4                     __ptext17:
 10803                           	opt stack 0
 10804  0150B4                     __tdiv_to_l_:
 10805                           	opt stack 25
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;incstack = 0
 10809  0150B4  C072  F078         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10810  0150B8  0100               	movlb	0	; () banked
 10811  0150BA  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10812  0150BC  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10813  0150BE  0100               	movlb	0	; () banked
 10814  0150C0  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10815  0150C2  0100               	movlb	0	; () banked
 10816  0150C4  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10817  0150C6  E301               	bnc	u11341
 10818  0150C8  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10819  0150CA                     u11341:
 10820  0150CA  0100               	movlb	0	; () banked
 10821  0150CC  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10822  0150CE  0100               	movlb	0	; () banked
 10823  0150D0  6F80               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10824  0150D2  0100               	movlb	0	; () banked
 10825  0150D4  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10826  0150D6  A4D8               	btfss	status,2,c
 10827  0150D8  D00A               	goto	l8485
 10828                           
 10829                           ; BSR set to: 0
 10830  0150DA  0E00               	movlw	0
 10831  0150DC  0100               	movlb	0	; () banked
 10832  0150DE  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10833  0150E0  0E00               	movlw	0
 10834  0150E2  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10835  0150E4  0E00               	movlw	0
 10836  0150E6  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10837  0150E8  0E00               	movlw	0
 10838  0150EA  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10839                           
 10840                           ; BSR set to: 0
 10841  0150EC  0012               	return	
 10842  0150EE                     l8485:
 10843                           
 10844                           ; BSR set to: 0
 10845  0150EE  C076  F078         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10846  0150F2  0100               	movlb	0	; () banked
 10847  0150F4  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10848  0150F6  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10849  0150F8  0100               	movlb	0	; () banked
 10850  0150FA  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10851  0150FC  0100               	movlb	0	; () banked
 10852  0150FE  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10853  015100  E301               	bnc	u11361
 10854  015102  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10855  015104                     u11361:
 10856  015104  0100               	movlb	0	; () banked
 10857  015106  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10858  015108  0100               	movlb	0	; () banked
 10859  01510A  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10860  01510C  0100               	movlb	0	; () banked
 10861  01510E  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10862  015110  A4D8               	btfss	status,2,c
 10863  015112  D00A               	goto	l8491
 10864                           
 10865                           ; BSR set to: 0
 10866  015114  0E00               	movlw	0
 10867  015116  0100               	movlb	0	; () banked
 10868  015118  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10869  01511A  0E00               	movlw	0
 10870  01511C  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10871  01511E  0E00               	movlw	0
 10872  015120  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10873  015122  0E00               	movlw	0
 10874  015124  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10875                           
 10876                           ; BSR set to: 0
 10877  015126  0012               	return	
 10878  015128                     l8491:
 10879                           
 10880                           ; BSR set to: 0
 10881  015128  0100               	movlb	0	; () banked
 10882  01512A  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10883                           
 10884                           ; BSR set to: 0
 10885  01512C  0EFF               	movlw	255
 10886  01512E  0100               	movlb	0	; () banked
 10887  015130  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10888  015132  0EFF               	movlw	255
 10889  015134  0100               	movlb	0	; () banked
 10890  015136  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10891  015138  0E00               	movlw	0
 10892  01513A  0100               	movlb	0	; () banked
 10893  01513C  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10894  01513E  0100               	movlb	0	; () banked
 10895  015140  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10896                           
 10897                           ; BSR set to: 0
 10898  015142  0EFF               	movlw	255
 10899  015144  0100               	movlb	0	; () banked
 10900  015146  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10901  015148  0EFF               	movlw	255
 10902  01514A  0100               	movlb	0	; () banked
 10903  01514C  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10904  01514E  0E00               	movlw	0
 10905  015150  0100               	movlb	0	; () banked
 10906  015152  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10907                           
 10908                           ; BSR set to: 0
 10909  015154  0E00               	movlw	0
 10910  015156  0100               	movlb	0	; () banked
 10911  015158  6F7B               	movwf	__tdiv_to_l_@quot& (0+255),b
 10912  01515A  0E00               	movlw	0
 10913  01515C  6F7C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10914  01515E  0E00               	movlw	0
 10915  015160  6F7D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10916  015162  0E00               	movlw	0
 10917  015164  6F7E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10918                           
 10919                           ; BSR set to: 0
 10920  015166  0E7F               	movlw	127
 10921  015168  0100               	movlb	0	; () banked
 10922  01516A  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10923                           
 10924                           ; BSR set to: 0
 10925  01516C  0100               	movlb	0	; () banked
 10926  01516E  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10927  015170  0F98               	addlw	152
 10928  015172  0100               	movlb	0	; () banked
 10929  015174  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10930                           
 10931                           ; BSR set to: 0
 10932  015176  0E18               	movlw	24
 10933  015178  0100               	movlb	0	; () banked
 10934  01517A  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10935  01517C                     l1365:
 10936                           
 10937                           ; BSR set to: 0
 10938  01517C  0100               	movlb	0	; () banked
 10939  01517E  90D8               	bcf	status,0,c
 10940  015180  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10941  015182  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10942  015184  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10943  015186  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10944                           
 10945                           ; BSR set to: 0
 10946  015188  0100               	movlb	0	; () banked
 10947  01518A  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10948  01518C  0100               	movlb	0	; () banked
 10949  01518E  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10950  015190  0100               	movlb	0	; () banked
 10951  015192  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10952  015194  0100               	movlb	0	; () banked
 10953  015196  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10954  015198  0100               	movlb	0	; () banked
 10955  01519A  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10956  01519C  0100               	movlb	0	; () banked
 10957  01519E  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10958  0151A0  A0D8               	btfss	status,0,c
 10959  0151A2  D00E               	goto	l1366
 10960                           
 10961                           ; BSR set to: 0
 10962  0151A4  0100               	movlb	0	; () banked
 10963  0151A6  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10964  0151A8  0100               	movlb	0	; () banked
 10965  0151AA  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10966  0151AC  0100               	movlb	0	; () banked
 10967  0151AE  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10968  0151B0  0100               	movlb	0	; () banked
 10969  0151B2  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10970  0151B4  0100               	movlb	0	; () banked
 10971  0151B6  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10972  0151B8  0100               	movlb	0	; () banked
 10973  0151BA  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10974                           
 10975                           ; BSR set to: 0
 10976  0151BC  0100               	movlb	0	; () banked
 10977  0151BE  817B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10978  0151C0                     l1366:
 10979                           
 10980                           ; BSR set to: 0
 10981  0151C0  0100               	movlb	0	; () banked
 10982  0151C2  90D8               	bcf	status,0,c
 10983  0151C4  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10984  0151C6  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10985  0151C8  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10986                           
 10987                           ; BSR set to: 0
 10988  0151CA  0100               	movlb	0	; () banked
 10989  0151CC  2F7F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10990  0151CE  D7D6               	goto	l1365
 10991                           
 10992                           ; BSR set to: 0
 10993                           
 10994                           ; BSR set to: 0
 10995  0151D0  0100               	movlb	0	; () banked
 10996  0151D2  AF80               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10997  0151D4  D01A               	goto	l8525
 10998                           
 10999                           ; BSR set to: 0
 11000  0151D6  0100               	movlb	0	; () banked
 11001  0151D8  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11002  0151DA  0A80               	xorlw	128
 11003  0151DC  0F97               	addlw	151
 11004  0151DE  B0D8               	btfsc	status,0,c
 11005  0151E0  D00A               	goto	l8521
 11006                           
 11007                           ; BSR set to: 0
 11008  0151E2  0E00               	movlw	0
 11009  0151E4  0100               	movlb	0	; () banked
 11010  0151E6  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 11011  0151E8  0E00               	movlw	0
 11012  0151EA  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11013  0151EC  0E00               	movlw	0
 11014  0151EE  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11015  0151F0  0E00               	movlw	0
 11016  0151F2  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11017                           
 11018                           ; BSR set to: 0
 11019  0151F4  0012               	return	
 11020  0151F6                     l8521:
 11021                           
 11022                           ; BSR set to: 0
 11023  0151F6  0100               	movlb	0	; () banked
 11024  0151F8  90D8               	bcf	status,0,c
 11025  0151FA  337E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11026  0151FC  337D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11027  0151FE  337C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11028  015200  337B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11029                           
 11030                           ; BSR set to: 0
 11031  015202  0100               	movlb	0	; () banked
 11032  015204  3F80               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11033  015206  D7F7               	goto	l8521
 11034                           
 11035                           ; BSR set to: 0
 11036  015208  D01B               	goto	l1372
 11037  01520A                     l8525:
 11038                           
 11039                           ; BSR set to: 0
 11040  01520A  0E17               	movlw	23
 11041  01520C  0100               	movlb	0	; () banked
 11042  01520E  6580               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11043  015210  D012               	goto	l8533
 11044                           
 11045                           ; BSR set to: 0
 11046  015212  0E00               	movlw	0
 11047  015214  0100               	movlb	0	; () banked
 11048  015216  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 11049  015218  0E00               	movlw	0
 11050  01521A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11051  01521C  0E00               	movlw	0
 11052  01521E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11053  015220  0E00               	movlw	0
 11054  015222  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11055                           
 11056                           ; BSR set to: 0
 11057  015224  0012               	return	
 11058  015226                     l8531:
 11059                           
 11060                           ; BSR set to: 0
 11061  015226  0100               	movlb	0	; () banked
 11062  015228  90D8               	bcf	status,0,c
 11063  01522A  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11064  01522C  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11065  01522E  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11066  015230  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11067  015232  0100               	movlb	0	; () banked
 11068  015234  0780               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11069  015236                     l8533:
 11070                           
 11071                           ; BSR set to: 0
 11072  015236  0100               	movlb	0	; () banked
 11073  015238  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11074  01523A  0100               	movlb	0	; () banked
 11075  01523C  A4D8               	btfss	status,2,c
 11076  01523E  D7F3               	goto	l8531
 11077  015240                     l1372:
 11078                           
 11079                           ; BSR set to: 0
 11080  015240  C07B  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11081  015244  C07C  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11082  015248  C07D  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11083  01524C  C07E  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11084                           
 11085                           ; BSR set to: 0
 11086  015250  0012               	return		;funcret
 11087  015252                     __end_of__tdiv_to_l_:
 11088                           	opt stack 0
 11089                           tblptru	equ	0xFF8
 11090                           tblptrh	equ	0xFF7
 11091                           tblptrl	equ	0xFF6
 11092                           tablat	equ	0xFF5
 11093                           prodh	equ	0xFF4
 11094                           prodl	equ	0xFF3
 11095                           intcon	equ	0xFF2
 11096                           postinc0	equ	0xFEE
 11097                           wreg	equ	0xFE8
 11098                           indf2	equ	0xFDF
 11099                           postinc2	equ	0xFDE
 11100                           fsr2h	equ	0xFDA
 11101                           fsr2l	equ	0xFD9
 11102                           status	equ	0xFD8
 11103                           
 11104 ;; *************** function __div_to_l_ *****************
 11105 ;; Defined at:
 11106 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  f1              4   16[BANK0 ] unsigned long 
 11109 ;;  f2              4   20[BANK0 ] unsigned long 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  quot            4   24[BANK0 ] unsigned long 
 11112 ;;  exp1            1   29[BANK0 ] unsigned char 
 11113 ;;  cntr            1   28[BANK0 ] unsigned char 
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  4   16[BANK0 ] unsigned long 
 11116 ;; Registers used:
 11117 ;;		wreg, status,2, status,0
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11123 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;Total ram usage:       14 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; Hardware stack levels required when called:    3
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_sprintf
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text18
 11138  0153E2                     __ptext18:
 11139                           	opt stack 0
 11140  0153E2                     __div_to_l_:
 11141                           	opt stack 25
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;incstack = 0
 11145  0153E2  0100               	movlb	0	; () banked
 11146  0153E4  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11147  0153E6  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11148  0153E8  0100               	movlb	0	; () banked
 11149  0153EA  6F7D               	movwf	__div_to_l_@exp1& (0+255),b
 11150  0153EC  0100               	movlb	0	; () banked
 11151  0153EE  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11152  0153F0  A4D8               	btfss	status,2,c
 11153  0153F2  D00A               	goto	l8541
 11154                           
 11155                           ; BSR set to: 0
 11156  0153F4  0E00               	movlw	0
 11157  0153F6  0100               	movlb	0	; () banked
 11158  0153F8  6F70               	movwf	?__div_to_l_& (0+255),b
 11159  0153FA  0E00               	movlw	0
 11160  0153FC  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11161  0153FE  0E00               	movlw	0
 11162  015400  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11163  015402  0E00               	movlw	0
 11164  015404  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11165                           
 11166                           ; BSR set to: 0
 11167  015406  0012               	return	
 11168  015408                     l8541:
 11169                           
 11170                           ; BSR set to: 0
 11171  015408  0100               	movlb	0	; () banked
 11172  01540A  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11173  01540C  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11174  01540E  0100               	movlb	0	; () banked
 11175  015410  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11176  015412  0100               	movlb	0	; () banked
 11177  015414  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11178  015416  A4D8               	btfss	status,2,c
 11179  015418  D00A               	goto	l8547
 11180                           
 11181                           ; BSR set to: 0
 11182  01541A  0E00               	movlw	0
 11183  01541C  0100               	movlb	0	; () banked
 11184  01541E  6F70               	movwf	?__div_to_l_& (0+255),b
 11185  015420  0E00               	movlw	0
 11186  015422  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11187  015424  0E00               	movlw	0
 11188  015426  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11189  015428  0E00               	movlw	0
 11190  01542A  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11191                           
 11192                           ; BSR set to: 0
 11193  01542C  0012               	return	
 11194  01542E                     l8547:
 11195                           
 11196                           ; BSR set to: 0
 11197  01542E  0100               	movlb	0	; () banked
 11198  015430  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11199                           
 11200                           ; BSR set to: 0
 11201  015432  0EFF               	movlw	255
 11202  015434  0100               	movlb	0	; () banked
 11203  015436  1770               	andwf	__div_to_l_@f1& (0+255),f,b
 11204  015438  0EFF               	movlw	255
 11205  01543A  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11206  01543C  0EFF               	movlw	255
 11207  01543E  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11208  015440  0E00               	movlw	0
 11209  015442  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11210                           
 11211                           ; BSR set to: 0
 11212  015444  0100               	movlb	0	; () banked
 11213  015446  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11214  015448  0EFF               	movlw	255
 11215  01544A  0100               	movlb	0	; () banked
 11216  01544C  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 11217  01544E  0EFF               	movlw	255
 11218  015450  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11219  015452  0EFF               	movlw	255
 11220  015454  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11221  015456  0E00               	movlw	0
 11222  015458  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11223                           
 11224                           ; BSR set to: 0
 11225  01545A  0E00               	movlw	0
 11226  01545C  0100               	movlb	0	; () banked
 11227  01545E  6F78               	movwf	__div_to_l_@quot& (0+255),b
 11228  015460  0E00               	movlw	0
 11229  015462  6F79               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11230  015464  0E00               	movlw	0
 11231  015466  6F7A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11232  015468  0E00               	movlw	0
 11233  01546A  6F7B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11234                           
 11235                           ; BSR set to: 0
 11236  01546C  0E7F               	movlw	127
 11237  01546E  0100               	movlb	0	; () banked
 11238  015470  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11239                           
 11240                           ; BSR set to: 0
 11241  015472  0100               	movlb	0	; () banked
 11242  015474  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11243  015476  0FA0               	addlw	160
 11244  015478  0100               	movlb	0	; () banked
 11245  01547A  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11246                           
 11247                           ; BSR set to: 0
 11248  01547C  0E20               	movlw	32
 11249  01547E  0100               	movlb	0	; () banked
 11250  015480  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11251  015482                     l8561:
 11252                           
 11253                           ; BSR set to: 0
 11254  015482  0100               	movlb	0	; () banked
 11255  015484  90D8               	bcf	status,0,c
 11256  015486  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11257  015488  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11258  01548A  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11259  01548C  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11260                           
 11261                           ; BSR set to: 0
 11262  01548E  0100               	movlb	0	; () banked
 11263  015490  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11264  015492  0100               	movlb	0	; () banked
 11265  015494  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
 11266  015496  0100               	movlb	0	; () banked
 11267  015498  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11268  01549A  0100               	movlb	0	; () banked
 11269  01549C  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11270  01549E  0100               	movlb	0	; () banked
 11271  0154A0  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11272  0154A2  0100               	movlb	0	; () banked
 11273  0154A4  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11274  0154A6  0100               	movlb	0	; () banked
 11275  0154A8  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11276  0154AA  0100               	movlb	0	; () banked
 11277  0154AC  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11278  0154AE  A0D8               	btfss	status,0,c
 11279  0154B0  D012               	goto	l8569
 11280                           
 11281                           ; BSR set to: 0
 11282  0154B2  0100               	movlb	0	; () banked
 11283  0154B4  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11284  0154B6  0100               	movlb	0	; () banked
 11285  0154B8  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
 11286  0154BA  0100               	movlb	0	; () banked
 11287  0154BC  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11288  0154BE  0100               	movlb	0	; () banked
 11289  0154C0  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11290  0154C2  0100               	movlb	0	; () banked
 11291  0154C4  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11292  0154C6  0100               	movlb	0	; () banked
 11293  0154C8  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11294  0154CA  0100               	movlb	0	; () banked
 11295  0154CC  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11296  0154CE  0100               	movlb	0	; () banked
 11297  0154D0  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11298                           
 11299                           ; BSR set to: 0
 11300  0154D2  0100               	movlb	0	; () banked
 11301  0154D4  8178               	bsf	__div_to_l_@quot& (0+255),0,b
 11302  0154D6                     l8569:
 11303                           
 11304                           ; BSR set to: 0
 11305  0154D6  0100               	movlb	0	; () banked
 11306  0154D8  90D8               	bcf	status,0,c
 11307  0154DA  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
 11308  0154DC  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11309  0154DE  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11310  0154E0  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11311                           
 11312                           ; BSR set to: 0
 11313  0154E2  0100               	movlb	0	; () banked
 11314  0154E4  2F7C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11315  0154E6  D7CD               	goto	l8561
 11316                           
 11317                           ; BSR set to: 0
 11318                           
 11319                           ; BSR set to: 0
 11320  0154E8  0100               	movlb	0	; () banked
 11321  0154EA  AF7D               	btfss	__div_to_l_@exp1& (0+255),7,b
 11322  0154EC  D01A               	goto	l8585
 11323                           
 11324                           ; BSR set to: 0
 11325  0154EE  0100               	movlb	0	; () banked
 11326  0154F0  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11327  0154F2  0A80               	xorlw	128
 11328  0154F4  0F9F               	addlw	159
 11329  0154F6  B0D8               	btfsc	status,0,c
 11330  0154F8  D00A               	goto	l8581
 11331                           
 11332                           ; BSR set to: 0
 11333  0154FA  0E00               	movlw	0
 11334  0154FC  0100               	movlb	0	; () banked
 11335  0154FE  6F70               	movwf	?__div_to_l_& (0+255),b
 11336  015500  0E00               	movlw	0
 11337  015502  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11338  015504  0E00               	movlw	0
 11339  015506  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11340  015508  0E00               	movlw	0
 11341  01550A  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11342                           
 11343                           ; BSR set to: 0
 11344  01550C  0012               	return	
 11345  01550E                     l8581:
 11346                           
 11347                           ; BSR set to: 0
 11348  01550E  0100               	movlb	0	; () banked
 11349  015510  90D8               	bcf	status,0,c
 11350  015512  337B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11351  015514  337A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11352  015516  3379               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11353  015518  3378               	rrcf	__div_to_l_@quot& (0+255),f,b
 11354                           
 11355                           ; BSR set to: 0
 11356  01551A  0100               	movlb	0	; () banked
 11357  01551C  3F7D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11358  01551E  D7F7               	goto	l8581
 11359                           
 11360                           ; BSR set to: 0
 11361  015520  D01B               	goto	l1268
 11362  015522                     l8585:
 11363                           
 11364                           ; BSR set to: 0
 11365  015522  0E1F               	movlw	31
 11366  015524  0100               	movlb	0	; () banked
 11367  015526  657D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11368  015528  D012               	goto	l8593
 11369                           
 11370                           ; BSR set to: 0
 11371  01552A  0E00               	movlw	0
 11372  01552C  0100               	movlb	0	; () banked
 11373  01552E  6F70               	movwf	?__div_to_l_& (0+255),b
 11374  015530  0E00               	movlw	0
 11375  015532  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11376  015534  0E00               	movlw	0
 11377  015536  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11378  015538  0E00               	movlw	0
 11379  01553A  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11380                           
 11381                           ; BSR set to: 0
 11382  01553C  0012               	return	
 11383  01553E                     l8591:
 11384                           
 11385                           ; BSR set to: 0
 11386  01553E  0100               	movlb	0	; () banked
 11387  015540  90D8               	bcf	status,0,c
 11388  015542  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11389  015544  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11390  015546  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11391  015548  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11392  01554A  0100               	movlb	0	; () banked
 11393  01554C  077D               	decf	__div_to_l_@exp1& (0+255),f,b
 11394  01554E                     l8593:
 11395                           
 11396                           ; BSR set to: 0
 11397  01554E  0100               	movlb	0	; () banked
 11398  015550  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11399  015552  0100               	movlb	0	; () banked
 11400  015554  A4D8               	btfss	status,2,c
 11401  015556  D7F3               	goto	l8591
 11402  015558                     l1268:
 11403                           
 11404                           ; BSR set to: 0
 11405  015558  C078  F070         	movff	__div_to_l_@quot,?__div_to_l_
 11406  01555C  C079  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11407  015560  C07A  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11408  015564  C07B  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11409                           
 11410                           ; BSR set to: 0
 11411  015568  0012               	return		;funcret
 11412  01556A                     __end_of__div_to_l_:
 11413                           	opt stack 0
 11414                           tblptru	equ	0xFF8
 11415                           tblptrh	equ	0xFF7
 11416                           tblptrl	equ	0xFF6
 11417                           tablat	equ	0xFF5
 11418                           prodh	equ	0xFF4
 11419                           prodl	equ	0xFF3
 11420                           intcon	equ	0xFF2
 11421                           postinc0	equ	0xFEE
 11422                           wreg	equ	0xFE8
 11423                           indf2	equ	0xFDF
 11424                           postinc2	equ	0xFDE
 11425                           fsr2h	equ	0xFDA
 11426                           fsr2l	equ	0xFD9
 11427                           status	equ	0xFD8
 11428                           
 11429 ;; *************** function ___xxtofl *****************
 11430 ;; Defined at:
 11431 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;  sign            1    wreg     unsigned char 
 11434 ;;  val             4   16[BANK0 ] long 
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;  sign            1   24[BANK0 ] unsigned char 
 11437 ;;  arg             4   26[BANK0 ] unsigned long 
 11438 ;;  exp             1   25[BANK0 ] unsigned char 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  4   16[BANK0 ] unsigned char 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11448 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;Total ram usage:       14 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; Hardware stack levels required when called:    3
 11455 ;; This function calls:
 11456 ;;		Nothing
 11457 ;; This function is called by:
 11458 ;;		_main
 11459 ;;		_LCD_Handler
 11460 ;;		_sprintf
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text19
 11465  0149B2                     __ptext19:
 11466                           	opt stack 0
 11467  0149B2                     ___xxtofl:
 11468                           	opt stack 27
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;incstack = 0
 11472                           ;___xxtofl@sign stored from wreg
 11473  0149B2  0100               	movlb	0	; () banked
 11474  0149B4  6F78               	movwf	___xxtofl@sign& (0+255),b
 11475  0149B6  0100               	movlb	0	; () banked
 11476  0149B8  5178               	movf	___xxtofl@sign& (0+255),w,b
 11477  0149BA  0100               	movlb	0	; () banked
 11478  0149BC  B4D8               	btfsc	status,2,c
 11479  0149BE  D01E               	goto	l1663
 11480                           
 11481                           ; BSR set to: 0
 11482  0149C0  0100               	movlb	0	; () banked
 11483  0149C2  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11484  0149C4  D01B               	goto	l1663
 11485                           
 11486                           ; BSR set to: 0
 11487  0149C6  C070  F074         	movff	___xxtofl@val,??___xxtofl
 11488  0149CA  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
 11489  0149CE  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
 11490  0149D2  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
 11491  0149D6  0100               	movlb	0	; () banked
 11492  0149D8  1F74               	comf	??___xxtofl& (0+255),f,b
 11493  0149DA  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
 11494  0149DC  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
 11495  0149DE  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
 11496  0149E0  2B74               	incf	??___xxtofl& (0+255),f,b
 11497  0149E2  0E00               	movlw	0
 11498  0149E4  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11499  0149E6  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11500  0149E8  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11501  0149EA  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
 11502  0149EE  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
 11503  0149F2  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
 11504  0149F6  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
 11505  0149FA  D008               	goto	l8719
 11506  0149FC                     l1663:
 11507                           
 11508                           ; BSR set to: 0
 11509  0149FC  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
 11510  014A00  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11511  014A04  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11512  014A08  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11513  014A0C                     l8719:
 11514                           
 11515                           ; BSR set to: 0
 11516  014A0C  0100               	movlb	0	; () banked
 11517  014A0E  5170               	movf	___xxtofl@val& (0+255),w,b
 11518  014A10  0100               	movlb	0	; () banked
 11519  014A12  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11520  014A14  0100               	movlb	0	; () banked
 11521  014A16  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11522  014A18  0100               	movlb	0	; () banked
 11523  014A1A  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11524  014A1C  A4D8               	btfss	status,2,c
 11525  014A1E  D00A               	goto	l8725
 11526                           
 11527                           ; BSR set to: 0
 11528  014A20  0E00               	movlw	0
 11529  014A22  0100               	movlb	0	; () banked
 11530  014A24  6F70               	movwf	?___xxtofl& (0+255),b
 11531  014A26  0E00               	movlw	0
 11532  014A28  6F71               	movwf	(?___xxtofl+1)& (0+255),b
 11533  014A2A  0E00               	movlw	0
 11534  014A2C  6F72               	movwf	(?___xxtofl+2)& (0+255),b
 11535  014A2E  0E00               	movlw	0
 11536  014A30  6F73               	movwf	(?___xxtofl+3)& (0+255),b
 11537                           
 11538                           ; BSR set to: 0
 11539  014A32  0012               	return	
 11540  014A34                     l8725:
 11541                           
 11542                           ; BSR set to: 0
 11543  014A34  0E96               	movlw	150
 11544  014A36  0100               	movlb	0	; () banked
 11545  014A38  6F79               	movwf	___xxtofl@exp& (0+255),b
 11546  014A3A  D008               	goto	l8729
 11547  014A3C                     l8727:
 11548                           
 11549                           ; BSR set to: 0
 11550  014A3C  0100               	movlb	0	; () banked
 11551  014A3E  2B79               	incf	___xxtofl@exp& (0+255),f,b
 11552  014A40  0100               	movlb	0	; () banked
 11553  014A42  90D8               	bcf	status,0,c
 11554  014A44  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11555  014A46  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11556  014A48  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11557  014A4A  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 11558  014A4C                     l8729:
 11559                           
 11560                           ; BSR set to: 0
 11561  014A4C  0E00               	movlw	0
 11562  014A4E  0100               	movlb	0	; () banked
 11563  014A50  157A               	andwf	___xxtofl@arg& (0+255),w,b
 11564  014A52  0100               	movlb	0	; () banked
 11565  014A54  6F74               	movwf	??___xxtofl& (0+255),b
 11566  014A56  0E00               	movlw	0
 11567  014A58  0100               	movlb	0	; () banked
 11568  014A5A  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11569  014A5C  0100               	movlb	0	; () banked
 11570  014A5E  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 11571  014A60  0E00               	movlw	0
 11572  014A62  0100               	movlb	0	; () banked
 11573  014A64  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11574  014A66  0100               	movlb	0	; () banked
 11575  014A68  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 11576  014A6A  0EFE               	movlw	254
 11577  014A6C  0100               	movlb	0	; () banked
 11578  014A6E  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11579  014A70  0100               	movlb	0	; () banked
 11580  014A72  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 11581  014A74  0100               	movlb	0	; () banked
 11582  014A76  5174               	movf	??___xxtofl& (0+255),w,b
 11583  014A78  0100               	movlb	0	; () banked
 11584  014A7A  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11585  014A7C  0100               	movlb	0	; () banked
 11586  014A7E  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11587  014A80  0100               	movlb	0	; () banked
 11588  014A82  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11589  014A84  B4D8               	btfsc	status,2,c
 11590  014A86  D010               	goto	l1670
 11591  014A88  D7D9               	goto	l8727
 11592  014A8A                     l8731:
 11593                           
 11594                           ; BSR set to: 0
 11595  014A8A  0100               	movlb	0	; () banked
 11596  014A8C  2B79               	incf	___xxtofl@exp& (0+255),f,b
 11597                           
 11598                           ; BSR set to: 0
 11599  014A8E  0E01               	movlw	1
 11600  014A90  0100               	movlb	0	; () banked
 11601  014A92  277A               	addwf	___xxtofl@arg& (0+255),f,b
 11602  014A94  0E00               	movlw	0
 11603  014A96  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11604  014A98  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11605  014A9A  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11606                           
 11607                           ; BSR set to: 0
 11608  014A9C  0100               	movlb	0	; () banked
 11609  014A9E  90D8               	bcf	status,0,c
 11610  014AA0  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11611  014AA2  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11612  014AA4  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11613  014AA6  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 11614  014AA8                     l1670:
 11615                           
 11616                           ; BSR set to: 0
 11617  014AA8  0E00               	movlw	0
 11618  014AAA  0100               	movlb	0	; () banked
 11619  014AAC  157A               	andwf	___xxtofl@arg& (0+255),w,b
 11620  014AAE  0100               	movlb	0	; () banked
 11621  014AB0  6F74               	movwf	??___xxtofl& (0+255),b
 11622  014AB2  0E00               	movlw	0
 11623  014AB4  0100               	movlb	0	; () banked
 11624  014AB6  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11625  014AB8  0100               	movlb	0	; () banked
 11626  014ABA  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 11627  014ABC  0E00               	movlw	0
 11628  014ABE  0100               	movlb	0	; () banked
 11629  014AC0  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11630  014AC2  0100               	movlb	0	; () banked
 11631  014AC4  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 11632  014AC6  0EFF               	movlw	255
 11633  014AC8  0100               	movlb	0	; () banked
 11634  014ACA  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11635  014ACC  0100               	movlb	0	; () banked
 11636  014ACE  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 11637  014AD0  0100               	movlb	0	; () banked
 11638  014AD2  5174               	movf	??___xxtofl& (0+255),w,b
 11639  014AD4  0100               	movlb	0	; () banked
 11640  014AD6  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11641  014AD8  0100               	movlb	0	; () banked
 11642  014ADA  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11643  014ADC  0100               	movlb	0	; () banked
 11644  014ADE  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11645  014AE0  B4D8               	btfsc	status,2,c
 11646  014AE2  D009               	goto	l8739
 11647  014AE4  D7D2               	goto	l8731
 11648  014AE6                     l8737:
 11649                           
 11650                           ; BSR set to: 0
 11651  014AE6  0100               	movlb	0	; () banked
 11652  014AE8  0779               	decf	___xxtofl@exp& (0+255),f,b
 11653  014AEA  0100               	movlb	0	; () banked
 11654  014AEC  90D8               	bcf	status,0,c
 11655  014AEE  377A               	rlcf	___xxtofl@arg& (0+255),f,b
 11656  014AF0  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11657  014AF2  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11658  014AF4  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11659  014AF6                     l8739:
 11660                           
 11661                           ; BSR set to: 0
 11662  014AF6  0100               	movlb	0	; () banked
 11663  014AF8  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11664  014AFA  D004               	goto	l1677
 11665                           
 11666                           ; BSR set to: 0
 11667  014AFC  0E02               	movlw	2
 11668  014AFE  0100               	movlb	0	; () banked
 11669  014B00  6179               	cpfslt	___xxtofl@exp& (0+255),b
 11670  014B02  D7F1               	goto	l8737
 11671  014B04                     l1677:
 11672                           
 11673                           ; BSR set to: 0
 11674  014B04  0100               	movlb	0	; () banked
 11675  014B06  B179               	btfsc	___xxtofl@exp& (0+255),0,b
 11676  014B08  D009               	goto	l1678
 11677                           
 11678                           ; BSR set to: 0
 11679  014B0A  0EFF               	movlw	255
 11680  014B0C  0100               	movlb	0	; () banked
 11681  014B0E  177A               	andwf	___xxtofl@arg& (0+255),f,b
 11682  014B10  0EFF               	movlw	255
 11683  014B12  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 11684  014B14  0E7F               	movlw	127
 11685  014B16  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 11686  014B18  0EFF               	movlw	255
 11687  014B1A  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 11688  014B1C                     l1678:
 11689                           
 11690                           ; BSR set to: 0
 11691  014B1C  0100               	movlb	0	; () banked
 11692  014B1E  90D8               	bcf	status,0,c
 11693  014B20  3379               	rrcf	___xxtofl@exp& (0+255),f,b
 11694  014B22  C079  F074         	movff	___xxtofl@exp,??___xxtofl
 11695  014B26  0100               	movlb	0	; () banked
 11696  014B28  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 11697  014B2A  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 11698  014B2C  6B77               	clrf	(??___xxtofl+3)& (0+255),b
 11699  014B2E  C074  F077         	movff	??___xxtofl,??___xxtofl+3
 11700  014B32  0100               	movlb	0	; () banked
 11701  014B34  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 11702  014B36  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 11703  014B38  6B74               	clrf	??___xxtofl& (0+255),b
 11704  014B3A  0100               	movlb	0	; () banked
 11705  014B3C  5174               	movf	??___xxtofl& (0+255),w,b
 11706  014B3E  0100               	movlb	0	; () banked
 11707  014B40  137A               	iorwf	___xxtofl@arg& (0+255),f,b
 11708  014B42  0100               	movlb	0	; () banked
 11709  014B44  5175               	movf	(??___xxtofl+1)& (0+255),w,b
 11710  014B46  0100               	movlb	0	; () banked
 11711  014B48  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11712  014B4A  0100               	movlb	0	; () banked
 11713  014B4C  5176               	movf	(??___xxtofl+2)& (0+255),w,b
 11714  014B4E  0100               	movlb	0	; () banked
 11715  014B50  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11716  014B52  0100               	movlb	0	; () banked
 11717  014B54  5177               	movf	(??___xxtofl+3)& (0+255),w,b
 11718  014B56  0100               	movlb	0	; () banked
 11719  014B58  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11720                           
 11721                           ; BSR set to: 0
 11722  014B5A  0100               	movlb	0	; () banked
 11723  014B5C  5178               	movf	___xxtofl@sign& (0+255),w,b
 11724  014B5E  0100               	movlb	0	; () banked
 11725  014B60  B4D8               	btfsc	status,2,c
 11726  014B62  D005               	goto	l8751
 11727                           
 11728                           ; BSR set to: 0
 11729  014B64  0100               	movlb	0	; () banked
 11730  014B66  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11731  014B68  D002               	goto	l8751
 11732                           
 11733                           ; BSR set to: 0
 11734  014B6A  0100               	movlb	0	; () banked
 11735  014B6C  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11736  014B6E                     l8751:
 11737                           
 11738                           ; BSR set to: 0
 11739  014B6E  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
 11740  014B72  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
 11741  014B76  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
 11742  014B7A  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
 11743  014B7E  0012               	return	
 11744  014B80                     __end_of___xxtofl:
 11745                           	opt stack 0
 11746                           tblptru	equ	0xFF8
 11747                           tblptrh	equ	0xFF7
 11748                           tblptrl	equ	0xFF6
 11749                           tablat	equ	0xFF5
 11750                           prodh	equ	0xFF4
 11751                           prodl	equ	0xFF3
 11752                           intcon	equ	0xFF2
 11753                           postinc0	equ	0xFEE
 11754                           wreg	equ	0xFE8
 11755                           indf2	equ	0xFDF
 11756                           postinc2	equ	0xFDE
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function ___llmod *****************
 11762 ;; Defined at:
 11763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  dividend        4   16[BANK0 ] unsigned long 
 11766 ;;  divisor         4   20[BANK0 ] unsigned long 
 11767 ;; Auto vars:     Size  Location     Type
 11768 ;;  counter         1   24[BANK0 ] unsigned char 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  4   16[BANK0 ] unsigned long 
 11771 ;; Registers used:
 11772 ;;		wreg, status,2, status,0
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11778 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;Total ram usage:        9 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    3
 11785 ;; This function calls:
 11786 ;;		Nothing
 11787 ;; This function is called by:
 11788 ;;		_sprintf
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	text20
 11793  015D08                     __ptext20:
 11794                           	opt stack 0
 11795  015D08                     ___llmod:
 11796                           	opt stack 25
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;incstack = 0
 11800  015D08  0100               	movlb	0	; () banked
 11801  015D0A  5174               	movf	___llmod@divisor& (0+255),w,b
 11802  015D0C  0100               	movlb	0	; () banked
 11803  015D0E  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11804  015D10  0100               	movlb	0	; () banked
 11805  015D12  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11806  015D14  0100               	movlb	0	; () banked
 11807  015D16  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11808  015D18  B4D8               	btfsc	status,2,c
 11809  015D1A  D03A               	goto	l1471
 11810                           
 11811                           ; BSR set to: 0
 11812  015D1C  0E01               	movlw	1
 11813  015D1E  0100               	movlb	0	; () banked
 11814  015D20  6F78               	movwf	___llmod@counter& (0+255),b
 11815  015D22  D008               	goto	l8703
 11816  015D24                     l8701:
 11817                           
 11818                           ; BSR set to: 0
 11819  015D24  0100               	movlb	0	; () banked
 11820  015D26  90D8               	bcf	status,0,c
 11821  015D28  3774               	rlcf	___llmod@divisor& (0+255),f,b
 11822  015D2A  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11823  015D2C  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11824  015D2E  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11825  015D30  0100               	movlb	0	; () banked
 11826  015D32  2B78               	incf	___llmod@counter& (0+255),f,b
 11827  015D34                     l8703:
 11828                           
 11829                           ; BSR set to: 0
 11830  015D34  0100               	movlb	0	; () banked
 11831  015D36  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11832  015D38  D7F5               	goto	l8701
 11833  015D3A                     l8705:
 11834                           
 11835                           ; BSR set to: 0
 11836  015D3A  0100               	movlb	0	; () banked
 11837  015D3C  5174               	movf	___llmod@divisor& (0+255),w,b
 11838  015D3E  0100               	movlb	0	; () banked
 11839  015D40  5D70               	subwf	___llmod@dividend& (0+255),w,b
 11840  015D42  0100               	movlb	0	; () banked
 11841  015D44  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11842  015D46  0100               	movlb	0	; () banked
 11843  015D48  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11844  015D4A  0100               	movlb	0	; () banked
 11845  015D4C  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11846  015D4E  0100               	movlb	0	; () banked
 11847  015D50  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11848  015D52  0100               	movlb	0	; () banked
 11849  015D54  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11850  015D56  0100               	movlb	0	; () banked
 11851  015D58  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11852  015D5A  A0D8               	btfss	status,0,c
 11853  015D5C  D010               	goto	l8709
 11854                           
 11855                           ; BSR set to: 0
 11856  015D5E  0100               	movlb	0	; () banked
 11857  015D60  5174               	movf	___llmod@divisor& (0+255),w,b
 11858  015D62  0100               	movlb	0	; () banked
 11859  015D64  5F70               	subwf	___llmod@dividend& (0+255),f,b
 11860  015D66  0100               	movlb	0	; () banked
 11861  015D68  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11862  015D6A  0100               	movlb	0	; () banked
 11863  015D6C  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11864  015D6E  0100               	movlb	0	; () banked
 11865  015D70  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11866  015D72  0100               	movlb	0	; () banked
 11867  015D74  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11868  015D76  0100               	movlb	0	; () banked
 11869  015D78  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11870  015D7A  0100               	movlb	0	; () banked
 11871  015D7C  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11872  015D7E                     l8709:
 11873                           
 11874                           ; BSR set to: 0
 11875  015D7E  0100               	movlb	0	; () banked
 11876  015D80  90D8               	bcf	status,0,c
 11877  015D82  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11878  015D84  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11879  015D86  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11880  015D88  3374               	rrcf	___llmod@divisor& (0+255),f,b
 11881                           
 11882                           ; BSR set to: 0
 11883  015D8A  0100               	movlb	0	; () banked
 11884  015D8C  2F78               	decfsz	___llmod@counter& (0+255),f,b
 11885  015D8E  D7D5               	goto	l8705
 11886  015D90                     l1471:
 11887                           
 11888                           ; BSR set to: 0
 11889  015D90  C070  F070         	movff	___llmod@dividend,?___llmod
 11890  015D94  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
 11891  015D98  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
 11892  015D9C  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
 11893                           
 11894                           ; BSR set to: 0
 11895  015DA0  0012               	return		;funcret
 11896  015DA2                     __end_of___llmod:
 11897                           	opt stack 0
 11898                           tblptru	equ	0xFF8
 11899                           tblptrh	equ	0xFF7
 11900                           tblptrl	equ	0xFF6
 11901                           tablat	equ	0xFF5
 11902                           prodh	equ	0xFF4
 11903                           prodl	equ	0xFF3
 11904                           intcon	equ	0xFF2
 11905                           postinc0	equ	0xFEE
 11906                           wreg	equ	0xFE8
 11907                           indf2	equ	0xFDF
 11908                           postinc2	equ	0xFDE
 11909                           fsr2h	equ	0xFDA
 11910                           fsr2l	equ	0xFD9
 11911                           status	equ	0xFD8
 11912                           
 11913 ;; *************** function ___lldiv *****************
 11914 ;; Defined at:
 11915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11916 ;; Parameters:    Size  Location     Type
 11917 ;;  dividend        4   16[BANK0 ] unsigned long 
 11918 ;;  divisor         4   20[BANK0 ] unsigned long 
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;  quotient        4   24[BANK0 ] unsigned long 
 11921 ;;  counter         1   28[BANK0 ] unsigned char 
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  4   16[BANK0 ] unsigned long 
 11924 ;; Registers used:
 11925 ;;		wreg, status,2, status,0
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11931 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;Total ram usage:       13 bytes
 11936 ;; Hardware stack levels used:    1
 11937 ;; Hardware stack levels required when called:    3
 11938 ;; This function calls:
 11939 ;;		Nothing
 11940 ;; This function is called by:
 11941 ;;		_sprintf
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           	psect	text21
 11946  015A4C                     __ptext21:
 11947                           	opt stack 0
 11948  015A4C                     ___lldiv:
 11949                           	opt stack 25
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;incstack = 0
 11953  015A4C  0E00               	movlw	0
 11954  015A4E  0100               	movlb	0	; () banked
 11955  015A50  6F78               	movwf	___lldiv@quotient& (0+255),b
 11956  015A52  0E00               	movlw	0
 11957  015A54  6F79               	movwf	(___lldiv@quotient+1)& (0+255),b
 11958  015A56  0E00               	movlw	0
 11959  015A58  6F7A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11960  015A5A  0E00               	movlw	0
 11961  015A5C  6F7B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11962                           
 11963                           ; BSR set to: 0
 11964  015A5E  0100               	movlb	0	; () banked
 11965  015A60  5174               	movf	___lldiv@divisor& (0+255),w,b
 11966  015A62  0100               	movlb	0	; () banked
 11967  015A64  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11968  015A66  0100               	movlb	0	; () banked
 11969  015A68  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11970  015A6A  0100               	movlb	0	; () banked
 11971  015A6C  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11972  015A6E  B4D8               	btfsc	status,2,c
 11973  015A70  D042               	goto	l1461
 11974                           
 11975                           ; BSR set to: 0
 11976  015A72  0E01               	movlw	1
 11977  015A74  0100               	movlb	0	; () banked
 11978  015A76  6F7C               	movwf	___lldiv@counter& (0+255),b
 11979  015A78  D008               	goto	l8683
 11980  015A7A                     l8681:
 11981                           
 11982                           ; BSR set to: 0
 11983  015A7A  0100               	movlb	0	; () banked
 11984  015A7C  90D8               	bcf	status,0,c
 11985  015A7E  3774               	rlcf	___lldiv@divisor& (0+255),f,b
 11986  015A80  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11987  015A82  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11988  015A84  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11989  015A86  0100               	movlb	0	; () banked
 11990  015A88  2B7C               	incf	___lldiv@counter& (0+255),f,b
 11991  015A8A                     l8683:
 11992                           
 11993                           ; BSR set to: 0
 11994  015A8A  0100               	movlb	0	; () banked
 11995  015A8C  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11996  015A8E  D7F5               	goto	l8681
 11997  015A90                     l8685:
 11998                           
 11999                           ; BSR set to: 0
 12000  015A90  0100               	movlb	0	; () banked
 12001  015A92  90D8               	bcf	status,0,c
 12002  015A94  3778               	rlcf	___lldiv@quotient& (0+255),f,b
 12003  015A96  3779               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12004  015A98  377A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12005  015A9A  377B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12006                           
 12007                           ; BSR set to: 0
 12008  015A9C  0100               	movlb	0	; () banked
 12009  015A9E  5174               	movf	___lldiv@divisor& (0+255),w,b
 12010  015AA0  0100               	movlb	0	; () banked
 12011  015AA2  5D70               	subwf	___lldiv@dividend& (0+255),w,b
 12012  015AA4  0100               	movlb	0	; () banked
 12013  015AA6  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12014  015AA8  0100               	movlb	0	; () banked
 12015  015AAA  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12016  015AAC  0100               	movlb	0	; () banked
 12017  015AAE  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12018  015AB0  0100               	movlb	0	; () banked
 12019  015AB2  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12020  015AB4  0100               	movlb	0	; () banked
 12021  015AB6  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12022  015AB8  0100               	movlb	0	; () banked
 12023  015ABA  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12024  015ABC  A0D8               	btfss	status,0,c
 12025  015ABE  D012               	goto	l8693
 12026                           
 12027                           ; BSR set to: 0
 12028  015AC0  0100               	movlb	0	; () banked
 12029  015AC2  5174               	movf	___lldiv@divisor& (0+255),w,b
 12030  015AC4  0100               	movlb	0	; () banked
 12031  015AC6  5F70               	subwf	___lldiv@dividend& (0+255),f,b
 12032  015AC8  0100               	movlb	0	; () banked
 12033  015ACA  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12034  015ACC  0100               	movlb	0	; () banked
 12035  015ACE  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12036  015AD0  0100               	movlb	0	; () banked
 12037  015AD2  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12038  015AD4  0100               	movlb	0	; () banked
 12039  015AD6  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12040  015AD8  0100               	movlb	0	; () banked
 12041  015ADA  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12042  015ADC  0100               	movlb	0	; () banked
 12043  015ADE  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12044                           
 12045                           ; BSR set to: 0
 12046  015AE0  0100               	movlb	0	; () banked
 12047  015AE2  8178               	bsf	___lldiv@quotient& (0+255),0,b
 12048  015AE4                     l8693:
 12049                           
 12050                           ; BSR set to: 0
 12051  015AE4  0100               	movlb	0	; () banked
 12052  015AE6  90D8               	bcf	status,0,c
 12053  015AE8  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12054  015AEA  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12055  015AEC  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12056  015AEE  3374               	rrcf	___lldiv@divisor& (0+255),f,b
 12057                           
 12058                           ; BSR set to: 0
 12059  015AF0  0100               	movlb	0	; () banked
 12060  015AF2  2F7C               	decfsz	___lldiv@counter& (0+255),f,b
 12061  015AF4  D7CD               	goto	l8685
 12062  015AF6                     l1461:
 12063                           
 12064                           ; BSR set to: 0
 12065  015AF6  C078  F070         	movff	___lldiv@quotient,?___lldiv
 12066  015AFA  C079  F071         	movff	___lldiv@quotient+1,?___lldiv+1
 12067  015AFE  C07A  F072         	movff	___lldiv@quotient+2,?___lldiv+2
 12068  015B02  C07B  F073         	movff	___lldiv@quotient+3,?___lldiv+3
 12069                           
 12070                           ; BSR set to: 0
 12071  015B06  0012               	return		;funcret
 12072  015B08                     __end_of___lldiv:
 12073                           	opt stack 0
 12074                           tblptru	equ	0xFF8
 12075                           tblptrh	equ	0xFF7
 12076                           tblptrl	equ	0xFF6
 12077                           tablat	equ	0xFF5
 12078                           prodh	equ	0xFF4
 12079                           prodl	equ	0xFF3
 12080                           intcon	equ	0xFF2
 12081                           postinc0	equ	0xFEE
 12082                           wreg	equ	0xFE8
 12083                           indf2	equ	0xFDF
 12084                           postinc2	equ	0xFDE
 12085                           fsr2h	equ	0xFDA
 12086                           fsr2l	equ	0xFD9
 12087                           status	equ	0xFD8
 12088                           
 12089 ;; *************** function ___fltol *****************
 12090 ;; Defined at:
 12091 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 12092 ;; Parameters:    Size  Location     Type
 12093 ;;  f1              4   88[BANK0 ] unsigned long 
 12094 ;; Auto vars:     Size  Location     Type
 12095 ;;  exp1            1   97[BANK0 ] unsigned char 
 12096 ;;  sign1           1   96[BANK0 ] unsigned char 
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  4   88[BANK0 ] long 
 12099 ;; Registers used:
 12100 ;;		wreg, status,2, status,0
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12106 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12109 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;Total ram usage:       10 bytes
 12111 ;; Hardware stack levels used:    1
 12112 ;; Hardware stack levels required when called:    3
 12113 ;; This function calls:
 12114 ;;		Nothing
 12115 ;; This function is called by:
 12116 ;;		_main
 12117 ;;		_sprintf
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           	psect	text22
 12122  0156D8                     __ptext22:
 12123                           	opt stack 0
 12124  0156D8                     ___fltol:
 12125                           	opt stack 27
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;incstack = 0
 12129  0156D8  0100               	movlb	0	; () banked
 12130  0156DA  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12131  0156DC  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12132  0156DE  0100               	movlb	0	; () banked
 12133  0156E0  6FC1               	movwf	___fltol@exp1& (0+255),b
 12134  0156E2  0100               	movlb	0	; () banked
 12135  0156E4  51C1               	movf	___fltol@exp1& (0+255),w,b
 12136  0156E6  A4D8               	btfss	status,2,c
 12137  0156E8  D00A               	goto	l8637
 12138                           
 12139                           ; BSR set to: 0
 12140  0156EA  0E00               	movlw	0
 12141  0156EC  0100               	movlb	0	; () banked
 12142  0156EE  6FB8               	movwf	?___fltol& (0+255),b
 12143  0156F0  0E00               	movlw	0
 12144  0156F2  6FB9               	movwf	(?___fltol+1)& (0+255),b
 12145  0156F4  0E00               	movlw	0
 12146  0156F6  6FBA               	movwf	(?___fltol+2)& (0+255),b
 12147  0156F8  0E00               	movlw	0
 12148  0156FA  6FBB               	movwf	(?___fltol+3)& (0+255),b
 12149                           
 12150                           ; BSR set to: 0
 12151  0156FC  0012               	return	
 12152  0156FE                     l8637:
 12153                           
 12154                           ; BSR set to: 0
 12155  0156FE  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 12156  015702  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 12157  015706  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 12158  01570A  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 12159  01570E  0E20               	movlw	32
 12160  015710  D006               	goto	u11570
 12161  015712                     u11575:
 12162  015712  0100               	movlb	0	; () banked
 12163  015714  90D8               	bcf	status,0,c
 12164  015716  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 12165  015718  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 12166  01571A  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 12167  01571C  33BC               	rrcf	??___fltol& (0+255),f,b
 12168  01571E                     u11570:
 12169  01571E  2EE8               	decfsz	wreg,f,c
 12170  015720  D7F8               	goto	u11575
 12171  015722  0100               	movlb	0	; () banked
 12172  015724  51BC               	movf	??___fltol& (0+255),w,b
 12173  015726  0100               	movlb	0	; () banked
 12174  015728  6FC0               	movwf	___fltol@sign1& (0+255),b
 12175                           
 12176                           ; BSR set to: 0
 12177  01572A  0100               	movlb	0	; () banked
 12178  01572C  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 12179                           
 12180                           ; BSR set to: 0
 12181  01572E  0EFF               	movlw	255
 12182  015730  0100               	movlb	0	; () banked
 12183  015732  17B8               	andwf	___fltol@f1& (0+255),f,b
 12184  015734  0EFF               	movlw	255
 12185  015736  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 12186  015738  0EFF               	movlw	255
 12187  01573A  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 12188  01573C  0E00               	movlw	0
 12189  01573E  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 12190                           
 12191                           ; BSR set to: 0
 12192  015740  0E96               	movlw	150
 12193  015742  0100               	movlb	0	; () banked
 12194  015744  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 12195                           
 12196                           ; BSR set to: 0
 12197  015746  0100               	movlb	0	; () banked
 12198  015748  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 12199  01574A  D01A               	goto	l8657
 12200                           
 12201                           ; BSR set to: 0
 12202  01574C  0100               	movlb	0	; () banked
 12203  01574E  51C1               	movf	___fltol@exp1& (0+255),w,b
 12204  015750  0A80               	xorlw	128
 12205  015752  0F97               	addlw	151
 12206  015754  B0D8               	btfsc	status,0,c
 12207  015756  D00A               	goto	l8653
 12208                           
 12209                           ; BSR set to: 0
 12210  015758  0E00               	movlw	0
 12211  01575A  0100               	movlb	0	; () banked
 12212  01575C  6FB8               	movwf	?___fltol& (0+255),b
 12213  01575E  0E00               	movlw	0
 12214  015760  6FB9               	movwf	(?___fltol+1)& (0+255),b
 12215  015762  0E00               	movlw	0
 12216  015764  6FBA               	movwf	(?___fltol+2)& (0+255),b
 12217  015766  0E00               	movlw	0
 12218  015768  6FBB               	movwf	(?___fltol+3)& (0+255),b
 12219                           
 12220                           ; BSR set to: 0
 12221  01576A  0012               	return	
 12222  01576C                     l8653:
 12223                           
 12224                           ; BSR set to: 0
 12225  01576C  0100               	movlb	0	; () banked
 12226  01576E  90D8               	bcf	status,0,c
 12227  015770  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12228  015772  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12229  015774  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12230  015776  33B8               	rrcf	___fltol@f1& (0+255),f,b
 12231                           
 12232                           ; BSR set to: 0
 12233  015778  0100               	movlb	0	; () banked
 12234  01577A  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 12235  01577C  D7F7               	goto	l8653
 12236                           
 12237                           ; BSR set to: 0
 12238  01577E  D01B               	goto	l8667
 12239  015780                     l8657:
 12240                           
 12241                           ; BSR set to: 0
 12242  015780  0E1F               	movlw	31
 12243  015782  0100               	movlb	0	; () banked
 12244  015784  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 12245  015786  D012               	goto	l8665
 12246                           
 12247                           ; BSR set to: 0
 12248  015788  0E00               	movlw	0
 12249  01578A  0100               	movlb	0	; () banked
 12250  01578C  6FB8               	movwf	?___fltol& (0+255),b
 12251  01578E  0E00               	movlw	0
 12252  015790  6FB9               	movwf	(?___fltol+1)& (0+255),b
 12253  015792  0E00               	movlw	0
 12254  015794  6FBA               	movwf	(?___fltol+2)& (0+255),b
 12255  015796  0E00               	movlw	0
 12256  015798  6FBB               	movwf	(?___fltol+3)& (0+255),b
 12257                           
 12258                           ; BSR set to: 0
 12259  01579A  0012               	return	
 12260  01579C                     l8663:
 12261                           
 12262                           ; BSR set to: 0
 12263  01579C  0100               	movlb	0	; () banked
 12264  01579E  90D8               	bcf	status,0,c
 12265  0157A0  37B8               	rlcf	___fltol@f1& (0+255),f,b
 12266  0157A2  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12267  0157A4  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12268  0157A6  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12269  0157A8  0100               	movlb	0	; () banked
 12270  0157AA  07C1               	decf	___fltol@exp1& (0+255),f,b
 12271  0157AC                     l8665:
 12272                           
 12273                           ; BSR set to: 0
 12274  0157AC  0100               	movlb	0	; () banked
 12275  0157AE  51C1               	movf	___fltol@exp1& (0+255),w,b
 12276  0157B0  0100               	movlb	0	; () banked
 12277  0157B2  A4D8               	btfss	status,2,c
 12278  0157B4  D7F3               	goto	l8663
 12279  0157B6                     l8667:
 12280                           
 12281                           ; BSR set to: 0
 12282  0157B6  0100               	movlb	0	; () banked
 12283  0157B8  51C0               	movf	___fltol@sign1& (0+255),w,b
 12284  0157BA  0100               	movlb	0	; () banked
 12285  0157BC  B4D8               	btfsc	status,2,c
 12286  0157BE  D009               	goto	l8671
 12287                           
 12288                           ; BSR set to: 0
 12289  0157C0  0100               	movlb	0	; () banked
 12290  0157C2  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 12291  0157C4  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 12292  0157C6  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 12293  0157C8  6DB8               	negf	___fltol@f1& (0+255),b
 12294  0157CA  0E00               	movlw	0
 12295  0157CC  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12296  0157CE  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12297  0157D0  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12298  0157D2                     l8671:
 12299                           
 12300                           ; BSR set to: 0
 12301  0157D2  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 12302  0157D6  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 12303  0157DA  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 12304  0157DE  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 12305  0157E2  0012               	return	
 12306  0157E4                     __end_of___fltol:
 12307                           	opt stack 0
 12308                           tblptru	equ	0xFF8
 12309                           tblptrh	equ	0xFF7
 12310                           tblptrl	equ	0xFF6
 12311                           tablat	equ	0xFF5
 12312                           prodh	equ	0xFF4
 12313                           prodl	equ	0xFF3
 12314                           intcon	equ	0xFF2
 12315                           postinc0	equ	0xFEE
 12316                           wreg	equ	0xFE8
 12317                           indf2	equ	0xFDF
 12318                           postinc2	equ	0xFDE
 12319                           fsr2h	equ	0xFDA
 12320                           fsr2l	equ	0xFD9
 12321                           status	equ	0xFD8
 12322                           
 12323 ;; *************** function ___flsub *****************
 12324 ;; Defined at:
 12325 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;  b               4   88[BANK0 ] long 
 12328 ;;  a               4   92[BANK0 ] long 
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;		None
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  4   88[BANK0 ] long 
 12333 ;; Registers used:
 12334 ;;		wreg, status,2, status,0, cstack
 12335 ;; Tracked objects:
 12336 ;;		On entry : 0/0
 12337 ;;		On exit  : 0/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12340 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;Total ram usage:        8 bytes
 12345 ;; Hardware stack levels used:    1
 12346 ;; Hardware stack levels required when called:    4
 12347 ;; This function calls:
 12348 ;;		___fladd
 12349 ;; This function is called by:
 12350 ;;		_sprintf
 12351 ;; This function uses a non-reentrant model
 12352 ;;
 12353                           
 12354                           	psect	text23
 12355  016218                     __ptext23:
 12356                           	opt stack 0
 12357  016218                     ___flsub:
 12358                           	opt stack 24
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;incstack = 0
 12362  016218  0E00               	movlw	0
 12363  01621A  0100               	movlb	0	; () banked
 12364  01621C  1BBC               	xorwf	___flsub@a& (0+255),f,b
 12365  01621E  0E00               	movlw	0
 12366  016220  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
 12367  016222  0E00               	movlw	0
 12368  016224  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
 12369  016226  0E80               	movlw	128
 12370  016228  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
 12371                           
 12372                           ; BSR set to: 0
 12373  01622A  C0B8  F0A4         	movff	___flsub@b,___fladd@b
 12374  01622E  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
 12375  016232  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
 12376  016236  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
 12377  01623A  C0BC  F0A8         	movff	___flsub@a,___fladd@a
 12378  01623E  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
 12379  016242  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
 12380  016246  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
 12381  01624A  ECCD  F099         	call	___fladd	;wreg free
 12382  01624E  C0A4  F0B8         	movff	?___fladd,?___flsub
 12383  016252  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
 12384  016256  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
 12385  01625A  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
 12386  01625E  0012               	return	
 12387  016260                     __end_of___flsub:
 12388                           	opt stack 0
 12389                           tblptru	equ	0xFF8
 12390                           tblptrh	equ	0xFF7
 12391                           tblptrl	equ	0xFF6
 12392                           tablat	equ	0xFF5
 12393                           prodh	equ	0xFF4
 12394                           prodl	equ	0xFF3
 12395                           intcon	equ	0xFF2
 12396                           postinc0	equ	0xFEE
 12397                           wreg	equ	0xFE8
 12398                           indf2	equ	0xFDF
 12399                           postinc2	equ	0xFDE
 12400                           fsr2h	equ	0xFDA
 12401                           fsr2l	equ	0xFD9
 12402                           status	equ	0xFD8
 12403                           
 12404 ;; *************** function ___fladd *****************
 12405 ;; Defined at:
 12406 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;  b               4   68[BANK0 ] long 
 12409 ;;  a               4   72[BANK0 ] long 
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;  grs             1   87[BANK0 ] unsigned char 
 12412 ;;  bexp            1   86[BANK0 ] unsigned char 
 12413 ;;  aexp            1   85[BANK0 ] unsigned char 
 12414 ;;  signs           1   84[BANK0 ] unsigned char 
 12415 ;; Return value:  Size  Location     Type
 12416 ;;                  4   68[BANK0 ] unsigned char 
 12417 ;; Registers used:
 12418 ;;		wreg, status,2, status,0
 12419 ;; Tracked objects:
 12420 ;;		On entry : 0/0
 12421 ;;		On exit  : 0/0
 12422 ;;		Unchanged: 0/0
 12423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12424 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;Total ram usage:       20 bytes
 12429 ;; Hardware stack levels used:    1
 12430 ;; Hardware stack levels required when called:    3
 12431 ;; This function calls:
 12432 ;;		Nothing
 12433 ;; This function is called by:
 12434 ;;		_main
 12435 ;;		_sprintf
 12436 ;;		___flsub
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text24
 12441  01339A                     __ptext24:
 12442                           	opt stack 0
 12443  01339A                     ___fladd:
 12444                           	opt stack 27
 12445                           
 12446                           ;incstack = 0
 12447  01339A  0100               	movlb	0	; () banked
 12448  01339C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12449  01339E  0B80               	andlw	128
 12450  0133A0  0100               	movlb	0	; () banked
 12451  0133A2  6FB4               	movwf	___fladd@signs& (0+255),b
 12452  0133A4  0100               	movlb	0	; () banked
 12453  0133A6  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12454  0133A8  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 12455  0133AA  0100               	movlb	0	; () banked
 12456  0133AC  6FB6               	movwf	___fladd@bexp& (0+255),b
 12457                           
 12458                           ; BSR set to: 0
 12459  0133AE  0100               	movlb	0	; () banked
 12460  0133B0  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 12461  0133B2  D002               	goto	l7969
 12462                           
 12463                           ; BSR set to: 0
 12464  0133B4  0100               	movlb	0	; () banked
 12465  0133B6  81B6               	bsf	___fladd@bexp& (0+255),0,b
 12466  0133B8                     l7969:
 12467                           
 12468                           ; BSR set to: 0
 12469  0133B8  0100               	movlb	0	; () banked
 12470  0133BA  51B6               	movf	___fladd@bexp& (0+255),w,b
 12471  0133BC  0100               	movlb	0	; () banked
 12472  0133BE  B4D8               	btfsc	status,2,c
 12473  0133C0  D012               	goto	l7979
 12474                           
 12475                           ; BSR set to: 0
 12476  0133C2  0100               	movlb	0	; () banked
 12477  0133C4  29B6               	incf	___fladd@bexp& (0+255),w,b
 12478  0133C6  A4D8               	btfss	status,2,c
 12479  0133C8  D009               	goto	l7975
 12480                           
 12481                           ; BSR set to: 0
 12482  0133CA  0E00               	movlw	0
 12483  0133CC  0100               	movlb	0	; () banked
 12484  0133CE  6FA4               	movwf	___fladd@b& (0+255),b
 12485  0133D0  0E00               	movlw	0
 12486  0133D2  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12487  0133D4  0E00               	movlw	0
 12488  0133D6  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12489  0133D8  0E00               	movlw	0
 12490  0133DA  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12491  0133DC                     l7975:
 12492                           
 12493                           ; BSR set to: 0
 12494  0133DC  0100               	movlb	0	; () banked
 12495  0133DE  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 12496                           
 12497                           ; BSR set to: 0
 12498  0133E0  0E00               	movlw	0
 12499  0133E2  0100               	movlb	0	; () banked
 12500  0133E4  D008               	goto	L10
 12501  0133E6                     l7979:
 12502                           
 12503                           ; BSR set to: 0
 12504  0133E6  0E00               	movlw	0
 12505  0133E8  0100               	movlb	0	; () banked
 12506  0133EA  6FA4               	movwf	___fladd@b& (0+255),b
 12507  0133EC  0E00               	movlw	0
 12508  0133EE  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12509  0133F0  0E00               	movlw	0
 12510  0133F2  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12511  0133F4  0E00               	movlw	0
 12512  0133F6                     L10:
 12513  0133F6  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12514                           
 12515                           ; BSR set to: 0
 12516                           
 12517                           ; BSR set to: 0
 12518  0133F8  0100               	movlb	0	; () banked
 12519  0133FA  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12520  0133FC  0B80               	andlw	128
 12521  0133FE  0100               	movlb	0	; () banked
 12522  013400  6FB5               	movwf	___fladd@aexp& (0+255),b
 12523                           
 12524                           ; BSR set to: 0
 12525  013402  0100               	movlb	0	; () banked
 12526  013404  51B4               	movf	___fladd@signs& (0+255),w,b
 12527  013406  0100               	movlb	0	; () banked
 12528  013408  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 12529  01340A  B4D8               	btfsc	status,2,c
 12530  01340C  D002               	goto	l7987
 12531                           
 12532                           ; BSR set to: 0
 12533  01340E  0100               	movlb	0	; () banked
 12534  013410  8DB4               	bsf	___fladd@signs& (0+255),6,b
 12535  013412                     l7987:
 12536                           
 12537                           ; BSR set to: 0
 12538  013412  0100               	movlb	0	; () banked
 12539  013414  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12540  013416  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 12541  013418  0100               	movlb	0	; () banked
 12542  01341A  6FB5               	movwf	___fladd@aexp& (0+255),b
 12543                           
 12544                           ; BSR set to: 0
 12545  01341C  0100               	movlb	0	; () banked
 12546  01341E  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 12547  013420  D002               	goto	l7993
 12548                           
 12549                           ; BSR set to: 0
 12550  013422  0100               	movlb	0	; () banked
 12551  013424  81B5               	bsf	___fladd@aexp& (0+255),0,b
 12552  013426                     l7993:
 12553                           
 12554                           ; BSR set to: 0
 12555  013426  0100               	movlb	0	; () banked
 12556  013428  51B5               	movf	___fladd@aexp& (0+255),w,b
 12557  01342A  0100               	movlb	0	; () banked
 12558  01342C  B4D8               	btfsc	status,2,c
 12559  01342E  D012               	goto	l8003
 12560                           
 12561                           ; BSR set to: 0
 12562  013430  0100               	movlb	0	; () banked
 12563  013432  29B5               	incf	___fladd@aexp& (0+255),w,b
 12564  013434  A4D8               	btfss	status,2,c
 12565  013436  D009               	goto	l7999
 12566                           
 12567                           ; BSR set to: 0
 12568  013438  0E00               	movlw	0
 12569  01343A  0100               	movlb	0	; () banked
 12570  01343C  6FA8               	movwf	___fladd@a& (0+255),b
 12571  01343E  0E00               	movlw	0
 12572  013440  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 12573  013442  0E00               	movlw	0
 12574  013444  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 12575  013446  0E00               	movlw	0
 12576  013448  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 12577  01344A                     l7999:
 12578                           
 12579                           ; BSR set to: 0
 12580  01344A  0100               	movlb	0	; () banked
 12581  01344C  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 12582                           
 12583                           ; BSR set to: 0
 12584  01344E  0E00               	movlw	0
 12585  013450  0100               	movlb	0	; () banked
 12586  013452  D008               	goto	L11
 12587  013454                     l8003:
 12588                           
 12589                           ; BSR set to: 0
 12590  013454  0E00               	movlw	0
 12591  013456  0100               	movlb	0	; () banked
 12592  013458  6FA8               	movwf	___fladd@a& (0+255),b
 12593  01345A  0E00               	movlw	0
 12594  01345C  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 12595  01345E  0E00               	movlw	0
 12596  013460  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 12597  013462  0E00               	movlw	0
 12598  013464                     L11:
 12599  013464  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 12600                           
 12601                           ; BSR set to: 0
 12602                           
 12603                           ; BSR set to: 0
 12604  013466  0100               	movlb	0	; () banked
 12605  013468  51B6               	movf	___fladd@bexp& (0+255),w,b
 12606  01346A  0100               	movlb	0	; () banked
 12607  01346C  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 12608  01346E  B0D8               	btfsc	status,0,c
 12609  013470  D024               	goto	l8041
 12610                           
 12611                           ; BSR set to: 0
 12612  013472  0100               	movlb	0	; () banked
 12613  013474  ADB4               	btfss	___fladd@signs& (0+255),6,b
 12614  013476  D003               	goto	l8011
 12615                           
 12616                           ; BSR set to: 0
 12617  013478  0E80               	movlw	128
 12618  01347A  0100               	movlb	0	; () banked
 12619  01347C  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 12620  01347E                     l8011:
 12621                           
 12622                           ; BSR set to: 0
 12623  01347E  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 12624                           
 12625                           ; BSR set to: 0
 12626  013482  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 12627                           
 12628                           ; BSR set to: 0
 12629  013486  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 12630                           
 12631                           ; BSR set to: 0
 12632  01348A  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 12633                           
 12634                           ; BSR set to: 0
 12635  01348E  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 12636                           
 12637                           ; BSR set to: 0
 12638  013492  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 12639                           
 12640                           ; BSR set to: 0
 12641  013496  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 12642                           
 12643                           ; BSR set to: 0
 12644  01349A  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 12645                           
 12646                           ; BSR set to: 0
 12647  01349E  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 12648                           
 12649                           ; BSR set to: 0
 12650  0134A2  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 12651                           
 12652                           ; BSR set to: 0
 12653  0134A6  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 12654                           
 12655                           ; BSR set to: 0
 12656  0134AA  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 12657                           
 12658                           ; BSR set to: 0
 12659  0134AE  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 12660                           
 12661                           ; BSR set to: 0
 12662  0134B2  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 12663                           
 12664                           ; BSR set to: 0
 12665  0134B6  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 12666  0134BA                     l8041:
 12667                           
 12668                           ; BSR set to: 0
 12669  0134BA  0E00               	movlw	0
 12670  0134BC  0100               	movlb	0	; () banked
 12671  0134BE  6FB7               	movwf	___fladd@grs& (0+255),b
 12672                           
 12673                           ; BSR set to: 0
 12674  0134C0  0100               	movlb	0	; () banked
 12675  0134C2  51B6               	movf	___fladd@bexp& (0+255),w,b
 12676  0134C4  0100               	movlb	0	; () banked
 12677  0134C6  6FAC               	movwf	??___fladd& (0+255),b
 12678  0134C8  6BAD               	clrf	(??___fladd+1)& (0+255),b
 12679  0134CA  0100               	movlb	0	; () banked
 12680  0134CC  1FAC               	comf	??___fladd& (0+255),f,b
 12681  0134CE  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 12682  0134D0  4BAC               	infsnz	??___fladd& (0+255),f,b
 12683  0134D2  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 12684  0134D4  0100               	movlb	0	; () banked
 12685  0134D6  51B5               	movf	___fladd@aexp& (0+255),w,b
 12686  0134D8  0100               	movlb	0	; () banked
 12687  0134DA  6FAE               	movwf	(??___fladd+2)& (0+255),b
 12688  0134DC  6BAF               	clrf	(??___fladd+3)& (0+255),b
 12689  0134DE  0100               	movlb	0	; () banked
 12690  0134E0  51AC               	movf	??___fladd& (0+255),w,b
 12691  0134E2  0100               	movlb	0	; () banked
 12692  0134E4  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 12693  0134E6  0100               	movlb	0	; () banked
 12694  0134E8  51AD               	movf	(??___fladd+1)& (0+255),w,b
 12695  0134EA  0100               	movlb	0	; () banked
 12696  0134EC  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 12697  0134EE  0100               	movlb	0	; () banked
 12698  0134F0  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 12699  0134F2  D03D               	goto	l1556
 12700  0134F4  0100               	movlb	0	; () banked
 12701  0134F6  51AF               	movf	(??___fladd+3)& (0+255),w,b
 12702  0134F8  E105               	bnz	u10620
 12703  0134FA  0E1A               	movlw	26
 12704  0134FC  0100               	movlb	0	; () banked
 12705  0134FE  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 12706  013500  A0D8               	btfss	status,0,c
 12707  013502  D035               	goto	l1556
 12708  013504                     u10620:
 12709                           
 12710                           ; BSR set to: 0
 12711  013504  0100               	movlb	0	; () banked
 12712  013506  51A4               	movf	___fladd@b& (0+255),w,b
 12713  013508  0100               	movlb	0	; () banked
 12714  01350A  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12715  01350C  0100               	movlb	0	; () banked
 12716  01350E  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12717  013510  0100               	movlb	0	; () banked
 12718  013512  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12719  013514  B4D8               	btfsc	status,2,c
 12720  013516  D002               	goto	u10630
 12721  013518  0E01               	movlw	1
 12722  01351A  D001               	goto	u10640
 12723  01351C                     u10630:
 12724  01351C  0E00               	movlw	0
 12725  01351E                     u10640:
 12726  01351E  0100               	movlb	0	; () banked
 12727  013520  6FB7               	movwf	___fladd@grs& (0+255),b
 12728                           
 12729                           ; BSR set to: 0
 12730  013522  0E00               	movlw	0
 12731  013524  0100               	movlb	0	; () banked
 12732  013526  6FA4               	movwf	___fladd@b& (0+255),b
 12733  013528  0E00               	movlw	0
 12734  01352A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12735  01352C  0E00               	movlw	0
 12736  01352E  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12737  013530  0E00               	movlw	0
 12738  013532  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12739                           
 12740                           ; BSR set to: 0
 12741  013534  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 12742  013538  D020               	goto	l1555
 12743  01353A                     l1557:
 12744                           
 12745                           ; BSR set to: 0
 12746  01353A  0100               	movlb	0	; () banked
 12747  01353C  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12748  01353E  D007               	goto	l8053
 12749                           
 12750                           ; BSR set to: 0
 12751  013540  0100               	movlb	0	; () banked
 12752  013542  90D8               	bcf	status,0,c
 12753  013544  31B7               	rrcf	___fladd@grs& (0+255),w,b
 12754  013546  0901               	iorlw	1
 12755  013548  0100               	movlb	0	; () banked
 12756  01354A  6FB7               	movwf	___fladd@grs& (0+255),b
 12757  01354C  D003               	goto	l8055
 12758  01354E                     l8053:
 12759                           
 12760                           ; BSR set to: 0
 12761  01354E  0100               	movlb	0	; () banked
 12762  013550  90D8               	bcf	status,0,c
 12763  013552  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12764  013554                     l8055:
 12765                           
 12766                           ; BSR set to: 0
 12767  013554  0100               	movlb	0	; () banked
 12768  013556  A1A4               	btfss	___fladd@b& (0+255),0,b
 12769  013558  D002               	goto	l8059
 12770                           
 12771                           ; BSR set to: 0
 12772  01355A  0100               	movlb	0	; () banked
 12773  01355C  8FB7               	bsf	___fladd@grs& (0+255),7,b
 12774  01355E                     l8059:
 12775                           
 12776                           ; BSR set to: 0
 12777  01355E  0100               	movlb	0	; () banked
 12778  013560  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12779  013562  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12780  013564  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12781  013566  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12782  013568  33A4               	rrcf	___fladd@b& (0+255),f,b
 12783                           
 12784                           ; BSR set to: 0
 12785  01356A  0100               	movlb	0	; () banked
 12786  01356C  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12787  01356E                     l1556:
 12788                           
 12789                           ; BSR set to: 0
 12790  01356E  0100               	movlb	0	; () banked
 12791  013570  51B5               	movf	___fladd@aexp& (0+255),w,b
 12792  013572  0100               	movlb	0	; () banked
 12793  013574  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 12794  013576  A0D8               	btfss	status,0,c
 12795  013578  D7E0               	goto	l1557
 12796  01357A                     l1555:
 12797                           
 12798                           ; BSR set to: 0
 12799  01357A  0100               	movlb	0	; () banked
 12800  01357C  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 12801  01357E  D03F               	goto	l8087
 12802                           
 12803                           ; BSR set to: 0
 12804  013580  0100               	movlb	0	; () banked
 12805  013582  51B6               	movf	___fladd@bexp& (0+255),w,b
 12806  013584  0100               	movlb	0	; () banked
 12807  013586  A4D8               	btfss	status,2,c
 12808  013588  D00A               	goto	l8069
 12809                           
 12810                           ; BSR set to: 0
 12811  01358A  0E00               	movlw	0
 12812  01358C  0100               	movlb	0	; () banked
 12813  01358E  6FA4               	movwf	?___fladd& (0+255),b
 12814  013590  0E00               	movlw	0
 12815  013592  6FA5               	movwf	(?___fladd+1)& (0+255),b
 12816  013594  0E00               	movlw	0
 12817  013596  6FA6               	movwf	(?___fladd+2)& (0+255),b
 12818  013598  0E00               	movlw	0
 12819  01359A  6FA7               	movwf	(?___fladd+3)& (0+255),b
 12820                           
 12821                           ; BSR set to: 0
 12822  01359C  0012               	return	
 12823  01359E                     l8069:
 12824                           
 12825                           ; BSR set to: 0
 12826  01359E  0100               	movlb	0	; () banked
 12827  0135A0  51A8               	movf	___fladd@a& (0+255),w,b
 12828  0135A2  0100               	movlb	0	; () banked
 12829  0135A4  27A4               	addwf	___fladd@b& (0+255),f,b
 12830  0135A6  0100               	movlb	0	; () banked
 12831  0135A8  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12832  0135AA  0100               	movlb	0	; () banked
 12833  0135AC  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12834  0135AE  0100               	movlb	0	; () banked
 12835  0135B0  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12836  0135B2  0100               	movlb	0	; () banked
 12837  0135B4  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12838  0135B6  0100               	movlb	0	; () banked
 12839  0135B8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12840  0135BA  0100               	movlb	0	; () banked
 12841  0135BC  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12842                           
 12843                           ; BSR set to: 0
 12844  0135BE  0100               	movlb	0	; () banked
 12845  0135C0  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 12846  0135C2  D0CC               	goto	l8123
 12847                           
 12848                           ; BSR set to: 0
 12849  0135C4  0100               	movlb	0	; () banked
 12850  0135C6  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12851  0135C8  D009               	goto	l8077
 12852                           
 12853                           ; BSR set to: 0
 12854  0135CA  0100               	movlb	0	; () banked
 12855  0135CC  90D8               	bcf	status,0,c
 12856  0135CE  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12857  0135D0  0100               	movlb	0	; () banked
 12858  0135D2  51B7               	movf	___fladd@grs& (0+255),w,b
 12859  0135D4  0901               	iorlw	1
 12860  0135D6  0100               	movlb	0	; () banked
 12861  0135D8  6FB7               	movwf	___fladd@grs& (0+255),b
 12862  0135DA  D003               	goto	l8079
 12863  0135DC                     l8077:
 12864                           
 12865                           ; BSR set to: 0
 12866  0135DC  0100               	movlb	0	; () banked
 12867  0135DE  90D8               	bcf	status,0,c
 12868  0135E0  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12869  0135E2                     l8079:
 12870                           
 12871                           ; BSR set to: 0
 12872  0135E2  0100               	movlb	0	; () banked
 12873  0135E4  A1A4               	btfss	___fladd@b& (0+255),0,b
 12874  0135E6  D002               	goto	l8083
 12875                           
 12876                           ; BSR set to: 0
 12877  0135E8  0100               	movlb	0	; () banked
 12878  0135EA  8FB7               	bsf	___fladd@grs& (0+255),7,b
 12879  0135EC                     l8083:
 12880                           
 12881                           ; BSR set to: 0
 12882  0135EC  0100               	movlb	0	; () banked
 12883  0135EE  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12884  0135F0  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12885  0135F2  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12886  0135F4  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12887  0135F6  33A4               	rrcf	___fladd@b& (0+255),f,b
 12888                           
 12889                           ; BSR set to: 0
 12890  0135F8  0100               	movlb	0	; () banked
 12891  0135FA  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12892                           
 12893                           ; BSR set to: 0
 12894  0135FC  D0AF               	goto	l8123
 12895  0135FE                     l8087:
 12896                           
 12897                           ; BSR set to: 0
 12898  0135FE  0100               	movlb	0	; () banked
 12899  013600  51A8               	movf	___fladd@a& (0+255),w,b
 12900  013602  0100               	movlb	0	; () banked
 12901  013604  5DA4               	subwf	___fladd@b& (0+255),w,b
 12902  013606  0100               	movlb	0	; () banked
 12903  013608  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12904  01360A  0100               	movlb	0	; () banked
 12905  01360C  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 12906  01360E  0100               	movlb	0	; () banked
 12907  013610  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12908  013612  0100               	movlb	0	; () banked
 12909  013614  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 12910  013616  0100               	movlb	0	; () banked
 12911  013618  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12912  01361A  0A80               	xorlw	128
 12913  01361C  0100               	movlb	0	; () banked
 12914  01361E  6FAC               	movwf	??___fladd& (0+255),b
 12915  013620  0100               	movlb	0	; () banked
 12916  013622  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12917  013624  0A80               	xorlw	128
 12918  013626  0100               	movlb	0	; () banked
 12919  013628  59AC               	subwfb	??___fladd& (0+255),w,b
 12920  01362A  B0D8               	btfsc	status,0,c
 12921  01362C  D050               	goto	l8097
 12922                           
 12923                           ; BSR set to: 0
 12924  01362E  C0A4  F0AC         	movff	___fladd@b,??___fladd
 12925  013632  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 12926  013636  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 12927  01363A  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 12928  01363E  0100               	movlb	0	; () banked
 12929  013640  1FAC               	comf	??___fladd& (0+255),f,b
 12930  013642  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 12931  013644  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 12932  013646  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 12933  013648  2BAC               	incf	??___fladd& (0+255),f,b
 12934  01364A  0E00               	movlw	0
 12935  01364C  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 12936  01364E  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 12937  013650  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 12938  013652  0100               	movlb	0	; () banked
 12939  013654  51A8               	movf	___fladd@a& (0+255),w,b
 12940  013656  0100               	movlb	0	; () banked
 12941  013658  25AC               	addwf	??___fladd& (0+255),w,b
 12942  01365A  0100               	movlb	0	; () banked
 12943  01365C  6FB0               	movwf	(??___fladd+4)& (0+255),b
 12944  01365E  0100               	movlb	0	; () banked
 12945  013660  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12946  013662  0100               	movlb	0	; () banked
 12947  013664  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 12948  013666  0100               	movlb	0	; () banked
 12949  013668  6FB1               	movwf	(??___fladd+5)& (0+255),b
 12950  01366A  0100               	movlb	0	; () banked
 12951  01366C  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12952  01366E  0100               	movlb	0	; () banked
 12953  013670  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 12954  013672  0100               	movlb	0	; () banked
 12955  013674  6FB2               	movwf	(??___fladd+6)& (0+255),b
 12956  013676  0100               	movlb	0	; () banked
 12957  013678  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12958  01367A  0100               	movlb	0	; () banked
 12959  01367C  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 12960  01367E  0100               	movlb	0	; () banked
 12961  013680  6FB3               	movwf	(??___fladd+7)& (0+255),b
 12962  013682  0EFF               	movlw	255
 12963  013684  0100               	movlb	0	; () banked
 12964  013686  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 12965  013688  0100               	movlb	0	; () banked
 12966  01368A  6FA4               	movwf	___fladd@b& (0+255),b
 12967  01368C  0EFF               	movlw	255
 12968  01368E  0100               	movlb	0	; () banked
 12969  013690  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 12970  013692  0100               	movlb	0	; () banked
 12971  013694  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12972  013696  0EFF               	movlw	255
 12973  013698  0100               	movlb	0	; () banked
 12974  01369A  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 12975  01369C  0100               	movlb	0	; () banked
 12976  01369E  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12977  0136A0  0EFF               	movlw	255
 12978  0136A2  0100               	movlb	0	; () banked
 12979  0136A4  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 12980  0136A6  0100               	movlb	0	; () banked
 12981  0136A8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12982  0136AA  0E80               	movlw	128
 12983  0136AC  0100               	movlb	0	; () banked
 12984  0136AE  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 12985                           
 12986                           ; BSR set to: 0
 12987  0136B0  0100               	movlb	0	; () banked
 12988  0136B2  6DB7               	negf	___fladd@grs& (0+255),b
 12989                           
 12990                           ; BSR set to: 0
 12991  0136B4  0100               	movlb	0	; () banked
 12992  0136B6  51B7               	movf	___fladd@grs& (0+255),w,b
 12993  0136B8  0100               	movlb	0	; () banked
 12994  0136BA  A4D8               	btfss	status,2,c
 12995  0136BC  D018               	goto	l1572
 12996                           
 12997                           ; BSR set to: 0
 12998  0136BE  0E01               	movlw	1
 12999  0136C0  0100               	movlb	0	; () banked
 13000  0136C2  27A4               	addwf	___fladd@b& (0+255),f,b
 13001  0136C4  0E00               	movlw	0
 13002  0136C6  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 13003  0136C8  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 13004  0136CA  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 13005                           
 13006                           ; BSR set to: 0
 13007  0136CC  D010               	goto	l1572
 13008  0136CE                     l8097:
 13009                           
 13010                           ; BSR set to: 0
 13011  0136CE  0100               	movlb	0	; () banked
 13012  0136D0  51A8               	movf	___fladd@a& (0+255),w,b
 13013  0136D2  0100               	movlb	0	; () banked
 13014  0136D4  5FA4               	subwf	___fladd@b& (0+255),f,b
 13015  0136D6  0100               	movlb	0	; () banked
 13016  0136D8  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 13017  0136DA  0100               	movlb	0	; () banked
 13018  0136DC  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 13019  0136DE  0100               	movlb	0	; () banked
 13020  0136E0  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 13021  0136E2  0100               	movlb	0	; () banked
 13022  0136E4  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 13023  0136E6  0100               	movlb	0	; () banked
 13024  0136E8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 13025  0136EA  0100               	movlb	0	; () banked
 13026  0136EC  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 13027  0136EE                     l1572:
 13028                           
 13029                           ; BSR set to: 0
 13030  0136EE  0100               	movlb	0	; () banked
 13031  0136F0  51A4               	movf	___fladd@b& (0+255),w,b
 13032  0136F2  0100               	movlb	0	; () banked
 13033  0136F4  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 13034  0136F6  0100               	movlb	0	; () banked
 13035  0136F8  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 13036  0136FA  0100               	movlb	0	; () banked
 13037  0136FC  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 13038  0136FE  A4D8               	btfss	status,2,c
 13039  013700  D02A               	goto	l8121
 13040                           
 13041                           ; BSR set to: 0
 13042  013702  0100               	movlb	0	; () banked
 13043  013704  51B7               	movf	___fladd@grs& (0+255),w,b
 13044  013706  0100               	movlb	0	; () banked
 13045  013708  A4D8               	btfss	status,2,c
 13046  01370A  D025               	goto	l8121
 13047                           
 13048                           ; BSR set to: 0
 13049  01370C  0E00               	movlw	0
 13050  01370E  0100               	movlb	0	; () banked
 13051  013710  6FA4               	movwf	?___fladd& (0+255),b
 13052  013712  0E00               	movlw	0
 13053  013714  6FA5               	movwf	(?___fladd+1)& (0+255),b
 13054  013716  0E00               	movlw	0
 13055  013718  6FA6               	movwf	(?___fladd+2)& (0+255),b
 13056  01371A  0E00               	movlw	0
 13057  01371C  6FA7               	movwf	(?___fladd+3)& (0+255),b
 13058                           
 13059                           ; BSR set to: 0
 13060  01371E  0012               	return	
 13061  013720                     l8105:
 13062                           
 13063                           ; BSR set to: 0
 13064  013720  0100               	movlb	0	; () banked
 13065  013722  90D8               	bcf	status,0,c
 13066  013724  37A4               	rlcf	___fladd@b& (0+255),f,b
 13067  013726  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 13068  013728  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 13069  01372A  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 13070                           
 13071                           ; BSR set to: 0
 13072  01372C  0100               	movlb	0	; () banked
 13073  01372E  AFB7               	btfss	___fladd@grs& (0+255),7,b
 13074  013730  D002               	goto	l8111
 13075                           
 13076                           ; BSR set to: 0
 13077  013732  0100               	movlb	0	; () banked
 13078  013734  81A4               	bsf	___fladd@b& (0+255),0,b
 13079  013736                     l8111:
 13080                           
 13081                           ; BSR set to: 0
 13082  013736  0100               	movlb	0	; () banked
 13083  013738  A1B7               	btfss	___fladd@grs& (0+255),0,b
 13084  01373A  D003               	goto	l8115
 13085                           
 13086                           ; BSR set to: 0
 13087  01373C  80D8               	bsf	status,0,c
 13088  01373E  0100               	movlb	0	; () banked
 13089  013740  D002               	goto	L12
 13090  013742                     l8115:
 13091                           
 13092                           ; BSR set to: 0
 13093  013742  0100               	movlb	0	; () banked
 13094  013744  90D8               	bcf	status,0,c
 13095  013746                     L12:
 13096  013746  37B7               	rlcf	___fladd@grs& (0+255),f,b
 13097                           
 13098                           ; BSR set to: 0
 13099                           
 13100                           ; BSR set to: 0
 13101  013748  0100               	movlb	0	; () banked
 13102  01374A  51B6               	movf	___fladd@bexp& (0+255),w,b
 13103  01374C  0100               	movlb	0	; () banked
 13104  01374E  B4D8               	btfsc	status,2,c
 13105  013750  D002               	goto	l8121
 13106                           
 13107                           ; BSR set to: 0
 13108  013752  0100               	movlb	0	; () banked
 13109  013754  07B6               	decf	___fladd@bexp& (0+255),f,b
 13110  013756                     l8121:
 13111                           
 13112                           ; BSR set to: 0
 13113  013756  0100               	movlb	0	; () banked
 13114  013758  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 13115  01375A  D7E2               	goto	l8105
 13116  01375C                     l8123:
 13117                           
 13118                           ; BSR set to: 0
 13119  01375C  0E00               	movlw	0
 13120  01375E  0100               	movlb	0	; () banked
 13121  013760  6FB5               	movwf	___fladd@aexp& (0+255),b
 13122                           
 13123                           ; BSR set to: 0
 13124  013762  0100               	movlb	0	; () banked
 13125  013764  AFB7               	btfss	___fladd@grs& (0+255),7,b
 13126  013766  D00D               	goto	l1581
 13127                           
 13128                           ; BSR set to: 0
 13129  013768  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 13130  01376C  0E7F               	movlw	127
 13131  01376E  0100               	movlb	0	; () banked
 13132  013770  17AC               	andwf	??___fladd& (0+255),f,b
 13133  013772  A4D8               	btfss	status,2,c
 13134  013774  D003               	goto	l8131
 13135                           
 13136                           ; BSR set to: 0
 13137                           
 13138                           ; BSR set to: 0
 13139  013776  0100               	movlb	0	; () banked
 13140  013778  A1A4               	btfss	___fladd@b& (0+255),0,b
 13141  01377A  D003               	goto	l1581
 13142  01377C                     l8131:
 13143                           
 13144                           ; BSR set to: 0
 13145  01377C  0E01               	movlw	1
 13146  01377E  0100               	movlb	0	; () banked
 13147  013780  6FB5               	movwf	___fladd@aexp& (0+255),b
 13148  013782                     l1581:
 13149                           
 13150                           ; BSR set to: 0
 13151  013782  0100               	movlb	0	; () banked
 13152  013784  51B5               	movf	___fladd@aexp& (0+255),w,b
 13153  013786  0100               	movlb	0	; () banked
 13154  013788  B4D8               	btfsc	status,2,c
 13155  01378A  D026               	goto	l8141
 13156                           
 13157                           ; BSR set to: 0
 13158  01378C  0E01               	movlw	1
 13159  01378E  0100               	movlb	0	; () banked
 13160  013790  27A4               	addwf	___fladd@b& (0+255),f,b
 13161  013792  0E00               	movlw	0
 13162  013794  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 13163  013796  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 13164  013798  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 13165                           
 13166                           ; BSR set to: 0
 13167  01379A  0100               	movlb	0	; () banked
 13168  01379C  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 13169  01379E  D01C               	goto	l8141
 13170                           
 13171                           ; BSR set to: 0
 13172  0137A0  C0A4  F0AC         	movff	___fladd@b,??___fladd
 13173  0137A4  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 13174  0137A8  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 13175  0137AC  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 13176  0137B0  0100               	movlb	0	; () banked
 13177  0137B2  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 13178  0137B4  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 13179  0137B6  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 13180  0137B8  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 13181  0137BA  33AC               	rrcf	??___fladd& (0+255),f,b
 13182  0137BC  C0AC  F0A4         	movff	??___fladd,___fladd@b
 13183  0137C0  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 13184  0137C4  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 13185  0137C8  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 13186  0137CC  0100               	movlb	0	; () banked
 13187  0137CE  29B6               	incf	___fladd@bexp& (0+255),w,b
 13188  0137D0  B4D8               	btfsc	status,2,c
 13189  0137D2  D002               	goto	l8141
 13190                           
 13191                           ; BSR set to: 0
 13192  0137D4  0100               	movlb	0	; () banked
 13193  0137D6  2BB6               	incf	___fladd@bexp& (0+255),f,b
 13194  0137D8                     l8141:
 13195                           
 13196                           ; BSR set to: 0
 13197  0137D8  0100               	movlb	0	; () banked
 13198  0137DA  29B6               	incf	___fladd@bexp& (0+255),w,b
 13199  0137DC  B4D8               	btfsc	status,2,c
 13200  0137DE  D005               	goto	l8145
 13201                           
 13202                           ; BSR set to: 0
 13203  0137E0  0100               	movlb	0	; () banked
 13204  0137E2  51B6               	movf	___fladd@bexp& (0+255),w,b
 13205  0137E4  0100               	movlb	0	; () banked
 13206  0137E6  A4D8               	btfss	status,2,c
 13207  0137E8  D011               	goto	l8149
 13208  0137EA                     l8145:
 13209                           
 13210                           ; BSR set to: 0
 13211  0137EA  0E00               	movlw	0
 13212  0137EC  0100               	movlb	0	; () banked
 13213  0137EE  6FA4               	movwf	___fladd@b& (0+255),b
 13214  0137F0  0E00               	movlw	0
 13215  0137F2  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 13216  0137F4  0E00               	movlw	0
 13217  0137F6  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 13218  0137F8  0E00               	movlw	0
 13219  0137FA  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 13220  0137FC  0100               	movlb	0	; () banked
 13221  0137FE  51B6               	movf	___fladd@bexp& (0+255),w,b
 13222  013800  0100               	movlb	0	; () banked
 13223  013802  A4D8               	btfss	status,2,c
 13224  013804  D003               	goto	l8149
 13225                           
 13226                           ; BSR set to: 0
 13227  013806  0E00               	movlw	0
 13228  013808  0100               	movlb	0	; () banked
 13229  01380A  6FB4               	movwf	___fladd@signs& (0+255),b
 13230  01380C                     l8149:
 13231                           
 13232                           ; BSR set to: 0
 13233  01380C  0100               	movlb	0	; () banked
 13234  01380E  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 13235  013810  D003               	goto	l8153
 13236                           
 13237                           ; BSR set to: 0
 13238  013812  0100               	movlb	0	; () banked
 13239  013814  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 13240  013816  D002               	goto	l8155
 13241  013818                     l8153:
 13242                           
 13243                           ; BSR set to: 0
 13244  013818  0100               	movlb	0	; () banked
 13245  01381A  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 13246  01381C                     l8155:
 13247                           
 13248                           ; BSR set to: 0
 13249  01381C  0100               	movlb	0	; () banked
 13250  01381E  90D8               	bcf	status,0,c
 13251  013820  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 13252  013822  0100               	movlb	0	; () banked
 13253  013824  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 13254                           
 13255                           ; BSR set to: 0
 13256  013826  0100               	movlb	0	; () banked
 13257  013828  AFB4               	btfss	___fladd@signs& (0+255),7,b
 13258  01382A  D002               	goto	l8161
 13259                           
 13260                           ; BSR set to: 0
 13261  01382C  0100               	movlb	0	; () banked
 13262  01382E  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 13263  013830                     l8161:
 13264                           
 13265                           ; BSR set to: 0
 13266  013830  C0A4  F0A4         	movff	___fladd@b,?___fladd
 13267  013834  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 13268  013838  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 13269  01383C  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 13270  013840  0012               	return	
 13271  013842                     __end_of___fladd:
 13272                           	opt stack 0
 13273                           tblptru	equ	0xFF8
 13274                           tblptrh	equ	0xFF7
 13275                           tblptrl	equ	0xFF6
 13276                           tablat	equ	0xFF5
 13277                           prodh	equ	0xFF4
 13278                           prodl	equ	0xFF3
 13279                           intcon	equ	0xFF2
 13280                           postinc0	equ	0xFEE
 13281                           wreg	equ	0xFE8
 13282                           indf2	equ	0xFDF
 13283                           postinc2	equ	0xFDE
 13284                           fsr2h	equ	0xFDA
 13285                           fsr2l	equ	0xFD9
 13286                           status	equ	0xFD8
 13287                           
 13288 ;; *************** function ___flneg *****************
 13289 ;; Defined at:
 13290 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  f1              4   55[BANK0 ] unsigned char 
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;		None
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  4   55[BANK0 ] unsigned char 
 13297 ;; Registers used:
 13298 ;;		wreg, status,2, status,0
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13304 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;Total ram usage:        4 bytes
 13309 ;; Hardware stack levels used:    1
 13310 ;; Hardware stack levels required when called:    3
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;;		_main
 13315 ;;		_sprintf
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           	psect	text25
 13320  016362                     __ptext25:
 13321                           	opt stack 0
 13322  016362                     ___flneg:
 13323                           	opt stack 27
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;incstack = 0
 13327  016362  0100               	movlb	0	; () banked
 13328  016364  5197               	movf	___flneg@f1& (0+255),w,b
 13329  016366  0100               	movlb	0	; () banked
 13330  016368  1198               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13331  01636A  0100               	movlb	0	; () banked
 13332  01636C  1199               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13333  01636E  0100               	movlb	0	; () banked
 13334  016370  119A               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13335  016372  B4D8               	btfsc	status,2,c
 13336  016374  D009               	goto	l8627
 13337                           
 13338                           ; BSR set to: 0
 13339  016376  0E00               	movlw	0
 13340  016378  0100               	movlb	0	; () banked
 13341  01637A  1B97               	xorwf	___flneg@f1& (0+255),f,b
 13342  01637C  0E00               	movlw	0
 13343  01637E  1B98               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13344  016380  0E00               	movlw	0
 13345  016382  1B99               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13346  016384  0E80               	movlw	128
 13347  016386  1B9A               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13348  016388                     l8627:
 13349                           
 13350                           ; BSR set to: 0
 13351  016388  C097  F097         	movff	___flneg@f1,?___flneg
 13352  01638C  C098  F098         	movff	___flneg@f1+1,?___flneg+1
 13353  016390  C099  F099         	movff	___flneg@f1+2,?___flneg+2
 13354  016394  C09A  F09A         	movff	___flneg@f1+3,?___flneg+3
 13355  016398  0012               	return	
 13356  01639A                     __end_of___flneg:
 13357                           	opt stack 0
 13358                           tblptru	equ	0xFF8
 13359                           tblptrh	equ	0xFF7
 13360                           tblptrl	equ	0xFF6
 13361                           tablat	equ	0xFF5
 13362                           prodh	equ	0xFF4
 13363                           prodl	equ	0xFF3
 13364                           intcon	equ	0xFF2
 13365                           postinc0	equ	0xFEE
 13366                           wreg	equ	0xFE8
 13367                           indf2	equ	0xFDF
 13368                           postinc2	equ	0xFDE
 13369                           fsr2h	equ	0xFDA
 13370                           fsr2l	equ	0xFD9
 13371                           status	equ	0xFD8
 13372                           
 13373 ;; *************** function ___flge *****************
 13374 ;; Defined at:
 13375 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 13376 ;; Parameters:    Size  Location     Type
 13377 ;;  ff1             4   16[BANK0 ] unsigned char 
 13378 ;;  ff2             4   20[BANK0 ] unsigned char 
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;		None
 13381 ;; Return value:  Size  Location     Type
 13382 ;;		None               void
 13383 ;; Registers used:
 13384 ;;		wreg, status,2, status,0
 13385 ;; Tracked objects:
 13386 ;;		On entry : 0/0
 13387 ;;		On exit  : 0/0
 13388 ;;		Unchanged: 0/0
 13389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13390 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;Total ram usage:       12 bytes
 13395 ;; Hardware stack levels used:    1
 13396 ;; Hardware stack levels required when called:    3
 13397 ;; This function calls:
 13398 ;;		Nothing
 13399 ;; This function is called by:
 13400 ;;		_sprintf
 13401 ;; This function uses a non-reentrant model
 13402 ;;
 13403                           
 13404                           	psect	text26
 13405  015252                     __ptext26:
 13406                           	opt stack 0
 13407  015252                     ___flge:
 13408                           	opt stack 25
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;incstack = 0
 13412  015252  0E00               	movlw	0
 13413  015254  0100               	movlb	0	; () banked
 13414  015256  1570               	andwf	___flge@ff1& (0+255),w,b
 13415  015258  0100               	movlb	0	; () banked
 13416  01525A  6F78               	movwf	??___flge& (0+255),b
 13417  01525C  0E00               	movlw	0
 13418  01525E  0100               	movlb	0	; () banked
 13419  015260  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
 13420  015262  0100               	movlb	0	; () banked
 13421  015264  6F79               	movwf	(??___flge+1)& (0+255),b
 13422  015266  0E80               	movlw	128
 13423  015268  0100               	movlb	0	; () banked
 13424  01526A  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
 13425  01526C  0100               	movlb	0	; () banked
 13426  01526E  6F7A               	movwf	(??___flge+2)& (0+255),b
 13427  015270  0E7F               	movlw	127
 13428  015272  0100               	movlb	0	; () banked
 13429  015274  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
 13430  015276  0100               	movlb	0	; () banked
 13431  015278  6F7B               	movwf	(??___flge+3)& (0+255),b
 13432  01527A  0100               	movlb	0	; () banked
 13433  01527C  5178               	movf	??___flge& (0+255),w,b
 13434  01527E  0100               	movlb	0	; () banked
 13435  015280  1179               	iorwf	(??___flge+1)& (0+255),w,b
 13436  015282  0100               	movlb	0	; () banked
 13437  015284  117A               	iorwf	(??___flge+2)& (0+255),w,b
 13438  015286  0100               	movlb	0	; () banked
 13439  015288  117B               	iorwf	(??___flge+3)& (0+255),w,b
 13440  01528A  A4D8               	btfss	status,2,c
 13441  01528C  D009               	goto	l8605
 13442                           
 13443                           ; BSR set to: 0
 13444  01528E  0E00               	movlw	0
 13445  015290  0100               	movlb	0	; () banked
 13446  015292  6F70               	movwf	___flge@ff1& (0+255),b
 13447  015294  0E00               	movlw	0
 13448  015296  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 13449  015298  0E00               	movlw	0
 13450  01529A  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 13451  01529C  0E00               	movlw	0
 13452  01529E  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 13453  0152A0                     l8605:
 13454                           
 13455                           ; BSR set to: 0
 13456  0152A0  0E00               	movlw	0
 13457  0152A2  0100               	movlb	0	; () banked
 13458  0152A4  1574               	andwf	___flge@ff2& (0+255),w,b
 13459  0152A6  0100               	movlb	0	; () banked
 13460  0152A8  6F78               	movwf	??___flge& (0+255),b
 13461  0152AA  0E00               	movlw	0
 13462  0152AC  0100               	movlb	0	; () banked
 13463  0152AE  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
 13464  0152B0  0100               	movlb	0	; () banked
 13465  0152B2  6F79               	movwf	(??___flge+1)& (0+255),b
 13466  0152B4  0E80               	movlw	128
 13467  0152B6  0100               	movlb	0	; () banked
 13468  0152B8  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
 13469  0152BA  0100               	movlb	0	; () banked
 13470  0152BC  6F7A               	movwf	(??___flge+2)& (0+255),b
 13471  0152BE  0E7F               	movlw	127
 13472  0152C0  0100               	movlb	0	; () banked
 13473  0152C2  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
 13474  0152C4  0100               	movlb	0	; () banked
 13475  0152C6  6F7B               	movwf	(??___flge+3)& (0+255),b
 13476  0152C8  0100               	movlb	0	; () banked
 13477  0152CA  5178               	movf	??___flge& (0+255),w,b
 13478  0152CC  0100               	movlb	0	; () banked
 13479  0152CE  1179               	iorwf	(??___flge+1)& (0+255),w,b
 13480  0152D0  0100               	movlb	0	; () banked
 13481  0152D2  117A               	iorwf	(??___flge+2)& (0+255),w,b
 13482  0152D4  0100               	movlb	0	; () banked
 13483  0152D6  117B               	iorwf	(??___flge+3)& (0+255),w,b
 13484  0152D8  A4D8               	btfss	status,2,c
 13485  0152DA  D009               	goto	l8609
 13486                           
 13487                           ; BSR set to: 0
 13488  0152DC  0E00               	movlw	0
 13489  0152DE  0100               	movlb	0	; () banked
 13490  0152E0  6F74               	movwf	___flge@ff2& (0+255),b
 13491  0152E2  0E00               	movlw	0
 13492  0152E4  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 13493  0152E6  0E00               	movlw	0
 13494  0152E8  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 13495  0152EA  0E00               	movlw	0
 13496  0152EC  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 13497  0152EE                     l8609:
 13498                           
 13499                           ; BSR set to: 0
 13500  0152EE  0100               	movlb	0	; () banked
 13501  0152F0  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
 13502  0152F2  D026               	goto	l8613
 13503                           
 13504                           ; BSR set to: 0
 13505  0152F4  C070  F078         	movff	___flge@ff1,??___flge
 13506  0152F8  C071  F079         	movff	___flge@ff1+1,??___flge+1
 13507  0152FC  C072  F07A         	movff	___flge@ff1+2,??___flge+2
 13508  015300  C073  F07B         	movff	___flge@ff1+3,??___flge+3
 13509  015304  0100               	movlb	0	; () banked
 13510  015306  1F78               	comf	??___flge& (0+255),f,b
 13511  015308  1F79               	comf	(??___flge+1)& (0+255),f,b
 13512  01530A  1F7A               	comf	(??___flge+2)& (0+255),f,b
 13513  01530C  1F7B               	comf	(??___flge+3)& (0+255),f,b
 13514  01530E  2B78               	incf	??___flge& (0+255),f,b
 13515  015310  0E00               	movlw	0
 13516  015312  2379               	addwfc	(??___flge+1)& (0+255),f,b
 13517  015314  237A               	addwfc	(??___flge+2)& (0+255),f,b
 13518  015316  237B               	addwfc	(??___flge+3)& (0+255),f,b
 13519  015318  0E00               	movlw	0
 13520  01531A  0100               	movlb	0	; () banked
 13521  01531C  2578               	addwf	??___flge& (0+255),w,b
 13522  01531E  0100               	movlb	0	; () banked
 13523  015320  6F70               	movwf	___flge@ff1& (0+255),b
 13524  015322  0E00               	movlw	0
 13525  015324  0100               	movlb	0	; () banked
 13526  015326  2179               	addwfc	(??___flge+1)& (0+255),w,b
 13527  015328  0100               	movlb	0	; () banked
 13528  01532A  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 13529  01532C  0E00               	movlw	0
 13530  01532E  0100               	movlb	0	; () banked
 13531  015330  217A               	addwfc	(??___flge+2)& (0+255),w,b
 13532  015332  0100               	movlb	0	; () banked
 13533  015334  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 13534  015336  0E80               	movlw	128
 13535  015338  0100               	movlb	0	; () banked
 13536  01533A  217B               	addwfc	(??___flge+3)& (0+255),w,b
 13537  01533C  0100               	movlb	0	; () banked
 13538  01533E  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 13539  015340                     l8613:
 13540                           
 13541                           ; BSR set to: 0
 13542  015340  0100               	movlb	0	; () banked
 13543  015342  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
 13544  015344  D026               	goto	l1278
 13545                           
 13546                           ; BSR set to: 0
 13547  015346  C074  F078         	movff	___flge@ff2,??___flge
 13548  01534A  C075  F079         	movff	___flge@ff2+1,??___flge+1
 13549  01534E  C076  F07A         	movff	___flge@ff2+2,??___flge+2
 13550  015352  C077  F07B         	movff	___flge@ff2+3,??___flge+3
 13551  015356  0100               	movlb	0	; () banked
 13552  015358  1F78               	comf	??___flge& (0+255),f,b
 13553  01535A  1F79               	comf	(??___flge+1)& (0+255),f,b
 13554  01535C  1F7A               	comf	(??___flge+2)& (0+255),f,b
 13555  01535E  1F7B               	comf	(??___flge+3)& (0+255),f,b
 13556  015360  2B78               	incf	??___flge& (0+255),f,b
 13557  015362  0E00               	movlw	0
 13558  015364  2379               	addwfc	(??___flge+1)& (0+255),f,b
 13559  015366  237A               	addwfc	(??___flge+2)& (0+255),f,b
 13560  015368  237B               	addwfc	(??___flge+3)& (0+255),f,b
 13561  01536A  0E00               	movlw	0
 13562  01536C  0100               	movlb	0	; () banked
 13563  01536E  2578               	addwf	??___flge& (0+255),w,b
 13564  015370  0100               	movlb	0	; () banked
 13565  015372  6F74               	movwf	___flge@ff2& (0+255),b
 13566  015374  0E00               	movlw	0
 13567  015376  0100               	movlb	0	; () banked
 13568  015378  2179               	addwfc	(??___flge+1)& (0+255),w,b
 13569  01537A  0100               	movlb	0	; () banked
 13570  01537C  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 13571  01537E  0E00               	movlw	0
 13572  015380  0100               	movlb	0	; () banked
 13573  015382  217A               	addwfc	(??___flge+2)& (0+255),w,b
 13574  015384  0100               	movlb	0	; () banked
 13575  015386  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 13576  015388  0E80               	movlw	128
 13577  01538A  0100               	movlb	0	; () banked
 13578  01538C  217B               	addwfc	(??___flge+3)& (0+255),w,b
 13579  01538E  0100               	movlb	0	; () banked
 13580  015390  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 13581  015392                     l1278:
 13582                           
 13583                           ; BSR set to: 0
 13584  015392  0E00               	movlw	0
 13585  015394  0100               	movlb	0	; () banked
 13586  015396  1B70               	xorwf	___flge@ff1& (0+255),f,b
 13587  015398  0E00               	movlw	0
 13588  01539A  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13589  01539C  0E00               	movlw	0
 13590  01539E  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13591  0153A0  0E80               	movlw	128
 13592  0153A2  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13593  0153A4  0E00               	movlw	0
 13594  0153A6  0100               	movlb	0	; () banked
 13595  0153A8  1B74               	xorwf	___flge@ff2& (0+255),f,b
 13596  0153AA  0E00               	movlw	0
 13597  0153AC  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13598  0153AE  0E00               	movlw	0
 13599  0153B0  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13600  0153B2  0E80               	movlw	128
 13601  0153B4  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13602  0153B6  0100               	movlb	0	; () banked
 13603  0153B8  5174               	movf	___flge@ff2& (0+255),w,b
 13604  0153BA  0100               	movlb	0	; () banked
 13605  0153BC  5D70               	subwf	___flge@ff1& (0+255),w,b
 13606  0153BE  0100               	movlb	0	; () banked
 13607  0153C0  5175               	movf	(___flge@ff2+1)& (0+255),w,b
 13608  0153C2  0100               	movlb	0	; () banked
 13609  0153C4  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13610  0153C6  0100               	movlb	0	; () banked
 13611  0153C8  5176               	movf	(___flge@ff2+2)& (0+255),w,b
 13612  0153CA  0100               	movlb	0	; () banked
 13613  0153CC  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13614  0153CE  0100               	movlb	0	; () banked
 13615  0153D0  5177               	movf	(___flge@ff2+3)& (0+255),w,b
 13616  0153D2  0100               	movlb	0	; () banked
 13617  0153D4  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13618  0153D6  B0D8               	btfsc	status,0,c
 13619  0153D8  D002               	goto	l8619
 13620                           
 13621                           ; BSR set to: 0
 13622  0153DA  90D8               	bcf	status,0,c
 13623  0153DC  0012               	return	
 13624  0153DE                     l8619:
 13625                           
 13626                           ; BSR set to: 0
 13627  0153DE  80D8               	bsf	status,0,c
 13628                           
 13629                           ; BSR set to: 0
 13630  0153E0  0012               	return	
 13631  0153E2                     __end_of___flge:
 13632                           	opt stack 0
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           intcon	equ	0xFF2
 13640                           postinc0	equ	0xFEE
 13641                           wreg	equ	0xFE8
 13642                           indf2	equ	0xFDF
 13643                           postinc2	equ	0xFDE
 13644                           fsr2h	equ	0xFDA
 13645                           fsr2l	equ	0xFD9
 13646                           status	equ	0xFD8
 13647                           
 13648 ;; *************** function ___fldiv *****************
 13649 ;; Defined at:
 13650 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 13651 ;; Parameters:    Size  Location     Type
 13652 ;;  b               4   30[BANK0 ] unsigned char 
 13653 ;;  a               4   34[BANK0 ] unsigned char 
 13654 ;; Auto vars:     Size  Location     Type
 13655 ;;  grs             4   49[BANK0 ] unsigned long 
 13656 ;;  rem             4   43[BANK0 ] unsigned long 
 13657 ;;  new_exp         2   47[BANK0 ] int 
 13658 ;;  aexp            1   54[BANK0 ] unsigned char 
 13659 ;;  bexp            1   53[BANK0 ] unsigned char 
 13660 ;;  sign            1   42[BANK0 ] unsigned char 
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  4   30[BANK0 ] unsigned char 
 13663 ;; Registers used:
 13664 ;;		wreg, status,2, status,0
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13670 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13671 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13672 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13673 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13674 ;;Total ram usage:       25 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:    3
 13677 ;; This function calls:
 13678 ;;		Nothing
 13679 ;; This function is called by:
 13680 ;;		_LCD_Handler
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           	psect	text27
 13685  013CE8                     __ptext27:
 13686                           	opt stack 0
 13687  013CE8                     ___fldiv:
 13688                           	opt stack 26
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;incstack = 0
 13692  013CE8  0100               	movlb	0	; () banked
 13693  013CEA  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 13694  013CEC  0B80               	andlw	128
 13695  013CEE  0100               	movlb	0	; () banked
 13696  013CF0  6F8A               	movwf	___fldiv@sign& (0+255),b
 13697  013CF2  0100               	movlb	0	; () banked
 13698  013CF4  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 13699  013CF6  2581               	addwf	(___fldiv@b+3)& (0+255),w,b
 13700  013CF8  0100               	movlb	0	; () banked
 13701  013CFA  6F95               	movwf	___fldiv@bexp& (0+255),b
 13702                           
 13703                           ; BSR set to: 0
 13704  013CFC  0100               	movlb	0	; () banked
 13705  013CFE  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 13706  013D00  D002               	goto	l6769
 13707                           
 13708                           ; BSR set to: 0
 13709  013D02  0100               	movlb	0	; () banked
 13710  013D04  8195               	bsf	___fldiv@bexp& (0+255),0,b
 13711  013D06                     l6769:
 13712                           
 13713                           ; BSR set to: 0
 13714  013D06  0100               	movlb	0	; () banked
 13715  013D08  5195               	movf	___fldiv@bexp& (0+255),w,b
 13716  013D0A  0100               	movlb	0	; () banked
 13717  013D0C  B4D8               	btfsc	status,2,c
 13718  013D0E  D012               	goto	l6779
 13719                           
 13720                           ; BSR set to: 0
 13721  013D10  0100               	movlb	0	; () banked
 13722  013D12  2995               	incf	___fldiv@bexp& (0+255),w,b
 13723  013D14  A4D8               	btfss	status,2,c
 13724  013D16  D009               	goto	l6775
 13725                           
 13726                           ; BSR set to: 0
 13727  013D18  0E00               	movlw	0
 13728  013D1A  0100               	movlb	0	; () banked
 13729  013D1C  6F7E               	movwf	___fldiv@b& (0+255),b
 13730  013D1E  0E00               	movlw	0
 13731  013D20  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13732  013D22  0E00               	movlw	0
 13733  013D24  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13734  013D26  0E00               	movlw	0
 13735  013D28  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13736  013D2A                     l6775:
 13737                           
 13738                           ; BSR set to: 0
 13739  013D2A  0100               	movlb	0	; () banked
 13740  013D2C  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 13741                           
 13742                           ; BSR set to: 0
 13743  013D2E  0E00               	movlw	0
 13744  013D30  0100               	movlb	0	; () banked
 13745  013D32  D008               	goto	L13
 13746  013D34                     l6779:
 13747                           
 13748                           ; BSR set to: 0
 13749  013D34  0E00               	movlw	0
 13750  013D36  0100               	movlb	0	; () banked
 13751  013D38  6F7E               	movwf	___fldiv@b& (0+255),b
 13752  013D3A  0E00               	movlw	0
 13753  013D3C  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13754  013D3E  0E00               	movlw	0
 13755  013D40  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13756  013D42  0E00               	movlw	0
 13757  013D44                     L13:
 13758  013D44  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13759                           
 13760                           ; BSR set to: 0
 13761                           
 13762                           ; BSR set to: 0
 13763  013D46  0100               	movlb	0	; () banked
 13764  013D48  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13765  013D4A  0B80               	andlw	128
 13766  013D4C  0100               	movlb	0	; () banked
 13767  013D4E  1B8A               	xorwf	___fldiv@sign& (0+255),f,b
 13768                           
 13769                           ; BSR set to: 0
 13770  013D50  0100               	movlb	0	; () banked
 13771  013D52  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13772  013D54  2585               	addwf	(___fldiv@a+3)& (0+255),w,b
 13773  013D56  0100               	movlb	0	; () banked
 13774  013D58  6F96               	movwf	___fldiv@aexp& (0+255),b
 13775                           
 13776                           ; BSR set to: 0
 13777  013D5A  0100               	movlb	0	; () banked
 13778  013D5C  AF84               	btfss	(___fldiv@a+2)& (0+255),7,b
 13779  013D5E  D002               	goto	l6789
 13780                           
 13781                           ; BSR set to: 0
 13782  013D60  0100               	movlb	0	; () banked
 13783  013D62  8196               	bsf	___fldiv@aexp& (0+255),0,b
 13784  013D64                     l6789:
 13785                           
 13786                           ; BSR set to: 0
 13787  013D64  0100               	movlb	0	; () banked
 13788  013D66  5196               	movf	___fldiv@aexp& (0+255),w,b
 13789  013D68  0100               	movlb	0	; () banked
 13790  013D6A  B4D8               	btfsc	status,2,c
 13791  013D6C  D012               	goto	l6799
 13792                           
 13793                           ; BSR set to: 0
 13794  013D6E  0100               	movlb	0	; () banked
 13795  013D70  2996               	incf	___fldiv@aexp& (0+255),w,b
 13796  013D72  A4D8               	btfss	status,2,c
 13797  013D74  D009               	goto	l6795
 13798                           
 13799                           ; BSR set to: 0
 13800  013D76  0E00               	movlw	0
 13801  013D78  0100               	movlb	0	; () banked
 13802  013D7A  6F82               	movwf	___fldiv@a& (0+255),b
 13803  013D7C  0E00               	movlw	0
 13804  013D7E  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 13805  013D80  0E00               	movlw	0
 13806  013D82  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 13807  013D84  0E00               	movlw	0
 13808  013D86  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 13809  013D88                     l6795:
 13810                           
 13811                           ; BSR set to: 0
 13812  013D88  0100               	movlb	0	; () banked
 13813  013D8A  8F84               	bsf	(___fldiv@a+2)& (0+255),7,b
 13814                           
 13815                           ; BSR set to: 0
 13816  013D8C  0E00               	movlw	0
 13817  013D8E  0100               	movlb	0	; () banked
 13818  013D90  D008               	goto	L14
 13819  013D92                     l6799:
 13820                           
 13821                           ; BSR set to: 0
 13822  013D92  0E00               	movlw	0
 13823  013D94  0100               	movlb	0	; () banked
 13824  013D96  6F82               	movwf	___fldiv@a& (0+255),b
 13825  013D98  0E00               	movlw	0
 13826  013D9A  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 13827  013D9C  0E00               	movlw	0
 13828  013D9E  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 13829  013DA0  0E00               	movlw	0
 13830  013DA2                     L14:
 13831  013DA2  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 13832                           
 13833                           ; BSR set to: 0
 13834                           
 13835                           ; BSR set to: 0
 13836  013DA4  0100               	movlb	0	; () banked
 13837  013DA6  5182               	movf	___fldiv@a& (0+255),w,b
 13838  013DA8  0100               	movlb	0	; () banked
 13839  013DAA  1183               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13840  013DAC  0100               	movlb	0	; () banked
 13841  013DAE  1184               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13842  013DB0  0100               	movlb	0	; () banked
 13843  013DB2  1185               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13844  013DB4  A4D8               	btfss	status,2,c
 13845  013DB6  D017               	goto	l6811
 13846                           
 13847                           ; BSR set to: 0
 13848  013DB8  0E00               	movlw	0
 13849  013DBA  0100               	movlb	0	; () banked
 13850  013DBC  6F7E               	movwf	___fldiv@b& (0+255),b
 13851  013DBE  0E00               	movlw	0
 13852  013DC0  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13853  013DC2  0E00               	movlw	0
 13854  013DC4  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13855  013DC6  0E00               	movlw	0
 13856  013DC8  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13857                           
 13858                           ; BSR set to: 0
 13859  013DCA  0100               	movlb	0	; () banked
 13860  013DCC  0E80               	movlw	128
 13861  013DCE  1380               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13862  013DD0  0E7F               	movlw	127
 13863  013DD2  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13864                           
 13865                           ; BSR set to: 0
 13866  013DD4  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13867  013DD8  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13868  013DDC  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13869  013DE0  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13870                           
 13871                           ; BSR set to: 0
 13872  013DE4  0012               	return	
 13873  013DE6                     l6811:
 13874                           
 13875                           ; BSR set to: 0
 13876  013DE6  0100               	movlb	0	; () banked
 13877  013DE8  5195               	movf	___fldiv@bexp& (0+255),w,b
 13878  013DEA  0100               	movlb	0	; () banked
 13879  013DEC  A4D8               	btfss	status,2,c
 13880  013DEE  D012               	goto	l6819
 13881                           
 13882                           ; BSR set to: 0
 13883  013DF0  0E00               	movlw	0
 13884  013DF2  0100               	movlb	0	; () banked
 13885  013DF4  6F7E               	movwf	___fldiv@b& (0+255),b
 13886  013DF6  0E00               	movlw	0
 13887  013DF8  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13888  013DFA  0E00               	movlw	0
 13889  013DFC  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13890  013DFE  0E00               	movlw	0
 13891  013E00  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13892                           
 13893                           ; BSR set to: 0
 13894  013E02  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13895  013E06  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13896  013E0A  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13897  013E0E  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13898                           
 13899                           ; BSR set to: 0
 13900  013E12  0012               	return	
 13901  013E14                     l6819:
 13902                           
 13903                           ; BSR set to: 0
 13904  013E14  0100               	movlb	0	; () banked
 13905  013E16  5196               	movf	___fldiv@aexp& (0+255),w,b
 13906  013E18  0100               	movlb	0	; () banked
 13907  013E1A  6F86               	movwf	??___fldiv& (0+255),b
 13908  013E1C  6B87               	clrf	(??___fldiv+1)& (0+255),b
 13909  013E1E  0100               	movlb	0	; () banked
 13910  013E20  1F86               	comf	??___fldiv& (0+255),f,b
 13911  013E22  1F87               	comf	(??___fldiv+1)& (0+255),f,b
 13912  013E24  4B86               	infsnz	??___fldiv& (0+255),f,b
 13913  013E26  2B87               	incf	(??___fldiv+1)& (0+255),f,b
 13914  013E28  0100               	movlb	0	; () banked
 13915  013E2A  5195               	movf	___fldiv@bexp& (0+255),w,b
 13916  013E2C  0100               	movlb	0	; () banked
 13917  013E2E  6F88               	movwf	(??___fldiv+2)& (0+255),b
 13918  013E30  6B89               	clrf	(??___fldiv+3)& (0+255),b
 13919  013E32  0100               	movlb	0	; () banked
 13920  013E34  5186               	movf	??___fldiv& (0+255),w,b
 13921  013E36  0100               	movlb	0	; () banked
 13922  013E38  2788               	addwf	(??___fldiv+2)& (0+255),f,b
 13923  013E3A  0100               	movlb	0	; () banked
 13924  013E3C  5187               	movf	(??___fldiv+1)& (0+255),w,b
 13925  013E3E  0100               	movlb	0	; () banked
 13926  013E40  2389               	addwfc	(??___fldiv+3)& (0+255),f,b
 13927  013E42  0E7F               	movlw	127
 13928  013E44  0100               	movlb	0	; () banked
 13929  013E46  2588               	addwf	(??___fldiv+2)& (0+255),w,b
 13930  013E48  0100               	movlb	0	; () banked
 13931  013E4A  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 13932  013E4C  0E00               	movlw	0
 13933  013E4E  0100               	movlb	0	; () banked
 13934  013E50  2189               	addwfc	(??___fldiv+3)& (0+255),w,b
 13935  013E52  0100               	movlb	0	; () banked
 13936  013E54  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13937                           
 13938                           ; BSR set to: 0
 13939  013E56  C07E  F08B         	movff	___fldiv@b,___fldiv@rem
 13940  013E5A  C07F  F08C         	movff	___fldiv@b+1,___fldiv@rem+1
 13941  013E5E  C080  F08D         	movff	___fldiv@b+2,___fldiv@rem+2
 13942  013E62  C081  F08E         	movff	___fldiv@b+3,___fldiv@rem+3
 13943                           
 13944                           ; BSR set to: 0
 13945  013E66  0E00               	movlw	0
 13946  013E68  0100               	movlb	0	; () banked
 13947  013E6A  6F7E               	movwf	___fldiv@b& (0+255),b
 13948  013E6C  0E00               	movlw	0
 13949  013E6E  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13950  013E70  0E00               	movlw	0
 13951  013E72  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13952  013E74  0E00               	movlw	0
 13953  013E76  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13954                           
 13955                           ; BSR set to: 0
 13956  013E78  0E00               	movlw	0
 13957  013E7A  0100               	movlb	0	; () banked
 13958  013E7C  6F91               	movwf	___fldiv@grs& (0+255),b
 13959  013E7E  0E00               	movlw	0
 13960  013E80  6F92               	movwf	(___fldiv@grs+1)& (0+255),b
 13961  013E82  0E00               	movlw	0
 13962  013E84  6F93               	movwf	(___fldiv@grs+2)& (0+255),b
 13963  013E86  0E00               	movlw	0
 13964  013E88  6F94               	movwf	(___fldiv@grs+3)& (0+255),b
 13965                           
 13966                           ; BSR set to: 0
 13967  013E8A  0E00               	movlw	0
 13968  013E8C  0100               	movlb	0	; () banked
 13969  013E8E  6F96               	movwf	___fldiv@aexp& (0+255),b
 13970  013E90  D042               	goto	l1611
 13971  013E92                     l6829:
 13972                           
 13973                           ; BSR set to: 0
 13974  013E92  0100               	movlb	0	; () banked
 13975  013E94  5196               	movf	___fldiv@aexp& (0+255),w,b
 13976  013E96  0100               	movlb	0	; () banked
 13977  013E98  B4D8               	btfsc	status,2,c
 13978  013E9A  D017               	goto	l6837
 13979                           
 13980                           ; BSR set to: 0
 13981  013E9C  0100               	movlb	0	; () banked
 13982  013E9E  90D8               	bcf	status,0,c
 13983  013EA0  378B               	rlcf	___fldiv@rem& (0+255),f,b
 13984  013EA2  378C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13985  013EA4  378D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13986  013EA6  378E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13987  013EA8  0100               	movlb	0	; () banked
 13988  013EAA  90D8               	bcf	status,0,c
 13989  013EAC  377E               	rlcf	___fldiv@b& (0+255),f,b
 13990  013EAE  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13991  013EB0  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13992  013EB2  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13993                           
 13994                           ; BSR set to: 0
 13995  013EB4  0100               	movlb	0	; () banked
 13996  013EB6  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13997  013EB8  D002               	goto	l1614
 13998                           
 13999                           ; BSR set to: 0
 14000  013EBA  0100               	movlb	0	; () banked
 14001  013EBC  817E               	bsf	___fldiv@b& (0+255),0,b
 14002  013EBE                     l1614:
 14003                           
 14004                           ; BSR set to: 0
 14005  013EBE  0100               	movlb	0	; () banked
 14006  013EC0  90D8               	bcf	status,0,c
 14007  013EC2  3791               	rlcf	___fldiv@grs& (0+255),f,b
 14008  013EC4  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14009  013EC6  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14010  013EC8  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14011  013ECA                     l6837:
 14012                           
 14013                           ; BSR set to: 0
 14014  013ECA  0100               	movlb	0	; () banked
 14015  013ECC  5182               	movf	___fldiv@a& (0+255),w,b
 14016  013ECE  0100               	movlb	0	; () banked
 14017  013ED0  5D8B               	subwf	___fldiv@rem& (0+255),w,b
 14018  013ED2  0100               	movlb	0	; () banked
 14019  013ED4  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 14020  013ED6  0100               	movlb	0	; () banked
 14021  013ED8  598C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14022  013EDA  0100               	movlb	0	; () banked
 14023  013EDC  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 14024  013EDE  0100               	movlb	0	; () banked
 14025  013EE0  598D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14026  013EE2  0100               	movlb	0	; () banked
 14027  013EE4  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 14028  013EE6  0100               	movlb	0	; () banked
 14029  013EE8  598E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14030  013EEA  A0D8               	btfss	status,0,c
 14031  013EEC  D012               	goto	l6843
 14032                           
 14033                           ; BSR set to: 0
 14034  013EEE  0100               	movlb	0	; () banked
 14035  013EF0  8D94               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14036                           
 14037                           ; BSR set to: 0
 14038  013EF2  0100               	movlb	0	; () banked
 14039  013EF4  5182               	movf	___fldiv@a& (0+255),w,b
 14040  013EF6  0100               	movlb	0	; () banked
 14041  013EF8  5F8B               	subwf	___fldiv@rem& (0+255),f,b
 14042  013EFA  0100               	movlb	0	; () banked
 14043  013EFC  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 14044  013EFE  0100               	movlb	0	; () banked
 14045  013F00  5B8C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14046  013F02  0100               	movlb	0	; () banked
 14047  013F04  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 14048  013F06  0100               	movlb	0	; () banked
 14049  013F08  5B8D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14050  013F0A  0100               	movlb	0	; () banked
 14051  013F0C  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 14052  013F0E  0100               	movlb	0	; () banked
 14053  013F10  5B8E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14054  013F12                     l6843:
 14055                           
 14056                           ; BSR set to: 0
 14057  013F12  0100               	movlb	0	; () banked
 14058  013F14  2B96               	incf	___fldiv@aexp& (0+255),f,b
 14059  013F16                     l1611:
 14060                           
 14061                           ; BSR set to: 0
 14062  013F16  0E19               	movlw	25
 14063  013F18  0100               	movlb	0	; () banked
 14064  013F1A  6596               	cpfsgt	___fldiv@aexp& (0+255),b
 14065  013F1C  D7BA               	goto	l6829
 14066                           
 14067                           ; BSR set to: 0
 14068                           
 14069                           ; BSR set to: 0
 14070  013F1E  0100               	movlb	0	; () banked
 14071  013F20  518B               	movf	___fldiv@rem& (0+255),w,b
 14072  013F22  0100               	movlb	0	; () banked
 14073  013F24  118C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14074  013F26  0100               	movlb	0	; () banked
 14075  013F28  118D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14076  013F2A  0100               	movlb	0	; () banked
 14077  013F2C  118E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14078  013F2E  B4D8               	btfsc	status,2,c
 14079  013F30  D018               	goto	l6855
 14080                           
 14081                           ; BSR set to: 0
 14082  013F32  0100               	movlb	0	; () banked
 14083  013F34  8191               	bsf	___fldiv@grs& (0+255),0,b
 14084                           
 14085                           ; BSR set to: 0
 14086  013F36  D015               	goto	l6855
 14087  013F38                     l6849:
 14088                           
 14089                           ; BSR set to: 0
 14090  013F38  0100               	movlb	0	; () banked
 14091  013F3A  90D8               	bcf	status,0,c
 14092  013F3C  377E               	rlcf	___fldiv@b& (0+255),f,b
 14093  013F3E  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14094  013F40  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14095  013F42  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14096                           
 14097                           ; BSR set to: 0
 14098  013F44  0100               	movlb	0	; () banked
 14099  013F46  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14100  013F48  D002               	goto	l1620
 14101                           
 14102                           ; BSR set to: 0
 14103  013F4A  0100               	movlb	0	; () banked
 14104  013F4C  817E               	bsf	___fldiv@b& (0+255),0,b
 14105  013F4E                     l1620:
 14106                           
 14107                           ; BSR set to: 0
 14108  013F4E  0100               	movlb	0	; () banked
 14109  013F50  90D8               	bcf	status,0,c
 14110  013F52  3791               	rlcf	___fldiv@grs& (0+255),f,b
 14111  013F54  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14112  013F56  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14113  013F58  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14114  013F5A  0100               	movlb	0	; () banked
 14115  013F5C  078F               	decf	___fldiv@new_exp& (0+255),f,b
 14116  013F5E  A0D8               	btfss	status,0,c
 14117  013F60  0790               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14118  013F62                     l6855:
 14119                           
 14120                           ; BSR set to: 0
 14121  013F62  0100               	movlb	0	; () banked
 14122  013F64  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 14123  013F66  D7E8               	goto	l6849
 14124                           
 14125                           ; BSR set to: 0
 14126                           
 14127                           ; BSR set to: 0
 14128  013F68  0E00               	movlw	0
 14129  013F6A  0100               	movlb	0	; () banked
 14130  013F6C  6F96               	movwf	___fldiv@aexp& (0+255),b
 14131                           
 14132                           ; BSR set to: 0
 14133  013F6E  0100               	movlb	0	; () banked
 14134  013F70  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14135  013F72  D024               	goto	l1622
 14136                           
 14137                           ; BSR set to: 0
 14138  013F74  0EFF               	movlw	255
 14139  013F76  0100               	movlb	0	; () banked
 14140  013F78  1591               	andwf	___fldiv@grs& (0+255),w,b
 14141  013F7A  0100               	movlb	0	; () banked
 14142  013F7C  6F86               	movwf	??___fldiv& (0+255),b
 14143  013F7E  0EFF               	movlw	255
 14144  013F80  0100               	movlb	0	; () banked
 14145  013F82  1592               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14146  013F84  0100               	movlb	0	; () banked
 14147  013F86  6F87               	movwf	(??___fldiv+1)& (0+255),b
 14148  013F88  0EFF               	movlw	255
 14149  013F8A  0100               	movlb	0	; () banked
 14150  013F8C  1593               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14151  013F8E  0100               	movlb	0	; () banked
 14152  013F90  6F88               	movwf	(??___fldiv+2)& (0+255),b
 14153  013F92  0E7F               	movlw	127
 14154  013F94  0100               	movlb	0	; () banked
 14155  013F96  1594               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14156  013F98  0100               	movlb	0	; () banked
 14157  013F9A  6F89               	movwf	(??___fldiv+3)& (0+255),b
 14158  013F9C  0100               	movlb	0	; () banked
 14159  013F9E  5186               	movf	??___fldiv& (0+255),w,b
 14160  013FA0  0100               	movlb	0	; () banked
 14161  013FA2  1187               	iorwf	(??___fldiv+1)& (0+255),w,b
 14162  013FA4  0100               	movlb	0	; () banked
 14163  013FA6  1188               	iorwf	(??___fldiv+2)& (0+255),w,b
 14164  013FA8  0100               	movlb	0	; () banked
 14165  013FAA  1189               	iorwf	(??___fldiv+3)& (0+255),w,b
 14166  013FAC  A4D8               	btfss	status,2,c
 14167  013FAE  D003               	goto	l6865
 14168                           
 14169                           ; BSR set to: 0
 14170                           
 14171                           ; BSR set to: 0
 14172  013FB0  0100               	movlb	0	; () banked
 14173  013FB2  A17E               	btfss	___fldiv@b& (0+255),0,b
 14174  013FB4  D003               	goto	l1622
 14175  013FB6                     l6865:
 14176                           
 14177                           ; BSR set to: 0
 14178  013FB6  0E01               	movlw	1
 14179  013FB8  0100               	movlb	0	; () banked
 14180  013FBA  6F96               	movwf	___fldiv@aexp& (0+255),b
 14181  013FBC                     l1622:
 14182                           
 14183                           ; BSR set to: 0
 14184  013FBC  0100               	movlb	0	; () banked
 14185  013FBE  5196               	movf	___fldiv@aexp& (0+255),w,b
 14186  013FC0  0100               	movlb	0	; () banked
 14187  013FC2  B4D8               	btfsc	status,2,c
 14188  013FC4  D023               	goto	l6875
 14189                           
 14190                           ; BSR set to: 0
 14191  013FC6  0E01               	movlw	1
 14192  013FC8  0100               	movlb	0	; () banked
 14193  013FCA  277E               	addwf	___fldiv@b& (0+255),f,b
 14194  013FCC  0E00               	movlw	0
 14195  013FCE  237F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14196  013FD0  2380               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14197  013FD2  2381               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14198                           
 14199                           ; BSR set to: 0
 14200  013FD4  0100               	movlb	0	; () banked
 14201  013FD6  A181               	btfss	(___fldiv@b+3)& (0+255),0,b
 14202  013FD8  D019               	goto	l6875
 14203                           
 14204                           ; BSR set to: 0
 14205  013FDA  C07E  F086         	movff	___fldiv@b,??___fldiv
 14206  013FDE  C07F  F087         	movff	___fldiv@b+1,??___fldiv+1
 14207  013FE2  C080  F088         	movff	___fldiv@b+2,??___fldiv+2
 14208  013FE6  C081  F089         	movff	___fldiv@b+3,??___fldiv+3
 14209  013FEA  0100               	movlb	0	; () banked
 14210  013FEC  3589               	rlcf	(??___fldiv+3)& (0+255),w,b
 14211  013FEE  3389               	rrcf	(??___fldiv+3)& (0+255),f,b
 14212  013FF0  3388               	rrcf	(??___fldiv+2)& (0+255),f,b
 14213  013FF2  3387               	rrcf	(??___fldiv+1)& (0+255),f,b
 14214  013FF4  3386               	rrcf	??___fldiv& (0+255),f,b
 14215  013FF6  C086  F07E         	movff	??___fldiv,___fldiv@b
 14216  013FFA  C087  F07F         	movff	??___fldiv+1,___fldiv@b+1
 14217  013FFE  C088  F080         	movff	??___fldiv+2,___fldiv@b+2
 14218  014002  C089  F081         	movff	??___fldiv+3,___fldiv@b+3
 14219                           
 14220                           ; BSR set to: 0
 14221  014006  0100               	movlb	0	; () banked
 14222  014008  4B8F               	infsnz	___fldiv@new_exp& (0+255),f,b
 14223  01400A  2B90               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14224  01400C                     l6875:
 14225                           
 14226                           ; BSR set to: 0
 14227  01400C  0100               	movlb	0	; () banked
 14228  01400E  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14229  014010  D014               	goto	l6879
 14230  014012  0100               	movlb	0	; () banked
 14231  014014  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14232  014016  E104               	bnz	u8690
 14233  014018  0100               	movlb	0	; () banked
 14234  01401A  298F               	incf	___fldiv@new_exp& (0+255),w,b
 14235  01401C  A0D8               	btfss	status,0,c
 14236  01401E  D00D               	goto	l6879
 14237  014020                     u8690:
 14238                           
 14239                           ; BSR set to: 0
 14240  014020  0E00               	movlw	0
 14241  014022  0100               	movlb	0	; () banked
 14242  014024  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14243  014026  698F               	setf	___fldiv@new_exp& (0+255),b
 14244  014028  0E00               	movlw	0
 14245  01402A  0100               	movlb	0	; () banked
 14246  01402C  6F7E               	movwf	___fldiv@b& (0+255),b
 14247  01402E  0E00               	movlw	0
 14248  014030  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 14249  014032  0E00               	movlw	0
 14250  014034  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 14251  014036  0E00               	movlw	0
 14252  014038  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 14253  01403A                     l6879:
 14254                           
 14255                           ; BSR set to: 0
 14256  01403A  0100               	movlb	0	; () banked
 14257  01403C  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14258  01403E  D007               	goto	l6881
 14259  014040  0100               	movlb	0	; () banked
 14260  014042  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14261  014044  E115               	bnz	l6883
 14262  014046  0100               	movlb	0	; () banked
 14263  014048  058F               	decf	___fldiv@new_exp& (0+255),w,b
 14264  01404A  B0D8               	btfsc	status,0,c
 14265  01404C  D011               	goto	l6883
 14266  01404E                     l6881:
 14267                           
 14268                           ; BSR set to: 0
 14269  01404E  0E00               	movlw	0
 14270  014050  0100               	movlb	0	; () banked
 14271  014052  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14272  014054  0E00               	movlw	0
 14273  014056  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 14274  014058  0E00               	movlw	0
 14275  01405A  0100               	movlb	0	; () banked
 14276  01405C  6F7E               	movwf	___fldiv@b& (0+255),b
 14277  01405E  0E00               	movlw	0
 14278  014060  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 14279  014062  0E00               	movlw	0
 14280  014064  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 14281  014066  0E00               	movlw	0
 14282  014068  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 14283  01406A  0E00               	movlw	0
 14284  01406C  0100               	movlb	0	; () banked
 14285  01406E  6F8A               	movwf	___fldiv@sign& (0+255),b
 14286  014070                     l6883:
 14287                           
 14288                           ; BSR set to: 0
 14289  014070  C08F  F095         	movff	___fldiv@new_exp,___fldiv@bexp
 14290                           
 14291                           ; BSR set to: 0
 14292  014074  0100               	movlb	0	; () banked
 14293  014076  A195               	btfss	___fldiv@bexp& (0+255),0,b
 14294  014078  D003               	goto	l6889
 14295                           
 14296                           ; BSR set to: 0
 14297  01407A  0100               	movlb	0	; () banked
 14298  01407C  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 14299  01407E  D002               	goto	l6891
 14300  014080                     l6889:
 14301                           
 14302                           ; BSR set to: 0
 14303  014080  0100               	movlb	0	; () banked
 14304  014082  9F80               	bcf	(___fldiv@b+2)& (0+255),7,b
 14305  014084                     l6891:
 14306                           
 14307                           ; BSR set to: 0
 14308  014084  0100               	movlb	0	; () banked
 14309  014086  90D8               	bcf	status,0,c
 14310  014088  3195               	rrcf	___fldiv@bexp& (0+255),w,b
 14311  01408A  0100               	movlb	0	; () banked
 14312  01408C  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 14313                           
 14314                           ; BSR set to: 0
 14315  01408E  0100               	movlb	0	; () banked
 14316  014090  518A               	movf	___fldiv@sign& (0+255),w,b
 14317  014092  0100               	movlb	0	; () banked
 14318  014094  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14319                           
 14320                           ; BSR set to: 0
 14321  014096  C07E  F07E         	movff	___fldiv@b,?___fldiv
 14322  01409A  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 14323  01409E  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 14324  0140A2  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 14325  0140A6  0012               	return	
 14326  0140A8                     __end_of___fldiv:
 14327                           	opt stack 0
 14328                           tblptru	equ	0xFF8
 14329                           tblptrh	equ	0xFF7
 14330                           tblptrl	equ	0xFF6
 14331                           tablat	equ	0xFF5
 14332                           prodh	equ	0xFF4
 14333                           prodl	equ	0xFF3
 14334                           intcon	equ	0xFF2
 14335                           postinc0	equ	0xFEE
 14336                           wreg	equ	0xFE8
 14337                           indf2	equ	0xFDF
 14338                           postinc2	equ	0xFDE
 14339                           fsr2h	equ	0xFDA
 14340                           fsr2l	equ	0xFD9
 14341                           status	equ	0xFD8
 14342                           
 14343 ;; *************** function _LCD_write_integer *****************
 14344 ;; Defined at:
 14345 ;;		line 210 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;  value           2   40[BANK0 ] int 
 14348 ;;  number_of_di    1   42[BANK0 ] unsigned char 
 14349 ;;  zero_cleanin    1   43[BANK0 ] unsigned char 
 14350 ;; Auto vars:     Size  Location     Type
 14351 ;;  convertedInt    6   49[BANK0 ] unsigned char [6]
 14352 ;;  index           1   55[BANK0 ] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;		None               void
 14355 ;; Registers used:
 14356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;Total ram usage:       16 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    9
 14369 ;; This function calls:
 14370 ;;		_LCD_write_string
 14371 ;;		_itoa
 14372 ;; This function is called by:
 14373 ;;		_LCD_Handler
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text28
 14378  014D46                     __ptext28:
 14379                           	opt stack 0
 14380  014D46                     _LCD_write_integer:
 14381                           	opt stack 20
 14382                           
 14383                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 14384                           
 14385                           ; BSR set to: 0
 14386                           ;incstack = 0
 14387  014D46  EE21  F000         	lfsr	2,LCD_write_integer@F17272
 14388  014D4A  EE10  F091         	lfsr	1,LCD_write_integer@convertedInt
 14389  014D4E  0E05               	movlw	5
 14390  014D50                     u11801:
 14391  014D50  CFDB FFE3          	movff	plusw2,plusw1
 14392  014D54  06E8               	decf	wreg,f,c
 14393  014D56  E2FC               	bc	u11801
 14394                           
 14395                           ;src\LCD_44780.c: 216: unsigned char index;
 14396                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 14397  014D58  0E91               	movlw	low LCD_write_integer@convertedInt
 14398  014D5A  0100               	movlb	0	; () banked
 14399  014D5C  6F80               	movwf	itoa@buf& (0+255),b
 14400  014D5E  0E00               	movlw	high LCD_write_integer@convertedInt
 14401  014D60  0100               	movlb	0	; () banked
 14402  014D62  6F81               	movwf	(itoa@buf+1)& (0+255),b
 14403  014D64  C088  F082         	movff	LCD_write_integer@value,itoa@val
 14404  014D68  C089  F083         	movff	LCD_write_integer@value+1,itoa@val+1
 14405  014D6C  0E00               	movlw	0
 14406  014D6E  0100               	movlb	0	; () banked
 14407  014D70  6F85               	movwf	(itoa@base+1)& (0+255),b
 14408  014D72  0E0A               	movlw	10
 14409  014D74  6F84               	movwf	itoa@base& (0+255),b
 14410  014D76  EC30  F0B1         	call	_itoa	;wreg free
 14411                           
 14412                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 14413  014D7A  0100               	movlb	0	; () banked
 14414  014D7C  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14415  014D7E  0100               	movlb	0	; () banked
 14416  014D80  B4D8               	btfsc	status,2,c
 14417  014D82  D0B8               	goto	l8795
 14418                           
 14419                           ; BSR set to: 0
 14420                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 14421  014D84  0100               	movlb	0	; () banked
 14422  014D86  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14423  014D88  0D01               	mullw	1
 14424  014D8A  0E91               	movlw	low LCD_write_integer@convertedInt
 14425  014D8C  24F3               	addwf	prodl,w,c
 14426  014D8E  6ED9               	movwf	fsr2l,c
 14427  014D90  0E00               	movlw	high LCD_write_integer@convertedInt
 14428  014D92  20F4               	addwfc	prodh,w,c
 14429  014D94  6EDA               	movwf	fsr2h,c
 14430  014D96  0E00               	movlw	0
 14431  014D98  6EDF               	movwf	indf2,c
 14432                           
 14433                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14434  014D9A  D070               	goto	l8791
 14435  014D9C                     l8773:
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14439  014D9C  0100               	movlb	0	; () banked
 14440  014D9E  058A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14441  014DA0  0100               	movlb	0	; () banked
 14442  014DA2  6F97               	movwf	LCD_write_integer@index& (0+255),b
 14443  014DA4                     l8775:
 14444                           
 14445                           ; BSR set to: 0
 14446  014DA4  0100               	movlb	0	; () banked
 14447  014DA6  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14448  014DA8  0100               	movlb	0	; () banked
 14449  014DAA  B4D8               	btfsc	status,2,c
 14450  014DAC  D067               	goto	l8791
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14454                           
 14455                           ; BSR set to: 0
 14456                           
 14457                           ; BSR set to: 0
 14458  014DAE  0EFF               	movlw	255
 14459  014DB0  0100               	movlb	0	; () banked
 14460  014DB2  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14461  014DB4  0EFF               	movlw	255
 14462  014DB6  0100               	movlb	0	; () banked
 14463  014DB8  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14464  014DBA  0100               	movlb	0	; () banked
 14465  014DBC  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14466  014DBE  0100               	movlb	0	; () banked
 14467  014DC0  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14468  014DC2  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14469  014DC4  0100               	movlb	0	; () banked
 14470  014DC6  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14471  014DC8  0100               	movlb	0	; () banked
 14472  014DCA  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14473  014DCC  0100               	movlb	0	; () banked
 14474  014DCE  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14475  014DD0  0100               	movlb	0	; () banked
 14476  014DD2  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14477  014DD4  0E91               	movlw	low LCD_write_integer@convertedInt
 14478  014DD6  0100               	movlb	0	; () banked
 14479  014DD8  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14480  014DDA  6ED9               	movwf	fsr2l,c
 14481  014DDC  0E00               	movlw	high LCD_write_integer@convertedInt
 14482  014DDE  0100               	movlb	0	; () banked
 14483  014DE0  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14484  014DE2  6EDA               	movwf	fsr2h,c
 14485  014DE4  0100               	movlb	0	; () banked
 14486  014DE6  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14487  014DE8  0D01               	mullw	1
 14488  014DEA  0E91               	movlw	low LCD_write_integer@convertedInt
 14489  014DEC  24F3               	addwf	prodl,w,c
 14490  014DEE  6EE1               	movwf	fsr1l,c
 14491  014DF0  0E00               	movlw	high LCD_write_integer@convertedInt
 14492  014DF2  20F4               	addwfc	prodh,w,c
 14493  014DF4  6EE2               	movwf	fsr1h,c
 14494  014DF6  CFDF FFE7          	movff	indf2,indf1
 14495                           
 14496                           ; BSR set to: 0
 14497                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14498  014DFA  0100               	movlb	0	; () banked
 14499  014DFC  058B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14500  014DFE  A4D8               	btfss	status,2,c
 14501  014E00  D01D               	goto	l8785
 14502                           
 14503                           ; BSR set to: 0
 14504                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14505  014E02  0EFF               	movlw	255
 14506  014E04  0100               	movlb	0	; () banked
 14507  014E06  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14508  014E08  0EFF               	movlw	255
 14509  014E0A  0100               	movlb	0	; () banked
 14510  014E0C  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14511  014E0E  0100               	movlb	0	; () banked
 14512  014E10  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14513  014E12  0100               	movlb	0	; () banked
 14514  014E14  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14515  014E16  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14516  014E18  0100               	movlb	0	; () banked
 14517  014E1A  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14518  014E1C  0100               	movlb	0	; () banked
 14519  014E1E  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14520  014E20  0100               	movlb	0	; () banked
 14521  014E22  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14522  014E24  0100               	movlb	0	; () banked
 14523  014E26  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14524  014E28  0E91               	movlw	low LCD_write_integer@convertedInt
 14525  014E2A  0100               	movlb	0	; () banked
 14526  014E2C  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14527  014E2E  6ED9               	movwf	fsr2l,c
 14528  014E30  0E00               	movlw	high LCD_write_integer@convertedInt
 14529  014E32  0100               	movlb	0	; () banked
 14530  014E34  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14531  014E36  6EDA               	movwf	fsr2h,c
 14532  014E38  0E20               	movlw	32
 14533  014E3A  D01C               	goto	L15
 14534  014E3C                     l8785:
 14535                           
 14536                           ; BSR set to: 0
 14537                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14538  014E3C  0EFF               	movlw	255
 14539  014E3E  0100               	movlb	0	; () banked
 14540  014E40  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14541  014E42  0EFF               	movlw	255
 14542  014E44  0100               	movlb	0	; () banked
 14543  014E46  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14544  014E48  0100               	movlb	0	; () banked
 14545  014E4A  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14546  014E4C  0100               	movlb	0	; () banked
 14547  014E4E  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14548  014E50  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14549  014E52  0100               	movlb	0	; () banked
 14550  014E54  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14551  014E56  0100               	movlb	0	; () banked
 14552  014E58  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14553  014E5A  0100               	movlb	0	; () banked
 14554  014E5C  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14555  014E5E  0100               	movlb	0	; () banked
 14556  014E60  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14557  014E62  0E91               	movlw	low LCD_write_integer@convertedInt
 14558  014E64  0100               	movlb	0	; () banked
 14559  014E66  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14560  014E68  6ED9               	movwf	fsr2l,c
 14561  014E6A  0E00               	movlw	high LCD_write_integer@convertedInt
 14562  014E6C  0100               	movlb	0	; () banked
 14563  014E6E  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14564  014E70  6EDA               	movwf	fsr2h,c
 14565  014E72  0E30               	movlw	48
 14566  014E74                     L15:
 14567  014E74  6EDF               	movwf	indf2,c
 14568                           
 14569                           ; BSR set to: 0
 14570                           
 14571                           ; BSR set to: 0
 14572  014E76  0100               	movlb	0	; () banked
 14573  014E78  0797               	decf	LCD_write_integer@index& (0+255),f,b
 14574  014E7A  D794               	goto	l8775
 14575  014E7C                     l8791:
 14576                           
 14577                           ; BSR set to: 0
 14578  014E7C  0EFF               	movlw	255
 14579  014E7E  0100               	movlb	0	; () banked
 14580  014E80  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14581  014E82  0EFF               	movlw	255
 14582  014E84  0100               	movlb	0	; () banked
 14583  014E86  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14584  014E88  0100               	movlb	0	; () banked
 14585  014E8A  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14586  014E8C  0100               	movlb	0	; () banked
 14587  014E8E  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14588  014E90  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14589  014E92  0100               	movlb	0	; () banked
 14590  014E94  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14591  014E96  0100               	movlb	0	; () banked
 14592  014E98  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14593  014E9A  0100               	movlb	0	; () banked
 14594  014E9C  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14595  014E9E  0100               	movlb	0	; () banked
 14596  014EA0  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14597  014EA2  0E91               	movlw	low LCD_write_integer@convertedInt
 14598  014EA4  0100               	movlb	0	; () banked
 14599  014EA6  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14600  014EA8  6ED9               	movwf	fsr2l,c
 14601  014EAA  0E00               	movlw	high LCD_write_integer@convertedInt
 14602  014EAC  0100               	movlb	0	; () banked
 14603  014EAE  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14604  014EB0  6EDA               	movwf	fsr2h,c
 14605  014EB2  0E3A               	movlw	58
 14606  014EB4  60DF               	cpfslt	indf2,c
 14607  014EB6  D772               	goto	l8773
 14608                           
 14609                           ; BSR set to: 0
 14610  014EB8  0EFF               	movlw	255
 14611  014EBA  0100               	movlb	0	; () banked
 14612  014EBC  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14613  014EBE  0EFF               	movlw	255
 14614  014EC0  0100               	movlb	0	; () banked
 14615  014EC2  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14616  014EC4  0100               	movlb	0	; () banked
 14617  014EC6  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14618  014EC8  0100               	movlb	0	; () banked
 14619  014ECA  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14620  014ECC  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14621  014ECE  0100               	movlb	0	; () banked
 14622  014ED0  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14623  014ED2  0100               	movlb	0	; () banked
 14624  014ED4  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14625  014ED6  0100               	movlb	0	; () banked
 14626  014ED8  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14627  014EDA  0100               	movlb	0	; () banked
 14628  014EDC  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14629  014EDE  0E91               	movlw	low LCD_write_integer@convertedInt
 14630  014EE0  0100               	movlb	0	; () banked
 14631  014EE2  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14632  014EE4  6ED9               	movwf	fsr2l,c
 14633  014EE6  0E00               	movlw	high LCD_write_integer@convertedInt
 14634  014EE8  0100               	movlb	0	; () banked
 14635  014EEA  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14636  014EEC  6EDA               	movwf	fsr2h,c
 14637  014EEE  0E2F               	movlw	47
 14638  014EF0  64DF               	cpfsgt	indf2,c
 14639  014EF2  D754               	goto	l8773
 14640  014EF4                     l8795:
 14641                           
 14642                           ; BSR set to: 0
 14643                           ;src\LCD_44780.c: 243: }
 14644                           ;src\LCD_44780.c: 245: }
 14645                           ;src\LCD_44780.c: 246: }
 14646                           ;src\LCD_44780.c: 247: }
 14647                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14648  014EF4  0E91               	movlw	low LCD_write_integer@convertedInt
 14649  014EF6  0100               	movlb	0	; () banked
 14650  014EF8  6F81               	movwf	LCD_write_string@buffer& (0+255),b
 14651  014EFA  0E00               	movlw	high LCD_write_integer@convertedInt
 14652  014EFC  0100               	movlb	0	; () banked
 14653  014EFE  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14654  014F00  EC49  F0B2         	call	_LCD_write_string	;wreg free
 14655  014F04  0012               	return		;funcret
 14656  014F06                     __end_of_LCD_write_integer:
 14657                           	opt stack 0
 14658                           tblptru	equ	0xFF8
 14659                           tblptrh	equ	0xFF7
 14660                           tblptrl	equ	0xFF6
 14661                           tablat	equ	0xFF5
 14662                           prodh	equ	0xFF4
 14663                           prodl	equ	0xFF3
 14664                           intcon	equ	0xFF2
 14665                           postinc0	equ	0xFEE
 14666                           wreg	equ	0xFE8
 14667                           indf1	equ	0xFE7
 14668                           plusw1	equ	0xFE3
 14669                           fsr1h	equ	0xFE2
 14670                           fsr1l	equ	0xFE1
 14671                           indf2	equ	0xFDF
 14672                           postinc2	equ	0xFDE
 14673                           plusw2	equ	0xFDB
 14674                           fsr2h	equ	0xFDA
 14675                           fsr2l	equ	0xFD9
 14676                           status	equ	0xFD8
 14677                           
 14678 ;; *************** function _itoa *****************
 14679 ;; Defined at:
 14680 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;  buf             2   32[BANK0 ] PTR unsigned char 
 14683 ;;		 -> LCD_write_integer@convertedInt(6), 
 14684 ;;  val             2   34[BANK0 ] int 
 14685 ;;  base            2   36[BANK0 ] int 
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;  cp              2   38[BANK0 ] PTR unsigned char 
 14688 ;;		 -> LCD_write_integer@convertedInt(6), 
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  2   32[BANK0 ] PTR unsigned char 
 14691 ;; Registers used:
 14692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/0
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14698 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14702 ;;Total ram usage:        8 bytes
 14703 ;; Hardware stack levels used:    1
 14704 ;; Hardware stack levels required when called:    5
 14705 ;; This function calls:
 14706 ;;		_utoa
 14707 ;; This function is called by:
 14708 ;;		_LCD_write_integer
 14709 ;; This function uses a non-reentrant model
 14710 ;;
 14711                           
 14712                           	psect	text29
 14713  016260                     __ptext29:
 14714                           	opt stack 0
 14715  016260                     _itoa:
 14716                           	opt stack 23
 14717                           
 14718                           ;incstack = 0
 14719  016260  C080  F086         	movff	itoa@buf,itoa@cp
 14720  016264  C081  F087         	movff	itoa@buf+1,itoa@cp+1
 14721  016268  0100               	movlb	0	; () banked
 14722  01626A  AF83               	btfss	(itoa@val+1)& (0+255),7,b
 14723  01626C  D00E               	goto	l5823
 14724                           
 14725                           ; BSR set to: 0
 14726  01626E  C080  FFD9         	movff	itoa@buf,fsr2l
 14727  016272  C081  FFDA         	movff	itoa@buf+1,fsr2h
 14728  016276  0E2D               	movlw	45
 14729  016278  6EDF               	movwf	indf2,c
 14730                           
 14731                           ; BSR set to: 0
 14732  01627A  0100               	movlb	0	; () banked
 14733  01627C  4B80               	infsnz	itoa@buf& (0+255),f,b
 14734  01627E  2B81               	incf	(itoa@buf+1)& (0+255),f,b
 14735                           
 14736                           ; BSR set to: 0
 14737  016280  0100               	movlb	0	; () banked
 14738  016282  6D82               	negf	itoa@val& (0+255),b
 14739  016284  1F83               	comf	(itoa@val+1)& (0+255),f,b
 14740  016286  B0D8               	btfsc	status,0,c
 14741  016288  2B83               	incf	(itoa@val+1)& (0+255),f,b
 14742  01628A                     l5823:
 14743                           
 14744                           ; BSR set to: 0
 14745  01628A  C080  F077         	movff	itoa@buf,utoa@buf
 14746  01628E  C081  F078         	movff	itoa@buf+1,utoa@buf+1
 14747  016292  C082  F079         	movff	itoa@val,utoa@val
 14748  016296  C083  F07A         	movff	itoa@val+1,utoa@val+1
 14749  01629A  C084  F07B         	movff	itoa@base,utoa@base
 14750  01629E  C085  F07C         	movff	itoa@base+1,utoa@base+1
 14751  0162A2  ECC7  F0AC         	call	_utoa	;wreg free
 14752  0162A6  0012               	return	
 14753  0162A8                     __end_of_itoa:
 14754                           	opt stack 0
 14755                           tblptru	equ	0xFF8
 14756                           tblptrh	equ	0xFF7
 14757                           tblptrl	equ	0xFF6
 14758                           tablat	equ	0xFF5
 14759                           prodh	equ	0xFF4
 14760                           prodl	equ	0xFF3
 14761                           intcon	equ	0xFF2
 14762                           postinc0	equ	0xFEE
 14763                           wreg	equ	0xFE8
 14764                           indf1	equ	0xFE7
 14765                           plusw1	equ	0xFE3
 14766                           fsr1h	equ	0xFE2
 14767                           fsr1l	equ	0xFE1
 14768                           indf2	equ	0xFDF
 14769                           postinc2	equ	0xFDE
 14770                           plusw2	equ	0xFDB
 14771                           fsr2h	equ	0xFDA
 14772                           fsr2l	equ	0xFD9
 14773                           status	equ	0xFD8
 14774                           
 14775 ;; *************** function _utoa *****************
 14776 ;; Defined at:
 14777 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  buf             2   23[BANK0 ] PTR unsigned char 
 14780 ;;		 -> LCD_write_integer@convertedInt(6), 
 14781 ;;  val             2   25[BANK0 ] unsigned int 
 14782 ;;  base            2   27[BANK0 ] int 
 14783 ;; Auto vars:     Size  Location     Type
 14784 ;;  v               2   29[BANK0 ] unsigned int 
 14785 ;;  c               1   31[BANK0 ] unsigned char 
 14786 ;; Return value:  Size  Location     Type
 14787 ;;                  2   23[BANK0 ] PTR unsigned char 
 14788 ;; Registers used:
 14789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14790 ;; Tracked objects:
 14791 ;;		On entry : 0/0
 14792 ;;		On exit  : 0/0
 14793 ;;		Unchanged: 0/0
 14794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14795 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14798 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14799 ;;Total ram usage:        9 bytes
 14800 ;; Hardware stack levels used:    1
 14801 ;; Hardware stack levels required when called:    4
 14802 ;; This function calls:
 14803 ;;		___lwdiv
 14804 ;;		___lwmod
 14805 ;; This function is called by:
 14806 ;;		_itoa
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           	psect	text30
 14811  01598E                     __ptext30:
 14812                           	opt stack 0
 14813  01598E                     _utoa:
 14814                           	opt stack 23
 14815                           
 14816                           ;incstack = 0
 14817  01598E  C079  F07D         	movff	utoa@val,utoa@v
 14818  015992  C07A  F07E         	movff	utoa@val+1,utoa@v+1
 14819  015996                     l5345:
 14820  015996  C07D  F070         	movff	utoa@v,___lwdiv@dividend
 14821  01599A  C07E  F071         	movff	utoa@v+1,___lwdiv@dividend+1
 14822  01599E  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14823  0159A2  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14824  0159A6  EC1C  F0AF         	call	___lwdiv	;wreg free
 14825  0159AA  C070  F07D         	movff	?___lwdiv,utoa@v
 14826  0159AE  C071  F07E         	movff	?___lwdiv+1,utoa@v+1
 14827  0159B2  0100               	movlb	0	; () banked
 14828  0159B4  4B77               	infsnz	utoa@buf& (0+255),f,b
 14829  0159B6  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14830                           
 14831                           ; BSR set to: 0
 14832  0159B8  0100               	movlb	0	; () banked
 14833  0159BA  517D               	movf	utoa@v& (0+255),w,b
 14834  0159BC  0100               	movlb	0	; () banked
 14835  0159BE  117E               	iorwf	(utoa@v+1)& (0+255),w,b
 14836  0159C0  A4D8               	btfss	status,2,c
 14837  0159C2  D7E9               	goto	l5345
 14838                           
 14839                           ; BSR set to: 0
 14840                           
 14841                           ; BSR set to: 0
 14842  0159C4  C077  FFD9         	movff	utoa@buf,fsr2l
 14843  0159C8  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14844  0159CC  0E00               	movlw	0
 14845  0159CE  6EDF               	movwf	indf2,c
 14846                           
 14847                           ; BSR set to: 0
 14848  0159D0  0100               	movlb	0	; () banked
 14849  0159D2  0777               	decf	utoa@buf& (0+255),f,b
 14850  0159D4  A0D8               	btfss	status,0,c
 14851  0159D6  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14852  0159D8                     l5355:
 14853                           
 14854                           ; BSR set to: 0
 14855  0159D8  C079  F070         	movff	utoa@val,___lwmod@dividend
 14856  0159DC  C07A  F071         	movff	utoa@val+1,___lwmod@dividend+1
 14857  0159E0  C07B  F072         	movff	utoa@base,___lwmod@divisor
 14858  0159E4  C07C  F073         	movff	utoa@base+1,___lwmod@divisor+1
 14859  0159E8  EC8B  F0B0         	call	___lwmod	;wreg free
 14860  0159EC  0100               	movlb	0	; () banked
 14861  0159EE  5170               	movf	?___lwmod& (0+255),w,b
 14862  0159F0  0100               	movlb	0	; () banked
 14863  0159F2  6F7F               	movwf	utoa@c& (0+255),b
 14864                           
 14865                           ; BSR set to: 0
 14866  0159F4  C079  F070         	movff	utoa@val,___lwdiv@dividend
 14867  0159F8  C07A  F071         	movff	utoa@val+1,___lwdiv@dividend+1
 14868  0159FC  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14869  015A00  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14870  015A04  EC1C  F0AF         	call	___lwdiv	;wreg free
 14871  015A08  C070  F079         	movff	?___lwdiv,utoa@val
 14872  015A0C  C071  F07A         	movff	?___lwdiv+1,utoa@val+1
 14873  015A10  0E09               	movlw	9
 14874  015A12  0100               	movlb	0	; () banked
 14875  015A14  657F               	cpfsgt	utoa@c& (0+255),b
 14876  015A16  D003               	goto	l1435
 14877                           
 14878                           ; BSR set to: 0
 14879  015A18  0E07               	movlw	7
 14880  015A1A  0100               	movlb	0	; () banked
 14881  015A1C  277F               	addwf	utoa@c& (0+255),f,b
 14882  015A1E                     l1435:
 14883                           
 14884                           ; BSR set to: 0
 14885  015A1E  0E30               	movlw	48
 14886  015A20  0100               	movlb	0	; () banked
 14887  015A22  277F               	addwf	utoa@c& (0+255),f,b
 14888                           
 14889                           ; BSR set to: 0
 14890  015A24  C077  FFD9         	movff	utoa@buf,fsr2l
 14891  015A28  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14892  015A2C  C07F  FFDF         	movff	utoa@c,indf2
 14893                           
 14894                           ; BSR set to: 0
 14895  015A30  0100               	movlb	0	; () banked
 14896  015A32  0777               	decf	utoa@buf& (0+255),f,b
 14897  015A34  A0D8               	btfss	status,0,c
 14898  015A36  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14899                           
 14900                           ; BSR set to: 0
 14901  015A38  0100               	movlb	0	; () banked
 14902  015A3A  5179               	movf	utoa@val& (0+255),w,b
 14903  015A3C  0100               	movlb	0	; () banked
 14904  015A3E  117A               	iorwf	(utoa@val+1)& (0+255),w,b
 14905  015A40  A4D8               	btfss	status,2,c
 14906  015A42  D7CA               	goto	l5355
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;	Return value of _utoa is never used
 14910                           
 14911                           ; BSR set to: 0
 14912  015A44  0100               	movlb	0	; () banked
 14913  015A46  4B77               	infsnz	utoa@buf& (0+255),f,b
 14914  015A48  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14915  015A4A  0012               	return	
 14916  015A4C                     __end_of_utoa:
 14917                           	opt stack 0
 14918                           tblptru	equ	0xFF8
 14919                           tblptrh	equ	0xFF7
 14920                           tblptrl	equ	0xFF6
 14921                           tablat	equ	0xFF5
 14922                           prodh	equ	0xFF4
 14923                           prodl	equ	0xFF3
 14924                           intcon	equ	0xFF2
 14925                           postinc0	equ	0xFEE
 14926                           wreg	equ	0xFE8
 14927                           indf1	equ	0xFE7
 14928                           plusw1	equ	0xFE3
 14929                           fsr1h	equ	0xFE2
 14930                           fsr1l	equ	0xFE1
 14931                           indf2	equ	0xFDF
 14932                           postinc2	equ	0xFDE
 14933                           plusw2	equ	0xFDB
 14934                           fsr2h	equ	0xFDA
 14935                           fsr2l	equ	0xFD9
 14936                           status	equ	0xFD8
 14937                           
 14938 ;; *************** function ___lwmod *****************
 14939 ;; Defined at:
 14940 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;  dividend        2   16[BANK0 ] unsigned int 
 14943 ;;  divisor         2   18[BANK0 ] unsigned int 
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;  counter         1   20[BANK0 ] unsigned char 
 14946 ;; Return value:  Size  Location     Type
 14947 ;;                  2   16[BANK0 ] unsigned int 
 14948 ;; Registers used:
 14949 ;;		wreg, status,2, status,0
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14958 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14959 ;;Total ram usage:        5 bytes
 14960 ;; Hardware stack levels used:    1
 14961 ;; Hardware stack levels required when called:    3
 14962 ;; This function calls:
 14963 ;;		Nothing
 14964 ;; This function is called by:
 14965 ;;		_utoa
 14966 ;; This function uses a non-reentrant model
 14967 ;;
 14968                           
 14969                           	psect	text31
 14970  016116                     __ptext31:
 14971                           	opt stack 0
 14972  016116                     ___lwmod:
 14973                           	opt stack 23
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;incstack = 0
 14977  016116  0100               	movlb	0	; () banked
 14978  016118  5172               	movf	___lwmod@divisor& (0+255),w,b
 14979  01611A  0100               	movlb	0	; () banked
 14980  01611C  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14981  01611E  B4D8               	btfsc	status,2,c
 14982  016120  D026               	goto	l1524
 14983                           
 14984                           ; BSR set to: 0
 14985  016122  0E01               	movlw	1
 14986  016124  0100               	movlb	0	; () banked
 14987  016126  6F74               	movwf	___lwmod@counter& (0+255),b
 14988  016128  D006               	goto	l4903
 14989  01612A                     l4901:
 14990                           
 14991                           ; BSR set to: 0
 14992  01612A  0100               	movlb	0	; () banked
 14993  01612C  90D8               	bcf	status,0,c
 14994  01612E  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 14995  016130  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14996  016132  0100               	movlb	0	; () banked
 14997  016134  2B74               	incf	___lwmod@counter& (0+255),f,b
 14998  016136                     l4903:
 14999                           
 15000                           ; BSR set to: 0
 15001  016136  0100               	movlb	0	; () banked
 15002  016138  AF73               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15003  01613A  D7F7               	goto	l4901
 15004  01613C                     l4905:
 15005                           
 15006                           ; BSR set to: 0
 15007  01613C  0100               	movlb	0	; () banked
 15008  01613E  5172               	movf	___lwmod@divisor& (0+255),w,b
 15009  016140  0100               	movlb	0	; () banked
 15010  016142  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 15011  016144  0100               	movlb	0	; () banked
 15012  016146  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15013  016148  0100               	movlb	0	; () banked
 15014  01614A  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15015  01614C  A0D8               	btfss	status,0,c
 15016  01614E  D008               	goto	l4909
 15017                           
 15018                           ; BSR set to: 0
 15019  016150  0100               	movlb	0	; () banked
 15020  016152  5172               	movf	___lwmod@divisor& (0+255),w,b
 15021  016154  0100               	movlb	0	; () banked
 15022  016156  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 15023  016158  0100               	movlb	0	; () banked
 15024  01615A  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15025  01615C  0100               	movlb	0	; () banked
 15026  01615E  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15027  016160                     l4909:
 15028                           
 15029                           ; BSR set to: 0
 15030  016160  0100               	movlb	0	; () banked
 15031  016162  90D8               	bcf	status,0,c
 15032  016164  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15033  016166  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 15034                           
 15035                           ; BSR set to: 0
 15036  016168  0100               	movlb	0	; () banked
 15037  01616A  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 15038  01616C  D7E7               	goto	l4905
 15039  01616E                     l1524:
 15040                           
 15041                           ; BSR set to: 0
 15042  01616E  C070  F070         	movff	___lwmod@dividend,?___lwmod
 15043  016172  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 15044                           
 15045                           ; BSR set to: 0
 15046  016176  0012               	return		;funcret
 15047  016178                     __end_of___lwmod:
 15048                           	opt stack 0
 15049                           tblptru	equ	0xFF8
 15050                           tblptrh	equ	0xFF7
 15051                           tblptrl	equ	0xFF6
 15052                           tablat	equ	0xFF5
 15053                           prodh	equ	0xFF4
 15054                           prodl	equ	0xFF3
 15055                           intcon	equ	0xFF2
 15056                           postinc0	equ	0xFEE
 15057                           wreg	equ	0xFE8
 15058                           indf1	equ	0xFE7
 15059                           plusw1	equ	0xFE3
 15060                           fsr1h	equ	0xFE2
 15061                           fsr1l	equ	0xFE1
 15062                           indf2	equ	0xFDF
 15063                           postinc2	equ	0xFDE
 15064                           plusw2	equ	0xFDB
 15065                           fsr2h	equ	0xFDA
 15066                           fsr2l	equ	0xFD9
 15067                           status	equ	0xFD8
 15068                           
 15069 ;; *************** function ___lwdiv *****************
 15070 ;; Defined at:
 15071 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15072 ;; Parameters:    Size  Location     Type
 15073 ;;  dividend        2   16[BANK0 ] unsigned int 
 15074 ;;  divisor         2   18[BANK0 ] unsigned int 
 15075 ;; Auto vars:     Size  Location     Type
 15076 ;;  quotient        2   20[BANK0 ] unsigned int 
 15077 ;;  counter         1   22[BANK0 ] unsigned char 
 15078 ;; Return value:  Size  Location     Type
 15079 ;;                  2   16[BANK0 ] unsigned int 
 15080 ;; Registers used:
 15081 ;;		wreg, status,2, status,0
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15087 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;Total ram usage:        7 bytes
 15092 ;; Hardware stack levels used:    1
 15093 ;; Hardware stack levels required when called:    3
 15094 ;; This function calls:
 15095 ;;		Nothing
 15096 ;; This function is called by:
 15097 ;;		_utoa
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101                           	psect	text32
 15102  015E38                     __ptext32:
 15103                           	opt stack 0
 15104  015E38                     ___lwdiv:
 15105                           	opt stack 23
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;incstack = 0
 15109  015E38  0E00               	movlw	0
 15110  015E3A  0100               	movlb	0	; () banked
 15111  015E3C  6F75               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15112  015E3E  0E00               	movlw	0
 15113  015E40  6F74               	movwf	___lwdiv@quotient& (0+255),b
 15114                           
 15115                           ; BSR set to: 0
 15116  015E42  0100               	movlb	0	; () banked
 15117  015E44  5172               	movf	___lwdiv@divisor& (0+255),w,b
 15118  015E46  0100               	movlb	0	; () banked
 15119  015E48  1173               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15120  015E4A  B4D8               	btfsc	status,2,c
 15121  015E4C  D02C               	goto	l1514
 15122                           
 15123                           ; BSR set to: 0
 15124  015E4E  0E01               	movlw	1
 15125  015E50  0100               	movlb	0	; () banked
 15126  015E52  6F76               	movwf	___lwdiv@counter& (0+255),b
 15127  015E54  D006               	goto	l4883
 15128  015E56                     l4881:
 15129                           
 15130                           ; BSR set to: 0
 15131  015E56  0100               	movlb	0	; () banked
 15132  015E58  90D8               	bcf	status,0,c
 15133  015E5A  3772               	rlcf	___lwdiv@divisor& (0+255),f,b
 15134  015E5C  3773               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15135  015E5E  0100               	movlb	0	; () banked
 15136  015E60  2B76               	incf	___lwdiv@counter& (0+255),f,b
 15137  015E62                     l4883:
 15138                           
 15139                           ; BSR set to: 0
 15140  015E62  0100               	movlb	0	; () banked
 15141  015E64  AF73               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15142  015E66  D7F7               	goto	l4881
 15143  015E68                     l4885:
 15144                           
 15145                           ; BSR set to: 0
 15146  015E68  0100               	movlb	0	; () banked
 15147  015E6A  90D8               	bcf	status,0,c
 15148  015E6C  3774               	rlcf	___lwdiv@quotient& (0+255),f,b
 15149  015E6E  3775               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15150                           
 15151                           ; BSR set to: 0
 15152  015E70  0100               	movlb	0	; () banked
 15153  015E72  5172               	movf	___lwdiv@divisor& (0+255),w,b
 15154  015E74  0100               	movlb	0	; () banked
 15155  015E76  5D70               	subwf	___lwdiv@dividend& (0+255),w,b
 15156  015E78  0100               	movlb	0	; () banked
 15157  015E7A  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15158  015E7C  0100               	movlb	0	; () banked
 15159  015E7E  5971               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15160  015E80  A0D8               	btfss	status,0,c
 15161  015E82  D00A               	goto	l4893
 15162                           
 15163                           ; BSR set to: 0
 15164  015E84  0100               	movlb	0	; () banked
 15165  015E86  5172               	movf	___lwdiv@divisor& (0+255),w,b
 15166  015E88  0100               	movlb	0	; () banked
 15167  015E8A  5F70               	subwf	___lwdiv@dividend& (0+255),f,b
 15168  015E8C  0100               	movlb	0	; () banked
 15169  015E8E  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15170  015E90  0100               	movlb	0	; () banked
 15171  015E92  5B71               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15172                           
 15173                           ; BSR set to: 0
 15174  015E94  0100               	movlb	0	; () banked
 15175  015E96  8174               	bsf	___lwdiv@quotient& (0+255),0,b
 15176  015E98                     l4893:
 15177                           
 15178                           ; BSR set to: 0
 15179  015E98  0100               	movlb	0	; () banked
 15180  015E9A  90D8               	bcf	status,0,c
 15181  015E9C  3373               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15182  015E9E  3372               	rrcf	___lwdiv@divisor& (0+255),f,b
 15183                           
 15184                           ; BSR set to: 0
 15185  015EA0  0100               	movlb	0	; () banked
 15186  015EA2  2F76               	decfsz	___lwdiv@counter& (0+255),f,b
 15187  015EA4  D7E1               	goto	l4885
 15188  015EA6                     l1514:
 15189                           
 15190                           ; BSR set to: 0
 15191  015EA6  C074  F070         	movff	___lwdiv@quotient,?___lwdiv
 15192  015EAA  C075  F071         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15193                           
 15194                           ; BSR set to: 0
 15195  015EAE  0012               	return		;funcret
 15196  015EB0                     __end_of___lwdiv:
 15197                           	opt stack 0
 15198                           tblptru	equ	0xFF8
 15199                           tblptrh	equ	0xFF7
 15200                           tblptrl	equ	0xFF6
 15201                           tablat	equ	0xFF5
 15202                           prodh	equ	0xFF4
 15203                           prodl	equ	0xFF3
 15204                           intcon	equ	0xFF2
 15205                           postinc0	equ	0xFEE
 15206                           wreg	equ	0xFE8
 15207                           indf1	equ	0xFE7
 15208                           plusw1	equ	0xFE3
 15209                           fsr1h	equ	0xFE2
 15210                           fsr1l	equ	0xFE1
 15211                           indf2	equ	0xFDF
 15212                           postinc2	equ	0xFDE
 15213                           plusw2	equ	0xFDB
 15214                           fsr2h	equ	0xFDA
 15215                           fsr2l	equ	0xFD9
 15216                           status	equ	0xFD8
 15217                           
 15218 ;; *************** function _LCD_write_string *****************
 15219 ;; Defined at:
 15220 ;;		line 194 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 15223 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;		None               void
 15228 ;; Registers used:
 15229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;Total ram usage:        2 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    8
 15242 ;; This function calls:
 15243 ;;		_LCD_write_char
 15244 ;; This function is called by:
 15245 ;;		_LCD_write_integer
 15246 ;;		_LCD_Handler
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           	psect	text33
 15251  016492                     __ptext33:
 15252                           	opt stack 0
 15253  016492                     _LCD_write_string:
 15254                           	opt stack 21
 15255                           
 15256                           ;src\LCD_44780.c: 197: while(*buffer){
 15257                           
 15258                           ; BSR set to: 0
 15259                           ;incstack = 0
 15260  016492  D00A               	goto	l8401
 15261  016494                     l8397:
 15262                           
 15263                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 15264  016494  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15265  016498  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15266  01649C  50DF               	movf	indf2,w,c
 15267  01649E  ECD1  F0AE         	call	_LCD_write_char
 15268                           
 15269                           ;src\LCD_44780.c: 202: buffer++;
 15270  0164A2  0100               	movlb	0	; () banked
 15271  0164A4  4B81               	infsnz	LCD_write_string@buffer& (0+255),f,b
 15272  0164A6  2B82               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 15273  0164A8                     l8401:
 15274  0164A8  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15275  0164AC  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15276  0164B0  50DF               	movf	indf2,w,c
 15277  0164B2  B4D8               	btfsc	status,2,c
 15278  0164B4  0012               	return	
 15279  0164B6  D7EE               	goto	l8397
 15280  0164B8                     __end_of_LCD_write_string:
 15281                           	opt stack 0
 15282                           tblptru	equ	0xFF8
 15283                           tblptrh	equ	0xFF7
 15284                           tblptrl	equ	0xFF6
 15285                           tablat	equ	0xFF5
 15286                           prodh	equ	0xFF4
 15287                           prodl	equ	0xFF3
 15288                           intcon	equ	0xFF2
 15289                           postinc0	equ	0xFEE
 15290                           wreg	equ	0xFE8
 15291                           indf1	equ	0xFE7
 15292                           plusw1	equ	0xFE3
 15293                           fsr1h	equ	0xFE2
 15294                           fsr1l	equ	0xFE1
 15295                           indf2	equ	0xFDF
 15296                           postinc2	equ	0xFDE
 15297                           plusw2	equ	0xFDB
 15298                           fsr2h	equ	0xFDA
 15299                           fsr2l	equ	0xFD9
 15300                           status	equ	0xFD8
 15301                           
 15302 ;; *************** function _LCD_goto_xy *****************
 15303 ;; Defined at:
 15304 ;;		line 136 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15305 ;; Parameters:    Size  Location     Type
 15306 ;;  x               1    wreg     unsigned char 
 15307 ;;  y               1   31[BANK0 ] unsigned char 
 15308 ;; Auto vars:     Size  Location     Type
 15309 ;;  x               1   32[BANK0 ] unsigned char 
 15310 ;; Return value:  Size  Location     Type
 15311 ;;		None               void
 15312 ;; Registers used:
 15313 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15314 ;; Tracked objects:
 15315 ;;		On entry : 0/0
 15316 ;;		On exit  : 0/0
 15317 ;;		Unchanged: 0/0
 15318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15319 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;Total ram usage:        2 bytes
 15324 ;; Hardware stack levels used:    1
 15325 ;; Hardware stack levels required when called:    8
 15326 ;; This function calls:
 15327 ;;		_LCD_goto_line
 15328 ;;		_LCD_shift_cursor
 15329 ;; This function is called by:
 15330 ;;		_LCD_Handler
 15331 ;; This function uses a non-reentrant model
 15332 ;;
 15333                           
 15334                           	psect	text34
 15335  016538                     __ptext34:
 15336                           	opt stack 0
 15337  016538                     _LCD_goto_xy:
 15338                           	opt stack 21
 15339                           
 15340                           ;incstack = 0
 15341                           ;LCD_goto_xy@x stored from wreg
 15342  016538  0100               	movlb	0	; () banked
 15343  01653A  6F80               	movwf	LCD_goto_xy@x& (0+255),b
 15344                           
 15345                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15346  01653C  0100               	movlb	0	; () banked
 15347  01653E  517F               	movf	LCD_goto_xy@y& (0+255),w,b
 15348  016540  ECF2  F0AB         	call	_LCD_goto_line
 15349                           
 15350                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15351  016544  0100               	movlb	0	; () banked
 15352  016546  0580               	decf	LCD_goto_xy@x& (0+255),w,b
 15353  016548  0100               	movlb	0	; () banked
 15354  01654A  6F7C               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15355  01654C  0E01               	movlw	1
 15356  01654E  ECE6  F0B0         	call	_LCD_shift_cursor
 15357  016552  0012               	return		;funcret
 15358  016554                     __end_of_LCD_goto_xy:
 15359                           	opt stack 0
 15360                           tblptru	equ	0xFF8
 15361                           tblptrh	equ	0xFF7
 15362                           tblptrl	equ	0xFF6
 15363                           tablat	equ	0xFF5
 15364                           prodh	equ	0xFF4
 15365                           prodl	equ	0xFF3
 15366                           intcon	equ	0xFF2
 15367                           postinc0	equ	0xFEE
 15368                           wreg	equ	0xFE8
 15369                           indf1	equ	0xFE7
 15370                           plusw1	equ	0xFE3
 15371                           fsr1h	equ	0xFE2
 15372                           fsr1l	equ	0xFE1
 15373                           indf2	equ	0xFDF
 15374                           postinc2	equ	0xFDE
 15375                           plusw2	equ	0xFDB
 15376                           fsr2h	equ	0xFDA
 15377                           fsr2l	equ	0xFD9
 15378                           status	equ	0xFD8
 15379                           
 15380 ;; *************** function _LCD_shift_cursor *****************
 15381 ;; Defined at:
 15382 ;;		line 98 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;  shift           1    wreg     unsigned char 
 15385 ;;  number_of_sh    1   28[BANK0 ] unsigned char 
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;  shift           1   29[BANK0 ] unsigned char 
 15388 ;;  i               1   30[BANK0 ] unsigned char 
 15389 ;; Return value:  Size  Location     Type
 15390 ;;		None               void
 15391 ;; Registers used:
 15392 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15393 ;; Tracked objects:
 15394 ;;		On entry : 0/0
 15395 ;;		On exit  : 0/0
 15396 ;;		Unchanged: 0/0
 15397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15398 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15402 ;;Total ram usage:        3 bytes
 15403 ;; Hardware stack levels used:    1
 15404 ;; Hardware stack levels required when called:    7
 15405 ;; This function calls:
 15406 ;;		_LCD_send_command
 15407 ;; This function is called by:
 15408 ;;		_LCD_goto_xy
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412                           	psect	text35
 15413  0161CC                     __ptext35:
 15414                           	opt stack 0
 15415  0161CC                     _LCD_shift_cursor:
 15416                           	opt stack 21
 15417                           
 15418                           ;incstack = 0
 15419                           ;LCD_shift_cursor@shift stored from wreg
 15420  0161CC  0100               	movlb	0	; () banked
 15421  0161CE  6F7D               	movwf	LCD_shift_cursor@shift& (0+255),b
 15422                           
 15423                           ;src\LCD_44780.c: 100: unsigned char i;
 15424                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15425  0161D0  0E00               	movlw	0
 15426  0161D2  0100               	movlb	0	; () banked
 15427  0161D4  6F7E               	movwf	LCD_shift_cursor@i& (0+255),b
 15428  0161D6  D019               	goto	l8381
 15429  0161D8                     l8377:
 15430                           
 15431                           ; BSR set to: 0
 15432                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15433  0161D8  0E00               	movlw	0
 15434  0161DA  0100               	movlb	0	; () banked
 15435  0161DC  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15436  0161DE  0E00               	movlw	0
 15437  0161E0  0100               	movlb	0	; () banked
 15438  0161E2  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15439  0161E4  0E01               	movlw	1
 15440  0161E6  0100               	movlb	0	; () banked
 15441  0161E8  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15442  0161EA  0E00               	movlw	0
 15443  0161EC  EC77  F0B1         	call	_LCD_send_command
 15444                           
 15445                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15446  0161F0  C07D  F078         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15447  0161F4  0E00               	movlw	0
 15448  0161F6  0100               	movlb	0	; () banked
 15449  0161F8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15450  0161FA  0E00               	movlw	0
 15451  0161FC  0100               	movlb	0	; () banked
 15452  0161FE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15453  016200  0E00               	movlw	0
 15454  016202  EC77  F0B1         	call	_LCD_send_command
 15455  016206  0100               	movlb	0	; () banked
 15456  016208  2B7E               	incf	LCD_shift_cursor@i& (0+255),f,b
 15457  01620A                     l8381:
 15458                           
 15459                           ; BSR set to: 0
 15460  01620A  0100               	movlb	0	; () banked
 15461  01620C  517C               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15462  01620E  0100               	movlb	0	; () banked
 15463  016210  5D7E               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15464  016212  B0D8               	btfsc	status,0,c
 15465  016214  0012               	return	
 15466  016216  D7E0               	goto	l8377
 15467  016218                     __end_of_LCD_shift_cursor:
 15468                           	opt stack 0
 15469                           tblptru	equ	0xFF8
 15470                           tblptrh	equ	0xFF7
 15471                           tblptrl	equ	0xFF6
 15472                           tablat	equ	0xFF5
 15473                           prodh	equ	0xFF4
 15474                           prodl	equ	0xFF3
 15475                           intcon	equ	0xFF2
 15476                           postinc0	equ	0xFEE
 15477                           wreg	equ	0xFE8
 15478                           indf1	equ	0xFE7
 15479                           plusw1	equ	0xFE3
 15480                           fsr1h	equ	0xFE2
 15481                           fsr1l	equ	0xFE1
 15482                           indf2	equ	0xFDF
 15483                           postinc2	equ	0xFDE
 15484                           plusw2	equ	0xFDB
 15485                           fsr2h	equ	0xFDA
 15486                           fsr2l	equ	0xFD9
 15487                           status	equ	0xFD8
 15488                           
 15489 ;; *************** function _LCD_Gap *****************
 15490 ;; Defined at:
 15491 ;;		line 506 in file "RemoteCan.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;		None
 15494 ;; Auto vars:     Size  Location     Type
 15495 ;;		None
 15496 ;; Return value:  Size  Location     Type
 15497 ;;		None               void
 15498 ;; Registers used:
 15499 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15500 ;; Tracked objects:
 15501 ;;		On entry : 0/0
 15502 ;;		On exit  : 0/0
 15503 ;;		Unchanged: 0/0
 15504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;Total ram usage:        0 bytes
 15510 ;; Hardware stack levels used:    1
 15511 ;; Hardware stack levels required when called:    9
 15512 ;; This function calls:
 15513 ;;		_LCD_clear
 15514 ;;		_LCD_goto_line
 15515 ;;		_LCD_initialize
 15516 ;;		_LCD_write_message
 15517 ;; This function is called by:
 15518 ;;		_main
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           	psect	text36
 15523  015FEA                     __ptext36:
 15524                           	opt stack 0
 15525  015FEA                     _LCD_Gap:
 15526                           	opt stack 21
 15527                           
 15528                           ;RemoteCan.c: 507: LCD_initialize(16);
 15529                           
 15530                           ; BSR set to: 0
 15531                           ;incstack = 0
 15532  015FEA  0E10               	movlw	16
 15533  015FEC  ECB5  F0AA         	call	_LCD_initialize
 15534                           
 15535                           ;RemoteCan.c: 508: LCD_clear();
 15536  015FF0  EC1B  F0B2         	call	_LCD_clear	;wreg free
 15537                           
 15538                           ;RemoteCan.c: 509: LCD_goto_line(1);
 15539  015FF4  0E01               	movlw	1
 15540  015FF6  ECF2  F0AB         	call	_LCD_goto_line
 15541                           
 15542                           ;RemoteCan.c: 510: LCD_write_message("= PARKING MESSAGES =");
 15543  015FFA  0E40               	movlw	low STR_16
 15544  015FFC  0100               	movlb	0	; () banked
 15545  015FFE  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15546  016000  0EFF               	movlw	high STR_16
 15547  016002  0100               	movlb	0	; () banked
 15548  016004  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15549  016006  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15550                           
 15551                           ;RemoteCan.c: 511: LCD_goto_line(2);
 15552  01600A  0E02               	movlw	2
 15553  01600C  ECF2  F0AB         	call	_LCD_goto_line
 15554                           
 15555                           ;RemoteCan.c: 512: LCD_write_message(" Parking space FOUND");
 15556  016010  0E94               	movlw	low STR_17
 15557  016012  0100               	movlb	0	; () banked
 15558  016014  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15559  016016  0EFF               	movlw	high STR_17
 15560  016018  0100               	movlb	0	; () banked
 15561  01601A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15562  01601C  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15563                           
 15564                           ;RemoteCan.c: 513: LCD_goto_line(3);
 15565  016020  0E03               	movlw	3
 15566  016022  ECF2  F0AB         	call	_LCD_goto_line
 15567                           
 15568                           ;RemoteCan.c: 514: LCD_write_message("->  KEEP MOVING   <-");
 15569  016026  0E01               	movlw	low STR_18
 15570  016028  0100               	movlb	0	; () banked
 15571  01602A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15572  01602C  0EFF               	movlw	high STR_18
 15573  01602E  0100               	movlb	0	; () banked
 15574  016030  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15575  016032  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15576                           
 15577                           ;RemoteCan.c: 515: LCD_goto_line(4);
 15578  016036  0E04               	movlw	4
 15579  016038  ECF2  F0AB         	call	_LCD_goto_line
 15580                           
 15581                           ;RemoteCan.c: 516: LCD_write_message(" until next message ");
 15582  01603C  0EAD               	movlw	low STR_19
 15583  01603E  0100               	movlb	0	; () banked
 15584  016040  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15585  016042  0EFE               	movlw	high STR_19
 15586  016044  0100               	movlb	0	; () banked
 15587  016046  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15588  016048  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15589  01604C  0012               	return		;funcret
 15590  01604E                     __end_of_LCD_Gap:
 15591                           	opt stack 0
 15592                           tblptru	equ	0xFF8
 15593                           tblptrh	equ	0xFF7
 15594                           tblptrl	equ	0xFF6
 15595                           tablat	equ	0xFF5
 15596                           prodh	equ	0xFF4
 15597                           prodl	equ	0xFF3
 15598                           intcon	equ	0xFF2
 15599                           postinc0	equ	0xFEE
 15600                           wreg	equ	0xFE8
 15601                           indf1	equ	0xFE7
 15602                           plusw1	equ	0xFE3
 15603                           fsr1h	equ	0xFE2
 15604                           fsr1l	equ	0xFE1
 15605                           indf2	equ	0xFDF
 15606                           postinc2	equ	0xFDE
 15607                           plusw2	equ	0xFDB
 15608                           fsr2h	equ	0xFDA
 15609                           fsr2l	equ	0xFD9
 15610                           status	equ	0xFD8
 15611                           
 15612 ;; *************** function _LCD_Error *****************
 15613 ;; Defined at:
 15614 ;;		line 558 in file "RemoteCan.c"
 15615 ;; Parameters:    Size  Location     Type
 15616 ;;		None
 15617 ;; Auto vars:     Size  Location     Type
 15618 ;;		None
 15619 ;; Return value:  Size  Location     Type
 15620 ;;		None               void
 15621 ;; Registers used:
 15622 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15623 ;; Tracked objects:
 15624 ;;		On entry : 0/0
 15625 ;;		On exit  : 0/0
 15626 ;;		Unchanged: 0/0
 15627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;Total ram usage:        0 bytes
 15633 ;; Hardware stack levels used:    1
 15634 ;; Hardware stack levels required when called:    9
 15635 ;; This function calls:
 15636 ;;		_LCD_clear
 15637 ;;		_LCD_goto_line
 15638 ;;		_LCD_initialize
 15639 ;;		_LCD_write_message
 15640 ;; This function is called by:
 15641 ;;		_main
 15642 ;; This function uses a non-reentrant model
 15643 ;;
 15644                           
 15645                           	psect	text37
 15646  01604E                     __ptext37:
 15647                           	opt stack 0
 15648  01604E                     _LCD_Error:
 15649                           	opt stack 21
 15650                           
 15651                           ;RemoteCan.c: 559: LCD_initialize(16);
 15652                           
 15653                           ;incstack = 0
 15654  01604E  0E10               	movlw	16
 15655  016050  ECB5  F0AA         	call	_LCD_initialize
 15656                           
 15657                           ;RemoteCan.c: 560: LCD_clear();
 15658  016054  EC1B  F0B2         	call	_LCD_clear	;wreg free
 15659                           
 15660                           ;RemoteCan.c: 561: LCD_goto_line(1);
 15661  016058  0E01               	movlw	1
 15662  01605A  ECF2  F0AB         	call	_LCD_goto_line
 15663                           
 15664                           ;RemoteCan.c: 562: LCD_write_message("= PARKING MESSAGES =");
 15665  01605E  0E40               	movlw	low STR_16
 15666  016060  0100               	movlb	0	; () banked
 15667  016062  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15668  016064  0EFF               	movlw	high STR_16
 15669  016066  0100               	movlb	0	; () banked
 15670  016068  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15671  01606A  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15672                           
 15673                           ;RemoteCan.c: 563: LCD_goto_line(2);
 15674  01606E  0E02               	movlw	2
 15675  016070  ECF2  F0AB         	call	_LCD_goto_line
 15676                           
 15677                           ;RemoteCan.c: 564: LCD_write_message(" Parking procedures ");
 15678  016074  0ED7               	movlw	low STR_29
 15679  016076  0100               	movlb	0	; () banked
 15680  016078  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15681  01607A  0EFE               	movlw	high STR_29
 15682  01607C  0100               	movlb	0	; () banked
 15683  01607E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15684  016080  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15685                           
 15686                           ;RemoteCan.c: 565: LCD_goto_line(3);
 15687  016084  0E03               	movlw	3
 15688  016086  ECF2  F0AB         	call	_LCD_goto_line
 15689                           
 15690                           ;RemoteCan.c: 566: LCD_write_message("       FAILED!      ");
 15691  01608A  0E2F               	movlw	low STR_34
 15692  01608C  0100               	movlb	0	; () banked
 15693  01608E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15694  016090  0EFE               	movlw	high STR_34
 15695  016092  0100               	movlb	0	; () banked
 15696  016094  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15697  016096  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15698                           
 15699                           ;RemoteCan.c: 567: LCD_goto_line(4);
 15700  01609A  0E04               	movlw	4
 15701  01609C  ECF2  F0AB         	call	_LCD_goto_line
 15702                           
 15703                           ;RemoteCan.c: 568: LCD_write_message("   due to an error  ");
 15704  0160A0  0E98               	movlw	low STR_35
 15705  0160A2  0100               	movlb	0	; () banked
 15706  0160A4  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15707  0160A6  0EFE               	movlw	high STR_35
 15708  0160A8  0100               	movlb	0	; () banked
 15709  0160AA  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15710  0160AC  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15711  0160B0  0012               	return		;funcret
 15712  0160B2                     __end_of_LCD_Error:
 15713                           	opt stack 0
 15714                           tblptru	equ	0xFF8
 15715                           tblptrh	equ	0xFF7
 15716                           tblptrl	equ	0xFF6
 15717                           tablat	equ	0xFF5
 15718                           prodh	equ	0xFF4
 15719                           prodl	equ	0xFF3
 15720                           intcon	equ	0xFF2
 15721                           postinc0	equ	0xFEE
 15722                           wreg	equ	0xFE8
 15723                           indf1	equ	0xFE7
 15724                           plusw1	equ	0xFE3
 15725                           fsr1h	equ	0xFE2
 15726                           fsr1l	equ	0xFE1
 15727                           indf2	equ	0xFDF
 15728                           postinc2	equ	0xFDE
 15729                           plusw2	equ	0xFDB
 15730                           fsr2h	equ	0xFDA
 15731                           fsr2l	equ	0xFD9
 15732                           status	equ	0xFD8
 15733                           
 15734 ;; *************** function _LCD_End *****************
 15735 ;; Defined at:
 15736 ;;		line 545 in file "RemoteCan.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;		None
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;		None
 15741 ;; Return value:  Size  Location     Type
 15742 ;;		None               void
 15743 ;; Registers used:
 15744 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/0
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15754 ;;Total ram usage:        0 bytes
 15755 ;; Hardware stack levels used:    1
 15756 ;; Hardware stack levels required when called:    9
 15757 ;; This function calls:
 15758 ;;		_LCD_clear
 15759 ;;		_LCD_goto_line
 15760 ;;		_LCD_initialize
 15761 ;;		_LCD_write_message
 15762 ;; This function is called by:
 15763 ;;		_main
 15764 ;; This function uses a non-reentrant model
 15765 ;;
 15766                           
 15767                           	psect	text38
 15768  0160B2                     __ptext38:
 15769                           	opt stack 0
 15770  0160B2                     _LCD_End:
 15771                           	opt stack 21
 15772                           
 15773                           ;RemoteCan.c: 546: LCD_initialize(16);
 15774                           
 15775                           ;incstack = 0
 15776  0160B2  0E10               	movlw	16
 15777  0160B4  ECB5  F0AA         	call	_LCD_initialize
 15778                           
 15779                           ;RemoteCan.c: 547: LCD_clear();
 15780  0160B8  EC1B  F0B2         	call	_LCD_clear	;wreg free
 15781                           
 15782                           ;RemoteCan.c: 548: LCD_goto_line(1);
 15783  0160BC  0E01               	movlw	1
 15784  0160BE  ECF2  F0AB         	call	_LCD_goto_line
 15785                           
 15786                           ;RemoteCan.c: 549: LCD_write_message("= PARKING MESSAGES =");
 15787  0160C2  0E40               	movlw	low STR_16
 15788  0160C4  0100               	movlb	0	; () banked
 15789  0160C6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15790  0160C8  0EFF               	movlw	high STR_16
 15791  0160CA  0100               	movlb	0	; () banked
 15792  0160CC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15793  0160CE  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15794                           
 15795                           ;RemoteCan.c: 550: LCD_goto_line(2);
 15796  0160D2  0E02               	movlw	2
 15797  0160D4  ECF2  F0AB         	call	_LCD_goto_line
 15798                           
 15799                           ;RemoteCan.c: 551: LCD_write_message(" Parking procedures ");
 15800  0160D8  0ED7               	movlw	low STR_29
 15801  0160DA  0100               	movlb	0	; () banked
 15802  0160DC  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15803  0160DE  0EFE               	movlw	high STR_29
 15804  0160E0  0100               	movlb	0	; () banked
 15805  0160E2  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15806  0160E4  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15807                           
 15808                           ;RemoteCan.c: 552: LCD_goto_line(3);
 15809  0160E8  0E03               	movlw	3
 15810  0160EA  ECF2  F0AB         	call	_LCD_goto_line
 15811                           
 15812                           ;RemoteCan.c: 553: LCD_write_message("    SUCCESSFULLY    ");
 15813  0160EE  0E59               	movlw	low STR_30
 15814  0160F0  0100               	movlb	0	; () banked
 15815  0160F2  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15816  0160F4  0EFE               	movlw	high STR_30
 15817  0160F6  0100               	movlb	0	; () banked
 15818  0160F8  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15819  0160FA  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15820                           
 15821                           ;RemoteCan.c: 554: LCD_goto_line(4);
 15822  0160FE  0E04               	movlw	4
 15823  016100  ECF2  F0AB         	call	_LCD_goto_line
 15824                           
 15825                           ;RemoteCan.c: 555: LCD_write_message("     COMPLETED!     ");
 15826  016104  0E44               	movlw	low STR_31
 15827  016106  0100               	movlb	0	; () banked
 15828  016108  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15829  01610A  0EFE               	movlw	high STR_31
 15830  01610C  0100               	movlb	0	; () banked
 15831  01610E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15832  016110  ECE8  F0B1         	call	_LCD_write_message	;wreg free
 15833  016114  0012               	return		;funcret
 15834  016116                     __end_of_LCD_End:
 15835                           	opt stack 0
 15836                           tblptru	equ	0xFF8
 15837                           tblptrh	equ	0xFF7
 15838                           tblptrl	equ	0xFF6
 15839                           tablat	equ	0xFF5
 15840                           prodh	equ	0xFF4
 15841                           prodl	equ	0xFF3
 15842                           intcon	equ	0xFF2
 15843                           postinc0	equ	0xFEE
 15844                           wreg	equ	0xFE8
 15845                           indf1	equ	0xFE7
 15846                           plusw1	equ	0xFE3
 15847                           fsr1h	equ	0xFE2
 15848                           fsr1l	equ	0xFE1
 15849                           indf2	equ	0xFDF
 15850                           postinc2	equ	0xFDE
 15851                           plusw2	equ	0xFDB
 15852                           fsr2h	equ	0xFDA
 15853                           fsr2l	equ	0xFD9
 15854                           status	equ	0xFD8
 15855                           
 15856 ;; *************** function _LCD_write_message *****************
 15857 ;; Defined at:
 15858 ;;		line 178 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;  buffer          2   33[BANK0 ] PTR const unsigned char 
 15861 ;;		 -> STR_35(21), STR_34(21), STR_33(21), STR_32(21), 
 15862 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 15863 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15864 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15865 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 15866 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 15867 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 15868 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15869 ;;		 -> STR_2(21), STR_1(21), 
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;		None
 15872 ;; Return value:  Size  Location     Type
 15873 ;;		None               void
 15874 ;; Registers used:
 15875 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15876 ;; Tracked objects:
 15877 ;;		On entry : 0/0
 15878 ;;		On exit  : 0/0
 15879 ;;		Unchanged: 0/0
 15880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15884 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15885 ;;Total ram usage:        2 bytes
 15886 ;; Hardware stack levels used:    1
 15887 ;; Hardware stack levels required when called:    8
 15888 ;; This function calls:
 15889 ;;		_LCD_write_char
 15890 ;; This function is called by:
 15891 ;;		_main
 15892 ;;		_LCD_Handler
 15893 ;;		_LCD_Gap
 15894 ;;		_LCD_Park
 15895 ;;		_LCD_Parking
 15896 ;;		_LCD_End
 15897 ;;		_LCD_Error
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           	psect	text39
 15902  0163D0                     __ptext39:
 15903                           	opt stack 0
 15904  0163D0                     _LCD_write_message:
 15905                           	opt stack 22
 15906                           
 15907                           ;src\LCD_44780.c: 181: while(*buffer) {
 15908                           
 15909                           ;incstack = 0
 15910  0163D0  D00D               	goto	l8763
 15911  0163D2                     l8759:
 15912                           
 15913                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15914  0163D2  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15915  0163D6  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15916  0163DA                     	if	0	;tblptru may be non-zero
 15917  0163DA                     	endif
 15918  0163DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15919  0163DA  0E00               	movlw	low (__mediumconst shr (0+16))
 15920  0163DC  6EF8               	movwf	tblptru,c
 15921  0163DE                     	endif
 15922  0163DE  0008               	tblrd		*
 15923  0163E0  50F5               	movf	tablat,w,c
 15924  0163E2  ECD1  F0AE         	call	_LCD_write_char
 15925                           
 15926                           ;src\LCD_44780.c: 186: buffer++;
 15927  0163E6  0100               	movlb	0	; () banked
 15928  0163E8  4B81               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15929  0163EA  2B82               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15930  0163EC                     l8763:
 15931  0163EC  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15932  0163F0  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15933  0163F4                     	if	0	;tblptru may be non-zero
 15934  0163F4                     	endif
 15935  0163F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15936  0163F4  0E00               	movlw	low (__mediumconst shr (0+16))
 15937  0163F6  6EF8               	movwf	tblptru,c
 15938  0163F8                     	endif
 15939  0163F8  0008               	tblrd		*
 15940  0163FA  50F5               	movf	tablat,w,c
 15941  0163FC  0900               	iorlw	0
 15942  0163FE  B4D8               	btfsc	status,2,c
 15943  016400  0012               	return	
 15944  016402  D7E7               	goto	l8759
 15945  016404                     __end_of_LCD_write_message:
 15946                           	opt stack 0
 15947                           tblptru	equ	0xFF8
 15948                           tblptrh	equ	0xFF7
 15949                           tblptrl	equ	0xFF6
 15950                           tablat	equ	0xFF5
 15951                           prodh	equ	0xFF4
 15952                           prodl	equ	0xFF3
 15953                           intcon	equ	0xFF2
 15954                           postinc0	equ	0xFEE
 15955                           wreg	equ	0xFE8
 15956                           indf1	equ	0xFE7
 15957                           plusw1	equ	0xFE3
 15958                           fsr1h	equ	0xFE2
 15959                           fsr1l	equ	0xFE1
 15960                           indf2	equ	0xFDF
 15961                           postinc2	equ	0xFDE
 15962                           plusw2	equ	0xFDB
 15963                           fsr2h	equ	0xFDA
 15964                           fsr2l	equ	0xFD9
 15965                           status	equ	0xFD8
 15966                           
 15967 ;; *************** function _LCD_write_char *****************
 15968 ;; Defined at:
 15969 ;;		line 145 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;  value           1    wreg     unsigned char 
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;  value           1   32[BANK0 ] unsigned char 
 15974 ;;  D0              1   31[BANK0 ] unsigned char 
 15975 ;;  D1              1   30[BANK0 ] unsigned char 
 15976 ;;  D2              1   29[BANK0 ] unsigned char 
 15977 ;;  D3              1   28[BANK0 ] unsigned char 
 15978 ;; Return value:  Size  Location     Type
 15979 ;;		None               void
 15980 ;; Registers used:
 15981 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15991 ;;Total ram usage:        5 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; Hardware stack levels required when called:    7
 15994 ;; This function calls:
 15995 ;;		_LCD_send_command
 15996 ;; This function is called by:
 15997 ;;		_LCD_write_message
 15998 ;;		_LCD_write_string
 15999 ;; This function uses a non-reentrant model
 16000 ;;
 16001                           
 16002                           	psect	text40
 16003  015DA2                     __ptext40:
 16004                           	opt stack 0
 16005  015DA2                     _LCD_write_char:
 16006                           	opt stack 22
 16007                           
 16008                           ;incstack = 0
 16009                           ;LCD_write_char@value stored from wreg
 16010  015DA2  0100               	movlb	0	; () banked
 16011  015DA4  6F80               	movwf	LCD_write_char@value& (0+255),b
 16012                           
 16013                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 16014                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
 16015  015DA6  828A               	bsf	3978,1,c	;volatile
 16016                           
 16017                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 16018  015DA8  0100               	movlb	0	; () banked
 16019  015DAA  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 16020  015DAC  0B01               	andlw	1
 16021  015DAE  0100               	movlb	0	; () banked
 16022  015DB0  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 16023                           
 16024                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 16025  015DB2  0100               	movlb	0	; () banked
 16026  015DB4  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 16027  015DB6  46E8               	rlncf	wreg,f,c
 16028  015DB8  0B03               	andlw	3
 16029  015DBA  0B01               	andlw	1
 16030  015DBC  0100               	movlb	0	; () banked
 16031  015DBE  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 16032                           
 16033                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 16034  015DC0  0100               	movlb	0	; () banked
 16035  015DC2  3980               	swapf	LCD_write_char@value& (0+255),w,b
 16036  015DC4  42E8               	rrncf	wreg,f,c
 16037  015DC6  0B07               	andlw	7
 16038  015DC8  0B01               	andlw	1
 16039  015DCA  0100               	movlb	0	; () banked
 16040  015DCC  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 16041                           
 16042                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 16043  015DCE  0100               	movlb	0	; () banked
 16044  015DD0  3980               	swapf	LCD_write_char@value& (0+255),w,b
 16045  015DD2  0B0F               	andlw	15
 16046  015DD4  0B01               	andlw	1
 16047  015DD6  0100               	movlb	0	; () banked
 16048  015DD8  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 16049                           
 16050                           ; BSR set to: 0
 16051                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 16052  015DDA  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 16053  015DDE  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 16054  015DE2  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 16055  015DE6  0100               	movlb	0	; () banked
 16056  015DE8  517C               	movf	LCD_write_char@D3& (0+255),w,b
 16057  015DEA  EC77  F0B1         	call	_LCD_send_command
 16058                           
 16059                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 16060  015DEE  0100               	movlb	0	; () banked
 16061  015DF0  3980               	swapf	LCD_write_char@value& (0+255),w,b
 16062  015DF2  46E8               	rlncf	wreg,f,c
 16063  015DF4  0B1F               	andlw	31
 16064  015DF6  0B01               	andlw	1
 16065  015DF8  0100               	movlb	0	; () banked
 16066  015DFA  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 16067                           
 16068                           ; BSR set to: 0
 16069                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 16070  015DFC  0100               	movlb	0	; () banked
 16071  015DFE  4180               	rrncf	LCD_write_char@value& (0+255),w,b
 16072  015E00  42E8               	rrncf	wreg,f,c
 16073  015E02  0B3F               	andlw	63
 16074  015E04  0B01               	andlw	1
 16075  015E06  0100               	movlb	0	; () banked
 16076  015E08  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 16077                           
 16078                           ; BSR set to: 0
 16079                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 16080  015E0A  0100               	movlb	0	; () banked
 16081  015E0C  90D8               	bcf	status,0,c
 16082  015E0E  3180               	rrcf	LCD_write_char@value& (0+255),w,b
 16083  015E10  0B01               	andlw	1
 16084  015E12  0100               	movlb	0	; () banked
 16085  015E14  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 16086                           
 16087                           ; BSR set to: 0
 16088                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 16089  015E16  0100               	movlb	0	; () banked
 16090  015E18  5180               	movf	LCD_write_char@value& (0+255),w,b
 16091  015E1A  0B01               	andlw	1
 16092  015E1C  0100               	movlb	0	; () banked
 16093  015E1E  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 16094                           
 16095                           ; BSR set to: 0
 16096                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 16097  015E20  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 16098  015E24  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 16099  015E28  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 16100  015E2C  0100               	movlb	0	; () banked
 16101  015E2E  517C               	movf	LCD_write_char@D3& (0+255),w,b
 16102  015E30  EC77  F0B1         	call	_LCD_send_command
 16103                           
 16104                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
 16105  015E34  928A               	bcf	3978,1,c	;volatile
 16106  015E36  0012               	return		;funcret
 16107  015E38                     __end_of_LCD_write_char:
 16108                           	opt stack 0
 16109                           tblptru	equ	0xFF8
 16110                           tblptrh	equ	0xFF7
 16111                           tblptrl	equ	0xFF6
 16112                           tablat	equ	0xFF5
 16113                           prodh	equ	0xFF4
 16114                           prodl	equ	0xFF3
 16115                           intcon	equ	0xFF2
 16116                           postinc0	equ	0xFEE
 16117                           wreg	equ	0xFE8
 16118                           indf1	equ	0xFE7
 16119                           plusw1	equ	0xFE3
 16120                           fsr1h	equ	0xFE2
 16121                           fsr1l	equ	0xFE1
 16122                           indf2	equ	0xFDF
 16123                           postinc2	equ	0xFDE
 16124                           plusw2	equ	0xFDB
 16125                           fsr2h	equ	0xFDA
 16126                           fsr2l	equ	0xFD9
 16127                           status	equ	0xFD8
 16128                           
 16129 ;; *************** function _LCD_initialize *****************
 16130 ;; Defined at:
 16131 ;;		line 283 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;  quartz_frequ    1    wreg     unsigned char 
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;  quartz_frequ    1   30[BANK0 ] unsigned char 
 16136 ;; Return value:  Size  Location     Type
 16137 ;;		None               void
 16138 ;; Registers used:
 16139 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16140 ;; Tracked objects:
 16141 ;;		On entry : 0/0
 16142 ;;		On exit  : 0/0
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16148 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16149 ;;Total ram usage:        1 bytes
 16150 ;; Hardware stack levels used:    1
 16151 ;; Hardware stack levels required when called:    8
 16152 ;; This function calls:
 16153 ;;		_LCD_clear
 16154 ;;		_LCD_cursor
 16155 ;;		_LCD_send_command
 16156 ;;		_delay_ms
 16157 ;;		_delay_set_quartz
 16158 ;; This function is called by:
 16159 ;;		_main
 16160 ;;		_LCD_Handler
 16161 ;;		_LCD_Gap
 16162 ;;		_LCD_Park
 16163 ;;		_LCD_Parking
 16164 ;;		_LCD_End
 16165 ;;		_LCD_Error
 16166 ;;		_board_initialization
 16167 ;; This function uses a non-reentrant model
 16168 ;;
 16169                           
 16170                           	psect	text41
 16171  01556A                     __ptext41:
 16172                           	opt stack 0
 16173  01556A                     _LCD_initialize:
 16174                           	opt stack 21
 16175                           
 16176                           ;incstack = 0
 16177                           ;LCD_initialize@quartz_frequency stored from wreg
 16178  01556A  0100               	movlb	0	; () banked
 16179  01556C  6F7E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 16180                           
 16181                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 16182  01556E  0100               	movlb	0	; () banked
 16183  015570  517E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 16184  015572  ECDC  F0B2         	call	_delay_set_quartz
 16185                           
 16186                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
 16187  015576  928A               	bcf	3978,1,c	;volatile
 16188                           
 16189                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
 16190  015578  968A               	bcf	3978,3,c	;volatile
 16191                           
 16192                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
 16193  01557A  948A               	bcf	3978,2,c	;volatile
 16194                           
 16195                           ;src\LCD_44780.c: 291: delay_ms (100);
 16196  01557C  0E00               	movlw	0
 16197  01557E  0100               	movlb	0	; () banked
 16198  015580  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16199  015582  0E64               	movlw	100
 16200  015584  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16201  015586  EC94  F0B1         	call	_delay_ms	;wreg free
 16202                           
 16203                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 16204  01558A  0E00               	movlw	0
 16205  01558C  0100               	movlb	0	; () banked
 16206  01558E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16207  015590  0E01               	movlw	1
 16208  015592  0100               	movlb	0	; () banked
 16209  015594  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16210  015596  0E01               	movlw	1
 16211  015598  0100               	movlb	0	; () banked
 16212  01559A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16213  01559C  0E00               	movlw	0
 16214  01559E  EC77  F0B1         	call	_LCD_send_command
 16215                           
 16216                           ;src\LCD_44780.c: 293: delay_ms (100);
 16217  0155A2  0E00               	movlw	0
 16218  0155A4  0100               	movlb	0	; () banked
 16219  0155A6  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16220  0155A8  0E64               	movlw	100
 16221  0155AA  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16222  0155AC  EC94  F0B1         	call	_delay_ms	;wreg free
 16223                           
 16224                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 16225  0155B0  0E00               	movlw	0
 16226  0155B2  0100               	movlb	0	; () banked
 16227  0155B4  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16228  0155B6  0E01               	movlw	1
 16229  0155B8  0100               	movlb	0	; () banked
 16230  0155BA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16231  0155BC  0E01               	movlw	1
 16232  0155BE  0100               	movlb	0	; () banked
 16233  0155C0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16234  0155C2  0E00               	movlw	0
 16235  0155C4  EC77  F0B1         	call	_LCD_send_command
 16236                           
 16237                           ;src\LCD_44780.c: 295: delay_ms (10);
 16238  0155C8  0E00               	movlw	0
 16239  0155CA  0100               	movlb	0	; () banked
 16240  0155CC  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16241  0155CE  0E0A               	movlw	10
 16242  0155D0  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16243  0155D2  EC94  F0B1         	call	_delay_ms	;wreg free
 16244                           
 16245                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 16246  0155D6  0E00               	movlw	0
 16247  0155D8  0100               	movlb	0	; () banked
 16248  0155DA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16249  0155DC  0E01               	movlw	1
 16250  0155DE  0100               	movlb	0	; () banked
 16251  0155E0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16252  0155E2  0E01               	movlw	1
 16253  0155E4  0100               	movlb	0	; () banked
 16254  0155E6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16255  0155E8  0E00               	movlw	0
 16256  0155EA  EC77  F0B1         	call	_LCD_send_command
 16257                           
 16258                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 16259  0155EE  0E00               	movlw	0
 16260  0155F0  0100               	movlb	0	; () banked
 16261  0155F2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16262  0155F4  0E01               	movlw	1
 16263  0155F6  0100               	movlb	0	; () banked
 16264  0155F8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16265  0155FA  0E00               	movlw	0
 16266  0155FC  0100               	movlb	0	; () banked
 16267  0155FE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16268  015600  0E00               	movlw	0
 16269  015602  EC77  F0B1         	call	_LCD_send_command
 16270                           
 16271                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 16272  015606  0E00               	movlw	0
 16273  015608  0100               	movlb	0	; () banked
 16274  01560A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16275  01560C  0E01               	movlw	1
 16276  01560E  0100               	movlb	0	; () banked
 16277  015610  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16278  015612  0E00               	movlw	0
 16279  015614  0100               	movlb	0	; () banked
 16280  015616  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16281  015618  0E00               	movlw	0
 16282  01561A  EC77  F0B1         	call	_LCD_send_command
 16283                           
 16284                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 16285  01561E  0E00               	movlw	0
 16286  015620  0100               	movlb	0	; () banked
 16287  015622  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16288  015624  0E00               	movlw	0
 16289  015626  0100               	movlb	0	; () banked
 16290  015628  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16291  01562A  0E00               	movlw	0
 16292  01562C  0100               	movlb	0	; () banked
 16293  01562E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16294  015630  0E01               	movlw	1
 16295  015632  EC77  F0B1         	call	_LCD_send_command
 16296                           
 16297                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 16298  015636  0E00               	movlw	0
 16299  015638  0100               	movlb	0	; () banked
 16300  01563A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16301  01563C  0E00               	movlw	0
 16302  01563E  0100               	movlb	0	; () banked
 16303  015640  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16304  015642  0E00               	movlw	0
 16305  015644  0100               	movlb	0	; () banked
 16306  015646  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16307  015648  0E00               	movlw	0
 16308  01564A  EC77  F0B1         	call	_LCD_send_command
 16309                           
 16310                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 16311  01564E  0E00               	movlw	0
 16312  015650  0100               	movlb	0	; () banked
 16313  015652  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16314  015654  0E00               	movlw	0
 16315  015656  0100               	movlb	0	; () banked
 16316  015658  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16317  01565A  0E00               	movlw	0
 16318  01565C  0100               	movlb	0	; () banked
 16319  01565E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16320  015660  0E01               	movlw	1
 16321  015662  EC77  F0B1         	call	_LCD_send_command
 16322                           
 16323                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 16324  015666  0E00               	movlw	0
 16325  015668  0100               	movlb	0	; () banked
 16326  01566A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16327  01566C  0E00               	movlw	0
 16328  01566E  0100               	movlb	0	; () banked
 16329  015670  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16330  015672  0E00               	movlw	0
 16331  015674  0100               	movlb	0	; () banked
 16332  015676  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16333  015678  0E00               	movlw	0
 16334  01567A  EC77  F0B1         	call	_LCD_send_command
 16335                           
 16336                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 16337  01567E  0E00               	movlw	0
 16338  015680  0100               	movlb	0	; () banked
 16339  015682  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16340  015684  0E00               	movlw	0
 16341  015686  0100               	movlb	0	; () banked
 16342  015688  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16343  01568A  0E01               	movlw	1
 16344  01568C  0100               	movlb	0	; () banked
 16345  01568E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16346  015690  0E00               	movlw	0
 16347  015692  EC77  F0B1         	call	_LCD_send_command
 16348                           
 16349                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 16350  015696  0E00               	movlw	0
 16351  015698  0100               	movlb	0	; () banked
 16352  01569A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16353  01569C  0E00               	movlw	0
 16354  01569E  0100               	movlb	0	; () banked
 16355  0156A0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16356  0156A2  0E00               	movlw	0
 16357  0156A4  0100               	movlb	0	; () banked
 16358  0156A6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16359  0156A8  0E00               	movlw	0
 16360  0156AA  EC77  F0B1         	call	_LCD_send_command
 16361                           
 16362                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 16363  0156AE  0E01               	movlw	1
 16364  0156B0  0100               	movlb	0	; () banked
 16365  0156B2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16366  0156B4  0E01               	movlw	1
 16367  0156B6  0100               	movlb	0	; () banked
 16368  0156B8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16369  0156BA  0E00               	movlw	0
 16370  0156BC  0100               	movlb	0	; () banked
 16371  0156BE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16372  0156C0  0E00               	movlw	0
 16373  0156C2  EC77  F0B1         	call	_LCD_send_command
 16374                           
 16375                           ;src\LCD_44780.c: 312: LCD_clear ();
 16376  0156C6  EC1B  F0B2         	call	_LCD_clear	;wreg free
 16377                           
 16378                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 16379  0156CA  0E00               	movlw	0
 16380  0156CC  0100               	movlb	0	; () banked
 16381  0156CE  6F7C               	movwf	LCD_cursor@blinking& (0+255),b
 16382  0156D0  0E00               	movlw	0
 16383  0156D2  EC02  F0B2         	call	_LCD_cursor
 16384  0156D6  0012               	return		;funcret
 16385  0156D8                     __end_of_LCD_initialize:
 16386                           	opt stack 0
 16387                           tblptru	equ	0xFF8
 16388                           tblptrh	equ	0xFF7
 16389                           tblptrl	equ	0xFF6
 16390                           tablat	equ	0xFF5
 16391                           prodh	equ	0xFF4
 16392                           prodl	equ	0xFF3
 16393                           intcon	equ	0xFF2
 16394                           postinc0	equ	0xFEE
 16395                           wreg	equ	0xFE8
 16396                           indf1	equ	0xFE7
 16397                           plusw1	equ	0xFE3
 16398                           fsr1h	equ	0xFE2
 16399                           fsr1l	equ	0xFE1
 16400                           indf2	equ	0xFDF
 16401                           postinc2	equ	0xFDE
 16402                           plusw2	equ	0xFDB
 16403                           fsr2h	equ	0xFDA
 16404                           fsr2l	equ	0xFD9
 16405                           status	equ	0xFD8
 16406                           
 16407 ;; *************** function _delay_set_quartz *****************
 16408 ;; Defined at:
 16409 ;;		line 115 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;  frequency       1    wreg     unsigned char 
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;  frequency       1   16[BANK0 ] unsigned char 
 16414 ;; Return value:  Size  Location     Type
 16415 ;;		None               void
 16416 ;; Registers used:
 16417 ;;		wreg
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16427 ;;Total ram usage:        1 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:    3
 16430 ;; This function calls:
 16431 ;;		Nothing
 16432 ;; This function is called by:
 16433 ;;		_LCD_initialize
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           	psect	text42
 16438  0165B8                     __ptext42:
 16439                           	opt stack 0
 16440  0165B8                     _delay_set_quartz:
 16441                           	opt stack 25
 16442                           
 16443                           ;incstack = 0
 16444                           ;delay_set_quartz@frequency stored from wreg
 16445  0165B8  0100               	movlb	0	; () banked
 16446  0165BA  6F70               	movwf	delay_set_quartz@frequency& (0+255),b
 16447                           
 16448                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 16449  0165BC  C070  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 16450  0165C0  0012               	return		;funcret
 16451  0165C2                     __end_of_delay_set_quartz:
 16452                           	opt stack 0
 16453                           tblptru	equ	0xFF8
 16454                           tblptrh	equ	0xFF7
 16455                           tblptrl	equ	0xFF6
 16456                           tablat	equ	0xFF5
 16457                           prodh	equ	0xFF4
 16458                           prodl	equ	0xFF3
 16459                           intcon	equ	0xFF2
 16460                           postinc0	equ	0xFEE
 16461                           wreg	equ	0xFE8
 16462                           indf1	equ	0xFE7
 16463                           plusw1	equ	0xFE3
 16464                           fsr1h	equ	0xFE2
 16465                           fsr1l	equ	0xFE1
 16466                           indf2	equ	0xFDF
 16467                           postinc2	equ	0xFDE
 16468                           plusw2	equ	0xFDB
 16469                           fsr2h	equ	0xFDA
 16470                           fsr2l	equ	0xFD9
 16471                           status	equ	0xFD8
 16472                           
 16473 ;; *************** function _LCD_cursor *****************
 16474 ;; Defined at:
 16475 ;;		line 266 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16476 ;; Parameters:    Size  Location     Type
 16477 ;;  active          1    wreg     unsigned char 
 16478 ;;  blinking        1   28[BANK0 ] unsigned char 
 16479 ;; Auto vars:     Size  Location     Type
 16480 ;;  active          1   29[BANK0 ] unsigned char 
 16481 ;; Return value:  Size  Location     Type
 16482 ;;		None               void
 16483 ;; Registers used:
 16484 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16485 ;; Tracked objects:
 16486 ;;		On entry : 0/0
 16487 ;;		On exit  : 0/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16490 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16494 ;;Total ram usage:        2 bytes
 16495 ;; Hardware stack levels used:    1
 16496 ;; Hardware stack levels required when called:    7
 16497 ;; This function calls:
 16498 ;;		_LCD_send_command
 16499 ;; This function is called by:
 16500 ;;		_LCD_initialize
 16501 ;; This function uses a non-reentrant model
 16502 ;;
 16503                           
 16504                           	psect	text43
 16505  016404                     __ptext43:
 16506                           	opt stack 0
 16507  016404                     _LCD_cursor:
 16508                           	opt stack 21
 16509                           
 16510                           ;incstack = 0
 16511                           ;LCD_cursor@active stored from wreg
 16512  016404  0100               	movlb	0	; () banked
 16513  016406  6F7D               	movwf	LCD_cursor@active& (0+255),b
 16514                           
 16515                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 16516  016408  0E00               	movlw	0
 16517  01640A  0100               	movlb	0	; () banked
 16518  01640C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16519  01640E  0E00               	movlw	0
 16520  016410  0100               	movlb	0	; () banked
 16521  016412  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16522  016414  0E00               	movlw	0
 16523  016416  0100               	movlb	0	; () banked
 16524  016418  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16525  01641A  0E00               	movlw	0
 16526  01641C  EC77  F0B1         	call	_LCD_send_command
 16527                           
 16528                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 16529  016420  0E01               	movlw	1
 16530  016422  0100               	movlb	0	; () banked
 16531  016424  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16532  016426  C07D  F079         	movff	LCD_cursor@active,LCD_send_command@D1
 16533  01642A  C07C  F07A         	movff	LCD_cursor@blinking,LCD_send_command@D0
 16534  01642E  0E01               	movlw	1
 16535  016430  EC77  F0B1         	call	_LCD_send_command
 16536  016434  0012               	return		;funcret
 16537  016436                     __end_of_LCD_cursor:
 16538                           	opt stack 0
 16539                           tblptru	equ	0xFF8
 16540                           tblptrh	equ	0xFF7
 16541                           tblptrl	equ	0xFF6
 16542                           tablat	equ	0xFF5
 16543                           prodh	equ	0xFF4
 16544                           prodl	equ	0xFF3
 16545                           intcon	equ	0xFF2
 16546                           postinc0	equ	0xFEE
 16547                           wreg	equ	0xFE8
 16548                           indf1	equ	0xFE7
 16549                           plusw1	equ	0xFE3
 16550                           fsr1h	equ	0xFE2
 16551                           fsr1l	equ	0xFE1
 16552                           indf2	equ	0xFDF
 16553                           postinc2	equ	0xFDE
 16554                           plusw2	equ	0xFDB
 16555                           fsr2h	equ	0xFDA
 16556                           fsr2l	equ	0xFD9
 16557                           status	equ	0xFD8
 16558                           
 16559 ;; *************** function _LCD_clear *****************
 16560 ;; Defined at:
 16561 ;;		line 257 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16562 ;; Parameters:    Size  Location     Type
 16563 ;;		None
 16564 ;; Auto vars:     Size  Location     Type
 16565 ;;		None
 16566 ;; Return value:  Size  Location     Type
 16567 ;;		None               void
 16568 ;; Registers used:
 16569 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16570 ;; Tracked objects:
 16571 ;;		On entry : 0/0
 16572 ;;		On exit  : 0/0
 16573 ;;		Unchanged: 0/0
 16574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16579 ;;Total ram usage:        0 bytes
 16580 ;; Hardware stack levels used:    1
 16581 ;; Hardware stack levels required when called:    7
 16582 ;; This function calls:
 16583 ;;		_LCD_send_command
 16584 ;; This function is called by:
 16585 ;;		_LCD_initialize
 16586 ;;		_LCD_Handler
 16587 ;;		_LCD_Gap
 16588 ;;		_LCD_Park
 16589 ;;		_LCD_Parking
 16590 ;;		_LCD_End
 16591 ;;		_LCD_Error
 16592 ;;		_board_initialization
 16593 ;; This function uses a non-reentrant model
 16594 ;;
 16595                           
 16596                           	psect	text44
 16597  016436                     __ptext44:
 16598                           	opt stack 0
 16599  016436                     _LCD_clear:
 16600                           	opt stack 21
 16601                           
 16602                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16603                           
 16604                           ;incstack = 0
 16605  016436  0E00               	movlw	0
 16606  016438  0100               	movlb	0	; () banked
 16607  01643A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16608  01643C  0E00               	movlw	0
 16609  01643E  0100               	movlb	0	; () banked
 16610  016440  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16611  016442  0E00               	movlw	0
 16612  016444  0100               	movlb	0	; () banked
 16613  016446  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16614  016448  0E00               	movlw	0
 16615  01644A  EC77  F0B1         	call	_LCD_send_command
 16616                           
 16617                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16618  01644E  0E00               	movlw	0
 16619  016450  0100               	movlb	0	; () banked
 16620  016452  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16621  016454  0E00               	movlw	0
 16622  016456  0100               	movlb	0	; () banked
 16623  016458  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16624  01645A  0E01               	movlw	1
 16625  01645C  0100               	movlb	0	; () banked
 16626  01645E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16627  016460  0E00               	movlw	0
 16628  016462  EC77  F0B1         	call	_LCD_send_command
 16629  016466  0012               	return		;funcret
 16630  016468                     __end_of_LCD_clear:
 16631                           	opt stack 0
 16632                           tblptru	equ	0xFF8
 16633                           tblptrh	equ	0xFF7
 16634                           tblptrl	equ	0xFF6
 16635                           tablat	equ	0xFF5
 16636                           prodh	equ	0xFF4
 16637                           prodl	equ	0xFF3
 16638                           intcon	equ	0xFF2
 16639                           postinc0	equ	0xFEE
 16640                           wreg	equ	0xFE8
 16641                           indf1	equ	0xFE7
 16642                           plusw1	equ	0xFE3
 16643                           fsr1h	equ	0xFE2
 16644                           fsr1l	equ	0xFE1
 16645                           indf2	equ	0xFDF
 16646                           postinc2	equ	0xFDE
 16647                           plusw2	equ	0xFDB
 16648                           fsr2h	equ	0xFDA
 16649                           fsr2l	equ	0xFD9
 16650                           status	equ	0xFD8
 16651                           
 16652 ;; *************** function _LCD_goto_line *****************
 16653 ;; Defined at:
 16654 ;;		line 111 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;  line            1    wreg     unsigned char 
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;  line            1   28[BANK0 ] unsigned char 
 16659 ;; Return value:  Size  Location     Type
 16660 ;;		None               void
 16661 ;; Registers used:
 16662 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16672 ;;Total ram usage:        1 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:    7
 16675 ;; This function calls:
 16676 ;;		_LCD_send_command
 16677 ;; This function is called by:
 16678 ;;		_LCD_goto_xy
 16679 ;;		_main
 16680 ;;		_LCD_Handler
 16681 ;;		_LCD_Gap
 16682 ;;		_LCD_Park
 16683 ;;		_LCD_Parking
 16684 ;;		_LCD_End
 16685 ;;		_LCD_Error
 16686 ;;		_board_initialization
 16687 ;; This function uses a non-reentrant model
 16688 ;;
 16689                           
 16690                           	psect	text45
 16691  0157E4                     __ptext45:
 16692                           	opt stack 0
 16693  0157E4                     _LCD_goto_line:
 16694                           	opt stack 22
 16695                           
 16696                           ;incstack = 0
 16697                           ;LCD_goto_line@line stored from wreg
 16698  0157E4  0100               	movlb	0	; () banked
 16699  0157E6  6F7C               	movwf	LCD_goto_line@line& (0+255),b
 16700                           
 16701                           ;src\LCD_44780.c: 113: switch(line) {
 16702  0157E8  D064               	goto	l8393
 16703  0157EA                     l8385:
 16704  0157EA  0E00               	movlw	0
 16705  0157EC  0100               	movlb	0	; () banked
 16706  0157EE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16707  0157F0  0E00               	movlw	0
 16708  0157F2  0100               	movlb	0	; () banked
 16709  0157F4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16710  0157F6  0E00               	movlw	0
 16711  0157F8  0100               	movlb	0	; () banked
 16712  0157FA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16713  0157FC  0E01               	movlw	1
 16714  0157FE  EC77  F0B1         	call	_LCD_send_command
 16715                           
 16716                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16717  015802  0E00               	movlw	0
 16718  015804  0100               	movlb	0	; () banked
 16719  015806  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16720  015808  0E00               	movlw	0
 16721  01580A  0100               	movlb	0	; () banked
 16722  01580C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16723  01580E  0E00               	movlw	0
 16724  015810  0100               	movlb	0	; () banked
 16725  015812  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16726  015814  0E00               	movlw	0
 16727  015816  EC77  F0B1         	call	_LCD_send_command
 16728                           
 16729                           ;src\LCD_44780.c: 117: break;
 16730  01581A  0012               	return	
 16731  01581C                     l8387:
 16732  01581C  0E01               	movlw	1
 16733  01581E  0100               	movlb	0	; () banked
 16734  015820  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16735  015822  0E00               	movlw	0
 16736  015824  0100               	movlb	0	; () banked
 16737  015826  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16738  015828  0E00               	movlw	0
 16739  01582A  0100               	movlb	0	; () banked
 16740  01582C  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16741  01582E  0E01               	movlw	1
 16742  015830  EC77  F0B1         	call	_LCD_send_command
 16743                           
 16744                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16745  015834  0E00               	movlw	0
 16746  015836  0100               	movlb	0	; () banked
 16747  015838  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16748  01583A  0E00               	movlw	0
 16749  01583C  0100               	movlb	0	; () banked
 16750  01583E  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16751  015840  0E00               	movlw	0
 16752  015842  0100               	movlb	0	; () banked
 16753  015844  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16754  015846  0E00               	movlw	0
 16755  015848  EC77  F0B1         	call	_LCD_send_command
 16756                           
 16757                           ;src\LCD_44780.c: 121: break;
 16758  01584C  0012               	return	
 16759  01584E                     l8389:
 16760  01584E  0E00               	movlw	0
 16761  015850  0100               	movlb	0	; () banked
 16762  015852  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16763  015854  0E00               	movlw	0
 16764  015856  0100               	movlb	0	; () banked
 16765  015858  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16766  01585A  0E01               	movlw	1
 16767  01585C  0100               	movlb	0	; () banked
 16768  01585E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16769  015860  0E01               	movlw	1
 16770  015862  EC77  F0B1         	call	_LCD_send_command
 16771                           
 16772                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16773  015866  0E01               	movlw	1
 16774  015868  0100               	movlb	0	; () banked
 16775  01586A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16776  01586C  0E00               	movlw	0
 16777  01586E  0100               	movlb	0	; () banked
 16778  015870  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16779  015872  0E00               	movlw	0
 16780  015874  0100               	movlb	0	; () banked
 16781  015876  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16782  015878  0E00               	movlw	0
 16783  01587A  EC77  F0B1         	call	_LCD_send_command
 16784                           
 16785                           ;src\LCD_44780.c: 125: break;
 16786  01587E  0012               	return	
 16787  015880                     l8391:
 16788  015880  0E01               	movlw	1
 16789  015882  0100               	movlb	0	; () banked
 16790  015884  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16791  015886  0E00               	movlw	0
 16792  015888  0100               	movlb	0	; () banked
 16793  01588A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16794  01588C  0E01               	movlw	1
 16795  01588E  0100               	movlb	0	; () banked
 16796  015890  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16797  015892  0E01               	movlw	1
 16798  015894  EC77  F0B1         	call	_LCD_send_command
 16799                           
 16800                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 16801  015898  0E01               	movlw	1
 16802  01589A  0100               	movlb	0	; () banked
 16803  01589C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16804  01589E  0E00               	movlw	0
 16805  0158A0  0100               	movlb	0	; () banked
 16806  0158A2  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16807  0158A4  0E00               	movlw	0
 16808  0158A6  0100               	movlb	0	; () banked
 16809  0158A8  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16810  0158AA  0E00               	movlw	0
 16811  0158AC  EC77  F0B1         	call	_LCD_send_command
 16812                           
 16813                           ;src\LCD_44780.c: 129: }
 16814  0158B0  0012               	return	
 16815  0158B2                     l8393:
 16816  0158B2  0100               	movlb	0	; () banked
 16817  0158B4  517C               	movf	LCD_goto_line@line& (0+255),w,b
 16818                           
 16819                           ; Switch size 1, requested type "space"
 16820                           ; Number of cases is 4, Range of values is 1 to 4
 16821                           ; switch strategies available:
 16822                           ; Name         Instructions Cycles
 16823                           ; simple_byte           13     7 (average)
 16824                           ;	Chosen strategy is simple_byte
 16825  0158B6  0A01               	xorlw	1	; case 1
 16826  0158B8  B4D8               	btfsc	status,2,c
 16827  0158BA  D797               	goto	l8385
 16828  0158BC  0A03               	xorlw	3	; case 2
 16829  0158BE  B4D8               	btfsc	status,2,c
 16830  0158C0  D7AD               	goto	l8387
 16831  0158C2  0A01               	xorlw	1	; case 3
 16832  0158C4  B4D8               	btfsc	status,2,c
 16833  0158C6  D7C3               	goto	l8389
 16834  0158C8  0A07               	xorlw	7	; case 4
 16835  0158CA  A4D8               	btfss	status,2,c
 16836  0158CC  0012               	return	
 16837  0158CE  D7D8               	goto	l8391
 16838  0158D0                     __end_of_LCD_goto_line:
 16839                           	opt stack 0
 16840                           tblptru	equ	0xFF8
 16841                           tblptrh	equ	0xFF7
 16842                           tblptrl	equ	0xFF6
 16843                           tablat	equ	0xFF5
 16844                           prodh	equ	0xFF4
 16845                           prodl	equ	0xFF3
 16846                           intcon	equ	0xFF2
 16847                           postinc0	equ	0xFEE
 16848                           wreg	equ	0xFE8
 16849                           indf1	equ	0xFE7
 16850                           plusw1	equ	0xFE3
 16851                           fsr1h	equ	0xFE2
 16852                           fsr1l	equ	0xFE1
 16853                           indf2	equ	0xFDF
 16854                           postinc2	equ	0xFDE
 16855                           plusw2	equ	0xFDB
 16856                           fsr2h	equ	0xFDA
 16857                           fsr2l	equ	0xFD9
 16858                           status	equ	0xFD8
 16859                           
 16860 ;; *************** function _LCD_send_command *****************
 16861 ;; Defined at:
 16862 ;;		line 61 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;  D3              1    wreg     unsigned char 
 16865 ;;  D2              1   24[BANK0 ] unsigned char 
 16866 ;;  D1              1   25[BANK0 ] unsigned char 
 16867 ;;  D0              1   26[BANK0 ] unsigned char 
 16868 ;; Auto vars:     Size  Location     Type
 16869 ;;  D3              1   27[BANK0 ] unsigned char 
 16870 ;; Return value:  Size  Location     Type
 16871 ;;		None               void
 16872 ;; Registers used:
 16873 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16874 ;; Tracked objects:
 16875 ;;		On entry : 0/0
 16876 ;;		On exit  : 0/0
 16877 ;;		Unchanged: 0/0
 16878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16879 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16882 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16883 ;;Total ram usage:        4 bytes
 16884 ;; Hardware stack levels used:    1
 16885 ;; Hardware stack levels required when called:    6
 16886 ;; This function calls:
 16887 ;;		_LCD_enable_pulse
 16888 ;; This function is called by:
 16889 ;;		_LCD_shift_cursor
 16890 ;;		_LCD_goto_line
 16891 ;;		_LCD_write_char
 16892 ;;		_LCD_clear
 16893 ;;		_LCD_cursor
 16894 ;;		_LCD_initialize
 16895 ;;		_LCD_home
 16896 ;;		_LCD_shift
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text46
 16901  0162EE                     __ptext46:
 16902                           	opt stack 0
 16903  0162EE                     _LCD_send_command:
 16904                           	opt stack 22
 16905                           
 16906                           ;incstack = 0
 16907                           ;LCD_send_command@D3 stored from wreg
 16908  0162EE  0100               	movlb	0	; () banked
 16909  0162F0  6F7B               	movwf	LCD_send_command@D3& (0+255),b
 16910                           
 16911                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
 16912  0162F2  0100               	movlb	0	; () banked
 16913  0162F4  B17A               	btfsc	LCD_send_command@D0& (0+255),0,b
 16914  0162F6  D002               	bra	u10495
 16915  0162F8  988A               	bcf	3978,4,c	;volatile
 16916  0162FA  D001               	bra	u10496
 16917  0162FC                     u10495:
 16918  0162FC  888A               	bsf	3978,4,c	;volatile
 16919  0162FE                     u10496:
 16920                           
 16921                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
 16922  0162FE  0100               	movlb	0	; () banked
 16923  016300  B179               	btfsc	LCD_send_command@D1& (0+255),0,b
 16924  016302  D002               	bra	u10505
 16925  016304  9A8A               	bcf	3978,5,c	;volatile
 16926  016306  D001               	bra	u10506
 16927  016308                     u10505:
 16928  016308  8A8A               	bsf	3978,5,c	;volatile
 16929  01630A                     u10506:
 16930                           
 16931                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
 16932  01630A  0100               	movlb	0	; () banked
 16933  01630C  B178               	btfsc	LCD_send_command@D2& (0+255),0,b
 16934  01630E  D002               	bra	u10515
 16935  016310  9C8A               	bcf	3978,6,c	;volatile
 16936  016312  D001               	bra	u10516
 16937  016314                     u10515:
 16938  016314  8C8A               	bsf	3978,6,c	;volatile
 16939  016316                     u10516:
 16940                           
 16941                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
 16942  016316  0100               	movlb	0	; () banked
 16943  016318  B17B               	btfsc	LCD_send_command@D3& (0+255),0,b
 16944  01631A  D002               	bra	u10525
 16945  01631C  9E8A               	bcf	3978,7,c	;volatile
 16946  01631E  D001               	bra	u10526
 16947  016320                     u10525:
 16948  016320  8E8A               	bsf	3978,7,c	;volatile
 16949  016322                     u10526:
 16950                           
 16951                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16952  016322  EC6E  F0B2         	call	_LCD_enable_pulse	;wreg free
 16953  016326  0012               	return		;funcret
 16954  016328                     __end_of_LCD_send_command:
 16955                           	opt stack 0
 16956                           tblptru	equ	0xFF8
 16957                           tblptrh	equ	0xFF7
 16958                           tblptrl	equ	0xFF6
 16959                           tablat	equ	0xFF5
 16960                           prodh	equ	0xFF4
 16961                           prodl	equ	0xFF3
 16962                           intcon	equ	0xFF2
 16963                           postinc0	equ	0xFEE
 16964                           wreg	equ	0xFE8
 16965                           indf1	equ	0xFE7
 16966                           plusw1	equ	0xFE3
 16967                           fsr1h	equ	0xFE2
 16968                           fsr1l	equ	0xFE1
 16969                           indf2	equ	0xFDF
 16970                           postinc2	equ	0xFDE
 16971                           plusw2	equ	0xFDB
 16972                           fsr2h	equ	0xFDA
 16973                           fsr2l	equ	0xFD9
 16974                           status	equ	0xFD8
 16975                           
 16976 ;; *************** function _LCD_enable_pulse *****************
 16977 ;; Defined at:
 16978 ;;		line 49 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16979 ;; Parameters:    Size  Location     Type
 16980 ;;		None
 16981 ;; Auto vars:     Size  Location     Type
 16982 ;;		None
 16983 ;; Return value:  Size  Location     Type
 16984 ;;		None               void
 16985 ;; Registers used:
 16986 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16987 ;; Tracked objects:
 16988 ;;		On entry : 0/0
 16989 ;;		On exit  : 0/0
 16990 ;;		Unchanged: 0/0
 16991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16996 ;;Total ram usage:        0 bytes
 16997 ;; Hardware stack levels used:    1
 16998 ;; Hardware stack levels required when called:    5
 16999 ;; This function calls:
 17000 ;;		_delay_ms
 17001 ;; This function is called by:
 17002 ;;		_LCD_send_command
 17003 ;; This function uses a non-reentrant model
 17004 ;;
 17005                           
 17006                           	psect	text47
 17007  0164DC                     __ptext47:
 17008                           	opt stack 0
 17009  0164DC                     _LCD_enable_pulse:
 17010                           	opt stack 22
 17011                           
 17012                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 17013                           
 17014                           ;incstack = 0
 17015  0164DC  868A               	bsf	3978,3,c	;volatile
 17016                           
 17017                           ;src\LCD_44780.c: 52: delay_ms (1);
 17018  0164DE  0E00               	movlw	0
 17019  0164E0  0100               	movlb	0	; () banked
 17020  0164E2  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17021  0164E4  0E01               	movlw	1
 17022  0164E6  6F76               	movwf	delay_ms@value_ms& (0+255),b
 17023  0164E8  EC94  F0B1         	call	_delay_ms	;wreg free
 17024                           
 17025                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 17026  0164EC  968A               	bcf	3978,3,c	;volatile
 17027                           
 17028                           ;src\LCD_44780.c: 54: delay_ms (1);
 17029  0164EE  0E00               	movlw	0
 17030  0164F0  0100               	movlb	0	; () banked
 17031  0164F2  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17032  0164F4  0E01               	movlw	1
 17033  0164F6  6F76               	movwf	delay_ms@value_ms& (0+255),b
 17034  0164F8  EC94  F0B1         	call	_delay_ms	;wreg free
 17035  0164FC  0012               	return		;funcret
 17036  0164FE                     __end_of_LCD_enable_pulse:
 17037                           	opt stack 0
 17038                           tblptru	equ	0xFF8
 17039                           tblptrh	equ	0xFF7
 17040                           tblptrl	equ	0xFF6
 17041                           tablat	equ	0xFF5
 17042                           prodh	equ	0xFF4
 17043                           prodl	equ	0xFF3
 17044                           intcon	equ	0xFF2
 17045                           postinc0	equ	0xFEE
 17046                           wreg	equ	0xFE8
 17047                           indf1	equ	0xFE7
 17048                           plusw1	equ	0xFE3
 17049                           fsr1h	equ	0xFE2
 17050                           fsr1l	equ	0xFE1
 17051                           indf2	equ	0xFDF
 17052                           postinc2	equ	0xFDE
 17053                           plusw2	equ	0xFDB
 17054                           fsr2h	equ	0xFDA
 17055                           fsr2l	equ	0xFD9
 17056                           status	equ	0xFD8
 17057                           
 17058 ;; *************** function _delay_ms *****************
 17059 ;; Defined at:
 17060 ;;		line 61 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 17061 ;; Parameters:    Size  Location     Type
 17062 ;;  value_ms        2   22[BANK0 ] unsigned int 
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;		None
 17065 ;; Return value:  Size  Location     Type
 17066 ;;		None               void
 17067 ;; Registers used:
 17068 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17078 ;;Total ram usage:        2 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; Hardware stack levels required when called:    4
 17081 ;; This function calls:
 17082 ;;		___wmul
 17083 ;; This function is called by:
 17084 ;;		_LCD_enable_pulse
 17085 ;;		_LCD_initialize
 17086 ;;		_main
 17087 ;;		_delay_s
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091                           	psect	text48
 17092  016328                     __ptext48:
 17093                           	opt stack 0
 17094  016328                     _delay_ms:
 17095                           	opt stack 26
 17096                           
 17097                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 17098                           
 17099                           ;incstack = 0
 17100  016328  C0ED  F070         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 17101  01632C  0100               	movlb	0	; () banked
 17102  01632E  6B71               	clrf	(___wmul@multiplier+1)& (0+255),b
 17103  016330  C076  F072         	movff	delay_ms@value_ms,___wmul@multiplicand
 17104  016334  C077  F073         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 17105  016338  ECCD  F0B1         	call	___wmul	;wreg free
 17106  01633C  C070  F0E4         	movff	?___wmul,_clock_counter_reference	;volatile
 17107  016340  C071  F0E5         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 17108                           
 17109                           ;src\delay.c: 75: while (clock_counter_reference) {
 17110  016344  D007               	goto	l587
 17111  016346                     l7929:
 17112                           
 17113                           ;src\delay.c: 85: _delay(240);
 17114  016346  0E50               	movlw	80
 17115  016348                     u13027:
 17116  016348  2EE8               	decfsz	wreg,f,c
 17117  01634A  D7FE               	goto	u13027
 17118                           
 17119                           ;src\delay.c: 88: clock_counter_reference--;
 17120  01634C  0100               	movlb	0	; () banked
 17121  01634E  07E4               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 17122  016350  A0D8               	btfss	status,0,c
 17123  016352  07E5               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 17124  016354                     l587:
 17125  016354  0100               	movlb	0	; () banked
 17126  016356  51E4               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 17127  016358  0100               	movlb	0	; () banked
 17128  01635A  11E5               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 17129  01635C  B4D8               	btfsc	status,2,c
 17130  01635E  0012               	return	
 17131  016360  D7F2               	goto	l7929
 17132  016362                     __end_of_delay_ms:
 17133                           	opt stack 0
 17134                           tblptru	equ	0xFF8
 17135                           tblptrh	equ	0xFF7
 17136                           tblptrl	equ	0xFF6
 17137                           tablat	equ	0xFF5
 17138                           prodh	equ	0xFF4
 17139                           prodl	equ	0xFF3
 17140                           intcon	equ	0xFF2
 17141                           postinc0	equ	0xFEE
 17142                           wreg	equ	0xFE8
 17143                           indf1	equ	0xFE7
 17144                           plusw1	equ	0xFE3
 17145                           fsr1h	equ	0xFE2
 17146                           fsr1l	equ	0xFE1
 17147                           indf2	equ	0xFDF
 17148                           postinc2	equ	0xFDE
 17149                           plusw2	equ	0xFDB
 17150                           fsr2h	equ	0xFDA
 17151                           fsr2l	equ	0xFD9
 17152                           status	equ	0xFD8
 17153                           
 17154 ;; *************** function ___wmul *****************
 17155 ;; Defined at:
 17156 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;  multiplier      2   16[BANK0 ] unsigned int 
 17159 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 17160 ;; Auto vars:     Size  Location     Type
 17161 ;;  product         2   20[BANK0 ] unsigned int 
 17162 ;; Return value:  Size  Location     Type
 17163 ;;                  2   16[BANK0 ] unsigned int 
 17164 ;; Registers used:
 17165 ;;		wreg, status,2, status,0, prodl, prodh
 17166 ;; Tracked objects:
 17167 ;;		On entry : 0/0
 17168 ;;		On exit  : 0/0
 17169 ;;		Unchanged: 0/0
 17170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17171 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;Total ram usage:        6 bytes
 17176 ;; Hardware stack levels used:    1
 17177 ;; Hardware stack levels required when called:    3
 17178 ;; This function calls:
 17179 ;;		Nothing
 17180 ;; This function is called by:
 17181 ;;		_delay_ms
 17182 ;;		_sprintf
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186                           	psect	text49
 17187  01639A                     __ptext49:
 17188                           	opt stack 0
 17189  01639A                     ___wmul:
 17190                           	opt stack 26
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;incstack = 0
 17194  01639A  0100               	movlb	0	; () banked
 17195  01639C  5170               	movf	___wmul@multiplier& (0+255),w,b
 17196  01639E  0100               	movlb	0	; () banked
 17197  0163A0  0372               	mulwf	___wmul@multiplicand& (0+255),b
 17198  0163A2  CFF3 F074          	movff	prodl,___wmul@product
 17199  0163A6  CFF4 F075          	movff	prodh,___wmul@product+1
 17200  0163AA  0100               	movlb	0	; () banked
 17201  0163AC  5170               	movf	___wmul@multiplier& (0+255),w,b
 17202  0163AE  0100               	movlb	0	; () banked
 17203  0163B0  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17204  0163B2  50F3               	movf	prodl,w,c
 17205  0163B4  0100               	movlb	0	; () banked
 17206  0163B6  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 17207  0163B8  0100               	movlb	0	; () banked
 17208  0163BA  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17209  0163BC  0100               	movlb	0	; () banked
 17210  0163BE  0372               	mulwf	___wmul@multiplicand& (0+255),b
 17211  0163C0  50F3               	movf	prodl,w,c
 17212  0163C2  0100               	movlb	0	; () banked
 17213  0163C4  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 17214                           
 17215                           ; BSR set to: 0
 17216  0163C6  C074  F070         	movff	___wmul@product,?___wmul
 17217  0163CA  C075  F071         	movff	___wmul@product+1,?___wmul+1
 17218  0163CE  0012               	return	
 17219  0163D0                     __end_of___wmul:
 17220                           	opt stack 0
 17221                           tblptru	equ	0xFF8
 17222                           tblptrh	equ	0xFF7
 17223                           tblptrl	equ	0xFF6
 17224                           tablat	equ	0xFF5
 17225                           prodh	equ	0xFF4
 17226                           prodl	equ	0xFF3
 17227                           intcon	equ	0xFF2
 17228                           postinc0	equ	0xFEE
 17229                           wreg	equ	0xFE8
 17230                           indf1	equ	0xFE7
 17231                           plusw1	equ	0xFE3
 17232                           fsr1h	equ	0xFE2
 17233                           fsr1l	equ	0xFE1
 17234                           indf2	equ	0xFDF
 17235                           postinc2	equ	0xFDE
 17236                           plusw2	equ	0xFDB
 17237                           fsr2h	equ	0xFDA
 17238                           fsr2l	equ	0xFD9
 17239                           status	equ	0xFD8
 17240                           
 17241 ;; *************** function _Joystick_Polling *****************
 17242 ;; Defined at:
 17243 ;;		line 601 in file "RemoteCan.c"
 17244 ;; Parameters:    Size  Location     Type
 17245 ;;		None
 17246 ;; Auto vars:     Size  Location     Type
 17247 ;;  i               1   17[BANK0 ] unsigned char 
 17248 ;; Return value:  Size  Location     Type
 17249 ;;		None               void
 17250 ;; Registers used:
 17251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17252 ;; Tracked objects:
 17253 ;;		On entry : 0/0
 17254 ;;		On exit  : 0/0
 17255 ;;		Unchanged: 0/0
 17256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17259 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17261 ;;Total ram usage:        2 bytes
 17262 ;; Hardware stack levels used:    1
 17263 ;; Hardware stack levels required when called:    3
 17264 ;; This function calls:
 17265 ;;		Nothing
 17266 ;; This function is called by:
 17267 ;;		_main
 17268 ;; This function uses a non-reentrant model
 17269 ;;
 17270                           
 17271                           	psect	text50
 17272  016178                     __ptext50:
 17273                           	opt stack 0
 17274  016178                     _Joystick_Polling:
 17275                           	opt stack 27
 17276                           
 17277                           ;RemoteCan.c: 602: for (unsigned char i = 0; i < 2; i++) {
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;incstack = 0
 17281  016178  0E00               	movlw	0
 17282  01617A  0100               	movlb	0	; () banked
 17283  01617C  6F71               	movwf	Joystick_Polling@i& (0+255),b
 17284  01617E                     l7155:
 17285                           
 17286                           ; BSR set to: 0
 17287  01617E  0E01               	movlw	1
 17288  016180  0100               	movlb	0	; () banked
 17289  016182  6571               	cpfsgt	Joystick_Polling@i& (0+255),b
 17290  016184  D001               	goto	l940
 17291  016186  0012               	return	
 17292  016188                     l940:
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;RemoteCan.c: 603: ADCON0bits.GO = 1;
 17296  016188  82C2               	bsf	4034,1,c	;volatile
 17297  01618A                     l942:
 17298  01618A  B2C2               	btfsc	4034,1,c	;volatile
 17299  01618C  D7FE               	goto	l942
 17300                           
 17301                           ;RemoteCan.c: 605: JoystickValues[i] = ADRESH;
 17302  01618E  0100               	movlb	0	; () banked
 17303  016190  5171               	movf	Joystick_Polling@i& (0+255),w,b
 17304  016192  0D01               	mullw	1
 17305  016194  0EE0               	movlw	low _JoystickValues
 17306  016196  24F3               	addwf	prodl,w,c
 17307  016198  6ED9               	movwf	fsr2l,c
 17308  01619A  0E00               	movlw	high _JoystickValues
 17309  01619C  20F4               	addwfc	prodh,w,c
 17310  01619E  6EDA               	movwf	fsr2h,c
 17311  0161A0  CFC4 FFDF          	movff	4036,indf2	;volatile
 17312                           
 17313                           ; BSR set to: 0
 17314                           ;RemoteCan.c: 606: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 17315  0161A4  A4C2               	btfss	4034,2,c	;volatile
 17316  0161A6  D002               	goto	u9180
 17317  0161A8  0E01               	movlw	1
 17318  0161AA  D001               	goto	u9186
 17319  0161AC                     u9180:
 17320  0161AC  0E00               	movlw	0
 17321  0161AE                     u9186:
 17322  0161AE  0AFF               	xorlw	255
 17323  0161B0  0100               	movlb	0	; () banked
 17324  0161B2  6F70               	movwf	??_Joystick_Polling& (0+255),b
 17325  0161B4  0100               	movlb	0	; () banked
 17326  0161B6  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 17327  0161B8  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 17328  0161BA  50C2               	movf	4034,w,c	;volatile
 17329  0161BC  0100               	movlb	0	; () banked
 17330  0161BE  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 17331  0161C0  0BFB               	andlw	-5
 17332  0161C2  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 17333  0161C4  6EC2               	movwf	4034,c	;volatile
 17334                           
 17335                           ; BSR set to: 0
 17336  0161C6  0100               	movlb	0	; () banked
 17337  0161C8  2B71               	incf	Joystick_Polling@i& (0+255),f,b
 17338  0161CA  D7D9               	goto	l7155
 17339  0161CC                     __end_of_Joystick_Polling:
 17340                           	opt stack 0
 17341                           tblptru	equ	0xFF8
 17342                           tblptrh	equ	0xFF7
 17343                           tblptrl	equ	0xFF6
 17344                           tablat	equ	0xFF5
 17345                           prodh	equ	0xFF4
 17346                           prodl	equ	0xFF3
 17347                           intcon	equ	0xFF2
 17348                           postinc0	equ	0xFEE
 17349                           wreg	equ	0xFE8
 17350                           indf1	equ	0xFE7
 17351                           plusw1	equ	0xFE3
 17352                           fsr1h	equ	0xFE2
 17353                           fsr1l	equ	0xFE1
 17354                           indf2	equ	0xFDF
 17355                           postinc2	equ	0xFDE
 17356                           plusw2	equ	0xFDB
 17357                           fsr2h	equ	0xFDA
 17358                           fsr2l	equ	0xFD9
 17359                           status	equ	0xFD8
 17360                           
 17361 ;; *************** function _F2_Button_Polling *****************
 17362 ;; Defined at:
 17363 ;;		line 591 in file "RemoteCan.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;		None
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;		None
 17368 ;; Return value:  Size  Location     Type
 17369 ;;		None               void
 17370 ;; Registers used:
 17371 ;;		None
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;Total ram usage:        0 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:    3
 17384 ;; This function calls:
 17385 ;;		Nothing
 17386 ;; This function is called by:
 17387 ;;		_main
 17388 ;; This function uses a non-reentrant model
 17389 ;;
 17390                           
 17391                           	psect	text51
 17392  016554                     __ptext51:
 17393                           	opt stack 0
 17394  016554                     _F2_Button_Polling:
 17395                           	opt stack 27
 17396                           
 17397                           ;RemoteCan.c: 592: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 17398                           
 17399                           ; BSR set to: 0
 17400                           ;incstack = 0
 17401  016554  A281               	btfss	3969,1,c	;volatile
 17402  016556  D002               	goto	l935
 17403  016558  B84C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17404  01655A  0012               	return	
 17405  01655C                     l935:
 17406                           
 17407                           ;RemoteCan.c: 593: wait_low_3 = 0;
 17408  01655C  984C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17409                           
 17410                           ;RemoteCan.c: 594: if (PORTBbits.RB1 == 1) {
 17411  01655E  A281               	btfss	3969,1,c	;volatile
 17412  016560  0012               	return	
 17413                           
 17414                           ;RemoteCan.c: 595: F2_switch = ~F2_switch;
 17415  016562  B84A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17416  016564  D002               	goto	u9110
 17417  016566  884A               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17418  016568  D001               	goto	u9125
 17419  01656A                     u9110:
 17420  01656A  984A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17421  01656C                     u9125:
 17422                           
 17423                           ;RemoteCan.c: 596: wait_low_3 = 1;
 17424  01656C  884C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17425  01656E  0012               	return	
 17426  016570                     __end_of_F2_Button_Polling:
 17427                           	opt stack 0
 17428                           tblptru	equ	0xFF8
 17429                           tblptrh	equ	0xFF7
 17430                           tblptrl	equ	0xFF6
 17431                           tablat	equ	0xFF5
 17432                           prodh	equ	0xFF4
 17433                           prodl	equ	0xFF3
 17434                           intcon	equ	0xFF2
 17435                           postinc0	equ	0xFEE
 17436                           wreg	equ	0xFE8
 17437                           indf1	equ	0xFE7
 17438                           plusw1	equ	0xFE3
 17439                           fsr1h	equ	0xFE2
 17440                           fsr1l	equ	0xFE1
 17441                           indf2	equ	0xFDF
 17442                           postinc2	equ	0xFDE
 17443                           plusw2	equ	0xFDB
 17444                           fsr2h	equ	0xFDA
 17445                           fsr2l	equ	0xFD9
 17446                           status	equ	0xFD8
 17447                           
 17448 ;; *************** function _F1_Button_Polling *****************
 17449 ;; Defined at:
 17450 ;;		line 581 in file "RemoteCan.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;		None
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;		None
 17455 ;; Return value:  Size  Location     Type
 17456 ;;		None               void
 17457 ;; Registers used:
 17458 ;;		None
 17459 ;; Tracked objects:
 17460 ;;		On entry : 0/0
 17461 ;;		On exit  : 0/0
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;Total ram usage:        0 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:    3
 17471 ;; This function calls:
 17472 ;;		Nothing
 17473 ;; This function is called by:
 17474 ;;		_main
 17475 ;; This function uses a non-reentrant model
 17476 ;;
 17477                           
 17478                           	psect	text52
 17479  016570                     __ptext52:
 17480                           	opt stack 0
 17481  016570                     _F1_Button_Polling:
 17482                           	opt stack 27
 17483                           
 17484                           ;RemoteCan.c: 582: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 17485                           
 17486                           ;incstack = 0
 17487  016570  A881               	btfss	3969,4,c	;volatile
 17488  016572  D002               	goto	l928
 17489  016574  B64C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17490  016576  0012               	return	
 17491  016578                     l928:
 17492                           
 17493                           ;RemoteCan.c: 583: wait_low_2 = 0;
 17494  016578  964C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17495                           
 17496                           ;RemoteCan.c: 584: if (PORTBbits.RB4 == 1) {
 17497  01657A  A881               	btfss	3969,4,c	;volatile
 17498  01657C  0012               	return	
 17499                           
 17500                           ;RemoteCan.c: 585: F1_switch = ~F1_switch;
 17501  01657E  B64A               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17502  016580  D002               	goto	u9060
 17503  016582  864A               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17504  016584  D001               	goto	u9075
 17505  016586                     u9060:
 17506  016586  964A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17507  016588                     u9075:
 17508                           
 17509                           ;RemoteCan.c: 586: wait_low_2 = 1;
 17510  016588  864C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17511  01658A  0012               	return	
 17512  01658C                     __end_of_F1_Button_Polling:
 17513                           	opt stack 0
 17514                           tblptru	equ	0xFF8
 17515                           tblptrh	equ	0xFF7
 17516                           tblptrl	equ	0xFF6
 17517                           tablat	equ	0xFF5
 17518                           prodh	equ	0xFF4
 17519                           prodl	equ	0xFF3
 17520                           intcon	equ	0xFF2
 17521                           postinc0	equ	0xFEE
 17522                           wreg	equ	0xFE8
 17523                           indf1	equ	0xFE7
 17524                           plusw1	equ	0xFE3
 17525                           fsr1h	equ	0xFE2
 17526                           fsr1l	equ	0xFE1
 17527                           indf2	equ	0xFDF
 17528                           postinc2	equ	0xFDE
 17529                           plusw2	equ	0xFDB
 17530                           fsr2h	equ	0xFDA
 17531                           fsr2l	equ	0xFD9
 17532                           status	equ	0xFD8
 17533                           
 17534 ;; *************** function _CAN_Tx *****************
 17535 ;; Defined at:
 17536 ;;		line 610 in file "RemoteCan.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;		None
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;		None
 17541 ;; Return value:  Size  Location     Type
 17542 ;;		None               void
 17543 ;; Registers used:
 17544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17554 ;;Total ram usage:        0 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:    4
 17557 ;; This function calls:
 17558 ;;		_CANisTxReady
 17559 ;;		_CANsendMessage
 17560 ;; This function is called by:
 17561 ;;		_main
 17562 ;; This function uses a non-reentrant model
 17563 ;;
 17564                           
 17565                           	psect	text53
 17566  015B08                     __ptext53:
 17567                           	opt stack 0
 17568  015B08                     _CAN_Tx:
 17569                           	opt stack 26
 17570  015B08                     l7135:
 17571  015B08  EC5C  F0B2         	call	_CANisTxReady	;wreg free
 17572  015B0C  06E8               	decf	wreg,f,c
 17573  015B0E  A4D8               	btfss	status,2,c
 17574  015B10  D7FB               	goto	l7135
 17575                           
 17576                           ;RemoteCan.c: 613: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17577  015B12  0E07               	movlw	7
 17578  015B14  0100               	movlb	0	; () banked
 17579  015B16  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 17580  015B18  0E00               	movlw	0
 17581  015B1A  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17582  015B1C  0E00               	movlw	0
 17583  015B1E  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17584  015B20  0E00               	movlw	0
 17585  015B22  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17586  015B24  0E3D               	movlw	low _data_steering
 17587  015B26  0100               	movlb	0	; () banked
 17588  015B28  6F74               	movwf	CANsendMessage@data& (0+255),b
 17589  015B2A  0E01               	movlw	high _data_steering
 17590  015B2C  0100               	movlb	0	; () banked
 17591  015B2E  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 17592  015B30  0E08               	movlw	8
 17593  015B32  0100               	movlb	0	; () banked
 17594  015B34  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 17595  015B36  0EBC               	movlw	188
 17596  015B38  0100               	movlb	0	; () banked
 17597  015B3A  6F77               	movwf	CANsendMessage@flags& (0+255),b
 17598  015B3C  ECAC  F08D         	call	_CANsendMessage	;wreg free
 17599                           
 17600                           ;RemoteCan.c: 616: data_speed[0] = set_speed;
 17601  015B40  C0E6  F135         	movff	_set_speed,_data_speed	;volatile
 17602                           
 17603                           ;RemoteCan.c: 617: data_speed[1] = (set_speed >> 8);
 17604  015B44  0100               	movlb	0	; () banked
 17605  015B46  51E7               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17606  015B48  0101               	movlb	1	; () banked
 17607  015B4A  6F36               	movwf	(_data_speed+1)& (0+255),b
 17608                           
 17609                           ; BSR set to: 1
 17610                           ;RemoteCan.c: 618: data_speed[2] = dir;
 17611  015B4C  C0E8  F137         	movff	_dir,_data_speed+2	;volatile
 17612  015B50                     l7145:
 17613  015B50  EC5C  F0B2         	call	_CANisTxReady	;wreg free
 17614  015B54  06E8               	decf	wreg,f,c
 17615  015B56  A4D8               	btfss	status,2,c
 17616  015B58  D7FB               	goto	l7145
 17617                           
 17618                           ;RemoteCan.c: 620: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17619  015B5A  0E05               	movlw	5
 17620  015B5C  0100               	movlb	0	; () banked
 17621  015B5E  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 17622  015B60  0E00               	movlw	0
 17623  015B62  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17624  015B64  0E00               	movlw	0
 17625  015B66  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17626  015B68  0E00               	movlw	0
 17627  015B6A  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17628  015B6C  0E35               	movlw	low _data_speed
 17629  015B6E  0100               	movlb	0	; () banked
 17630  015B70  6F74               	movwf	CANsendMessage@data& (0+255),b
 17631  015B72  0E01               	movlw	high _data_speed
 17632  015B74  0100               	movlb	0	; () banked
 17633  015B76  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 17634  015B78  0E08               	movlw	8
 17635  015B7A  0100               	movlb	0	; () banked
 17636  015B7C  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 17637  015B7E  0EBC               	movlw	188
 17638  015B80  0100               	movlb	0	; () banked
 17639  015B82  6F77               	movwf	CANsendMessage@flags& (0+255),b
 17640  015B84  ECAC  F08D         	call	_CANsendMessage	;wreg free
 17641  015B88                     l7149:
 17642  015B88  EC5C  F0B2         	call	_CANisTxReady	;wreg free
 17643  015B8C  06E8               	decf	wreg,f,c
 17644  015B8E  A4D8               	btfss	status,2,c
 17645  015B90  D7FB               	goto	l7149
 17646                           
 17647                           ;RemoteCan.c: 624: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17648  015B92  0E06               	movlw	6
 17649  015B94  0100               	movlb	0	; () banked
 17650  015B96  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 17651  015B98  0E00               	movlw	0
 17652  015B9A  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17653  015B9C  0E00               	movlw	0
 17654  015B9E  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17655  015BA0  0E00               	movlw	0
 17656  015BA2  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17657  015BA4  0E2D               	movlw	low _data_brake
 17658  015BA6  0100               	movlb	0	; () banked
 17659  015BA8  6F74               	movwf	CANsendMessage@data& (0+255),b
 17660  015BAA  0E01               	movlw	high _data_brake
 17661  015BAC  0100               	movlb	0	; () banked
 17662  015BAE  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 17663  015BB0  0E08               	movlw	8
 17664  015BB2  0100               	movlb	0	; () banked
 17665  015BB4  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 17666  015BB6  0EBC               	movlw	188
 17667  015BB8  0100               	movlb	0	; () banked
 17668  015BBA  6F77               	movwf	CANsendMessage@flags& (0+255),b
 17669  015BBC  ECAC  F08D         	call	_CANsendMessage	;wreg free
 17670  015BC0  0012               	return		;funcret
 17671  015BC2                     __end_of_CAN_Tx:
 17672                           	opt stack 0
 17673                           tblptru	equ	0xFF8
 17674                           tblptrh	equ	0xFF7
 17675                           tblptrl	equ	0xFF6
 17676                           tablat	equ	0xFF5
 17677                           prodh	equ	0xFF4
 17678                           prodl	equ	0xFF3
 17679                           intcon	equ	0xFF2
 17680                           postinc0	equ	0xFEE
 17681                           wreg	equ	0xFE8
 17682                           indf1	equ	0xFE7
 17683                           plusw1	equ	0xFE3
 17684                           fsr1h	equ	0xFE2
 17685                           fsr1l	equ	0xFE1
 17686                           indf2	equ	0xFDF
 17687                           postinc2	equ	0xFDE
 17688                           plusw2	equ	0xFDB
 17689                           fsr2h	equ	0xFDA
 17690                           fsr2l	equ	0xFD9
 17691                           status	equ	0xFD8
 17692                           
 17693 ;; *************** function _CANsendMessage *****************
 17694 ;; Defined at:
 17695 ;;		line 294 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17696 ;; Parameters:    Size  Location     Type
 17697 ;;  identifier      4   16[BANK0 ] unsigned long 
 17698 ;;  data            2   20[BANK0 ] PTR unsigned char 
 17699 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 17700 ;;		 -> data(8), 
 17701 ;;  dataLength      1   22[BANK0 ] unsigned char 
 17702 ;;  flags           1   23[BANK0 ] enum E16909
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;  tamp            4   28[BANK0 ] unsigned long 
 17705 ;; Return value:  Size  Location     Type
 17706 ;;		None               void
 17707 ;; Registers used:
 17708 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17709 ;; Tracked objects:
 17710 ;;		On entry : 0/0
 17711 ;;		On exit  : 0/0
 17712 ;;		Unchanged: 0/0
 17713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17714 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17715 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17717 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17718 ;;Total ram usage:       16 bytes
 17719 ;; Hardware stack levels used:    1
 17720 ;; Hardware stack levels required when called:    3
 17721 ;; This function calls:
 17722 ;;		Nothing
 17723 ;; This function is called by:
 17724 ;;		_main
 17725 ;;		_LCD_Handler
 17726 ;;		_CAN_Tx
 17727 ;; This function uses a non-reentrant model
 17728 ;;
 17729                           
 17730                           	psect	text54
 17731  011B58                     __ptext54:
 17732                           	opt stack 0
 17733  011B58                     _CANsendMessage:
 17734                           	opt stack 26
 17735                           
 17736                           ;inc\CANlib.h: 296: unsigned long tamp;
 17737                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17738                           
 17739                           ;incstack = 0
 17740  011B58  010F               	movlb	15	; () banked
 17741  011B5A  B740               	btfsc	64,3,b	;volatile
 17742  011B5C  D13F               	goto	l381
 17743                           
 17744                           ; BSR set to: 15
 17745                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17746  011B5E  C076  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17747                           
 17748                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17749  011B62  0100               	movlb	0	; () banked
 17750  011B64  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17751  011B66  D003               	goto	l382
 17752                           
 17753                           ; BSR set to: 0
 17754                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17755  011B68  010F               	movlb	15	; () banked
 17756  011B6A  8D45               	bsf	69,6,b	;volatile
 17757  011B6C  D002               	goto	l383
 17758  011B6E                     l382:
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;inc\CANlib.h: 302: else
 17762                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17763  011B6E  010F               	movlb	15	; () banked
 17764  011B70  9D45               	bcf	69,6,b	;volatile
 17765  011B72                     l383:
 17766                           
 17767                           ; BSR set to: 15
 17768                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17769  011B72  0100               	movlb	0	; () banked
 17770  011B74  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17771  011B76  D079               	goto	l384
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;inc\CANlib.h: 306: {
 17775                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17776  011B78  0100               	movlb	0	; () banked
 17777  011B7A  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17778  011B7C  0100               	movlb	0	; () banked
 17779  011B7E  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17780  011B80  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17781  011B82  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17782  011B84  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17786  011B86  C07C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17790  011B8A  0E00               	movlw	0
 17791  011B8C  0100               	movlb	0	; () banked
 17792  011B8E  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17793  011B90  0100               	movlb	0	; () banked
 17794  011B92  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17795  011B94  0EFF               	movlw	255
 17796  011B96  0100               	movlb	0	; () banked
 17797  011B98  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17798  011B9A  0100               	movlb	0	; () banked
 17799  011B9C  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17800  011B9E  0E00               	movlw	0
 17801  011BA0  0100               	movlb	0	; () banked
 17802  011BA2  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17803  011BA4  0100               	movlb	0	; () banked
 17804  011BA6  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17805  011BA8  0E00               	movlw	0
 17806  011BAA  0100               	movlb	0	; () banked
 17807  011BAC  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17808  011BAE  0100               	movlb	0	; () banked
 17809  011BB0  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17813  011BB2  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17814  011BB6  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17815  011BBA  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17816  011BBE  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17817  011BC2  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17818  011BC6  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17819  011BCA  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17820  011BCE  0100               	movlb	0	; () banked
 17821  011BD0  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17822  011BD2  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17823  011BD6  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17824  011BDA  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17825  011BDE  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17829  011BE2  C07C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17833  011BE6  0E00               	movlw	0
 17834  011BE8  010F               	movlb	15	; () banked
 17835  011BEA  6F42               	movwf	66,b	;volatile
 17836                           
 17837                           ; BSR set to: 15
 17838                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17839  011BEC  010F               	movlb	15	; () banked
 17840  011BEE  8742               	bsf	66,3,b	;volatile
 17841                           
 17842                           ; BSR set to: 15
 17843                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17844  011BF0  0100               	movlb	0	; () banked
 17845  011BF2  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17846  011BF4  D002               	goto	l385
 17847                           
 17848                           ; BSR set to: 0
 17849                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17850  011BF6  010F               	movlb	15	; () banked
 17851  011BF8  8142               	bsf	66,0,b	;volatile
 17852  011BFA                     l385:
 17853                           
 17854                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17855  011BFA  0100               	movlb	0	; () banked
 17856  011BFC  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17857  011BFE  D002               	goto	l386
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17861  011C00  010F               	movlb	15	; () banked
 17862  011C02  8342               	bsf	66,1,b	;volatile
 17863  011C04                     l386:
 17864                           
 17865                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17866  011C04  0100               	movlb	0	; () banked
 17867  011C06  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17868  011C08  D002               	goto	l387
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17872  011C0A  010F               	movlb	15	; () banked
 17873  011C0C  8B42               	bsf	66,5,b	;volatile
 17874  011C0E                     l387:
 17875                           
 17876                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17877  011C0E  0100               	movlb	0	; () banked
 17878  011C10  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17879  011C12  D002               	goto	l388
 17880                           
 17881                           ; BSR set to: 0
 17882                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17883  011C14  010F               	movlb	15	; () banked
 17884  011C16  8D42               	bsf	66,6,b	;volatile
 17885  011C18                     l388:
 17886                           
 17887                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17888  011C18  0100               	movlb	0	; () banked
 17889  011C1A  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17890  011C1C  D002               	goto	l6263
 17891                           
 17892                           ; BSR set to: 0
 17893                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17894  011C1E  010F               	movlb	15	; () banked
 17895  011C20  8F42               	bsf	66,7,b	;volatile
 17896  011C22                     l6263:
 17897                           
 17898                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17899  011C22  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17900  011C26  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17901  011C2A  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17902  011C2E  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17903  011C32  0E16               	movlw	22
 17904  011C34  D006               	goto	u7750
 17905  011C36                     u7755:
 17906  011C36  0100               	movlb	0	; () banked
 17907  011C38  90D8               	bcf	status,0,c
 17908  011C3A  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17909  011C3C  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17910  011C3E  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17911  011C40  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17912  011C42                     u7750:
 17913  011C42  2EE8               	decfsz	wreg,f,c
 17914  011C44  D7F8               	goto	u7755
 17915  011C46  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17916  011C4A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17917  011C4E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17918  011C52  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17922  011C56  0100               	movlb	0	; () banked
 17923  011C58  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17924  011C5A  0100               	movlb	0	; () banked
 17925  011C5C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17926  011C5E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17927  011C60  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17928  011C62  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17929                           
 17930                           ; BSR set to: 0
 17931                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17932  011C64  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17933                           
 17934                           ;inc\CANlib.h: 332: }
 17935  011C68  D059               	goto	l6283
 17936  011C6A                     l384:
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;inc\CANlib.h: 334: else
 17940                           ;inc\CANlib.h: 336: {
 17941                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17942  011C6A  010F               	movlb	15	; () banked
 17943  011C6C  9742               	bcf	66,3,b	;volatile
 17944                           
 17945                           ; BSR set to: 15
 17946                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17947  011C6E  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17948  011C72  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17949  011C76  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17950  011C7A  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17951  011C7E  0E04               	movlw	4
 17952  011C80  D006               	goto	u7760
 17953  011C82                     u7765:
 17954  011C82  0100               	movlb	0	; () banked
 17955  011C84  90D8               	bcf	status,0,c
 17956  011C86  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17957  011C88  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17958  011C8A  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17959  011C8C  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17960  011C8E                     u7760:
 17961  011C8E  2EE8               	decfsz	wreg,f,c
 17962  011C90  D7F8               	goto	u7765
 17963  011C92  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17964  011C96  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17965  011C9A  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17966  011C9E  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17967                           
 17968                           ; BSR set to: 0
 17969                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17970  011CA2  0100               	movlb	0	; () banked
 17971  011CA4  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17972  011CA6  0100               	movlb	0	; () banked
 17973  011CA8  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17974  011CAA  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17975  011CAC  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17976  011CAE  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17977                           
 17978                           ; BSR set to: 0
 17979                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17980  011CB0  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17984  011CB4  0E07               	movlw	7
 17985  011CB6  0100               	movlb	0	; () banked
 17986  011CB8  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17987  011CBA  0100               	movlb	0	; () banked
 17988  011CBC  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17989  011CBE  0E00               	movlw	0
 17990  011CC0  0100               	movlb	0	; () banked
 17991  011CC2  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17992  011CC4  0100               	movlb	0	; () banked
 17993  011CC6  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17994  011CC8  0E00               	movlw	0
 17995  011CCA  0100               	movlb	0	; () banked
 17996  011CCC  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17997  011CCE  0100               	movlb	0	; () banked
 17998  011CD0  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17999  011CD2  0E00               	movlw	0
 18000  011CD4  0100               	movlb	0	; () banked
 18001  011CD6  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18002  011CD8  0100               	movlb	0	; () banked
 18003  011CDA  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 18007  011CDC  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18008  011CE0  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18009  011CE4  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18010  011CE8  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18011  011CEC  0E05               	movlw	5
 18012  011CEE                     u7775:
 18013  011CEE  90D8               	bcf	status,0,c
 18014  011CF0  0100               	movlb	0	; () banked
 18015  011CF2  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18016  011CF4  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18017  011CF6  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18018  011CF8  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18019  011CFA  2EE8               	decfsz	wreg,f,c
 18020  011CFC  D7F8               	goto	u7775
 18021  011CFE  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18022  011D02  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18023  011D06  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18024  011D0A  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18025                           
 18026                           ; BSR set to: 0
 18027                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 18028  011D0E  010F               	movlb	15	; () banked
 18029  011D10  5142               	movf	66,w,b	;volatile
 18030  011D12  0B1F               	andlw	31
 18031  011D14  010F               	movlb	15	; () banked
 18032  011D16  6F42               	movwf	66,b	;volatile
 18033                           
 18034                           ; BSR set to: 15
 18035                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 18036  011D18  C07C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 18037  011D1C                     l6283:
 18038                           
 18039                           ;inc\CANlib.h: 347: }
 18040                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 18041  011D1C  0100               	movlb	0	; () banked
 18042  011D1E  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18043  011D20  D003               	goto	l391
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 18047  011D22  010F               	movlb	15	; () banked
 18048  011D24  8140               	bsf	64,0,b	;volatile
 18049  011D26  D002               	goto	l392
 18050  011D28                     l391:
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;inc\CANlib.h: 351: else
 18054                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 18055  011D28  010F               	movlb	15	; () banked
 18056  011D2A  9140               	bcf	64,0,b	;volatile
 18057  011D2C                     l392:
 18058                           
 18059                           ; BSR set to: 15
 18060                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 18061  011D2C  0100               	movlb	0	; () banked
 18062  011D2E  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18063  011D30  D003               	goto	l393
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 18067  011D32  010F               	movlb	15	; () banked
 18068  011D34  8340               	bsf	64,1,b	;volatile
 18069  011D36  D002               	goto	l6289
 18070  011D38                     l393:
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;inc\CANlib.h: 355: else
 18074                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 18075  011D38  010F               	movlb	15	; () banked
 18076  011D3A  9340               	bcf	64,1,b	;volatile
 18077  011D3C                     l6289:
 18078                           
 18079                           ; BSR set to: 15
 18080                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 18081  011D3C  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18082  011D40  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18083  011D44  50DF               	movf	indf2,w,c
 18084  011D46  010F               	movlb	15	; () banked
 18085  011D48  6F46               	movwf	70,b	;volatile
 18086                           
 18087                           ; BSR set to: 15
 18088                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 18089  011D4A  0100               	movlb	0	; () banked
 18090  011D4C  EE20 F001          	lfsr	2,1
 18091  011D50  5174               	movf	CANsendMessage@data& (0+255),w,b
 18092  011D52  26D9               	addwf	fsr2l,f,c
 18093  011D54  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18094  011D56  22DA               	addwfc	fsr2h,f,c
 18095  011D58  50DF               	movf	indf2,w,c
 18096  011D5A  010F               	movlb	15	; () banked
 18097  011D5C  6F47               	movwf	71,b	;volatile
 18098                           
 18099                           ; BSR set to: 15
 18100                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 18101  011D5E  0100               	movlb	0	; () banked
 18102  011D60  EE20 F002          	lfsr	2,2
 18103  011D64  5174               	movf	CANsendMessage@data& (0+255),w,b
 18104  011D66  26D9               	addwf	fsr2l,f,c
 18105  011D68  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18106  011D6A  22DA               	addwfc	fsr2h,f,c
 18107  011D6C  50DF               	movf	indf2,w,c
 18108  011D6E  010F               	movlb	15	; () banked
 18109  011D70  6F48               	movwf	72,b	;volatile
 18110                           
 18111                           ; BSR set to: 15
 18112                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 18113  011D72  0100               	movlb	0	; () banked
 18114  011D74  EE20 F003          	lfsr	2,3
 18115  011D78  5174               	movf	CANsendMessage@data& (0+255),w,b
 18116  011D7A  26D9               	addwf	fsr2l,f,c
 18117  011D7C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18118  011D7E  22DA               	addwfc	fsr2h,f,c
 18119  011D80  50DF               	movf	indf2,w,c
 18120  011D82  010F               	movlb	15	; () banked
 18121  011D84  6F49               	movwf	73,b	;volatile
 18122                           
 18123                           ; BSR set to: 15
 18124                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 18125  011D86  0100               	movlb	0	; () banked
 18126  011D88  EE20 F004          	lfsr	2,4
 18127  011D8C  5174               	movf	CANsendMessage@data& (0+255),w,b
 18128  011D8E  26D9               	addwf	fsr2l,f,c
 18129  011D90  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18130  011D92  22DA               	addwfc	fsr2h,f,c
 18131  011D94  50DF               	movf	indf2,w,c
 18132  011D96  010F               	movlb	15	; () banked
 18133  011D98  6F4A               	movwf	74,b	;volatile
 18134                           
 18135                           ; BSR set to: 15
 18136                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 18137  011D9A  0100               	movlb	0	; () banked
 18138  011D9C  EE20 F005          	lfsr	2,5
 18139  011DA0  5174               	movf	CANsendMessage@data& (0+255),w,b
 18140  011DA2  26D9               	addwf	fsr2l,f,c
 18141  011DA4  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18142  011DA6  22DA               	addwfc	fsr2h,f,c
 18143  011DA8  50DF               	movf	indf2,w,c
 18144  011DAA  010F               	movlb	15	; () banked
 18145  011DAC  6F4B               	movwf	75,b	;volatile
 18146                           
 18147                           ; BSR set to: 15
 18148                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 18149  011DAE  0100               	movlb	0	; () banked
 18150  011DB0  EE20 F006          	lfsr	2,6
 18151  011DB4  5174               	movf	CANsendMessage@data& (0+255),w,b
 18152  011DB6  26D9               	addwf	fsr2l,f,c
 18153  011DB8  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18154  011DBA  22DA               	addwfc	fsr2h,f,c
 18155  011DBC  50DF               	movf	indf2,w,c
 18156  011DBE  010F               	movlb	15	; () banked
 18157  011DC0  6F4C               	movwf	76,b	;volatile
 18158                           
 18159                           ; BSR set to: 15
 18160                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 18161  011DC2  0100               	movlb	0	; () banked
 18162  011DC4  EE20 F007          	lfsr	2,7
 18163  011DC8  5174               	movf	CANsendMessage@data& (0+255),w,b
 18164  011DCA  26D9               	addwf	fsr2l,f,c
 18165  011DCC  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18166  011DCE  22DA               	addwfc	fsr2h,f,c
 18167  011DD0  50DF               	movf	indf2,w,c
 18168  011DD2  010F               	movlb	15	; () banked
 18169  011DD4  6F4D               	movwf	77,b	;volatile
 18170                           
 18171                           ; BSR set to: 15
 18172                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 18173  011DD6  010F               	movlb	15	; () banked
 18174  011DD8  8740               	bsf	64,3,b	;volatile
 18175                           
 18176                           ; BSR set to: 15
 18177                           ;inc\CANlib.h: 368: return;
 18178  011DDA  0012               	return	
 18179  011DDC                     l381:
 18180                           
 18181                           ; BSR set to: 15
 18182                           ;inc\CANlib.h: 369: }
 18183                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 18184  011DDC  010F               	movlb	15	; () banked
 18185  011DDE  B730               	btfsc	48,3,b	;volatile
 18186  011DE0  D13F               	goto	l396
 18187                           
 18188                           ; BSR set to: 15
 18189                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 18190  011DE2  C076  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 18191                           
 18192                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 18193  011DE6  0100               	movlb	0	; () banked
 18194  011DE8  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 18195  011DEA  D003               	goto	l397
 18196                           
 18197                           ; BSR set to: 0
 18198                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 18199  011DEC  010F               	movlb	15	; () banked
 18200  011DEE  8D35               	bsf	53,6,b	;volatile
 18201  011DF0  D002               	goto	l398
 18202  011DF2                     l397:
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;inc\CANlib.h: 378: else
 18206                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 18207  011DF2  010F               	movlb	15	; () banked
 18208  011DF4  9D35               	bcf	53,6,b	;volatile
 18209  011DF6                     l398:
 18210                           
 18211                           ; BSR set to: 15
 18212                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 18213  011DF6  0100               	movlb	0	; () banked
 18214  011DF8  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 18215  011DFA  D079               	goto	l399
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;inc\CANlib.h: 382: {
 18219                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 18220  011DFC  0100               	movlb	0	; () banked
 18221  011DFE  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 18222  011E00  0100               	movlb	0	; () banked
 18223  011E02  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18224  011E04  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18225  011E06  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18226  011E08  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 18230  011E0A  C07C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 18234  011E0E  0E00               	movlw	0
 18235  011E10  0100               	movlb	0	; () banked
 18236  011E12  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18237  011E14  0100               	movlb	0	; () banked
 18238  011E16  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18239  011E18  0EFF               	movlw	255
 18240  011E1A  0100               	movlb	0	; () banked
 18241  011E1C  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18242  011E1E  0100               	movlb	0	; () banked
 18243  011E20  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18244  011E22  0E00               	movlw	0
 18245  011E24  0100               	movlb	0	; () banked
 18246  011E26  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18247  011E28  0100               	movlb	0	; () banked
 18248  011E2A  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18249  011E2C  0E00               	movlw	0
 18250  011E2E  0100               	movlb	0	; () banked
 18251  011E30  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18252  011E32  0100               	movlb	0	; () banked
 18253  011E34  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18254                           
 18255                           ; BSR set to: 0
 18256                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 18257  011E36  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18258  011E3A  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18259  011E3E  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18260  011E42  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18261  011E46  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 18262  011E4A  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18263  011E4E  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18264  011E52  0100               	movlb	0	; () banked
 18265  011E54  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 18266  011E56  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18267  011E5A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18268  011E5E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18269  011E62  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18270                           
 18271                           ; BSR set to: 0
 18272                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 18273  011E66  C07C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 18274                           
 18275                           ; BSR set to: 0
 18276                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 18277  011E6A  0E00               	movlw	0
 18278  011E6C  010F               	movlb	15	; () banked
 18279  011E6E  6F32               	movwf	50,b	;volatile
 18280                           
 18281                           ; BSR set to: 15
 18282                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 18283  011E70  010F               	movlb	15	; () banked
 18284  011E72  8732               	bsf	50,3,b	;volatile
 18285                           
 18286                           ; BSR set to: 15
 18287                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18288  011E74  0100               	movlb	0	; () banked
 18289  011E76  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18290  011E78  D002               	goto	l400
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18294  011E7A  010F               	movlb	15	; () banked
 18295  011E7C  8132               	bsf	50,0,b	;volatile
 18296  011E7E                     l400:
 18297                           
 18298                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18299  011E7E  0100               	movlb	0	; () banked
 18300  011E80  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18301  011E82  D002               	goto	l401
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18305  011E84  010F               	movlb	15	; () banked
 18306  011E86  8332               	bsf	50,1,b	;volatile
 18307  011E88                     l401:
 18308                           
 18309                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18310  011E88  0100               	movlb	0	; () banked
 18311  011E8A  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18312  011E8C  D002               	goto	l402
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18316  011E8E  010F               	movlb	15	; () banked
 18317  011E90  8B32               	bsf	50,5,b	;volatile
 18318  011E92                     l402:
 18319                           
 18320                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18321  011E92  0100               	movlb	0	; () banked
 18322  011E94  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18323  011E96  D002               	goto	l403
 18324                           
 18325                           ; BSR set to: 0
 18326                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18327  011E98  010F               	movlb	15	; () banked
 18328  011E9A  8D32               	bsf	50,6,b	;volatile
 18329  011E9C                     l403:
 18330                           
 18331                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18332  011E9C  0100               	movlb	0	; () banked
 18333  011E9E  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18334  011EA0  D002               	goto	l6339
 18335                           
 18336                           ; BSR set to: 0
 18337                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18338  011EA2  010F               	movlb	15	; () banked
 18339  011EA4  8F32               	bsf	50,7,b	;volatile
 18340  011EA6                     l6339:
 18341                           
 18342                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18343  011EA6  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18344  011EAA  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18345  011EAE  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18346  011EB2  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18347  011EB6  0E16               	movlw	22
 18348  011EB8  D006               	goto	u7880
 18349  011EBA                     u7885:
 18350  011EBA  0100               	movlb	0	; () banked
 18351  011EBC  90D8               	bcf	status,0,c
 18352  011EBE  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18353  011EC0  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18354  011EC2  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18355  011EC4  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18356  011EC6                     u7880:
 18357  011EC6  2EE8               	decfsz	wreg,f,c
 18358  011EC8  D7F8               	goto	u7885
 18359  011ECA  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18360  011ECE  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18361  011ED2  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18362  011ED6  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18363                           
 18364                           ; BSR set to: 0
 18365                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18366  011EDA  0100               	movlb	0	; () banked
 18367  011EDC  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18368  011EDE  0100               	movlb	0	; () banked
 18369  011EE0  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18370  011EE2  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18371  011EE4  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18372  011EE6  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18373                           
 18374                           ; BSR set to: 0
 18375                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18376  011EE8  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18377                           
 18378                           ;inc\CANlib.h: 407: }
 18379  011EEC  D059               	goto	l6359
 18380  011EEE                     l399:
 18381                           
 18382                           ; BSR set to: 0
 18383                           ;inc\CANlib.h: 409: else
 18384                           ;inc\CANlib.h: 411: {
 18385                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18386  011EEE  010F               	movlb	15	; () banked
 18387  011EF0  9732               	bcf	50,3,b	;volatile
 18388                           
 18389                           ; BSR set to: 15
 18390                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18391  011EF2  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18392  011EF6  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18393  011EFA  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18394  011EFE  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18395  011F02  0E04               	movlw	4
 18396  011F04  D006               	goto	u7890
 18397  011F06                     u7895:
 18398  011F06  0100               	movlb	0	; () banked
 18399  011F08  90D8               	bcf	status,0,c
 18400  011F0A  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18401  011F0C  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18402  011F0E  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18403  011F10  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18404  011F12                     u7890:
 18405  011F12  2EE8               	decfsz	wreg,f,c
 18406  011F14  D7F8               	goto	u7895
 18407  011F16  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18408  011F1A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18409  011F1E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18410  011F22  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18414  011F26  0100               	movlb	0	; () banked
 18415  011F28  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18416  011F2A  0100               	movlb	0	; () banked
 18417  011F2C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18418  011F2E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18419  011F30  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18420  011F32  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18421                           
 18422                           ; BSR set to: 0
 18423                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18424  011F34  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18428  011F38  0E07               	movlw	7
 18429  011F3A  0100               	movlb	0	; () banked
 18430  011F3C  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18431  011F3E  0100               	movlb	0	; () banked
 18432  011F40  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18433  011F42  0E00               	movlw	0
 18434  011F44  0100               	movlb	0	; () banked
 18435  011F46  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18436  011F48  0100               	movlb	0	; () banked
 18437  011F4A  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18438  011F4C  0E00               	movlw	0
 18439  011F4E  0100               	movlb	0	; () banked
 18440  011F50  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18441  011F52  0100               	movlb	0	; () banked
 18442  011F54  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18443  011F56  0E00               	movlw	0
 18444  011F58  0100               	movlb	0	; () banked
 18445  011F5A  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18446  011F5C  0100               	movlb	0	; () banked
 18447  011F5E  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18451  011F60  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18452  011F64  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18453  011F68  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18454  011F6C  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18455  011F70  0E05               	movlw	5
 18456  011F72                     u7905:
 18457  011F72  90D8               	bcf	status,0,c
 18458  011F74  0100               	movlb	0	; () banked
 18459  011F76  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18460  011F78  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18461  011F7A  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18462  011F7C  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18463  011F7E  2EE8               	decfsz	wreg,f,c
 18464  011F80  D7F8               	goto	u7905
 18465  011F82  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18466  011F86  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18467  011F8A  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18468  011F8E  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18469                           
 18470                           ; BSR set to: 0
 18471                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18472  011F92  010F               	movlb	15	; () banked
 18473  011F94  5132               	movf	50,w,b	;volatile
 18474  011F96  0B1F               	andlw	31
 18475  011F98  010F               	movlb	15	; () banked
 18476  011F9A  6F32               	movwf	50,b	;volatile
 18477                           
 18478                           ; BSR set to: 15
 18479                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18480  011F9C  C07C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 18481  011FA0                     l6359:
 18482                           
 18483                           ;inc\CANlib.h: 422: }
 18484                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18485  011FA0  0100               	movlb	0	; () banked
 18486  011FA2  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18487  011FA4  D003               	goto	l406
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18491  011FA6  010F               	movlb	15	; () banked
 18492  011FA8  8130               	bsf	48,0,b	;volatile
 18493  011FAA  D002               	goto	l407
 18494  011FAC                     l406:
 18495                           
 18496                           ; BSR set to: 0
 18497                           ;inc\CANlib.h: 426: else
 18498                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18499  011FAC  010F               	movlb	15	; () banked
 18500  011FAE  9130               	bcf	48,0,b	;volatile
 18501  011FB0                     l407:
 18502                           
 18503                           ; BSR set to: 15
 18504                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18505  011FB0  0100               	movlb	0	; () banked
 18506  011FB2  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18507  011FB4  D003               	goto	l408
 18508                           
 18509                           ; BSR set to: 0
 18510                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18511  011FB6  010F               	movlb	15	; () banked
 18512  011FB8  8330               	bsf	48,1,b	;volatile
 18513  011FBA  D002               	goto	l6365
 18514  011FBC                     l408:
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;inc\CANlib.h: 430: else
 18518                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18519  011FBC  010F               	movlb	15	; () banked
 18520  011FBE  9330               	bcf	48,1,b	;volatile
 18521  011FC0                     l6365:
 18522                           
 18523                           ; BSR set to: 15
 18524                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18525  011FC0  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18526  011FC4  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18527  011FC8  50DF               	movf	indf2,w,c
 18528  011FCA  010F               	movlb	15	; () banked
 18529  011FCC  6F36               	movwf	54,b	;volatile
 18530                           
 18531                           ; BSR set to: 15
 18532                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18533  011FCE  0100               	movlb	0	; () banked
 18534  011FD0  EE20 F001          	lfsr	2,1
 18535  011FD4  5174               	movf	CANsendMessage@data& (0+255),w,b
 18536  011FD6  26D9               	addwf	fsr2l,f,c
 18537  011FD8  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18538  011FDA  22DA               	addwfc	fsr2h,f,c
 18539  011FDC  50DF               	movf	indf2,w,c
 18540  011FDE  010F               	movlb	15	; () banked
 18541  011FE0  6F37               	movwf	55,b	;volatile
 18542                           
 18543                           ; BSR set to: 15
 18544                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18545  011FE2  0100               	movlb	0	; () banked
 18546  011FE4  EE20 F002          	lfsr	2,2
 18547  011FE8  5174               	movf	CANsendMessage@data& (0+255),w,b
 18548  011FEA  26D9               	addwf	fsr2l,f,c
 18549  011FEC  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18550  011FEE  22DA               	addwfc	fsr2h,f,c
 18551  011FF0  50DF               	movf	indf2,w,c
 18552  011FF2  010F               	movlb	15	; () banked
 18553  011FF4  6F38               	movwf	56,b	;volatile
 18554                           
 18555                           ; BSR set to: 15
 18556                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18557  011FF6  0100               	movlb	0	; () banked
 18558  011FF8  EE20 F003          	lfsr	2,3
 18559  011FFC  5174               	movf	CANsendMessage@data& (0+255),w,b
 18560  011FFE  26D9               	addwf	fsr2l,f,c
 18561  012000  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18562  012002  22DA               	addwfc	fsr2h,f,c
 18563  012004  50DF               	movf	indf2,w,c
 18564  012006  010F               	movlb	15	; () banked
 18565  012008  6F39               	movwf	57,b	;volatile
 18566                           
 18567                           ; BSR set to: 15
 18568                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18569  01200A  0100               	movlb	0	; () banked
 18570  01200C  EE20 F004          	lfsr	2,4
 18571  012010  5174               	movf	CANsendMessage@data& (0+255),w,b
 18572  012012  26D9               	addwf	fsr2l,f,c
 18573  012014  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18574  012016  22DA               	addwfc	fsr2h,f,c
 18575  012018  50DF               	movf	indf2,w,c
 18576  01201A  010F               	movlb	15	; () banked
 18577  01201C  6F3A               	movwf	58,b	;volatile
 18578                           
 18579                           ; BSR set to: 15
 18580                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18581  01201E  0100               	movlb	0	; () banked
 18582  012020  EE20 F005          	lfsr	2,5
 18583  012024  5174               	movf	CANsendMessage@data& (0+255),w,b
 18584  012026  26D9               	addwf	fsr2l,f,c
 18585  012028  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18586  01202A  22DA               	addwfc	fsr2h,f,c
 18587  01202C  50DF               	movf	indf2,w,c
 18588  01202E  010F               	movlb	15	; () banked
 18589  012030  6F3B               	movwf	59,b	;volatile
 18590                           
 18591                           ; BSR set to: 15
 18592                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18593  012032  0100               	movlb	0	; () banked
 18594  012034  EE20 F006          	lfsr	2,6
 18595  012038  5174               	movf	CANsendMessage@data& (0+255),w,b
 18596  01203A  26D9               	addwf	fsr2l,f,c
 18597  01203C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18598  01203E  22DA               	addwfc	fsr2h,f,c
 18599  012040  50DF               	movf	indf2,w,c
 18600  012042  010F               	movlb	15	; () banked
 18601  012044  6F3C               	movwf	60,b	;volatile
 18602                           
 18603                           ; BSR set to: 15
 18604                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18605  012046  0100               	movlb	0	; () banked
 18606  012048  EE20 F007          	lfsr	2,7
 18607  01204C  5174               	movf	CANsendMessage@data& (0+255),w,b
 18608  01204E  26D9               	addwf	fsr2l,f,c
 18609  012050  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18610  012052  22DA               	addwfc	fsr2h,f,c
 18611  012054  50DF               	movf	indf2,w,c
 18612  012056  010F               	movlb	15	; () banked
 18613  012058  6F3D               	movwf	61,b	;volatile
 18614                           
 18615                           ; BSR set to: 15
 18616                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18617  01205A  010F               	movlb	15	; () banked
 18618  01205C  8730               	bsf	48,3,b	;volatile
 18619                           
 18620                           ; BSR set to: 15
 18621                           ;inc\CANlib.h: 444: return;
 18622  01205E  0012               	return	
 18623  012060                     l396:
 18624                           
 18625                           ; BSR set to: 15
 18626                           ;inc\CANlib.h: 445: }
 18627                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18628  012060  010F               	movlb	15	; () banked
 18629  012062  B720               	btfsc	32,3,b	;volatile
 18630  012064  0012               	return	
 18631                           
 18632                           ; BSR set to: 15
 18633                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18634  012066  C076  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18635                           
 18636                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18637  01206A  0100               	movlb	0	; () banked
 18638  01206C  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 18639  01206E  D003               	goto	l411
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18643  012070  010F               	movlb	15	; () banked
 18644  012072  8D25               	bsf	37,6,b	;volatile
 18645  012074  D002               	goto	l412
 18646  012076                     l411:
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;inc\CANlib.h: 454: else
 18650                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18651  012076  010F               	movlb	15	; () banked
 18652  012078  9D25               	bcf	37,6,b	;volatile
 18653  01207A                     l412:
 18654                           
 18655                           ; BSR set to: 15
 18656                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18657  01207A  0100               	movlb	0	; () banked
 18658  01207C  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 18659  01207E  D079               	goto	l413
 18660                           
 18661                           ; BSR set to: 0
 18662                           ;inc\CANlib.h: 458: {
 18663                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18664  012080  0100               	movlb	0	; () banked
 18665  012082  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 18666  012084  0100               	movlb	0	; () banked
 18667  012086  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18668  012088  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18669  01208A  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18670  01208C  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18674  01208E  C07C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18678  012092  0E00               	movlw	0
 18679  012094  0100               	movlb	0	; () banked
 18680  012096  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18681  012098  0100               	movlb	0	; () banked
 18682  01209A  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18683  01209C  0EFF               	movlw	255
 18684  01209E  0100               	movlb	0	; () banked
 18685  0120A0  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18686  0120A2  0100               	movlb	0	; () banked
 18687  0120A4  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18688  0120A6  0E00               	movlw	0
 18689  0120A8  0100               	movlb	0	; () banked
 18690  0120AA  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18691  0120AC  0100               	movlb	0	; () banked
 18692  0120AE  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18693  0120B0  0E00               	movlw	0
 18694  0120B2  0100               	movlb	0	; () banked
 18695  0120B4  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18696  0120B6  0100               	movlb	0	; () banked
 18697  0120B8  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18698                           
 18699                           ; BSR set to: 0
 18700                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18701  0120BA  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18702  0120BE  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18703  0120C2  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18704  0120C6  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18705  0120CA  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 18706  0120CE  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18707  0120D2  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18708  0120D6  0100               	movlb	0	; () banked
 18709  0120D8  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 18710  0120DA  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18711  0120DE  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18712  0120E2  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18713  0120E6  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18717  0120EA  C07C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18718                           
 18719                           ; BSR set to: 0
 18720                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18721  0120EE  0E00               	movlw	0
 18722  0120F0  010F               	movlb	15	; () banked
 18723  0120F2  6F22               	movwf	34,b	;volatile
 18724                           
 18725                           ; BSR set to: 15
 18726                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18727  0120F4  010F               	movlb	15	; () banked
 18728  0120F6  8722               	bsf	34,3,b	;volatile
 18729                           
 18730                           ; BSR set to: 15
 18731                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18732  0120F8  0100               	movlb	0	; () banked
 18733  0120FA  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18734  0120FC  D002               	goto	l414
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18738  0120FE  010F               	movlb	15	; () banked
 18739  012100  8122               	bsf	34,0,b	;volatile
 18740  012102                     l414:
 18741                           
 18742                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18743  012102  0100               	movlb	0	; () banked
 18744  012104  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18745  012106  D002               	goto	l415
 18746                           
 18747                           ; BSR set to: 0
 18748                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18749  012108  010F               	movlb	15	; () banked
 18750  01210A  8322               	bsf	34,1,b	;volatile
 18751  01210C                     l415:
 18752                           
 18753                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18754  01210C  0100               	movlb	0	; () banked
 18755  01210E  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18756  012110  D002               	goto	l416
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18760  012112  010F               	movlb	15	; () banked
 18761  012114  8B22               	bsf	34,5,b	;volatile
 18762  012116                     l416:
 18763                           
 18764                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18765  012116  0100               	movlb	0	; () banked
 18766  012118  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18767  01211A  D002               	goto	l417
 18768                           
 18769                           ; BSR set to: 0
 18770                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18771  01211C  010F               	movlb	15	; () banked
 18772  01211E  8D22               	bsf	34,6,b	;volatile
 18773  012120                     l417:
 18774                           
 18775                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18776  012120  0100               	movlb	0	; () banked
 18777  012122  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18778  012124  D002               	goto	l6415
 18779                           
 18780                           ; BSR set to: 0
 18781                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18782  012126  010F               	movlb	15	; () banked
 18783  012128  8F22               	bsf	34,7,b	;volatile
 18784  01212A                     l6415:
 18785                           
 18786                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18787  01212A  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18788  01212E  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18789  012132  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18790  012136  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18791  01213A  0E16               	movlw	22
 18792  01213C  D006               	goto	u8010
 18793  01213E                     u8015:
 18794  01213E  0100               	movlb	0	; () banked
 18795  012140  90D8               	bcf	status,0,c
 18796  012142  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18797  012144  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18798  012146  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18799  012148  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18800  01214A                     u8010:
 18801  01214A  2EE8               	decfsz	wreg,f,c
 18802  01214C  D7F8               	goto	u8015
 18803  01214E  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18804  012152  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18805  012156  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18806  01215A  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18807                           
 18808                           ; BSR set to: 0
 18809                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18810  01215E  0100               	movlb	0	; () banked
 18811  012160  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18812  012162  0100               	movlb	0	; () banked
 18813  012164  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18814  012166  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18815  012168  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18816  01216A  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18820  01216C  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18821                           
 18822                           ;inc\CANlib.h: 483: }
 18823  012170  D059               	goto	l6435
 18824  012172                     l413:
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;inc\CANlib.h: 485: else
 18828                           ;inc\CANlib.h: 487: {
 18829                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18830  012172  010F               	movlb	15	; () banked
 18831  012174  9722               	bcf	34,3,b	;volatile
 18832                           
 18833                           ; BSR set to: 15
 18834                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18835  012176  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18836  01217A  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18837  01217E  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18838  012182  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18839  012186  0E04               	movlw	4
 18840  012188  D006               	goto	u8020
 18841  01218A                     u8025:
 18842  01218A  0100               	movlb	0	; () banked
 18843  01218C  90D8               	bcf	status,0,c
 18844  01218E  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18845  012190  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18846  012192  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18847  012194  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18848  012196                     u8020:
 18849  012196  2EE8               	decfsz	wreg,f,c
 18850  012198  D7F8               	goto	u8025
 18851  01219A  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18852  01219E  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18853  0121A2  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18854  0121A6  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18858  0121AA  0100               	movlb	0	; () banked
 18859  0121AC  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18860  0121AE  0100               	movlb	0	; () banked
 18861  0121B0  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18862  0121B2  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18863  0121B4  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18864  0121B6  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18868  0121B8  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18872  0121BC  0E07               	movlw	7
 18873  0121BE  0100               	movlb	0	; () banked
 18874  0121C0  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18875  0121C2  0100               	movlb	0	; () banked
 18876  0121C4  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18877  0121C6  0E00               	movlw	0
 18878  0121C8  0100               	movlb	0	; () banked
 18879  0121CA  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18880  0121CC  0100               	movlb	0	; () banked
 18881  0121CE  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18882  0121D0  0E00               	movlw	0
 18883  0121D2  0100               	movlb	0	; () banked
 18884  0121D4  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18885  0121D6  0100               	movlb	0	; () banked
 18886  0121D8  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18887  0121DA  0E00               	movlw	0
 18888  0121DC  0100               	movlb	0	; () banked
 18889  0121DE  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18890  0121E0  0100               	movlb	0	; () banked
 18891  0121E2  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18892                           
 18893                           ; BSR set to: 0
 18894                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18895  0121E4  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18896  0121E8  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18897  0121EC  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18898  0121F0  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18899  0121F4  0E05               	movlw	5
 18900  0121F6                     u8035:
 18901  0121F6  90D8               	bcf	status,0,c
 18902  0121F8  0100               	movlb	0	; () banked
 18903  0121FA  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18904  0121FC  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18905  0121FE  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18906  012200  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18907  012202  2EE8               	decfsz	wreg,f,c
 18908  012204  D7F8               	goto	u8035
 18909  012206  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18910  01220A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18911  01220E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18912  012212  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18916  012216  010F               	movlb	15	; () banked
 18917  012218  5122               	movf	34,w,b	;volatile
 18918  01221A  0B1F               	andlw	31
 18919  01221C  010F               	movlb	15	; () banked
 18920  01221E  6F22               	movwf	34,b	;volatile
 18921                           
 18922                           ; BSR set to: 15
 18923                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18924  012220  C07C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18925  012224                     l6435:
 18926                           
 18927                           ;inc\CANlib.h: 498: }
 18928                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18929  012224  0100               	movlb	0	; () banked
 18930  012226  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18931  012228  D003               	goto	l420
 18932                           
 18933                           ; BSR set to: 0
 18934                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18935  01222A  010F               	movlb	15	; () banked
 18936  01222C  8120               	bsf	32,0,b	;volatile
 18937  01222E  D002               	goto	l421
 18938  012230                     l420:
 18939                           
 18940                           ; BSR set to: 0
 18941                           ;inc\CANlib.h: 502: else
 18942                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18943  012230  010F               	movlb	15	; () banked
 18944  012232  9120               	bcf	32,0,b	;volatile
 18945  012234                     l421:
 18946                           
 18947                           ; BSR set to: 15
 18948                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18949  012234  0100               	movlb	0	; () banked
 18950  012236  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18951  012238  D003               	goto	l422
 18952                           
 18953                           ; BSR set to: 0
 18954                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18955  01223A  010F               	movlb	15	; () banked
 18956  01223C  8320               	bsf	32,1,b	;volatile
 18957  01223E  D002               	goto	l6441
 18958  012240                     l422:
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;inc\CANlib.h: 506: else
 18962                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18963  012240  010F               	movlb	15	; () banked
 18964  012242  9320               	bcf	32,1,b	;volatile
 18965  012244                     l6441:
 18966                           
 18967                           ; BSR set to: 15
 18968                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18969  012244  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18970  012248  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18971  01224C  50DF               	movf	indf2,w,c
 18972  01224E  010F               	movlb	15	; () banked
 18973  012250  6F26               	movwf	38,b	;volatile
 18974                           
 18975                           ; BSR set to: 15
 18976                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18977  012252  0100               	movlb	0	; () banked
 18978  012254  EE20 F001          	lfsr	2,1
 18979  012258  5174               	movf	CANsendMessage@data& (0+255),w,b
 18980  01225A  26D9               	addwf	fsr2l,f,c
 18981  01225C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18982  01225E  22DA               	addwfc	fsr2h,f,c
 18983  012260  50DF               	movf	indf2,w,c
 18984  012262  010F               	movlb	15	; () banked
 18985  012264  6F27               	movwf	39,b	;volatile
 18986                           
 18987                           ; BSR set to: 15
 18988                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18989  012266  0100               	movlb	0	; () banked
 18990  012268  EE20 F002          	lfsr	2,2
 18991  01226C  5174               	movf	CANsendMessage@data& (0+255),w,b
 18992  01226E  26D9               	addwf	fsr2l,f,c
 18993  012270  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18994  012272  22DA               	addwfc	fsr2h,f,c
 18995  012274  50DF               	movf	indf2,w,c
 18996  012276  010F               	movlb	15	; () banked
 18997  012278  6F28               	movwf	40,b	;volatile
 18998                           
 18999                           ; BSR set to: 15
 19000                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 19001  01227A  0100               	movlb	0	; () banked
 19002  01227C  EE20 F003          	lfsr	2,3
 19003  012280  5174               	movf	CANsendMessage@data& (0+255),w,b
 19004  012282  26D9               	addwf	fsr2l,f,c
 19005  012284  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19006  012286  22DA               	addwfc	fsr2h,f,c
 19007  012288  50DF               	movf	indf2,w,c
 19008  01228A  010F               	movlb	15	; () banked
 19009  01228C  6F29               	movwf	41,b	;volatile
 19010                           
 19011                           ; BSR set to: 15
 19012                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 19013  01228E  0100               	movlb	0	; () banked
 19014  012290  EE20 F004          	lfsr	2,4
 19015  012294  5174               	movf	CANsendMessage@data& (0+255),w,b
 19016  012296  26D9               	addwf	fsr2l,f,c
 19017  012298  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19018  01229A  22DA               	addwfc	fsr2h,f,c
 19019  01229C  50DF               	movf	indf2,w,c
 19020  01229E  010F               	movlb	15	; () banked
 19021  0122A0  6F2A               	movwf	42,b	;volatile
 19022                           
 19023                           ; BSR set to: 15
 19024                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 19025  0122A2  0100               	movlb	0	; () banked
 19026  0122A4  EE20 F005          	lfsr	2,5
 19027  0122A8  5174               	movf	CANsendMessage@data& (0+255),w,b
 19028  0122AA  26D9               	addwf	fsr2l,f,c
 19029  0122AC  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19030  0122AE  22DA               	addwfc	fsr2h,f,c
 19031  0122B0  50DF               	movf	indf2,w,c
 19032  0122B2  010F               	movlb	15	; () banked
 19033  0122B4  6F2B               	movwf	43,b	;volatile
 19034                           
 19035                           ; BSR set to: 15
 19036                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 19037  0122B6  0100               	movlb	0	; () banked
 19038  0122B8  EE20 F006          	lfsr	2,6
 19039  0122BC  5174               	movf	CANsendMessage@data& (0+255),w,b
 19040  0122BE  26D9               	addwf	fsr2l,f,c
 19041  0122C0  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19042  0122C2  22DA               	addwfc	fsr2h,f,c
 19043  0122C4  50DF               	movf	indf2,w,c
 19044  0122C6  010F               	movlb	15	; () banked
 19045  0122C8  6F2C               	movwf	44,b	;volatile
 19046                           
 19047                           ; BSR set to: 15
 19048                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 19049  0122CA  0100               	movlb	0	; () banked
 19050  0122CC  EE20 F007          	lfsr	2,7
 19051  0122D0  5174               	movf	CANsendMessage@data& (0+255),w,b
 19052  0122D2  26D9               	addwf	fsr2l,f,c
 19053  0122D4  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19054  0122D6  22DA               	addwfc	fsr2h,f,c
 19055  0122D8  50DF               	movf	indf2,w,c
 19056  0122DA  010F               	movlb	15	; () banked
 19057  0122DC  6F2D               	movwf	45,b	;volatile
 19058                           
 19059                           ; BSR set to: 15
 19060                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19061  0122DE  010F               	movlb	15	; () banked
 19062  0122E0  8720               	bsf	32,3,b	;volatile
 19063                           
 19064                           ; BSR set to: 15
 19065                           ;inc\CANlib.h: 520: return;
 19066  0122E2  0012               	return	
 19067  0122E4                     __end_of_CANsendMessage:
 19068                           	opt stack 0
 19069                           tblptru	equ	0xFF8
 19070                           tblptrh	equ	0xFF7
 19071                           tblptrl	equ	0xFF6
 19072                           tablat	equ	0xFF5
 19073                           prodh	equ	0xFF4
 19074                           prodl	equ	0xFF3
 19075                           intcon	equ	0xFF2
 19076                           postinc0	equ	0xFEE
 19077                           wreg	equ	0xFE8
 19078                           indf1	equ	0xFE7
 19079                           plusw1	equ	0xFE3
 19080                           fsr1h	equ	0xFE2
 19081                           fsr1l	equ	0xFE1
 19082                           indf2	equ	0xFDF
 19083                           postinc2	equ	0xFDE
 19084                           plusw2	equ	0xFDB
 19085                           fsr2h	equ	0xFDA
 19086                           fsr2l	equ	0xFD9
 19087                           status	equ	0xFD8
 19088                           
 19089 ;; *************** function _CANisTxReady *****************
 19090 ;; Defined at:
 19091 ;;		line 1154 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19092 ;; Parameters:    Size  Location     Type
 19093 ;;		None
 19094 ;; Auto vars:     Size  Location     Type
 19095 ;;		None
 19096 ;; Return value:  Size  Location     Type
 19097 ;;                  1    wreg      unsigned char 
 19098 ;; Registers used:
 19099 ;;		wreg, status,2
 19100 ;; Tracked objects:
 19101 ;;		On entry : 0/0
 19102 ;;		On exit  : 0/0
 19103 ;;		Unchanged: 0/0
 19104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19109 ;;Total ram usage:        1 bytes
 19110 ;; Hardware stack levels used:    1
 19111 ;; Hardware stack levels required when called:    3
 19112 ;; This function calls:
 19113 ;;		Nothing
 19114 ;; This function is called by:
 19115 ;;		_main
 19116 ;;		_LCD_Handler
 19117 ;;		_CAN_Tx
 19118 ;; This function uses a non-reentrant model
 19119 ;;
 19120                           
 19121                           	psect	text55
 19122  0164B8                     __ptext55:
 19123                           	opt stack 0
 19124  0164B8                     _CANisTxReady:
 19125                           	opt stack 26
 19126                           
 19127                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 19128                           
 19129                           ; BSR set to: 15
 19130                           ;incstack = 0
 19131  0164B8  0E01               	movlw	1
 19132  0164BA  0100               	movlb	0	; () banked
 19133  0164BC  6F70               	movwf	_CANisTxReady$3115& (0+255),b
 19134                           
 19135                           ; BSR set to: 0
 19136  0164BE  010F               	movlb	15	; () banked
 19137  0164C0  A740               	btfss	64,3,b	;volatile
 19138  0164C2  D009               	goto	l574
 19139                           
 19140                           ; BSR set to: 15
 19141  0164C4  010F               	movlb	15	; () banked
 19142  0164C6  A730               	btfss	48,3,b	;volatile
 19143  0164C8  D006               	goto	l574
 19144                           
 19145                           ; BSR set to: 15
 19146  0164CA  010F               	movlb	15	; () banked
 19147  0164CC  A720               	btfss	32,3,b	;volatile
 19148  0164CE  D003               	goto	l574
 19149                           
 19150                           ; BSR set to: 15
 19151  0164D0  0E00               	movlw	0
 19152  0164D2  0100               	movlb	0	; () banked
 19153  0164D4  6F70               	movwf	_CANisTxReady$3115& (0+255),b
 19154  0164D6                     l574:
 19155  0164D6  0100               	movlb	0	; () banked
 19156  0164D8  5170               	movf	_CANisTxReady$3115& (0+255),w,b
 19157  0164DA  0012               	return	
 19158  0164DC                     __end_of_CANisTxReady:
 19159                           	opt stack 0
 19160                           tblptru	equ	0xFF8
 19161                           tblptrh	equ	0xFF7
 19162                           tblptrl	equ	0xFF6
 19163                           tablat	equ	0xFF5
 19164                           prodh	equ	0xFF4
 19165                           prodl	equ	0xFF3
 19166                           intcon	equ	0xFF2
 19167                           postinc0	equ	0xFEE
 19168                           wreg	equ	0xFE8
 19169                           indf1	equ	0xFE7
 19170                           plusw1	equ	0xFE3
 19171                           fsr1h	equ	0xFE2
 19172                           fsr1l	equ	0xFE1
 19173                           indf2	equ	0xFDF
 19174                           postinc2	equ	0xFDE
 19175                           plusw2	equ	0xFDB
 19176                           fsr2h	equ	0xFDA
 19177                           fsr2l	equ	0xFD9
 19178                           status	equ	0xFD8
 19179                           
 19180 ;; *************** function _CAN_Rx *****************
 19181 ;; Defined at:
 19182 ;;		line 628 in file "RemoteCan.c"
 19183 ;; Parameters:    Size  Location     Type
 19184 ;;		None
 19185 ;; Auto vars:     Size  Location     Type
 19186 ;;		None
 19187 ;; Return value:  Size  Location     Type
 19188 ;;		None               void
 19189 ;; Registers used:
 19190 ;;		wreg, status,2, status,0
 19191 ;; Tracked objects:
 19192 ;;		On entry : 0/0
 19193 ;;		On exit  : 0/0
 19194 ;;		Unchanged: 0/0
 19195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19198 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19199 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19200 ;;Total ram usage:        4 bytes
 19201 ;; Hardware stack levels used:    1
 19202 ;; Hardware stack levels required when called:    3
 19203 ;; This function calls:
 19204 ;;		Nothing
 19205 ;; This function is called by:
 19206 ;;		_main
 19207 ;; This function uses a non-reentrant model
 19208 ;;
 19209                           
 19210                           	psect	text56
 19211  015EB0                     __ptext56:
 19212                           	opt stack 0
 19213  015EB0                     _CAN_Rx:
 19214                           	opt stack 27
 19215                           
 19216                           ;RemoteCan.c: 649: if ((id == 0b00000001000)&&(RTR_Flag == 0)) {
 19217                           
 19218                           ; BSR set to: 0
 19219                           ;incstack = 0
 19220  015EB0  0E08               	movlw	8
 19221  015EB2  180C               	xorwf	_id,w,c	;volatile
 19222  015EB4  100D               	iorwf	_id+1,w,c	;volatile
 19223  015EB6  100E               	iorwf	_id+2,w,c	;volatile
 19224  015EB8  100F               	iorwf	_id+3,w,c	;volatile
 19225  015EBA  B4D8               	btfsc	status,2,c
 19226  015EBC  BE4A               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19227  015EBE  D027               	goto	l7179
 19228                           
 19229                           ;RemoteCan.c: 650: left_speed = data_speed_rx[1];
 19230  015EC0  C002  F020         	movff	_data_speed_rx+1,_left_speed	;volatile
 19231  015EC4  6A21               	clrf	_left_speed+1,c	;volatile
 19232                           
 19233                           ;RemoteCan.c: 651: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 19234  015EC6  5020               	movf	_left_speed,w,c	;volatile
 19235  015EC8  0100               	movlb	0	; () banked
 19236  015ECA  6F70               	movwf	??_CAN_Rx& (0+255),b
 19237  015ECC  5001               	movf	_data_speed_rx,w,c
 19238  015ECE  6E20               	movwf	_left_speed,c	;volatile
 19239  015ED0  C070  F021         	movff	??_CAN_Rx,_left_speed+1	;volatile
 19240                           
 19241                           ; BSR set to: 0
 19242                           ;RemoteCan.c: 652: right_speed = data_speed_rx[3];
 19243  015ED4  C004  F022         	movff	_data_speed_rx+3,_right_speed	;volatile
 19244  015ED8  6A23               	clrf	_right_speed+1,c	;volatile
 19245                           
 19246                           ;RemoteCan.c: 653: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 19247  015EDA  5022               	movf	_right_speed,w,c	;volatile
 19248  015EDC  0100               	movlb	0	; () banked
 19249  015EDE  6F70               	movwf	??_CAN_Rx& (0+255),b
 19250  015EE0  5003               	movf	_data_speed_rx+2,w,c
 19251  015EE2  6E22               	movwf	_right_speed,c	;volatile
 19252  015EE4  C070  F023         	movff	??_CAN_Rx,_right_speed+1	;volatile
 19253                           
 19254                           ; BSR set to: 0
 19255                           ;RemoteCan.c: 654: actual_speed = (right_speed + left_speed) / 2;
 19256  015EE8  5020               	movf	_left_speed,w,c	;volatile
 19257  015EEA  2422               	addwf	_right_speed,w,c	;volatile
 19258  015EEC  0100               	movlb	0	; () banked
 19259  015EEE  6F70               	movwf	??_CAN_Rx& (0+255),b
 19260  015EF0  5021               	movf	_left_speed+1,w,c	;volatile
 19261  015EF2  2023               	addwfc	_right_speed+1,w,c	;volatile
 19262  015EF4  0100               	movlb	0	; () banked
 19263  015EF6  6F71               	movwf	(??_CAN_Rx+1)& (0+255),b
 19264  015EF8  90D8               	bcf	status,0,c
 19265  015EFA  0100               	movlb	0	; () banked
 19266  015EFC  3171               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 19267  015EFE  0100               	movlb	0	; () banked
 19268  015F00  6F72               	movwf	(??_CAN_Rx+2)& (0+255),b
 19269  015F02  0100               	movlb	0	; () banked
 19270  015F04  3170               	rrcf	??_CAN_Rx& (0+255),w,b
 19271  015F06  0100               	movlb	0	; () banked
 19272  015F08  6FE2               	movwf	_actual_speed& (0+255),b	;volatile
 19273  015F0A  C072  F0E3         	movff	??_CAN_Rx+2,_actual_speed+1	;volatile
 19274  015F0E                     l7179:
 19275                           
 19276                           ;RemoteCan.c: 655: }
 19277                           ;RemoteCan.c: 657: if (id == 0b00000001011) {
 19278  015F0E  0E0B               	movlw	11
 19279  015F10  180C               	xorwf	_id,w,c	;volatile
 19280  015F12  100D               	iorwf	_id+1,w,c	;volatile
 19281  015F14  100E               	iorwf	_id+2,w,c	;volatile
 19282  015F16  100F               	iorwf	_id+3,w,c	;volatile
 19283  015F18  A4D8               	btfss	status,2,c
 19284  015F1A  0012               	return	
 19285                           
 19286                           ;RemoteCan.c: 658: battery = data[0];
 19287  015F1C  C125  F026         	movff	_data,_battery	;volatile
 19288  015F20  0012               	return	
 19289  015F22                     __end_of_CAN_Rx:
 19290                           	opt stack 0
 19291                           tblptru	equ	0xFF8
 19292                           tblptrh	equ	0xFF7
 19293                           tblptrl	equ	0xFF6
 19294                           tablat	equ	0xFF5
 19295                           prodh	equ	0xFF4
 19296                           prodl	equ	0xFF3
 19297                           intcon	equ	0xFF2
 19298                           postinc0	equ	0xFEE
 19299                           wreg	equ	0xFE8
 19300                           indf1	equ	0xFE7
 19301                           plusw1	equ	0xFE3
 19302                           fsr1h	equ	0xFE2
 19303                           fsr1l	equ	0xFE1
 19304                           indf2	equ	0xFDF
 19305                           postinc2	equ	0xFDE
 19306                           plusw2	equ	0xFDB
 19307                           fsr2h	equ	0xFDA
 19308                           fsr2l	equ	0xFD9
 19309                           status	equ	0xFD8
 19310                           
 19311 ;; *************** function _ISR_bassa *****************
 19312 ;; Defined at:
 19313 ;;		line 200 in file "RemoteCan.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;		None
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;		None
 19318 ;; Return value:  Size  Location     Type
 19319 ;;		None               void
 19320 ;; Registers used:
 19321 ;;		wreg, status,2, status,0
 19322 ;; Tracked objects:
 19323 ;;		On entry : 0/0
 19324 ;;		On exit  : 0/0
 19325 ;;		Unchanged: 0/0
 19326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19329 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19330 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19331 ;;Total ram usage:       17 bytes
 19332 ;; Hardware stack levels used:    1
 19333 ;; Hardware stack levels required when called:    2
 19334 ;; This function calls:
 19335 ;;		Nothing
 19336 ;; This function is called by:
 19337 ;;		Interrupt level 1
 19338 ;; This function uses a non-reentrant model
 19339 ;;
 19340                           
 19341                           	psect	intcodelo
 19342  000018                     __pintcodelo:
 19343                           	opt stack 0
 19344  000018                     _ISR_bassa:
 19345                           	opt stack 20
 19346                           
 19347                           ;incstack = 0
 19348  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19349  00001A  CFD8 F028          	movff	status,??_ISR_bassa
 19350  00001E  CFE8 F029          	movff	wreg,??_ISR_bassa+1
 19351  000022  CFE0 F02A          	movff	bsr,??_ISR_bassa+2
 19352  000026  CFFA F02B          	movff	pclath,??_ISR_bassa+3
 19353  00002A  CFFB F02C          	movff	pclatu,??_ISR_bassa+4
 19354  00002E  CFE9 F02D          	movff	fsr0l,??_ISR_bassa+5
 19355  000032  CFEA F02E          	movff	fsr0h,??_ISR_bassa+6
 19356  000036  CFE1 F02F          	movff	fsr1l,??_ISR_bassa+7
 19357  00003A  CFE2 F030          	movff	fsr1h,??_ISR_bassa+8
 19358  00003E  CFD9 F031          	movff	fsr2l,??_ISR_bassa+9
 19359  000042  CFDA F032          	movff	fsr2h,??_ISR_bassa+10
 19360  000046  CFF3 F033          	movff	prodl,??_ISR_bassa+11
 19361  00004A  CFF4 F034          	movff	prodh,??_ISR_bassa+12
 19362  00004E  CFF6 F035          	movff	tblptrl,??_ISR_bassa+13
 19363  000052  CFF7 F036          	movff	tblptrh,??_ISR_bassa+14
 19364  000056  CFF8 F037          	movff	tblptru,??_ISR_bassa+15
 19365  00005A  CFF5 F038          	movff	tablat,??_ISR_bassa+16
 19366                           
 19367                           ;RemoteCan.c: 201: if (PIR2bits.TMR3IF == 1) {
 19368  00005E  A2A1               	btfss	4001,1,c	;volatile
 19369  000060  D00B               	goto	i1l808
 19370                           
 19371                           ;RemoteCan.c: 202: time_counter++;
 19372  000062  0E01               	movlw	1
 19373  000064  261C               	addwf	_time_counter,f,c	;volatile
 19374  000066  0E00               	movlw	0
 19375  000068  221D               	addwfc	_time_counter+1,f,c	;volatile
 19376  00006A  221E               	addwfc	_time_counter+2,f,c	;volatile
 19377  00006C  221F               	addwfc	_time_counter+3,f,c	;volatile
 19378                           
 19379                           ;RemoteCan.c: 203: TMR3H = 0x63;
 19380  00006E  0E63               	movlw	99
 19381  000070  6EB3               	movwf	4019,c	;volatile
 19382                           
 19383                           ;RemoteCan.c: 204: TMR3L = 0xC0;
 19384  000072  0EC0               	movlw	192
 19385  000074  6EB2               	movwf	4018,c	;volatile
 19386                           
 19387                           ;RemoteCan.c: 205: PIR2bits.TMR3IF = 0;
 19388  000076  92A1               	bcf	4001,1,c	;volatile
 19389  000078                     i1l808:
 19390  000078  C038  FFF5         	movff	??_ISR_bassa+16,tablat
 19391  00007C  C037  FFF8         	movff	??_ISR_bassa+15,tblptru
 19392  000080  C036  FFF7         	movff	??_ISR_bassa+14,tblptrh
 19393  000084  C035  FFF6         	movff	??_ISR_bassa+13,tblptrl
 19394  000088  C034  FFF4         	movff	??_ISR_bassa+12,prodh
 19395  00008C  C033  FFF3         	movff	??_ISR_bassa+11,prodl
 19396  000090  C032  FFDA         	movff	??_ISR_bassa+10,fsr2h
 19397  000094  C031  FFD9         	movff	??_ISR_bassa+9,fsr2l
 19398  000098  C030  FFE2         	movff	??_ISR_bassa+8,fsr1h
 19399  00009C  C02F  FFE1         	movff	??_ISR_bassa+7,fsr1l
 19400  0000A0  C02E  FFEA         	movff	??_ISR_bassa+6,fsr0h
 19401  0000A4  C02D  FFE9         	movff	??_ISR_bassa+5,fsr0l
 19402  0000A8  C02C  FFFB         	movff	??_ISR_bassa+4,pclatu
 19403  0000AC  C02B  FFFA         	movff	??_ISR_bassa+3,pclath
 19404  0000B0  C02A  FFE0         	movff	??_ISR_bassa+2,bsr
 19405  0000B4  C029  FFE8         	movff	??_ISR_bassa+1,wreg
 19406  0000B8  C028  FFD8         	movff	??_ISR_bassa,status
 19407  0000BC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19408  0000BE  0010               	retfie	
 19409  0000C0                     __end_of_ISR_bassa:
 19410                           	opt stack 0
 19411                           pclatu	equ	0xFFB
 19412                           pclath	equ	0xFFA
 19413                           tblptru	equ	0xFF8
 19414                           tblptrh	equ	0xFF7
 19415                           tblptrl	equ	0xFF6
 19416                           tablat	equ	0xFF5
 19417                           prodh	equ	0xFF4
 19418                           prodl	equ	0xFF3
 19419                           intcon	equ	0xFF2
 19420                           postinc0	equ	0xFEE
 19421                           fsr0h	equ	0xFEA
 19422                           fsr0l	equ	0xFE9
 19423                           wreg	equ	0xFE8
 19424                           indf1	equ	0xFE7
 19425                           plusw1	equ	0xFE3
 19426                           fsr1h	equ	0xFE2
 19427                           fsr1l	equ	0xFE1
 19428                           bsr	equ	0xFE0
 19429                           indf2	equ	0xFDF
 19430                           postinc2	equ	0xFDE
 19431                           plusw2	equ	0xFDB
 19432                           fsr2h	equ	0xFDA
 19433                           fsr2l	equ	0xFD9
 19434                           status	equ	0xFD8
 19435                           
 19436 ;; *************** function _ISR_alta *****************
 19437 ;; Defined at:
 19438 ;;		line 124 in file "RemoteCan.c"
 19439 ;; Parameters:    Size  Location     Type
 19440 ;;		None
 19441 ;; Auto vars:     Size  Location     Type
 19442 ;;  i               1   33[COMRAM] unsigned char 
 19443 ;; Return value:  Size  Location     Type
 19444 ;;		None               void
 19445 ;; Registers used:
 19446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19447 ;; Tracked objects:
 19448 ;;		On entry : 0/0
 19449 ;;		On exit  : 0/0
 19450 ;;		Unchanged: 0/0
 19451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19454 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19455 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19456 ;;Total ram usage:       17 bytes
 19457 ;; Hardware stack levels used:    1
 19458 ;; Hardware stack levels required when called:    1
 19459 ;; This function calls:
 19460 ;;		_CANisRxReady
 19461 ;;		_CANreceiveMessage
 19462 ;;		i2_CANisTxReady
 19463 ;;		i2_CANsendMessage
 19464 ;; This function is called by:
 19465 ;;		Interrupt level 2
 19466 ;; This function uses a non-reentrant model
 19467 ;;
 19468                           
 19469                           	psect	intcode
 19470  000008                     __pintcode:
 19471                           	opt stack 0
 19472  000008                     _ISR_alta:
 19473                           	opt stack 20
 19474                           
 19475                           ;incstack = 0
 19476  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19477  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 19478  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 19479  000012  EF9E  F0A3         	goto	int_func
 19480                           pclatu	equ	0xFFB
 19481                           pclath	equ	0xFFA
 19482                           tblptru	equ	0xFF8
 19483                           tblptrh	equ	0xFF7
 19484                           tblptrl	equ	0xFF6
 19485                           tablat	equ	0xFF5
 19486                           prodh	equ	0xFF4
 19487                           prodl	equ	0xFF3
 19488                           intcon	equ	0xFF2
 19489                           postinc0	equ	0xFEE
 19490                           fsr0h	equ	0xFEA
 19491                           fsr0l	equ	0xFE9
 19492                           wreg	equ	0xFE8
 19493                           indf1	equ	0xFE7
 19494                           plusw1	equ	0xFE3
 19495                           fsr1h	equ	0xFE2
 19496                           fsr1l	equ	0xFE1
 19497                           bsr	equ	0xFE0
 19498                           indf2	equ	0xFDF
 19499                           postinc2	equ	0xFDE
 19500                           plusw2	equ	0xFDB
 19501                           fsr2h	equ	0xFDA
 19502                           fsr2l	equ	0xFD9
 19503                           status	equ	0xFD8
 19504                           
 19505                           	psect	intcode_body
 19506  01473C                     __pintcode_body:
 19507                           	opt stack 20
 19508  01473C                     int_func:
 19509                           	opt stack 20
 19510  01473C  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 19511  014740  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 19512  014744  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 19513  014748  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 19514  01474C  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 19515  014750  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 19516  014754  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 19517  014758  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 19518  01475C  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 19519  014760  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 19520  014764  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 19521  014768  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 19522                           
 19523                           ;RemoteCan.c: 125: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 19524  01476C  A2A4               	btfss	4004,1,c	;volatile
 19525  01476E  B0A4               	btfsc	4004,0,c	;volatile
 19526  014770  D001               	goto	i2l9255
 19527  014772  D101               	goto	i2l804
 19528  014774                     i2l9255:
 19529                           
 19530                           ;RemoteCan.c: 126: if (CANisRxReady()) {
 19531  014774  ECD1  F0B2         	call	_CANisRxReady	;wreg free
 19532  014778  0900               	iorlw	0
 19533  01477A  B4D8               	btfsc	status,2,c
 19534  01477C  D0FA               	goto	i2l9337
 19535                           
 19536                           ;RemoteCan.c: 127: CANreceiveMessage(&msg);
 19537  01477E  0E0A               	movlw	low _msg
 19538  014780  6E39               	movwf	CANreceiveMessage@msg,c
 19539  014782  0E01               	movlw	high _msg
 19540  014784  6E3A               	movwf	CANreceiveMessage@msg+1,c
 19541  014786  EC47  F097         	call	_CANreceiveMessage	;wreg free
 19542                           
 19543                           ;RemoteCan.c: 128: RTR_Flag = msg.RTR;
 19544  01478A  0101               	movlb	1	; () banked
 19545  01478C  A118               	btfss	(_msg+14)& (0+255),0,b
 19546  01478E  D002               	goto	i2u1229_40
 19547  014790  8E4A               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19548  014792  D001               	goto	i2l9261
 19549  014794                     i2u1229_40:
 19550  014794  9E4A               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19551  014796                     i2l9261:
 19552                           
 19553                           ;RemoteCan.c: 129: id = msg.identifier;
 19554  014796  C10A  F00C         	movff	_msg,_id	;volatile
 19555  01479A  C10B  F00D         	movff	_msg+1,_id+1	;volatile
 19556  01479E  C10C  F00E         	movff	_msg+2,_id+2	;volatile
 19557  0147A2  C10D  F00F         	movff	_msg+3,_id+3	;volatile
 19558                           
 19559                           ;RemoteCan.c: 130: newMessageCan = 1;
 19560  0147A6  864B               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 19561                           
 19562                           ;RemoteCan.c: 131: if (id == 0b00000001000) {
 19563  0147A8  0E08               	movlw	8
 19564  0147AA  180C               	xorwf	_id,w,c	;volatile
 19565  0147AC  100D               	iorwf	_id+1,w,c	;volatile
 19566  0147AE  100E               	iorwf	_id+2,w,c	;volatile
 19567  0147B0  100F               	iorwf	_id+3,w,c	;volatile
 19568  0147B2  A4D8               	btfss	status,2,c
 19569  0147B4  D01A               	goto	i2l9279
 19570                           
 19571                           ;RemoteCan.c: 132: for (unsigned char i = 0; i < 8; i++) {
 19572  0147B6  0E00               	movlw	0
 19573  0147B8  6E49               	movwf	ISR_alta@i,c
 19574  0147BA                     i2l9269:
 19575  0147BA  0E07               	movlw	7
 19576  0147BC  6449               	cpfsgt	ISR_alta@i,c
 19577  0147BE  D001               	goto	i2l9273
 19578  0147C0  D014               	goto	i2l9279
 19579  0147C2                     i2l9273:
 19580                           
 19581                           ;RemoteCan.c: 133: data_speed_rx[i] = msg.data[i];
 19582  0147C2  5049               	movf	ISR_alta@i,w,c
 19583  0147C4  0D01               	mullw	1
 19584  0147C6  0E0E               	movlw	low (_msg+4)
 19585  0147C8  24F3               	addwf	prodl,w,c
 19586  0147CA  6ED9               	movwf	fsr2l,c
 19587  0147CC  0E01               	movlw	high (_msg+4)
 19588  0147CE  20F4               	addwfc	prodh,w,c
 19589  0147D0  6EDA               	movwf	fsr2h,c
 19590  0147D2  5049               	movf	ISR_alta@i,w,c
 19591  0147D4  0D01               	mullw	1
 19592  0147D6  0E01               	movlw	low _data_speed_rx
 19593  0147D8  24F3               	addwf	prodl,w,c
 19594  0147DA  6EE1               	movwf	fsr1l,c
 19595  0147DC  0E00               	movlw	high _data_speed_rx
 19596  0147DE  20F4               	addwfc	prodh,w,c
 19597  0147E0  6EE2               	movwf	fsr1h,c
 19598  0147E2  CFDF FFE7          	movff	indf2,indf1
 19599  0147E6  2A49               	incf	ISR_alta@i,f,c
 19600  0147E8  D7E8               	goto	i2l9269
 19601  0147EA                     i2l9279:
 19602                           
 19603                           ;RemoteCan.c: 134: }
 19604                           ;RemoteCan.c: 135: }
 19605                           ;RemoteCan.c: 137: if (id == 0b00000001101) {
 19606  0147EA  0E0D               	movlw	13
 19607  0147EC  180C               	xorwf	_id,w,c	;volatile
 19608  0147EE  100D               	iorwf	_id+1,w,c	;volatile
 19609  0147F0  100E               	iorwf	_id+2,w,c	;volatile
 19610  0147F2  100F               	iorwf	_id+3,w,c	;volatile
 19611  0147F4  A4D8               	btfss	status,2,c
 19612  0147F6  D041               	goto	i2l9311
 19613                           
 19614                           ;RemoteCan.c: 138: if (msg.data[0] == 1) {
 19615  0147F8  0101               	movlb	1	; () banked
 19616  0147FA  050E               	decf	(_msg+4)& (0+255),w,b
 19617  0147FC  A4D8               	btfss	status,2,c
 19618  0147FE  D007               	goto	i2l9287
 19619                           
 19620                           ; BSR set to: 1
 19621                           ;RemoteCan.c: 139: space_available = 1;
 19622  014800  8E4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19623                           
 19624                           ;RemoteCan.c: 140: space_gap_reached = 0;
 19625  014802  904C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19626                           
 19627                           ;RemoteCan.c: 141: F2_switch = 0;
 19628  014804  984A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 19629                           
 19630                           ;RemoteCan.c: 142: parking_message_E = 1;
 19631  014806  8A4B               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 19632                           
 19633                           ; BSR set to: 1
 19634                           ;RemoteCan.c: 143: parking_message_ID = 0;
 19635  014808  0E00               	movlw	0
 19636  01480A  0100               	movlb	0	; () banked
 19637  01480C  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19638  01480E                     i2l9287:
 19639                           
 19640                           ;RemoteCan.c: 144: }
 19641                           ;RemoteCan.c: 146: if (msg.data[0] == 2) {
 19642  01480E  0E02               	movlw	2
 19643  014810  0101               	movlb	1	; () banked
 19644  014812  190E               	xorwf	(_msg+4)& (0+255),w,b
 19645  014814  A4D8               	btfss	status,2,c
 19646  014816  D006               	goto	i2l9293
 19647                           
 19648                           ; BSR set to: 1
 19649                           ;RemoteCan.c: 147: space_available = 1;
 19650  014818  8E4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19651                           
 19652                           ;RemoteCan.c: 148: space_gap_reached = 1;
 19653  01481A  804C               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19654                           
 19655                           ;RemoteCan.c: 149: Can_Tx_Force = 1;
 19656  01481C  844A               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 19657                           
 19658                           ; BSR set to: 1
 19659                           ;RemoteCan.c: 150: parking_message_ID = 2;
 19660  01481E  0E02               	movlw	2
 19661  014820  0100               	movlb	0	; () banked
 19662  014822  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19663  014824                     i2l9293:
 19664                           
 19665                           ;RemoteCan.c: 151: }
 19666                           ;RemoteCan.c: 153: if (msg.data[0] == 3) {
 19667  014824  0E03               	movlw	3
 19668  014826  0101               	movlb	1	; () banked
 19669  014828  190E               	xorwf	(_msg+4)& (0+255),w,b
 19670  01482A  A4D8               	btfss	status,2,c
 19671  01482C  D010               	goto	i2l9301
 19672                           
 19673                           ; BSR set to: 1
 19674                           ;RemoteCan.c: 154: parking_message_ID = 6;
 19675  01482E  0E06               	movlw	6
 19676  014830  0100               	movlb	0	; () banked
 19677  014832  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;RemoteCan.c: 155: F1_switch = 0;
 19681  014834  964A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19682                           
 19683                           ; BSR set to: 0
 19684                           ;RemoteCan.c: 156: pr_time_6 = time_counter + (2000 / 10);
 19685  014836  0EC8               	movlw	200
 19686  014838  241C               	addwf	_time_counter,w,c	;volatile
 19687  01483A  6E18               	movwf	_pr_time_6,c	;volatile
 19688  01483C  0E00               	movlw	0
 19689  01483E  201D               	addwfc	_time_counter+1,w,c	;volatile
 19690  014840  6E19               	movwf	_pr_time_6+1,c	;volatile
 19691  014842  0E00               	movlw	0
 19692  014844  201E               	addwfc	_time_counter+2,w,c	;volatile
 19693  014846  6E1A               	movwf	_pr_time_6+2,c	;volatile
 19694  014848  0E00               	movlw	0
 19695  01484A  201F               	addwfc	_time_counter+3,w,c	;volatile
 19696  01484C  6E1B               	movwf	_pr_time_6+3,c	;volatile
 19697  01484E                     i2l9301:
 19698                           
 19699                           ;RemoteCan.c: 157: }
 19700                           ;RemoteCan.c: 158: if (msg.data[0] == 4) {
 19701  01484E  0E04               	movlw	4
 19702  014850  0101               	movlb	1	; () banked
 19703  014852  190E               	xorwf	(_msg+4)& (0+255),w,b
 19704  014854  A4D8               	btfss	status,2,c
 19705  014856  D011               	goto	i2l9311
 19706                           
 19707                           ; BSR set to: 1
 19708                           ;RemoteCan.c: 159: parking_message_ID = 6;
 19709  014858  0E06               	movlw	6
 19710  01485A  0100               	movlb	0	; () banked
 19711  01485C  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19712                           
 19713                           ; BSR set to: 0
 19714                           ;RemoteCan.c: 160: parking_error = 1;
 19715  01485E  884B               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;RemoteCan.c: 161: F1_switch = 0;
 19719  014860  964A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19720                           
 19721                           ; BSR set to: 0
 19722                           ;RemoteCan.c: 162: pr_time_6 = time_counter + (2000 / 10);
 19723  014862  0EC8               	movlw	200
 19724  014864  241C               	addwf	_time_counter,w,c	;volatile
 19725  014866  6E18               	movwf	_pr_time_6,c	;volatile
 19726  014868  0E00               	movlw	0
 19727  01486A  201D               	addwfc	_time_counter+1,w,c	;volatile
 19728  01486C  6E19               	movwf	_pr_time_6+1,c	;volatile
 19729  01486E  0E00               	movlw	0
 19730  014870  201E               	addwfc	_time_counter+2,w,c	;volatile
 19731  014872  6E1A               	movwf	_pr_time_6+2,c	;volatile
 19732  014874  0E00               	movlw	0
 19733  014876  201F               	addwfc	_time_counter+3,w,c	;volatile
 19734  014878  6E1B               	movwf	_pr_time_6+3,c	;volatile
 19735  01487A                     i2l9311:
 19736                           
 19737                           ;RemoteCan.c: 163: }
 19738                           ;RemoteCan.c: 164: }
 19739                           ;RemoteCan.c: 166: if (id == 0b00000010000) {
 19740  01487A  0E10               	movlw	16
 19741  01487C  180C               	xorwf	_id,w,c	;volatile
 19742  01487E  100D               	iorwf	_id+1,w,c	;volatile
 19743  014880  100E               	iorwf	_id+2,w,c	;volatile
 19744  014882  100F               	iorwf	_id+3,w,c	;volatile
 19745  014884  A4D8               	btfss	status,2,c
 19746  014886  D008               	goto	i2l9315
 19747                           
 19748                           ;RemoteCan.c: 167: steering_correction_dir = msg.data[1];
 19749  014888  0101               	movlb	1	; () banked
 19750  01488A  A10F               	btfss	(_msg+5)& (0+255),0,b
 19751  01488C  D002               	goto	i2u1240_40
 19752  01488E  824C               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19753  014890  D001               	goto	i2u1241_45
 19754  014892                     i2u1240_40:
 19755  014892  924C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19756  014894                     i2u1241_45:
 19757                           
 19758                           ;RemoteCan.c: 168: steering_correction = msg.data[0];
 19759  014894  C10E  F0EB         	movff	_msg+4,_steering_correction	;volatile
 19760  014898                     i2l9315:
 19761                           
 19762                           ;RemoteCan.c: 169: }
 19763                           ;RemoteCan.c: 171: if (id == 0b00000010001) {
 19764  014898  0E11               	movlw	17
 19765  01489A  180C               	xorwf	_id,w,c	;volatile
 19766  01489C  100D               	iorwf	_id+1,w,c	;volatile
 19767  01489E  100E               	iorwf	_id+2,w,c	;volatile
 19768  0148A0  100F               	iorwf	_id+3,w,c	;volatile
 19769  0148A2  A4D8               	btfss	status,2,c
 19770  0148A4  D026               	goto	i2l797
 19771                           
 19772                           ;RemoteCan.c: 172: FWD_sensor = (msg.data[0] & 0b01000000) >> 6;
 19773  0148A6  C10E  F060         	movff	_msg+4,??_ISR_alta
 19774  0148AA  0E06               	movlw	6
 19775  0148AC  0100               	movlb	0	; () banked
 19776  0148AE  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 19777  0148B0                     i2u1243_45:
 19778  0148B0  0100               	movlb	0	; () banked
 19779  0148B2  90D8               	bcf	status,0,c
 19780  0148B4  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19781  0148B6  0100               	movlb	0	; () banked
 19782  0148B8  2F61               	decfsz	(??_ISR_alta+1)& (0+255),f,b
 19783  0148BA  D7FA               	goto	i2u1243_45
 19784  0148BC  0100               	movlb	0	; () banked
 19785  0148BE  3160               	rrcf	??_ISR_alta& (0+255),w,b
 19786  0148C0  0100               	movlb	0	; () banked
 19787  0148C2  A0D8               	btfss	status,0,c
 19788  0148C4  D002               	goto	i2u1244_40
 19789  0148C6  8A4A               	bsf	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
 19790  0148C8  D001               	goto	i2u1245_45
 19791  0148CA                     i2u1244_40:
 19792  0148CA  9A4A               	bcf	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
 19793  0148CC                     i2u1245_45:
 19794                           
 19795                           ;RemoteCan.c: 173: BKWD_sensor = (msg.data[0] & 0b00001000) >> 3;
 19796  0148CC  C10E  F060         	movff	_msg+4,??_ISR_alta
 19797  0148D0  0100               	movlb	0	; () banked
 19798  0148D2  90D8               	bcf	status,0,c
 19799  0148D4  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19800  0148D6  0100               	movlb	0	; () banked
 19801  0148D8  90D8               	bcf	status,0,c
 19802  0148DA  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19803  0148DC  0100               	movlb	0	; () banked
 19804  0148DE  90D8               	bcf	status,0,c
 19805  0148E0  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19806  0148E2  0100               	movlb	0	; () banked
 19807  0148E4  3160               	rrcf	??_ISR_alta& (0+255),w,b
 19808  0148E6  0100               	movlb	0	; () banked
 19809  0148E8  A0D8               	btfss	status,0,c
 19810  0148EA  D002               	goto	i2u1246_40
 19811  0148EC  824A               	bsf	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
 19812  0148EE  D001               	goto	i2l797
 19813  0148F0                     i2u1246_40:
 19814  0148F0  924A               	bcf	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
 19815  0148F2                     i2l797:
 19816                           
 19817                           ;RemoteCan.c: 174: }
 19818                           ;RemoteCan.c: 175: if (id == 0xAA) {
 19819  0148F2  0EAA               	movlw	170
 19820  0148F4  180C               	xorwf	_id,w,c	;volatile
 19821  0148F6  100D               	iorwf	_id+1,w,c	;volatile
 19822  0148F8  100E               	iorwf	_id+2,w,c	;volatile
 19823  0148FA  100F               	iorwf	_id+3,w,c	;volatile
 19824  0148FC  A4D8               	btfss	status,2,c
 19825  0148FE  D00B               	goto	i2l9323
 19826                           
 19827                           ;RemoteCan.c: 176: user_data = msg.data[1];
 19828  014900  C10F  F024         	movff	_msg+5,_user_data	;volatile
 19829  014904  6A25               	clrf	_user_data+1,c	;volatile
 19830                           
 19831                           ;RemoteCan.c: 177: user_data = ((user_data << 8) | msg.data[0]);
 19832  014906  5024               	movf	_user_data,w,c	;volatile
 19833  014908  0100               	movlb	0	; () banked
 19834  01490A  6F60               	movwf	??_ISR_alta& (0+255),b
 19835  01490C  0101               	movlb	1	; () banked
 19836  01490E  510E               	movf	(_msg+4)& (0+255),w,b
 19837  014910  6E24               	movwf	_user_data,c	;volatile
 19838  014912  C060  F025         	movff	??_ISR_alta,_user_data+1	;volatile
 19839  014916                     i2l9323:
 19840                           
 19841                           ;RemoteCan.c: 178: }
 19842                           ;RemoteCan.c: 180: if (id == 0b00000000100) {
 19843  014916  0E04               	movlw	4
 19844  014918  180C               	xorwf	_id,w,c	;volatile
 19845  01491A  100D               	iorwf	_id+1,w,c	;volatile
 19846  01491C  100E               	iorwf	_id+2,w,c	;volatile
 19847  01491E  100F               	iorwf	_id+3,w,c	;volatile
 19848  014920  B4D8               	btfsc	status,2,c
 19849                           
 19850                           ;RemoteCan.c: 181: if (RTR_Flag == 1) {
 19851  014922  AE4A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19852  014924  D026               	goto	i2l9337
 19853                           
 19854                           ;RemoteCan.c: 182: pr_time_4 = time_counter;
 19855  014926  C01C  F106         	movff	_time_counter,_pr_time_4	;volatile
 19856  01492A  C01D  F107         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19857  01492E  C01E  F108         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19858  014932  C01F  F109         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19859                           
 19860                           ;RemoteCan.c: 183: data[0] = 0x03;
 19861  014936  0E03               	movlw	3
 19862  014938  0101               	movlb	1	; () banked
 19863  01493A  6F25               	movwf	_data& (0+255),b
 19864                           
 19865                           ; BSR set to: 1
 19866                           ;RemoteCan.c: 184: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19867  01493C  0E0D               	movlw	13
 19868  01493E                     i2u1303_47:
 19869  01493E  2EE8               	decfsz	wreg,f,c
 19870  014940  D7FE               	goto	i2u1303_47
 19871  014942  F000               	nop	
 19872  014944                     i2l9333:
 19873  014944  EC7F  F0B2         	call	i2_CANisTxReady	;wreg free
 19874  014948  06E8               	decf	wreg,f,c
 19875  01494A  A4D8               	btfss	status,2,c
 19876  01494C  D7FB               	goto	i2l9333
 19877                           
 19878                           ;RemoteCan.c: 186: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19879  01494E  0E04               	movlw	4
 19880  014950  6E39               	movwf	i2CANsendMessage@identifier,c
 19881  014952  0E00               	movlw	0
 19882  014954  6E3A               	movwf	i2CANsendMessage@identifier+1,c
 19883  014956  0E00               	movlw	0
 19884  014958  6E3B               	movwf	i2CANsendMessage@identifier+2,c
 19885  01495A  0E00               	movlw	0
 19886  01495C  6E3C               	movwf	i2CANsendMessage@identifier+3,c
 19887  01495E  0E25               	movlw	low _data
 19888  014960  6E3D               	movwf	i2CANsendMessage@data,c
 19889  014962  0E01               	movlw	high _data
 19890  014964  6E3E               	movwf	i2CANsendMessage@data+1,c
 19891  014966  0E08               	movlw	8
 19892  014968  6E3F               	movwf	i2CANsendMessage@dataLength,c
 19893  01496A  0EBC               	movlw	188
 19894  01496C  6E40               	movwf	i2CANsendMessage@flags,c
 19895  01496E  EC72  F091         	call	i2_CANsendMessage	;wreg free
 19896  014972                     i2l9337:
 19897                           
 19898                           ;RemoteCan.c: 192: }
 19899                           ;RemoteCan.c: 193: }
 19900                           ;RemoteCan.c: 194: }
 19901                           ;RemoteCan.c: 195: PIR3bits.RXB1IF = 0;
 19902  014972  92A4               	bcf	4004,1,c	;volatile
 19903                           
 19904                           ;RemoteCan.c: 196: PIR3bits.RXB0IF = 0;
 19905  014974  90A4               	bcf	4004,0,c	;volatile
 19906  014976                     i2l804:
 19907  014976  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 19908  01497A  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 19909  01497E  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 19910  014982  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 19911  014986  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 19912  01498A  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 19913  01498E  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 19914  014992  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 19915  014996  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 19916  01499A  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 19917  01499E  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 19918  0149A2  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 19919  0149A6  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 19920  0149AA  C062  FFFA         	movff	??_ISR_alta+2,pclath
 19921  0149AE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19922  0149B0  0011               	retfie		f
 19923  0149B2                     __end_of_ISR_alta:
 19924                           	opt stack 0
 19925                           pclatu	equ	0xFFB
 19926                           pclath	equ	0xFFA
 19927                           tblptru	equ	0xFF8
 19928                           tblptrh	equ	0xFF7
 19929                           tblptrl	equ	0xFF6
 19930                           tablat	equ	0xFF5
 19931                           prodh	equ	0xFF4
 19932                           prodl	equ	0xFF3
 19933                           intcon	equ	0xFF2
 19934                           postinc0	equ	0xFEE
 19935                           fsr0h	equ	0xFEA
 19936                           fsr0l	equ	0xFE9
 19937                           wreg	equ	0xFE8
 19938                           indf1	equ	0xFE7
 19939                           plusw1	equ	0xFE3
 19940                           fsr1h	equ	0xFE2
 19941                           fsr1l	equ	0xFE1
 19942                           bsr	equ	0xFE0
 19943                           indf2	equ	0xFDF
 19944                           postinc2	equ	0xFDE
 19945                           plusw2	equ	0xFDB
 19946                           fsr2h	equ	0xFDA
 19947                           fsr2l	equ	0xFD9
 19948                           status	equ	0xFD8
 19949                           
 19950 ;; *************** function i2_CANsendMessage *****************
 19951 ;; Defined at:
 19952 ;;		line 294 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19953 ;; Parameters:    Size  Location     Type
 19954 ;;  identifier      4   17[COMRAM] unsigned long 
 19955 ;;  data            2   21[COMRAM] PTR unsigned char 
 19956 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 19957 ;;		 -> data(8), 
 19958 ;;  dataLength      1   23[COMRAM] unsigned char 
 19959 ;;  flags           1   24[COMRAM] enum E16909
 19960 ;; Auto vars:     Size  Location     Type
 19961 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19962 ;; Return value:  Size  Location     Type
 19963 ;;		None               void
 19964 ;; Registers used:
 19965 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19966 ;; Tracked objects:
 19967 ;;		On entry : 0/0
 19968 ;;		On exit  : 0/0
 19969 ;;		Unchanged: 0/0
 19970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19971 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19974 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19975 ;;Total ram usage:       16 bytes
 19976 ;; Hardware stack levels used:    1
 19977 ;; This function calls:
 19978 ;;		Nothing
 19979 ;; This function is called by:
 19980 ;;		_ISR_alta
 19981 ;; This function uses a non-reentrant model
 19982 ;;
 19983                           
 19984                           	psect	text59
 19985  0122E4                     __ptext59:
 19986                           	opt stack 0
 19987  0122E4                     i2_CANsendMessage:
 19988                           	opt stack 20
 19989                           
 19990                           ;inc\CANlib.h: 296: unsigned long tamp;
 19991                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19992                           
 19993                           ;incstack = 0
 19994  0122E4  010F               	movlb	15	; () banked
 19995  0122E6  B740               	btfsc	64,3,b	;volatile
 19996  0122E8  D115               	goto	i2l381
 19997                           
 19998                           ; BSR set to: 15
 19999                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 20000  0122EA  C03F  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 20001                           
 20002                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 20003  0122EE  AC40               	btfss	i2CANsendMessage@flags,6,c
 20004  0122F0  D003               	goto	i2l382
 20005                           
 20006                           ; BSR set to: 15
 20007                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 20008  0122F2  010F               	movlb	15	; () banked
 20009  0122F4  8D45               	bsf	69,6,b	;volatile
 20010  0122F6  D002               	goto	i2l383
 20011  0122F8                     i2l382:
 20012                           
 20013                           ; BSR set to: 15
 20014                           ;inc\CANlib.h: 302: else
 20015                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 20016  0122F8  010F               	movlb	15	; () banked
 20017  0122FA  9D45               	bcf	69,6,b	;volatile
 20018  0122FC                     i2l383:
 20019                           
 20020                           ; BSR set to: 15
 20021                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 20022  0122FC  A640               	btfss	i2CANsendMessage@flags,3,c
 20023  0122FE  D066               	goto	i2l384
 20024                           
 20025                           ; BSR set to: 15
 20026                           ;inc\CANlib.h: 306: {
 20027                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 20028  012300  5039               	movf	i2CANsendMessage@identifier,w,c
 20029  012302  6E45               	movwf	i2CANsendMessage@tamp,c
 20030  012304  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20031  012306  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20032  012308  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20033                           
 20034                           ; BSR set to: 15
 20035                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 20036  01230A  C045  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 20037                           
 20038                           ; BSR set to: 15
 20039                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 20040  01230E  0E00               	movlw	0
 20041  012310  1439               	andwf	i2CANsendMessage@identifier,w,c
 20042  012312  6E45               	movwf	i2CANsendMessage@tamp,c
 20043  012314  0EFF               	movlw	255
 20044  012316  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 20045  012318  6E46               	movwf	i2CANsendMessage@tamp+1,c
 20046  01231A  0E00               	movlw	0
 20047  01231C  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 20048  01231E  6E47               	movwf	i2CANsendMessage@tamp+2,c
 20049  012320  0E00               	movlw	0
 20050  012322  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 20051  012324  6E48               	movwf	i2CANsendMessage@tamp+3,c
 20052                           
 20053                           ; BSR set to: 15
 20054                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 20055  012326  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20056  01232A  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20057  01232E  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20058  012332  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20059  012336  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20060  01233A  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20061  01233E  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20062  012342  6A44               	clrf	??i2_CANsendMessage+3,c
 20063  012344  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20064  012348  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20065  01234C  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20066  012350  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20067                           
 20068                           ; BSR set to: 15
 20069                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 20070  012354  C045  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 20071                           
 20072                           ; BSR set to: 15
 20073                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 20074  012358  0E00               	movlw	0
 20075  01235A  010F               	movlb	15	; () banked
 20076  01235C  6F42               	movwf	66,b	;volatile
 20077                           
 20078                           ; BSR set to: 15
 20079                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 20080  01235E  010F               	movlb	15	; () banked
 20081  012360  8742               	bsf	66,3,b	;volatile
 20082                           
 20083                           ; BSR set to: 15
 20084                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 20085  012362  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 20086  012364  D002               	goto	i2l385
 20087                           
 20088                           ; BSR set to: 15
 20089                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 20090  012366  010F               	movlb	15	; () banked
 20091  012368  8142               	bsf	66,0,b	;volatile
 20092  01236A                     i2l385:
 20093                           
 20094                           ; BSR set to: 15
 20095                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 20096  01236A  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 20097  01236C  D002               	goto	i2l386
 20098                           
 20099                           ; BSR set to: 15
 20100                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 20101  01236E  010F               	movlb	15	; () banked
 20102  012370  8342               	bsf	66,1,b	;volatile
 20103  012372                     i2l386:
 20104                           
 20105                           ; BSR set to: 15
 20106                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 20107  012372  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 20108  012374  D002               	goto	i2l387
 20109                           
 20110                           ; BSR set to: 15
 20111                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 20112  012376  010F               	movlb	15	; () banked
 20113  012378  8B42               	bsf	66,5,b	;volatile
 20114  01237A                     i2l387:
 20115                           
 20116                           ; BSR set to: 15
 20117                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 20118  01237A  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 20119  01237C  D002               	goto	i2l388
 20120                           
 20121                           ; BSR set to: 15
 20122                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 20123  01237E  010F               	movlb	15	; () banked
 20124  012380  8D42               	bsf	66,6,b	;volatile
 20125  012382                     i2l388:
 20126                           
 20127                           ; BSR set to: 15
 20128                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 20129  012382  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 20130  012384  D002               	goto	i2l7333
 20131                           
 20132                           ; BSR set to: 15
 20133                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 20134  012386  010F               	movlb	15	; () banked
 20135  012388  8F42               	bsf	66,7,b	;volatile
 20136  01238A                     i2l7333:
 20137                           
 20138                           ; BSR set to: 15
 20139                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 20140  01238A  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20141  01238E  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20142  012392  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20143  012396  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20144  01239A  0E16               	movlw	22
 20145  01239C  D005               	goto	i2u936_40
 20146  01239E                     i2u936_45:
 20147  01239E  90D8               	bcf	status,0,c
 20148  0123A0  3244               	rrcf	??i2_CANsendMessage+3,f,c
 20149  0123A2  3243               	rrcf	??i2_CANsendMessage+2,f,c
 20150  0123A4  3242               	rrcf	??i2_CANsendMessage+1,f,c
 20151  0123A6  3241               	rrcf	??i2_CANsendMessage,f,c
 20152  0123A8                     i2u936_40:
 20153  0123A8  2EE8               	decfsz	wreg,f,c
 20154  0123AA  D7F9               	goto	i2u936_45
 20155  0123AC  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20156  0123B0  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20157  0123B4  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20158  0123B8  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20159                           
 20160                           ; BSR set to: 15
 20161                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 20162  0123BC  5045               	movf	i2CANsendMessage@tamp,w,c
 20163  0123BE  6E45               	movwf	i2CANsendMessage@tamp,c
 20164  0123C0  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20165  0123C2  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20166  0123C4  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20167                           
 20168                           ; BSR set to: 15
 20169                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 20170  0123C6  C045  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20171                           
 20172                           ;inc\CANlib.h: 332: }
 20173  0123CA  D04D               	goto	i2l7353
 20174  0123CC                     i2l384:
 20175                           
 20176                           ; BSR set to: 15
 20177                           ;inc\CANlib.h: 334: else
 20178                           ;inc\CANlib.h: 336: {
 20179                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 20180  0123CC  010F               	movlb	15	; () banked
 20181  0123CE  9742               	bcf	66,3,b	;volatile
 20182                           
 20183                           ; BSR set to: 15
 20184                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 20185  0123D0  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20186  0123D4  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20187  0123D8  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20188  0123DC  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20189  0123E0  0E04               	movlw	4
 20190  0123E2  D005               	goto	i2u937_40
 20191  0123E4                     i2u937_45:
 20192  0123E4  90D8               	bcf	status,0,c
 20193  0123E6  3244               	rrcf	??i2_CANsendMessage+3,f,c
 20194  0123E8  3243               	rrcf	??i2_CANsendMessage+2,f,c
 20195  0123EA  3242               	rrcf	??i2_CANsendMessage+1,f,c
 20196  0123EC  3241               	rrcf	??i2_CANsendMessage,f,c
 20197  0123EE                     i2u937_40:
 20198  0123EE  2EE8               	decfsz	wreg,f,c
 20199  0123F0  D7F9               	goto	i2u937_45
 20200  0123F2  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20201  0123F6  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20202  0123FA  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20203  0123FE  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20204                           
 20205                           ; BSR set to: 15
 20206                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 20207  012402  5045               	movf	i2CANsendMessage@tamp,w,c
 20208  012404  6E45               	movwf	i2CANsendMessage@tamp,c
 20209  012406  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20210  012408  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20211  01240A  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20212                           
 20213                           ; BSR set to: 15
 20214                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 20215  01240C  C045  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20216                           
 20217                           ; BSR set to: 15
 20218                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 20219  012410  0E07               	movlw	7
 20220  012412  1439               	andwf	i2CANsendMessage@identifier,w,c
 20221  012414  6E45               	movwf	i2CANsendMessage@tamp,c
 20222  012416  0E00               	movlw	0
 20223  012418  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 20224  01241A  6E46               	movwf	i2CANsendMessage@tamp+1,c
 20225  01241C  0E00               	movlw	0
 20226  01241E  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 20227  012420  6E47               	movwf	i2CANsendMessage@tamp+2,c
 20228  012422  0E00               	movlw	0
 20229  012424  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 20230  012426  6E48               	movwf	i2CANsendMessage@tamp+3,c
 20231                           
 20232                           ; BSR set to: 15
 20233                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 20234  012428  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20235  01242C  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20236  012430  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20237  012434  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20238  012438  0E05               	movlw	5
 20239  01243A                     i2u938_45:
 20240  01243A  90D8               	bcf	status,0,c
 20241  01243C  3641               	rlcf	??i2_CANsendMessage,f,c
 20242  01243E  3642               	rlcf	??i2_CANsendMessage+1,f,c
 20243  012440  3643               	rlcf	??i2_CANsendMessage+2,f,c
 20244  012442  3644               	rlcf	??i2_CANsendMessage+3,f,c
 20245  012444  2EE8               	decfsz	wreg,f,c
 20246  012446  D7F9               	goto	i2u938_45
 20247  012448  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20248  01244C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20249  012450  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20250  012454  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20251                           
 20252                           ; BSR set to: 15
 20253                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 20254  012458  010F               	movlb	15	; () banked
 20255  01245A  5142               	movf	66,w,b	;volatile
 20256  01245C  0B1F               	andlw	31
 20257  01245E  010F               	movlb	15	; () banked
 20258  012460  6F42               	movwf	66,b	;volatile
 20259                           
 20260                           ; BSR set to: 15
 20261                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 20262  012462  C045  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 20263  012466                     i2l7353:
 20264                           
 20265                           ; BSR set to: 15
 20266                           ;inc\CANlib.h: 347: }
 20267                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 20268  012466  A040               	btfss	i2CANsendMessage@flags,0,c
 20269  012468  D003               	goto	i2l391
 20270                           
 20271                           ; BSR set to: 15
 20272                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 20273  01246A  010F               	movlb	15	; () banked
 20274  01246C  8140               	bsf	64,0,b	;volatile
 20275  01246E  D002               	goto	i2l392
 20276  012470                     i2l391:
 20277                           
 20278                           ; BSR set to: 15
 20279                           ;inc\CANlib.h: 351: else
 20280                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 20281  012470  010F               	movlb	15	; () banked
 20282  012472  9140               	bcf	64,0,b	;volatile
 20283  012474                     i2l392:
 20284                           
 20285                           ; BSR set to: 15
 20286                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 20287  012474  A240               	btfss	i2CANsendMessage@flags,1,c
 20288  012476  D003               	goto	i2l393
 20289                           
 20290                           ; BSR set to: 15
 20291                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 20292  012478  010F               	movlb	15	; () banked
 20293  01247A  8340               	bsf	64,1,b	;volatile
 20294  01247C  D002               	goto	i2l7359
 20295  01247E                     i2l393:
 20296                           
 20297                           ; BSR set to: 15
 20298                           ;inc\CANlib.h: 355: else
 20299                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 20300  01247E  010F               	movlb	15	; () banked
 20301  012480  9340               	bcf	64,1,b	;volatile
 20302  012482                     i2l7359:
 20303                           
 20304                           ; BSR set to: 15
 20305                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 20306  012482  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20307  012486  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20308  01248A  50DF               	movf	indf2,w,c
 20309  01248C  010F               	movlb	15	; () banked
 20310  01248E  6F46               	movwf	70,b	;volatile
 20311                           
 20312                           ; BSR set to: 15
 20313                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 20314  012490  EE20 F001          	lfsr	2,1
 20315  012494  503D               	movf	i2CANsendMessage@data,w,c
 20316  012496  26D9               	addwf	fsr2l,f,c
 20317  012498  503E               	movf	i2CANsendMessage@data+1,w,c
 20318  01249A  22DA               	addwfc	fsr2h,f,c
 20319  01249C  50DF               	movf	indf2,w,c
 20320  01249E  010F               	movlb	15	; () banked
 20321  0124A0  6F47               	movwf	71,b	;volatile
 20322                           
 20323                           ; BSR set to: 15
 20324                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 20325  0124A2  EE20 F002          	lfsr	2,2
 20326  0124A6  503D               	movf	i2CANsendMessage@data,w,c
 20327  0124A8  26D9               	addwf	fsr2l,f,c
 20328  0124AA  503E               	movf	i2CANsendMessage@data+1,w,c
 20329  0124AC  22DA               	addwfc	fsr2h,f,c
 20330  0124AE  50DF               	movf	indf2,w,c
 20331  0124B0  010F               	movlb	15	; () banked
 20332  0124B2  6F48               	movwf	72,b	;volatile
 20333                           
 20334                           ; BSR set to: 15
 20335                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 20336  0124B4  EE20 F003          	lfsr	2,3
 20337  0124B8  503D               	movf	i2CANsendMessage@data,w,c
 20338  0124BA  26D9               	addwf	fsr2l,f,c
 20339  0124BC  503E               	movf	i2CANsendMessage@data+1,w,c
 20340  0124BE  22DA               	addwfc	fsr2h,f,c
 20341  0124C0  50DF               	movf	indf2,w,c
 20342  0124C2  010F               	movlb	15	; () banked
 20343  0124C4  6F49               	movwf	73,b	;volatile
 20344                           
 20345                           ; BSR set to: 15
 20346                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 20347  0124C6  EE20 F004          	lfsr	2,4
 20348  0124CA  503D               	movf	i2CANsendMessage@data,w,c
 20349  0124CC  26D9               	addwf	fsr2l,f,c
 20350  0124CE  503E               	movf	i2CANsendMessage@data+1,w,c
 20351  0124D0  22DA               	addwfc	fsr2h,f,c
 20352  0124D2  50DF               	movf	indf2,w,c
 20353  0124D4  010F               	movlb	15	; () banked
 20354  0124D6  6F4A               	movwf	74,b	;volatile
 20355                           
 20356                           ; BSR set to: 15
 20357                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 20358  0124D8  EE20 F005          	lfsr	2,5
 20359  0124DC  503D               	movf	i2CANsendMessage@data,w,c
 20360  0124DE  26D9               	addwf	fsr2l,f,c
 20361  0124E0  503E               	movf	i2CANsendMessage@data+1,w,c
 20362  0124E2  22DA               	addwfc	fsr2h,f,c
 20363  0124E4  50DF               	movf	indf2,w,c
 20364  0124E6  010F               	movlb	15	; () banked
 20365  0124E8  6F4B               	movwf	75,b	;volatile
 20366                           
 20367                           ; BSR set to: 15
 20368                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 20369  0124EA  EE20 F006          	lfsr	2,6
 20370  0124EE  503D               	movf	i2CANsendMessage@data,w,c
 20371  0124F0  26D9               	addwf	fsr2l,f,c
 20372  0124F2  503E               	movf	i2CANsendMessage@data+1,w,c
 20373  0124F4  22DA               	addwfc	fsr2h,f,c
 20374  0124F6  50DF               	movf	indf2,w,c
 20375  0124F8  010F               	movlb	15	; () banked
 20376  0124FA  6F4C               	movwf	76,b	;volatile
 20377                           
 20378                           ; BSR set to: 15
 20379                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 20380  0124FC  EE20 F007          	lfsr	2,7
 20381  012500  503D               	movf	i2CANsendMessage@data,w,c
 20382  012502  26D9               	addwf	fsr2l,f,c
 20383  012504  503E               	movf	i2CANsendMessage@data+1,w,c
 20384  012506  22DA               	addwfc	fsr2h,f,c
 20385  012508  50DF               	movf	indf2,w,c
 20386  01250A  010F               	movlb	15	; () banked
 20387  01250C  6F4D               	movwf	77,b	;volatile
 20388                           
 20389                           ; BSR set to: 15
 20390                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 20391  01250E  010F               	movlb	15	; () banked
 20392  012510  8740               	bsf	64,3,b	;volatile
 20393                           
 20394                           ; BSR set to: 15
 20395                           ;inc\CANlib.h: 368: return;
 20396  012512  0012               	return	
 20397  012514                     i2l381:
 20398                           
 20399                           ; BSR set to: 15
 20400                           ;inc\CANlib.h: 369: }
 20401                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 20402  012514  010F               	movlb	15	; () banked
 20403  012516  B730               	btfsc	48,3,b	;volatile
 20404  012518  D115               	goto	i2l396
 20405                           
 20406                           ; BSR set to: 15
 20407                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 20408  01251A  C03F  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 20409                           
 20410                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 20411  01251E  AC40               	btfss	i2CANsendMessage@flags,6,c
 20412  012520  D003               	goto	i2l397
 20413                           
 20414                           ; BSR set to: 15
 20415                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 20416  012522  010F               	movlb	15	; () banked
 20417  012524  8D35               	bsf	53,6,b	;volatile
 20418  012526  D002               	goto	i2l398
 20419  012528                     i2l397:
 20420                           
 20421                           ; BSR set to: 15
 20422                           ;inc\CANlib.h: 378: else
 20423                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 20424  012528  010F               	movlb	15	; () banked
 20425  01252A  9D35               	bcf	53,6,b	;volatile
 20426  01252C                     i2l398:
 20427                           
 20428                           ; BSR set to: 15
 20429                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 20430  01252C  A640               	btfss	i2CANsendMessage@flags,3,c
 20431  01252E  D066               	goto	i2l399
 20432                           
 20433                           ; BSR set to: 15
 20434                           ;inc\CANlib.h: 382: {
 20435                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 20436  012530  5039               	movf	i2CANsendMessage@identifier,w,c
 20437  012532  6E45               	movwf	i2CANsendMessage@tamp,c
 20438  012534  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20439  012536  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20440  012538  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20441                           
 20442                           ; BSR set to: 15
 20443                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 20444  01253A  C045  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 20445                           
 20446                           ; BSR set to: 15
 20447                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 20448  01253E  0E00               	movlw	0
 20449  012540  1439               	andwf	i2CANsendMessage@identifier,w,c
 20450  012542  6E45               	movwf	i2CANsendMessage@tamp,c
 20451  012544  0EFF               	movlw	255
 20452  012546  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 20453  012548  6E46               	movwf	i2CANsendMessage@tamp+1,c
 20454  01254A  0E00               	movlw	0
 20455  01254C  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 20456  01254E  6E47               	movwf	i2CANsendMessage@tamp+2,c
 20457  012550  0E00               	movlw	0
 20458  012552  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 20459  012554  6E48               	movwf	i2CANsendMessage@tamp+3,c
 20460                           
 20461                           ; BSR set to: 15
 20462                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 20463  012556  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20464  01255A  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20465  01255E  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20466  012562  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20467  012566  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20468  01256A  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20469  01256E  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20470  012572  6A44               	clrf	??i2_CANsendMessage+3,c
 20471  012574  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20472  012578  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20473  01257C  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20474  012580  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20475                           
 20476                           ; BSR set to: 15
 20477                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 20478  012584  C045  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 20479                           
 20480                           ; BSR set to: 15
 20481                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 20482  012588  0E00               	movlw	0
 20483  01258A  010F               	movlb	15	; () banked
 20484  01258C  6F32               	movwf	50,b	;volatile
 20485                           
 20486                           ; BSR set to: 15
 20487                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 20488  01258E  010F               	movlb	15	; () banked
 20489  012590  8732               	bsf	50,3,b	;volatile
 20490                           
 20491                           ; BSR set to: 15
 20492                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 20493  012592  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 20494  012594  D002               	goto	i2l400
 20495                           
 20496                           ; BSR set to: 15
 20497                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 20498  012596  010F               	movlb	15	; () banked
 20499  012598  8132               	bsf	50,0,b	;volatile
 20500  01259A                     i2l400:
 20501                           
 20502                           ; BSR set to: 15
 20503                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 20504  01259A  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 20505  01259C  D002               	goto	i2l401
 20506                           
 20507                           ; BSR set to: 15
 20508                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 20509  01259E  010F               	movlb	15	; () banked
 20510  0125A0  8332               	bsf	50,1,b	;volatile
 20511  0125A2                     i2l401:
 20512                           
 20513                           ; BSR set to: 15
 20514                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 20515  0125A2  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 20516  0125A4  D002               	goto	i2l402
 20517                           
 20518                           ; BSR set to: 15
 20519                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 20520  0125A6  010F               	movlb	15	; () banked
 20521  0125A8  8B32               	bsf	50,5,b	;volatile
 20522  0125AA                     i2l402:
 20523                           
 20524                           ; BSR set to: 15
 20525                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 20526  0125AA  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 20527  0125AC  D002               	goto	i2l403
 20528                           
 20529                           ; BSR set to: 15
 20530                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 20531  0125AE  010F               	movlb	15	; () banked
 20532  0125B0  8D32               	bsf	50,6,b	;volatile
 20533  0125B2                     i2l403:
 20534                           
 20535                           ; BSR set to: 15
 20536                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 20537  0125B2  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 20538  0125B4  D002               	goto	i2l7409
 20539                           
 20540                           ; BSR set to: 15
 20541                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 20542  0125B6  010F               	movlb	15	; () banked
 20543  0125B8  8F32               	bsf	50,7,b	;volatile
 20544  0125BA                     i2l7409:
 20545                           
 20546                           ; BSR set to: 15
 20547                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 20548  0125BA  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20549  0125BE  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20550  0125C2  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20551  0125C6  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20552  0125CA  0E16               	movlw	22
 20553  0125CC  D005               	goto	i2u949_40
 20554  0125CE                     i2u949_45:
 20555  0125CE  90D8               	bcf	status,0,c
 20556  0125D0  3244               	rrcf	??i2_CANsendMessage+3,f,c
 20557  0125D2  3243               	rrcf	??i2_CANsendMessage+2,f,c
 20558  0125D4  3242               	rrcf	??i2_CANsendMessage+1,f,c
 20559  0125D6  3241               	rrcf	??i2_CANsendMessage,f,c
 20560  0125D8                     i2u949_40:
 20561  0125D8  2EE8               	decfsz	wreg,f,c
 20562  0125DA  D7F9               	goto	i2u949_45
 20563  0125DC  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20564  0125E0  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20565  0125E4  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20566  0125E8  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20567                           
 20568                           ; BSR set to: 15
 20569                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20570  0125EC  5045               	movf	i2CANsendMessage@tamp,w,c
 20571  0125EE  6E45               	movwf	i2CANsendMessage@tamp,c
 20572  0125F0  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20573  0125F2  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20574  0125F4  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20575                           
 20576                           ; BSR set to: 15
 20577                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20578  0125F6  C045  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20579                           
 20580                           ;inc\CANlib.h: 407: }
 20581  0125FA  D04D               	goto	i2l7429
 20582  0125FC                     i2l399:
 20583                           
 20584                           ; BSR set to: 15
 20585                           ;inc\CANlib.h: 409: else
 20586                           ;inc\CANlib.h: 411: {
 20587                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20588  0125FC  010F               	movlb	15	; () banked
 20589  0125FE  9732               	bcf	50,3,b	;volatile
 20590                           
 20591                           ; BSR set to: 15
 20592                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20593  012600  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20594  012604  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20595  012608  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20596  01260C  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20597  012610  0E04               	movlw	4
 20598  012612  D005               	goto	i2u950_40
 20599  012614                     i2u950_45:
 20600  012614  90D8               	bcf	status,0,c
 20601  012616  3244               	rrcf	??i2_CANsendMessage+3,f,c
 20602  012618  3243               	rrcf	??i2_CANsendMessage+2,f,c
 20603  01261A  3242               	rrcf	??i2_CANsendMessage+1,f,c
 20604  01261C  3241               	rrcf	??i2_CANsendMessage,f,c
 20605  01261E                     i2u950_40:
 20606  01261E  2EE8               	decfsz	wreg,f,c
 20607  012620  D7F9               	goto	i2u950_45
 20608  012622  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20609  012626  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20610  01262A  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20611  01262E  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20612                           
 20613                           ; BSR set to: 15
 20614                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20615  012632  5045               	movf	i2CANsendMessage@tamp,w,c
 20616  012634  6E45               	movwf	i2CANsendMessage@tamp,c
 20617  012636  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20618  012638  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20619  01263A  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20620                           
 20621                           ; BSR set to: 15
 20622                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20623  01263C  C045  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20624                           
 20625                           ; BSR set to: 15
 20626                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20627  012640  0E07               	movlw	7
 20628  012642  1439               	andwf	i2CANsendMessage@identifier,w,c
 20629  012644  6E45               	movwf	i2CANsendMessage@tamp,c
 20630  012646  0E00               	movlw	0
 20631  012648  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 20632  01264A  6E46               	movwf	i2CANsendMessage@tamp+1,c
 20633  01264C  0E00               	movlw	0
 20634  01264E  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 20635  012650  6E47               	movwf	i2CANsendMessage@tamp+2,c
 20636  012652  0E00               	movlw	0
 20637  012654  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 20638  012656  6E48               	movwf	i2CANsendMessage@tamp+3,c
 20639                           
 20640                           ; BSR set to: 15
 20641                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20642  012658  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20643  01265C  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20644  012660  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20645  012664  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20646  012668  0E05               	movlw	5
 20647  01266A                     i2u951_45:
 20648  01266A  90D8               	bcf	status,0,c
 20649  01266C  3641               	rlcf	??i2_CANsendMessage,f,c
 20650  01266E  3642               	rlcf	??i2_CANsendMessage+1,f,c
 20651  012670  3643               	rlcf	??i2_CANsendMessage+2,f,c
 20652  012672  3644               	rlcf	??i2_CANsendMessage+3,f,c
 20653  012674  2EE8               	decfsz	wreg,f,c
 20654  012676  D7F9               	goto	i2u951_45
 20655  012678  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20656  01267C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20657  012680  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20658  012684  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20659                           
 20660                           ; BSR set to: 15
 20661                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20662  012688  010F               	movlb	15	; () banked
 20663  01268A  5132               	movf	50,w,b	;volatile
 20664  01268C  0B1F               	andlw	31
 20665  01268E  010F               	movlb	15	; () banked
 20666  012690  6F32               	movwf	50,b	;volatile
 20667                           
 20668                           ; BSR set to: 15
 20669                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20670  012692  C045  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20671  012696                     i2l7429:
 20672                           
 20673                           ; BSR set to: 15
 20674                           ;inc\CANlib.h: 422: }
 20675                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20676  012696  A040               	btfss	i2CANsendMessage@flags,0,c
 20677  012698  D003               	goto	i2l406
 20678                           
 20679                           ; BSR set to: 15
 20680                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20681  01269A  010F               	movlb	15	; () banked
 20682  01269C  8130               	bsf	48,0,b	;volatile
 20683  01269E  D002               	goto	i2l407
 20684  0126A0                     i2l406:
 20685                           
 20686                           ; BSR set to: 15
 20687                           ;inc\CANlib.h: 426: else
 20688                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20689  0126A0  010F               	movlb	15	; () banked
 20690  0126A2  9130               	bcf	48,0,b	;volatile
 20691  0126A4                     i2l407:
 20692                           
 20693                           ; BSR set to: 15
 20694                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20695  0126A4  A240               	btfss	i2CANsendMessage@flags,1,c
 20696  0126A6  D003               	goto	i2l408
 20697                           
 20698                           ; BSR set to: 15
 20699                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20700  0126A8  010F               	movlb	15	; () banked
 20701  0126AA  8330               	bsf	48,1,b	;volatile
 20702  0126AC  D002               	goto	i2l7435
 20703  0126AE                     i2l408:
 20704                           
 20705                           ; BSR set to: 15
 20706                           ;inc\CANlib.h: 430: else
 20707                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20708  0126AE  010F               	movlb	15	; () banked
 20709  0126B0  9330               	bcf	48,1,b	;volatile
 20710  0126B2                     i2l7435:
 20711                           
 20712                           ; BSR set to: 15
 20713                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20714  0126B2  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20715  0126B6  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20716  0126BA  50DF               	movf	indf2,w,c
 20717  0126BC  010F               	movlb	15	; () banked
 20718  0126BE  6F36               	movwf	54,b	;volatile
 20719                           
 20720                           ; BSR set to: 15
 20721                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20722  0126C0  EE20 F001          	lfsr	2,1
 20723  0126C4  503D               	movf	i2CANsendMessage@data,w,c
 20724  0126C6  26D9               	addwf	fsr2l,f,c
 20725  0126C8  503E               	movf	i2CANsendMessage@data+1,w,c
 20726  0126CA  22DA               	addwfc	fsr2h,f,c
 20727  0126CC  50DF               	movf	indf2,w,c
 20728  0126CE  010F               	movlb	15	; () banked
 20729  0126D0  6F37               	movwf	55,b	;volatile
 20730                           
 20731                           ; BSR set to: 15
 20732                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20733  0126D2  EE20 F002          	lfsr	2,2
 20734  0126D6  503D               	movf	i2CANsendMessage@data,w,c
 20735  0126D8  26D9               	addwf	fsr2l,f,c
 20736  0126DA  503E               	movf	i2CANsendMessage@data+1,w,c
 20737  0126DC  22DA               	addwfc	fsr2h,f,c
 20738  0126DE  50DF               	movf	indf2,w,c
 20739  0126E0  010F               	movlb	15	; () banked
 20740  0126E2  6F38               	movwf	56,b	;volatile
 20741                           
 20742                           ; BSR set to: 15
 20743                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20744  0126E4  EE20 F003          	lfsr	2,3
 20745  0126E8  503D               	movf	i2CANsendMessage@data,w,c
 20746  0126EA  26D9               	addwf	fsr2l,f,c
 20747  0126EC  503E               	movf	i2CANsendMessage@data+1,w,c
 20748  0126EE  22DA               	addwfc	fsr2h,f,c
 20749  0126F0  50DF               	movf	indf2,w,c
 20750  0126F2  010F               	movlb	15	; () banked
 20751  0126F4  6F39               	movwf	57,b	;volatile
 20752                           
 20753                           ; BSR set to: 15
 20754                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20755  0126F6  EE20 F004          	lfsr	2,4
 20756  0126FA  503D               	movf	i2CANsendMessage@data,w,c
 20757  0126FC  26D9               	addwf	fsr2l,f,c
 20758  0126FE  503E               	movf	i2CANsendMessage@data+1,w,c
 20759  012700  22DA               	addwfc	fsr2h,f,c
 20760  012702  50DF               	movf	indf2,w,c
 20761  012704  010F               	movlb	15	; () banked
 20762  012706  6F3A               	movwf	58,b	;volatile
 20763                           
 20764                           ; BSR set to: 15
 20765                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20766  012708  EE20 F005          	lfsr	2,5
 20767  01270C  503D               	movf	i2CANsendMessage@data,w,c
 20768  01270E  26D9               	addwf	fsr2l,f,c
 20769  012710  503E               	movf	i2CANsendMessage@data+1,w,c
 20770  012712  22DA               	addwfc	fsr2h,f,c
 20771  012714  50DF               	movf	indf2,w,c
 20772  012716  010F               	movlb	15	; () banked
 20773  012718  6F3B               	movwf	59,b	;volatile
 20774                           
 20775                           ; BSR set to: 15
 20776                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20777  01271A  EE20 F006          	lfsr	2,6
 20778  01271E  503D               	movf	i2CANsendMessage@data,w,c
 20779  012720  26D9               	addwf	fsr2l,f,c
 20780  012722  503E               	movf	i2CANsendMessage@data+1,w,c
 20781  012724  22DA               	addwfc	fsr2h,f,c
 20782  012726  50DF               	movf	indf2,w,c
 20783  012728  010F               	movlb	15	; () banked
 20784  01272A  6F3C               	movwf	60,b	;volatile
 20785                           
 20786                           ; BSR set to: 15
 20787                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20788  01272C  EE20 F007          	lfsr	2,7
 20789  012730  503D               	movf	i2CANsendMessage@data,w,c
 20790  012732  26D9               	addwf	fsr2l,f,c
 20791  012734  503E               	movf	i2CANsendMessage@data+1,w,c
 20792  012736  22DA               	addwfc	fsr2h,f,c
 20793  012738  50DF               	movf	indf2,w,c
 20794  01273A  010F               	movlb	15	; () banked
 20795  01273C  6F3D               	movwf	61,b	;volatile
 20796                           
 20797                           ; BSR set to: 15
 20798                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20799  01273E  010F               	movlb	15	; () banked
 20800  012740  8730               	bsf	48,3,b	;volatile
 20801                           
 20802                           ; BSR set to: 15
 20803                           ;inc\CANlib.h: 444: return;
 20804  012742  0012               	return	
 20805  012744                     i2l396:
 20806                           
 20807                           ; BSR set to: 15
 20808                           ;inc\CANlib.h: 445: }
 20809                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20810  012744  010F               	movlb	15	; () banked
 20811  012746  B720               	btfsc	32,3,b	;volatile
 20812  012748  0012               	return	
 20813                           
 20814                           ; BSR set to: 15
 20815                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20816  01274A  C03F  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20817                           
 20818                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20819  01274E  AC40               	btfss	i2CANsendMessage@flags,6,c
 20820  012750  D003               	goto	i2l411
 20821                           
 20822                           ; BSR set to: 15
 20823                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20824  012752  010F               	movlb	15	; () banked
 20825  012754  8D25               	bsf	37,6,b	;volatile
 20826  012756  D002               	goto	i2l412
 20827  012758                     i2l411:
 20828                           
 20829                           ; BSR set to: 15
 20830                           ;inc\CANlib.h: 454: else
 20831                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20832  012758  010F               	movlb	15	; () banked
 20833  01275A  9D25               	bcf	37,6,b	;volatile
 20834  01275C                     i2l412:
 20835                           
 20836                           ; BSR set to: 15
 20837                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20838  01275C  A640               	btfss	i2CANsendMessage@flags,3,c
 20839  01275E  D066               	goto	i2l413
 20840                           
 20841                           ; BSR set to: 15
 20842                           ;inc\CANlib.h: 458: {
 20843                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20844  012760  5039               	movf	i2CANsendMessage@identifier,w,c
 20845  012762  6E45               	movwf	i2CANsendMessage@tamp,c
 20846  012764  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20847  012766  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20848  012768  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20849                           
 20850                           ; BSR set to: 15
 20851                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20852  01276A  C045  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20853                           
 20854                           ; BSR set to: 15
 20855                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20856  01276E  0E00               	movlw	0
 20857  012770  1439               	andwf	i2CANsendMessage@identifier,w,c
 20858  012772  6E45               	movwf	i2CANsendMessage@tamp,c
 20859  012774  0EFF               	movlw	255
 20860  012776  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 20861  012778  6E46               	movwf	i2CANsendMessage@tamp+1,c
 20862  01277A  0E00               	movlw	0
 20863  01277C  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 20864  01277E  6E47               	movwf	i2CANsendMessage@tamp+2,c
 20865  012780  0E00               	movlw	0
 20866  012782  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 20867  012784  6E48               	movwf	i2CANsendMessage@tamp+3,c
 20868                           
 20869                           ; BSR set to: 15
 20870                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20871  012786  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20872  01278A  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20873  01278E  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20874  012792  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20875  012796  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20876  01279A  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20877  01279E  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20878  0127A2  6A44               	clrf	??i2_CANsendMessage+3,c
 20879  0127A4  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20880  0127A8  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20881  0127AC  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20882  0127B0  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20883                           
 20884                           ; BSR set to: 15
 20885                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20886  0127B4  C045  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20887                           
 20888                           ; BSR set to: 15
 20889                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20890  0127B8  0E00               	movlw	0
 20891  0127BA  010F               	movlb	15	; () banked
 20892  0127BC  6F22               	movwf	34,b	;volatile
 20893                           
 20894                           ; BSR set to: 15
 20895                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20896  0127BE  010F               	movlb	15	; () banked
 20897  0127C0  8722               	bsf	34,3,b	;volatile
 20898                           
 20899                           ; BSR set to: 15
 20900                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20901  0127C2  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 20902  0127C4  D002               	goto	i2l414
 20903                           
 20904                           ; BSR set to: 15
 20905                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20906  0127C6  010F               	movlb	15	; () banked
 20907  0127C8  8122               	bsf	34,0,b	;volatile
 20908  0127CA                     i2l414:
 20909                           
 20910                           ; BSR set to: 15
 20911                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20912  0127CA  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 20913  0127CC  D002               	goto	i2l415
 20914                           
 20915                           ; BSR set to: 15
 20916                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20917  0127CE  010F               	movlb	15	; () banked
 20918  0127D0  8322               	bsf	34,1,b	;volatile
 20919  0127D2                     i2l415:
 20920                           
 20921                           ; BSR set to: 15
 20922                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20923  0127D2  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 20924  0127D4  D002               	goto	i2l416
 20925                           
 20926                           ; BSR set to: 15
 20927                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20928  0127D6  010F               	movlb	15	; () banked
 20929  0127D8  8B22               	bsf	34,5,b	;volatile
 20930  0127DA                     i2l416:
 20931                           
 20932                           ; BSR set to: 15
 20933                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20934  0127DA  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 20935  0127DC  D002               	goto	i2l417
 20936                           
 20937                           ; BSR set to: 15
 20938                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20939  0127DE  010F               	movlb	15	; () banked
 20940  0127E0  8D22               	bsf	34,6,b	;volatile
 20941  0127E2                     i2l417:
 20942                           
 20943                           ; BSR set to: 15
 20944                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20945  0127E2  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 20946  0127E4  D002               	goto	i2l7485
 20947                           
 20948                           ; BSR set to: 15
 20949                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20950  0127E6  010F               	movlb	15	; () banked
 20951  0127E8  8F22               	bsf	34,7,b	;volatile
 20952  0127EA                     i2l7485:
 20953                           
 20954                           ; BSR set to: 15
 20955                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20956  0127EA  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20957  0127EE  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20958  0127F2  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20959  0127F6  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20960  0127FA  0E16               	movlw	22
 20961  0127FC  D005               	goto	i2u962_40
 20962  0127FE                     i2u962_45:
 20963  0127FE  90D8               	bcf	status,0,c
 20964  012800  3244               	rrcf	??i2_CANsendMessage+3,f,c
 20965  012802  3243               	rrcf	??i2_CANsendMessage+2,f,c
 20966  012804  3242               	rrcf	??i2_CANsendMessage+1,f,c
 20967  012806  3241               	rrcf	??i2_CANsendMessage,f,c
 20968  012808                     i2u962_40:
 20969  012808  2EE8               	decfsz	wreg,f,c
 20970  01280A  D7F9               	goto	i2u962_45
 20971  01280C  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20972  012810  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20973  012814  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20974  012818  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20975                           
 20976                           ; BSR set to: 15
 20977                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20978  01281C  5045               	movf	i2CANsendMessage@tamp,w,c
 20979  01281E  6E45               	movwf	i2CANsendMessage@tamp,c
 20980  012820  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20981  012822  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20982  012824  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20983                           
 20984                           ; BSR set to: 15
 20985                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20986  012826  C045  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20987                           
 20988                           ;inc\CANlib.h: 483: }
 20989  01282A  D04D               	goto	i2l7505
 20990  01282C                     i2l413:
 20991                           
 20992                           ; BSR set to: 15
 20993                           ;inc\CANlib.h: 485: else
 20994                           ;inc\CANlib.h: 487: {
 20995                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20996  01282C  010F               	movlb	15	; () banked
 20997  01282E  9722               	bcf	34,3,b	;volatile
 20998                           
 20999                           ; BSR set to: 15
 21000                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 21001  012830  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21002  012834  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21003  012838  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21004  01283C  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21005  012840  0E04               	movlw	4
 21006  012842  D005               	goto	i2u963_40
 21007  012844                     i2u963_45:
 21008  012844  90D8               	bcf	status,0,c
 21009  012846  3244               	rrcf	??i2_CANsendMessage+3,f,c
 21010  012848  3243               	rrcf	??i2_CANsendMessage+2,f,c
 21011  01284A  3242               	rrcf	??i2_CANsendMessage+1,f,c
 21012  01284C  3241               	rrcf	??i2_CANsendMessage,f,c
 21013  01284E                     i2u963_40:
 21014  01284E  2EE8               	decfsz	wreg,f,c
 21015  012850  D7F9               	goto	i2u963_45
 21016  012852  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21017  012856  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21018  01285A  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21019  01285E  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21020                           
 21021                           ; BSR set to: 15
 21022                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 21023  012862  5045               	movf	i2CANsendMessage@tamp,w,c
 21024  012864  6E45               	movwf	i2CANsendMessage@tamp,c
 21025  012866  6A46               	clrf	i2CANsendMessage@tamp+1,c
 21026  012868  6A47               	clrf	i2CANsendMessage@tamp+2,c
 21027  01286A  6A48               	clrf	i2CANsendMessage@tamp+3,c
 21028                           
 21029                           ; BSR set to: 15
 21030                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 21031  01286C  C045  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 21032                           
 21033                           ; BSR set to: 15
 21034                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 21035  012870  0E07               	movlw	7
 21036  012872  1439               	andwf	i2CANsendMessage@identifier,w,c
 21037  012874  6E45               	movwf	i2CANsendMessage@tamp,c
 21038  012876  0E00               	movlw	0
 21039  012878  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 21040  01287A  6E46               	movwf	i2CANsendMessage@tamp+1,c
 21041  01287C  0E00               	movlw	0
 21042  01287E  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 21043  012880  6E47               	movwf	i2CANsendMessage@tamp+2,c
 21044  012882  0E00               	movlw	0
 21045  012884  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 21046  012886  6E48               	movwf	i2CANsendMessage@tamp+3,c
 21047                           
 21048                           ; BSR set to: 15
 21049                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 21050  012888  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21051  01288C  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21052  012890  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21053  012894  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21054  012898  0E05               	movlw	5
 21055  01289A                     i2u964_45:
 21056  01289A  90D8               	bcf	status,0,c
 21057  01289C  3641               	rlcf	??i2_CANsendMessage,f,c
 21058  01289E  3642               	rlcf	??i2_CANsendMessage+1,f,c
 21059  0128A0  3643               	rlcf	??i2_CANsendMessage+2,f,c
 21060  0128A2  3644               	rlcf	??i2_CANsendMessage+3,f,c
 21061  0128A4  2EE8               	decfsz	wreg,f,c
 21062  0128A6  D7F9               	goto	i2u964_45
 21063  0128A8  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21064  0128AC  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21065  0128B0  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21066  0128B4  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21067                           
 21068                           ; BSR set to: 15
 21069                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 21070  0128B8  010F               	movlb	15	; () banked
 21071  0128BA  5122               	movf	34,w,b	;volatile
 21072  0128BC  0B1F               	andlw	31
 21073  0128BE  010F               	movlb	15	; () banked
 21074  0128C0  6F22               	movwf	34,b	;volatile
 21075                           
 21076                           ; BSR set to: 15
 21077                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 21078  0128C2  C045  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 21079  0128C6                     i2l7505:
 21080                           
 21081                           ; BSR set to: 15
 21082                           ;inc\CANlib.h: 498: }
 21083                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 21084  0128C6  A040               	btfss	i2CANsendMessage@flags,0,c
 21085  0128C8  D003               	goto	i2l420
 21086                           
 21087                           ; BSR set to: 15
 21088                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 21089  0128CA  010F               	movlb	15	; () banked
 21090  0128CC  8120               	bsf	32,0,b	;volatile
 21091  0128CE  D002               	goto	i2l421
 21092  0128D0                     i2l420:
 21093                           
 21094                           ; BSR set to: 15
 21095                           ;inc\CANlib.h: 502: else
 21096                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 21097  0128D0  010F               	movlb	15	; () banked
 21098  0128D2  9120               	bcf	32,0,b	;volatile
 21099  0128D4                     i2l421:
 21100                           
 21101                           ; BSR set to: 15
 21102                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 21103  0128D4  A240               	btfss	i2CANsendMessage@flags,1,c
 21104  0128D6  D003               	goto	i2l422
 21105                           
 21106                           ; BSR set to: 15
 21107                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 21108  0128D8  010F               	movlb	15	; () banked
 21109  0128DA  8320               	bsf	32,1,b	;volatile
 21110  0128DC  D002               	goto	i2l7511
 21111  0128DE                     i2l422:
 21112                           
 21113                           ; BSR set to: 15
 21114                           ;inc\CANlib.h: 506: else
 21115                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 21116  0128DE  010F               	movlb	15	; () banked
 21117  0128E0  9320               	bcf	32,1,b	;volatile
 21118  0128E2                     i2l7511:
 21119                           
 21120                           ; BSR set to: 15
 21121                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 21122  0128E2  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21123  0128E6  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21124  0128EA  50DF               	movf	indf2,w,c
 21125  0128EC  010F               	movlb	15	; () banked
 21126  0128EE  6F26               	movwf	38,b	;volatile
 21127                           
 21128                           ; BSR set to: 15
 21129                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 21130  0128F0  EE20 F001          	lfsr	2,1
 21131  0128F4  503D               	movf	i2CANsendMessage@data,w,c
 21132  0128F6  26D9               	addwf	fsr2l,f,c
 21133  0128F8  503E               	movf	i2CANsendMessage@data+1,w,c
 21134  0128FA  22DA               	addwfc	fsr2h,f,c
 21135  0128FC  50DF               	movf	indf2,w,c
 21136  0128FE  010F               	movlb	15	; () banked
 21137  012900  6F27               	movwf	39,b	;volatile
 21138                           
 21139                           ; BSR set to: 15
 21140                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 21141  012902  EE20 F002          	lfsr	2,2
 21142  012906  503D               	movf	i2CANsendMessage@data,w,c
 21143  012908  26D9               	addwf	fsr2l,f,c
 21144  01290A  503E               	movf	i2CANsendMessage@data+1,w,c
 21145  01290C  22DA               	addwfc	fsr2h,f,c
 21146  01290E  50DF               	movf	indf2,w,c
 21147  012910  010F               	movlb	15	; () banked
 21148  012912  6F28               	movwf	40,b	;volatile
 21149                           
 21150                           ; BSR set to: 15
 21151                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 21152  012914  EE20 F003          	lfsr	2,3
 21153  012918  503D               	movf	i2CANsendMessage@data,w,c
 21154  01291A  26D9               	addwf	fsr2l,f,c
 21155  01291C  503E               	movf	i2CANsendMessage@data+1,w,c
 21156  01291E  22DA               	addwfc	fsr2h,f,c
 21157  012920  50DF               	movf	indf2,w,c
 21158  012922  010F               	movlb	15	; () banked
 21159  012924  6F29               	movwf	41,b	;volatile
 21160                           
 21161                           ; BSR set to: 15
 21162                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 21163  012926  EE20 F004          	lfsr	2,4
 21164  01292A  503D               	movf	i2CANsendMessage@data,w,c
 21165  01292C  26D9               	addwf	fsr2l,f,c
 21166  01292E  503E               	movf	i2CANsendMessage@data+1,w,c
 21167  012930  22DA               	addwfc	fsr2h,f,c
 21168  012932  50DF               	movf	indf2,w,c
 21169  012934  010F               	movlb	15	; () banked
 21170  012936  6F2A               	movwf	42,b	;volatile
 21171                           
 21172                           ; BSR set to: 15
 21173                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 21174  012938  EE20 F005          	lfsr	2,5
 21175  01293C  503D               	movf	i2CANsendMessage@data,w,c
 21176  01293E  26D9               	addwf	fsr2l,f,c
 21177  012940  503E               	movf	i2CANsendMessage@data+1,w,c
 21178  012942  22DA               	addwfc	fsr2h,f,c
 21179  012944  50DF               	movf	indf2,w,c
 21180  012946  010F               	movlb	15	; () banked
 21181  012948  6F2B               	movwf	43,b	;volatile
 21182                           
 21183                           ; BSR set to: 15
 21184                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 21185  01294A  EE20 F006          	lfsr	2,6
 21186  01294E  503D               	movf	i2CANsendMessage@data,w,c
 21187  012950  26D9               	addwf	fsr2l,f,c
 21188  012952  503E               	movf	i2CANsendMessage@data+1,w,c
 21189  012954  22DA               	addwfc	fsr2h,f,c
 21190  012956  50DF               	movf	indf2,w,c
 21191  012958  010F               	movlb	15	; () banked
 21192  01295A  6F2C               	movwf	44,b	;volatile
 21193                           
 21194                           ; BSR set to: 15
 21195                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 21196  01295C  EE20 F007          	lfsr	2,7
 21197  012960  503D               	movf	i2CANsendMessage@data,w,c
 21198  012962  26D9               	addwf	fsr2l,f,c
 21199  012964  503E               	movf	i2CANsendMessage@data+1,w,c
 21200  012966  22DA               	addwfc	fsr2h,f,c
 21201  012968  50DF               	movf	indf2,w,c
 21202  01296A  010F               	movlb	15	; () banked
 21203  01296C  6F2D               	movwf	45,b	;volatile
 21204                           
 21205                           ; BSR set to: 15
 21206                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 21207  01296E  010F               	movlb	15	; () banked
 21208  012970  8720               	bsf	32,3,b	;volatile
 21209                           
 21210                           ; BSR set to: 15
 21211                           ;inc\CANlib.h: 520: return;
 21212  012972  0012               	return	
 21213  012974                     __end_ofi2_CANsendMessage:
 21214                           	opt stack 0
 21215                           pclatu	equ	0xFFB
 21216                           pclath	equ	0xFFA
 21217                           tblptru	equ	0xFF8
 21218                           tblptrh	equ	0xFF7
 21219                           tblptrl	equ	0xFF6
 21220                           tablat	equ	0xFF5
 21221                           prodh	equ	0xFF4
 21222                           prodl	equ	0xFF3
 21223                           intcon	equ	0xFF2
 21224                           postinc0	equ	0xFEE
 21225                           fsr0h	equ	0xFEA
 21226                           fsr0l	equ	0xFE9
 21227                           wreg	equ	0xFE8
 21228                           indf1	equ	0xFE7
 21229                           plusw1	equ	0xFE3
 21230                           fsr1h	equ	0xFE2
 21231                           fsr1l	equ	0xFE1
 21232                           bsr	equ	0xFE0
 21233                           indf2	equ	0xFDF
 21234                           postinc2	equ	0xFDE
 21235                           plusw2	equ	0xFDB
 21236                           fsr2h	equ	0xFDA
 21237                           fsr2l	equ	0xFD9
 21238                           status	equ	0xFD8
 21239                           
 21240 ;; *************** function i2_CANisTxReady *****************
 21241 ;; Defined at:
 21242 ;;		line 1154 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21243 ;; Parameters:    Size  Location     Type
 21244 ;;		None
 21245 ;; Auto vars:     Size  Location     Type
 21246 ;;		None
 21247 ;; Return value:  Size  Location     Type
 21248 ;;                  1    wreg      unsigned char 
 21249 ;; Registers used:
 21250 ;;		wreg, status,2
 21251 ;; Tracked objects:
 21252 ;;		On entry : 0/0
 21253 ;;		On exit  : 0/0
 21254 ;;		Unchanged: 0/0
 21255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21260 ;;Total ram usage:        1 bytes
 21261 ;; Hardware stack levels used:    1
 21262 ;; This function calls:
 21263 ;;		Nothing
 21264 ;; This function is called by:
 21265 ;;		_ISR_alta
 21266 ;; This function uses a non-reentrant model
 21267 ;;
 21268                           
 21269                           	psect	text60
 21270  0164FE                     __ptext60:
 21271                           	opt stack 0
 21272  0164FE                     i2_CANisTxReady:
 21273                           	opt stack 20
 21274                           
 21275                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 21276                           
 21277                           ; BSR set to: 15
 21278                           ;incstack = 0
 21279  0164FE  0E01               	movlw	1
 21280  016500  6E39               	movwf	i2_CANisTxReady$3115,c
 21281  016502  010F               	movlb	15	; () banked
 21282  016504  A740               	btfss	64,3,b	;volatile
 21283  016506  D008               	goto	i2l574
 21284                           
 21285                           ; BSR set to: 15
 21286  016508  010F               	movlb	15	; () banked
 21287  01650A  A730               	btfss	48,3,b	;volatile
 21288  01650C  D005               	goto	i2l574
 21289                           
 21290                           ; BSR set to: 15
 21291  01650E  010F               	movlb	15	; () banked
 21292  016510  A720               	btfss	32,3,b	;volatile
 21293  016512  D002               	goto	i2l574
 21294                           
 21295                           ; BSR set to: 15
 21296  016514  0E00               	movlw	0
 21297  016516  6E39               	movwf	i2_CANisTxReady$3115,c
 21298  016518                     i2l574:
 21299                           
 21300                           ; BSR set to: 15
 21301  016518  5039               	movf	i2_CANisTxReady$3115,w,c
 21302  01651A  0012               	return	
 21303  01651C                     __end_ofi2_CANisTxReady:
 21304                           	opt stack 0
 21305                           pclatu	equ	0xFFB
 21306                           pclath	equ	0xFFA
 21307                           tblptru	equ	0xFF8
 21308                           tblptrh	equ	0xFF7
 21309                           tblptrl	equ	0xFF6
 21310                           tablat	equ	0xFF5
 21311                           prodh	equ	0xFF4
 21312                           prodl	equ	0xFF3
 21313                           intcon	equ	0xFF2
 21314                           postinc0	equ	0xFEE
 21315                           fsr0h	equ	0xFEA
 21316                           fsr0l	equ	0xFE9
 21317                           wreg	equ	0xFE8
 21318                           indf1	equ	0xFE7
 21319                           plusw1	equ	0xFE3
 21320                           fsr1h	equ	0xFE2
 21321                           fsr1l	equ	0xFE1
 21322                           bsr	equ	0xFE0
 21323                           indf2	equ	0xFDF
 21324                           postinc2	equ	0xFDE
 21325                           plusw2	equ	0xFDB
 21326                           fsr2h	equ	0xFDA
 21327                           fsr2l	equ	0xFD9
 21328                           status	equ	0xFD8
 21329                           
 21330 ;; *************** function _CANreceiveMessage *****************
 21331 ;; Defined at:
 21332 ;;		line 528 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21333 ;; Parameters:    Size  Location     Type
 21334 ;;  msg             2   17[COMRAM] PTR struct .
 21335 ;;		 -> msg(15), 
 21336 ;; Auto vars:     Size  Location     Type
 21337 ;;  tamp            1   28[COMRAM] unsigned char 
 21338 ;;  error           1   27[COMRAM] unsigned char 
 21339 ;; Return value:  Size  Location     Type
 21340 ;;                  1    wreg      unsigned char 
 21341 ;; Registers used:
 21342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21343 ;; Tracked objects:
 21344 ;;		On entry : 0/0
 21345 ;;		On exit  : 0/0
 21346 ;;		Unchanged: 0/0
 21347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21350 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21351 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21352 ;;Total ram usage:       12 bytes
 21353 ;; Hardware stack levels used:    1
 21354 ;; This function calls:
 21355 ;;		Nothing
 21356 ;; This function is called by:
 21357 ;;		_ISR_alta
 21358 ;; This function uses a non-reentrant model
 21359 ;;
 21360                           
 21361                           	psect	text61
 21362  012E8E                     __ptext61:
 21363                           	opt stack 0
 21364  012E8E                     _CANreceiveMessage:
 21365                           	opt stack 20
 21366                           
 21367                           ;inc\CANlib.h: 530: BYTE tamp;
 21368                           ;inc\CANlib.h: 531: BYTE error = 0;
 21369                           
 21370                           ; BSR set to: 15
 21371                           ;incstack = 0
 21372  012E8E  0E00               	movlw	0
 21373  012E90  6E43               	movwf	CANreceiveMessage@error,c
 21374                           
 21375                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 21376  012E92  BE74               	btfsc	3956,7,c	;volatile
 21377                           
 21378                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 21379  012E94  8043               	bsf	CANreceiveMessage@error,0,c
 21380                           
 21381                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 21382  012E96  BC74               	btfsc	3956,6,c	;volatile
 21383                           
 21384                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 21385  012E98  8243               	bsf	CANreceiveMessage@error,1,c
 21386                           
 21387                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 21388  012E9A  010F               	movlb	15	; () banked
 21389  012E9C  AF50               	btfss	80,7,b	;volatile
 21390  012E9E  D143               	goto	i2l428
 21391                           
 21392                           ; BSR set to: 15
 21393                           ;inc\CANlib.h: 541: {
 21394                           ;inc\CANlib.h: 542: msg->identifier = 0;
 21395  012EA0  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21396  012EA4  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21397  012EA8  6ADE               	clrf	postinc2,c
 21398  012EAA  6ADE               	clrf	postinc2,c
 21399  012EAC  6ADE               	clrf	postinc2,c
 21400  012EAE  6ADD               	clrf	postdec2,c
 21401                           
 21402                           ; BSR set to: 15
 21403                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 21404  012EB0  EE20 F004          	lfsr	2,4
 21405  012EB4  5039               	movf	CANreceiveMessage@msg,w,c
 21406  012EB6  26D9               	addwf	fsr2l,f,c
 21407  012EB8  503A               	movf	CANreceiveMessage@msg+1,w,c
 21408  012EBA  22DA               	addwfc	fsr2h,f,c
 21409  012EBC  CF56 FFDF          	movff	3926,indf2	;volatile
 21410                           
 21411                           ; BSR set to: 15
 21412                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 21413  012EC0  EE20 F005          	lfsr	2,5
 21414  012EC4  5039               	movf	CANreceiveMessage@msg,w,c
 21415  012EC6  26D9               	addwf	fsr2l,f,c
 21416  012EC8  503A               	movf	CANreceiveMessage@msg+1,w,c
 21417  012ECA  22DA               	addwfc	fsr2h,f,c
 21418  012ECC  CF57 FFDF          	movff	3927,indf2	;volatile
 21419                           
 21420                           ; BSR set to: 15
 21421                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 21422  012ED0  EE20 F006          	lfsr	2,6
 21423  012ED4  5039               	movf	CANreceiveMessage@msg,w,c
 21424  012ED6  26D9               	addwf	fsr2l,f,c
 21425  012ED8  503A               	movf	CANreceiveMessage@msg+1,w,c
 21426  012EDA  22DA               	addwfc	fsr2h,f,c
 21427  012EDC  CF58 FFDF          	movff	3928,indf2	;volatile
 21428                           
 21429                           ; BSR set to: 15
 21430                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 21431  012EE0  EE20 F007          	lfsr	2,7
 21432  012EE4  5039               	movf	CANreceiveMessage@msg,w,c
 21433  012EE6  26D9               	addwf	fsr2l,f,c
 21434  012EE8  503A               	movf	CANreceiveMessage@msg+1,w,c
 21435  012EEA  22DA               	addwfc	fsr2h,f,c
 21436  012EEC  CF59 FFDF          	movff	3929,indf2	;volatile
 21437                           
 21438                           ; BSR set to: 15
 21439                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 21440  012EF0  EE20 F008          	lfsr	2,8
 21441  012EF4  5039               	movf	CANreceiveMessage@msg,w,c
 21442  012EF6  26D9               	addwf	fsr2l,f,c
 21443  012EF8  503A               	movf	CANreceiveMessage@msg+1,w,c
 21444  012EFA  22DA               	addwfc	fsr2h,f,c
 21445  012EFC  CF5A FFDF          	movff	3930,indf2	;volatile
 21446                           
 21447                           ; BSR set to: 15
 21448                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 21449  012F00  EE20 F009          	lfsr	2,9
 21450  012F04  5039               	movf	CANreceiveMessage@msg,w,c
 21451  012F06  26D9               	addwf	fsr2l,f,c
 21452  012F08  503A               	movf	CANreceiveMessage@msg+1,w,c
 21453  012F0A  22DA               	addwfc	fsr2h,f,c
 21454  012F0C  CF5B FFDF          	movff	3931,indf2	;volatile
 21455                           
 21456                           ; BSR set to: 15
 21457                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 21458  012F10  EE20 F00A          	lfsr	2,10
 21459  012F14  5039               	movf	CANreceiveMessage@msg,w,c
 21460  012F16  26D9               	addwf	fsr2l,f,c
 21461  012F18  503A               	movf	CANreceiveMessage@msg+1,w,c
 21462  012F1A  22DA               	addwfc	fsr2h,f,c
 21463  012F1C  CF5C FFDF          	movff	3932,indf2	;volatile
 21464                           
 21465                           ; BSR set to: 15
 21466                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 21467  012F20  EE20 F00B          	lfsr	2,11
 21468  012F24  5039               	movf	CANreceiveMessage@msg,w,c
 21469  012F26  26D9               	addwf	fsr2l,f,c
 21470  012F28  503A               	movf	CANreceiveMessage@msg+1,w,c
 21471  012F2A  22DA               	addwfc	fsr2h,f,c
 21472  012F2C  CF5D FFDF          	movff	3933,indf2	;volatile
 21473                           
 21474                           ; BSR set to: 15
 21475                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 21476  012F30  EE20 F00E          	lfsr	2,14
 21477  012F34  5039               	movf	CANreceiveMessage@msg,w,c
 21478  012F36  26D9               	addwf	fsr2l,f,c
 21479  012F38  503A               	movf	CANreceiveMessage@msg+1,w,c
 21480  012F3A  22DA               	addwfc	fsr2h,f,c
 21481  012F3C  010F               	movlb	15	; () banked
 21482  012F3E  AD55               	btfss	85,6,b	;volatile
 21483  012F40  D002               	goto	i2u875_40
 21484  012F42  0E01               	movlw	1
 21485  012F44  D001               	goto	i2u875_46
 21486  012F46                     i2u875_40:
 21487  012F46  0E00               	movlw	0
 21488  012F48                     i2u875_46:
 21489  012F48  6EDF               	movwf	indf2,c
 21490                           
 21491                           ; BSR set to: 15
 21492                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 21493  012F4A  EE20 F00D          	lfsr	2,13
 21494  012F4E  5039               	movf	CANreceiveMessage@msg,w,c
 21495  012F50  26D9               	addwf	fsr2l,f,c
 21496  012F52  503A               	movf	CANreceiveMessage@msg+1,w,c
 21497  012F54  22DA               	addwfc	fsr2h,f,c
 21498  012F56  010F               	movlb	15	; () banked
 21499  012F58  5155               	movf	85,w,b	;volatile
 21500  012F5A  0B0F               	andlw	15
 21501  012F5C  6EDF               	movwf	indf2,c
 21502                           
 21503                           ; BSR set to: 15
 21504                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 21505  012F5E  EE20 F00C          	lfsr	2,12
 21506  012F62  5039               	movf	CANreceiveMessage@msg,w,c
 21507  012F64  26D9               	addwf	fsr2l,f,c
 21508  012F66  503A               	movf	CANreceiveMessage@msg+1,w,c
 21509  012F68  22DA               	addwfc	fsr2h,f,c
 21510  012F6A  010F               	movlb	15	; () banked
 21511  012F6C  A752               	btfss	82,3,b	;volatile
 21512  012F6E  D002               	goto	i2u876_40
 21513  012F70  0E01               	movlw	1
 21514  012F72  D001               	goto	i2u876_46
 21515  012F74                     i2u876_40:
 21516  012F74  0E00               	movlw	0
 21517  012F76                     i2u876_46:
 21518  012F76  6EDF               	movwf	indf2,c
 21519                           
 21520                           ; BSR set to: 15
 21521                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 21522  012F78  010F               	movlb	15	; () banked
 21523  012F7A  B752               	btfsc	82,3,b	;volatile
 21524  012F7C  D044               	goto	i2l6943
 21525                           
 21526                           ; BSR set to: 15
 21527                           ;inc\CANlib.h: 559: {
 21528                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 21529  012F7E  CF51 F03B          	movff	3921,??_CANreceiveMessage	;volatile
 21530  012F82  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21531  012F84  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21532  012F86  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21533  012F88  0E03               	movlw	3
 21534  012F8A                     i2u878_45:
 21535  012F8A  90D8               	bcf	status,0,c
 21536  012F8C  363B               	rlcf	??_CANreceiveMessage,f,c
 21537  012F8E  363C               	rlcf	??_CANreceiveMessage+1,f,c
 21538  012F90  363D               	rlcf	??_CANreceiveMessage+2,f,c
 21539  012F92  363E               	rlcf	??_CANreceiveMessage+3,f,c
 21540  012F94  2EE8               	decfsz	wreg,f,c
 21541  012F96  D7F9               	goto	i2u878_45
 21542  012F98  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21543  012F9C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21544  012FA0  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 21545  012FA4  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21546  012FA8  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21547  012FAC  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21548                           
 21549                           ; BSR set to: 15
 21550                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 21551  012FB0  010F               	movlb	15	; () banked
 21552  012FB2  3952               	swapf	82,w,b	;volatile
 21553  012FB4  42E8               	rrncf	wreg,f,c
 21554  012FB6  0B07               	andlw	7
 21555  012FB8  0B07               	andlw	7
 21556  012FBA  6E44               	movwf	CANreceiveMessage@tamp,c
 21557                           
 21558                           ; BSR set to: 15
 21559                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 21560  012FBC  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21561  012FC0  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21562  012FC4  CFDE F03B          	movff	postinc2,??_CANreceiveMessage
 21563  012FC8  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+1
 21564  012FCC  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+2
 21565  012FD0  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+3
 21566  012FD4  5044               	movf	CANreceiveMessage@tamp,w,c
 21567  012FD6  243B               	addwf	??_CANreceiveMessage,w,c
 21568  012FD8  6E3F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21569  012FDA  0E00               	movlw	0
 21570  012FDC  203C               	addwfc	??_CANreceiveMessage+1,w,c
 21571  012FDE  6E40               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21572  012FE0  0E00               	movlw	0
 21573  012FE2  203D               	addwfc	??_CANreceiveMessage+2,w,c
 21574  012FE4  6E41               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21575  012FE6  0E00               	movlw	0
 21576  012FE8  203E               	addwfc	??_CANreceiveMessage+3,w,c
 21577  012FEA  6E42               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21578  012FEC  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21579  012FF0  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21580  012FF4  C03F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21581  012FF8  C040  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21582  012FFC  C041  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21583  013000  C042  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21584                           
 21585                           ;inc\CANlib.h: 563: }
 21586  013004  D08D               	goto	i2l6969
 21587  013006                     i2l6943:
 21588                           
 21589                           ; BSR set to: 15
 21590                           ;inc\CANlib.h: 564: else
 21591                           ;inc\CANlib.h: 565: {
 21592                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 21593  013006  CF54 F03B          	movff	3924,??_CANreceiveMessage	;volatile
 21594  01300A  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21595  01300C  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21596  01300E  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21597  013010  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21598  013014  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21599  013018  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 21600  01301C  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21601  013020  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21602  013024  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21603                           
 21604                           ; BSR set to: 15
 21605                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 21606  013028  CF53 F03B          	movff	3923,??_CANreceiveMessage	;volatile
 21607  01302C  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21608  01302E  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21609  013030  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21610  013032  C03D  F03E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21611  013036  C03C  F03D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21612  01303A  C03B  F03C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21613  01303E  6A3B               	clrf	??_CANreceiveMessage,c
 21614  013040  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21615  013044  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21616  013048  503B               	movf	??_CANreceiveMessage,w,c
 21617  01304A  26DE               	addwf	postinc2,f,c
 21618  01304C  503C               	movf	??_CANreceiveMessage+1,w,c
 21619  01304E  22DE               	addwfc	postinc2,f,c
 21620  013050  503D               	movf	??_CANreceiveMessage+2,w,c
 21621  013052  22DE               	addwfc	postinc2,f,c
 21622  013054  503E               	movf	??_CANreceiveMessage+3,w,c
 21623  013056  22DE               	addwfc	postinc2,f,c
 21624                           
 21625                           ; BSR set to: 15
 21626                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 21627  013058  010F               	movlb	15	; () banked
 21628  01305A  A152               	btfss	82,0,b	;volatile
 21629  01305C  D00C               	goto	i2l6951
 21630                           
 21631                           ; BSR set to: 15
 21632                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 21633  01305E  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21634  013062  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21635  013066  0E00               	movlw	0
 21636  013068  12DE               	iorwf	postinc2,f,c
 21637  01306A  0E00               	movlw	0
 21638  01306C  12DE               	iorwf	postinc2,f,c
 21639  01306E  0E01               	movlw	1
 21640  013070  12DE               	iorwf	postinc2,f,c
 21641  013072  0E00               	movlw	0
 21642  013074  12DE               	iorwf	postinc2,f,c
 21643  013076                     i2l6951:
 21644                           
 21645                           ; BSR set to: 15
 21646                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 21647  013076  010F               	movlb	15	; () banked
 21648  013078  A352               	btfss	82,1,b	;volatile
 21649  01307A  D00C               	goto	i2l6955
 21650                           
 21651                           ; BSR set to: 15
 21652                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 21653  01307C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21654  013080  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21655  013084  0E00               	movlw	0
 21656  013086  12DE               	iorwf	postinc2,f,c
 21657  013088  0E00               	movlw	0
 21658  01308A  12DE               	iorwf	postinc2,f,c
 21659  01308C  0E02               	movlw	2
 21660  01308E  12DE               	iorwf	postinc2,f,c
 21661  013090  0E00               	movlw	0
 21662  013092  12DE               	iorwf	postinc2,f,c
 21663  013094                     i2l6955:
 21664                           
 21665                           ; BSR set to: 15
 21666                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 21667  013094  010F               	movlb	15	; () banked
 21668  013096  AB52               	btfss	82,5,b	;volatile
 21669  013098  D00C               	goto	i2l6959
 21670                           
 21671                           ; BSR set to: 15
 21672                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21673  01309A  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21674  01309E  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21675  0130A2  0E00               	movlw	0
 21676  0130A4  12DE               	iorwf	postinc2,f,c
 21677  0130A6  0E00               	movlw	0
 21678  0130A8  12DE               	iorwf	postinc2,f,c
 21679  0130AA  0E04               	movlw	4
 21680  0130AC  12DE               	iorwf	postinc2,f,c
 21681  0130AE  0E00               	movlw	0
 21682  0130B0  12DE               	iorwf	postinc2,f,c
 21683  0130B2                     i2l6959:
 21684                           
 21685                           ; BSR set to: 15
 21686                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21687  0130B2  010F               	movlb	15	; () banked
 21688  0130B4  AD52               	btfss	82,6,b	;volatile
 21689  0130B6  D00C               	goto	i2l6963
 21690                           
 21691                           ; BSR set to: 15
 21692                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21693  0130B8  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21694  0130BC  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21695  0130C0  0E00               	movlw	0
 21696  0130C2  12DE               	iorwf	postinc2,f,c
 21697  0130C4  0E00               	movlw	0
 21698  0130C6  12DE               	iorwf	postinc2,f,c
 21699  0130C8  0E08               	movlw	8
 21700  0130CA  12DE               	iorwf	postinc2,f,c
 21701  0130CC  0E00               	movlw	0
 21702  0130CE  12DE               	iorwf	postinc2,f,c
 21703  0130D0                     i2l6963:
 21704                           
 21705                           ; BSR set to: 15
 21706                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21707  0130D0  010F               	movlb	15	; () banked
 21708  0130D2  AF52               	btfss	82,7,b	;volatile
 21709  0130D4  D00C               	goto	i2l6967
 21710                           
 21711                           ; BSR set to: 15
 21712                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21713  0130D6  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21714  0130DA  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21715  0130DE  0E00               	movlw	0
 21716  0130E0  12DE               	iorwf	postinc2,f,c
 21717  0130E2  0E00               	movlw	0
 21718  0130E4  12DE               	iorwf	postinc2,f,c
 21719  0130E6  0E10               	movlw	16
 21720  0130E8  12DE               	iorwf	postinc2,f,c
 21721  0130EA  0E00               	movlw	0
 21722  0130EC  12DE               	iorwf	postinc2,f,c
 21723  0130EE                     i2l6967:
 21724                           
 21725                           ; BSR set to: 15
 21726                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21727  0130EE  CF51 F03B          	movff	3921,??_CANreceiveMessage	;volatile
 21728  0130F2  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21729  0130F4  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21730  0130F6  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21731  0130F8  0E15               	movlw	21
 21732  0130FA                     i2u884_45:
 21733  0130FA  90D8               	bcf	status,0,c
 21734  0130FC  363B               	rlcf	??_CANreceiveMessage,f,c
 21735  0130FE  363C               	rlcf	??_CANreceiveMessage+1,f,c
 21736  013100  363D               	rlcf	??_CANreceiveMessage+2,f,c
 21737  013102  363E               	rlcf	??_CANreceiveMessage+3,f,c
 21738  013104  2EE8               	decfsz	wreg,f,c
 21739  013106  D7F9               	goto	i2u884_45
 21740  013108  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21741  01310C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21742  013110  503B               	movf	??_CANreceiveMessage,w,c
 21743  013112  12DE               	iorwf	postinc2,f,c
 21744  013114  503C               	movf	??_CANreceiveMessage+1,w,c
 21745  013116  12DE               	iorwf	postinc2,f,c
 21746  013118  503D               	movf	??_CANreceiveMessage+2,w,c
 21747  01311A  12DE               	iorwf	postinc2,f,c
 21748  01311C  503E               	movf	??_CANreceiveMessage+3,w,c
 21749  01311E  12DE               	iorwf	postinc2,f,c
 21750  013120                     i2l6969:
 21751                           
 21752                           ; BSR set to: 15
 21753                           ;inc\CANlib.h: 581: }
 21754                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21755  013120  010F               	movlb	15	; () banked
 21756  013122  9F50               	bcf	80,7,b	;volatile
 21757                           
 21758                           ; BSR set to: 15
 21759                           ;inc\CANlib.h: 584: return (error);
 21760                           ;	Return value of _CANreceiveMessage is never used
 21761  013124  0012               	return	
 21762  013126                     i2l428:
 21763                           
 21764                           ; BSR set to: 15
 21765                           ;inc\CANlib.h: 585: }
 21766                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21767  013126  AE60               	btfss	3936,7,c	;volatile
 21768  013128  0012               	return	
 21769                           
 21770                           ; BSR set to: 15
 21771                           ;inc\CANlib.h: 588: {
 21772                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21773  01312A  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21774  01312E  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21775  013132  6ADE               	clrf	postinc2,c
 21776  013134  6ADE               	clrf	postinc2,c
 21777  013136  6ADE               	clrf	postinc2,c
 21778  013138  6ADD               	clrf	postdec2,c
 21779                           
 21780                           ; BSR set to: 15
 21781                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21782  01313A  EE20 F004          	lfsr	2,4
 21783  01313E  5039               	movf	CANreceiveMessage@msg,w,c
 21784  013140  26D9               	addwf	fsr2l,f,c
 21785  013142  503A               	movf	CANreceiveMessage@msg+1,w,c
 21786  013144  22DA               	addwfc	fsr2h,f,c
 21787  013146  CF66 FFDF          	movff	3942,indf2	;volatile
 21788                           
 21789                           ; BSR set to: 15
 21790                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21791  01314A  EE20 F005          	lfsr	2,5
 21792  01314E  5039               	movf	CANreceiveMessage@msg,w,c
 21793  013150  26D9               	addwf	fsr2l,f,c
 21794  013152  503A               	movf	CANreceiveMessage@msg+1,w,c
 21795  013154  22DA               	addwfc	fsr2h,f,c
 21796  013156  CF67 FFDF          	movff	3943,indf2	;volatile
 21797                           
 21798                           ; BSR set to: 15
 21799                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21800  01315A  EE20 F006          	lfsr	2,6
 21801  01315E  5039               	movf	CANreceiveMessage@msg,w,c
 21802  013160  26D9               	addwf	fsr2l,f,c
 21803  013162  503A               	movf	CANreceiveMessage@msg+1,w,c
 21804  013164  22DA               	addwfc	fsr2h,f,c
 21805  013166  CF68 FFDF          	movff	3944,indf2	;volatile
 21806                           
 21807                           ; BSR set to: 15
 21808                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21809  01316A  EE20 F007          	lfsr	2,7
 21810  01316E  5039               	movf	CANreceiveMessage@msg,w,c
 21811  013170  26D9               	addwf	fsr2l,f,c
 21812  013172  503A               	movf	CANreceiveMessage@msg+1,w,c
 21813  013174  22DA               	addwfc	fsr2h,f,c
 21814  013176  CF69 FFDF          	movff	3945,indf2	;volatile
 21815                           
 21816                           ; BSR set to: 15
 21817                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21818  01317A  EE20 F008          	lfsr	2,8
 21819  01317E  5039               	movf	CANreceiveMessage@msg,w,c
 21820  013180  26D9               	addwf	fsr2l,f,c
 21821  013182  503A               	movf	CANreceiveMessage@msg+1,w,c
 21822  013184  22DA               	addwfc	fsr2h,f,c
 21823  013186  CF6A FFDF          	movff	3946,indf2	;volatile
 21824                           
 21825                           ; BSR set to: 15
 21826                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21827  01318A  EE20 F009          	lfsr	2,9
 21828  01318E  5039               	movf	CANreceiveMessage@msg,w,c
 21829  013190  26D9               	addwf	fsr2l,f,c
 21830  013192  503A               	movf	CANreceiveMessage@msg+1,w,c
 21831  013194  22DA               	addwfc	fsr2h,f,c
 21832  013196  CF6B FFDF          	movff	3947,indf2	;volatile
 21833                           
 21834                           ; BSR set to: 15
 21835                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21836  01319A  EE20 F00A          	lfsr	2,10
 21837  01319E  5039               	movf	CANreceiveMessage@msg,w,c
 21838  0131A0  26D9               	addwf	fsr2l,f,c
 21839  0131A2  503A               	movf	CANreceiveMessage@msg+1,w,c
 21840  0131A4  22DA               	addwfc	fsr2h,f,c
 21841  0131A6  CF6C FFDF          	movff	3948,indf2	;volatile
 21842                           
 21843                           ; BSR set to: 15
 21844                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21845  0131AA  EE20 F00B          	lfsr	2,11
 21846  0131AE  5039               	movf	CANreceiveMessage@msg,w,c
 21847  0131B0  26D9               	addwf	fsr2l,f,c
 21848  0131B2  503A               	movf	CANreceiveMessage@msg+1,w,c
 21849  0131B4  22DA               	addwfc	fsr2h,f,c
 21850  0131B6  CF6D FFDF          	movff	3949,indf2	;volatile
 21851                           
 21852                           ; BSR set to: 15
 21853                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21854  0131BA  EE20 F00E          	lfsr	2,14
 21855  0131BE  5039               	movf	CANreceiveMessage@msg,w,c
 21856  0131C0  26D9               	addwf	fsr2l,f,c
 21857  0131C2  503A               	movf	CANreceiveMessage@msg+1,w,c
 21858  0131C4  22DA               	addwfc	fsr2h,f,c
 21859  0131C6  AC65               	btfss	3941,6,c	;volatile
 21860  0131C8  D002               	goto	i2u886_40
 21861  0131CA  0E01               	movlw	1
 21862  0131CC  D001               	goto	i2u886_46
 21863  0131CE                     i2u886_40:
 21864  0131CE  0E00               	movlw	0
 21865  0131D0                     i2u886_46:
 21866  0131D0  6EDF               	movwf	indf2,c
 21867                           
 21868                           ; BSR set to: 15
 21869                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21870  0131D2  EE20 F00D          	lfsr	2,13
 21871  0131D6  5039               	movf	CANreceiveMessage@msg,w,c
 21872  0131D8  26D9               	addwf	fsr2l,f,c
 21873  0131DA  503A               	movf	CANreceiveMessage@msg+1,w,c
 21874  0131DC  22DA               	addwfc	fsr2h,f,c
 21875  0131DE  5065               	movf	3941,w,c	;volatile
 21876  0131E0  0B0F               	andlw	15
 21877  0131E2  6EDF               	movwf	indf2,c
 21878                           
 21879                           ; BSR set to: 15
 21880                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21881  0131E4  EE20 F00C          	lfsr	2,12
 21882  0131E8  5039               	movf	CANreceiveMessage@msg,w,c
 21883  0131EA  26D9               	addwf	fsr2l,f,c
 21884  0131EC  503A               	movf	CANreceiveMessage@msg+1,w,c
 21885  0131EE  22DA               	addwfc	fsr2h,f,c
 21886  0131F0  A662               	btfss	3938,3,c	;volatile
 21887  0131F2  D002               	goto	i2u887_40
 21888  0131F4  0E01               	movlw	1
 21889  0131F6  D001               	goto	i2u887_46
 21890  0131F8                     i2u887_40:
 21891  0131F8  0E00               	movlw	0
 21892  0131FA                     i2u887_46:
 21893  0131FA  6EDF               	movwf	indf2,c
 21894                           
 21895                           ; BSR set to: 15
 21896                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21897  0131FC  B662               	btfsc	3938,3,c	;volatile
 21898  0131FE  D043               	goto	i2l7005
 21899                           
 21900                           ; BSR set to: 15
 21901                           ;inc\CANlib.h: 606: {
 21902                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21903  013200  CF61 F03B          	movff	3937,??_CANreceiveMessage	;volatile
 21904  013204  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21905  013206  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21906  013208  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21907  01320A  0E03               	movlw	3
 21908  01320C                     i2u889_45:
 21909  01320C  90D8               	bcf	status,0,c
 21910  01320E  363B               	rlcf	??_CANreceiveMessage,f,c
 21911  013210  363C               	rlcf	??_CANreceiveMessage+1,f,c
 21912  013212  363D               	rlcf	??_CANreceiveMessage+2,f,c
 21913  013214  363E               	rlcf	??_CANreceiveMessage+3,f,c
 21914  013216  2EE8               	decfsz	wreg,f,c
 21915  013218  D7F9               	goto	i2u889_45
 21916  01321A  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21917  01321E  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21918  013222  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 21919  013226  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21920  01322A  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21921  01322E  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21922                           
 21923                           ; BSR set to: 15
 21924                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21925  013232  3862               	swapf	3938,w,c	;volatile
 21926  013234  42E8               	rrncf	wreg,f,c
 21927  013236  0B07               	andlw	7
 21928  013238  0B07               	andlw	7
 21929  01323A  6E44               	movwf	CANreceiveMessage@tamp,c
 21930                           
 21931                           ; BSR set to: 15
 21932                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21933  01323C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21934  013240  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21935  013244  CFDE F03B          	movff	postinc2,??_CANreceiveMessage
 21936  013248  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+1
 21937  01324C  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+2
 21938  013250  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+3
 21939  013254  5044               	movf	CANreceiveMessage@tamp,w,c
 21940  013256  243B               	addwf	??_CANreceiveMessage,w,c
 21941  013258  6E3F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21942  01325A  0E00               	movlw	0
 21943  01325C  203C               	addwfc	??_CANreceiveMessage+1,w,c
 21944  01325E  6E40               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21945  013260  0E00               	movlw	0
 21946  013262  203D               	addwfc	??_CANreceiveMessage+2,w,c
 21947  013264  6E41               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21948  013266  0E00               	movlw	0
 21949  013268  203E               	addwfc	??_CANreceiveMessage+3,w,c
 21950  01326A  6E42               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21951  01326C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21952  013270  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21953  013274  C03F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21954  013278  C040  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21955  01327C  C041  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21956  013280  C042  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21957                           
 21958                           ;inc\CANlib.h: 610: }
 21959  013284  D088               	goto	i2l7031
 21960  013286                     i2l7005:
 21961                           
 21962                           ; BSR set to: 15
 21963                           ;inc\CANlib.h: 611: else
 21964                           ;inc\CANlib.h: 612: {
 21965                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21966  013286  CF64 F03B          	movff	3940,??_CANreceiveMessage	;volatile
 21967  01328A  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21968  01328C  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21969  01328E  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21970  013290  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21971  013294  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21972  013298  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 21973  01329C  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21974  0132A0  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21975  0132A4  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21976                           
 21977                           ; BSR set to: 15
 21978                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21979  0132A8  CF63 F03B          	movff	3939,??_CANreceiveMessage	;volatile
 21980  0132AC  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21981  0132AE  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21982  0132B0  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21983  0132B2  C03D  F03E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21984  0132B6  C03C  F03D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21985  0132BA  C03B  F03C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21986  0132BE  6A3B               	clrf	??_CANreceiveMessage,c
 21987  0132C0  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21988  0132C4  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21989  0132C8  503B               	movf	??_CANreceiveMessage,w,c
 21990  0132CA  26DE               	addwf	postinc2,f,c
 21991  0132CC  503C               	movf	??_CANreceiveMessage+1,w,c
 21992  0132CE  22DE               	addwfc	postinc2,f,c
 21993  0132D0  503D               	movf	??_CANreceiveMessage+2,w,c
 21994  0132D2  22DE               	addwfc	postinc2,f,c
 21995  0132D4  503E               	movf	??_CANreceiveMessage+3,w,c
 21996  0132D6  22DE               	addwfc	postinc2,f,c
 21997                           
 21998                           ; BSR set to: 15
 21999                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 22000  0132D8  A062               	btfss	3938,0,c	;volatile
 22001  0132DA  D00C               	goto	i2l7013
 22002                           
 22003                           ; BSR set to: 15
 22004                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 22005  0132DC  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22006  0132E0  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22007  0132E4  0E00               	movlw	0
 22008  0132E6  12DE               	iorwf	postinc2,f,c
 22009  0132E8  0E00               	movlw	0
 22010  0132EA  12DE               	iorwf	postinc2,f,c
 22011  0132EC  0E01               	movlw	1
 22012  0132EE  12DE               	iorwf	postinc2,f,c
 22013  0132F0  0E00               	movlw	0
 22014  0132F2  12DE               	iorwf	postinc2,f,c
 22015  0132F4                     i2l7013:
 22016                           
 22017                           ; BSR set to: 15
 22018                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 22019  0132F4  A262               	btfss	3938,1,c	;volatile
 22020  0132F6  D00C               	goto	i2l7017
 22021                           
 22022                           ; BSR set to: 15
 22023                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 22024  0132F8  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22025  0132FC  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22026  013300  0E00               	movlw	0
 22027  013302  12DE               	iorwf	postinc2,f,c
 22028  013304  0E00               	movlw	0
 22029  013306  12DE               	iorwf	postinc2,f,c
 22030  013308  0E02               	movlw	2
 22031  01330A  12DE               	iorwf	postinc2,f,c
 22032  01330C  0E00               	movlw	0
 22033  01330E  12DE               	iorwf	postinc2,f,c
 22034  013310                     i2l7017:
 22035                           
 22036                           ; BSR set to: 15
 22037                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 22038  013310  AA62               	btfss	3938,5,c	;volatile
 22039  013312  D00C               	goto	i2l7021
 22040                           
 22041                           ; BSR set to: 15
 22042                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 22043  013314  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22044  013318  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22045  01331C  0E00               	movlw	0
 22046  01331E  12DE               	iorwf	postinc2,f,c
 22047  013320  0E00               	movlw	0
 22048  013322  12DE               	iorwf	postinc2,f,c
 22049  013324  0E04               	movlw	4
 22050  013326  12DE               	iorwf	postinc2,f,c
 22051  013328  0E00               	movlw	0
 22052  01332A  12DE               	iorwf	postinc2,f,c
 22053  01332C                     i2l7021:
 22054                           
 22055                           ; BSR set to: 15
 22056                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 22057  01332C  AC62               	btfss	3938,6,c	;volatile
 22058  01332E  D00C               	goto	i2l7025
 22059                           
 22060                           ; BSR set to: 15
 22061                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 22062  013330  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22063  013334  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22064  013338  0E00               	movlw	0
 22065  01333A  12DE               	iorwf	postinc2,f,c
 22066  01333C  0E00               	movlw	0
 22067  01333E  12DE               	iorwf	postinc2,f,c
 22068  013340  0E08               	movlw	8
 22069  013342  12DE               	iorwf	postinc2,f,c
 22070  013344  0E00               	movlw	0
 22071  013346  12DE               	iorwf	postinc2,f,c
 22072  013348                     i2l7025:
 22073                           
 22074                           ; BSR set to: 15
 22075                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 22076  013348  AE62               	btfss	3938,7,c	;volatile
 22077  01334A  D00C               	goto	i2l7029
 22078                           
 22079                           ; BSR set to: 15
 22080                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 22081  01334C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22082  013350  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22083  013354  0E00               	movlw	0
 22084  013356  12DE               	iorwf	postinc2,f,c
 22085  013358  0E00               	movlw	0
 22086  01335A  12DE               	iorwf	postinc2,f,c
 22087  01335C  0E10               	movlw	16
 22088  01335E  12DE               	iorwf	postinc2,f,c
 22089  013360  0E00               	movlw	0
 22090  013362  12DE               	iorwf	postinc2,f,c
 22091  013364                     i2l7029:
 22092                           
 22093                           ; BSR set to: 15
 22094                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 22095  013364  CF61 F03B          	movff	3937,??_CANreceiveMessage	;volatile
 22096  013368  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22097  01336A  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22098  01336C  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22099  01336E  0E15               	movlw	21
 22100  013370                     i2u895_45:
 22101  013370  90D8               	bcf	status,0,c
 22102  013372  363B               	rlcf	??_CANreceiveMessage,f,c
 22103  013374  363C               	rlcf	??_CANreceiveMessage+1,f,c
 22104  013376  363D               	rlcf	??_CANreceiveMessage+2,f,c
 22105  013378  363E               	rlcf	??_CANreceiveMessage+3,f,c
 22106  01337A  2EE8               	decfsz	wreg,f,c
 22107  01337C  D7F9               	goto	i2u895_45
 22108  01337E  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22109  013382  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22110  013386  503B               	movf	??_CANreceiveMessage,w,c
 22111  013388  12DE               	iorwf	postinc2,f,c
 22112  01338A  503C               	movf	??_CANreceiveMessage+1,w,c
 22113  01338C  12DE               	iorwf	postinc2,f,c
 22114  01338E  503D               	movf	??_CANreceiveMessage+2,w,c
 22115  013390  12DE               	iorwf	postinc2,f,c
 22116  013392  503E               	movf	??_CANreceiveMessage+3,w,c
 22117  013394  12DE               	iorwf	postinc2,f,c
 22118  013396                     i2l7031:
 22119                           
 22120                           ; BSR set to: 15
 22121                           ;inc\CANlib.h: 629: }
 22122                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 22123  013396  9E60               	bcf	3936,7,c	;volatile
 22124                           
 22125                           ; BSR set to: 15
 22126                           ;inc\CANlib.h: 632: return (error);
 22127                           ;	Return value of _CANreceiveMessage is never used
 22128  013398  0012               	return	
 22129  01339A                     __end_of_CANreceiveMessage:
 22130                           	opt stack 0
 22131                           pclatu	equ	0xFFB
 22132                           pclath	equ	0xFFA
 22133                           tblptru	equ	0xFF8
 22134                           tblptrh	equ	0xFF7
 22135                           tblptrl	equ	0xFF6
 22136                           tablat	equ	0xFF5
 22137                           prodh	equ	0xFF4
 22138                           prodl	equ	0xFF3
 22139                           intcon	equ	0xFF2
 22140                           postinc0	equ	0xFEE
 22141                           fsr0h	equ	0xFEA
 22142                           fsr0l	equ	0xFE9
 22143                           wreg	equ	0xFE8
 22144                           indf1	equ	0xFE7
 22145                           plusw1	equ	0xFE3
 22146                           fsr1h	equ	0xFE2
 22147                           fsr1l	equ	0xFE1
 22148                           bsr	equ	0xFE0
 22149                           indf2	equ	0xFDF
 22150                           postinc2	equ	0xFDE
 22151                           postdec2	equ	0xFDD
 22152                           plusw2	equ	0xFDB
 22153                           fsr2h	equ	0xFDA
 22154                           fsr2l	equ	0xFD9
 22155                           status	equ	0xFD8
 22156                           
 22157 ;; *************** function _CANisRxReady *****************
 22158 ;; Defined at:
 22159 ;;		line 1163 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22160 ;; Parameters:    Size  Location     Type
 22161 ;;		None
 22162 ;; Auto vars:     Size  Location     Type
 22163 ;;		None
 22164 ;; Return value:  Size  Location     Type
 22165 ;;                  1    wreg      unsigned char 
 22166 ;; Registers used:
 22167 ;;		wreg, status,2
 22168 ;; Tracked objects:
 22169 ;;		On entry : 0/0
 22170 ;;		On exit  : 0/0
 22171 ;;		Unchanged: 0/0
 22172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22177 ;;Total ram usage:        1 bytes
 22178 ;; Hardware stack levels used:    1
 22179 ;; This function calls:
 22180 ;;		Nothing
 22181 ;; This function is called by:
 22182 ;;		_ISR_alta
 22183 ;; This function uses a non-reentrant model
 22184 ;;
 22185                           
 22186                           	psect	text62
 22187  0165A2                     __ptext62:
 22188                           	opt stack 0
 22189  0165A2                     _CANisRxReady:
 22190                           	opt stack 20
 22191                           
 22192                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 22193                           
 22194                           ; BSR set to: 15
 22195                           ;incstack = 0
 22196  0165A2  0E01               	movlw	1
 22197  0165A4  6E39               	movwf	_CANisRxReady$3117,c
 22198  0165A6  BE60               	btfsc	3936,7,c	;volatile
 22199  0165A8  D005               	goto	i2l579
 22200  0165AA  010F               	movlb	15	; () banked
 22201  0165AC  BF50               	btfsc	80,7,b	;volatile
 22202  0165AE  D002               	goto	i2l579
 22203                           
 22204                           ; BSR set to: 15
 22205  0165B0  0E00               	movlw	0
 22206  0165B2  6E39               	movwf	_CANisRxReady$3117,c
 22207  0165B4                     i2l579:
 22208  0165B4  5039               	movf	_CANisRxReady$3117,w,c
 22209  0165B6  0012               	return	
 22210  0165B8                     __end_of_CANisRxReady:
 22211                           	opt stack 0
 22212                           pclatu	equ	0xFFB
 22213                           pclath	equ	0xFFA
 22214                           tblptru	equ	0xFF8
 22215                           tblptrh	equ	0xFF7
 22216                           tblptrl	equ	0xFF6
 22217                           tablat	equ	0xFF5
 22218                           prodh	equ	0xFF4
 22219                           prodl	equ	0xFF3
 22220                           intcon	equ	0xFF2
 22221                           postinc0	equ	0xFEE
 22222                           fsr0h	equ	0xFEA
 22223                           fsr0l	equ	0xFE9
 22224                           wreg	equ	0xFE8
 22225                           indf1	equ	0xFE7
 22226                           plusw1	equ	0xFE3
 22227                           fsr1h	equ	0xFE2
 22228                           fsr1l	equ	0xFE1
 22229                           bsr	equ	0xFE0
 22230                           indf2	equ	0xFDF
 22231                           postinc2	equ	0xFDE
 22232                           postdec2	equ	0xFDD
 22233                           plusw2	equ	0xFDB
 22234                           fsr2h	equ	0xFDA
 22235                           fsr2l	equ	0xFD9
 22236                           status	equ	0xFD8
 22237                           pclatu	equ	0xFFB
 22238                           pclath	equ	0xFFA
 22239                           tblptru	equ	0xFF8
 22240                           tblptrh	equ	0xFF7
 22241                           tblptrl	equ	0xFF6
 22242                           tablat	equ	0xFF5
 22243                           prodh	equ	0xFF4
 22244                           prodl	equ	0xFF3
 22245                           intcon	equ	0xFF2
 22246                           postinc0	equ	0xFEE
 22247                           fsr0h	equ	0xFEA
 22248                           fsr0l	equ	0xFE9
 22249                           wreg	equ	0xFE8
 22250                           indf1	equ	0xFE7
 22251                           plusw1	equ	0xFE3
 22252                           fsr1h	equ	0xFE2
 22253                           fsr1l	equ	0xFE1
 22254                           bsr	equ	0xFE0
 22255                           indf2	equ	0xFDF
 22256                           postinc2	equ	0xFDE
 22257                           postdec2	equ	0xFDD
 22258                           plusw2	equ	0xFDB
 22259                           fsr2h	equ	0xFDA
 22260                           fsr2l	equ	0xFD9
 22261                           status	equ	0xFD8
 22262                           
 22263                           	psect	rparam
 22264  0000                     pclatu	equ	0xFFB
 22265                           pclath	equ	0xFFA
 22266                           tblptru	equ	0xFF8
 22267                           tblptrh	equ	0xFF7
 22268                           tblptrl	equ	0xFF6
 22269                           tablat	equ	0xFF5
 22270                           prodh	equ	0xFF4
 22271                           prodl	equ	0xFF3
 22272                           intcon	equ	0xFF2
 22273                           postinc0	equ	0xFEE
 22274                           fsr0h	equ	0xFEA
 22275                           fsr0l	equ	0xFE9
 22276                           wreg	equ	0xFE8
 22277                           indf1	equ	0xFE7
 22278                           plusw1	equ	0xFE3
 22279                           fsr1h	equ	0xFE2
 22280                           fsr1l	equ	0xFE1
 22281                           bsr	equ	0xFE0
 22282                           indf2	equ	0xFDF
 22283                           postinc2	equ	0xFDE
 22284                           postdec2	equ	0xFDD
 22285                           plusw2	equ	0xFDB
 22286                           fsr2h	equ	0xFDA
 22287                           fsr2l	equ	0xFD9
 22288                           status	equ	0xFD8
 22289                           
 22290                           	psect	temp
 22291  00004D                     btemp:
 22292                           	opt stack 0
 22293  00004D                     	ds	1
 22294  0000                     int$flags	set	btemp
 22295                           pclatu	equ	0xFFB
 22296                           pclath	equ	0xFFA
 22297                           tblptru	equ	0xFF8
 22298                           tblptrh	equ	0xFF7
 22299                           tblptrl	equ	0xFF6
 22300                           tablat	equ	0xFF5
 22301                           prodh	equ	0xFF4
 22302                           prodl	equ	0xFF3
 22303                           intcon	equ	0xFF2
 22304                           postinc0	equ	0xFEE
 22305                           fsr0h	equ	0xFEA
 22306                           fsr0l	equ	0xFE9
 22307                           wreg	equ	0xFE8
 22308                           indf1	equ	0xFE7
 22309                           plusw1	equ	0xFE3
 22310                           fsr1h	equ	0xFE2
 22311                           fsr1l	equ	0xFE1
 22312                           bsr	equ	0xFE0
 22313                           indf2	equ	0xFDF
 22314                           postinc2	equ	0xFDE
 22315                           postdec2	equ	0xFDD
 22316                           plusw2	equ	0xFDB
 22317                           fsr2h	equ	0xFDA
 22318                           fsr2l	equ	0xFD9
 22319                           status	equ	0xFD8


Data Sizes:
    Strings     464
    Constant    144
    Data        1
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      76
    BANK0           160    108     142
    BANK1           256     33     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), 
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  551371
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             30 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  144538
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41008
                                             98 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             22 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             16 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             16 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             68 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             55 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             16 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             30 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             40 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             32 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             23 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             16 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             31 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             28 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   11983
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             28 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             30 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             28 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             28 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             24 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             22 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4363
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4339
                                             16 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      8E       5       88.8%
BITCOMRAM           5E      0       3       0        3.2%
COMRAM              5E     22      4C       1       80.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148      20        0.0%
DATA                 0      0     148       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jun 01 15:10:01 2016

                     ___fldiv@aexp 0096                       ___fldiv@bexp 0095  
                                _x 0265                                  _y 0266  
                                _z 0267          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 0028  
                     ___fldiv@sign 008A                       ___awdiv@sign 007B  
                               _id 000C                                 bsr 000FE0  
              ___wmul@multiplicand 0072                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       ?_LCD_Parking 0028  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                              l400 1E7E                                l401 1E88  
                              l402 1E92                                l411 2076  
                              l403 1E9C                                l420 2230  
                              l412 207A                                l500 064A  
                              l421 2234                                l413 2172  
                              l422 2240                                l414 2102  
                              l406 1FAC                                l510 075A  
                              l415 210C                                l407 1FB0  
                              l511 0766                                l503 0726  
                              l416 2116                                l408 1FBC  
                              l520 0872                                l504 072A  
                              l417 2120                                l521 0876  
                              l505 0736                                l530 0982  
                              l522 0882                                l514 0842  
                              l506 073A                                l450 42A2  
                              l531 098E                                l515 0846  
                              l507 0746                                l451 42A6  
                              l540 0A9A                                l532 0992  
                              l516 0852                                l508 074A  
                              l452 42B2                                l381 1DDC  
                              l541 0A9E                                l533 099E  
                              l525 095E                                l517 0856  
                              l509 0756                                l461 43BA  
                              l453 42B6                                l382 1B6E  
                              l542 0AAA                                l526 0962  
                              l518 0862                                l462 43BE  
                              l454 42C2                                l391 1D28  
                              l383 1B72                                l543 0AAE  
                              l527 096E                                l519 0866  
                              l463 43CA                                l455 42C6  
                              l392 1D2C                                l384 1C6A  
                              l544 0ABA                                l536 0A7A  
                              l528 0972                                l464 43CE  
                              l456 42D2                                l376 4C3C  
                              l393 1D38                                l385 1BFA  
                              l537 0A7E                                l529 097E  
                              l481 04F0                                l465 43DA  
                              l457 42D6                                l377 4C46  
                              l386 1C04                                l538 0A8A  
                              l482 04F4                                l466 43DE  
                              l458 42E2                                l387 1C0E  
                              l539 0A8E                                l483 0500  
                              l467 43EA                                l396 2060  
                              l388 1C18                                l492 060A  
                              l484 0504                                l468 43EE  
                              l812 150C                                l397 1DF2  
                              l493 060E                                l485 0510  
                              l469 43FA                                l574 64D6  
                              l398 1DF6                                l494 061A  
                              l486 0514                                l830 1602  
                              l399 1EEE                                l495 061E  
                              l487 0520                                l823 1542  
                              l496 062A                                l488 0524  
                              l921 6524                                l497 062E  
                              l489 0530                                l825 16D2  
                              l817 1518                                l498 063A  
                              l818 1544                                l587 6354  
                              l499 063E                                l940 6188  
                              l853 189C                                l942 618A  
                              l846 1894                                l838 16A8  
                              l935 655C                                l928 6578  
                              l864 19F6                                l866 19F2  
             ??_PWR_Button_Polling 0070                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007C  
                              _dir 00E8                                _msg 010A  
                              _str 0119                       ___awmod@sign 0075  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 008B                       ___flmul@bexp 0090  
                     ___flmul@sign 008A                       ___flmul@temp 0095  
                     ___flmul@prod 0091                    __end_of_LCD_Gap 604E  
                     __CFG_LVP$OFF 000000                    __end_of_LCD_End 6116  
           __size_of_LCD_goto_line 00EC                       ___fltol@exp1 00C1  
                     __CFG_WDT$OFF 000000                               l1043 10FA  
                             l1514 5EA6                               l1435 5A1E  
                             l1611 3F16                               l1524 616E  
                             l1620 3F4E                               l1268 5558  
                             l1372 5240                               l1461 5AF6  
                             l1365 517C                               l1622 3FBC  
                             l1614 3EBE                               l1278 5392  
                             l1366 51C0                               l1471 5D90  
                             l1641 38F6                               l1650 3C00  
                             l1555 357A                               l1572 36EE  
                             l1556 356E                               l1581 3782  
                             l1557 353A                               l1670 4AA8  
                             l1663 49FC                               l1648 3B92  
                             l1658 3CA4                               l1677 4B04  
                             l1678 4B1C                               l6223 4C52  
                             l5345 5996                               l5441 432C  
                             l5409 4216                               l6225 4C96  
                             l6217 4C34                               l5355 59D8  
                             l8011 347E                               l8003 3454  
                             l5435 42E6                               l6219 4C4A  
                             l4901 612A                               l5509 0176  
                             l6415 212A                               l6263 1C22  
                             l7135 5B08                               l4903 6136  
                             l8111 3736                               l5375 6594  
                             l5711 0886                               l5615 057A  
                             l5527 0230                               l6441 2244  
                             l7145 5B50                               l4905 613C  
                             l8105 3720                               l8121 3756  
                             l8041 34BA                               l8201 390A  
                             l5609 0534                               l5545 02EA  
                             l5393 4160                               l6435 2224  
                             l6339 1EA6                               l6283 1D1C  
                             l7155 617E                               l8131 377C  
                             l8115 3742                               l8123 375C  
                             l9011 1292                               l5643 064E  
                             l5563 03A4                               l5491 00BE  
                             l5467 43FE                               l6365 1FC0  
                             l7149 5B88                               l4909 6160  
                             l8141 37D8                               l8053 354E  
                             l8205 391E                               l5717 08CC  
                             l5581 045E                               l6359 1FA0  
                             l5823 628A                               l8055 3554  
                             l8303 58EC                               l5751 09E8  
                             l6289 1D3C                               l8401 64A8  
                             l4881 5E56                               l8161 3830  
                             l8153 3818                               l8145 37EA  
                             l9033 1338                               l9025 12E0  
                             l9017 12AC                               l9009 1284  
                             l9041 138C                               l5745 09A2  
                             l5649 0694                               l7179 5F0E  
                             l4883 5E62                               l6811 3DE6  
                             l8155 381C                               l8083 35EC  
                             l8059 355E                               l8315 5920  
                             l8331 5970                               l8171 3860  
                             l9019 12BA                               l5683 07B0  
                             l4893 5E98                               l4885 5E68  
                             l8149 380C                               l8077 35DC  
                             l8069 359E                               l8317 592C  
                             l8309 5902                               l8253 3BA6  
                             l8181 389C                               l9037 1364  
                             l9029 1308                               l5677 076A  
                             l8079 35E2                               l8087 35FE  
                             l8335 5984                               l8327 5962  
                             l8319 5932                               l8351 5C92  
                             l8263 3BFA                               l8247 3B7C  
                             l9039 136A                               l8097 36CE  
                             l8521 51F6                               l8273 3C50  
                             l8177 3884                               l8425 46E4  
                             l8417 45EC                               l9153 4F06  
                             l6843 3F12                               l6819 3E14  
                             l8531 5226                               l8371 5CFE  
                             l8363 5CDC                               l8355 5CA6  
                             l8347 5C82                               l8195 38DE  
                             l8179 388A                               l5779 0ABE  
                             l9403 152E                               l8381 620A  
                             l6837 3ECA                               l6829 3E92  
                             l8613 5340                               l8605 52A0  
                             l8701 5D24                               l8541 5408  
                             l8533 5236                               l8525 520A  
                             l8357 5CB2                               l8277 3C76  
                             l8197 38E4                               l8189 38BA  
                             l8445 2BD6                               l9181 5022  
                             l8391 5880                               l6855 3F62  
                             l6775 3D2A                               l8703 5D34  
                             l8359 5CB8                               l8367 5CEA  
                             l8287 3CC4                               l8279 3C8A  
                             l8463 2E5C                               l8439 2B04  
                             l9191 5062                               l9511 1954  
                             l9407 153E                               l8385 57EA  
                             l8393 58B2                               l8377 61D8  
                             l6881 404E                               l6865 3FB6  
                             l6849 3F38                               l6769 3D06  
                             l8609 52EE                               l8705 5D3A  
                             l8561 5482                               l8289 3CCE  
                             l8457 2D8A                               l8449 2C08  
                             l9193 5072                               l9521 197C  
                             l9505 193C                               l9417 156A  
                             l9425 15AA                               l8387 581C  
                             l6891 4084                               l6883 4070  
                             l6875 400C                               l6795 3D88  
                             l6779 3D34                               l8619 53DE  
                             l8627 6388                               l8731 4A8A  
                             l8547 542E                               l8491 5128  
                             l8475 6488                               l9515 1962  
                             l9435 15C4                               l9443 1604  
                             l8389 584E                               l8397 6494  
                             l6789 3D64                               l8653 576C  
                             l8637 56FE                               l8709 5D7E  
                             l8725 4A34                               l8581 550E  
                             l8485 50EE                               l9189 5050  
                             l9453 16AC                               l9349 13C8  
                             l6879 403A                               l6799 3D92  
                             l8671 57D2                               l8663 579C  
                             l8751 4B6E                               l8727 4A3C  
                             l8719 4A0C                               l8591 553E  
                             l8911 0D7E                               l8903 0CFA  
                             l9535 1A18                               l9527 1986  
                             l9519 196C                               l9471 1742  
                             l9383 145C                               l7929 6346  
                             l6889 4080                               l8665 57AC  
                             l8657 5780                               l8681 5A7A  
                             l8737 4AE6                               l8729 4A4C  
                             l8593 554E                               l8585 5522  
                             l8569 54D6                               l8921 0E18  
                             l8841 0B16                               l9553 1ACA  
                             l9481 17FE                               l9393 1504  
                             l8763 63EC                               l8667 57B6  
                             l8683 5A8A                               l8739 4AF6  
                             l8931 0E9C                               l8915 0DB0  
                             l9539 1A2C                               l9491 188C  
                             l9459 16FE                               l9467 173E  
                             l8773 4D9C                               l8693 5AE4  
                             l8685 5A90                               l8941 0F06  
                             l8917 0DC6                               l8861 0BCA  
                             l9581 1B4A                               l9565 1AF0  
                             l9485 1864                               l9469 1740  
                             l9389 14F2                               l8759 63D2  
                             l8775 4DA4                               l8791 4E7C  
                             l7975 33DC                               l8927 0E6A  
                             l8919 0E02                               l8871 0C0A  
                             l8855 0B66                               l8847 0B30  
                             l9583 1B4E                               l9575 1B0A  
                             l9559 1ADC                               l9567 1AF6  
                             l9487 186A                               l8785 4E3C  
                             l7993 3426                               l7969 33B8  
                             l8945 0F7E                               l8865 0BDA  
                             l8795 4EF4                               l7987 3412  
                             l7979 33E6                               l8963 0FFC  
                             l8947 0F84                               l8859 0BB0  
                             l8981 10C8                               l8965 1004  
                             l8973 10A0                               l8877 0C24  
                             l8869 0BE0                               l7999 344A  
                             l8983 10DC                               l8975 10AE  
                             l8959 0FD0                               l8887 0C76  
                             STR_1 FF7F                               STR_2 FF55  
                             STR_3 FE83                               STR_4 FF7F  
                             l8995 112E                               l8987 10FE  
                             STR_5 FFFA                               STR_6 FF6A  
                             STR_7 FFC8                               STR_8 FFA9  
                             l8999 1190                               STR_9 FFBA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6120 40DC  
                             u6125 40D0                               u6135 413C  
                             u6400 00F2                               u6160 4192  
                             u8010 214A                               u7050 0ADE  
                             u6330 441E                               u6250 4306  
                             u8020 2196                               u6405 00E6  
                             u6165 4186                               u8015 213E  
                             u7055 0AD2                               u6415 0152  
                             u6335 4412                               u6255 42FA  
                             u6175 41F2                               u6520 0320  
                             u6440 01AC                               u6360 003A  
                             u8025 218A                               u9010 6532  
                             u8035 21F6                  _F2_Button_Polling 6554  
                             u6525 0314                               u6445 01A0  
                             u6365 002E                               u9110 656A  
                             u6535 0380                               u6455 020C  
                             u6375 009A                               u6560 03DA  
                             u6480 0266                               u9025 6534  
                             u6810 078A                               u6730 066E  
                             u6650 0554                               u9060 6586  
                             u9125 656C                               u6565 03CE  
                             u6485 025A                               u6815 077E  
                             u6735 0662                               u6655 0548  
                             u6575 043A                               u6495 02C6  
                             u9075 6588                               u9180 61AC  
                             u7750 1C42                               u7760 1C8E  
                             u7905 1F72                               u9186 61AE  
                             u6970 09C2                               u6890 08A6  
                             u7755 1C36                               u7765 1C82  
                             u7775 1CEE                               u6975 09B6  
                             u6895 089A                               u7880 1EC6  
                             u7890 1F12                               u8690 4020  
                             u7885 1EBA                               u7895 1F06  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 007F  
                             _data 0125                               _main 139A  
                             _itoa 6260                 ?_F2_Button_Polling 0028  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004D  
                             _utoa 598E                 __size_of_LCD_Error 0064  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 008F  
               __size_of_LCD_clear 0032                       _sprintf$4119 014D  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0070           __end_of_LCD_enable_pulse 64FE  
                 _CANOperationMode 658C                       _Can_Tx_Force 0252  
                 __end_of_LCD_Park 5FEA                    _space_available 025F  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C0                    __end_of___fladd 3842  
                            ?_main 0028                    __end_of___fldiv 40A8  
                            ?_itoa 0080                    __end_of___awdiv 598E  
                  __end_of___flneg 639A                              STR_10 FFE4  
                            STR_11 FFF0                              STR_20 FF40  
                            STR_12 FFF5                              STR_13 FFEB  
                            STR_21 FEEC                              STR_14 FFD4  
                            STR_22 FEC2                              STR_30 FE59  
                            STR_15 FFDC                              STR_23 FE6E  
                            STR_31 FE44                              STR_32 FF40  
                            STR_24 FF40                              STR_16 FF40  
                            STR_33 FED7                              STR_17 FF94  
                            STR_25 FF16                              STR_26 FF2B  
                            STR_18 FF01                              STR_34 FE2F  
                            STR_27 FF7F                              STR_19 FEAD  
                            STR_35 FE98                              STR_28 FF40  
                  __end_of___awmod 5D08                              STR_29 FED7  
                  __end_of___flmul 3CE8                    __end_of___flsub 6260  
                  __end_of___fltol 57E4                    __end_of___lldiv 5B08  
                            ?_utoa 0077                              u11000 3B1E  
                            u11005 3B12                              u11080 3C64  
                            u10505 6308                              u10506 630A  
                            u10515 6314                              u10516 6316  
                            u10620 3504                    ___awdiv@divisor 0078  
                            u10525 6320                              u11341 50CA  
                            u10526 6322                              u10630 351C  
                            u10640 351E                    __end_of___llmod 5DA2  
                            u11361 5104                              u12090 10F2  
                            u13027 6348                              u10495 62FC  
                            u10496 62FE                              u11801 4D50  
                            u11570 571E                              u12530 14C0  
                            u12540 14D8                              u11575 5712  
                            _T3CON 000FB1                              u12810 1888  
                            u12730 168C                              u12546 14DA  
                            u12740 16B4                              u12736 168E  
                            u12746 16B6                              u12690 1668  
                            u12940 1AA4                              u12890 19EA  
                  __end_of___lwdiv 5EB0                    __end_of___lwmod 6178  
                            i2l400 259A                              i2l401 25A2  
                            i2l402 25AA                              i2l411 2758  
                            i2l403 25B2                              i2l420 28D0  
                            i2l412 275C                              i2l421 28D4  
                            i2l413 282C                              i2l422 28DE  
                            i2l414 27CA                              i2l406 26A0  
                            i2l415 27D2                              i2l407 26A4  
                            i2l416 27DA                              i2l408 26AE  
                            i1l808 0078                              i2l417 27E2  
                            i2l428 3126                              i2l381 2514  
                            i2l382 22F8                              i2l391 2470  
                            i2l383 22FC                              i2l392 2474  
                            i2l384 23CC                              i2l393 247E  
                            i2l385 236A                              i2l386 2372  
                            i2l387 237A                              i2l396 2744  
                            i2l388 2382                              i2l804 4976  
                            i2l397 2528                              i2l574 6518  
                            i2l398 252C                              i2l399 25FC  
                            i2l579 65B4                    ___awdiv@counter 007A  
                            i2l797 48F2                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3117 0039  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0082                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 49B2                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00D4  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 6570  
                  __end_of_dpowers FE2F                              _scale 2974  
                  __end_of_isdigit 6492          __size_of_LCD_shift_cursor 004C  
                   __pbitbssCOMRAM 0250               __end_of_CANisRxReady 65B8  
                            tablat 000FF5               __end_of_CANisTxReady 64DC  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 007F                              utoa@v 007D  
                            status 000FD8                    __end_of_sprintf 139A  
              __size_of_LCD_cursor 0032                    __initialization 62A8  
                     __end_of_main 1B58                       __end_of_itoa 62A8  
    __size_of_board_initialization 00A4                      _LCD_goto_line 57E4  
                     __end_of_utoa 5A4C                  ?_Joystick_Polling 0028  
               ??_Joystick_Polling 0070                  ?_LCD_write_string 0081  
                           ??_main 0166                             ??_itoa 0086  
                           ??_utoa 007D          __size_ofi2_CANsendMessage 0690  
                    __activetblptr 000003                  __end_of_LCD_Error 60B2  
                        ??_LCD_Gap 0083                          ??_LCD_End 0083  
                   _JoystickValues 00E0                 ??_LCD_write_string 0083  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3115 0070  
                __end_of_LCD_clear 6468              i2CANsendMessage@flags 0040  
           LCD_write_string@buffer 0081                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0070  
                           ?_scale 0097                             _ADRESH 000FC4  
                 ___awdiv@dividend 0076                             _CAN_Rx 5EB0  
                           _CAN_Tx 5B08                    __CFG_BBSIZ$1024 000000  
                           i2l7021 332C                             i2l7013 32F4  
                           i2l7005 3286                             i2l7031 3396  
                           i2l7025 3348                             i2l7017 3310  
                           i2l7029 3364                             i2l7333 238A  
                           i2l7511 28E2                             i2l7505 28C6  
                           i2l7409 25BA                             i2l7353 2466  
                           i2l7435 26B2                             i2l7429 2696  
                           i2l9301 484E                             i2l7359 2482  
                           i2l9311 487A                             i2l9323 4916  
                           i2l9315 4898                             i2l7485 27EA  
                           i2l9333 4944                             i2l9261 4796  
                           i2l6951 3076                             i2l6943 3006  
                           i2l9255 4774                             i2l9273 47C2  
                           i2l9337 4972                             i2l6963 30D0  
                           i2l6955 3094                             i2l9293 4824  
                           i2l9269 47BA                             i2l6967 30EE  
                           i2l6959 30B2                             i2l9287 480E  
                           i2l9279 47EA                             i2l6969 3120  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0074                 CANsendMessage@tamp 007C  
                 __end_of___xxtofl 4B80                    _switch_position 00EC  
                 __end_of_delay_ms 6362              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FE07                         _MotoreFlag 0256  
                   ?_LCD_goto_line 0028                             ___flge 5252  
                        ??___fladd 00AC                   _delay_set_quartz 65B8  
                           ___wmul 639A                          ??___fldiv 0086  
                        ??___awdiv 007A                          ??___flneg 009B  
                   __CFG_STVREN$ON 000000                          ??___awmod 0074  
                        ??___flmul 0086                          ??___flsub 00C0  
                        ??___fltol 00BC                          ??___lldiv 0078  
                        ??___llmod 0078                          ??___lwdiv 0074  
                     ??_CANSetMask 0075                          ??___lwmod 0074  
          __size_of_LCD_write_char 0096                             _fround 4446  
   LCD_initialize@quartz_frequency 007E                             clear_0 62AE  
                           clear_1 62BA                             clear_2 62CC  
                 ___awdiv@quotient 007C                    ___awmod@divisor 0072  
             __size_of_LCD_Handler 01AE                    ___awmod@counter 0074  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00CC  
                           itoa@cp 0086                          ??_isdigit 0070  
             __size_of_LCD_Parking 0064                       __mediumconst FD9E  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8         __size_of_F2_Button_Polling 001C  
                        ??_sprintf 00CA                       _CANSetFilter 0000  
                       ___flge@ff1 0070                         ___flge@ff2 0074  
                     ___xxtofl@arg 007A                       ___xxtofl@exp 0079  
                     ___xxtofl@val 0070                         __accesstop 0060  
          __end_of__initialization 62E4                 __end_of_CANSetMask 4446  
                        ?_LCD_Park 0028                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 0258                         ___flneg@f1 0097  
                 _LCD_send_command 62EE                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008A                         ___fltol@f1 00B8  
             __size_of_LCD_goto_xy 001C                     __pcstackCOMRAM 0028  
                     __pidataBANK0 65C2                          ?_ISR_alta 0028  
                     LCD_goto_xy@x 0080                       LCD_goto_xy@y 007F  
                    __end_of_scale 2E8E                     _LCD_initialize 556A  
                _LCD_write_integer 4D46                  _LCD_write_message 63D0  
            CANSetFilter@numBuffer 0079                 ?_LCD_write_integer 0088  
           LCD_write_integer@index 0097                 ?_LCD_write_message 0081  
                       __div_to_l_ 53E2                       ??_LCD_cursor 007D  
           LCD_write_integer@value 0088      LCD_write_integer@convertedInt 0091  
                _space_gap_reached 0260                      _newMessageCan 025B  
                     _actual_speed 00E2              __size_of_CANisRxReady 0016  
            __size_of_CANisTxReady 0024                ??_LCD_write_integer 008C  
                  __div_to_l_@exp1 007D                ??_LCD_write_message 0083  
                  __div_to_l_@cntr 007C                            ??_scale 009B  
                 _LCD_shift_cursor 61CC                    __div_to_l_@quot 0078  
         __end_of_CANOperationMode 65A2                            ?_CAN_Rx 0028  
                          ?_CAN_Tx 0028                         __pbssBANK0 00CC  
                       __pbssBANK1 0100                         _data_brake 012D  
                       ??_LCD_Park 0083            __size_of_CANsendMessage 078C  
                       _data_speed 0135                      __div_to_l_@f1 0070  
                    __div_to_l_@f2 0074                    ??_LCD_goto_line 007C  
               __end_of_LCD_cursor 6436             __end_of_LCD_initialize 56D8  
                          ?___flge 0070                            ?___wmul 0070  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 4F06  
        __end_of_LCD_write_message 6404                  ?_LCD_enable_pulse 0028  
                          ?_fround 0097                       _CANisRxReady 65A2  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0078  
                     _CANisTxReady 64B8                          ISR_alta@i 0049  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 22E4  
      __size_of_PWR_Button_Polling 001C                            _LCD_Gap 5FEA  
                          _LCD_End 60B2                          ?___xxtofl 0070  
          __size_ofi2_CANisTxReady 001E             __size_of_CANInitialize 01C6  
                 LCD_cursor@active 007D                          ?_delay_ms 0076  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0077  
                          _AbsFlag 0250                  _parking_message_E 025D  
                  __size_of_CAN_Rx 0072                    __size_of_CAN_Tx 00BA  
                __end_of__npowers_ FDD3                            __Hparam 0000  
                       _left_speed 0020                         _scale$4118 009B  
                          __Lparam 0000                   delay_ms@value_ms 0076  
                  ?_LCD_initialize 0028                    __size_of___flge 0190  
                          ___fladd 339A                            ___fldiv 3CE8  
                          ___awdiv 58D0                            ___flneg 6362  
                          ___awmod 5C66                            ___flmul 3842  
                          ___flsub 6218                            ___fltol 56D8  
                          ___lldiv 5A4C                    __size_of___wmul 0036  
                   _LCD_write_char 5DA2                            ___llmod 5D08  
                          ___lwdiv 5E38                            ___lwmod 6116  
             CANInitialize@propSeg 0087                            __pcinit 62A8  
                          _battery 0026                    __size_of_fround 02F6  
                          __ramtop 0D00                LCD_write_char@value 0080  
                          __ptext0 139A                            __ptext1 5BC2  
                          __ptext2 4B80                            __ptext3 40A8  
                          __ptext4 0000                            __ptext5 658C  
                          __ptext6 651C                            __ptext7 5F22  
                          __ptext8 5F86                            __ptext9 4F06  
                      ?__div_to_l_ 0070                   LCD_write_char@D0 007F  
                 LCD_write_char@D1 007E                   LCD_write_char@D2 007D  
                 LCD_write_char@D3 007C                          _F1_switch 0253  
                          _dpowers FE07                          _F2_switch 0254  
                          _isdigit 6468                         ??___xxtofl 0074  
                 ___awmod@dividend 0070                         ??_delay_ms 0078  
           CANreceiveMessage@error 0043       __end_of_board_initialization 5C66  
        __size_of_Joystick_Polling 0054                          _LCD_Error 604E  
         __end_of_delay_set_quartz 65C2                            _sprintf 0B06  
                   __pintcode_body 473C                          _LCD_clear 6436  
             end_of_initialization 62E4          __size_of_LCD_write_string 0026  
                          itoa@buf 0080                            itoa@val 0082  
                          int_func 473C                          i2u1303_47 493E  
                        i2u1240_40 4892                          i2u1241_45 4894  
                        i2u1243_45 48B0                          i2u1244_40 48CA  
                        i2u1229_40 4794                          i2u1245_45 48CC  
                        i2u1246_40 48F0                      _CANInitialize 4B80  
                    _parking_error 025C                    ___lldiv@divisor 0074  
               LCD_cursor@blinking 007C                      _parking_state 00EA  
                  ___lldiv@counter 007C             __end_of_LCD_write_char 5E38  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0077  
                   __tdiv_to_l_@f1 0070                     __tdiv_to_l_@f2 0074  
                          utoa@val 0079                         _wait_low_1 0262  
                       _wait_low_2 0263                         _wait_low_3 0264  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0078  
          _steering_correction_dir 0261                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0070  
                        _PORTDbits 000F83                     CANSetMask@tamp 007A  
         __end_of_LCD_send_command 6328                     CANSetMask@type 0074  
                      ___fladd@grs 00B7                      ___xxtofl@sign 0078  
                      ___fldiv@grs 0091                        ___fldiv@rem 008B  
                _F1_Button_Polling 6570                         ?_LCD_Error 0028  
                       ?_LCD_clear 0028                 ?_F1_Button_Polling 0028  
                   __end_of_CAN_Rx 5F22                     __end_of_CAN_Tx 5BC2  
          _clock_counter_reference 00E4                        ___flmul@grs 008C  
                   _CANsendMessage 1B58                   CANInitialize@BRP 0081  
                 CANInitialize@SJW 0080                     ?_CANInitialize 007E  
              ??_F1_Button_Polling 0070                  __size_of_LCD_Park 0064  
              __size_of__div_to_l_ 0188            LCD_write_integer@F17272 0100  
                  ?_LCD_write_char 0028                      ??_LCD_Handler 00CC  
         __end_of_LCD_shift_cursor 6218                     __end_of___flge 53E2  
                       ?_ISR_bassa 0028                     __end_of___wmul 63D0  
                __size_of_ISR_alta 49AA                      ??_LCD_Parking 0083  
                LCD_shift_cursor@i 007E                     __end_of_fround 473C  
                   i2_CANisTxReady 64FE          __end_of_F1_Button_Polling 658C  
              start_initialization 62A8                __end_of__tdiv_to_l_ 5252  
              CANSetMask@numBuffer 0079                      _data_speed_rx 0001  
           __end_of_CANsendMessage 22E4                           ??_CAN_Rx 0070  
                         ??_CAN_Tx 0080                  ?_CANOperationMode 0028  
                    _data_steering 013D                      ??_LCD_goto_xy 0080  
       i2CANsendMessage@dataLength 003F               i2CANsendMessage@data 003D  
               ??_CANOperationMode 0070               i2CANsendMessage@tamp 0045  
                  ___llmod@divisor 0074           __end_ofi2_CANsendMessage 2974  
       CANInitialize@FilterConfig1 0088         CANInitialize@FilterConfig2 0089  
                  ___llmod@counter 0078                _steering_correction 00EB  
                         ??___flge 0078               _board_initialization 5BC2  
                         ??___wmul 0074                        __pdataBANK0 00ED  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 009B  
           __end_ofi2_CANisTxReady 651C                      sprintf@tmpval 015B  
                        ___fladd@a 00A8                          ___fladd@b 00A4  
           CANInitialize@phaseSeg1 007E             CANInitialize@phaseSeg2 007F  
                       fround@prec 00A3                __end_of_LCD_Handler 50B4  
                         ?_LCD_Gap 0028                           ?_LCD_End 0028  
                        ___fldiv@a 0082                          ___fldiv@b 007E  
                        ___flmul@a 0082                          ___flmul@b 007E  
                      __pbssCOMRAM 0001                          ___flsub@a 00BC  
                        ___flsub@b 00B8                      __pcstackBANK0 0060  
                    __pcstackBANK1 014D                        _BRGCON2bits 000F71  
              __end_of_LCD_Parking 5F86                        _BRGCON3bits 000F72  
                 _Joystick_Polling 6178                        ??_LCD_Error 0083  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3702 0071         i2CANsendMessage@identifier 0039  
                _park_assist_state 0145                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007C                    ?_CANsendMessage 0070  
          LCD_write_message@buffer 0081                   _LCD_write_string 6492  
                  ??_CANInitialize 0083                        sprintf@flag 0153  
                      sprintf@fval 0161                        sprintf@prec 015F  
                 ??_LCD_initialize 007E                 CANSetFilter@filter 0070  
        delay_set_quartz@frequency 0070                   ___lwdiv@dividend 0070  
               LCD_send_command@D0 007A                 LCD_send_command@D1 0079  
               LCD_send_command@D2 0078                 LCD_send_command@D3 007B  
              __end_of_LCD_goto_xy 6554              __end_of_LCD_goto_line 58D0  
            ?_board_initialization 0028                          __pintcode 0008  
                    __pmediumconst FD9E                           ?___fladd 00A4  
                         ?___fldiv 007E                           ?___awdiv 0076  
                         ?___flneg 0097                           ?___awmod 0070  
                         ?___flmul 007E                           ?___flsub 00B8  
                         ?___fltol 00B8                           ?___lldiv 0070  
                         ?___llmod 0070                          __npowers_ FD9F  
                         ?___lwdiv 0070                           ?___lwmod 0070  
                      ??_ISR_bassa 0028                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 6538                    ?i2_CANisTxReady 0028  
                      __tdiv_to_l_ 50B4                       ??__div_to_l_ 0078  
                      _COMSTATbits 000F74                           ?_isdigit 0028  
       __size_of_F1_Button_Polling 001C                        _BKWD_sensor 0251  
                 ___lwdiv@quotient 0074                           ?_sprintf 00C2  
                   __size_of_scale 051A                  ?_delay_set_quartz 0028  
            CANreceiveMessage@tamp 0044                 ??_delay_set_quartz 0070  
                         _LCD_Park 5F86                     ___wmul@product 0074  
                         _LATBbits 000F8A                           _IPR2bits 000FA2  
     _delay_quartz_frequency_value 00ED                           _IPR3bits 000FA5  
                         _PIE2bits 000FA0                           _PIE3bits 000FA3  
               __end_of__div_to_l_ 556A                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u950_40 261E  
                         i2u950_45 2614                           i2u951_45 266A  
                         i2u936_40 23A8                           i2u936_45 239E  
                         i2u937_40 23EE                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           i2u937_45 23E4  
                         i2u962_40 2808                           i2u962_45 27FE  
                         i2u938_45 243A                           i2u875_40 2F46  
                         i2u963_40 284E                           _RXB1EIDH 000F53  
                        _pr_time_1 00D8                          _pr_time_2 00DC  
                         _RXB1EIDL 000F54                          _pr_time_3 0010  
                         i2u963_45 2844                          _pr_time_4 0106  
                         i2u875_46 2F48                          _pr_time_5 0014  
                        _pr_time_6 0018                           i2u876_40 2F74  
                         i2u884_45 30FA                           i2u964_45 289A  
                         i2u876_46 2F76                           i2u949_40 25D8  
                         i2u949_45 25CE                           i2u886_40 31CE  
                        _set_speed 00E6                           i2u878_45 2F8A  
                         i2u886_46 31D0                           i2u887_40 31F8  
                         _RCONbits 000FD0                           i2u895_45 3370  
                         i2u887_46 31FA                           i2u889_45 320C  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 4F06                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008B                 _parking_message_ID 00E9  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                      _LCD_Parking 5F22                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0070                           _RTR_Flag 0257  
                ?_LCD_send_command 0078                   _actual_speed_kmh 0008  
                        _user_data 0024                   __size_of_LCD_Gap 0064  
                 __size_of_LCD_End 0064                 ??_LCD_send_command 007B  
                    ?_CANSetFilter 0070                         _CANCONbits 000F6F  
                      _LCD_goto_xy 6538                   ??_LCD_write_char 007C  
                LCD_goto_line@line 007C                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008A  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 04A8                         _CANSetMask 40A8  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007C  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4116 009F                        _fround$4117 009B  
               ??_LCD_shift_cursor 007D                         sprintf@exp 0159  
                       sprintf@val 0155                           ___xxtofl 49B2  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 6328                    ___lwdiv@divisor 0072  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0076  
                   ??_CANSetFilter 0075                   _LCD_enable_pulse 64DC  
                         __ptext10 0B06                           __ptext11 2974  
                         __ptext20 5D08                           __ptext12 6468  
                         __ptext21 5A4C                           __ptext13 4446  
                         __ptext30 598E                           __ptext22 56D8  
                         __ptext14 3842                           __ptext31 6116  
                         __ptext23 6218                           __ptext15 5C66  
                         __ptext40 5DA2                           __ptext32 5E38  
                         __ptext24 339A                           __ptext16 58D0  
                         __ptext41 556A                           __ptext33 6492  
                         __ptext25 6362                           __ptext17 50B4  
                         __ptext50 6178                           __ptext42 65B8  
                         __ptext34 6538                           __ptext26 5252  
                         __ptext18 53E2                           __ptext51 6554  
                         __ptext43 6404                           __ptext35 61CC  
                         __ptext27 3CE8                           __ptext19 49B2  
                         __ptext60 64FE                           __ptext52 6570  
                         __ptext44 6436                           __ptext36 5FEA  
                         __ptext28 4D46                           __ptext61 2E8E  
                         __ptext53 5B08                           __ptext45 57E4  
                         __ptext37 604E                           __ptext29 6260  
                         __ptext62 65A2                           __ptext54 1B58  
                         __ptext46 62EE                           __ptext38 60B2  
                         __ptext55 64B8                           __ptext47 64DC  
                         __ptext39 63D0                           __ptext56 5EB0  
                         __ptext48 6328                           __ptext49 639A  
                         __ptext59 22E4                       _RXF2SIDLbits 000F09  
                         __powers_ FDD3                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 0894                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0076  
                    __size_of_main 07BE                      __size_of_itoa 0048  
                    __size_of_utoa 00BE                  ?i2_CANsendMessage 0039  
             CANreceiveMessage@msg 0039              LCD_shift_cursor@shift 007D  
              i2_CANisTxReady$3115 0039                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0071                 ??i2_CANsendMessage 0041  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 61CC  
                     _TXB2SIDLbits 000F22                           int$flags 004D  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 0028  
                    ?_CANisTxReady 0028           __end_of_LCD_write_string 64B8  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 6404                        _RXB1CONbits 000F50  
                _CANreceiveMessage 2E8E                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0027  
                 ??_CANsendMessage 0078                 ?_CANreceiveMessage 0039  
                         itoa@base 0084                           isdigit@c 0072  
                         scale@scl 009F           CANsendMessage@identifier 0070  
                     _time_counter 001C                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 0151  
                 __tdiv_to_l_@exp1 0080                          sprintf@sp 00C2  
                 __tdiv_to_l_@cntr 007F                   CANSetFilter@tamp 007A  
                 __tdiv_to_l_@quot 007B                   CANSetFilter@type 0074  
              ??_CANreceiveMessage 003B                   ___lwmod@dividend 0070  
                 ___lldiv@dividend 0070                        _TXB0DLCbits 000F45  
                      _right_speed 0022                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                       _FWD_sensor 0255                    _display_refresh 025A  
                 ??i2_CANisTxReady 0039               CANOperationMode@mode 0070  
                   ??_CANisRxReady 0039                        ?_CANSetMask 0070  
                   ??_CANisTxReady 0070                       ?__tdiv_to_l_ 0070  
        __end_of_CANreceiveMessage 339A                           utoa@base 007B  
                         sprintf@c 0165                           sprintf@f 00C4  
                 ___lldiv@quotient 0078                    ___lwmod@divisor 0072  
  LCD_shift_cursor@number_of_shift 007C                    ___lwmod@counter 0074  
                   _collision_risk 0259                      ___fladd@signs 00B4  
               _PWR_Button_Polling 651C                       ___fladd@aexp 00B5  
                     ___fladd@bexp 00B6              __end_of_CANInitialize 4D46  
              ?_PWR_Button_Polling 0028                       _power_switch 025E  
