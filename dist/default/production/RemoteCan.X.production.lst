

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Apr 15 19:05:58 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataBANK0
    75  015E64                     __pidataBANK0:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _delay_quartz_frequency_value
    79  015E64  10                 	db	16
    80                           
    81                           	psect	mediumconst
    82  00FEBA                     __pmediumconst:
    83                           	opt stack 0
    84  00FEBA  00                 	db	0
    85  00FEBB                     __npowers_:
    86                           	opt stack 0
    87  00FEBB  0000               	dw	0
    88  00FEBD  3F80               	dw	16256
    89  00FEBF  CCCD               	dw	52429
    90  00FEC1  3DCC               	dw	15820
    91  00FEC3  D70A               	dw	55050
    92  00FEC5  3C23               	dw	15395
    93  00FEC7  126F               	dw	4719
    94  00FEC9  3A83               	dw	14979
    95  00FECB  B717               	dw	46871
    96  00FECD  38D1               	dw	14545
    97  00FECF  C5AC               	dw	50604
    98  00FED1  3727               	dw	14119
    99  00FED3  37BD               	dw	14269
   100  00FED5  3586               	dw	13702
   101  00FED7  BF95               	dw	49045
   102  00FED9  33D6               	dw	13270
   103  00FEDB  CC77               	dw	52343
   104  00FEDD  322B               	dw	12843
   105  00FEDF  705F               	dw	28767
   106  00FEE1  3089               	dw	12425
   107  00FEE3  E6FF               	dw	59135
   108  00FEE5  2EDB               	dw	11995
   109  00FEE7  E508               	dw	58632
   110  00FEE9  1E3C               	dw	7740
   111  00FEEB  4260               	dw	16992
   112  00FEED  0DA2               	dw	3490
   113  00FEEF                     __end_of__npowers_:
   114                           	opt stack 0
   115  00FEEF                     __powers_:
   116                           	opt stack 0
   117  00FEEF  0000               	dw	0
   118  00FEF1  3F80               	dw	16256
   119  00FEF3  0000               	dw	0
   120  00FEF5  4120               	dw	16672
   121  00FEF7  0000               	dw	0
   122  00FEF9  42C8               	dw	17096
   123  00FEFB  0000               	dw	0
   124  00FEFD  447A               	dw	17530
   125  00FEFF  4000               	dw	16384
   126  00FF01  461C               	dw	17948
   127  00FF03  5000               	dw	20480
   128  00FF05  47C3               	dw	18371
   129  00FF07  2400               	dw	9216
   130  00FF09  4974               	dw	18804
   131  00FF0B  9680               	dw	38528
   132  00FF0D  4B18               	dw	19224
   133  00FF0F  BC20               	dw	48160
   134  00FF11  4CBE               	dw	19646
   135  00FF13  6B28               	dw	27432
   136  00FF15  4E6E               	dw	20078
   137  00FF17  02F9               	dw	761
   138  00FF19  5015               	dw	20501
   139  00FF1B  78EC               	dw	30956
   140  00FF1D  60AD               	dw	24749
   141  00FF1F  F2CA               	dw	62154
   142  00FF21  7149               	dw	29001
   143  00FF23                     __end_of__powers_:
   144                           	opt stack 0
   145  00FF23                     _dpowers:
   146                           	opt stack 0
   147  00FF23  0001               	dw	1
   148  00FF25  0000               	dw	0
   149  00FF27  000A               	dw	10
   150  00FF29  0000               	dw	0
   151  00FF2B  0064               	dw	100
   152  00FF2D  0000               	dw	0
   153  00FF2F  03E8               	dw	1000
   154  00FF31  0000               	dw	0
   155  00FF33  2710               	dw	10000
   156  00FF35  0000               	dw	0
   157  00FF37  86A0               	dw	34464
   158  00FF39  0001               	dw	1
   159  00FF3B  4240               	dw	16960
   160  00FF3D  000F               	dw	15
   161  00FF3F  9680               	dw	38528
   162  00FF41  0098               	dw	152
   163  00FF43  E100               	dw	57600
   164  00FF45  05F5               	dw	1525
   165  00FF47  CA00               	dw	51712
   166  00FF49  3B9A               	dw	15258
   167  00FF4B                     __end_of_dpowers:
   168                           	opt stack 0
   169  0000                     _RXB1CON	set	3920
   170  0000                     _RXB1CONbits	set	3920
   171  0000                     _RXB1D0	set	3926
   172  0000                     _RXB1D1	set	3927
   173  0000                     _RXB1D2	set	3928
   174  0000                     _RXB1D3	set	3929
   175  0000                     _RXB1D4	set	3930
   176  0000                     _RXB1D5	set	3931
   177  0000                     _RXB1D6	set	3932
   178  0000                     _RXB1D7	set	3933
   179  0000                     _RXB1DLC	set	3925
   180  0000                     _RXB1DLCbits	set	3925
   181  0000                     _RXB1EIDH	set	3923
   182  0000                     _RXB1EIDL	set	3924
   183  0000                     _RXB1SIDH	set	3921
   184  0000                     _RXB1SIDL	set	3922
   185  0000                     _RXB1SIDLbits	set	3922
   186  0000                     _RXF0EIDH	set	3842
   187  0000                     _RXF0EIDL	set	3843
   188  0000                     _RXF0SIDH	set	3840
   189  0000                     _RXF0SIDL	set	3841
   190  0000                     _RXF0SIDLbits	set	3841
   191  0000                     _RXF1EIDH	set	3846
   192  0000                     _RXF1EIDL	set	3847
   193  0000                     _RXF1SIDH	set	3844
   194  0000                     _RXF1SIDL	set	3845
   195  0000                     _RXF1SIDLbits	set	3845
   196  0000                     _RXF2EIDH	set	3850
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2SIDH	set	3848
   199  0000                     _RXF2SIDL	set	3849
   200  0000                     _RXF2SIDLbits	set	3849
   201  0000                     _RXF3EIDH	set	3854
   202  0000                     _RXF3EIDL	set	3855
   203  0000                     _RXF3SIDH	set	3852
   204  0000                     _RXF3SIDL	set	3853
   205  0000                     _RXF3SIDLbits	set	3853
   206  0000                     _RXF4EIDH	set	3858
   207  0000                     _RXF4EIDL	set	3859
   208  0000                     _RXF4SIDH	set	3856
   209  0000                     _RXF4SIDL	set	3857
   210  0000                     _RXF4SIDLbits	set	3857
   211  0000                     _RXF5EIDH	set	3862
   212  0000                     _RXF5EIDL	set	3863
   213  0000                     _RXF5SIDH	set	3860
   214  0000                     _RXF5SIDL	set	3861
   215  0000                     _RXF5SIDLbits	set	3861
   216  0000                     _RXM0EIDH	set	3866
   217  0000                     _RXM0EIDL	set	3867
   218  0000                     _RXM0SIDH	set	3864
   219  0000                     _RXM0SIDL	set	3865
   220  0000                     _RXM0SIDLbits	set	3865
   221  0000                     _RXM1EIDH	set	3870
   222  0000                     _RXM1EIDL	set	3871
   223  0000                     _RXM1SIDH	set	3868
   224  0000                     _RXM1SIDL	set	3869
   225  0000                     _RXM1SIDLbits	set	3869
   226  0000                     _TXB0CONbits	set	3904
   227  0000                     _TXB0D0	set	3910
   228  0000                     _TXB0D1	set	3911
   229  0000                     _TXB0D2	set	3912
   230  0000                     _TXB0D3	set	3913
   231  0000                     _TXB0D4	set	3914
   232  0000                     _TXB0D5	set	3915
   233  0000                     _TXB0D6	set	3916
   234  0000                     _TXB0D7	set	3917
   235  0000                     _TXB0DLC	set	3909
   236  0000                     _TXB0DLCbits	set	3909
   237  0000                     _TXB0EIDH	set	3907
   238  0000                     _TXB0EIDL	set	3908
   239  0000                     _TXB0SIDH	set	3905
   240  0000                     _TXB0SIDL	set	3906
   241  0000                     _TXB0SIDLbits	set	3906
   242  0000                     _TXB1CONbits	set	3888
   243  0000                     _TXB1D0	set	3894
   244  0000                     _TXB1D1	set	3895
   245  0000                     _TXB1D2	set	3896
   246  0000                     _TXB1D3	set	3897
   247  0000                     _TXB1D4	set	3898
   248  0000                     _TXB1D5	set	3899
   249  0000                     _TXB1D6	set	3900
   250  0000                     _TXB1D7	set	3901
   251  0000                     _TXB1DLC	set	3893
   252  0000                     _TXB1DLCbits	set	3893
   253  0000                     _TXB1EIDH	set	3891
   254  0000                     _TXB1EIDL	set	3892
   255  0000                     _TXB1SIDH	set	3889
   256  0000                     _TXB1SIDL	set	3890
   257  0000                     _TXB1SIDLbits	set	3890
   258  0000                     _TXB2CONbits	set	3872
   259  0000                     _TXB2D0	set	3878
   260  0000                     _TXB2D1	set	3879
   261  0000                     _TXB2D2	set	3880
   262  0000                     _TXB2D3	set	3881
   263  0000                     _TXB2D4	set	3882
   264  0000                     _TXB2D5	set	3883
   265  0000                     _TXB2D6	set	3884
   266  0000                     _TXB2D7	set	3885
   267  0000                     _TXB2DLC	set	3877
   268  0000                     _TXB2DLCbits	set	3877
   269  0000                     _TXB2EIDH	set	3875
   270  0000                     _TXB2EIDL	set	3876
   271  0000                     _TXB2SIDH	set	3873
   272  0000                     _TXB2SIDL	set	3874
   273  0000                     _TXB2SIDLbits	set	3874
   274  0000                     _ADCON0bits	set	4034
   275  0000                     _ADCON1	set	4033
   276  0000                     _ADCON2bits	set	4032
   277  0000                     _ADRESH	set	4036
   278  0000                     _BRGCON1	set	3952
   279  0000                     _BRGCON2	set	3953
   280  0000                     _BRGCON2bits	set	3953
   281  0000                     _BRGCON3	set	3954
   282  0000                     _BRGCON3bits	set	3954
   283  0000                     _CANCON	set	3951
   284  0000                     _CANCONbits	set	3951
   285  0000                     _CANSTAT	set	3950
   286  0000                     _COMSTATbits	set	3956
   287  0000                     _INTCONbits	set	4082
   288  0000                     _IPR2bits	set	4002
   289  0000                     _IPR3bits	set	4005
   290  0000                     _LATA	set	3977
   291  0000                     _LATB	set	3978
   292  0000                     _LATC	set	3979
   293  0000                     _LATCbits	set	3979
   294  0000                     _LATD	set	3980
   295  0000                     _LATDbits	set	3980
   296  0000                     _LATE	set	3981
   297  0000                     _LATEbits	set	3981
   298  0000                     _PIE2bits	set	4000
   299  0000                     _PIE3bits	set	4003
   300  0000                     _PIR2bits	set	4001
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PORTAbits	set	3968
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _RCONbits	set	4048
   306  0000                     _RXB0CON	set	3936
   307  0000                     _RXB0CONbits	set	3936
   308  0000                     _RXB0D0	set	3942
   309  0000                     _RXB0D1	set	3943
   310  0000                     _RXB0D2	set	3944
   311  0000                     _RXB0D3	set	3945
   312  0000                     _RXB0D4	set	3946
   313  0000                     _RXB0D5	set	3947
   314  0000                     _RXB0D6	set	3948
   315  0000                     _RXB0D7	set	3949
   316  0000                     _RXB0DLC	set	3941
   317  0000                     _RXB0DLCbits	set	3941
   318  0000                     _RXB0EIDH	set	3939
   319  0000                     _RXB0EIDL	set	3940
   320  0000                     _RXB0SIDH	set	3937
   321  0000                     _RXB0SIDL	set	3938
   322  0000                     _RXB0SIDLbits	set	3938
   323  0000                     _RXERRCNT	set	3957
   324  0000                     _T3CON	set	4017
   325  0000                     _TMR3H	set	4019
   326  0000                     _TMR3L	set	4018
   327  0000                     _TRISA	set	3986
   328  0000                     _TRISB	set	3987
   329  0000                     _TRISC	set	3988
   330  0000                     _TRISD	set	3989
   331  0000                     _TRISE	set	3990
   332  0000                     _TXERRCNT	set	3958
   333  00FF4B                     STR_3:
   334  00FF4B  20                 	db	32
   335  00FF4C  20                 	db	32
   336  00FF4D  50                 	db	80	;'P'
   337  00FF4E  72                 	db	114	;'r'
   338  00FF4F  65                 	db	101	;'e'
   339  00FF50  73                 	db	115	;'s'
   340  00FF51  73                 	db	115	;'s'
   341  00FF52  20                 	db	32
   342  00FF53  74                 	db	116	;'t'
   343  00FF54  68                 	db	104	;'h'
   344  00FF55  65                 	db	101	;'e'
   345  00FF56  20                 	db	32
   346  00FF57  62                 	db	98	;'b'
   347  00FF58  75                 	db	117	;'u'
   348  00FF59  74                 	db	116	;'t'
   349  00FF5A  74                 	db	116	;'t'
   350  00FF5B  6F                 	db	111	;'o'
   351  00FF5C  6E                 	db	110	;'n'
   352  00FF5D  20                 	db	32
   353  00FF5E  20                 	db	32
   354  00FF5F  00                 	db	0
   355  00FF60                     STR_2:
   356  00FF60  3D                 	db	61	;'='
   357  00FF61  3D                 	db	61	;'='
   358  00FF62  3E                 	db	62	;'>'
   359  00FF63  20                 	db	32
   360  00FF64  56                 	db	86	;'V'
   361  00FF65  45                 	db	69	;'E'
   362  00FF66  48                 	db	72	;'H'
   363  00FF67  49                 	db	73	;'I'
   364  00FF68  43                 	db	67	;'C'
   365  00FF69  4C                 	db	76	;'L'
   366  00FF6A  45                 	db	69	;'E'
   367  00FF6B  20                 	db	32
   368  00FF6C  20                 	db	32
   369  00FF6D  4F                 	db	79	;'O'
   370  00FF6E  46                 	db	70	;'F'
   371  00FF6F  46                 	db	70	;'F'
   372  00FF70  20                 	db	32
   373  00FF71  3C                 	db	60	;'<'
   374  00FF72  3D                 	db	61	;'='
   375  00FF73  3D                 	db	61	;'='
   376  00FF74  00                 	db	0
   377  00FF75                     STR_6:
   378  00FF75  3D                 	db	61	;'='
   379  00FF76  3D                 	db	61	;'='
   380  00FF77  3D                 	db	61	;'='
   381  00FF78  20                 	db	32
   382  00FF79  56                 	db	86	;'V'
   383  00FF7A  45                 	db	69	;'E'
   384  00FF7B  48                 	db	72	;'H'
   385  00FF7C  49                 	db	73	;'I'
   386  00FF7D  43                 	db	67	;'C'
   387  00FF7E  4C                 	db	76	;'L'
   388  00FF7F  45                 	db	69	;'E'
   389  00FF80  20                 	db	32
   390  00FF81  44                 	db	68	;'D'
   391  00FF82  41                 	db	65	;'A'
   392  00FF83  54                 	db	84	;'T'
   393  00FF84  41                 	db	65	;'A'
   394  00FF85  20                 	db	32
   395  00FF86  3D                 	db	61	;'='
   396  00FF87  3D                 	db	61	;'='
   397  00FF88  3D                 	db	61	;'='
   398  00FF89  00                 	db	0
   399  00FF8A                     STR_1:
   400  00FF8A  3D                 	db	61	;'='
   401  00FF8B  3D                 	db	61	;'='
   402  00FF8C  3D                 	db	61	;'='
   403  00FF8D  3D                 	db	61	;'='
   404  00FF8E  3D                 	db	61	;'='
   405  00FF8F  3D                 	db	61	;'='
   406  00FF90  3D                 	db	61	;'='
   407  00FF91  3D                 	db	61	;'='
   408  00FF92  3D                 	db	61	;'='
   409  00FF93  3D                 	db	61	;'='
   410  00FF94  3D                 	db	61	;'='
   411  00FF95  3D                 	db	61	;'='
   412  00FF96  3D                 	db	61	;'='
   413  00FF97  3D                 	db	61	;'='
   414  00FF98  3D                 	db	61	;'='
   415  00FF99  3D                 	db	61	;'='
   416  00FF9A  3D                 	db	61	;'='
   417  00FF9B  3D                 	db	61	;'='
   418  00FF9C  3D                 	db	61	;'='
   419  00FF9D  3D                 	db	61	;'='
   420  00FF9E  00                 	db	0
   421  00FF9F                     STR_8:
   422  00FF9F  53                 	db	83	;'S'
   423  00FFA0  70                 	db	112	;'p'
   424  00FFA1  65                 	db	101	;'e'
   425  00FFA2  65                 	db	101	;'e'
   426  00FFA3  64                 	db	100	;'d'
   427  00FFA4  3A                 	db	58	;':'
   428  00FFA5  20                 	db	32
   429  00FFA6  30                 	db	48	;'0'
   430  00FFA7  2E                 	db	46
   431  00FFA8  30                 	db	48	;'0'
   432  00FFA9  30                 	db	48	;'0'
   433  00FFAA  20                 	db	32
   434  00FFAB  4B                 	db	75	;'K'
   435  00FFAC  6D                 	db	109	;'m'
   436  00FFAD  2F                 	db	47
   437  00FFAE  68                 	db	104	;'h'
   438  00FFAF  00                 	db	0
   439  00FFB0                     STR_9:
   440  00FFB0  50                 	db	80	;'P'
   441  00FFB1  61                 	db	97	;'a'
   442  00FFB2  72                 	db	114	;'r'
   443  00FFB3  6B                 	db	107	;'k'
   444  00FFB4  20                 	db	32
   445  00FFB5  61                 	db	97	;'a'
   446  00FFB6  73                 	db	115	;'s'
   447  00FFB7  73                 	db	115	;'s'
   448  00FFB8  69                 	db	105	;'i'
   449  00FFB9  73                 	db	115	;'s'
   450  00FFBA  74                 	db	116	;'t'
   451  00FFBB  3A                 	db	58	;':'
   452  00FFBC  20                 	db	32
   453  00FFBD  00                 	db	0
   454  00FFBE                     STR_7:
   455  00FFBE  44                 	db	68	;'D'
   456  00FFBF  69                 	db	105	;'i'
   457  00FFC0  72                 	db	114	;'r'
   458  00FFC1  65                 	db	101	;'e'
   459  00FFC2  63                 	db	99	;'c'
   460  00FFC3  74                 	db	116	;'t'
   461  00FFC4  69                 	db	105	;'i'
   462  00FFC5  6F                 	db	111	;'o'
   463  00FFC6  6E                 	db	110	;'n'
   464  00FFC7  3A                 	db	58	;':'
   465  00FFC8  20                 	db	32
   466  00FFC9  00                 	db	0
   467  00FFCA                     STR_13:
   468  00FFCA  4F                 	db	79	;'O'
   469  00FFCB  46                 	db	70	;'F'
   470  00FFCC  46                 	db	70	;'F'
   471  00FFCD  20                 	db	32
   472  00FFCE  20                 	db	32
   473  00FFCF  20                 	db	32
   474  00FFD0  20                 	db	32
   475  00FFD1  00                 	db	0
   476  00FFD2                     STR_15:
   477  00FFD2  46                 	db	70	;'F'
   478  00FFD3  4F                 	db	79	;'O'
   479  00FFD4  55                 	db	85	;'U'
   480  00FFD5  4E                 	db	78	;'N'
   481  00FFD6  44                 	db	68	;'D'
   482  00FFD7  21                 	db	33
   483  00FFD8  20                 	db	32
   484  00FFD9  00                 	db	0
   485  00FFDA                     STR_14:
   486  00FFDA  53                 	db	83	;'S'
   487  00FFDB  45                 	db	69	;'E'
   488  00FFDC  41                 	db	65	;'A'
   489  00FFDD  52                 	db	82	;'R'
   490  00FFDE  43                 	db	67	;'C'
   491  00FFDF  48                 	db	72	;'H'
   492  00FFE0  20                 	db	32
   493  00FFE1  00                 	db	0
   494  00FFE2                     STR_16:
   495  00FFE2  50                 	db	80	;'P'
   496  00FFE3  41                 	db	65	;'A'
   497  00FFE4  52                 	db	82	;'R'
   498  00FFE5  4B                 	db	75	;'K'
   499  00FFE6  49                 	db	73	;'I'
   500  00FFE7  4E                 	db	78	;'N'
   501  00FFE8  47                 	db	71	;'G'
   502  00FFE9  00                 	db	0
   503  00FFEA                     STR_12:
   504  00FFEA  50                 	db	80	;'P'
   505  00FFEB  20                 	db	32
   506  00FFEC  20                 	db	32
   507  00FFED  20                 	db	32
   508  00FFEE  00                 	db	0
   509  00FFEF                     STR_10:
   510  00FFEF  46                 	db	70	;'F'
   511  00FFF0  57                 	db	87	;'W'
   512  00FFF1  44                 	db	68	;'D'
   513  00FFF2  20                 	db	32
   514  00FFF3  00                 	db	0
   515  00FFF4                     STR_11:
   516  00FFF4  42                 	db	66	;'B'
   517  00FFF5  4B                 	db	75	;'K'
   518  00FFF6  57                 	db	87	;'W'
   519  00FFF7  44                 	db	68	;'D'
   520  00FFF8  00                 	db	0
   521  00FFF9                     STR_5:
   522  00FFF9  25                 	db	37
   523  00FFFA  2E                 	db	46
   524  00FFFB  32                 	db	50	;'2'
   525  00FFFC  66                 	db	102	;'f'
   526  00FFFD  00                 	db	0
   527  0000                     
   528                           ; #config settings
   529  00FFFE  00                 	db	0	; dummy byte at the end
   530  0000                     
   531                           	psect	cinit
   532  015B4C                     __pcinit:
   533                           	opt stack 0
   534  015B4C                     start_initialization:
   535                           	opt stack 0
   536  015B4C                     __initialization:
   537                           	opt stack 0
   538                           
   539                           ; Clear objects allocated to BANK1 (35 bytes)
   540  015B4C  EE01  F000         	lfsr	0,__pbssBANK1
   541  015B50  0E23               	movlw	35
   542  015B52                     clear_0:
   543  015B52  6AEE               	clrf	postinc0,c
   544  015B54  06E8               	decf	wreg,f,c
   545  015B56  E1FD               	bnz	clear_0
   546                           
   547                           ; Clear objects allocated to BANK0 (32 bytes)
   548  015B58  EE00  F0CC         	lfsr	0,__pbssBANK0
   549  015B5C  0E20               	movlw	32
   550  015B5E                     clear_1:
   551  015B5E  6AEE               	clrf	postinc0,c
   552  015B60  06E8               	decf	wreg,f,c
   553  015B62  E1FD               	bnz	clear_1
   554                           
   555                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   556  015B64  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   557  015B66  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   558                           
   559                           ; Clear objects allocated to COMRAM (44 bytes)
   560  015B68  EE00  F001         	lfsr	0,__pbssCOMRAM
   561  015B6C  0E2C               	movlw	44
   562  015B6E                     clear_2:
   563  015B6E  6AEE               	clrf	postinc0,c
   564  015B70  06E8               	decf	wreg,f,c
   565  015B72  E1FD               	bnz	clear_2
   566                           
   567                           ; Initialize objects allocated to BANK0 (1 bytes)
   568                           ; load TBLPTR registers with __pidataBANK0
   569  015B74  0E64               	movlw	low __pidataBANK0
   570  015B76  6EF6               	movwf	tblptrl,c
   571  015B78  0E5E               	movlw	high __pidataBANK0
   572  015B7A  6EF7               	movwf	tblptrh,c
   573  015B7C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   574  015B7E  6EF8               	movwf	tblptru,c
   575  015B80  0009               	tblrd		*+	;fetch initializer
   576  015B82  CFF5 F0EC          	movff	tablat,__pdataBANK0
   577  015B86                     end_of_initialization:
   578                           	opt stack 0
   579  015B86                     __end_of__initialization:
   580                           	opt stack 0
   581  015B86  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   582  015B88  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   583  015B8A  0100               	movlb	0
   584  015B8C  EF02  F091         	goto	_main	;jump to C main() function
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           
   592                           	psect	bitbssCOMRAM
   593  000258                     __pbitbssCOMRAM:
   594                           	opt stack 0
   595  000258                     _AbsFlag:
   596                           	opt stack 0
   597  000258                     	ds	1
   598  000259                     _F1_switch:
   599                           	opt stack 0
   600  000259                     	ds	1
   601  00025A                     _F2_switch:
   602                           	opt stack 0
   603  00025A                     	ds	1
   604  00025B                     _MotoreFlag:
   605                           	opt stack 0
   606  00025B                     	ds	1
   607  00025C                     _RTR_Flag:
   608                           	opt stack 0
   609  00025C                     	ds	1
   610  00025D                     _SterzoFlag:
   611                           	opt stack 0
   612  00025D                     	ds	1
   613  00025E                     _display_refresh:
   614                           	opt stack 0
   615  00025E                     	ds	1
   616  00025F                     _newMessageCan:
   617                           	opt stack 0
   618  00025F                     	ds	1
   619  000260                     _power_switch:
   620                           	opt stack 0
   621  000260                     	ds	1
   622  000261                     _space_available:
   623                           	opt stack 0
   624  000261                     	ds	1
   625  000262                     _wait_low_1:
   626                           	opt stack 0
   627  000262                     	ds	1
   628  000263                     _wait_low_2:
   629                           	opt stack 0
   630  000263                     	ds	1
   631  000264                     _wait_low_3:
   632                           	opt stack 0
   633  000264                     	ds	1
   634  000265                     _y:
   635                           	opt stack 0
   636  000265                     	ds	1
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           
   644                           	psect	bssCOMRAM
   645  000001                     __pbssCOMRAM:
   646                           	opt stack 0
   647  000001                     _data_speed_rx:
   648                           	opt stack 0
   649  000001                     	ds	7
   650  000008                     LCD_write_integer@F17272:
   651                           	opt stack 0
   652  000008                     	ds	6
   653  00000E                     _actual_speed_kmh:
   654                           	opt stack 0
   655  00000E                     	ds	4
   656  000012                     _id:
   657                           	opt stack 0
   658  000012                     	ds	4
   659  000016                     _pr_time_3:
   660                           	opt stack 0
   661  000016                     	ds	4
   662  00001A                     _pr_time_4:
   663                           	opt stack 0
   664  00001A                     	ds	4
   665  00001E                     _pr_time_5:
   666                           	opt stack 0
   667  00001E                     	ds	4
   668  000022                     _time_counter:
   669                           	opt stack 0
   670  000022                     	ds	4
   671  000026                     _left_speed:
   672                           	opt stack 0
   673  000026                     	ds	2
   674  000028                     _right_speed:
   675                           	opt stack 0
   676  000028                     	ds	2
   677  00002A                     _battery:
   678                           	opt stack 0
   679  00002A                     	ds	1
   680  00002B                     _set_steering:
   681                           	opt stack 0
   682  00002B                     	ds	1
   683  00002C                     _data:
   684                           	opt stack 0
   685  00002C                     	ds	1
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           
   693                           	psect	bssBANK0
   694  0000CC                     __pbssBANK0:
   695                           	opt stack 0
   696  0000CC                     _JoystickConstants:
   697                           	opt stack 0
   698  0000CC                     	ds	8
   699  0000D4                     _pr_time_1:
   700                           	opt stack 0
   701  0000D4                     	ds	4
   702  0000D8                     _pr_time_2:
   703                           	opt stack 0
   704  0000D8                     	ds	4
   705  0000DC                     _JoystickValues:
   706                           	opt stack 0
   707  0000DC                     	ds	2
   708  0000DE                     _actual_speed:
   709                           	opt stack 0
   710  0000DE                     	ds	2
   711  0000E0                     _clock_counter_reference:
   712                           	opt stack 0
   713  0000E0                     	ds	2
   714  0000E2                     _set_speed:
   715                           	opt stack 0
   716  0000E2                     	ds	2
   717  0000E4                     _dir:
   718                           	opt stack 0
   719  0000E4                     	ds	1
   720  0000E5                     _parking_state:
   721                           	opt stack 0
   722  0000E5                     	ds	1
   723  0000E6                     _switch_position:
   724                           	opt stack 0
   725  0000E6                     	ds	1
   726  0000E7                     _x:
   727                           	opt stack 0
   728  0000E7                     	ds	1
   729  0000E8                     _z:
   730                           	opt stack 0
   731  0000E8                     	ds	1
   732  0000E9                     _data_brake:
   733                           	opt stack 0
   734  0000E9                     	ds	1
   735  0000EA                     _data_speed:
   736                           	opt stack 0
   737  0000EA                     	ds	1
   738  0000EB                     _data_steering:
   739                           	opt stack 0
   740  0000EB                     	ds	1
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           
   748                           	psect	dataBANK0
   749  0000EC                     __pdataBANK0:
   750                           	opt stack 0
   751  0000EC                     _delay_quartz_frequency_value:
   752                           	opt stack 0
   753  0000EC                     	ds	1
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           
   761                           	psect	bssBANK1
   762  000100                     __pbssBANK1:
   763                           	opt stack 0
   764  000100                     _msg:
   765                           	opt stack 0
   766  000100                     	ds	15
   767  00010F                     _str:
   768                           	opt stack 0
   769  00010F                     	ds	12
   770  00011B                     _park_assist_state:
   771                           	opt stack 0
   772  00011B                     	ds	8
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           
   780                           	psect	cstackBANK1
   781  000123                     __pcstackBANK1:
   782                           	opt stack 0
   783  000123                     ??_sprintf:
   784                           
   785                           ; 0 bytes @ 0x0
   786  000123                     	ds	2
   787  000125                     _sprintf$4213:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x2
   791  000125                     	ds	4
   792  000129                     sprintf@ap:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x6
   796  000129                     	ds	2
   797  00012B                     sprintf@flag:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x8
   801  00012B                     	ds	2
   802  00012D                     sprintf@val:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0xA
   806  00012D                     	ds	4
   807  000131                     sprintf@exp:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0xE
   811  000131                     	ds	2
   812  000133                     sprintf@tmpval:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x10
   816  000133                     	ds	4
   817  000137                     sprintf@prec:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x14
   821  000137                     	ds	2
   822  000139                     sprintf@fval:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x16
   826  000139                     	ds	4
   827  00013D                     sprintf@c:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x1A
   831  00013D                     	ds	1
   832  00013E                     ??_main:
   833                           
   834                           ; 0 bytes @ 0x1B
   835  00013E                     	ds	8
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           
   843                           	psect	cstackBANK0
   844  000060                     __pcstackBANK0:
   845                           	opt stack 0
   846  000060                     i2CANsendMessage@tamp:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x0
   850  000060                     	ds	4
   851  000064                     ??_ISR_alta:
   852                           
   853                           ; 0 bytes @ 0x4
   854  000064                     	ds	14
   855  000072                     ??_Joystick_Polling:
   856  000072                     ??_CAN_interpreter:
   857  000072                     ??_isdigit:
   858  000072                     ?___wmul:
   859                           	opt stack 0
   860  000072                     ?___awmod:
   861                           	opt stack 0
   862  000072                     ?__tdiv_to_l_:
   863                           	opt stack 0
   864  000072                     ?__div_to_l_:
   865                           	opt stack 0
   866  000072                     ?___lldiv:
   867                           	opt stack 0
   868  000072                     ?___llmod:
   869                           	opt stack 0
   870  000072                     ?___xxtofl:
   871                           	opt stack 0
   872  000072                     CANOperationMode@mode:
   873                           	opt stack 0
   874  000072                     _CANisTxReady$3235:
   875                           	opt stack 0
   876  000072                     delay_set_quartz@frequency:
   877                           	opt stack 0
   878  000072                     ___wmul@multiplier:
   879                           	opt stack 0
   880  000072                     ___awmod@dividend:
   881                           	opt stack 0
   882  000072                     CANsendMessage@identifier:
   883                           	opt stack 0
   884  000072                     CANSetMask@mask:
   885                           	opt stack 0
   886  000072                     CANSetFilter@filter:
   887                           	opt stack 0
   888  000072                     __div_to_l_@f1:
   889                           	opt stack 0
   890  000072                     ___flge@ff1:
   891                           	opt stack 0
   892  000072                     __tdiv_to_l_@f1:
   893                           	opt stack 0
   894  000072                     ___lldiv@dividend:
   895                           	opt stack 0
   896  000072                     ___llmod@dividend:
   897                           	opt stack 0
   898  000072                     ___xxtofl@val:
   899                           	opt stack 0
   900                           
   901                           ; 4 bytes @ 0x12
   902  000072                     	ds	1
   903  000073                     Joystick_Polling@i:
   904                           	opt stack 0
   905  000073                     _isdigit$3795:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x13
   909  000073                     	ds	1
   910  000074                     isdigit@c:
   911                           	opt stack 0
   912  000074                     ___wmul@multiplicand:
   913                           	opt stack 0
   914  000074                     ___awmod@divisor:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x14
   918  000074                     	ds	2
   919  000076                     ??___xxtofl:
   920  000076                     CANSetMask@type:
   921                           	opt stack 0
   922  000076                     CANSetFilter@type:
   923                           	opt stack 0
   924  000076                     ___awmod@counter:
   925                           	opt stack 0
   926  000076                     CANsendMessage@data:
   927                           	opt stack 0
   928  000076                     ___wmul@product:
   929                           	opt stack 0
   930  000076                     __div_to_l_@f2:
   931                           	opt stack 0
   932  000076                     ___flge@ff2:
   933                           	opt stack 0
   934  000076                     __tdiv_to_l_@f2:
   935                           	opt stack 0
   936  000076                     ___lldiv@divisor:
   937                           	opt stack 0
   938  000076                     ___llmod@divisor:
   939                           	opt stack 0
   940                           
   941                           ; 4 bytes @ 0x16
   942  000076                     	ds	1
   943  000077                     ??_CANSetMask:
   944  000077                     ??_CANSetFilter:
   945  000077                     ___awmod@sign:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x17
   949  000077                     	ds	1
   950  000078                     ?___awdiv:
   951                           	opt stack 0
   952  000078                     CANsendMessage@dataLength:
   953                           	opt stack 0
   954  000078                     delay_ms@value_ms:
   955                           	opt stack 0
   956  000078                     ___awdiv@dividend:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x18
   960  000078                     	ds	1
   961  000079                     CANsendMessage@flags:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x19
   965  000079                     	ds	1
   966  00007A                     ??__tdiv_to_l_:
   967  00007A                     ??_CANsendMessage:
   968  00007A                     ??___flge:
   969  00007A                     LCD_send_command@D2:
   970                           	opt stack 0
   971  00007A                     ___llmod@counter:
   972                           	opt stack 0
   973  00007A                     ___xxtofl@sign:
   974                           	opt stack 0
   975  00007A                     ___awdiv@divisor:
   976                           	opt stack 0
   977  00007A                     __div_to_l_@quot:
   978                           	opt stack 0
   979  00007A                     ___lldiv@quotient:
   980                           	opt stack 0
   981                           
   982                           ; 4 bytes @ 0x1A
   983  00007A                     	ds	1
   984  00007B                     CANSetMask@numBuffer:
   985                           	opt stack 0
   986  00007B                     CANSetFilter@numBuffer:
   987                           	opt stack 0
   988  00007B                     LCD_send_command@D1:
   989                           	opt stack 0
   990  00007B                     ___xxtofl@exp:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x1B
   994  00007B                     	ds	1
   995  00007C                     LCD_send_command@D0:
   996                           	opt stack 0
   997  00007C                     ___awdiv@counter:
   998                           	opt stack 0
   999  00007C                     CANSetMask@tamp:
  1000                           	opt stack 0
  1001  00007C                     CANSetFilter@tamp:
  1002                           	opt stack 0
  1003  00007C                     ___xxtofl@arg:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x1C
  1007  00007C                     	ds	1
  1008  00007D                     LCD_send_command@D3:
  1009                           	opt stack 0
  1010  00007D                     ___awdiv@sign:
  1011                           	opt stack 0
  1012  00007D                     __tdiv_to_l_@quot:
  1013                           	opt stack 0
  1014                           
  1015                           ; 4 bytes @ 0x1D
  1016  00007D                     	ds	1
  1017  00007E                     LCD_shift_cursor@number_of_shift:
  1018                           	opt stack 0
  1019  00007E                     LCD_goto_line@line:
  1020                           	opt stack 0
  1021  00007E                     LCD_write_char@D3:
  1022                           	opt stack 0
  1023  00007E                     LCD_cursor@blinking:
  1024                           	opt stack 0
  1025  00007E                     __div_to_l_@cntr:
  1026                           	opt stack 0
  1027  00007E                     ___lldiv@counter:
  1028                           	opt stack 0
  1029  00007E                     ___awdiv@quotient:
  1030                           	opt stack 0
  1031  00007E                     CANsendMessage@tamp:
  1032                           	opt stack 0
  1033                           
  1034                           ; 4 bytes @ 0x1E
  1035  00007E                     	ds	1
  1036  00007F                     LCD_shift_cursor@shift:
  1037                           	opt stack 0
  1038  00007F                     LCD_write_char@D2:
  1039                           	opt stack 0
  1040  00007F                     LCD_cursor@active:
  1041                           	opt stack 0
  1042  00007F                     __div_to_l_@exp1:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x1F
  1046  00007F                     	ds	1
  1047  000080                     ?___fldiv:
  1048                           	opt stack 0
  1049  000080                     ?___flmul:
  1050                           	opt stack 0
  1051  000080                     CANInitialize@phaseSeg1:
  1052                           	opt stack 0
  1053  000080                     LCD_shift_cursor@i:
  1054                           	opt stack 0
  1055  000080                     LCD_write_char@D1:
  1056                           	opt stack 0
  1057  000080                     LCD_initialize@quartz_frequency:
  1058                           	opt stack 0
  1059  000080                     ___fldiv@b:
  1060                           	opt stack 0
  1061  000080                     ___flmul@b:
  1062                           	opt stack 0
  1063                           
  1064                           ; 4 bytes @ 0x20
  1065  000080                     	ds	1
  1066  000081                     CANInitialize@phaseSeg2:
  1067                           	opt stack 0
  1068  000081                     LCD_goto_xy@y:
  1069                           	opt stack 0
  1070  000081                     LCD_write_char@D0:
  1071                           	opt stack 0
  1072  000081                     __tdiv_to_l_@cntr:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x21
  1076  000081                     	ds	1
  1077  000082                     CANInitialize@SJW:
  1078                           	opt stack 0
  1079  000082                     LCD_goto_xy@x:
  1080                           	opt stack 0
  1081  000082                     LCD_write_char@value:
  1082                           	opt stack 0
  1083  000082                     __tdiv_to_l_@exp1:
  1084                           	opt stack 0
  1085                           
  1086                           ; 1 bytes @ 0x22
  1087  000082                     	ds	1
  1088  000083                     CANInitialize@BRP:
  1089                           	opt stack 0
  1090  000083                     LCD_write_message@buffer:
  1091                           	opt stack 0
  1092  000083                     LCD_write_string@buffer:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x23
  1096  000083                     	ds	1
  1097  000084                     CANInitialize@flags:
  1098                           	opt stack 0
  1099  000084                     ___fldiv@a:
  1100                           	opt stack 0
  1101  000084                     ___flmul@a:
  1102                           	opt stack 0
  1103                           
  1104                           ; 4 bytes @ 0x24
  1105  000084                     	ds	1
  1106  000085                     ??_CANInitialize:
  1107  000085                     
  1108                           ; 0 bytes @ 0x25
  1109  000085                     	ds	3
  1110  000088                     ??___fldiv:
  1111  000088                     ??___flmul:
  1112                           
  1113                           ; 0 bytes @ 0x28
  1114  000088                     	ds	1
  1115  000089                     CANInitialize@propSeg:
  1116                           	opt stack 0
  1117                           
  1118                           ; 1 bytes @ 0x29
  1119  000089                     	ds	1
  1120  00008A                     CANInitialize@FilterConfig1:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x2A
  1124  00008A                     	ds	1
  1125  00008B                     CANInitialize@FilterConfig2:
  1126                           	opt stack 0
  1127                           
  1128                           ; 1 bytes @ 0x2B
  1129  00008B                     	ds	1
  1130  00008C                     ___fldiv@sign:
  1131                           	opt stack 0
  1132  00008C                     ___flmul@sign:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x2C
  1136  00008C                     	ds	1
  1137  00008D                     ___flmul@aexp:
  1138                           	opt stack 0
  1139  00008D                     ___fldiv@rem:
  1140                           	opt stack 0
  1141                           
  1142                           ; 4 bytes @ 0x2D
  1143  00008D                     	ds	1
  1144  00008E                     ___flmul@grs:
  1145                           	opt stack 0
  1146                           
  1147                           ; 4 bytes @ 0x2E
  1148  00008E                     	ds	3
  1149  000091                     ___fldiv@new_exp:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0x31
  1153  000091                     	ds	1
  1154  000092                     ___flmul@bexp:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x32
  1158  000092                     	ds	1
  1159  000093                     ___fldiv@grs:
  1160                           	opt stack 0
  1161  000093                     ___flmul@prod:
  1162                           	opt stack 0
  1163                           
  1164                           ; 4 bytes @ 0x33
  1165  000093                     	ds	4
  1166  000097                     ___fldiv@bexp:
  1167                           	opt stack 0
  1168  000097                     ___flmul@temp:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x37
  1172  000097                     	ds	1
  1173  000098                     ___fldiv@aexp:
  1174                           	opt stack 0
  1175                           
  1176                           ; 1 bytes @ 0x38
  1177  000098                     	ds	1
  1178  000099                     ?_fround:
  1179                           	opt stack 0
  1180  000099                     ?_scale:
  1181                           	opt stack 0
  1182  000099                     ?___flneg:
  1183                           	opt stack 0
  1184  000099                     ___flneg@f1:
  1185                           	opt stack 0
  1186                           
  1187                           ; 4 bytes @ 0x39
  1188  000099                     	ds	4
  1189  00009D                     _fround$4211:
  1190                           	opt stack 0
  1191  00009D                     _scale$4212:
  1192                           	opt stack 0
  1193                           
  1194                           ; 4 bytes @ 0x3D
  1195  00009D                     	ds	4
  1196  0000A1                     scale@scl:
  1197                           	opt stack 0
  1198  0000A1                     _fround$4210:
  1199                           	opt stack 0
  1200                           
  1201                           ; 4 bytes @ 0x41
  1202  0000A1                     	ds	4
  1203  0000A5                     fround@prec:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x45
  1207  0000A5                     	ds	1
  1208  0000A6                     ?___fladd:
  1209                           	opt stack 0
  1210  0000A6                     ___fladd@b:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x46
  1214  0000A6                     	ds	4
  1215  0000AA                     ___fladd@a:
  1216                           	opt stack 0
  1217                           
  1218                           ; 4 bytes @ 0x4A
  1219  0000AA                     	ds	4
  1220  0000AE                     ??___fladd:
  1221                           
  1222                           ; 0 bytes @ 0x4E
  1223  0000AE                     	ds	8
  1224  0000B6                     ___fladd@signs:
  1225                           	opt stack 0
  1226                           
  1227                           ; 1 bytes @ 0x56
  1228  0000B6                     	ds	1
  1229  0000B7                     ___fladd@aexp:
  1230                           	opt stack 0
  1231                           
  1232                           ; 1 bytes @ 0x57
  1233  0000B7                     	ds	1
  1234  0000B8                     ___fladd@bexp:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x58
  1238  0000B8                     	ds	1
  1239  0000B9                     ___fladd@grs:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x59
  1243  0000B9                     	ds	1
  1244  0000BA                     ?___flsub:
  1245                           	opt stack 0
  1246  0000BA                     ?___fltol:
  1247                           	opt stack 0
  1248  0000BA                     ___fltol@f1:
  1249                           	opt stack 0
  1250  0000BA                     ___flsub@b:
  1251                           	opt stack 0
  1252                           
  1253                           ; 4 bytes @ 0x5A
  1254  0000BA                     	ds	4
  1255  0000BE                     ??___fltol:
  1256  0000BE                     ___flsub@a:
  1257                           	opt stack 0
  1258                           
  1259                           ; 4 bytes @ 0x5E
  1260  0000BE                     	ds	4
  1261  0000C2                     ___fltol@sign1:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x62
  1265  0000C2                     	ds	1
  1266  0000C3                     ___fltol@exp1:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0x63
  1270  0000C3                     	ds	1
  1271  0000C4                     ?_sprintf:
  1272                           	opt stack 0
  1273  0000C4                     sprintf@sp:
  1274                           	opt stack 0
  1275                           
  1276                           ; 2 bytes @ 0x64
  1277  0000C4                     	ds	2
  1278  0000C6                     sprintf@f:
  1279                           	opt stack 0
  1280                           
  1281                           ; 2 bytes @ 0x66
  1282  0000C6                     	ds	6
  1283  0000CC                     tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           
  1290                           ; 0 bytes @ 0x6C
  1291                           
  1292                           	psect	cstackCOMRAM
  1293  00002D                     __pcstackCOMRAM:
  1294                           	opt stack 0
  1295  00002D                     ??_ISR_bassa:
  1296  00002D                     
  1297                           ; 1 bytes @ 0x0
  1298  00002D                     	ds	17
  1299  00003E                     _CANisRxReady$3237:
  1300                           	opt stack 0
  1301  00003E                     i2_CANisTxReady$3235:
  1302                           	opt stack 0
  1303  00003E                     CANreceiveMessage@msg:
  1304                           	opt stack 0
  1305  00003E                     i2CANsendMessage@identifier:
  1306                           	opt stack 0
  1307                           
  1308                           ; 4 bytes @ 0x11
  1309  00003E                     	ds	2
  1310  000040                     ??_CANreceiveMessage:
  1311                           
  1312                           ; 0 bytes @ 0x13
  1313  000040                     	ds	2
  1314  000042                     i2CANsendMessage@data:
  1315                           	opt stack 0
  1316                           
  1317                           ; 2 bytes @ 0x15
  1318  000042                     	ds	2
  1319  000044                     i2CANsendMessage@dataLength:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x17
  1323  000044                     	ds	1
  1324  000045                     i2CANsendMessage@flags:
  1325                           	opt stack 0
  1326                           
  1327                           ; 1 bytes @ 0x18
  1328  000045                     	ds	1
  1329  000046                     ??i2_CANsendMessage:
  1330                           
  1331                           ; 0 bytes @ 0x19
  1332  000046                     	ds	2
  1333  000048                     CANreceiveMessage@error:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x1B
  1337  000048                     	ds	1
  1338  000049                     CANreceiveMessage@tamp:
  1339                           	opt stack 0
  1340                           
  1341                           ; 1 bytes @ 0x1C
  1342  000049                     	ds	1
  1343  00004A                     ISR_alta@i:
  1344                           	opt stack 0
  1345                           
  1346                           ; 1 bytes @ 0x1D
  1347  00004A                     	ds	1
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 154 in file "RemoteCan.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;		None               void
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1376 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1378 ;;Total ram usage:        8 bytes
  1379 ;; Hardware stack levels required when called:   10
  1380 ;; This function calls:
  1381 ;;		_CAN_Send
  1382 ;;		_CAN_interpreter
  1383 ;;		_CANisTxReady
  1384 ;;		_CANsendMessage
  1385 ;;		_F1_Button_Polling
  1386 ;;		_F2_Button_Polling
  1387 ;;		_Joystick_Polling
  1388 ;;		_LCD_Handler
  1389 ;;		_LCD_goto_line
  1390 ;;		_LCD_initialize
  1391 ;;		_LCD_write_message
  1392 ;;		_PWR_Button_Polling
  1393 ;;		___fladd
  1394 ;;		___flmul
  1395 ;;		___flneg
  1396 ;;		___fltol
  1397 ;;		___xxtofl
  1398 ;;		_board_initialization
  1399 ;;		_delay_ms
  1400 ;; This function is called by:
  1401 ;;		Startup code after reset
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text0
  1406  012204                     __ptext0:
  1407                           	opt stack 0
  1408  012204                     _main:
  1409                           	opt stack 21
  1410                           
  1411                           ;RemoteCan.c: 155: board_initialization();
  1412                           
  1413                           ;incstack = 0
  1414  012204  ECF7  F0AB         	call	_board_initialization	;wreg free
  1415                           
  1416                           ;RemoteCan.c: 163: JoystickConstants[0] = 0.703;
  1417  012208  0ECF               	movlw	207
  1418  01220A  0100               	movlb	0	; () banked
  1419  01220C  6FCC               	movwf	_JoystickConstants& (0+255),b	;volatile
  1420  01220E  0EF7               	movlw	247
  1421  012210  6FCD               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1422  012212  0E33               	movlw	51
  1423  012214  6FCE               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1424  012216  0E3F               	movlw	63
  1425  012218  6FCF               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;RemoteCan.c: 164: JoystickConstants[1] = 10;
  1429  01221A  0E00               	movlw	0
  1430  01221C  0100               	movlb	0	; () banked
  1431  01221E  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1432  012220  0E00               	movlw	0
  1433  012222  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1434  012224  0E20               	movlw	32
  1435  012226  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1436  012228  0E41               	movlw	65
  1437  01222A  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;RemoteCan.c: 166: display_refresh = 1;
  1441  01222C  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1442  01222E                     l8936:
  1443                           
  1444                           ;RemoteCan.c: 170: PWR_Button_Polling();
  1445  01222E  ECDF  F0AE         	call	_PWR_Button_Polling	;wreg free
  1446                           
  1447                           ;RemoteCan.c: 171: F1_Button_Polling();
  1448  012232  EC09  F0AF         	call	_F1_Button_Polling	;wreg free
  1449                           
  1450                           ;RemoteCan.c: 172: F2_Button_Polling();
  1451  012236  ECFB  F0AE         	call	_F2_Button_Polling	;wreg free
  1452                           
  1453                           ;RemoteCan.c: 175: if (power_switch == 0) {
  1454  01223A  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1455  01223C  D09D               	goto	l8982
  1456                           
  1457                           ;RemoteCan.c: 176: dir = 1;
  1458  01223E  0E01               	movlw	1
  1459  012240  0100               	movlb	0	; () banked
  1460  012242  6FE4               	movwf	_dir& (0+255),b	;volatile
  1461                           
  1462                           ;RemoteCan.c: 177: set_speed = 0;
  1463  012244  0E00               	movlw	0
  1464  012246  0100               	movlb	0	; () banked
  1465  012248  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1466  01224A  0E00               	movlw	0
  1467  01224C  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  1468                           
  1469                           ;RemoteCan.c: 178: data_steering [0] = 90;
  1470  01224E  0E5A               	movlw	90
  1471  012250  0100               	movlb	0	; () banked
  1472  012252  6FEB               	movwf	_data_steering& (0+255),b
  1473                           
  1474                           ;RemoteCan.c: 179: data_brake [0] = 0;
  1475  012254  0E00               	movlw	0
  1476  012256  0100               	movlb	0	; () banked
  1477  012258  6FE9               	movwf	_data_brake& (0+255),b
  1478                           
  1479                           ;RemoteCan.c: 180: data_brake [1] = 1;
  1480  01225A  0E01               	movlw	1
  1481  01225C  0100               	movlb	0	; () banked
  1482  01225E  6FEA               	movwf	(_data_brake+1)& (0+255),b
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;RemoteCan.c: 181: CAN_Send();
  1486  012260  EC45  F0AB         	call	_CAN_Send	;wreg free
  1487                           
  1488                           ;RemoteCan.c: 182: LCD_initialize(16);
  1489  012264  0E10               	movlw	16
  1490  012266  EC24  F0A8         	call	_LCD_initialize
  1491                           
  1492                           ;RemoteCan.c: 183: PORTDbits.RD6 = 0;
  1493  01226A  9C83               	bcf	3971,6,c	;volatile
  1494                           
  1495                           ;RemoteCan.c: 184: PORTDbits.RD5 = 0;
  1496  01226C  9A83               	bcf	3971,5,c	;volatile
  1497                           
  1498                           ;RemoteCan.c: 185: LCD_goto_line(1);
  1499  01226E  0E01               	movlw	1
  1500  012270  EC12  F0AA         	call	_LCD_goto_line
  1501                           
  1502                           ;RemoteCan.c: 186: LCD_write_message("====================");
  1503  012274  0E8A               	movlw	low STR_1
  1504  012276  0100               	movlb	0	; () banked
  1505  012278  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1506  01227A  0EFF               	movlw	high STR_1
  1507  01227C  0100               	movlb	0	; () banked
  1508  01227E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1509  012280  EC39  F0AE         	call	_LCD_write_message	;wreg free
  1510                           
  1511                           ;RemoteCan.c: 187: LCD_goto_line(2);
  1512  012284  0E02               	movlw	2
  1513  012286  EC12  F0AA         	call	_LCD_goto_line
  1514                           
  1515                           ;RemoteCan.c: 188: LCD_write_message("==> VEHICLE  OFF <==");
  1516  01228A  0E60               	movlw	low STR_2
  1517  01228C  0100               	movlb	0	; () banked
  1518  01228E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1519  012290  0EFF               	movlw	high STR_2
  1520  012292  0100               	movlb	0	; () banked
  1521  012294  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1522  012296  EC39  F0AE         	call	_LCD_write_message	;wreg free
  1523                           
  1524                           ;RemoteCan.c: 189: LCD_goto_line(3);
  1525  01229A  0E03               	movlw	3
  1526  01229C  EC12  F0AA         	call	_LCD_goto_line
  1527                           
  1528                           ;RemoteCan.c: 190: LCD_write_message("  Press the button  ");
  1529  0122A0  0E4B               	movlw	low STR_3
  1530  0122A2  0100               	movlb	0	; () banked
  1531  0122A4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1532  0122A6  0EFF               	movlw	high STR_3
  1533  0122A8  0100               	movlb	0	; () banked
  1534  0122AA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1535  0122AC  EC39  F0AE         	call	_LCD_write_message	;wreg free
  1536                           
  1537                           ;RemoteCan.c: 191: LCD_goto_line(4);
  1538  0122B0  0E04               	movlw	4
  1539  0122B2  EC12  F0AA         	call	_LCD_goto_line
  1540                           
  1541                           ;RemoteCan.c: 192: LCD_write_message("====================");
  1542  0122B6  0E8A               	movlw	low STR_1
  1543  0122B8  0100               	movlb	0	; () banked
  1544  0122BA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1545  0122BC  0EFF               	movlw	high STR_1
  1546  0122BE  0100               	movlb	0	; () banked
  1547  0122C0  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1548  0122C2  EC39  F0AE         	call	_LCD_write_message	;wreg free
  1549                           
  1550                           ;RemoteCan.c: 193: while (power_switch == 0) {
  1551  0122C6  D054               	goto	l8980
  1552  0122C8                     l8970:
  1553                           
  1554                           ;RemoteCan.c: 194: if ((time_counter - pr_time_1) >= 30) {
  1555  0122C8  C0D4  F13E         	movff	_pr_time_1,??_main	;volatile
  1556  0122CC  C0D5  F13F         	movff	_pr_time_1+1,??_main+1	;volatile
  1557  0122D0  C0D6  F140         	movff	_pr_time_1+2,??_main+2	;volatile
  1558  0122D4  C0D7  F141         	movff	_pr_time_1+3,??_main+3	;volatile
  1559  0122D8  0101               	movlb	1	; () banked
  1560  0122DA  1F3E               	comf	??_main& (0+255),f,b
  1561  0122DC  1F3F               	comf	(??_main+1)& (0+255),f,b
  1562  0122DE  1F40               	comf	(??_main+2)& (0+255),f,b
  1563  0122E0  1F41               	comf	(??_main+3)& (0+255),f,b
  1564  0122E2  2B3E               	incf	??_main& (0+255),f,b
  1565  0122E4  0E00               	movlw	0
  1566  0122E6  233F               	addwfc	(??_main+1)& (0+255),f,b
  1567  0122E8  2340               	addwfc	(??_main+2)& (0+255),f,b
  1568  0122EA  2341               	addwfc	(??_main+3)& (0+255),f,b
  1569  0122EC  5022               	movf	_time_counter,w,c	;volatile
  1570  0122EE  0101               	movlb	1	; () banked
  1571  0122F0  253E               	addwf	??_main& (0+255),w,b
  1572  0122F2  0101               	movlb	1	; () banked
  1573  0122F4  6F42               	movwf	(??_main+4)& (0+255),b
  1574  0122F6  5023               	movf	_time_counter+1,w,c	;volatile
  1575  0122F8  0101               	movlb	1	; () banked
  1576  0122FA  213F               	addwfc	(??_main+1)& (0+255),w,b
  1577  0122FC  0101               	movlb	1	; () banked
  1578  0122FE  6F43               	movwf	(??_main+5)& (0+255),b
  1579  012300  5024               	movf	_time_counter+2,w,c	;volatile
  1580  012302  0101               	movlb	1	; () banked
  1581  012304  2140               	addwfc	(??_main+2)& (0+255),w,b
  1582  012306  0101               	movlb	1	; () banked
  1583  012308  6F44               	movwf	(??_main+6)& (0+255),b
  1584  01230A  5025               	movf	_time_counter+3,w,c	;volatile
  1585  01230C  0101               	movlb	1	; () banked
  1586  01230E  2141               	addwfc	(??_main+3)& (0+255),w,b
  1587  012310  0101               	movlb	1	; () banked
  1588  012312  6F45               	movwf	(??_main+7)& (0+255),b
  1589  012314  0101               	movlb	1	; () banked
  1590  012316  5145               	movf	(??_main+7)& (0+255),w,b
  1591  012318  0101               	movlb	1	; () banked
  1592  01231A  1144               	iorwf	(??_main+6)& (0+255),w,b
  1593  01231C  0101               	movlb	1	; () banked
  1594  01231E  1143               	iorwf	(??_main+5)& (0+255),w,b
  1595  012320  E105               	bnz	u11970
  1596  012322  0E1E               	movlw	30
  1597  012324  0101               	movlb	1	; () banked
  1598  012326  5D42               	subwf	(??_main+4)& (0+255),w,b
  1599  012328  A0D8               	btfss	status,0,c
  1600  01232A  D019               	goto	l8976
  1601  01232C                     u11970:
  1602                           
  1603                           ; BSR set to: 1
  1604                           ;RemoteCan.c: 195: pr_time_1 = time_counter;
  1605  01232C  C022  F0D4         	movff	_time_counter,_pr_time_1	;volatile
  1606  012330  C023  F0D5         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1607  012334  C024  F0D6         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1608  012338  C025  F0D7         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1609                           
  1610                           ; BSR set to: 1
  1611                           ;RemoteCan.c: 196: PORTDbits.RD7 = ~PORTDbits.RD7;
  1612  01233C  AE83               	btfss	3971,7,c	;volatile
  1613  01233E  D002               	goto	u11980
  1614  012340  0E01               	movlw	1
  1615  012342  D001               	goto	u11986
  1616  012344                     u11980:
  1617  012344  0E00               	movlw	0
  1618  012346                     u11986:
  1619  012346  0AFF               	xorlw	255
  1620  012348  0101               	movlb	1	; () banked
  1621  01234A  6F3E               	movwf	??_main& (0+255),b
  1622  01234C  0101               	movlb	1	; () banked
  1623  01234E  333E               	rrcf	??_main& (0+255),f,b
  1624  012350  333E               	rrcf	??_main& (0+255),f,b
  1625  012352  5083               	movf	3971,w,c	;volatile
  1626  012354  0101               	movlb	1	; () banked
  1627  012356  193E               	xorwf	??_main& (0+255),w,b
  1628  012358  0B7F               	andlw	-129
  1629  01235A  193E               	xorwf	??_main& (0+255),w,b
  1630  01235C  6E83               	movwf	3971,c	;volatile
  1631  01235E                     l8976:
  1632                           
  1633                           ; BSR set to: 1
  1634                           ;RemoteCan.c: 197: }
  1635                           ;RemoteCan.c: 198: PWR_Button_Polling();
  1636  01235E  ECDF  F0AE         	call	_PWR_Button_Polling	;wreg free
  1637                           
  1638                           ;RemoteCan.c: 199: delay_ms(10);
  1639  012362  0E00               	movlw	0
  1640  012364  0100               	movlb	0	; () banked
  1641  012366  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1642  012368  0E0A               	movlw	10
  1643  01236A  6F78               	movwf	delay_ms@value_ms& (0+255),b
  1644  01236C  ECE5  F0AD         	call	_delay_ms	;wreg free
  1645  012370                     l8980:
  1646  012370  A04C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1647  012372  D7AA               	goto	l8970
  1648                           
  1649                           ;RemoteCan.c: 200: }
  1650                           ;RemoteCan.c: 201: PORTDbits.RD7 = 0;
  1651  012374  9E83               	bcf	3971,7,c	;volatile
  1652                           
  1653                           ;RemoteCan.c: 202: display_refresh = 1;
  1654  012376  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1655  012378                     l8982:
  1656                           
  1657                           ;RemoteCan.c: 203: }
  1658                           ;RemoteCan.c: 205: Joystick_Polling();
  1659  012378  EC32  F0AD         	call	_Joystick_Polling	;wreg free
  1660                           
  1661                           ;RemoteCan.c: 208: if (PORTAbits.RA2 == 1) {
  1662  01237C  A480               	btfss	3968,2,c	;volatile
  1663  01237E  D004               	goto	l779
  1664                           
  1665                           ;RemoteCan.c: 209: switch_position = 0;
  1666  012380  0E00               	movlw	0
  1667  012382  0100               	movlb	0	; () banked
  1668  012384  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1669                           
  1670                           ;RemoteCan.c: 210: } else {
  1671  012386  D00D               	goto	l8992
  1672  012388                     l779:
  1673                           
  1674                           ;RemoteCan.c: 211: if (PORTAbits.RA3 == 0) {
  1675  012388  B680               	btfsc	3968,3,c	;volatile
  1676  01238A  D005               	goto	l8990
  1677                           
  1678                           ;RemoteCan.c: 212: switch_position = 1;
  1679  01238C  0E01               	movlw	1
  1680  01238E  0100               	movlb	0	; () banked
  1681  012390  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1682                           
  1683                           ;RemoteCan.c: 213: dir = 1;
  1684  012392  0E01               	movlw	1
  1685  012394  D004               	goto	L1
  1686  012396                     l8990:
  1687                           
  1688                           ;RemoteCan.c: 215: switch_position = 2;
  1689  012396  0E02               	movlw	2
  1690  012398  0100               	movlb	0	; () banked
  1691  01239A  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1692                           
  1693                           ;RemoteCan.c: 216: dir = 0;
  1694  01239C  0E00               	movlw	0
  1695  01239E                     L1:
  1696  01239E  0100               	movlb	0	; () banked
  1697  0123A0  6FE4               	movwf	_dir& (0+255),b	;volatile
  1698  0123A2                     l8992:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;RemoteCan.c: 217: }
  1702                           ;RemoteCan.c: 218: }
  1703                           ;RemoteCan.c: 221: if (F1_switch == 1) {
  1704  0123A2  A24B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1705  0123A4  D0C6               	goto	l9040
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;RemoteCan.c: 222: y = 0;
  1709  0123A6  9A4C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;RemoteCan.c: 223: if ((x < 1)&&(F2_switch == 0)) {
  1713  0123A8  0100               	movlb	0	; () banked
  1714  0123AA  51E7               	movf	_x& (0+255),w,b	;volatile
  1715  0123AC  B4D8               	btfsc	status,2,c
  1716                           
  1717                           ; BSR set to: 0
  1718  0123AE  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1719  0123B0  D02E               	goto	l9012
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;RemoteCan.c: 224: space_available = 0;
  1723  0123B2  924C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;RemoteCan.c: 225: parking_state = 1;
  1727  0123B4  0E01               	movlw	1
  1728  0123B6  0100               	movlb	0	; () banked
  1729  0123B8  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1730                           
  1731                           ;RemoteCan.c: 226: JoystickConstants[1] = 1;
  1732  0123BA  0E00               	movlw	0
  1733  0123BC  0100               	movlb	0	; () banked
  1734  0123BE  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1735  0123C0  0E00               	movlw	0
  1736  0123C2  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1737  0123C4  0E80               	movlw	128
  1738  0123C6  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1739  0123C8  0E3F               	movlw	63
  1740  0123CA  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1741  0123CC                     l9004:
  1742  0123CC  ECAD  F0AE         	call	_CANisTxReady	;wreg free
  1743  0123D0  0900               	iorlw	0
  1744  0123D2  B4D8               	btfsc	status,2,c
  1745  0123D4  D7FB               	goto	l9004
  1746                           
  1747                           ;RemoteCan.c: 228: park_assist_state[0] = 0b00000001;
  1748  0123D6  0E01               	movlw	1
  1749  0123D8  0101               	movlb	1	; () banked
  1750  0123DA  6F1B               	movwf	_park_assist_state& (0+255),b
  1751                           
  1752                           ; BSR set to: 1
  1753                           ;RemoteCan.c: 229: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1754  0123DC  0E0A               	movlw	10
  1755  0123DE  0100               	movlb	0	; () banked
  1756  0123E0  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  1757  0123E2  0E00               	movlw	0
  1758  0123E4  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1759  0123E6  0E00               	movlw	0
  1760  0123E8  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1761  0123EA  0E00               	movlw	0
  1762  0123EC  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1763  0123EE  0E1B               	movlw	low _park_assist_state
  1764  0123F0  0100               	movlb	0	; () banked
  1765  0123F2  6F76               	movwf	CANsendMessage@data& (0+255),b
  1766  0123F4  0E01               	movlw	high _park_assist_state
  1767  0123F6  0100               	movlb	0	; () banked
  1768  0123F8  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  1769  0123FA  0E08               	movlw	8
  1770  0123FC  0100               	movlb	0	; () banked
  1771  0123FE  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  1772  012400  0EBC               	movlw	188
  1773  012402  0100               	movlb	0	; () banked
  1774  012404  6F79               	movwf	CANsendMessage@flags& (0+255),b
  1775  012406  ECCD  F089         	call	_CANsendMessage	;wreg free
  1776                           
  1777                           ;RemoteCan.c: 230: x++;
  1778  01240A  0100               	movlb	0	; () banked
  1779  01240C  2BE7               	incf	_x& (0+255),f,b	;volatile
  1780  01240E                     l9012:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;RemoteCan.c: 231: }
  1784                           ;RemoteCan.c: 232: if ((time_counter - pr_time_5) >= 30) {
  1785  01240E  C01E  F13E         	movff	_pr_time_5,??_main	;volatile
  1786  012412  C01F  F13F         	movff	_pr_time_5+1,??_main+1	;volatile
  1787  012416  C020  F140         	movff	_pr_time_5+2,??_main+2	;volatile
  1788  01241A  C021  F141         	movff	_pr_time_5+3,??_main+3	;volatile
  1789  01241E  0101               	movlb	1	; () banked
  1790  012420  1F3E               	comf	??_main& (0+255),f,b
  1791  012422  1F3F               	comf	(??_main+1)& (0+255),f,b
  1792  012424  1F40               	comf	(??_main+2)& (0+255),f,b
  1793  012426  1F41               	comf	(??_main+3)& (0+255),f,b
  1794  012428  2B3E               	incf	??_main& (0+255),f,b
  1795  01242A  0E00               	movlw	0
  1796  01242C  233F               	addwfc	(??_main+1)& (0+255),f,b
  1797  01242E  2340               	addwfc	(??_main+2)& (0+255),f,b
  1798  012430  2341               	addwfc	(??_main+3)& (0+255),f,b
  1799  012432  5022               	movf	_time_counter,w,c	;volatile
  1800  012434  0101               	movlb	1	; () banked
  1801  012436  253E               	addwf	??_main& (0+255),w,b
  1802  012438  0101               	movlb	1	; () banked
  1803  01243A  6F42               	movwf	(??_main+4)& (0+255),b
  1804  01243C  5023               	movf	_time_counter+1,w,c	;volatile
  1805  01243E  0101               	movlb	1	; () banked
  1806  012440  213F               	addwfc	(??_main+1)& (0+255),w,b
  1807  012442  0101               	movlb	1	; () banked
  1808  012444  6F43               	movwf	(??_main+5)& (0+255),b
  1809  012446  5024               	movf	_time_counter+2,w,c	;volatile
  1810  012448  0101               	movlb	1	; () banked
  1811  01244A  2140               	addwfc	(??_main+2)& (0+255),w,b
  1812  01244C  0101               	movlb	1	; () banked
  1813  01244E  6F44               	movwf	(??_main+6)& (0+255),b
  1814  012450  5025               	movf	_time_counter+3,w,c	;volatile
  1815  012452  0101               	movlb	1	; () banked
  1816  012454  2141               	addwfc	(??_main+3)& (0+255),w,b
  1817  012456  0101               	movlb	1	; () banked
  1818  012458  6F45               	movwf	(??_main+7)& (0+255),b
  1819  01245A  0101               	movlb	1	; () banked
  1820  01245C  5145               	movf	(??_main+7)& (0+255),w,b
  1821  01245E  0101               	movlb	1	; () banked
  1822  012460  1144               	iorwf	(??_main+6)& (0+255),w,b
  1823  012462  0101               	movlb	1	; () banked
  1824  012464  1143               	iorwf	(??_main+5)& (0+255),w,b
  1825  012466  E105               	bnz	u12060
  1826  012468  0E1E               	movlw	30
  1827  01246A  0101               	movlb	1	; () banked
  1828  01246C  5D42               	subwf	(??_main+4)& (0+255),w,b
  1829  01246E  A0D8               	btfss	status,0,c
  1830  012470  D030               	goto	l9022
  1831  012472                     u12060:
  1832                           
  1833                           ; BSR set to: 1
  1834                           ;RemoteCan.c: 233: pr_time_5 = time_counter;
  1835  012472  C022  F01E         	movff	_time_counter,_pr_time_5	;volatile
  1836  012476  C023  F01F         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1837  01247A  C024  F020         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1838  01247E  C025  F021         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1839                           
  1840                           ;RemoteCan.c: 234: if (space_available == 0) {
  1841  012482  B24C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1842  012484  D014               	goto	l789
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;RemoteCan.c: 235: PORTDbits.RD6 = ~PORTDbits.RD6;
  1846  012486  AC83               	btfss	3971,6,c	;volatile
  1847  012488  D002               	goto	u12080
  1848  01248A  0E01               	movlw	1
  1849  01248C  D001               	goto	u12086
  1850  01248E                     u12080:
  1851  01248E  0E00               	movlw	0
  1852  012490                     u12086:
  1853  012490  0AFF               	xorlw	255
  1854  012492  0101               	movlb	1	; () banked
  1855  012494  6F3E               	movwf	??_main& (0+255),b
  1856  012496  0101               	movlb	1	; () banked
  1857  012498  3B3E               	swapf	??_main& (0+255),f,b
  1858  01249A  473E               	rlncf	??_main& (0+255),f,b
  1859  01249C  473E               	rlncf	??_main& (0+255),f,b
  1860  01249E  5083               	movf	3971,w,c	;volatile
  1861  0124A0  0101               	movlb	1	; () banked
  1862  0124A2  193E               	xorwf	??_main& (0+255),w,b
  1863  0124A4  0BBF               	andlw	-65
  1864  0124A6  193E               	xorwf	??_main& (0+255),w,b
  1865  0124A8  6E83               	movwf	3971,c	;volatile
  1866                           
  1867                           ; BSR set to: 1
  1868                           ;RemoteCan.c: 236: PORTDbits.RD5 = 0;
  1869  0124AA  9A83               	bcf	3971,5,c	;volatile
  1870                           
  1871                           ;RemoteCan.c: 237: } else {
  1872  0124AC  D012               	goto	l9022
  1873  0124AE                     l789:
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;RemoteCan.c: 238: PORTDbits.RD6 = 1;
  1877  0124AE  8C83               	bsf	3971,6,c	;volatile
  1878                           
  1879                           ; BSR set to: 1
  1880                           ;RemoteCan.c: 239: PORTDbits.RD5 = ~PORTDbits.RD5;
  1881  0124B0  AA83               	btfss	3971,5,c	;volatile
  1882  0124B2  D002               	goto	u12090
  1883  0124B4  0E01               	movlw	1
  1884  0124B6  D001               	goto	u12096
  1885  0124B8                     u12090:
  1886  0124B8  0E00               	movlw	0
  1887  0124BA                     u12096:
  1888  0124BA  0AFF               	xorlw	255
  1889  0124BC  0101               	movlb	1	; () banked
  1890  0124BE  6F3E               	movwf	??_main& (0+255),b
  1891  0124C0  0101               	movlb	1	; () banked
  1892  0124C2  3B3E               	swapf	??_main& (0+255),f,b
  1893  0124C4  473E               	rlncf	??_main& (0+255),f,b
  1894  0124C6  5083               	movf	3971,w,c	;volatile
  1895  0124C8  0101               	movlb	1	; () banked
  1896  0124CA  193E               	xorwf	??_main& (0+255),w,b
  1897  0124CC  0BDF               	andlw	-33
  1898  0124CE  193E               	xorwf	??_main& (0+255),w,b
  1899  0124D0  6E83               	movwf	3971,c	;volatile
  1900  0124D2                     l9022:
  1901                           
  1902                           ; BSR set to: 1
  1903                           ;RemoteCan.c: 240: }
  1904                           ;RemoteCan.c: 241: }
  1905                           ;RemoteCan.c: 243: if ((F2_switch == 1)&&(space_available == 1)) {
  1906  0124D2  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1907                           
  1908                           ; BSR set to: 1
  1909  0124D4  A24C               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1910  0124D6  D029               	goto	l9038
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;RemoteCan.c: 244: if (z < 1) {
  1914  0124D8  0100               	movlb	0	; () banked
  1915  0124DA  51E8               	movf	_z& (0+255),w,b	;volatile
  1916  0124DC  A4D8               	btfss	status,2,c
  1917  0124DE  D062               	goto	l9064
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;RemoteCan.c: 245: parking_state = 2;
  1921  0124E0  0E02               	movlw	2
  1922  0124E2  0100               	movlb	0	; () banked
  1923  0124E4  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1924  0124E6                     l9030:
  1925  0124E6  ECAD  F0AE         	call	_CANisTxReady	;wreg free
  1926  0124EA  0900               	iorlw	0
  1927  0124EC  B4D8               	btfsc	status,2,c
  1928  0124EE  D7FB               	goto	l9030
  1929                           
  1930                           ;RemoteCan.c: 247: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1931  0124F0  0E0C               	movlw	12
  1932  0124F2  0100               	movlb	0	; () banked
  1933  0124F4  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  1934  0124F6  0E00               	movlw	0
  1935  0124F8  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1936  0124FA  0E00               	movlw	0
  1937  0124FC  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1938  0124FE  0E00               	movlw	0
  1939  012500  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1940  012502  0E2C               	movlw	low _data
  1941  012504  0100               	movlb	0	; () banked
  1942  012506  6F76               	movwf	CANsendMessage@data& (0+255),b
  1943  012508  0E00               	movlw	high _data
  1944  01250A  0100               	movlb	0	; () banked
  1945  01250C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  1946  01250E  0E08               	movlw	8
  1947  012510  0100               	movlb	0	; () banked
  1948  012512  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  1949  012514  0EBC               	movlw	188
  1950  012516  0100               	movlb	0	; () banked
  1951  012518  6F79               	movwf	CANsendMessage@flags& (0+255),b
  1952  01251A  ECCD  F089         	call	_CANsendMessage	;wreg free
  1953                           
  1954                           ;RemoteCan.c: 248: x = 0;
  1955  01251E  0E00               	movlw	0
  1956  012520  0100               	movlb	0	; () banked
  1957  012522  6FE7               	movwf	_x& (0+255),b	;volatile
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;RemoteCan.c: 249: z++;
  1961  012524  0100               	movlb	0	; () banked
  1962  012526  2BE8               	incf	_z& (0+255),f,b	;volatile
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;RemoteCan.c: 250: }
  1966                           ;RemoteCan.c: 251: } else {
  1967  012528  D03D               	goto	l9064
  1968  01252A                     l9038:
  1969                           
  1970                           ;RemoteCan.c: 252: z = 0;
  1971  01252A  0E00               	movlw	0
  1972  01252C  0100               	movlb	0	; () banked
  1973  01252E  6FE8               	movwf	_z& (0+255),b	;volatile
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;RemoteCan.c: 253: }
  1977                           ;RemoteCan.c: 254: } else {
  1978  012530  D039               	goto	l9064
  1979  012532                     l9040:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;RemoteCan.c: 255: x = 0;
  1983  012532  0E00               	movlw	0
  1984  012534  0100               	movlb	0	; () banked
  1985  012536  6FE7               	movwf	_x& (0+255),b	;volatile
  1986                           
  1987                           ;RemoteCan.c: 256: z = 0;
  1988  012538  0E00               	movlw	0
  1989  01253A  0100               	movlb	0	; () banked
  1990  01253C  6FE8               	movwf	_z& (0+255),b	;volatile
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;RemoteCan.c: 257: F2_switch = 0;
  1994  01253E  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;RemoteCan.c: 258: PORTDbits.RD5 = 0;
  1998  012540  9A83               	bcf	3971,5,c	;volatile
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;RemoteCan.c: 259: PORTDbits.RD6 = 0;
  2002  012542  9C83               	bcf	3971,6,c	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;RemoteCan.c: 260: if (y == 0) {
  2006  012544  BA4C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2007  012546  D02C               	goto	l9060
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;RemoteCan.c: 261: parking_state = 0;
  2011  012548  0E00               	movlw	0
  2012  01254A  0100               	movlb	0	; () banked
  2013  01254C  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2014                           
  2015                           ;RemoteCan.c: 262: JoystickConstants[1] = 15;
  2016  01254E  0E00               	movlw	0
  2017  012550  0100               	movlb	0	; () banked
  2018  012552  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2019  012554  0E00               	movlw	0
  2020  012556  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2021  012558  0E70               	movlw	112
  2022  01255A  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2023  01255C  0E41               	movlw	65
  2024  01255E  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2025  012560                     l9052:
  2026  012560  ECAD  F0AE         	call	_CANisTxReady	;wreg free
  2027  012564  0900               	iorlw	0
  2028  012566  B4D8               	btfsc	status,2,c
  2029  012568  D7FB               	goto	l9052
  2030                           
  2031                           ;RemoteCan.c: 264: park_assist_state[0] = 0b00000000;
  2032  01256A  0E00               	movlw	0
  2033  01256C  0101               	movlb	1	; () banked
  2034  01256E  6F1B               	movwf	_park_assist_state& (0+255),b
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;RemoteCan.c: 265: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2038  012570  0E0A               	movlw	10
  2039  012572  0100               	movlb	0	; () banked
  2040  012574  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2041  012576  0E00               	movlw	0
  2042  012578  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2043  01257A  0E00               	movlw	0
  2044  01257C  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2045  01257E  0E00               	movlw	0
  2046  012580  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2047  012582  0E1B               	movlw	low _park_assist_state
  2048  012584  0100               	movlb	0	; () banked
  2049  012586  6F76               	movwf	CANsendMessage@data& (0+255),b
  2050  012588  0E01               	movlw	high _park_assist_state
  2051  01258A  0100               	movlb	0	; () banked
  2052  01258C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2053  01258E  0E08               	movlw	8
  2054  012590  0100               	movlb	0	; () banked
  2055  012592  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2056  012594  0EBC               	movlw	188
  2057  012596  0100               	movlb	0	; () banked
  2058  012598  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2059  01259A  ECCD  F089         	call	_CANsendMessage	;wreg free
  2060                           
  2061                           ;RemoteCan.c: 266: y = 1;
  2062  01259E  8A4C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2063  0125A0                     l9060:
  2064                           
  2065                           ;RemoteCan.c: 267: }
  2066                           ;RemoteCan.c: 268: PORTDbits.RD6 = 0;
  2067  0125A0  9C83               	bcf	3971,6,c	;volatile
  2068                           
  2069                           ;RemoteCan.c: 269: PORTDbits.RD5 = 0;
  2070  0125A2  9A83               	bcf	3971,5,c	;volatile
  2071  0125A4                     l9064:
  2072                           
  2073                           ;RemoteCan.c: 270: }
  2074                           ;RemoteCan.c: 272: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2075  0125A4  0E00               	movlw	0
  2076  0125A6  0100               	movlb	0	; () banked
  2077  0125A8  6FAA               	movwf	___fladd@a& (0+255),b
  2078  0125AA  0E00               	movlw	0
  2079  0125AC  6FAB               	movwf	(___fladd@a+1)& (0+255),b
  2080  0125AE  0E34               	movlw	52
  2081  0125B0  6FAC               	movwf	(___fladd@a+2)& (0+255),b
  2082  0125B2  0E43               	movlw	67
  2083  0125B4  6FAD               	movwf	(___fladd@a+3)& (0+255),b
  2084  0125B6  C0CC  F084         	movff	_JoystickConstants,___flmul@a	;volatile
  2085  0125BA  C0CD  F085         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2086  0125BE  C0CE  F086         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2087  0125C2  C0CF  F087         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2088  0125C6  0100               	movlb	0	; () banked
  2089  0125C8  51DC               	movf	_JoystickValues& (0+255),w,b	;volatile
  2090  0125CA  0100               	movlb	0	; () banked
  2091  0125CC  6F72               	movwf	___xxtofl@val& (0+255),b
  2092  0125CE  6B73               	clrf	(___xxtofl@val+1)& (0+255),b
  2093  0125D0  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  2094  0125D2  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  2095  0125D4  0E00               	movlw	0
  2096  0125D6  ECFF  F0A3         	call	___xxtofl
  2097  0125DA  C072  F080         	movff	?___xxtofl,___flmul@b
  2098  0125DE  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2099  0125E2  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2100  0125E6  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2101  0125EA  EC8A  F09B         	call	___flmul	;wreg free
  2102  0125EE  C080  F099         	movff	?___flmul,___flneg@f1
  2103  0125F2  C081  F09A         	movff	?___flmul+1,___flneg@f1+1
  2104  0125F6  C082  F09B         	movff	?___flmul+2,___flneg@f1+2
  2105  0125FA  C083  F09C         	movff	?___flmul+3,___flneg@f1+3
  2106  0125FE  EC02  F0AE         	call	___flneg	;wreg free
  2107  012602  C099  F0A6         	movff	?___flneg,___fladd@b
  2108  012606  C09A  F0A7         	movff	?___flneg+1,___fladd@b+1
  2109  01260A  C09B  F0A8         	movff	?___flneg+2,___fladd@b+2
  2110  01260E  C09C  F0A9         	movff	?___flneg+3,___fladd@b+3
  2111  012612  EC36  F099         	call	___fladd	;wreg free
  2112  012616  C0A6  F0BA         	movff	?___fladd,___fltol@f1
  2113  01261A  C0A7  F0BB         	movff	?___fladd+1,___fltol@f1+1
  2114  01261E  C0A8  F0BC         	movff	?___fladd+2,___fltol@f1+2
  2115  012622  C0A9  F0BD         	movff	?___fladd+3,___fltol@f1+3
  2116  012626  EC8C  F0A9         	call	___fltol	;wreg free
  2117  01262A  0100               	movlb	0	; () banked
  2118  01262C  51BA               	movf	?___fltol& (0+255),w,b
  2119  01262E  0100               	movlb	0	; () banked
  2120  012630  6FEB               	movwf	_data_steering& (0+255),b
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;RemoteCan.c: 273: if (switch_position != 0) {
  2124  012632  0100               	movlb	0	; () banked
  2125  012634  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  2126  012636  B4D8               	btfsc	status,2,c
  2127  012638  D088               	goto	l9078
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;RemoteCan.c: 274: if (JoystickValues[1] > 132) {
  2131  01263A  0E84               	movlw	132
  2132  01263C  0100               	movlb	0	; () banked
  2133  01263E  65DD               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2134  012640  D042               	goto	l9074
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;RemoteCan.c: 275: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2138  012642  C0D0  F084         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2139  012646  C0D1  F085         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2140  01264A  C0D2  F086         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2141  01264E  C0D3  F087         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2142  012652  0E7E               	movlw	126
  2143  012654  0101               	movlb	1	; () banked
  2144  012656  6F3E               	movwf	??_main& (0+255),b
  2145  012658  0EFF               	movlw	255
  2146  01265A  0101               	movlb	1	; () banked
  2147  01265C  6F3F               	movwf	(??_main+1)& (0+255),b
  2148  01265E  0100               	movlb	0	; () banked
  2149  012660  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2150  012662  0101               	movlb	1	; () banked
  2151  012664  6F40               	movwf	(??_main+2)& (0+255),b
  2152  012666  6B41               	clrf	(??_main+3)& (0+255),b
  2153  012668  0101               	movlb	1	; () banked
  2154  01266A  513E               	movf	??_main& (0+255),w,b
  2155  01266C  0101               	movlb	1	; () banked
  2156  01266E  2740               	addwf	(??_main+2)& (0+255),f,b
  2157  012670  0101               	movlb	1	; () banked
  2158  012672  513F               	movf	(??_main+1)& (0+255),w,b
  2159  012674  0101               	movlb	1	; () banked
  2160  012676  2341               	addwfc	(??_main+3)& (0+255),f,b
  2161  012678  C140  F072         	movff	??_main+2,___xxtofl@val
  2162  01267C  C141  F073         	movff	??_main+3,___xxtofl@val+1
  2163  012680  0100               	movlb	0	; () banked
  2164  012682  0E00               	movlw	0
  2165  012684  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2166  012686  0EFF               	movlw	-1
  2167  012688  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2168  01268A  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2169  01268C  0E01               	movlw	1
  2170  01268E  ECFF  F0A3         	call	___xxtofl
  2171  012692  C072  F080         	movff	?___xxtofl,___flmul@b
  2172  012696  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2173  01269A  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2174  01269E  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2175  0126A2  EC8A  F09B         	call	___flmul	;wreg free
  2176  0126A6  C080  F0BA         	movff	?___flmul,___fltol@f1
  2177  0126AA  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2178  0126AE  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2179  0126B2  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2180  0126B6  EC8C  F0A9         	call	___fltol	;wreg free
  2181  0126BA  C0BA  F0E2         	movff	?___fltol,_set_speed	;volatile
  2182  0126BE  C0BB  F0E3         	movff	?___fltol+1,_set_speed+1	;volatile
  2183                           
  2184                           ;RemoteCan.c: 276: data_brake [0] = 0;
  2185  0126C2  0E00               	movlw	0
  2186  0126C4  D040               	goto	L2
  2187  0126C6                     l9074:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;RemoteCan.c: 278: set_speed = 0;
  2191  0126C6  0E00               	movlw	0
  2192  0126C8  0100               	movlb	0	; () banked
  2193  0126CA  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2194  0126CC  0E00               	movlw	0
  2195  0126CE  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;RemoteCan.c: 279: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2199  0126D0  0E33               	movlw	51
  2200  0126D2  0100               	movlb	0	; () banked
  2201  0126D4  6F84               	movwf	___flmul@a& (0+255),b
  2202  0126D6  0E33               	movlw	51
  2203  0126D8  6F85               	movwf	(___flmul@a+1)& (0+255),b
  2204  0126DA  0EF3               	movlw	243
  2205  0126DC  6F86               	movwf	(___flmul@a+2)& (0+255),b
  2206  0126DE  0E3F               	movlw	63
  2207  0126E0  6F87               	movwf	(___flmul@a+3)& (0+255),b
  2208  0126E2  0100               	movlb	0	; () banked
  2209  0126E4  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2210  0126E6  0101               	movlb	1	; () banked
  2211  0126E8  6F3E               	movwf	??_main& (0+255),b
  2212  0126EA  6B3F               	clrf	(??_main+1)& (0+255),b
  2213  0126EC  0101               	movlb	1	; () banked
  2214  0126EE  1F3E               	comf	??_main& (0+255),f,b
  2215  0126F0  1F3F               	comf	(??_main+1)& (0+255),f,b
  2216  0126F2  4B3E               	infsnz	??_main& (0+255),f,b
  2217  0126F4  2B3F               	incf	(??_main+1)& (0+255),f,b
  2218  0126F6  0E82               	movlw	130
  2219  0126F8  0101               	movlb	1	; () banked
  2220  0126FA  273E               	addwf	??_main& (0+255),f,b
  2221  0126FC  0E00               	movlw	0
  2222  0126FE  233F               	addwfc	(??_main+1)& (0+255),f,b
  2223  012700  C13E  F072         	movff	??_main,___xxtofl@val
  2224  012704  C13F  F073         	movff	??_main+1,___xxtofl@val+1
  2225  012708  0100               	movlb	0	; () banked
  2226  01270A  0E00               	movlw	0
  2227  01270C  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2228  01270E  0EFF               	movlw	-1
  2229  012710  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2230  012712  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2231  012714  0E01               	movlw	1
  2232  012716  ECFF  F0A3         	call	___xxtofl
  2233  01271A  C072  F080         	movff	?___xxtofl,___flmul@b
  2234  01271E  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2235  012722  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2236  012726  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2237  01272A  EC8A  F09B         	call	___flmul	;wreg free
  2238  01272E  C080  F0BA         	movff	?___flmul,___fltol@f1
  2239  012732  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2240  012736  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2241  01273A  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2242  01273E  EC8C  F0A9         	call	___fltol	;wreg free
  2243  012742  0100               	movlb	0	; () banked
  2244  012744  51BA               	movf	?___fltol& (0+255),w,b
  2245  012746                     L2:
  2246  012746  0100               	movlb	0	; () banked
  2247  012748  6FE9               	movwf	_data_brake& (0+255),b
  2248  01274A                     l9078:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;RemoteCan.c: 280: }
  2252                           ;RemoteCan.c: 281: }
  2253                           ;RemoteCan.c: 283: if (newMessageCan == 1) {
  2254  01274A  AE4B               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2255  01274C  D003               	goto	l9084
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;RemoteCan.c: 284: CAN_interpreter();
  2259  01274E  ECA2  F0AB         	call	_CAN_interpreter	;wreg free
  2260                           
  2261                           ;RemoteCan.c: 285: newMessageCan = 0;
  2262  012752  9E4B               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2263  012754                     l9084:
  2264                           
  2265                           ;RemoteCan.c: 286: }
  2266                           ;RemoteCan.c: 288: if ((time_counter - pr_time_2) >= 2) {
  2267  012754  C0D8  F13E         	movff	_pr_time_2,??_main	;volatile
  2268  012758  C0D9  F13F         	movff	_pr_time_2+1,??_main+1	;volatile
  2269  01275C  C0DA  F140         	movff	_pr_time_2+2,??_main+2	;volatile
  2270  012760  C0DB  F141         	movff	_pr_time_2+3,??_main+3	;volatile
  2271  012764  0101               	movlb	1	; () banked
  2272  012766  1F3E               	comf	??_main& (0+255),f,b
  2273  012768  1F3F               	comf	(??_main+1)& (0+255),f,b
  2274  01276A  1F40               	comf	(??_main+2)& (0+255),f,b
  2275  01276C  1F41               	comf	(??_main+3)& (0+255),f,b
  2276  01276E  2B3E               	incf	??_main& (0+255),f,b
  2277  012770  0E00               	movlw	0
  2278  012772  233F               	addwfc	(??_main+1)& (0+255),f,b
  2279  012774  2340               	addwfc	(??_main+2)& (0+255),f,b
  2280  012776  2341               	addwfc	(??_main+3)& (0+255),f,b
  2281  012778  5022               	movf	_time_counter,w,c	;volatile
  2282  01277A  0101               	movlb	1	; () banked
  2283  01277C  253E               	addwf	??_main& (0+255),w,b
  2284  01277E  0101               	movlb	1	; () banked
  2285  012780  6F42               	movwf	(??_main+4)& (0+255),b
  2286  012782  5023               	movf	_time_counter+1,w,c	;volatile
  2287  012784  0101               	movlb	1	; () banked
  2288  012786  213F               	addwfc	(??_main+1)& (0+255),w,b
  2289  012788  0101               	movlb	1	; () banked
  2290  01278A  6F43               	movwf	(??_main+5)& (0+255),b
  2291  01278C  5024               	movf	_time_counter+2,w,c	;volatile
  2292  01278E  0101               	movlb	1	; () banked
  2293  012790  2140               	addwfc	(??_main+2)& (0+255),w,b
  2294  012792  0101               	movlb	1	; () banked
  2295  012794  6F44               	movwf	(??_main+6)& (0+255),b
  2296  012796  5025               	movf	_time_counter+3,w,c	;volatile
  2297  012798  0101               	movlb	1	; () banked
  2298  01279A  2141               	addwfc	(??_main+3)& (0+255),w,b
  2299  01279C  0101               	movlb	1	; () banked
  2300  01279E  6F45               	movwf	(??_main+7)& (0+255),b
  2301  0127A0  0101               	movlb	1	; () banked
  2302  0127A2  5145               	movf	(??_main+7)& (0+255),w,b
  2303  0127A4  0101               	movlb	1	; () banked
  2304  0127A6  1144               	iorwf	(??_main+6)& (0+255),w,b
  2305  0127A8  0101               	movlb	1	; () banked
  2306  0127AA  1143               	iorwf	(??_main+5)& (0+255),w,b
  2307  0127AC  E105               	bnz	u12190
  2308  0127AE  0E02               	movlw	2
  2309  0127B0  0101               	movlb	1	; () banked
  2310  0127B2  5D42               	subwf	(??_main+4)& (0+255),w,b
  2311  0127B4  A0D8               	btfss	status,0,c
  2312  0127B6  D00A               	goto	l9090
  2313  0127B8                     u12190:
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;RemoteCan.c: 289: pr_time_2 = time_counter;
  2317  0127B8  C022  F0D8         	movff	_time_counter,_pr_time_2	;volatile
  2318  0127BC  C023  F0D9         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2319  0127C0  C024  F0DA         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2320  0127C4  C025  F0DB         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;RemoteCan.c: 290: CAN_Send();
  2324  0127C8  EC45  F0AB         	call	_CAN_Send	;wreg free
  2325  0127CC                     l9090:
  2326                           
  2327                           ;RemoteCan.c: 291: }
  2328                           ;RemoteCan.c: 293: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2329  0127CC  C016  F13E         	movff	_pr_time_3,??_main	;volatile
  2330  0127D0  C017  F13F         	movff	_pr_time_3+1,??_main+1	;volatile
  2331  0127D4  C018  F140         	movff	_pr_time_3+2,??_main+2	;volatile
  2332  0127D8  C019  F141         	movff	_pr_time_3+3,??_main+3	;volatile
  2333  0127DC  0101               	movlb	1	; () banked
  2334  0127DE  1F3E               	comf	??_main& (0+255),f,b
  2335  0127E0  1F3F               	comf	(??_main+1)& (0+255),f,b
  2336  0127E2  1F40               	comf	(??_main+2)& (0+255),f,b
  2337  0127E4  1F41               	comf	(??_main+3)& (0+255),f,b
  2338  0127E6  2B3E               	incf	??_main& (0+255),f,b
  2339  0127E8  0E00               	movlw	0
  2340  0127EA  233F               	addwfc	(??_main+1)& (0+255),f,b
  2341  0127EC  2340               	addwfc	(??_main+2)& (0+255),f,b
  2342  0127EE  2341               	addwfc	(??_main+3)& (0+255),f,b
  2343  0127F0  5022               	movf	_time_counter,w,c	;volatile
  2344  0127F2  0101               	movlb	1	; () banked
  2345  0127F4  253E               	addwf	??_main& (0+255),w,b
  2346  0127F6  0101               	movlb	1	; () banked
  2347  0127F8  6F42               	movwf	(??_main+4)& (0+255),b
  2348  0127FA  5023               	movf	_time_counter+1,w,c	;volatile
  2349  0127FC  0101               	movlb	1	; () banked
  2350  0127FE  213F               	addwfc	(??_main+1)& (0+255),w,b
  2351  012800  0101               	movlb	1	; () banked
  2352  012802  6F43               	movwf	(??_main+5)& (0+255),b
  2353  012804  5024               	movf	_time_counter+2,w,c	;volatile
  2354  012806  0101               	movlb	1	; () banked
  2355  012808  2140               	addwfc	(??_main+2)& (0+255),w,b
  2356  01280A  0101               	movlb	1	; () banked
  2357  01280C  6F44               	movwf	(??_main+6)& (0+255),b
  2358  01280E  5025               	movf	_time_counter+3,w,c	;volatile
  2359  012810  0101               	movlb	1	; () banked
  2360  012812  2141               	addwfc	(??_main+3)& (0+255),w,b
  2361  012814  0101               	movlb	1	; () banked
  2362  012816  6F45               	movwf	(??_main+7)& (0+255),b
  2363  012818  0101               	movlb	1	; () banked
  2364  01281A  5145               	movf	(??_main+7)& (0+255),w,b
  2365  01281C  0101               	movlb	1	; () banked
  2366  01281E  1144               	iorwf	(??_main+6)& (0+255),w,b
  2367  012820  0101               	movlb	1	; () banked
  2368  012822  1143               	iorwf	(??_main+5)& (0+255),w,b
  2369  012824  E105               	bnz	u12200
  2370  012826  0E0A               	movlw	10
  2371  012828  0101               	movlb	1	; () banked
  2372  01282A  5D42               	subwf	(??_main+4)& (0+255),w,b
  2373  01282C  A0D8               	btfss	status,0,c
  2374  01282E  D4FF               	goto	l8936
  2375  012830                     u12200:
  2376                           
  2377                           ; BSR set to: 1
  2378                           ;RemoteCan.c: 294: pr_time_3 = time_counter;
  2379  012830  C022  F016         	movff	_time_counter,_pr_time_3	;volatile
  2380  012834  C023  F017         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2381  012838  C024  F018         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2382  01283C  C025  F019         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2383                           
  2384                           ; BSR set to: 1
  2385                           ;RemoteCan.c: 295: LCD_Handler();
  2386  012840  EC07  F0A3         	call	_LCD_Handler	;wreg free
  2387  012844  D4F4               	goto	l8936
  2388  012846                     __end_of_main:
  2389                           	opt stack 0
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           status	equ	0xFD8
  2397                           
  2398 ;; *************** function _board_initialization *****************
  2399 ;; Defined at:
  2400 ;;		line 442 in file "RemoteCan.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;		None               void
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    9
  2421 ;; This function calls:
  2422 ;;		_CANInitialize
  2423 ;;		_LCD_clear
  2424 ;;		_LCD_goto_line
  2425 ;;		_LCD_initialize
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text1
  2432  0157EE                     __ptext1:
  2433                           	opt stack 0
  2434  0157EE                     _board_initialization:
  2435                           	opt stack 21
  2436                           
  2437                           ;RemoteCan.c: 444: LATA = 0x00;
  2438                           
  2439                           ;incstack = 0
  2440  0157EE  0E00               	movlw	0
  2441  0157F0  6E89               	movwf	3977,c	;volatile
  2442                           
  2443                           ;RemoteCan.c: 445: TRISA = 0b00011111;
  2444  0157F2  0E1F               	movlw	31
  2445  0157F4  6E92               	movwf	3986,c	;volatile
  2446                           
  2447                           ;RemoteCan.c: 446: LATB = 0x00;
  2448  0157F6  0E00               	movlw	0
  2449  0157F8  6E8A               	movwf	3978,c	;volatile
  2450                           
  2451                           ;RemoteCan.c: 447: TRISB = 0b11111011;
  2452  0157FA  0EFB               	movlw	251
  2453  0157FC  6E93               	movwf	3987,c	;volatile
  2454                           
  2455                           ;RemoteCan.c: 448: LATC = 0x00;
  2456  0157FE  0E00               	movlw	0
  2457  015800  6E8B               	movwf	3979,c	;volatile
  2458                           
  2459                           ;RemoteCan.c: 449: TRISC = 0b11110000;
  2460  015802  0EF0               	movlw	240
  2461  015804  6E94               	movwf	3988,c	;volatile
  2462                           
  2463                           ;RemoteCan.c: 450: LATD = 0x00;
  2464  015806  0E00               	movlw	0
  2465  015808  6E8C               	movwf	3980,c	;volatile
  2466                           
  2467                           ;RemoteCan.c: 451: TRISD = 0x00;
  2468  01580A  0E00               	movlw	0
  2469  01580C  6E95               	movwf	3989,c	;volatile
  2470                           
  2471                           ;RemoteCan.c: 452: LATE = 0x00;
  2472  01580E  0E00               	movlw	0
  2473  015810  6E8D               	movwf	3981,c	;volatile
  2474                           
  2475                           ;RemoteCan.c: 453: TRISE = 0x00;
  2476  015812  0E00               	movlw	0
  2477  015814  6E96               	movwf	3990,c	;volatile
  2478                           
  2479                           ;RemoteCan.c: 455: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2480  015816  0E06               	movlw	6
  2481  015818  0100               	movlb	0	; () banked
  2482  01581A  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2483  01581C  0E05               	movlw	5
  2484  01581E  0100               	movlb	0	; () banked
  2485  015820  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2486  015822  0E01               	movlw	1
  2487  015824  0100               	movlb	0	; () banked
  2488  015826  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2489  015828  0E03               	movlw	3
  2490  01582A  0100               	movlb	0	; () banked
  2491  01582C  6F83               	movwf	CANInitialize@BRP& (0+255),b
  2492  01582E  0E9D               	movlw	157
  2493  015830  0100               	movlb	0	; () banked
  2494  015832  6F84               	movwf	CANInitialize@flags& (0+255),b
  2495  015834  0E04               	movlw	4
  2496  015836  ECE6  F0A4         	call	_CANInitialize
  2497                           
  2498                           ;RemoteCan.c: 459: PIR2bits.TMR3IF = 0;
  2499  01583A  92A1               	bcf	4001,1,c	;volatile
  2500                           
  2501                           ;RemoteCan.c: 460: PIR3bits.RXB1IF = 0;
  2502  01583C  92A4               	bcf	4004,1,c	;volatile
  2503                           
  2504                           ;RemoteCan.c: 461: PIR3bits.RXB0IF = 0;
  2505  01583E  90A4               	bcf	4004,0,c	;volatile
  2506                           
  2507                           ;RemoteCan.c: 464: RCONbits.IPEN = 1;
  2508  015840  8ED0               	bsf	4048,7,c	;volatile
  2509                           
  2510                           ;RemoteCan.c: 465: IPR3bits.RXB1IP = 1;
  2511  015842  82A5               	bsf	4005,1,c	;volatile
  2512                           
  2513                           ;RemoteCan.c: 466: IPR3bits.RXB0IP = 1;
  2514  015844  80A5               	bsf	4005,0,c	;volatile
  2515                           
  2516                           ;RemoteCan.c: 467: IPR2bits.TMR3IP = 0;
  2517  015846  92A2               	bcf	4002,1,c	;volatile
  2518                           
  2519                           ;RemoteCan.c: 470: ADCON1 = 0b00001101;
  2520  015848  0E0D               	movlw	13
  2521  01584A  6EC1               	movwf	4033,c	;volatile
  2522                           
  2523                           ;RemoteCan.c: 471: ADCON0bits.CHS2 = 0;
  2524  01584C  98C2               	bcf	4034,4,c	;volatile
  2525                           
  2526                           ;RemoteCan.c: 472: ADCON0bits.CHS1 = 0;
  2527  01584E  96C2               	bcf	4034,3,c	;volatile
  2528                           
  2529                           ;RemoteCan.c: 473: ADCON0bits.CHS0 = 0;
  2530  015850  94C2               	bcf	4034,2,c	;volatile
  2531                           
  2532                           ;RemoteCan.c: 474: ADCON2bits.ACQT2 = 1;
  2533  015852  8AC0               	bsf	4032,5,c	;volatile
  2534                           
  2535                           ;RemoteCan.c: 475: ADCON2bits.ACQT1 = 1;
  2536  015854  88C0               	bsf	4032,4,c	;volatile
  2537                           
  2538                           ;RemoteCan.c: 476: ADCON2bits.ACQT0 = 0;
  2539  015856  96C0               	bcf	4032,3,c	;volatile
  2540                           
  2541                           ;RemoteCan.c: 477: ADCON2bits.ADCS2 = 1;
  2542  015858  84C0               	bsf	4032,2,c	;volatile
  2543                           
  2544                           ;RemoteCan.c: 478: ADCON2bits.ADCS1 = 0;
  2545  01585A  92C0               	bcf	4032,1,c	;volatile
  2546                           
  2547                           ;RemoteCan.c: 479: ADCON2bits.ADCS0 = 1;
  2548  01585C  80C0               	bsf	4032,0,c	;volatile
  2549                           
  2550                           ;RemoteCan.c: 480: ADCON2bits.ADFM = 0;
  2551  01585E  9EC0               	bcf	4032,7,c	;volatile
  2552                           
  2553                           ;RemoteCan.c: 481: ADCON0bits.ADON = 1;
  2554  015860  80C2               	bsf	4034,0,c	;volatile
  2555                           
  2556                           ;RemoteCan.c: 484: LCD_initialize(16);
  2557  015862  0E10               	movlw	16
  2558  015864  EC24  F0A8         	call	_LCD_initialize
  2559                           
  2560                           ;RemoteCan.c: 486: LCD_clear();
  2561  015868  EC6C  F0AE         	call	_LCD_clear	;wreg free
  2562                           
  2563                           ;RemoteCan.c: 487: LCD_goto_line(1);
  2564  01586C  0E01               	movlw	1
  2565  01586E  EC12  F0AA         	call	_LCD_goto_line
  2566                           
  2567                           ;RemoteCan.c: 491: PORTDbits.RD2 = 0;
  2568  015872  9483               	bcf	3971,2,c	;volatile
  2569                           
  2570                           ;RemoteCan.c: 492: PORTDbits.RD3 = 0;
  2571  015874  9683               	bcf	3971,3,c	;volatile
  2572                           
  2573                           ;RemoteCan.c: 495: TMR3H = 0x63;
  2574  015876  0E63               	movlw	99
  2575  015878  6EB3               	movwf	4019,c	;volatile
  2576                           
  2577                           ;RemoteCan.c: 496: TMR3L = 0xC0;
  2578  01587A  0EC0               	movlw	192
  2579  01587C  6EB2               	movwf	4018,c	;volatile
  2580                           
  2581                           ;RemoteCan.c: 499: PIE3bits.RXB1IE = 1;
  2582  01587E  82A3               	bsf	4003,1,c	;volatile
  2583                           
  2584                           ;RemoteCan.c: 500: PIE3bits.RXB0IE = 1;
  2585  015880  80A3               	bsf	4003,0,c	;volatile
  2586                           
  2587                           ;RemoteCan.c: 501: PIE2bits.TMR3IE = 1;
  2588  015882  82A0               	bsf	4000,1,c	;volatile
  2589                           
  2590                           ;RemoteCan.c: 504: T3CON = 0x01;
  2591  015884  0E01               	movlw	1
  2592  015886  6EB1               	movwf	4017,c	;volatile
  2593                           
  2594                           ;RemoteCan.c: 505: LCD_clear();
  2595  015888  EC6C  F0AE         	call	_LCD_clear	;wreg free
  2596                           
  2597                           ;RemoteCan.c: 506: INTCONbits.GIEH = 1;
  2598  01588C  8EF2               	bsf	intcon,7,c	;volatile
  2599                           
  2600                           ;RemoteCan.c: 507: INTCONbits.GIEL = 1;
  2601  01588E  8CF2               	bsf	intcon,6,c	;volatile
  2602  015890  0012               	return		;funcret
  2603  015892                     __end_of_board_initialization:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           intcon	equ	0xFF2
  2610                           postinc0	equ	0xFEE
  2611                           wreg	equ	0xFE8
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _CANInitialize *****************
  2615 ;; Defined at:
  2616 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  propSeg         1    wreg     unsigned char 
  2619 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  2620 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  2621 ;;  SJW             1   34[BANK0 ] unsigned char 
  2622 ;;  BRP             1   35[BANK0 ] unsigned char 
  2623 ;;  flags           1   36[BANK0 ] enum E16887
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  propSeg         1   41[BANK0 ] unsigned char 
  2626 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2627 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2637 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2641 ;;Total ram usage:       12 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    4
  2644 ;; This function calls:
  2645 ;;		_CANOperationMode
  2646 ;;		_CANSetFilter
  2647 ;;		_CANSetMask
  2648 ;; This function is called by:
  2649 ;;		_board_initialization
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text2
  2654  0149CC                     __ptext2:
  2655                           	opt stack 0
  2656  0149CC                     _CANInitialize:
  2657                           	opt stack 25
  2658                           
  2659                           ;incstack = 0
  2660                           ;CANInitialize@propSeg stored from wreg
  2661  0149CC  0100               	movlb	0	; () banked
  2662  0149CE  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  2663                           
  2664                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2665                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2666                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2667  0149D0  0E80               	movlw	128
  2668  0149D2  EC17  F0AF         	call	_CANOperationMode
  2669                           
  2670                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2671  0149D6  0E00               	movlw	0
  2672  0149D8  6E70               	movwf	3952,c	;volatile
  2673                           
  2674                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2675  0149DA  0E00               	movlw	0
  2676  0149DC  6E71               	movwf	3953,c	;volatile
  2677                           
  2678                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2679  0149DE  0E00               	movlw	0
  2680  0149E0  6E72               	movwf	3954,c	;volatile
  2681                           
  2682                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2683  0149E2  0100               	movlb	0	; () banked
  2684  0149E4  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  2685  0149E6  42E8               	rrncf	wreg,f,c
  2686  0149E8  0BC0               	andlw	192
  2687  0149EA  0100               	movlb	0	; () banked
  2688  0149EC  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2692  0149EE  0100               	movlb	0	; () banked
  2693  0149F0  5182               	movf	CANInitialize@SJW& (0+255),w,b
  2694  0149F2  1270               	iorwf	3952,f,c	;volatile
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2698  0149F4  0100               	movlb	0	; () banked
  2699  0149F6  5183               	movf	CANInitialize@BRP& (0+255),w,b
  2700  0149F8  1270               	iorwf	3952,f,c	;volatile
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2704  0149FA  0100               	movlb	0	; () banked
  2705  0149FC  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  2706  0149FE  1271               	iorwf	3953,f,c	;volatile
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2710  014A00  0100               	movlb	0	; () banked
  2711  014A02  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2712  014A04  42E8               	rrncf	wreg,f,c
  2713  014A06  0BF8               	andlw	248
  2714  014A08  0100               	movlb	0	; () banked
  2715  014A0A  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2719  014A0C  0100               	movlb	0	; () banked
  2720  014A0E  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2721  014A10  1271               	iorwf	3953,f,c	;volatile
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2725  014A12  0100               	movlb	0	; () banked
  2726  014A14  A584               	btfss	CANInitialize@flags& (0+255),2,b
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2730  014A16  8C71               	bsf	3953,6,c	;volatile
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2734  014A18  0100               	movlb	0	; () banked
  2735  014A1A  B184               	btfsc	CANInitialize@flags& (0+255),0,b
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2739  014A1C  8E71               	bsf	3953,7,c	;volatile
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2743                           
  2744                           ; BSR set to: 0
  2745  014A1E  0100               	movlb	0	; () banked
  2746  014A20  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2747  014A22  1272               	iorwf	3954,f,c	;volatile
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2751  014A24  0100               	movlb	0	; () banked
  2752  014A26  B384               	btfsc	CANInitialize@flags& (0+255),1,b
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2756  014A28  8C72               	bsf	3954,6,c	;volatile
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2760                           
  2761                           ; BSR set to: 0
  2762  014A2A  0100               	movlb	0	; () banked
  2763  014A2C  5184               	movf	CANInitialize@flags& (0+255),w,b
  2764  014A2E  0B60               	andlw	96
  2765  014A30  6E60               	movwf	3936,c	;volatile
  2766                           
  2767                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2768  014A32  0100               	movlb	0	; () banked
  2769  014A34  5184               	movf	CANInitialize@flags& (0+255),w,b
  2770  014A36  0B10               	andlw	16
  2771  014A38  0AFF               	xorlw	255
  2772  014A3A  B4D8               	btfsc	status,2,c
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2776  014A3C  8460               	bsf	3936,2,c	;volatile
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2780  014A3E  CF60 FF50          	movff	3936,3920	;volatile
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2784  014A42  0E00               	movlw	0
  2785  014A44  0100               	movlb	0	; () banked
  2786  014A46  6F72               	movwf	CANSetMask@mask& (0+255),b
  2787  014A48  0E00               	movlw	0
  2788  014A4A  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2789  014A4C  0E00               	movlw	0
  2790  014A4E  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2791  014A50  0E00               	movlw	0
  2792  014A52  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2793  014A54  0EF7               	movlw	247
  2794  014A56  0100               	movlb	0	; () banked
  2795  014A58  6F76               	movwf	CANSetMask@type& (0+255),b
  2796  014A5A  0E01               	movlw	1
  2797  014A5C  ECBD  F09F         	call	_CANSetMask
  2798                           
  2799                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2800  014A60  0E00               	movlw	0
  2801  014A62  0100               	movlb	0	; () banked
  2802  014A64  6F72               	movwf	CANSetMask@mask& (0+255),b
  2803  014A66  0E00               	movlw	0
  2804  014A68  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2805  014A6A  0E00               	movlw	0
  2806  014A6C  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2807  014A6E  0E00               	movlw	0
  2808  014A70  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2809  014A72  0EF7               	movlw	247
  2810  014A74  0100               	movlb	0	; () banked
  2811  014A76  6F76               	movwf	CANSetMask@type& (0+255),b
  2812  014A78  0E02               	movlw	2
  2813  014A7A  ECBD  F09F         	call	_CANSetMask
  2814                           
  2815                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2816  014A7E  D00F               	goto	l5818
  2817  014A80                     l5812:
  2818                           
  2819                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2820  014A80  0EF7               	movlw	247
  2821  014A82  0100               	movlb	0	; () banked
  2822  014A84  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2823  014A86  D007               	goto	l5814
  2824  014A88                     l370:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2828  014A88  0100               	movlb	0	; () banked
  2829  014A8A  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2830                           
  2831                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2832  014A8C  0100               	movlb	0	; () banked
  2833  014A8E  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  2834                           
  2835                           ;inc\CANlib.h: 273: break;
  2836  014A90  D028               	goto	l5820
  2837  014A92                     l371:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2841  014A92  0100               	movlb	0	; () banked
  2842  014A94  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2843  014A96                     l5814:
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2847  014A96  0EF7               	movlw	247
  2848  014A98  0100               	movlb	0	; () banked
  2849  014A9A  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;inc\CANlib.h: 278: }
  2853                           
  2854                           ;inc\CANlib.h: 277: break;
  2855  014A9C  D022               	goto	l5820
  2856  014A9E                     l5818:
  2857  014A9E  0E9F               	movlw	159
  2858  014AA0  0100               	movlb	0	; () banked
  2859  014AA2  6F85               	movwf	??_CANInitialize& (0+255),b
  2860  014AA4  0EFF               	movlw	255
  2861  014AA6  0100               	movlb	0	; () banked
  2862  014AA8  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  2863  014AAA  0100               	movlb	0	; () banked
  2864  014AAC  5184               	movf	CANInitialize@flags& (0+255),w,b
  2865  014AAE  0B60               	andlw	96
  2866  014AB0  0100               	movlb	0	; () banked
  2867  014AB2  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  2868  014AB4  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  2869  014AB6  0100               	movlb	0	; () banked
  2870  014AB8  5185               	movf	??_CANInitialize& (0+255),w,b
  2871  014ABA  0100               	movlb	0	; () banked
  2872  014ABC  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2873  014ABE  0100               	movlb	0	; () banked
  2874  014AC0  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  2875  014AC2  0100               	movlb	0	; () banked
  2876  014AC4  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2877                           
  2878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2879                           ; Switch size 1, requested type "space"
  2880                           ; Number of cases is 1, Range of values is 0 to 0
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte            4     3 (average)
  2884                           ;	Chosen strategy is simple_byte
  2885  014AC6  0100               	movlb	0	; () banked
  2886  014AC8  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  2887  014ACA  0A00               	xorlw	0	; case 0
  2888  014ACC  A4D8               	btfss	status,2,c
  2889  014ACE  D7E1               	goto	l371
  2890                           
  2891                           ; BSR set to: 0
  2892                           ; Switch size 1, requested type "space"
  2893                           ; Number of cases is 2, Range of values is 191 to 223
  2894                           ; switch strategies available:
  2895                           ; Name         Instructions Cycles
  2896                           ; simple_byte            7     4 (average)
  2897                           ;	Chosen strategy is simple_byte
  2898  014AD0  0100               	movlb	0	; () banked
  2899  014AD2  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  2900  014AD4  0ABF               	xorlw	191	; case 191
  2901  014AD6  B4D8               	btfsc	status,2,c
  2902  014AD8  D7D7               	goto	l370
  2903  014ADA  0A60               	xorlw	96	; case 223
  2904  014ADC  B4D8               	btfsc	status,2,c
  2905  014ADE  D7D0               	goto	l5812
  2906  014AE0  D7D8               	goto	l371
  2907  014AE2                     l5820:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2911  014AE2  0E00               	movlw	0
  2912  014AE4  0100               	movlb	0	; () banked
  2913  014AE6  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2914  014AE8  0E00               	movlw	0
  2915  014AEA  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2916  014AEC  0E00               	movlw	0
  2917  014AEE  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2918  014AF0  0E00               	movlw	0
  2919  014AF2  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2920  014AF4  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2921  014AF8  0E00               	movlw	0
  2922  014AFA  EC00  F080         	call	_CANSetFilter
  2923                           
  2924                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2925  014AFE  0E00               	movlw	0
  2926  014B00  0100               	movlb	0	; () banked
  2927  014B02  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2928  014B04  0E00               	movlw	0
  2929  014B06  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2930  014B08  0E00               	movlw	0
  2931  014B0A  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2932  014B0C  0E00               	movlw	0
  2933  014B0E  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2934  014B10  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2935  014B14  0E01               	movlw	1
  2936  014B16  EC00  F080         	call	_CANSetFilter
  2937                           
  2938                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2939  014B1A  0E00               	movlw	0
  2940  014B1C  0100               	movlb	0	; () banked
  2941  014B1E  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2942  014B20  0E00               	movlw	0
  2943  014B22  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2944  014B24  0E00               	movlw	0
  2945  014B26  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2946  014B28  0E00               	movlw	0
  2947  014B2A  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2948  014B2C  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2949  014B30  0E02               	movlw	2
  2950  014B32  EC00  F080         	call	_CANSetFilter
  2951                           
  2952                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2953  014B36  0E00               	movlw	0
  2954  014B38  0100               	movlb	0	; () banked
  2955  014B3A  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2956  014B3C  0E00               	movlw	0
  2957  014B3E  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2958  014B40  0E00               	movlw	0
  2959  014B42  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2960  014B44  0E00               	movlw	0
  2961  014B46  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2962  014B48  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2963  014B4C  0E03               	movlw	3
  2964  014B4E  EC00  F080         	call	_CANSetFilter
  2965                           
  2966                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2967  014B52  0E00               	movlw	0
  2968  014B54  0100               	movlb	0	; () banked
  2969  014B56  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2970  014B58  0E00               	movlw	0
  2971  014B5A  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2972  014B5C  0E00               	movlw	0
  2973  014B5E  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2974  014B60  0E00               	movlw	0
  2975  014B62  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2976  014B64  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2977  014B68  0E04               	movlw	4
  2978  014B6A  EC00  F080         	call	_CANSetFilter
  2979                           
  2980                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2981  014B6E  0E00               	movlw	0
  2982  014B70  0100               	movlb	0	; () banked
  2983  014B72  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2984  014B74  0E00               	movlw	0
  2985  014B76  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2986  014B78  0E00               	movlw	0
  2987  014B7A  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2988  014B7C  0E00               	movlw	0
  2989  014B7E  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2990  014B80  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2991  014B84  0E05               	movlw	5
  2992  014B86  EC00  F080         	call	_CANSetFilter
  2993                           
  2994                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2995  014B8A  0E00               	movlw	0
  2996  014B8C  EC17  F0AF         	call	_CANOperationMode
  2997  014B90  0012               	return		;funcret
  2998  014B92                     __end_of_CANInitialize:
  2999                           	opt stack 0
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           intcon	equ	0xFF2
  3005                           postinc0	equ	0xFEE
  3006                           wreg	equ	0xFE8
  3007                           status	equ	0xFD8
  3008                           
  3009 ;; *************** function _CANSetMask *****************
  3010 ;; Defined at:
  3011 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  numBuffer       1    wreg     enum E16921
  3014 ;;  mask            4   18[BANK0 ] unsigned long 
  3015 ;;  type            1   22[BANK0 ] enum E16887
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  numBuffer       1   27[BANK0 ] enum E16921
  3018 ;;  tamp            4   28[BANK0 ] unsigned long 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;		None               void
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3028 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;Total ram usage:       14 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    3
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_CANInitialize
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text3
  3043  013F7A                     __ptext3:
  3044                           	opt stack 0
  3045  013F7A                     _CANSetMask:
  3046                           	opt stack 25
  3047                           
  3048                           ;incstack = 0
  3049                           ;CANSetMask@numBuffer stored from wreg
  3050  013F7A  0100               	movlb	0	; () banked
  3051  013F7C  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  3052                           
  3053                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3054  013F7E  0100               	movlb	0	; () banked
  3055  013F80  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3056  013F82  A4D8               	btfss	status,2,c
  3057  013F84  D056               	goto	l4990
  3058                           
  3059                           ; BSR set to: 0
  3060  013F86  0100               	movlb	0	; () banked
  3061  013F88  2976               	incf	CANSetMask@type& (0+255),w,b
  3062  013F8A  A4D8               	btfss	status,2,c
  3063  013F8C  D052               	goto	l4990
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;inc\CANlib.h: 644: {
  3067                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3068  013F8E  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3069  013F92  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3070  013F96  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3071  013F9A  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3072  013F9E  0E04               	movlw	4
  3073  013FA0  D006               	goto	u5610
  3074  013FA2                     u5615:
  3075  013FA2  0100               	movlb	0	; () banked
  3076  013FA4  90D8               	bcf	status,0,c
  3077  013FA6  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3078  013FA8  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3079  013FAA  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3080  013FAC  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3081  013FAE                     u5610:
  3082  013FAE  2EE8               	decfsz	wreg,f,c
  3083  013FB0  D7F8               	goto	u5615
  3084  013FB2  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3085  013FB6  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3086  013FBA  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3087  013FBE  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3091  013FC2  0100               	movlb	0	; () banked
  3092  013FC4  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3093  013FC6  0100               	movlb	0	; () banked
  3094  013FC8  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3095  013FCA  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3096  013FCC  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3097  013FCE  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3101  013FD0  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3105  013FD4  0E07               	movlw	7
  3106  013FD6  0100               	movlb	0	; () banked
  3107  013FD8  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3108  013FDA  0100               	movlb	0	; () banked
  3109  013FDC  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3110  013FDE  0E00               	movlw	0
  3111  013FE0  0100               	movlb	0	; () banked
  3112  013FE2  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3113  013FE4  0100               	movlb	0	; () banked
  3114  013FE6  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3115  013FE8  0E00               	movlw	0
  3116  013FEA  0100               	movlb	0	; () banked
  3117  013FEC  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3118  013FEE  0100               	movlb	0	; () banked
  3119  013FF0  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3120  013FF2  0E00               	movlw	0
  3121  013FF4  0100               	movlb	0	; () banked
  3122  013FF6  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3123  013FF8  0100               	movlb	0	; () banked
  3124  013FFA  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3128  013FFC  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3129  014000  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3130  014004  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3131  014008  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3132  01400C  0E05               	movlw	5
  3133  01400E                     u5625:
  3134  01400E  90D8               	bcf	status,0,c
  3135  014010  0100               	movlb	0	; () banked
  3136  014012  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3137  014014  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3138  014016  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3139  014018  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3140  01401A  2EE8               	decfsz	wreg,f,c
  3141  01401C  D7F8               	goto	u5625
  3142  01401E  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3143  014022  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3144  014026  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3145  01402A  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3149  01402E  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3150  014032                     l4990:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;inc\CANlib.h: 652: }
  3154                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3155  014032  0E02               	movlw	2
  3156  014034  0100               	movlb	0	; () banked
  3157  014036  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3158  014038  A4D8               	btfss	status,2,c
  3159  01403A  D056               	goto	l5006
  3160                           
  3161                           ; BSR set to: 0
  3162  01403C  0100               	movlb	0	; () banked
  3163  01403E  2976               	incf	CANSetMask@type& (0+255),w,b
  3164  014040  A4D8               	btfss	status,2,c
  3165  014042  D052               	goto	l5006
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;inc\CANlib.h: 655: {
  3169                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3170  014044  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3171  014048  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3172  01404C  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3173  014050  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3174  014054  0E04               	movlw	4
  3175  014056  D006               	goto	u5650
  3176  014058                     u5655:
  3177  014058  0100               	movlb	0	; () banked
  3178  01405A  90D8               	bcf	status,0,c
  3179  01405C  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3180  01405E  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3181  014060  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3182  014062  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3183  014064                     u5650:
  3184  014064  2EE8               	decfsz	wreg,f,c
  3185  014066  D7F8               	goto	u5655
  3186  014068  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3187  01406C  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3188  014070  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3189  014074  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3193  014078  0100               	movlb	0	; () banked
  3194  01407A  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3195  01407C  0100               	movlb	0	; () banked
  3196  01407E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3197  014080  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3198  014082  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3199  014084  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3203  014086  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3207  01408A  0E07               	movlw	7
  3208  01408C  0100               	movlb	0	; () banked
  3209  01408E  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3210  014090  0100               	movlb	0	; () banked
  3211  014092  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3212  014094  0E00               	movlw	0
  3213  014096  0100               	movlb	0	; () banked
  3214  014098  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3215  01409A  0100               	movlb	0	; () banked
  3216  01409C  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3217  01409E  0E00               	movlw	0
  3218  0140A0  0100               	movlb	0	; () banked
  3219  0140A2  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3220  0140A4  0100               	movlb	0	; () banked
  3221  0140A6  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3222  0140A8  0E00               	movlw	0
  3223  0140AA  0100               	movlb	0	; () banked
  3224  0140AC  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3225  0140AE  0100               	movlb	0	; () banked
  3226  0140B0  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3230  0140B2  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3231  0140B6  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3232  0140BA  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3233  0140BE  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3234  0140C2  0E05               	movlw	5
  3235  0140C4                     u5665:
  3236  0140C4  90D8               	bcf	status,0,c
  3237  0140C6  0100               	movlb	0	; () banked
  3238  0140C8  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3239  0140CA  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3240  0140CC  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3241  0140CE  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3242  0140D0  2EE8               	decfsz	wreg,f,c
  3243  0140D2  D7F8               	goto	u5665
  3244  0140D4  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3245  0140D8  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3246  0140DC  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3247  0140E0  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3251  0140E4  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3252  0140E8                     l5006:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;inc\CANlib.h: 663: }
  3256                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3257  0140E8  0100               	movlb	0	; () banked
  3258  0140EA  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3259  0140EC  A4D8               	btfss	status,2,c
  3260  0140EE  D087               	goto	l5038
  3261                           
  3262                           ; BSR set to: 0
  3263  0140F0  0EF7               	movlw	247
  3264  0140F2  0100               	movlb	0	; () banked
  3265  0140F4  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3266  0140F6  A4D8               	btfss	status,2,c
  3267  0140F8  D082               	goto	l5038
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;inc\CANlib.h: 666: {
  3271                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3272  0140FA  0100               	movlb	0	; () banked
  3273  0140FC  5172               	movf	CANSetMask@mask& (0+255),w,b
  3274  0140FE  0100               	movlb	0	; () banked
  3275  014100  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3276  014102  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3277  014104  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3278  014106  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3282  014108  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3286  01410C  0E00               	movlw	0
  3287  01410E  0100               	movlb	0	; () banked
  3288  014110  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3289  014112  0100               	movlb	0	; () banked
  3290  014114  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3291  014116  0EFF               	movlw	255
  3292  014118  0100               	movlb	0	; () banked
  3293  01411A  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3294  01411C  0100               	movlb	0	; () banked
  3295  01411E  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3296  014120  0E00               	movlw	0
  3297  014122  0100               	movlb	0	; () banked
  3298  014124  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3299  014126  0100               	movlb	0	; () banked
  3300  014128  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3301  01412A  0E00               	movlw	0
  3302  01412C  0100               	movlb	0	; () banked
  3303  01412E  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3304  014130  0100               	movlb	0	; () banked
  3305  014132  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3309  014134  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3310  014138  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3311  01413C  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3312  014140  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3313  014144  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3314  014148  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3315  01414C  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3316  014150  0100               	movlb	0	; () banked
  3317  014152  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3318  014154  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3319  014158  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3320  01415C  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3321  014160  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3325  014164  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3329  014168  0100               	movlb	0	; () banked
  3330  01416A  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3331  01416C  D003               	goto	l444
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3335  01416E  010F               	movlb	15	; () banked
  3336  014170  8119               	bsf	25,0,b	;volatile
  3337  014172  D002               	goto	l445
  3338  014174                     l444:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;inc\CANlib.h: 676: else
  3342                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3343  014174  010F               	movlb	15	; () banked
  3344  014176  9119               	bcf	25,0,b	;volatile
  3345  014178                     l445:
  3346                           
  3347                           ; BSR set to: 15
  3348                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3349  014178  0100               	movlb	0	; () banked
  3350  01417A  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3351  01417C  D003               	goto	l446
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3355  01417E  010F               	movlb	15	; () banked
  3356  014180  8319               	bsf	25,1,b	;volatile
  3357  014182  D002               	goto	l447
  3358  014184                     l446:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;inc\CANlib.h: 681: else
  3362                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3363  014184  010F               	movlb	15	; () banked
  3364  014186  9319               	bcf	25,1,b	;volatile
  3365  014188                     l447:
  3366                           
  3367                           ; BSR set to: 15
  3368                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3369  014188  0100               	movlb	0	; () banked
  3370  01418A  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3371  01418C  D003               	goto	l448
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3375  01418E  010F               	movlb	15	; () banked
  3376  014190  8B19               	bsf	25,5,b	;volatile
  3377  014192  D002               	goto	l449
  3378  014194                     l448:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;inc\CANlib.h: 686: else
  3382                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3383  014194  010F               	movlb	15	; () banked
  3384  014196  9B19               	bcf	25,5,b	;volatile
  3385  014198                     l449:
  3386                           
  3387                           ; BSR set to: 15
  3388                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3389  014198  0100               	movlb	0	; () banked
  3390  01419A  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3391  01419C  D003               	goto	l450
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3395  01419E  010F               	movlb	15	; () banked
  3396  0141A0  8D19               	bsf	25,6,b	;volatile
  3397  0141A2  D002               	goto	l451
  3398  0141A4                     l450:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;inc\CANlib.h: 691: else
  3402                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3403  0141A4  010F               	movlb	15	; () banked
  3404  0141A6  9D19               	bcf	25,6,b	;volatile
  3405  0141A8                     l451:
  3406                           
  3407                           ; BSR set to: 15
  3408                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3409  0141A8  0100               	movlb	0	; () banked
  3410  0141AA  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3411  0141AC  D003               	goto	l452
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3415  0141AE  010F               	movlb	15	; () banked
  3416  0141B0  8F19               	bsf	25,7,b	;volatile
  3417  0141B2  D002               	goto	l5032
  3418  0141B4                     l452:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 696: else
  3422                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3423  0141B4  010F               	movlb	15	; () banked
  3424  0141B6  9F19               	bcf	25,7,b	;volatile
  3425  0141B8                     l5032:
  3426                           
  3427                           ; BSR set to: 15
  3428                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3429  0141B8  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3430  0141BC  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3431  0141C0  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3432  0141C4  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3433  0141C8  0E16               	movlw	22
  3434  0141CA  D006               	goto	u5740
  3435  0141CC                     u5745:
  3436  0141CC  0100               	movlb	0	; () banked
  3437  0141CE  90D8               	bcf	status,0,c
  3438  0141D0  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3439  0141D2  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3440  0141D4  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3441  0141D6  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3442  0141D8                     u5740:
  3443  0141D8  2EE8               	decfsz	wreg,f,c
  3444  0141DA  D7F8               	goto	u5745
  3445  0141DC  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3446  0141E0  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3447  0141E4  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3448  0141E8  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3452  0141EC  0100               	movlb	0	; () banked
  3453  0141EE  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3454  0141F0  0100               	movlb	0	; () banked
  3455  0141F2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3456  0141F4  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3457  0141F6  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3458  0141F8  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3462  0141FA  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3463  0141FE                     l5038:
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;inc\CANlib.h: 702: }
  3467                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3468  0141FE  0E02               	movlw	2
  3469  014200  0100               	movlb	0	; () banked
  3470  014202  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3471  014204  A4D8               	btfss	status,2,c
  3472  014206  0012               	return	
  3473                           
  3474                           ; BSR set to: 0
  3475  014208  0EF7               	movlw	247
  3476  01420A  0100               	movlb	0	; () banked
  3477  01420C  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3478  01420E  A4D8               	btfss	status,2,c
  3479  014210  0012               	return	
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;inc\CANlib.h: 705: {
  3483                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3484  014212  0100               	movlb	0	; () banked
  3485  014214  5172               	movf	CANSetMask@mask& (0+255),w,b
  3486  014216  0100               	movlb	0	; () banked
  3487  014218  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3488  01421A  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3489  01421C  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3490  01421E  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3494  014220  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3498  014224  0E00               	movlw	0
  3499  014226  0100               	movlb	0	; () banked
  3500  014228  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3501  01422A  0100               	movlb	0	; () banked
  3502  01422C  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3503  01422E  0EFF               	movlw	255
  3504  014230  0100               	movlb	0	; () banked
  3505  014232  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3506  014234  0100               	movlb	0	; () banked
  3507  014236  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3508  014238  0E00               	movlw	0
  3509  01423A  0100               	movlb	0	; () banked
  3510  01423C  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3511  01423E  0100               	movlb	0	; () banked
  3512  014240  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3513  014242  0E00               	movlw	0
  3514  014244  0100               	movlb	0	; () banked
  3515  014246  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3516  014248  0100               	movlb	0	; () banked
  3517  01424A  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3521  01424C  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3522  014250  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3523  014254  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3524  014258  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3525  01425C  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3526  014260  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3527  014264  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3528  014268  0100               	movlb	0	; () banked
  3529  01426A  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3530  01426C  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3531  014270  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3532  014274  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3533  014278  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3537  01427C  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3541  014280  0100               	movlb	0	; () banked
  3542  014282  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3543  014284  D003               	goto	l455
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3547  014286  010F               	movlb	15	; () banked
  3548  014288  811D               	bsf	29,0,b	;volatile
  3549  01428A  D002               	goto	l456
  3550  01428C                     l455:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;inc\CANlib.h: 715: else
  3554                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3555  01428C  010F               	movlb	15	; () banked
  3556  01428E  911D               	bcf	29,0,b	;volatile
  3557  014290                     l456:
  3558                           
  3559                           ; BSR set to: 15
  3560                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3561  014290  0100               	movlb	0	; () banked
  3562  014292  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3563  014294  D003               	goto	l457
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3567  014296  010F               	movlb	15	; () banked
  3568  014298  831D               	bsf	29,1,b	;volatile
  3569  01429A  D002               	goto	l458
  3570  01429C                     l457:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;inc\CANlib.h: 720: else
  3574                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3575  01429C  010F               	movlb	15	; () banked
  3576  01429E  931D               	bcf	29,1,b	;volatile
  3577  0142A0                     l458:
  3578                           
  3579                           ; BSR set to: 15
  3580                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3581  0142A0  0100               	movlb	0	; () banked
  3582  0142A2  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3583  0142A4  D003               	goto	l459
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3587  0142A6  010F               	movlb	15	; () banked
  3588  0142A8  8B1D               	bsf	29,5,b	;volatile
  3589  0142AA  D002               	goto	l460
  3590  0142AC                     l459:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;inc\CANlib.h: 725: else
  3594                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3595  0142AC  010F               	movlb	15	; () banked
  3596  0142AE  9B1D               	bcf	29,5,b	;volatile
  3597  0142B0                     l460:
  3598                           
  3599                           ; BSR set to: 15
  3600                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3601  0142B0  0100               	movlb	0	; () banked
  3602  0142B2  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3603  0142B4  D003               	goto	l461
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3607  0142B6  010F               	movlb	15	; () banked
  3608  0142B8  8D1D               	bsf	29,6,b	;volatile
  3609  0142BA  D002               	goto	l462
  3610  0142BC                     l461:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 730: else
  3614                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3615  0142BC  010F               	movlb	15	; () banked
  3616  0142BE  9D1D               	bcf	29,6,b	;volatile
  3617  0142C0                     l462:
  3618                           
  3619                           ; BSR set to: 15
  3620                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3621  0142C0  0100               	movlb	0	; () banked
  3622  0142C2  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3623  0142C4  D003               	goto	l463
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3627  0142C6  010F               	movlb	15	; () banked
  3628  0142C8  8F1D               	bsf	29,7,b	;volatile
  3629  0142CA  D002               	goto	l5064
  3630  0142CC                     l463:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 735: else
  3634                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3635  0142CC  010F               	movlb	15	; () banked
  3636  0142CE  9F1D               	bcf	29,7,b	;volatile
  3637  0142D0                     l5064:
  3638                           
  3639                           ; BSR set to: 15
  3640                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3641  0142D0  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3642  0142D4  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3643  0142D8  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3644  0142DC  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3645  0142E0  0E16               	movlw	22
  3646  0142E2  D006               	goto	u5820
  3647  0142E4                     u5825:
  3648  0142E4  0100               	movlb	0	; () banked
  3649  0142E6  90D8               	bcf	status,0,c
  3650  0142E8  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3651  0142EA  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3652  0142EC  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3653  0142EE  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3654  0142F0                     u5820:
  3655  0142F0  2EE8               	decfsz	wreg,f,c
  3656  0142F2  D7F8               	goto	u5825
  3657  0142F4  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3658  0142F8  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3659  0142FC  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3660  014300  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3664  014304  0100               	movlb	0	; () banked
  3665  014306  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3666  014308  0100               	movlb	0	; () banked
  3667  01430A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3668  01430C  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3669  01430E  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3670  014310  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3674  014312  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3675  014316  0012               	return	
  3676  014318                     __end_of_CANSetMask:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           intcon	equ	0xFF2
  3683                           postinc0	equ	0xFEE
  3684                           wreg	equ	0xFE8
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _CANSetFilter *****************
  3688 ;; Defined at:
  3689 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  numBuffer       1    wreg     enum E16924
  3692 ;;  filter          4   18[BANK0 ] unsigned long 
  3693 ;;  type            1   22[BANK0 ] enum E16887
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  numBuffer       1   27[BANK0 ] enum E16924
  3696 ;;  tamp            4   28[BANK0 ] unsigned long 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;		None               void
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3706 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3707 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;Total ram usage:       14 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    3
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_CANInitialize
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text4
  3721  010000                     __ptext4:
  3722                           	opt stack 0
  3723  010000                     _CANSetFilter:
  3724                           	opt stack 25
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;incstack = 0
  3728                           ;CANSetFilter@numBuffer stored from wreg
  3729  010000  0100               	movlb	0	; () banked
  3730  010002  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  3731                           
  3732                           ;inc\CANlib.h: 750: unsigned long tamp;
  3733                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3734  010004  0100               	movlb	0	; () banked
  3735  010006  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3736  010008  0100               	movlb	0	; () banked
  3737  01000A  A4D8               	btfss	status,2,c
  3738  01000C  D058               	goto	l5088
  3739                           
  3740                           ; BSR set to: 0
  3741  01000E  0100               	movlb	0	; () banked
  3742  010010  2976               	incf	CANSetFilter@type& (0+255),w,b
  3743  010012  A4D8               	btfss	status,2,c
  3744  010014  D054               	goto	l5088
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;inc\CANlib.h: 753: {
  3748                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3749  010016  010F               	movlb	15	; () banked
  3750  010018  9701               	bcf	1,3,b	;volatile
  3751                           
  3752                           ; BSR set to: 15
  3753                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3754  01001A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3755  01001E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3756  010022  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3757  010026  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3758  01002A  0E04               	movlw	4
  3759  01002C  D006               	goto	u5850
  3760  01002E                     u5855:
  3761  01002E  0100               	movlb	0	; () banked
  3762  010030  90D8               	bcf	status,0,c
  3763  010032  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3764  010034  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3765  010036  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3766  010038  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3767  01003A                     u5850:
  3768  01003A  2EE8               	decfsz	wreg,f,c
  3769  01003C  D7F8               	goto	u5855
  3770  01003E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3771  010042  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3772  010046  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3773  01004A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3777  01004E  0100               	movlb	0	; () banked
  3778  010050  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3779  010052  0100               	movlb	0	; () banked
  3780  010054  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3781  010056  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3782  010058  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3783  01005A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3787  01005C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3791  010060  0E07               	movlw	7
  3792  010062  0100               	movlb	0	; () banked
  3793  010064  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3794  010066  0100               	movlb	0	; () banked
  3795  010068  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3796  01006A  0E00               	movlw	0
  3797  01006C  0100               	movlb	0	; () banked
  3798  01006E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3799  010070  0100               	movlb	0	; () banked
  3800  010072  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3801  010074  0E00               	movlw	0
  3802  010076  0100               	movlb	0	; () banked
  3803  010078  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3804  01007A  0100               	movlb	0	; () banked
  3805  01007C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3806  01007E  0E00               	movlw	0
  3807  010080  0100               	movlb	0	; () banked
  3808  010082  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3809  010084  0100               	movlb	0	; () banked
  3810  010086  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3814  010088  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3815  01008C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3816  010090  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3817  010094  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3818  010098  0E05               	movlw	5
  3819  01009A                     u5865:
  3820  01009A  90D8               	bcf	status,0,c
  3821  01009C  0100               	movlb	0	; () banked
  3822  01009E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3823  0100A0  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3824  0100A2  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3825  0100A4  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3826  0100A6  2EE8               	decfsz	wreg,f,c
  3827  0100A8  D7F8               	goto	u5865
  3828  0100AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3829  0100AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3830  0100B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3831  0100B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3835  0100BA  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3836  0100BE                     l5088:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;inc\CANlib.h: 763: }
  3840                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3841  0100BE  0100               	movlb	0	; () banked
  3842  0100C0  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3843  0100C2  A4D8               	btfss	status,2,c
  3844  0100C4  D058               	goto	l5106
  3845                           
  3846                           ; BSR set to: 0
  3847  0100C6  0100               	movlb	0	; () banked
  3848  0100C8  2976               	incf	CANSetFilter@type& (0+255),w,b
  3849  0100CA  A4D8               	btfss	status,2,c
  3850  0100CC  D054               	goto	l5106
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 766: {
  3854                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3855  0100CE  010F               	movlb	15	; () banked
  3856  0100D0  9705               	bcf	5,3,b	;volatile
  3857                           
  3858                           ; BSR set to: 15
  3859                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3860  0100D2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3861  0100D6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3862  0100DA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3863  0100DE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3864  0100E2  0E04               	movlw	4
  3865  0100E4  D006               	goto	u5890
  3866  0100E6                     u5895:
  3867  0100E6  0100               	movlb	0	; () banked
  3868  0100E8  90D8               	bcf	status,0,c
  3869  0100EA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3870  0100EC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3871  0100EE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3872  0100F0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3873  0100F2                     u5890:
  3874  0100F2  2EE8               	decfsz	wreg,f,c
  3875  0100F4  D7F8               	goto	u5895
  3876  0100F6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3877  0100FA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3878  0100FE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3879  010102  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3883  010106  0100               	movlb	0	; () banked
  3884  010108  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3885  01010A  0100               	movlb	0	; () banked
  3886  01010C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3887  01010E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3888  010110  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3889  010112  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3893  010114  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3897  010118  0E07               	movlw	7
  3898  01011A  0100               	movlb	0	; () banked
  3899  01011C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3900  01011E  0100               	movlb	0	; () banked
  3901  010120  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3902  010122  0E00               	movlw	0
  3903  010124  0100               	movlb	0	; () banked
  3904  010126  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3905  010128  0100               	movlb	0	; () banked
  3906  01012A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3907  01012C  0E00               	movlw	0
  3908  01012E  0100               	movlb	0	; () banked
  3909  010130  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3910  010132  0100               	movlb	0	; () banked
  3911  010134  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3912  010136  0E00               	movlw	0
  3913  010138  0100               	movlb	0	; () banked
  3914  01013A  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3915  01013C  0100               	movlb	0	; () banked
  3916  01013E  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3920  010140  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3921  010144  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3922  010148  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3923  01014C  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3924  010150  0E05               	movlw	5
  3925  010152                     u5905:
  3926  010152  90D8               	bcf	status,0,c
  3927  010154  0100               	movlb	0	; () banked
  3928  010156  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3929  010158  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3930  01015A  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3931  01015C  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3932  01015E  2EE8               	decfsz	wreg,f,c
  3933  010160  D7F8               	goto	u5905
  3934  010162  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3935  010166  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3936  01016A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3937  01016E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3941  010172  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3942  010176                     l5106:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;inc\CANlib.h: 776: }
  3946                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3947  010176  0E02               	movlw	2
  3948  010178  0100               	movlb	0	; () banked
  3949  01017A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3950  01017C  A4D8               	btfss	status,2,c
  3951  01017E  D058               	goto	l5124
  3952                           
  3953                           ; BSR set to: 0
  3954  010180  0100               	movlb	0	; () banked
  3955  010182  2976               	incf	CANSetFilter@type& (0+255),w,b
  3956  010184  A4D8               	btfss	status,2,c
  3957  010186  D054               	goto	l5124
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;inc\CANlib.h: 779: {
  3961                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3962  010188  010F               	movlb	15	; () banked
  3963  01018A  9709               	bcf	9,3,b	;volatile
  3964                           
  3965                           ; BSR set to: 15
  3966                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3967  01018C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3968  010190  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3969  010194  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3970  010198  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3971  01019C  0E04               	movlw	4
  3972  01019E  D006               	goto	u5930
  3973  0101A0                     u5935:
  3974  0101A0  0100               	movlb	0	; () banked
  3975  0101A2  90D8               	bcf	status,0,c
  3976  0101A4  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3977  0101A6  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3978  0101A8  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3979  0101AA  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3980  0101AC                     u5930:
  3981  0101AC  2EE8               	decfsz	wreg,f,c
  3982  0101AE  D7F8               	goto	u5935
  3983  0101B0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3984  0101B4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3985  0101B8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3986  0101BC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3990  0101C0  0100               	movlb	0	; () banked
  3991  0101C2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3992  0101C4  0100               	movlb	0	; () banked
  3993  0101C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3994  0101C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3995  0101CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3996  0101CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4000  0101CE  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4004  0101D2  0E07               	movlw	7
  4005  0101D4  0100               	movlb	0	; () banked
  4006  0101D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4007  0101D8  0100               	movlb	0	; () banked
  4008  0101DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4009  0101DC  0E00               	movlw	0
  4010  0101DE  0100               	movlb	0	; () banked
  4011  0101E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4012  0101E2  0100               	movlb	0	; () banked
  4013  0101E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4014  0101E6  0E00               	movlw	0
  4015  0101E8  0100               	movlb	0	; () banked
  4016  0101EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4017  0101EC  0100               	movlb	0	; () banked
  4018  0101EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4019  0101F0  0E00               	movlw	0
  4020  0101F2  0100               	movlb	0	; () banked
  4021  0101F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4022  0101F6  0100               	movlb	0	; () banked
  4023  0101F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4027  0101FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4028  0101FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4029  010202  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4030  010206  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4031  01020A  0E05               	movlw	5
  4032  01020C                     u5945:
  4033  01020C  90D8               	bcf	status,0,c
  4034  01020E  0100               	movlb	0	; () banked
  4035  010210  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4036  010212  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4037  010214  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4038  010216  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4039  010218  2EE8               	decfsz	wreg,f,c
  4040  01021A  D7F8               	goto	u5945
  4041  01021C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4042  010220  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4043  010224  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4044  010228  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4048  01022C  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4049  010230                     l5124:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;inc\CANlib.h: 789: }
  4053                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4054  010230  0E03               	movlw	3
  4055  010232  0100               	movlb	0	; () banked
  4056  010234  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4057  010236  A4D8               	btfss	status,2,c
  4058  010238  D058               	goto	l5142
  4059                           
  4060                           ; BSR set to: 0
  4061  01023A  0100               	movlb	0	; () banked
  4062  01023C  2976               	incf	CANSetFilter@type& (0+255),w,b
  4063  01023E  A4D8               	btfss	status,2,c
  4064  010240  D054               	goto	l5142
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;inc\CANlib.h: 792: {
  4068                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4069  010242  010F               	movlb	15	; () banked
  4070  010244  970D               	bcf	13,3,b	;volatile
  4071                           
  4072                           ; BSR set to: 15
  4073                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4074  010246  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4075  01024A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4076  01024E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4077  010252  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4078  010256  0E04               	movlw	4
  4079  010258  D006               	goto	u5970
  4080  01025A                     u5975:
  4081  01025A  0100               	movlb	0	; () banked
  4082  01025C  90D8               	bcf	status,0,c
  4083  01025E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4084  010260  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4085  010262  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4086  010264  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4087  010266                     u5970:
  4088  010266  2EE8               	decfsz	wreg,f,c
  4089  010268  D7F8               	goto	u5975
  4090  01026A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4091  01026E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4092  010272  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4093  010276  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4097  01027A  0100               	movlb	0	; () banked
  4098  01027C  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4099  01027E  0100               	movlb	0	; () banked
  4100  010280  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4101  010282  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4102  010284  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4103  010286  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4107  010288  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4111  01028C  0E07               	movlw	7
  4112  01028E  0100               	movlb	0	; () banked
  4113  010290  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4114  010292  0100               	movlb	0	; () banked
  4115  010294  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4116  010296  0E00               	movlw	0
  4117  010298  0100               	movlb	0	; () banked
  4118  01029A  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4119  01029C  0100               	movlb	0	; () banked
  4120  01029E  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4121  0102A0  0E00               	movlw	0
  4122  0102A2  0100               	movlb	0	; () banked
  4123  0102A4  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4124  0102A6  0100               	movlb	0	; () banked
  4125  0102A8  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4126  0102AA  0E00               	movlw	0
  4127  0102AC  0100               	movlb	0	; () banked
  4128  0102AE  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4129  0102B0  0100               	movlb	0	; () banked
  4130  0102B2  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4134  0102B4  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4135  0102B8  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4136  0102BC  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4137  0102C0  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4138  0102C4  0E05               	movlw	5
  4139  0102C6                     u5985:
  4140  0102C6  90D8               	bcf	status,0,c
  4141  0102C8  0100               	movlb	0	; () banked
  4142  0102CA  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4143  0102CC  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4144  0102CE  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4145  0102D0  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4146  0102D2  2EE8               	decfsz	wreg,f,c
  4147  0102D4  D7F8               	goto	u5985
  4148  0102D6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4149  0102DA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4150  0102DE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4151  0102E2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4155  0102E6  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4156  0102EA                     l5142:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;inc\CANlib.h: 802: }
  4160                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4161  0102EA  0E04               	movlw	4
  4162  0102EC  0100               	movlb	0	; () banked
  4163  0102EE  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4164  0102F0  A4D8               	btfss	status,2,c
  4165  0102F2  D058               	goto	l5160
  4166                           
  4167                           ; BSR set to: 0
  4168  0102F4  0100               	movlb	0	; () banked
  4169  0102F6  2976               	incf	CANSetFilter@type& (0+255),w,b
  4170  0102F8  A4D8               	btfss	status,2,c
  4171  0102FA  D054               	goto	l5160
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;inc\CANlib.h: 805: {
  4175                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4176  0102FC  010F               	movlb	15	; () banked
  4177  0102FE  9711               	bcf	17,3,b	;volatile
  4178                           
  4179                           ; BSR set to: 15
  4180                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4181  010300  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4182  010304  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4183  010308  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4184  01030C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4185  010310  0E04               	movlw	4
  4186  010312  D006               	goto	u6010
  4187  010314                     u6015:
  4188  010314  0100               	movlb	0	; () banked
  4189  010316  90D8               	bcf	status,0,c
  4190  010318  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4191  01031A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4192  01031C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4193  01031E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4194  010320                     u6010:
  4195  010320  2EE8               	decfsz	wreg,f,c
  4196  010322  D7F8               	goto	u6015
  4197  010324  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4198  010328  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4199  01032C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4200  010330  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4204  010334  0100               	movlb	0	; () banked
  4205  010336  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4206  010338  0100               	movlb	0	; () banked
  4207  01033A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4208  01033C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4209  01033E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4210  010340  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4214  010342  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4218  010346  0E07               	movlw	7
  4219  010348  0100               	movlb	0	; () banked
  4220  01034A  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4221  01034C  0100               	movlb	0	; () banked
  4222  01034E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4223  010350  0E00               	movlw	0
  4224  010352  0100               	movlb	0	; () banked
  4225  010354  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4226  010356  0100               	movlb	0	; () banked
  4227  010358  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4228  01035A  0E00               	movlw	0
  4229  01035C  0100               	movlb	0	; () banked
  4230  01035E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4231  010360  0100               	movlb	0	; () banked
  4232  010362  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4233  010364  0E00               	movlw	0
  4234  010366  0100               	movlb	0	; () banked
  4235  010368  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4236  01036A  0100               	movlb	0	; () banked
  4237  01036C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4241  01036E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4242  010372  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4243  010376  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4244  01037A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4245  01037E  0E05               	movlw	5
  4246  010380                     u6025:
  4247  010380  90D8               	bcf	status,0,c
  4248  010382  0100               	movlb	0	; () banked
  4249  010384  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4250  010386  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4251  010388  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4252  01038A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4253  01038C  2EE8               	decfsz	wreg,f,c
  4254  01038E  D7F8               	goto	u6025
  4255  010390  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4256  010394  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4257  010398  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4258  01039C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4262  0103A0  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4263  0103A4                     l5160:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;inc\CANlib.h: 815: }
  4267                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4268  0103A4  0E05               	movlw	5
  4269  0103A6  0100               	movlb	0	; () banked
  4270  0103A8  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4271  0103AA  A4D8               	btfss	status,2,c
  4272  0103AC  D058               	goto	l5178
  4273                           
  4274                           ; BSR set to: 0
  4275  0103AE  0100               	movlb	0	; () banked
  4276  0103B0  2976               	incf	CANSetFilter@type& (0+255),w,b
  4277  0103B2  A4D8               	btfss	status,2,c
  4278  0103B4  D054               	goto	l5178
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;inc\CANlib.h: 818: {
  4282                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4283  0103B6  010F               	movlb	15	; () banked
  4284  0103B8  9715               	bcf	21,3,b	;volatile
  4285                           
  4286                           ; BSR set to: 15
  4287                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4288  0103BA  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4289  0103BE  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4290  0103C2  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4291  0103C6  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4292  0103CA  0E04               	movlw	4
  4293  0103CC  D006               	goto	u6050
  4294  0103CE                     u6055:
  4295  0103CE  0100               	movlb	0	; () banked
  4296  0103D0  90D8               	bcf	status,0,c
  4297  0103D2  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4298  0103D4  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4299  0103D6  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4300  0103D8  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4301  0103DA                     u6050:
  4302  0103DA  2EE8               	decfsz	wreg,f,c
  4303  0103DC  D7F8               	goto	u6055
  4304  0103DE  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4305  0103E2  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4306  0103E6  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4307  0103EA  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4311  0103EE  0100               	movlb	0	; () banked
  4312  0103F0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4313  0103F2  0100               	movlb	0	; () banked
  4314  0103F4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4315  0103F6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4316  0103F8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4317  0103FA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4321  0103FC  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4325  010400  0E07               	movlw	7
  4326  010402  0100               	movlb	0	; () banked
  4327  010404  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4328  010406  0100               	movlb	0	; () banked
  4329  010408  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4330  01040A  0E00               	movlw	0
  4331  01040C  0100               	movlb	0	; () banked
  4332  01040E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4333  010410  0100               	movlb	0	; () banked
  4334  010412  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4335  010414  0E00               	movlw	0
  4336  010416  0100               	movlb	0	; () banked
  4337  010418  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4338  01041A  0100               	movlb	0	; () banked
  4339  01041C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4340  01041E  0E00               	movlw	0
  4341  010420  0100               	movlb	0	; () banked
  4342  010422  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4343  010424  0100               	movlb	0	; () banked
  4344  010426  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4348  010428  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4349  01042C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4350  010430  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4351  010434  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4352  010438  0E05               	movlw	5
  4353  01043A                     u6065:
  4354  01043A  90D8               	bcf	status,0,c
  4355  01043C  0100               	movlb	0	; () banked
  4356  01043E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4357  010440  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4358  010442  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4359  010444  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4360  010446  2EE8               	decfsz	wreg,f,c
  4361  010448  D7F8               	goto	u6065
  4362  01044A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4363  01044E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4364  010452  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4365  010456  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4369  01045A  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4370  01045E                     l5178:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;inc\CANlib.h: 828: }
  4374                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4375  01045E  0100               	movlb	0	; () banked
  4376  010460  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4377  010462  0100               	movlb	0	; () banked
  4378  010464  A4D8               	btfss	status,2,c
  4379  010466  D089               	goto	l5212
  4380                           
  4381                           ; BSR set to: 0
  4382  010468  0EF7               	movlw	247
  4383  01046A  0100               	movlb	0	; () banked
  4384  01046C  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4385  01046E  A4D8               	btfss	status,2,c
  4386  010470  D084               	goto	l5212
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;inc\CANlib.h: 832: {
  4390                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4391  010472  010F               	movlb	15	; () banked
  4392  010474  8701               	bsf	1,3,b	;volatile
  4393                           
  4394                           ; BSR set to: 15
  4395                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4396  010476  0100               	movlb	0	; () banked
  4397  010478  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4398  01047A  0100               	movlb	0	; () banked
  4399  01047C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4400  01047E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4401  010480  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4402  010482  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4406  010484  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4410  010488  0E00               	movlw	0
  4411  01048A  0100               	movlb	0	; () banked
  4412  01048C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4413  01048E  0100               	movlb	0	; () banked
  4414  010490  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4415  010492  0EFF               	movlw	255
  4416  010494  0100               	movlb	0	; () banked
  4417  010496  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4418  010498  0100               	movlb	0	; () banked
  4419  01049A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4420  01049C  0E00               	movlw	0
  4421  01049E  0100               	movlb	0	; () banked
  4422  0104A0  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4423  0104A2  0100               	movlb	0	; () banked
  4424  0104A4  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4425  0104A6  0E00               	movlw	0
  4426  0104A8  0100               	movlb	0	; () banked
  4427  0104AA  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4428  0104AC  0100               	movlb	0	; () banked
  4429  0104AE  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4433  0104B0  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4434  0104B4  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4435  0104B8  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4436  0104BC  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4437  0104C0  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4438  0104C4  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4439  0104C8  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4440  0104CC  0100               	movlb	0	; () banked
  4441  0104CE  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4442  0104D0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4443  0104D4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4444  0104D8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4445  0104DC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4449  0104E0  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4453  0104E4  0100               	movlb	0	; () banked
  4454  0104E6  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4455  0104E8  D003               	goto	l475
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4459  0104EA  010F               	movlb	15	; () banked
  4460  0104EC  8101               	bsf	1,0,b	;volatile
  4461  0104EE  D002               	goto	l476
  4462  0104F0                     l475:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;inc\CANlib.h: 844: else
  4466                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4467  0104F0  010F               	movlb	15	; () banked
  4468  0104F2  9101               	bcf	1,0,b	;volatile
  4469  0104F4                     l476:
  4470                           
  4471                           ; BSR set to: 15
  4472                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4473  0104F4  0100               	movlb	0	; () banked
  4474  0104F6  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4475  0104F8  D003               	goto	l477
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4479  0104FA  010F               	movlb	15	; () banked
  4480  0104FC  8301               	bsf	1,1,b	;volatile
  4481  0104FE  D002               	goto	l478
  4482  010500                     l477:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 849: else
  4486                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4487  010500  010F               	movlb	15	; () banked
  4488  010502  9301               	bcf	1,1,b	;volatile
  4489  010504                     l478:
  4490                           
  4491                           ; BSR set to: 15
  4492                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4493  010504  0100               	movlb	0	; () banked
  4494  010506  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4495  010508  D003               	goto	l479
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4499  01050A  010F               	movlb	15	; () banked
  4500  01050C  8B01               	bsf	1,5,b	;volatile
  4501  01050E  D002               	goto	l480
  4502  010510                     l479:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;inc\CANlib.h: 854: else
  4506                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4507  010510  010F               	movlb	15	; () banked
  4508  010512  9B01               	bcf	1,5,b	;volatile
  4509  010514                     l480:
  4510                           
  4511                           ; BSR set to: 15
  4512                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4513  010514  0100               	movlb	0	; () banked
  4514  010516  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4515  010518  D003               	goto	l481
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4519  01051A  010F               	movlb	15	; () banked
  4520  01051C  8D01               	bsf	1,6,b	;volatile
  4521  01051E  D002               	goto	l482
  4522  010520                     l481:
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;inc\CANlib.h: 859: else
  4526                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4527  010520  010F               	movlb	15	; () banked
  4528  010522  9D01               	bcf	1,6,b	;volatile
  4529  010524                     l482:
  4530                           
  4531                           ; BSR set to: 15
  4532                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4533  010524  0100               	movlb	0	; () banked
  4534  010526  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4535  010528  D003               	goto	l483
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4539  01052A  010F               	movlb	15	; () banked
  4540  01052C  8F01               	bsf	1,7,b	;volatile
  4541  01052E  D002               	goto	l5206
  4542  010530                     l483:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;inc\CANlib.h: 864: else
  4546                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4547  010530  010F               	movlb	15	; () banked
  4548  010532  9F01               	bcf	1,7,b	;volatile
  4549  010534                     l5206:
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4553  010534  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4554  010538  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4555  01053C  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4556  010540  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4557  010544  0E16               	movlw	22
  4558  010546  D006               	goto	u6140
  4559  010548                     u6145:
  4560  010548  0100               	movlb	0	; () banked
  4561  01054A  90D8               	bcf	status,0,c
  4562  01054C  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4563  01054E  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4564  010550  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4565  010552  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4566  010554                     u6140:
  4567  010554  2EE8               	decfsz	wreg,f,c
  4568  010556  D7F8               	goto	u6145
  4569  010558  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4570  01055C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4571  010560  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4572  010564  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4576  010568  0100               	movlb	0	; () banked
  4577  01056A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4578  01056C  0100               	movlb	0	; () banked
  4579  01056E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4580  010570  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4581  010572  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4582  010574  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4586  010576  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4587  01057A                     l5212:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 870: }
  4591                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4592  01057A  0100               	movlb	0	; () banked
  4593  01057C  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4594  01057E  A4D8               	btfss	status,2,c
  4595  010580  D089               	goto	l5246
  4596                           
  4597                           ; BSR set to: 0
  4598  010582  0EF7               	movlw	247
  4599  010584  0100               	movlb	0	; () banked
  4600  010586  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4601  010588  A4D8               	btfss	status,2,c
  4602  01058A  D084               	goto	l5246
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;inc\CANlib.h: 873: {
  4606                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4607  01058C  010F               	movlb	15	; () banked
  4608  01058E  8705               	bsf	5,3,b	;volatile
  4609                           
  4610                           ; BSR set to: 15
  4611                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4612  010590  0100               	movlb	0	; () banked
  4613  010592  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4614  010594  0100               	movlb	0	; () banked
  4615  010596  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4616  010598  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4617  01059A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4618  01059C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4622  01059E  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4626  0105A2  0E00               	movlw	0
  4627  0105A4  0100               	movlb	0	; () banked
  4628  0105A6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4629  0105A8  0100               	movlb	0	; () banked
  4630  0105AA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4631  0105AC  0EFF               	movlw	255
  4632  0105AE  0100               	movlb	0	; () banked
  4633  0105B0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4634  0105B2  0100               	movlb	0	; () banked
  4635  0105B4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4636  0105B6  0E00               	movlw	0
  4637  0105B8  0100               	movlb	0	; () banked
  4638  0105BA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4639  0105BC  0100               	movlb	0	; () banked
  4640  0105BE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4641  0105C0  0E00               	movlw	0
  4642  0105C2  0100               	movlb	0	; () banked
  4643  0105C4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4644  0105C6  0100               	movlb	0	; () banked
  4645  0105C8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4649  0105CA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4650  0105CE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4651  0105D2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4652  0105D6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4653  0105DA  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4654  0105DE  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4655  0105E2  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4656  0105E6  0100               	movlb	0	; () banked
  4657  0105E8  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4658  0105EA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4659  0105EE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4660  0105F2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4661  0105F6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4665  0105FA  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4669  0105FE  0100               	movlb	0	; () banked
  4670  010600  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4671  010602  D003               	goto	l486
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4675  010604  010F               	movlb	15	; () banked
  4676  010606  8105               	bsf	5,0,b	;volatile
  4677  010608  D002               	goto	l487
  4678  01060A                     l486:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;inc\CANlib.h: 885: else
  4682                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4683  01060A  010F               	movlb	15	; () banked
  4684  01060C  9105               	bcf	5,0,b	;volatile
  4685  01060E                     l487:
  4686                           
  4687                           ; BSR set to: 15
  4688                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4689  01060E  0100               	movlb	0	; () banked
  4690  010610  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4691  010612  D003               	goto	l488
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4695  010614  010F               	movlb	15	; () banked
  4696  010616  8305               	bsf	5,1,b	;volatile
  4697  010618  D002               	goto	l489
  4698  01061A                     l488:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;inc\CANlib.h: 890: else
  4702                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4703  01061A  010F               	movlb	15	; () banked
  4704  01061C  9305               	bcf	5,1,b	;volatile
  4705  01061E                     l489:
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4709  01061E  0100               	movlb	0	; () banked
  4710  010620  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4711  010622  D003               	goto	l490
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4715  010624  010F               	movlb	15	; () banked
  4716  010626  8B05               	bsf	5,5,b	;volatile
  4717  010628  D002               	goto	l491
  4718  01062A                     l490:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;inc\CANlib.h: 895: else
  4722                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4723  01062A  010F               	movlb	15	; () banked
  4724  01062C  9B05               	bcf	5,5,b	;volatile
  4725  01062E                     l491:
  4726                           
  4727                           ; BSR set to: 15
  4728                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4729  01062E  0100               	movlb	0	; () banked
  4730  010630  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4731  010632  D003               	goto	l492
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4735  010634  010F               	movlb	15	; () banked
  4736  010636  8D05               	bsf	5,6,b	;volatile
  4737  010638  D002               	goto	l493
  4738  01063A                     l492:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;inc\CANlib.h: 900: else
  4742                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4743  01063A  010F               	movlb	15	; () banked
  4744  01063C  9D05               	bcf	5,6,b	;volatile
  4745  01063E                     l493:
  4746                           
  4747                           ; BSR set to: 15
  4748                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4749  01063E  0100               	movlb	0	; () banked
  4750  010640  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4751  010642  D003               	goto	l494
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4755  010644  010F               	movlb	15	; () banked
  4756  010646  8F05               	bsf	5,7,b	;volatile
  4757  010648  D002               	goto	l5240
  4758  01064A                     l494:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 905: else
  4762                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4763  01064A  010F               	movlb	15	; () banked
  4764  01064C  9F05               	bcf	5,7,b	;volatile
  4765  01064E                     l5240:
  4766                           
  4767                           ; BSR set to: 15
  4768                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4769  01064E  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4770  010652  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4771  010656  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4772  01065A  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4773  01065E  0E16               	movlw	22
  4774  010660  D006               	goto	u6220
  4775  010662                     u6225:
  4776  010662  0100               	movlb	0	; () banked
  4777  010664  90D8               	bcf	status,0,c
  4778  010666  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4779  010668  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4780  01066A  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4781  01066C  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4782  01066E                     u6220:
  4783  01066E  2EE8               	decfsz	wreg,f,c
  4784  010670  D7F8               	goto	u6225
  4785  010672  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4786  010676  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4787  01067A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4788  01067E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4792  010682  0100               	movlb	0	; () banked
  4793  010684  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4794  010686  0100               	movlb	0	; () banked
  4795  010688  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4796  01068A  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4797  01068C  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4798  01068E  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4802  010690  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4803  010694                     l5246:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;inc\CANlib.h: 911: }
  4807                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4808  010694  0E02               	movlw	2
  4809  010696  0100               	movlb	0	; () banked
  4810  010698  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4811  01069A  A4D8               	btfss	status,2,c
  4812  01069C  D089               	goto	l5280
  4813                           
  4814                           ; BSR set to: 0
  4815  01069E  0EF7               	movlw	247
  4816  0106A0  0100               	movlb	0	; () banked
  4817  0106A2  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4818  0106A4  A4D8               	btfss	status,2,c
  4819  0106A6  D084               	goto	l5280
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;inc\CANlib.h: 915: {
  4823                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4824  0106A8  010F               	movlb	15	; () banked
  4825  0106AA  8709               	bsf	9,3,b	;volatile
  4826                           
  4827                           ; BSR set to: 15
  4828                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4829  0106AC  0100               	movlb	0	; () banked
  4830  0106AE  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4831  0106B0  0100               	movlb	0	; () banked
  4832  0106B2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4833  0106B4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4834  0106B6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4835  0106B8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4839  0106BA  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4843  0106BE  0E00               	movlw	0
  4844  0106C0  0100               	movlb	0	; () banked
  4845  0106C2  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4846  0106C4  0100               	movlb	0	; () banked
  4847  0106C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4848  0106C8  0EFF               	movlw	255
  4849  0106CA  0100               	movlb	0	; () banked
  4850  0106CC  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4851  0106CE  0100               	movlb	0	; () banked
  4852  0106D0  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4853  0106D2  0E00               	movlw	0
  4854  0106D4  0100               	movlb	0	; () banked
  4855  0106D6  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4856  0106D8  0100               	movlb	0	; () banked
  4857  0106DA  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4858  0106DC  0E00               	movlw	0
  4859  0106DE  0100               	movlb	0	; () banked
  4860  0106E0  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4861  0106E2  0100               	movlb	0	; () banked
  4862  0106E4  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4866  0106E6  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4867  0106EA  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4868  0106EE  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4869  0106F2  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4870  0106F6  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4871  0106FA  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4872  0106FE  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4873  010702  0100               	movlb	0	; () banked
  4874  010704  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4875  010706  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4876  01070A  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4877  01070E  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4878  010712  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4882  010716  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4886  01071A  0100               	movlb	0	; () banked
  4887  01071C  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4888  01071E  D003               	goto	l497
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4892  010720  010F               	movlb	15	; () banked
  4893  010722  8109               	bsf	9,0,b	;volatile
  4894  010724  D002               	goto	l498
  4895  010726                     l497:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;inc\CANlib.h: 927: else
  4899                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4900  010726  010F               	movlb	15	; () banked
  4901  010728  9109               	bcf	9,0,b	;volatile
  4902  01072A                     l498:
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4906  01072A  0100               	movlb	0	; () banked
  4907  01072C  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4908  01072E  D003               	goto	l499
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4912  010730  010F               	movlb	15	; () banked
  4913  010732  8309               	bsf	9,1,b	;volatile
  4914  010734  D002               	goto	l500
  4915  010736                     l499:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 932: else
  4919                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4920  010736  010F               	movlb	15	; () banked
  4921  010738  9309               	bcf	9,1,b	;volatile
  4922  01073A                     l500:
  4923                           
  4924                           ; BSR set to: 15
  4925                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4926  01073A  0100               	movlb	0	; () banked
  4927  01073C  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4928  01073E  D003               	goto	l501
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4932  010740  010F               	movlb	15	; () banked
  4933  010742  8B09               	bsf	9,5,b	;volatile
  4934  010744  D002               	goto	l502
  4935  010746                     l501:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 937: else
  4939                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4940  010746  010F               	movlb	15	; () banked
  4941  010748  9B09               	bcf	9,5,b	;volatile
  4942  01074A                     l502:
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4946  01074A  0100               	movlb	0	; () banked
  4947  01074C  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4948  01074E  D003               	goto	l503
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4952  010750  010F               	movlb	15	; () banked
  4953  010752  8D09               	bsf	9,6,b	;volatile
  4954  010754  D002               	goto	l504
  4955  010756                     l503:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 942: else
  4959                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4960  010756  010F               	movlb	15	; () banked
  4961  010758  9D09               	bcf	9,6,b	;volatile
  4962  01075A                     l504:
  4963                           
  4964                           ; BSR set to: 15
  4965                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4966  01075A  0100               	movlb	0	; () banked
  4967  01075C  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4968  01075E  D003               	goto	l505
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4972  010760  010F               	movlb	15	; () banked
  4973  010762  8F09               	bsf	9,7,b	;volatile
  4974  010764  D002               	goto	l5274
  4975  010766                     l505:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;inc\CANlib.h: 947: else
  4979                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4980  010766  010F               	movlb	15	; () banked
  4981  010768  9F09               	bcf	9,7,b	;volatile
  4982  01076A                     l5274:
  4983                           
  4984                           ; BSR set to: 15
  4985                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4986  01076A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4987  01076E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4988  010772  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4989  010776  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4990  01077A  0E16               	movlw	22
  4991  01077C  D006               	goto	u6300
  4992  01077E                     u6305:
  4993  01077E  0100               	movlb	0	; () banked
  4994  010780  90D8               	bcf	status,0,c
  4995  010782  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4996  010784  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4997  010786  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4998  010788  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4999  01078A                     u6300:
  5000  01078A  2EE8               	decfsz	wreg,f,c
  5001  01078C  D7F8               	goto	u6305
  5002  01078E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5003  010792  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5004  010796  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5005  01079A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5009  01079E  0100               	movlb	0	; () banked
  5010  0107A0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5011  0107A2  0100               	movlb	0	; () banked
  5012  0107A4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5013  0107A6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5014  0107A8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5015  0107AA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5019  0107AC  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5020  0107B0                     l5280:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 953: }
  5024                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5025  0107B0  0E03               	movlw	3
  5026  0107B2  0100               	movlb	0	; () banked
  5027  0107B4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5028  0107B6  A4D8               	btfss	status,2,c
  5029  0107B8  D089               	goto	l5314
  5030                           
  5031                           ; BSR set to: 0
  5032  0107BA  0EF7               	movlw	247
  5033  0107BC  0100               	movlb	0	; () banked
  5034  0107BE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5035  0107C0  A4D8               	btfss	status,2,c
  5036  0107C2  D084               	goto	l5314
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;inc\CANlib.h: 956: {
  5040                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5041  0107C4  010F               	movlb	15	; () banked
  5042  0107C6  870D               	bsf	13,3,b	;volatile
  5043                           
  5044                           ; BSR set to: 15
  5045                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5046  0107C8  0100               	movlb	0	; () banked
  5047  0107CA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5048  0107CC  0100               	movlb	0	; () banked
  5049  0107CE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5050  0107D0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5051  0107D2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5052  0107D4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5056  0107D6  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5060  0107DA  0E00               	movlw	0
  5061  0107DC  0100               	movlb	0	; () banked
  5062  0107DE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5063  0107E0  0100               	movlb	0	; () banked
  5064  0107E2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5065  0107E4  0EFF               	movlw	255
  5066  0107E6  0100               	movlb	0	; () banked
  5067  0107E8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5068  0107EA  0100               	movlb	0	; () banked
  5069  0107EC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5070  0107EE  0E00               	movlw	0
  5071  0107F0  0100               	movlb	0	; () banked
  5072  0107F2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5073  0107F4  0100               	movlb	0	; () banked
  5074  0107F6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5075  0107F8  0E00               	movlw	0
  5076  0107FA  0100               	movlb	0	; () banked
  5077  0107FC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5078  0107FE  0100               	movlb	0	; () banked
  5079  010800  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5083  010802  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5084  010806  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5085  01080A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5086  01080E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5087  010812  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5088  010816  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5089  01081A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5090  01081E  0100               	movlb	0	; () banked
  5091  010820  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5092  010822  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5093  010826  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5094  01082A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5095  01082E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5099  010832  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5103  010836  0100               	movlb	0	; () banked
  5104  010838  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5105  01083A  D003               	goto	l508
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5109  01083C  010F               	movlb	15	; () banked
  5110  01083E  810D               	bsf	13,0,b	;volatile
  5111  010840  D002               	goto	l509
  5112  010842                     l508:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;inc\CANlib.h: 968: else
  5116                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5117  010842  010F               	movlb	15	; () banked
  5118  010844  910D               	bcf	13,0,b	;volatile
  5119  010846                     l509:
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5123  010846  0100               	movlb	0	; () banked
  5124  010848  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5125  01084A  D003               	goto	l510
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5129  01084C  010F               	movlb	15	; () banked
  5130  01084E  830D               	bsf	13,1,b	;volatile
  5131  010850  D002               	goto	l511
  5132  010852                     l510:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;inc\CANlib.h: 973: else
  5136                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5137  010852  010F               	movlb	15	; () banked
  5138  010854  930D               	bcf	13,1,b	;volatile
  5139  010856                     l511:
  5140                           
  5141                           ; BSR set to: 15
  5142                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5143  010856  0100               	movlb	0	; () banked
  5144  010858  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5145  01085A  D003               	goto	l512
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5149  01085C  010F               	movlb	15	; () banked
  5150  01085E  8B0D               	bsf	13,5,b	;volatile
  5151  010860  D002               	goto	l513
  5152  010862                     l512:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 978: else
  5156                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5157  010862  010F               	movlb	15	; () banked
  5158  010864  9B0D               	bcf	13,5,b	;volatile
  5159  010866                     l513:
  5160                           
  5161                           ; BSR set to: 15
  5162                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5163  010866  0100               	movlb	0	; () banked
  5164  010868  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5165  01086A  D003               	goto	l514
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5169  01086C  010F               	movlb	15	; () banked
  5170  01086E  8D0D               	bsf	13,6,b	;volatile
  5171  010870  D002               	goto	l515
  5172  010872                     l514:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;inc\CANlib.h: 983: else
  5176                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5177  010872  010F               	movlb	15	; () banked
  5178  010874  9D0D               	bcf	13,6,b	;volatile
  5179  010876                     l515:
  5180                           
  5181                           ; BSR set to: 15
  5182                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5183  010876  0100               	movlb	0	; () banked
  5184  010878  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5185  01087A  D003               	goto	l516
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5189  01087C  010F               	movlb	15	; () banked
  5190  01087E  8F0D               	bsf	13,7,b	;volatile
  5191  010880  D002               	goto	l5308
  5192  010882                     l516:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 988: else
  5196                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5197  010882  010F               	movlb	15	; () banked
  5198  010884  9F0D               	bcf	13,7,b	;volatile
  5199  010886                     l5308:
  5200                           
  5201                           ; BSR set to: 15
  5202                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5203  010886  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5204  01088A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5205  01088E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5206  010892  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5207  010896  0E16               	movlw	22
  5208  010898  D006               	goto	u6380
  5209  01089A                     u6385:
  5210  01089A  0100               	movlb	0	; () banked
  5211  01089C  90D8               	bcf	status,0,c
  5212  01089E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5213  0108A0  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5214  0108A2  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5215  0108A4  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5216  0108A6                     u6380:
  5217  0108A6  2EE8               	decfsz	wreg,f,c
  5218  0108A8  D7F8               	goto	u6385
  5219  0108AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5220  0108AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5221  0108B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5222  0108B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5226  0108BA  0100               	movlb	0	; () banked
  5227  0108BC  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5228  0108BE  0100               	movlb	0	; () banked
  5229  0108C0  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5230  0108C2  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5231  0108C4  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5232  0108C6  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5236  0108C8  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5237  0108CC                     l5314:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;inc\CANlib.h: 994: }
  5241                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5242  0108CC  0E04               	movlw	4
  5243  0108CE  0100               	movlb	0	; () banked
  5244  0108D0  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5245  0108D2  A4D8               	btfss	status,2,c
  5246  0108D4  D089               	goto	l5348
  5247                           
  5248                           ; BSR set to: 0
  5249  0108D6  0EF7               	movlw	247
  5250  0108D8  0100               	movlb	0	; () banked
  5251  0108DA  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5252  0108DC  A4D8               	btfss	status,2,c
  5253  0108DE  D084               	goto	l5348
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 997: {
  5257                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5258  0108E0  010F               	movlb	15	; () banked
  5259  0108E2  8711               	bsf	17,3,b	;volatile
  5260                           
  5261                           ; BSR set to: 15
  5262                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5263  0108E4  0100               	movlb	0	; () banked
  5264  0108E6  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5265  0108E8  0100               	movlb	0	; () banked
  5266  0108EA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5267  0108EC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5268  0108EE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5269  0108F0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5273  0108F2  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5277  0108F6  0E00               	movlw	0
  5278  0108F8  0100               	movlb	0	; () banked
  5279  0108FA  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5280  0108FC  0100               	movlb	0	; () banked
  5281  0108FE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5282  010900  0EFF               	movlw	255
  5283  010902  0100               	movlb	0	; () banked
  5284  010904  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5285  010906  0100               	movlb	0	; () banked
  5286  010908  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5287  01090A  0E00               	movlw	0
  5288  01090C  0100               	movlb	0	; () banked
  5289  01090E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5290  010910  0100               	movlb	0	; () banked
  5291  010912  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5292  010914  0E00               	movlw	0
  5293  010916  0100               	movlb	0	; () banked
  5294  010918  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5295  01091A  0100               	movlb	0	; () banked
  5296  01091C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5300  01091E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5301  010922  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5302  010926  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5303  01092A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5304  01092E  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5305  010932  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5306  010936  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5307  01093A  0100               	movlb	0	; () banked
  5308  01093C  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5309  01093E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5310  010942  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5311  010946  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5312  01094A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5316  01094E  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5320  010952  0100               	movlb	0	; () banked
  5321  010954  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5322  010956  D003               	goto	l519
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5326  010958  010F               	movlb	15	; () banked
  5327  01095A  8111               	bsf	17,0,b	;volatile
  5328  01095C  D002               	goto	l520
  5329  01095E                     l519:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;inc\CANlib.h: 1009: else
  5333                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5334  01095E  010F               	movlb	15	; () banked
  5335  010960  9111               	bcf	17,0,b	;volatile
  5336  010962                     l520:
  5337                           
  5338                           ; BSR set to: 15
  5339                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5340  010962  0100               	movlb	0	; () banked
  5341  010964  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5342  010966  D003               	goto	l521
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5346  010968  010F               	movlb	15	; () banked
  5347  01096A  8311               	bsf	17,1,b	;volatile
  5348  01096C  D002               	goto	l522
  5349  01096E                     l521:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;inc\CANlib.h: 1014: else
  5353                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5354  01096E  010F               	movlb	15	; () banked
  5355  010970  9311               	bcf	17,1,b	;volatile
  5356  010972                     l522:
  5357                           
  5358                           ; BSR set to: 15
  5359                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5360  010972  0100               	movlb	0	; () banked
  5361  010974  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5362  010976  D003               	goto	l523
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5366  010978  010F               	movlb	15	; () banked
  5367  01097A  8B11               	bsf	17,5,b	;volatile
  5368  01097C  D002               	goto	l524
  5369  01097E                     l523:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 1019: else
  5373                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5374  01097E  010F               	movlb	15	; () banked
  5375  010980  9B11               	bcf	17,5,b	;volatile
  5376  010982                     l524:
  5377                           
  5378                           ; BSR set to: 15
  5379                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5380  010982  0100               	movlb	0	; () banked
  5381  010984  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5382  010986  D003               	goto	l525
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5386  010988  010F               	movlb	15	; () banked
  5387  01098A  8D11               	bsf	17,6,b	;volatile
  5388  01098C  D002               	goto	l526
  5389  01098E                     l525:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;inc\CANlib.h: 1024: else
  5393                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5394  01098E  010F               	movlb	15	; () banked
  5395  010990  9D11               	bcf	17,6,b	;volatile
  5396  010992                     l526:
  5397                           
  5398                           ; BSR set to: 15
  5399                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5400  010992  0100               	movlb	0	; () banked
  5401  010994  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5402  010996  D003               	goto	l527
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5406  010998  010F               	movlb	15	; () banked
  5407  01099A  8F11               	bsf	17,7,b	;volatile
  5408  01099C  D002               	goto	l5342
  5409  01099E                     l527:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 1029: else
  5413                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5414  01099E  010F               	movlb	15	; () banked
  5415  0109A0  9F11               	bcf	17,7,b	;volatile
  5416  0109A2                     l5342:
  5417                           
  5418                           ; BSR set to: 15
  5419                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5420  0109A2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5421  0109A6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5422  0109AA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5423  0109AE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5424  0109B2  0E16               	movlw	22
  5425  0109B4  D006               	goto	u6460
  5426  0109B6                     u6465:
  5427  0109B6  0100               	movlb	0	; () banked
  5428  0109B8  90D8               	bcf	status,0,c
  5429  0109BA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5430  0109BC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5431  0109BE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5432  0109C0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5433  0109C2                     u6460:
  5434  0109C2  2EE8               	decfsz	wreg,f,c
  5435  0109C4  D7F8               	goto	u6465
  5436  0109C6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5437  0109CA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5438  0109CE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5439  0109D2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5443  0109D6  0100               	movlb	0	; () banked
  5444  0109D8  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5445  0109DA  0100               	movlb	0	; () banked
  5446  0109DC  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5447  0109DE  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5448  0109E0  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5449  0109E2  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5453  0109E4  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5454  0109E8                     l5348:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;inc\CANlib.h: 1035: }
  5458                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5459  0109E8  0E05               	movlw	5
  5460  0109EA  0100               	movlb	0	; () banked
  5461  0109EC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5462  0109EE  A4D8               	btfss	status,2,c
  5463  0109F0  0012               	return	
  5464                           
  5465                           ; BSR set to: 0
  5466  0109F2  0EF7               	movlw	247
  5467  0109F4  0100               	movlb	0	; () banked
  5468  0109F6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5469  0109F8  A4D8               	btfss	status,2,c
  5470  0109FA  0012               	return	
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;inc\CANlib.h: 1038: {
  5474                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5475  0109FC  010F               	movlb	15	; () banked
  5476  0109FE  8715               	bsf	21,3,b	;volatile
  5477                           
  5478                           ; BSR set to: 15
  5479                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5480  010A00  0100               	movlb	0	; () banked
  5481  010A02  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5482  010A04  0100               	movlb	0	; () banked
  5483  010A06  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5484  010A08  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5485  010A0A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5486  010A0C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5490  010A0E  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5494  010A12  0E00               	movlw	0
  5495  010A14  0100               	movlb	0	; () banked
  5496  010A16  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5497  010A18  0100               	movlb	0	; () banked
  5498  010A1A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5499  010A1C  0EFF               	movlw	255
  5500  010A1E  0100               	movlb	0	; () banked
  5501  010A20  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5502  010A22  0100               	movlb	0	; () banked
  5503  010A24  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5504  010A26  0E00               	movlw	0
  5505  010A28  0100               	movlb	0	; () banked
  5506  010A2A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5507  010A2C  0100               	movlb	0	; () banked
  5508  010A2E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5509  010A30  0E00               	movlw	0
  5510  010A32  0100               	movlb	0	; () banked
  5511  010A34  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5512  010A36  0100               	movlb	0	; () banked
  5513  010A38  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5517  010A3A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5518  010A3E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5519  010A42  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5520  010A46  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5521  010A4A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5522  010A4E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5523  010A52  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5524  010A56  0100               	movlb	0	; () banked
  5525  010A58  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5526  010A5A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5527  010A5E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5528  010A62  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5529  010A66  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5533  010A6A  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5537  010A6E  0100               	movlb	0	; () banked
  5538  010A70  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5539  010A72  D003               	goto	l530
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5543  010A74  010F               	movlb	15	; () banked
  5544  010A76  8115               	bsf	21,0,b	;volatile
  5545  010A78  D002               	goto	l531
  5546  010A7A                     l530:
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;inc\CANlib.h: 1050: else
  5550                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5551  010A7A  010F               	movlb	15	; () banked
  5552  010A7C  9115               	bcf	21,0,b	;volatile
  5553  010A7E                     l531:
  5554                           
  5555                           ; BSR set to: 15
  5556                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5557  010A7E  0100               	movlb	0	; () banked
  5558  010A80  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5559  010A82  D003               	goto	l532
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5563  010A84  010F               	movlb	15	; () banked
  5564  010A86  8315               	bsf	21,1,b	;volatile
  5565  010A88  D002               	goto	l533
  5566  010A8A                     l532:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 1055: else
  5570                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5571  010A8A  010F               	movlb	15	; () banked
  5572  010A8C  9315               	bcf	21,1,b	;volatile
  5573  010A8E                     l533:
  5574                           
  5575                           ; BSR set to: 15
  5576                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5577  010A8E  0100               	movlb	0	; () banked
  5578  010A90  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5579  010A92  D003               	goto	l534
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5583  010A94  010F               	movlb	15	; () banked
  5584  010A96  8B15               	bsf	21,5,b	;volatile
  5585  010A98  D002               	goto	l535
  5586  010A9A                     l534:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;inc\CANlib.h: 1060: else
  5590                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5591  010A9A  010F               	movlb	15	; () banked
  5592  010A9C  9B15               	bcf	21,5,b	;volatile
  5593  010A9E                     l535:
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5597  010A9E  0100               	movlb	0	; () banked
  5598  010AA0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5599  010AA2  D003               	goto	l536
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5603  010AA4  010F               	movlb	15	; () banked
  5604  010AA6  8D15               	bsf	21,6,b	;volatile
  5605  010AA8  D002               	goto	l537
  5606  010AAA                     l536:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;inc\CANlib.h: 1065: else
  5610                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5611  010AAA  010F               	movlb	15	; () banked
  5612  010AAC  9D15               	bcf	21,6,b	;volatile
  5613  010AAE                     l537:
  5614                           
  5615                           ; BSR set to: 15
  5616                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5617  010AAE  0100               	movlb	0	; () banked
  5618  010AB0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5619  010AB2  D003               	goto	l538
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5623  010AB4  010F               	movlb	15	; () banked
  5624  010AB6  8F15               	bsf	21,7,b	;volatile
  5625  010AB8  D002               	goto	l5376
  5626  010ABA                     l538:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;inc\CANlib.h: 1070: else
  5630                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5631  010ABA  010F               	movlb	15	; () banked
  5632  010ABC  9F15               	bcf	21,7,b	;volatile
  5633  010ABE                     l5376:
  5634                           
  5635                           ; BSR set to: 15
  5636                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5637  010ABE  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5638  010AC2  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5639  010AC6  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5640  010ACA  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5641  010ACE  0E16               	movlw	22
  5642  010AD0  D006               	goto	u6540
  5643  010AD2                     u6545:
  5644  010AD2  0100               	movlb	0	; () banked
  5645  010AD4  90D8               	bcf	status,0,c
  5646  010AD6  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5647  010AD8  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5648  010ADA  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5649  010ADC  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5650  010ADE                     u6540:
  5651  010ADE  2EE8               	decfsz	wreg,f,c
  5652  010AE0  D7F8               	goto	u6545
  5653  010AE2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5654  010AE6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5655  010AEA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5656  010AEE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5660  010AF2  0100               	movlb	0	; () banked
  5661  010AF4  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5662  010AF6  0100               	movlb	0	; () banked
  5663  010AF8  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5664  010AFA  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5665  010AFC  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5666  010AFE  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5670  010B00  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5671  010B04  0012               	return	
  5672  010B06                     __end_of_CANSetFilter:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           intcon	equ	0xFF2
  5679                           postinc0	equ	0xFEE
  5680                           wreg	equ	0xFE8
  5681                           status	equ	0xFD8
  5682                           
  5683 ;; *************** function _CANOperationMode *****************
  5684 ;; Defined at:
  5685 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  mode            1    wreg     enum E16881
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  mode            1   18[BANK0 ] enum E16881
  5690 ;; Return value:  Size  Location     Type
  5691 ;;		None               void
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;Total ram usage:        1 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    3
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_CANInitialize
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text5
  5714  015E2E                     __ptext5:
  5715                           	opt stack 0
  5716  015E2E                     _CANOperationMode:
  5717                           	opt stack 25
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;incstack = 0
  5721                           ;CANOperationMode@mode stored from wreg
  5722  015E2E  0100               	movlb	0	; () banked
  5723  015E30  6F72               	movwf	CANOperationMode@mode& (0+255),b
  5724                           
  5725                           ;inc\CANlib.h: 208: CANCON = mode;
  5726  015E32  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5727  015E36                     l4972:
  5728  015E36  506E               	movf	3950,w,c	;volatile
  5729  015E38  0BE0               	andlw	224
  5730  015E3A  0100               	movlb	0	; () banked
  5731  015E3C  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  5732  015E3E  B4D8               	btfsc	status,2,c
  5733  015E40  0012               	return	
  5734  015E42  D7F9               	goto	l4972
  5735  015E44                     __end_of_CANOperationMode:
  5736                           	opt stack 0
  5737                           tblptru	equ	0xFF8
  5738                           tblptrh	equ	0xFF7
  5739                           tblptrl	equ	0xFF6
  5740                           tablat	equ	0xFF5
  5741                           intcon	equ	0xFF2
  5742                           postinc0	equ	0xFEE
  5743                           wreg	equ	0xFE8
  5744                           status	equ	0xFD8
  5745                           
  5746 ;; *************** function _PWR_Button_Polling *****************
  5747 ;; Defined at:
  5748 ;;		line 403 in file "RemoteCan.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;		None               void
  5755 ;; Registers used:
  5756 ;;		None
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;Total ram usage:        0 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    3
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_main
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text6
  5777  015DBE                     __ptext6:
  5778                           	opt stack 0
  5779  015DBE                     _PWR_Button_Polling:
  5780                           	opt stack 27
  5781                           
  5782                           ;RemoteCan.c: 404: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;incstack = 0
  5786  015DBE  AA81               	btfss	3969,5,c	;volatile
  5787  015DC0  D002               	goto	l855
  5788  015DC2  B44C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5789  015DC4  0012               	return	
  5790  015DC6                     l855:
  5791                           
  5792                           ;RemoteCan.c: 405: wait_low_1 = 0;
  5793  015DC6  944C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5794                           
  5795                           ;RemoteCan.c: 406: if (PORTBbits.RB5 == 1) {
  5796  015DC8  AA81               	btfss	3969,5,c	;volatile
  5797  015DCA  0012               	return	
  5798                           
  5799                           ;RemoteCan.c: 407: power_switch = ~power_switch;
  5800  015DCC  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5801  015DCE  D002               	goto	u8420
  5802  015DD0  804C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5803  015DD2  D001               	goto	u8435
  5804  015DD4                     u8420:
  5805  015DD4  904C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5806  015DD6                     u8435:
  5807                           
  5808                           ;RemoteCan.c: 408: wait_low_1 = 1;
  5809  015DD6  844C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5810  015DD8  0012               	return	
  5811  015DDA                     __end_of_PWR_Button_Polling:
  5812                           	opt stack 0
  5813                           tblptru	equ	0xFF8
  5814                           tblptrh	equ	0xFF7
  5815                           tblptrl	equ	0xFF6
  5816                           tablat	equ	0xFF5
  5817                           intcon	equ	0xFF2
  5818                           postinc0	equ	0xFEE
  5819                           wreg	equ	0xFE8
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _LCD_Handler *****************
  5823 ;; Defined at:
  5824 ;;		line 313 in file "RemoteCan.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    9
  5845 ;; This function calls:
  5846 ;;		_CANisTxReady
  5847 ;;		_CANsendMessage
  5848 ;;		_LCD_clear
  5849 ;;		_LCD_goto_line
  5850 ;;		_LCD_goto_xy
  5851 ;;		_LCD_initialize
  5852 ;;		_LCD_write_message
  5853 ;;		_LCD_write_string
  5854 ;;		___fldiv
  5855 ;;		___xxtofl
  5856 ;;		_sprintf
  5857 ;; This function is called by:
  5858 ;;		_main
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text7
  5863  01460E                     __ptext7:
  5864                           	opt stack 0
  5865  01460E                     _LCD_Handler:
  5866                           	opt stack 21
  5867  01460E                     l8534:
  5868  01460E  ECAD  F0AE         	call	_CANisTxReady	;wreg free
  5869  014612  06E8               	decf	wreg,f,c
  5870  014614  A4D8               	btfss	status,2,c
  5871  014616  D7FB               	goto	l8534
  5872                           
  5873                           ;RemoteCan.c: 316: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5874  014618  0E06               	movlw	6
  5875  01461A  0100               	movlb	0	; () banked
  5876  01461C  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  5877  01461E  0E00               	movlw	0
  5878  014620  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5879  014622  0E00               	movlw	0
  5880  014624  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5881  014626  0E00               	movlw	0
  5882  014628  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5883  01462A  0EEA               	movlw	low _data_speed
  5884  01462C  0100               	movlb	0	; () banked
  5885  01462E  6F76               	movwf	CANsendMessage@data& (0+255),b
  5886  014630  0E00               	movlw	high _data_speed
  5887  014632  0100               	movlb	0	; () banked
  5888  014634  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  5889  014636  0E08               	movlw	8
  5890  014638  0100               	movlb	0	; () banked
  5891  01463A  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  5892  01463C  0EFC               	movlw	252
  5893  01463E  0100               	movlb	0	; () banked
  5894  014640  6F79               	movwf	CANsendMessage@flags& (0+255),b
  5895  014642  ECCD  F089         	call	_CANsendMessage	;wreg free
  5896                           
  5897                           ;RemoteCan.c: 318: actual_speed_kmh = ((actual_speed) / 278.0);
  5898  014646  C0DE  F072         	movff	_actual_speed,___xxtofl@val
  5899  01464A  C0DF  F073         	movff	_actual_speed+1,___xxtofl@val+1
  5900  01464E  0100               	movlb	0	; () banked
  5901  014650  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  5902  014652  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  5903  014654  0E00               	movlw	0
  5904  014656  ECFF  F0A3         	call	___xxtofl
  5905  01465A  C072  F080         	movff	?___xxtofl,___fldiv@b
  5906  01465E  C073  F081         	movff	?___xxtofl+1,___fldiv@b+1
  5907  014662  C074  F082         	movff	?___xxtofl+2,___fldiv@b+2
  5908  014666  C075  F083         	movff	?___xxtofl+3,___fldiv@b+3
  5909  01466A  0E00               	movlw	0
  5910  01466C  0100               	movlb	0	; () banked
  5911  01466E  6F84               	movwf	___fldiv@a& (0+255),b
  5912  014670  0E00               	movlw	0
  5913  014672  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  5914  014674  0E8B               	movlw	139
  5915  014676  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  5916  014678  0E43               	movlw	67
  5917  01467A  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  5918  01467C  ECDD  F09D         	call	___fldiv	;wreg free
  5919  014680  C080  F00E         	movff	?___fldiv,_actual_speed_kmh
  5920  014684  C081  F00F         	movff	?___fldiv+1,_actual_speed_kmh+1
  5921  014688  C082  F010         	movff	?___fldiv+2,_actual_speed_kmh+2
  5922  01468C  C083  F011         	movff	?___fldiv+3,_actual_speed_kmh+3
  5923                           
  5924                           ;RemoteCan.c: 319: sprintf(str, "%.2f", actual_speed_kmh);
  5925  014690  0E0F               	movlw	low _str
  5926  014692  0100               	movlb	0	; () banked
  5927  014694  6FC4               	movwf	sprintf@sp& (0+255),b
  5928  014696  0E01               	movlw	high _str
  5929  014698  0100               	movlb	0	; () banked
  5930  01469A  6FC5               	movwf	(sprintf@sp+1)& (0+255),b
  5931  01469C  0EF9               	movlw	low STR_5
  5932  01469E  0100               	movlb	0	; () banked
  5933  0146A0  6FC6               	movwf	sprintf@f& (0+255),b
  5934  0146A2  0EFF               	movlw	high STR_5
  5935  0146A4  0100               	movlb	0	; () banked
  5936  0146A6  6FC7               	movwf	(sprintf@f+1)& (0+255),b
  5937  0146A8  C00E  F0C8         	movff	_actual_speed_kmh,?_sprintf+4
  5938  0146AC  C00F  F0C9         	movff	_actual_speed_kmh+1,?_sprintf+5
  5939  0146B0  C010  F0CA         	movff	_actual_speed_kmh+2,?_sprintf+6
  5940  0146B4  C011  F0CB         	movff	_actual_speed_kmh+3,?_sprintf+7
  5941  0146B8  EC83  F085         	call	_sprintf	;wreg free
  5942                           
  5943                           ;RemoteCan.c: 320: str[11] = '\0';
  5944  0146BC  0E00               	movlw	0
  5945  0146BE  0101               	movlb	1	; () banked
  5946  0146C0  6F1A               	movwf	(_str+11)& (0+255),b
  5947                           
  5948                           ; BSR set to: 1
  5949                           ;RemoteCan.c: 322: if (display_refresh == 1) {
  5950  0146C2  AC4B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  5951  0146C4  D032               	goto	l8560
  5952                           
  5953                           ; BSR set to: 1
  5954                           ;RemoteCan.c: 323: LCD_initialize(16);
  5955  0146C6  0E10               	movlw	16
  5956  0146C8  EC24  F0A8         	call	_LCD_initialize
  5957                           
  5958                           ;RemoteCan.c: 324: LCD_clear();
  5959  0146CC  EC6C  F0AE         	call	_LCD_clear	;wreg free
  5960                           
  5961                           ;RemoteCan.c: 325: LCD_goto_line(1);
  5962  0146D0  0E01               	movlw	1
  5963  0146D2  EC12  F0AA         	call	_LCD_goto_line
  5964                           
  5965                           ;RemoteCan.c: 326: LCD_write_message("=== VEHICLE DATA ===");
  5966  0146D6  0E75               	movlw	low STR_6
  5967  0146D8  0100               	movlb	0	; () banked
  5968  0146DA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5969  0146DC  0EFF               	movlw	high STR_6
  5970  0146DE  0100               	movlb	0	; () banked
  5971  0146E0  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5972  0146E2  EC39  F0AE         	call	_LCD_write_message	;wreg free
  5973                           
  5974                           ;RemoteCan.c: 327: LCD_goto_line(2);
  5975  0146E6  0E02               	movlw	2
  5976  0146E8  EC12  F0AA         	call	_LCD_goto_line
  5977                           
  5978                           ;RemoteCan.c: 328: LCD_write_message("Direction: ");
  5979  0146EC  0EBE               	movlw	low STR_7
  5980  0146EE  0100               	movlb	0	; () banked
  5981  0146F0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5982  0146F2  0EFF               	movlw	high STR_7
  5983  0146F4  0100               	movlb	0	; () banked
  5984  0146F6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5985  0146F8  EC39  F0AE         	call	_LCD_write_message	;wreg free
  5986                           
  5987                           ;RemoteCan.c: 329: LCD_goto_line(3);
  5988  0146FC  0E03               	movlw	3
  5989  0146FE  EC12  F0AA         	call	_LCD_goto_line
  5990                           
  5991                           ;RemoteCan.c: 330: LCD_write_message("Speed: 0.00 Km/h");
  5992  014702  0E9F               	movlw	low STR_8
  5993  014704  0100               	movlb	0	; () banked
  5994  014706  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5995  014708  0EFF               	movlw	high STR_8
  5996  01470A  0100               	movlb	0	; () banked
  5997  01470C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5998  01470E  EC39  F0AE         	call	_LCD_write_message	;wreg free
  5999                           
  6000                           ;RemoteCan.c: 331: LCD_goto_line(4);
  6001  014712  0E04               	movlw	4
  6002  014714  EC12  F0AA         	call	_LCD_goto_line
  6003                           
  6004                           ;RemoteCan.c: 332: LCD_write_message("Park assist: ");
  6005  014718  0EB0               	movlw	low STR_9
  6006  01471A  0100               	movlb	0	; () banked
  6007  01471C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6008  01471E  0EFF               	movlw	high STR_9
  6009  014720  0100               	movlb	0	; () banked
  6010  014722  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6011  014724  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6012                           
  6013                           ;RemoteCan.c: 333: display_refresh = 0;
  6014  014728  9C4B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6015  01472A                     l8560:
  6016                           
  6017                           ;RemoteCan.c: 334: }
  6018                           ;RemoteCan.c: 337: LCD_goto_xy(12, 2);
  6019  01472A  0E02               	movlw	2
  6020  01472C  0100               	movlb	0	; () banked
  6021  01472E  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6022  014730  0E0C               	movlw	12
  6023  014732  ECED  F0AE         	call	_LCD_goto_xy
  6024                           
  6025                           ;RemoteCan.c: 338: if (switch_position != 0) {
  6026  014736  0100               	movlb	0	; () banked
  6027  014738  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  6028  01473A  B4D8               	btfsc	status,2,c
  6029  01473C  D016               	goto	l8570
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;RemoteCan.c: 339: if (dir == 1) {
  6033  01473E  0100               	movlb	0	; () banked
  6034  014740  05E4               	decf	_dir& (0+255),w,b	;volatile
  6035  014742  A4D8               	btfss	status,2,c
  6036  014744  D009               	goto	l8568
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;RemoteCan.c: 340: LCD_write_message("FWD ");
  6040  014746  0EEF               	movlw	low STR_10
  6041  014748  0100               	movlb	0	; () banked
  6042  01474A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6043  01474C  0EFF               	movlw	high STR_10
  6044  01474E  0100               	movlb	0	; () banked
  6045  014750  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6046  014752  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6047                           
  6048                           ;RemoteCan.c: 341: } else {
  6049  014756  D011               	goto	l8572
  6050  014758                     l8568:
  6051                           
  6052                           ;RemoteCan.c: 342: LCD_write_message("BKWD");
  6053  014758  0EF4               	movlw	low STR_11
  6054  01475A  0100               	movlb	0	; () banked
  6055  01475C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6056  01475E  0EFF               	movlw	high STR_11
  6057  014760  0100               	movlb	0	; () banked
  6058  014762  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6059  014764  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6060                           
  6061                           ;RemoteCan.c: 343: }
  6062                           ;RemoteCan.c: 344: } else {
  6063  014768  D008               	goto	l8572
  6064  01476A                     l8570:
  6065                           
  6066                           ;RemoteCan.c: 345: LCD_write_message("P   ");
  6067  01476A  0EEA               	movlw	low STR_12
  6068  01476C  0100               	movlb	0	; () banked
  6069  01476E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6070  014770  0EFF               	movlw	high STR_12
  6071  014772  0100               	movlb	0	; () banked
  6072  014774  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6073  014776  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6074  01477A                     l8572:
  6075                           
  6076                           ;RemoteCan.c: 346: }
  6077                           ;RemoteCan.c: 349: LCD_goto_xy(8, 3);
  6078  01477A  0E03               	movlw	3
  6079  01477C  0100               	movlb	0	; () banked
  6080  01477E  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6081  014780  0E08               	movlw	8
  6082  014782  ECED  F0AE         	call	_LCD_goto_xy
  6083                           
  6084                           ;RemoteCan.c: 350: LCD_write_string(str);
  6085  014786  0E0F               	movlw	low _str
  6086  014788  0100               	movlb	0	; () banked
  6087  01478A  6F83               	movwf	LCD_write_string@buffer& (0+255),b
  6088  01478C  0E01               	movlw	high _str
  6089  01478E  0100               	movlb	0	; () banked
  6090  014790  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6091  014792  EC9A  F0AE         	call	_LCD_write_string	;wreg free
  6092                           
  6093                           ;RemoteCan.c: 353: LCD_goto_xy(14, 4);
  6094  014796  0E04               	movlw	4
  6095  014798  0100               	movlb	0	; () banked
  6096  01479A  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6097  01479C  0E0E               	movlw	14
  6098  01479E  ECED  F0AE         	call	_LCD_goto_xy
  6099                           
  6100                           ;RemoteCan.c: 354: if (parking_state == 0) {
  6101  0147A2  0100               	movlb	0	; () banked
  6102  0147A4  51E5               	movf	_parking_state& (0+255),w,b	;volatile
  6103  0147A6  A4D8               	btfss	status,2,c
  6104  0147A8  D009               	goto	l8582
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;RemoteCan.c: 355: LCD_write_message("OFF    ");
  6108  0147AA  0ECA               	movlw	low STR_13
  6109  0147AC  0100               	movlb	0	; () banked
  6110  0147AE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6111  0147B0  0EFF               	movlw	high STR_13
  6112  0147B2  0100               	movlb	0	; () banked
  6113  0147B4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6114  0147B6  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6115                           
  6116                           ;RemoteCan.c: 356: } else {
  6117  0147BA  0012               	return	
  6118  0147BC                     l8582:
  6119                           
  6120                           ;RemoteCan.c: 357: if (parking_state == 1) {
  6121  0147BC  0100               	movlb	0	; () banked
  6122  0147BE  05E5               	decf	_parking_state& (0+255),w,b	;volatile
  6123  0147C0  A4D8               	btfss	status,2,c
  6124  0147C2  D014               	goto	l8590
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;RemoteCan.c: 358: if (space_available == 0) {
  6128  0147C4  B24C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  6129  0147C6  D009               	goto	l8588
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;RemoteCan.c: 359: LCD_write_message("SEARCH ");
  6133  0147C8  0EDA               	movlw	low STR_14
  6134  0147CA  0100               	movlb	0	; () banked
  6135  0147CC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6136  0147CE  0EFF               	movlw	high STR_14
  6137  0147D0  0100               	movlb	0	; () banked
  6138  0147D2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6139  0147D4  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6140                           
  6141                           ;RemoteCan.c: 360: } else {
  6142  0147D8  0012               	return	
  6143  0147DA                     l8588:
  6144                           
  6145                           ;RemoteCan.c: 361: LCD_write_message("FOUND! ");
  6146  0147DA  0ED2               	movlw	low STR_15
  6147  0147DC  0100               	movlb	0	; () banked
  6148  0147DE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6149  0147E0  0EFF               	movlw	high STR_15
  6150  0147E2  0100               	movlb	0	; () banked
  6151  0147E4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6152  0147E6  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6153                           
  6154                           ;RemoteCan.c: 362: }
  6155                           ;RemoteCan.c: 363: } else {
  6156  0147EA  0012               	return	
  6157  0147EC                     l8590:
  6158                           
  6159                           ;RemoteCan.c: 364: LCD_write_message("PARKING");
  6160  0147EC  0EE2               	movlw	low STR_16
  6161  0147EE  0100               	movlb	0	; () banked
  6162  0147F0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6163  0147F2  0EFF               	movlw	high STR_16
  6164  0147F4  0100               	movlb	0	; () banked
  6165  0147F6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6166  0147F8  EC39  F0AE         	call	_LCD_write_message	;wreg free
  6167  0147FC  0012               	return	
  6168  0147FE                     __end_of_LCD_Handler:
  6169                           	opt stack 0
  6170                           tblptru	equ	0xFF8
  6171                           tblptrh	equ	0xFF7
  6172                           tblptrl	equ	0xFF6
  6173                           tablat	equ	0xFF5
  6174                           intcon	equ	0xFF2
  6175                           postinc0	equ	0xFEE
  6176                           wreg	equ	0xFE8
  6177                           status	equ	0xFD8
  6178                           
  6179 ;; *************** function _sprintf *****************
  6180 ;; Defined at:
  6181 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  sp              2  100[BANK0 ] PTR unsigned char 
  6184 ;;		 -> str(12), 
  6185 ;;  f               2  102[BANK0 ] PTR const unsigned char 
  6186 ;;		 -> STR_5(5), 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  fval            4   22[BANK1 ] PTR const unsigned char 
  6189 ;;  tmpval          4   16[BANK1 ] struct .
  6190 ;;  val             4   10[BANK1 ] unsigned long 
  6191 ;;  cp              3    0        PTR const unsigned char 
  6192 ;;  prec            2   20[BANK1 ] int 
  6193 ;;  exp             2   14[BANK1 ] int 
  6194 ;;  flag            2    8[BANK1 ] unsigned short 
  6195 ;;  ap              2    6[BANK1 ] PTR void [1]
  6196 ;;		 -> ?_sprintf(2), 
  6197 ;;  len             2    0        unsigned int 
  6198 ;;  width           2    0        int 
  6199 ;;  c               1   26[BANK1 ] char 
  6200 ;;  d               1    0        unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2  100[BANK0 ] int 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:         0       8      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:       35 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    5
  6217 ;; This function calls:
  6218 ;;		___awdiv
  6219 ;;		___fladd
  6220 ;;		___flge
  6221 ;;		___flmul
  6222 ;;		___flneg
  6223 ;;		___flsub
  6224 ;;		___fltol
  6225 ;;		___lldiv
  6226 ;;		___llmod
  6227 ;;		___wmul
  6228 ;;		___xxtofl
  6229 ;;		__div_to_l_
  6230 ;;		__tdiv_to_l_
  6231 ;;		_fround
  6232 ;;		_isdigit
  6233 ;;		_scale
  6234 ;; This function is called by:
  6235 ;;		_LCD_Handler
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text8
  6240  010B06                     __ptext8:
  6241                           	opt stack 0
  6242  010B06                     _sprintf:
  6243                           	opt stack 24
  6244                           
  6245                           ;doprnt.c: 494: va_list ap;
  6246                           ;doprnt.c: 499: signed char c;
  6247                           ;doprnt.c: 501: int width;
  6248                           ;doprnt.c: 504: int prec;
  6249                           ;doprnt.c: 508: unsigned short flag;
  6250                           ;doprnt.c: 515: char d;
  6251                           ;doprnt.c: 516: double fval;
  6252                           ;doprnt.c: 517: int exp;
  6253                           ;doprnt.c: 523: union {
  6254                           ;doprnt.c: 524: unsigned long vd;
  6255                           ;doprnt.c: 525: double integ;
  6256                           ;doprnt.c: 526: } tmpval;
  6257                           ;doprnt.c: 528: unsigned long val;
  6258                           ;doprnt.c: 529: unsigned len;
  6259                           ;doprnt.c: 530: const char * cp;
  6260                           ;doprnt.c: 533: *ap = __va_start();
  6261                           
  6262                           ;incstack = 0
  6263  010B06  0EC8               	movlw	low (?_sprintf+4)
  6264  010B08  0101               	movlb	1	; () banked
  6265  010B0A  6F29               	movwf	sprintf@ap& (0+255),b
  6266  010B0C  0E00               	movlw	high (?_sprintf+4)
  6267  010B0E  0101               	movlb	1	; () banked
  6268  010B10  6F2A               	movwf	(sprintf@ap+1)& (0+255),b
  6269                           
  6270                           ;doprnt.c: 536: while(c = *f++) {
  6271  010B12  EFB5  F089         	goto	l8456
  6272  010B16                     l8258:
  6273                           
  6274                           ; BSR set to: 1
  6275                           ;doprnt.c: 538: if(c != '%')
  6276  010B16  0E25               	movlw	37
  6277  010B18  0101               	movlb	1	; () banked
  6278  010B1A  193D               	xorwf	sprintf@c& (0+255),w,b
  6279  010B1C  B4D8               	btfsc	status,2,c
  6280  010B1E  D008               	goto	l8264
  6281                           
  6282                           ; BSR set to: 1
  6283                           ;doprnt.c: 540: {
  6284                           ;doprnt.c: 541: ((*sp++ = (c)));
  6285  010B20  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6286  010B24  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6287  010B28  C13D  FFDF         	movff	sprintf@c,indf2
  6288  010B2C  EFB2  F089         	goto	l8454
  6289  010B30                     l8264:
  6290                           
  6291                           ;doprnt.c: 543: }
  6292                           ;doprnt.c: 548: flag = 0;
  6293  010B30  0E00               	movlw	0
  6294  010B32  0101               	movlb	1	; () banked
  6295  010B34  6F2C               	movwf	(sprintf@flag+1)& (0+255),b
  6296  010B36  0E00               	movlw	0
  6297  010B38  6F2B               	movwf	sprintf@flag& (0+255),b
  6298                           
  6299                           ; BSR set to: 1
  6300                           ;doprnt.c: 611: if(*f == '.') {
  6301  010B3A  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6302  010B3E  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6303  010B42                     	if	0	;tblptru may be non-zero
  6304  010B42                     	endif
  6305  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6306  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6307  010B44  6EF8               	movwf	tblptru,c
  6308  010B46                     	endif
  6309  010B46  0008               	tblrd		*
  6310  010B48  50F5               	movf	tablat,w,c
  6311  010B4A  0A2E               	xorlw	46
  6312  010B4C  A4D8               	btfss	status,2,c
  6313  010B4E  D03D               	goto	l8278
  6314                           
  6315                           ; BSR set to: 1
  6316                           ;doprnt.c: 612: flag |= 0x4000;
  6317  010B50  0101               	movlb	1	; () banked
  6318  010B52  8D2C               	bsf	(sprintf@flag+1)& (0+255),6,b
  6319                           
  6320                           ;doprnt.c: 613: f++;
  6321  010B54  0100               	movlb	0	; () banked
  6322  010B56  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6323  010B58  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;doprnt.c: 620: {
  6327                           ;doprnt.c: 621: prec = 0;
  6328  010B5A  0E00               	movlw	0
  6329  010B5C  0101               	movlb	1	; () banked
  6330  010B5E  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6331  010B60  0E00               	movlw	0
  6332  010B62  6F37               	movwf	sprintf@prec& (0+255),b
  6333                           
  6334                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6335  010B64  D025               	goto	l8276
  6336  010B66                     l8272:
  6337                           
  6338                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6339  010B66  C137  F072         	movff	sprintf@prec,___wmul@multiplier
  6340  010B6A  C138  F073         	movff	sprintf@prec+1,___wmul@multiplier+1
  6341  010B6E  0E00               	movlw	0
  6342  010B70  0100               	movlb	0	; () banked
  6343  010B72  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6344  010B74  0E0A               	movlw	10
  6345  010B76  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6346  010B78  EC1E  F0AE         	call	___wmul	;wreg free
  6347  010B7C  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6348  010B80  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6349  010B84                     	if	0	;tblptru may be non-zero
  6350  010B84                     	endif
  6351  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6352  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6353  010B86  6EF8               	movwf	tblptru,c
  6354  010B88                     	endif
  6355  010B88  0008               	tblrd		*
  6356  010B8A  50F5               	movf	tablat,w,c
  6357  010B8C  0100               	movlb	0	; () banked
  6358  010B8E  2772               	addwf	?___wmul& (0+255),f,b
  6359  010B90  0E00               	movlw	0
  6360  010B92  0100               	movlb	0	; () banked
  6361  010B94  2373               	addwfc	(?___wmul+1)& (0+255),f,b
  6362  010B96  0ED0               	movlw	208
  6363  010B98  0100               	movlb	0	; () banked
  6364  010B9A  2572               	addwf	?___wmul& (0+255),w,b
  6365  010B9C  0101               	movlb	1	; () banked
  6366  010B9E  6F37               	movwf	sprintf@prec& (0+255),b
  6367  010BA0  0EFF               	movlw	255
  6368  010BA2  0100               	movlb	0	; () banked
  6369  010BA4  2173               	addwfc	(?___wmul+1)& (0+255),w,b
  6370  010BA6  0101               	movlb	1	; () banked
  6371  010BA8  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6372                           
  6373                           ; BSR set to: 1
  6374  010BAA  0100               	movlb	0	; () banked
  6375  010BAC  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6376  010BAE  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6377  010BB0                     l8276:
  6378  010BB0  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6379  010BB4  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6380  010BB8                     	if	0	;tblptru may be non-zero
  6381  010BB8                     	endif
  6382  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6383  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6384  010BBA  6EF8               	movwf	tblptru,c
  6385  010BBC                     	endif
  6386  010BBC  0008               	tblrd		*
  6387  010BBE  50F5               	movf	tablat,w,c
  6388  010BC0  EC85  F0AE         	call	_isdigit
  6389  010BC4  A0D8               	btfss	status,0,c
  6390  010BC6  D00C               	goto	l8286
  6391  010BC8  D7CE               	goto	l8272
  6392  010BCA                     l8278:
  6393                           
  6394                           ;doprnt.c: 626: prec = 0;
  6395  010BCA  0E00               	movlw	0
  6396  010BCC  0101               	movlb	1	; () banked
  6397  010BCE  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6398  010BD0  0E00               	movlw	0
  6399  010BD2  6F37               	movwf	sprintf@prec& (0+255),b
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;doprnt.c: 628: flag |= 0x1000;
  6403  010BD4  0101               	movlb	1	; () banked
  6404  010BD6  892C               	bsf	(sprintf@flag+1)& (0+255),4,b
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;doprnt.c: 630: }
  6408                           ;doprnt.c: 635: switch(c = *f++) {
  6409  010BD8  D003               	goto	l8286
  6410  010BDA                     l8282:
  6411                           
  6412                           ; BSR set to: 1
  6413                           ;doprnt.c: 663: flag |= 0x400;
  6414  010BDA  0101               	movlb	1	; () banked
  6415  010BDC  852C               	bsf	(sprintf@flag+1)& (0+255),2,b
  6416                           
  6417                           ;doprnt.c: 664: break;
  6418  010BDE  D015               	goto	l8288
  6419  010BE0                     l8286:
  6420  010BE0  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6421  010BE4  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6422  010BE8  0100               	movlb	0	; () banked
  6423  010BEA  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6424  010BEC  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6425  010BEE                     	if	0	;tblptru may be non-zero
  6426  010BEE                     	endif
  6427  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6428  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6429  010BF0  6EF8               	movwf	tblptru,c
  6430  010BF2                     	endif
  6431  010BF2  0008               	tblrd		*
  6432  010BF4  CFF5 F13D          	movff	tablat,sprintf@c
  6433  010BF8  0101               	movlb	1	; () banked
  6434  010BFA  513D               	movf	sprintf@c& (0+255),w,b
  6435                           
  6436                           ; Switch size 1, requested type "space"
  6437                           ; Number of cases is 2, Range of values is 0 to 102
  6438                           ; switch strategies available:
  6439                           ; Name         Instructions Cycles
  6440                           ; simple_byte            7     4 (average)
  6441                           ;	Chosen strategy is simple_byte
  6442  010BFC  0A00               	xorlw	0	; case 0
  6443  010BFE  B4D8               	btfsc	status,2,c
  6444  010C00  D3C5               	goto	l8458
  6445  010C02  0A66               	xorlw	102	; case 102
  6446  010C04  B4D8               	btfsc	status,2,c
  6447  010C06  D7E9               	goto	l8282
  6448  010C08  D3B0               	goto	l8456
  6449  010C0A                     l8288:
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;doprnt.c: 825: if(flag & (0x700)) {
  6453  010C0A  0E07               	movlw	7
  6454  010C0C  0101               	movlb	1	; () banked
  6455  010C0E  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  6456  010C10  B4D8               	btfsc	status,2,c
  6457  010C12  D353               	goto	l8436
  6458                           
  6459                           ; BSR set to: 1
  6460                           ;doprnt.c: 827: if(flag & 0x1000)
  6461  010C14  0101               	movlb	1	; () banked
  6462  010C16  A92C               	btfss	(sprintf@flag+1)& (0+255),4,b
  6463  010C18  D005               	goto	l8294
  6464                           
  6465                           ; BSR set to: 1
  6466                           ;doprnt.c: 829: prec = 6;
  6467  010C1A  0E00               	movlw	0
  6468  010C1C  0101               	movlb	1	; () banked
  6469  010C1E  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6470  010C20  0E06               	movlw	6
  6471  010C22  6F37               	movwf	sprintf@prec& (0+255),b
  6472  010C24                     l8294:
  6473                           
  6474                           ; BSR set to: 1
  6475                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6476  010C24  C129  FFD9         	movff	sprintf@ap,fsr2l
  6477  010C28  C12A  FFDA         	movff	sprintf@ap+1,fsr2h
  6478  010C2C  CFDE F139          	movff	postinc2,sprintf@fval
  6479  010C30  CFDE F13A          	movff	postinc2,sprintf@fval+1
  6480  010C34  CFDE F13B          	movff	postinc2,sprintf@fval+2
  6481  010C38  CFDE F13C          	movff	postinc2,sprintf@fval+3
  6482                           
  6483                           ; BSR set to: 1
  6484  010C3C  0E04               	movlw	4
  6485  010C3E  0101               	movlb	1	; () banked
  6486  010C40  2729               	addwf	sprintf@ap& (0+255),f,b
  6487  010C42  0E00               	movlw	0
  6488  010C44  232A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6489                           
  6490                           ; BSR set to: 1
  6491                           ;doprnt.c: 831: if(fval < 0.0) {
  6492  010C46  0101               	movlb	1	; () banked
  6493  010C48  AF3C               	btfss	(sprintf@fval+3)& (0+255),7,b
  6494  010C4A  D015               	goto	l8304
  6495                           
  6496                           ; BSR set to: 1
  6497                           ;doprnt.c: 832: fval = -fval;
  6498  010C4C  C139  F099         	movff	sprintf@fval,___flneg@f1
  6499  010C50  C13A  F09A         	movff	sprintf@fval+1,___flneg@f1+1
  6500  010C54  C13B  F09B         	movff	sprintf@fval+2,___flneg@f1+2
  6501  010C58  C13C  F09C         	movff	sprintf@fval+3,___flneg@f1+3
  6502  010C5C  EC02  F0AE         	call	___flneg	;wreg free
  6503  010C60  C099  F139         	movff	?___flneg,sprintf@fval
  6504  010C64  C09A  F13A         	movff	?___flneg+1,sprintf@fval+1
  6505  010C68  C09B  F13B         	movff	?___flneg+2,sprintf@fval+2
  6506  010C6C  C09C  F13C         	movff	?___flneg+3,sprintf@fval+3
  6507                           
  6508                           ;doprnt.c: 833: flag |= 0x03;
  6509  010C70  0E03               	movlw	3
  6510  010C72  0101               	movlb	1	; () banked
  6511  010C74  132B               	iorwf	sprintf@flag& (0+255),f,b
  6512  010C76                     l8304:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;doprnt.c: 834: }
  6516                           ;doprnt.c: 835: exp = 0;
  6517  010C76  0E00               	movlw	0
  6518  010C78  0101               	movlb	1	; () banked
  6519  010C7A  6F32               	movwf	(sprintf@exp+1)& (0+255),b
  6520  010C7C  0E00               	movlw	0
  6521  010C7E  6F31               	movwf	sprintf@exp& (0+255),b
  6522                           
  6523                           ; BSR set to: 1
  6524                           ;doprnt.c: 836: if( fval!=0) {
  6525  010C80  0101               	movlb	1	; () banked
  6526  010C82  5139               	movf	sprintf@fval& (0+255),w,b
  6527  010C84  0101               	movlb	1	; () banked
  6528  010C86  113A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6529  010C88  0101               	movlb	1	; () banked
  6530  010C8A  113B               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6531  010C8C  0101               	movlb	1	; () banked
  6532  010C8E  113C               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6533  010C90  B4D8               	btfsc	status,2,c
  6534  010C92  D08E               	goto	l8332
  6535                           
  6536                           ; BSR set to: 1
  6537                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6538  010C94  0101               	movlb	1	; () banked
  6539  010C96  353B               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6540  010C98  353C               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6541  010C9A  0F82               	addlw	130
  6542  010C9C  0101               	movlb	1	; () banked
  6543  010C9E  6F31               	movwf	sprintf@exp& (0+255),b
  6544  010CA0  0101               	movlb	1	; () banked
  6545  010CA2  6B32               	clrf	(sprintf@exp+1)& (0+255),b
  6546  010CA4  0EFF               	movlw	255
  6547  010CA6  2332               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6548                           
  6549                           ; BSR set to: 1
  6550                           ;doprnt.c: 838: exp--;
  6551  010CA8  0101               	movlb	1	; () banked
  6552  010CAA  0731               	decf	sprintf@exp& (0+255),f,b
  6553  010CAC  A0D8               	btfss	status,0,c
  6554  010CAE  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6555                           
  6556                           ; BSR set to: 1
  6557                           ;doprnt.c: 839: exp *= 3;
  6558  010CB0  C131  F072         	movff	sprintf@exp,___wmul@multiplier
  6559  010CB4  C132  F073         	movff	sprintf@exp+1,___wmul@multiplier+1
  6560  010CB8  0E00               	movlw	0
  6561  010CBA  0100               	movlb	0	; () banked
  6562  010CBC  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6563  010CBE  0E03               	movlw	3
  6564  010CC0  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6565  010CC2  EC1E  F0AE         	call	___wmul	;wreg free
  6566  010CC6  C072  F131         	movff	?___wmul,sprintf@exp
  6567  010CCA  C073  F132         	movff	?___wmul+1,sprintf@exp+1
  6568                           
  6569                           ;doprnt.c: 840: exp /= 10;
  6570  010CCE  C131  F078         	movff	sprintf@exp,___awdiv@dividend
  6571  010CD2  C132  F079         	movff	sprintf@exp+1,___awdiv@dividend+1
  6572  010CD6  0E00               	movlw	0
  6573  010CD8  0100               	movlb	0	; () banked
  6574  010CDA  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6575  010CDC  0E0A               	movlw	10
  6576  010CDE  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6577  010CE0  EC88  F0AA         	call	___awdiv	;wreg free
  6578  010CE4  C078  F131         	movff	?___awdiv,sprintf@exp
  6579  010CE8  C079  F132         	movff	?___awdiv+1,sprintf@exp+1
  6580                           
  6581                           ;doprnt.c: 841: if(exp < 0)
  6582  010CEC  0101               	movlb	1	; () banked
  6583  010CEE  AF32               	btfss	(sprintf@exp+1)& (0+255),7,b
  6584  010CF0  D004               	goto	l8320
  6585                           
  6586                           ; BSR set to: 1
  6587                           ;doprnt.c: 842: exp--;
  6588  010CF2  0101               	movlb	1	; () banked
  6589  010CF4  0731               	decf	sprintf@exp& (0+255),f,b
  6590  010CF6  A0D8               	btfss	status,0,c
  6591  010CF8  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6592  010CFA                     l8320:
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6596  010CFA  0101               	movlb	1	; () banked
  6597  010CFC  5131               	movf	sprintf@exp& (0+255),w,b
  6598  010CFE  0800               	sublw	0
  6599  010D00  EC23  F094         	call	_scale
  6600  010D04  C099  F133         	movff	?_scale,sprintf@tmpval
  6601  010D08  C09A  F134         	movff	?_scale+1,sprintf@tmpval+1
  6602  010D0C  C09B  F135         	movff	?_scale+2,sprintf@tmpval+2
  6603  010D10  C09C  F136         	movff	?_scale+3,sprintf@tmpval+3
  6604                           
  6605                           ;doprnt.c: 847: tmpval.integ *= fval;
  6606  010D14  C133  F080         	movff	sprintf@tmpval,___flmul@b
  6607  010D18  C134  F081         	movff	sprintf@tmpval+1,___flmul@b+1
  6608  010D1C  C135  F082         	movff	sprintf@tmpval+2,___flmul@b+2
  6609  010D20  C136  F083         	movff	sprintf@tmpval+3,___flmul@b+3
  6610  010D24  C139  F084         	movff	sprintf@fval,___flmul@a
  6611  010D28  C13A  F085         	movff	sprintf@fval+1,___flmul@a+1
  6612  010D2C  C13B  F086         	movff	sprintf@fval+2,___flmul@a+2
  6613  010D30  C13C  F087         	movff	sprintf@fval+3,___flmul@a+3
  6614  010D34  EC8A  F09B         	call	___flmul	;wreg free
  6615  010D38  C080  F133         	movff	?___flmul,sprintf@tmpval
  6616  010D3C  C081  F134         	movff	?___flmul+1,sprintf@tmpval+1
  6617  010D40  C082  F135         	movff	?___flmul+2,sprintf@tmpval+2
  6618  010D44  C083  F136         	movff	?___flmul+3,sprintf@tmpval+3
  6619                           
  6620                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6621  010D48  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6622  010D4C  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6623  010D50  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6624  010D54  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6625  010D58  0E00               	movlw	0
  6626  010D5A  0100               	movlb	0	; () banked
  6627  010D5C  6F76               	movwf	___flge@ff2& (0+255),b
  6628  010D5E  0E00               	movlw	0
  6629  010D60  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6630  010D62  0E80               	movlw	128
  6631  010D64  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6632  010D66  0E3F               	movlw	63
  6633  010D68  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6634  010D6A  EC98  F0A6         	call	___flge	;wreg free
  6635  010D6E  0100               	movlb	0	; () banked
  6636  010D70  B0D8               	btfsc	status,0,c
  6637  010D72  D005               	goto	l8328
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;doprnt.c: 849: exp--;
  6641  010D74  0101               	movlb	1	; () banked
  6642  010D76  0731               	decf	sprintf@exp& (0+255),f,b
  6643  010D78  A0D8               	btfss	status,0,c
  6644  010D7A  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6645  010D7C  D019               	goto	l8332
  6646  010D7E                     l8328:
  6647                           
  6648                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6649  010D7E  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6650  010D82  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6651  010D86  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6652  010D8A  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6653  010D8E  0E00               	movlw	0
  6654  010D90  0100               	movlb	0	; () banked
  6655  010D92  6F76               	movwf	___flge@ff2& (0+255),b
  6656  010D94  0E00               	movlw	0
  6657  010D96  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6658  010D98  0E20               	movlw	32
  6659  010D9A  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6660  010D9C  0E41               	movlw	65
  6661  010D9E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6662  010DA0  EC98  F0A6         	call	___flge	;wreg free
  6663  010DA4  0100               	movlb	0	; () banked
  6664  010DA6  A0D8               	btfss	status,0,c
  6665  010DA8  D003               	goto	l8332
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;doprnt.c: 851: exp++;
  6669  010DAA  0101               	movlb	1	; () banked
  6670  010DAC  4B31               	infsnz	sprintf@exp& (0+255),f,b
  6671  010DAE  2B32               	incf	(sprintf@exp+1)& (0+255),f,b
  6672  010DB0                     l8332:
  6673                           
  6674                           ;doprnt.c: 852: }
  6675                           ;doprnt.c: 1112: if(prec <= 12)
  6676  010DB0  0101               	movlb	1	; () banked
  6677  010DB2  BF38               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6678  010DB4  D008               	goto	l8334
  6679  010DB6  0101               	movlb	1	; () banked
  6680  010DB8  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  6681  010DBA  E123               	bnz	l8336
  6682  010DBC  0E0D               	movlw	13
  6683  010DBE  0101               	movlb	1	; () banked
  6684  010DC0  5D37               	subwf	sprintf@prec& (0+255),w,b
  6685  010DC2  B0D8               	btfsc	status,0,c
  6686  010DC4  D01E               	goto	l8336
  6687  010DC6                     l8334:
  6688                           
  6689                           ; BSR set to: 1
  6690                           ;doprnt.c: 1113: fval += fround(prec);
  6691  010DC6  C139  F0A6         	movff	sprintf@fval,___fladd@b
  6692  010DCA  C13A  F0A7         	movff	sprintf@fval+1,___fladd@b+1
  6693  010DCE  C13B  F0A8         	movff	sprintf@fval+2,___fladd@b+2
  6694  010DD2  C13C  F0A9         	movff	sprintf@fval+3,___fladd@b+3
  6695  010DD6  0101               	movlb	1	; () banked
  6696  010DD8  5137               	movf	sprintf@prec& (0+255),w,b
  6697  010DDA  EC8C  F0A1         	call	_fround
  6698  010DDE  C099  F0AA         	movff	?_fround,___fladd@a
  6699  010DE2  C09A  F0AB         	movff	?_fround+1,___fladd@a+1
  6700  010DE6  C09B  F0AC         	movff	?_fround+2,___fladd@a+2
  6701  010DEA  C09C  F0AD         	movff	?_fround+3,___fladd@a+3
  6702  010DEE  EC36  F099         	call	___fladd	;wreg free
  6703  010DF2  C0A6  F139         	movff	?___fladd,sprintf@fval
  6704  010DF6  C0A7  F13A         	movff	?___fladd+1,sprintf@fval+1
  6705  010DFA  C0A8  F13B         	movff	?___fladd+2,sprintf@fval+2
  6706  010DFE  C0A9  F13C         	movff	?___fladd+3,sprintf@fval+3
  6707  010E02                     l8336:
  6708                           
  6709                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6710  010E02  0101               	movlb	1	; () banked
  6711  010E04  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6712  010E06  D008               	goto	l8338
  6713  010E08  0101               	movlb	1	; () banked
  6714  010E0A  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  6715  010E0C  E12E               	bnz	l8344
  6716  010E0E  0E0A               	movlw	10
  6717  010E10  0101               	movlb	1	; () banked
  6718  010E12  5D31               	subwf	sprintf@exp& (0+255),w,b
  6719  010E14  B0D8               	btfsc	status,0,c
  6720  010E16  D029               	goto	l8344
  6721  010E18                     l8338:
  6722                           
  6723                           ; BSR set to: 1
  6724  010E18  0101               	movlb	1	; () banked
  6725  010E1A  5139               	movf	sprintf@fval& (0+255),w,b
  6726  010E1C  0101               	movlb	1	; () banked
  6727  010E1E  113A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6728  010E20  0101               	movlb	1	; () banked
  6729  010E22  113B               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6730  010E24  0101               	movlb	1	; () banked
  6731  010E26  113C               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6732  010E28  B4D8               	btfsc	status,2,c
  6733  010E2A  D06D               	goto	l8358
  6734                           
  6735                           ; BSR set to: 1
  6736  010E2C  C139  F0BA         	movff	sprintf@fval,___fltol@f1
  6737  010E30  C13A  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6738  010E34  C13B  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6739  010E38  C13C  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6740  010E3C  EC8C  F0A9         	call	___fltol	;wreg free
  6741  010E40  0100               	movlb	0	; () banked
  6742  010E42  51BA               	movf	?___fltol& (0+255),w,b
  6743  010E44  0100               	movlb	0	; () banked
  6744  010E46  11BB               	iorwf	(?___fltol+1)& (0+255),w,b
  6745  010E48  0100               	movlb	0	; () banked
  6746  010E4A  11BC               	iorwf	(?___fltol+2)& (0+255),w,b
  6747  010E4C  0100               	movlb	0	; () banked
  6748  010E4E  11BD               	iorwf	(?___fltol+3)& (0+255),w,b
  6749  010E50  A4D8               	btfss	status,2,c
  6750  010E52  D059               	goto	l8358
  6751                           
  6752                           ; BSR set to: 0
  6753  010E54  0101               	movlb	1	; () banked
  6754  010E56  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6755  010E58  D056               	goto	l8358
  6756  010E5A  0101               	movlb	1	; () banked
  6757  010E5C  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  6758  010E5E  E105               	bnz	l8344
  6759  010E60  0E02               	movlw	2
  6760  010E62  0101               	movlb	1	; () banked
  6761  010E64  5D31               	subwf	sprintf@exp& (0+255),w,b
  6762  010E66  A0D8               	btfss	status,0,c
  6763  010E68  D04E               	goto	l8358
  6764  010E6A                     l8344:
  6765                           
  6766                           ; BSR set to: 1
  6767                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6768  010E6A  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6769  010E6E  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6770  010E72  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6771  010E76  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6772  010E7A  0E5F               	movlw	95
  6773  010E7C  0100               	movlb	0	; () banked
  6774  010E7E  6F76               	movwf	___flge@ff2& (0+255),b
  6775  010E80  0E70               	movlw	112
  6776  010E82  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6777  010E84  0E89               	movlw	137
  6778  010E86  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6779  010E88  0E40               	movlw	64
  6780  010E8A  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6781  010E8C  EC98  F0A6         	call	___flge	;wreg free
  6782  010E90  0100               	movlb	0	; () banked
  6783  010E92  B0D8               	btfsc	status,0,c
  6784  010E94  D003               	goto	l8348
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6788  010E96  0101               	movlb	1	; () banked
  6789  010E98  0EF7               	movlw	247
  6790  010E9A  D002               	goto	L3
  6791  010E9C                     l8348:
  6792                           
  6793                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6794  010E9C  0101               	movlb	1	; () banked
  6795  010E9E  0EF8               	movlw	248
  6796  010EA0                     L3:
  6797  010EA0  2731               	addwf	sprintf@exp& (0+255),f,b
  6798  010EA2  0EFF               	movlw	255
  6799  010EA4  2332               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6800                           
  6801                           ; BSR set to: 1
  6802                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6803                           
  6804                           ; BSR set to: 1
  6805  010EA6  0101               	movlb	1	; () banked
  6806  010EA8  5131               	movf	sprintf@exp& (0+255),w,b
  6807  010EAA  EC23  F094         	call	_scale
  6808  010EAE  C099  F133         	movff	?_scale,sprintf@tmpval
  6809  010EB2  C09A  F134         	movff	?_scale+1,sprintf@tmpval+1
  6810  010EB6  C09B  F135         	movff	?_scale+2,sprintf@tmpval+2
  6811  010EBA  C09C  F136         	movff	?_scale+3,sprintf@tmpval+3
  6812  010EBE  C139  F072         	movff	sprintf@fval,__div_to_l_@f1
  6813  010EC2  C13A  F073         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6814  010EC6  C13B  F074         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6815  010ECA  C13C  F075         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6816  010ECE  C133  F076         	movff	sprintf@tmpval,__div_to_l_@f2
  6817  010ED2  C134  F077         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6818  010ED6  C135  F078         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6819  010EDA  C136  F079         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6820  010EDE  EC60  F0A7         	call	__div_to_l_	;wreg free
  6821  010EE2  C072  F12D         	movff	?__div_to_l_,sprintf@val
  6822  010EE6  C073  F12E         	movff	?__div_to_l_+1,sprintf@val+1
  6823  010EEA  C074  F12F         	movff	?__div_to_l_+2,sprintf@val+2
  6824  010EEE  C075  F130         	movff	?__div_to_l_+3,sprintf@val+3
  6825                           
  6826                           ;doprnt.c: 1129: fval = 0.0;
  6827  010EF2  0E00               	movlw	0
  6828  010EF4  0101               	movlb	1	; () banked
  6829  010EF6  6F39               	movwf	sprintf@fval& (0+255),b
  6830  010EF8  0E00               	movlw	0
  6831  010EFA  6F3A               	movwf	(sprintf@fval+1)& (0+255),b
  6832  010EFC  0E00               	movlw	0
  6833  010EFE  6F3B               	movwf	(sprintf@fval+2)& (0+255),b
  6834  010F00  0E00               	movlw	0
  6835  010F02  6F3C               	movwf	(sprintf@fval+3)& (0+255),b
  6836                           
  6837                           ;doprnt.c: 1130: } else {
  6838  010F04  D03C               	goto	l8362
  6839  010F06                     l8358:
  6840                           
  6841                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6842  010F06  C139  F0BA         	movff	sprintf@fval,___fltol@f1
  6843  010F0A  C13A  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6844  010F0E  C13B  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6845  010F12  C13C  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6846  010F16  EC8C  F0A9         	call	___fltol	;wreg free
  6847  010F1A  C0BA  F12D         	movff	?___fltol,sprintf@val
  6848  010F1E  C0BB  F12E         	movff	?___fltol+1,sprintf@val+1
  6849  010F22  C0BC  F12F         	movff	?___fltol+2,sprintf@val+2
  6850  010F26  C0BD  F130         	movff	?___fltol+3,sprintf@val+3
  6851                           
  6852                           ;doprnt.c: 1132: fval -= (double)val;
  6853  010F2A  C139  F0BA         	movff	sprintf@fval,___flsub@b
  6854  010F2E  C13A  F0BB         	movff	sprintf@fval+1,___flsub@b+1
  6855  010F32  C13B  F0BC         	movff	sprintf@fval+2,___flsub@b+2
  6856  010F36  C13C  F0BD         	movff	sprintf@fval+3,___flsub@b+3
  6857  010F3A  C12D  F072         	movff	sprintf@val,___xxtofl@val
  6858  010F3E  C12E  F073         	movff	sprintf@val+1,___xxtofl@val+1
  6859  010F42  C12F  F074         	movff	sprintf@val+2,___xxtofl@val+2
  6860  010F46  C130  F075         	movff	sprintf@val+3,___xxtofl@val+3
  6861  010F4A  0E00               	movlw	0
  6862  010F4C  ECFF  F0A3         	call	___xxtofl
  6863  010F50  C072  F0BE         	movff	?___xxtofl,___flsub@a
  6864  010F54  C073  F0BF         	movff	?___xxtofl+1,___flsub@a+1
  6865  010F58  C074  F0C0         	movff	?___xxtofl+2,___flsub@a+2
  6866  010F5C  C075  F0C1         	movff	?___xxtofl+3,___flsub@a+3
  6867  010F60  EC82  F0AD         	call	___flsub	;wreg free
  6868  010F64  C0BA  F139         	movff	?___flsub,sprintf@fval
  6869  010F68  C0BB  F13A         	movff	?___flsub+1,sprintf@fval+1
  6870  010F6C  C0BC  F13B         	movff	?___flsub+2,sprintf@fval+2
  6871  010F70  C0BD  F13C         	movff	?___flsub+3,sprintf@fval+3
  6872                           
  6873                           ;doprnt.c: 1133: exp = 0;
  6874  010F74  0E00               	movlw	0
  6875  010F76  0101               	movlb	1	; () banked
  6876  010F78  6F32               	movwf	(sprintf@exp+1)& (0+255),b
  6877  010F7A  0E00               	movlw	0
  6878  010F7C  6F31               	movwf	sprintf@exp& (0+255),b
  6879  010F7E                     l8362:
  6880                           
  6881                           ; BSR set to: 1
  6882                           ;doprnt.c: 1134: }
  6883                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6884  010F7E  0E01               	movlw	1
  6885  010F80  0101               	movlb	1	; () banked
  6886  010F82  6F3D               	movwf	sprintf@c& (0+255),b
  6887  010F84                     l8364:
  6888                           
  6889                           ; BSR set to: 1
  6890  010F84  0E0A               	movlw	10
  6891  010F86  0101               	movlb	1	; () banked
  6892  010F88  193D               	xorwf	sprintf@c& (0+255),w,b
  6893  010F8A  B4D8               	btfsc	status,2,c
  6894  010F8C  D021               	goto	l8376
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;doprnt.c: 1137: if(val < dpowers[c])
  6898                           
  6899                           ; BSR set to: 1
  6900                           
  6901                           ; BSR set to: 1
  6902  010F8E  0101               	movlb	1	; () banked
  6903  010F90  513D               	movf	sprintf@c& (0+255),w,b
  6904  010F92  0D04               	mullw	4
  6905  010F94  0E23               	movlw	low _dpowers
  6906  010F96  24F3               	addwf	prodl,w,c
  6907  010F98  6EF6               	movwf	tblptrl,c
  6908  010F9A  0EFF               	movlw	high _dpowers
  6909  010F9C  20F4               	addwfc	prodh,w,c
  6910  010F9E  6EF7               	movwf	tblptrh,c
  6911  010FA0                     	if	1	;There are 3 active tblptr bytes
  6912  010FA0  6AF8               	clrf	tblptru,c
  6913  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6914  010FA4  22F8               	addwfc	tblptru,f,c
  6915  010FA6                     	endif
  6916  010FA6  0009               	tblrd		*+
  6917  010FA8  50F5               	movf	tablat,w,c
  6918  010FAA  0101               	movlb	1	; () banked
  6919  010FAC  5D2D               	subwf	sprintf@val& (0+255),w,b
  6920  010FAE  0009               	tblrd		*+
  6921  010FB0  50F5               	movf	tablat,w,c
  6922  010FB2  0101               	movlb	1	; () banked
  6923  010FB4  592E               	subwfb	(sprintf@val+1)& (0+255),w,b
  6924  010FB6  0009               	tblrd		*+
  6925  010FB8  50F5               	movf	tablat,w,c
  6926  010FBA  0101               	movlb	1	; () banked
  6927  010FBC  592F               	subwfb	(sprintf@val+2)& (0+255),w,b
  6928  010FBE  0009               	tblrd		*+
  6929  010FC0  50F5               	movf	tablat,w,c
  6930  010FC2  0101               	movlb	1	; () banked
  6931  010FC4  5930               	subwfb	(sprintf@val+3)& (0+255),w,b
  6932  010FC6  A0D8               	btfss	status,0,c
  6933  010FC8  D003               	goto	l8376
  6934                           
  6935                           ; BSR set to: 1
  6936                           
  6937                           ; BSR set to: 1
  6938                           
  6939                           ; BSR set to: 1
  6940                           ;doprnt.c: 1138: break;
  6941  010FCA  0101               	movlb	1	; () banked
  6942  010FCC  2B3D               	incf	sprintf@c& (0+255),f,b
  6943  010FCE  D7DA               	goto	l8364
  6944  010FD0                     l8376:
  6945                           
  6946                           ; BSR set to: 1
  6947                           ;doprnt.c: 1175: {
  6948                           ;doprnt.c: 1188: if(flag & 0x03)
  6949  010FD0  0E03               	movlw	3
  6950  010FD2  0101               	movlb	1	; () banked
  6951  010FD4  152B               	andwf	sprintf@flag& (0+255),w,b
  6952  010FD6  0101               	movlb	1	; () banked
  6953  010FD8  6F23               	movwf	??_sprintf& (0+255),b
  6954  010FDA  0E00               	movlw	0
  6955  010FDC  0101               	movlb	1	; () banked
  6956  010FDE  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  6957  010FE0  0101               	movlb	1	; () banked
  6958  010FE2  6F24               	movwf	(??_sprintf+1)& (0+255),b
  6959  010FE4  0101               	movlb	1	; () banked
  6960  010FE6  5123               	movf	??_sprintf& (0+255),w,b
  6961  010FE8  0101               	movlb	1	; () banked
  6962  010FEA  1124               	iorwf	(??_sprintf+1)& (0+255),w,b
  6963  010FEC  B4D8               	btfsc	status,2,c
  6964  010FEE  D058               	goto	l8390
  6965                           
  6966                           ; BSR set to: 1
  6967                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6968  010FF0  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6969  010FF4  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6970  010FF8  0E2D               	movlw	45
  6971  010FFA  D050               	goto	L4
  6972  010FFC                     l8380:
  6973                           
  6974                           ; BSR set to: 1
  6975  010FFC  0100               	movlb	0	; () banked
  6976  010FFE  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  6977  011000  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;doprnt.c: 1195: }
  6981                           ;doprnt.c: 1196: while(c--) {
  6982  011002  D04E               	goto	l8390
  6983  011004                     l8382:
  6984                           
  6985                           ;doprnt.c: 1200: {
  6986                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6987  011004  C12D  F072         	movff	sprintf@val,___lldiv@dividend
  6988  011008  C12E  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  6989  01100C  C12F  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  6990  011010  C130  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  6991  011014  0101               	movlb	1	; () banked
  6992  011016  513D               	movf	sprintf@c& (0+255),w,b
  6993  011018  0D04               	mullw	4
  6994  01101A  0E23               	movlw	low _dpowers
  6995  01101C  24F3               	addwf	prodl,w,c
  6996  01101E  6EF6               	movwf	tblptrl,c
  6997  011020  0EFF               	movlw	high _dpowers
  6998  011022  20F4               	addwfc	prodh,w,c
  6999  011024  6EF7               	movwf	tblptrh,c
  7000  011026                     	if	1	;There are 3 active tblptr bytes
  7001  011026  6AF8               	clrf	tblptru,c
  7002  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7003  01102A  22F8               	addwfc	tblptru,f,c
  7004  01102C                     	endif
  7005  01102C  0009               	tblrd		*+
  7006  01102E  CFF5 F076          	movff	tablat,___lldiv@divisor
  7007  011032  0009               	tblrd		*+
  7008  011034  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  7009  011038  0009               	tblrd		*+
  7010  01103A  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  7011  01103E  000A               	tblrd		*-
  7012  011040  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  7013  011044  ECE7  F0AA         	call	___lldiv	;wreg free
  7014  011048  C072  F133         	movff	?___lldiv,sprintf@tmpval
  7015  01104C  C073  F134         	movff	?___lldiv+1,sprintf@tmpval+1
  7016  011050  C074  F135         	movff	?___lldiv+2,sprintf@tmpval+2
  7017  011054  C075  F136         	movff	?___lldiv+3,sprintf@tmpval+3
  7018                           
  7019                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7020  011058  C133  F072         	movff	sprintf@tmpval,___llmod@dividend
  7021  01105C  C134  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7022  011060  C135  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7023  011064  C136  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7024  011068  0E0A               	movlw	10
  7025  01106A  0100               	movlb	0	; () banked
  7026  01106C  6F76               	movwf	___llmod@divisor& (0+255),b
  7027  01106E  0E00               	movlw	0
  7028  011070  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  7029  011072  0E00               	movlw	0
  7030  011074  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  7031  011076  0E00               	movlw	0
  7032  011078  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  7033  01107A  EC9A  F0AC         	call	___llmod	;wreg free
  7034  01107E  C072  F133         	movff	?___llmod,sprintf@tmpval
  7035  011082  C073  F134         	movff	?___llmod+1,sprintf@tmpval+1
  7036  011086  C074  F135         	movff	?___llmod+2,sprintf@tmpval+2
  7037  01108A  C075  F136         	movff	?___llmod+3,sprintf@tmpval+3
  7038                           
  7039                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7040  01108E  0101               	movlb	1	; () banked
  7041  011090  5133               	movf	sprintf@tmpval& (0+255),w,b
  7042  011092  0F30               	addlw	48
  7043  011094  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7044  011098  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7045  01109C                     L4:
  7046  01109C  6EDF               	movwf	indf2,c
  7047  01109E  D7AE               	goto	l8380
  7048  0110A0                     l8390:
  7049  0110A0  0101               	movlb	1	; () banked
  7050  0110A2  073D               	decf	sprintf@c& (0+255),f,b
  7051  0110A4  0101               	movlb	1	; () banked
  7052  0110A6  293D               	incf	sprintf@c& (0+255),w,b
  7053  0110A8  B4D8               	btfsc	status,2,c
  7054  0110AA  D00E               	goto	l8398
  7055  0110AC  D7AB               	goto	l8382
  7056  0110AE                     l8392:
  7057                           
  7058                           ; BSR set to: 1
  7059                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7060  0110AE  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7061  0110B2  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7062  0110B6  0E30               	movlw	48
  7063  0110B8  6EDF               	movwf	indf2,c
  7064                           
  7065                           ; BSR set to: 1
  7066  0110BA  0100               	movlb	0	; () banked
  7067  0110BC  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7068  0110BE  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;doprnt.c: 1209: exp--;
  7072  0110C0  0101               	movlb	1	; () banked
  7073  0110C2  0731               	decf	sprintf@exp& (0+255),f,b
  7074  0110C4  A0D8               	btfss	status,0,c
  7075  0110C6  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  7076  0110C8                     l8398:
  7077                           
  7078                           ; BSR set to: 1
  7079  0110C8  0101               	movlb	1	; () banked
  7080  0110CA  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7081  0110CC  D007               	goto	l8400
  7082  0110CE  0101               	movlb	1	; () banked
  7083  0110D0  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  7084  0110D2  E1ED               	bnz	l8392
  7085  0110D4  0101               	movlb	1	; () banked
  7086  0110D6  0531               	decf	sprintf@exp& (0+255),w,b
  7087  0110D8  B0D8               	btfsc	status,0,c
  7088  0110DA  D7E9               	goto	l8392
  7089  0110DC                     l8400:
  7090                           
  7091                           ; BSR set to: 1
  7092                           ;doprnt.c: 1210: }
  7093                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7094  0110DC  0101               	movlb	1	; () banked
  7095  0110DE  BF38               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7096  0110E0  D00C               	goto	l960
  7097  0110E2  0101               	movlb	1	; () banked
  7098  0110E4  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7099  0110E6  E105               	bnz	u11180
  7100  0110E8  0E09               	movlw	9
  7101  0110EA  0101               	movlb	1	; () banked
  7102  0110EC  5D37               	subwf	sprintf@prec& (0+255),w,b
  7103  0110EE  A0D8               	btfss	status,0,c
  7104  0110F0  D004               	goto	l960
  7105  0110F2                     u11180:
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7109  0110F2  0E08               	movlw	8
  7110  0110F4  0101               	movlb	1	; () banked
  7111  0110F6  6F3D               	movwf	sprintf@c& (0+255),b
  7112  0110F8  D002               	goto	l8404
  7113  0110FA                     l960:
  7114                           
  7115                           ; BSR set to: 1
  7116                           ;doprnt.c: 1213: else
  7117                           ;doprnt.c: 1214: c = prec;
  7118  0110FA  C137  F13D         	movff	sprintf@prec,sprintf@c
  7119  0110FE                     l8404:
  7120                           
  7121                           ; BSR set to: 1
  7122                           ;doprnt.c: 1215: prec -= c;
  7123  0110FE  0101               	movlb	1	; () banked
  7124  011100  513D               	movf	sprintf@c& (0+255),w,b
  7125  011102  0101               	movlb	1	; () banked
  7126  011104  5F37               	subwf	sprintf@prec& (0+255),f,b
  7127  011106  0E00               	movlw	0
  7128  011108  0101               	movlb	1	; () banked
  7129  01110A  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7130  01110C  0EFF               	movlw	255
  7131  01110E  0101               	movlb	1	; () banked
  7132  011110  5B38               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;doprnt.c: 1219: if(c)
  7136  011112  0101               	movlb	1	; () banked
  7137  011114  513D               	movf	sprintf@c& (0+255),w,b
  7138  011116  0101               	movlb	1	; () banked
  7139  011118  B4D8               	btfsc	status,2,c
  7140  01111A  D009               	goto	l8412
  7141                           
  7142                           ; BSR set to: 1
  7143                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7144  01111C  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7145  011120  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7146  011124  0E2E               	movlw	46
  7147  011126  6EDF               	movwf	indf2,c
  7148                           
  7149                           ; BSR set to: 1
  7150  011128  0100               	movlb	0	; () banked
  7151  01112A  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7152  01112C  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7153  01112E                     l8412:
  7154                           
  7155                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7156  01112E  0101               	movlb	1	; () banked
  7157  011130  513D               	movf	sprintf@c& (0+255),w,b
  7158  011132  EC23  F094         	call	_scale
  7159  011136  C099  F125         	movff	?_scale,_sprintf$4213
  7160  01113A  C09A  F126         	movff	?_scale+1,_sprintf$4213+1
  7161  01113E  C09B  F127         	movff	?_scale+2,_sprintf$4213+2
  7162  011142  C09C  F128         	movff	?_scale+3,_sprintf$4213+3
  7163                           
  7164                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7165  011146  C139  F084         	movff	sprintf@fval,___flmul@a
  7166  01114A  C13A  F085         	movff	sprintf@fval+1,___flmul@a+1
  7167  01114E  C13B  F086         	movff	sprintf@fval+2,___flmul@a+2
  7168  011152  C13C  F087         	movff	sprintf@fval+3,___flmul@a+3
  7169  011156  C125  F080         	movff	_sprintf$4213,___flmul@b
  7170  01115A  C126  F081         	movff	_sprintf$4213+1,___flmul@b+1
  7171  01115E  C127  F082         	movff	_sprintf$4213+2,___flmul@b+2
  7172  011162  C128  F083         	movff	_sprintf$4213+3,___flmul@b+3
  7173  011166  EC8A  F09B         	call	___flmul	;wreg free
  7174  01116A  C080  F0BA         	movff	?___flmul,___fltol@f1
  7175  01116E  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  7176  011172  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  7177  011176  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  7178  01117A  EC8C  F0A9         	call	___fltol	;wreg free
  7179  01117E  C0BA  F12D         	movff	?___fltol,sprintf@val
  7180  011182  C0BB  F12E         	movff	?___fltol+1,sprintf@val+1
  7181  011186  C0BC  F12F         	movff	?___fltol+2,sprintf@val+2
  7182  01118A  C0BD  F130         	movff	?___fltol+3,sprintf@val+3
  7183                           
  7184                           ;doprnt.c: 1228: while(c--) {
  7185  01118E  D07A               	goto	l8426
  7186  011190                     l8416:
  7187                           
  7188                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7189  011190  C12D  F072         	movff	sprintf@val,___lldiv@dividend
  7190  011194  C12E  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  7191  011198  C12F  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  7192  01119C  C130  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  7193  0111A0  0101               	movlb	1	; () banked
  7194  0111A2  513D               	movf	sprintf@c& (0+255),w,b
  7195  0111A4  0D04               	mullw	4
  7196  0111A6  0E23               	movlw	low _dpowers
  7197  0111A8  24F3               	addwf	prodl,w,c
  7198  0111AA  6EF6               	movwf	tblptrl,c
  7199  0111AC  0EFF               	movlw	high _dpowers
  7200  0111AE  20F4               	addwfc	prodh,w,c
  7201  0111B0  6EF7               	movwf	tblptrh,c
  7202  0111B2                     	if	1	;There are 3 active tblptr bytes
  7203  0111B2  6AF8               	clrf	tblptru,c
  7204  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7205  0111B6  22F8               	addwfc	tblptru,f,c
  7206  0111B8                     	endif
  7207  0111B8  0009               	tblrd		*+
  7208  0111BA  CFF5 F076          	movff	tablat,___lldiv@divisor
  7209  0111BE  0009               	tblrd		*+
  7210  0111C0  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  7211  0111C4  0009               	tblrd		*+
  7212  0111C6  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  7213  0111CA  000A               	tblrd		*-
  7214  0111CC  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  7215  0111D0  ECE7  F0AA         	call	___lldiv	;wreg free
  7216  0111D4  C072  F133         	movff	?___lldiv,sprintf@tmpval
  7217  0111D8  C073  F134         	movff	?___lldiv+1,sprintf@tmpval+1
  7218  0111DC  C074  F135         	movff	?___lldiv+2,sprintf@tmpval+2
  7219  0111E0  C075  F136         	movff	?___lldiv+3,sprintf@tmpval+3
  7220                           
  7221                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7222  0111E4  C133  F072         	movff	sprintf@tmpval,___llmod@dividend
  7223  0111E8  C134  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7224  0111EC  C135  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7225  0111F0  C136  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7226  0111F4  0E0A               	movlw	10
  7227  0111F6  0100               	movlb	0	; () banked
  7228  0111F8  6F76               	movwf	___llmod@divisor& (0+255),b
  7229  0111FA  0E00               	movlw	0
  7230  0111FC  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  7231  0111FE  0E00               	movlw	0
  7232  011200  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  7233  011202  0E00               	movlw	0
  7234  011204  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  7235  011206  EC9A  F0AC         	call	___llmod	;wreg free
  7236  01120A  C072  F133         	movff	?___llmod,sprintf@tmpval
  7237  01120E  C073  F134         	movff	?___llmod+1,sprintf@tmpval+1
  7238  011212  C074  F135         	movff	?___llmod+2,sprintf@tmpval+2
  7239  011216  C075  F136         	movff	?___llmod+3,sprintf@tmpval+3
  7240                           
  7241                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7242  01121A  0101               	movlb	1	; () banked
  7243  01121C  5133               	movf	sprintf@tmpval& (0+255),w,b
  7244  01121E  0F30               	addlw	48
  7245  011220  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7246  011224  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7247  011228  6EDF               	movwf	indf2,c
  7248                           
  7249                           ; BSR set to: 1
  7250  01122A  0100               	movlb	0	; () banked
  7251  01122C  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7252  01122E  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;doprnt.c: 1232: val %= dpowers[c];
  7256  011230  C12D  F072         	movff	sprintf@val,___llmod@dividend
  7257  011234  C12E  F073         	movff	sprintf@val+1,___llmod@dividend+1
  7258  011238  C12F  F074         	movff	sprintf@val+2,___llmod@dividend+2
  7259  01123C  C130  F075         	movff	sprintf@val+3,___llmod@dividend+3
  7260  011240  0101               	movlb	1	; () banked
  7261  011242  513D               	movf	sprintf@c& (0+255),w,b
  7262  011244  0D04               	mullw	4
  7263  011246  0E23               	movlw	low _dpowers
  7264  011248  24F3               	addwf	prodl,w,c
  7265  01124A  6EF6               	movwf	tblptrl,c
  7266  01124C  0EFF               	movlw	high _dpowers
  7267  01124E  20F4               	addwfc	prodh,w,c
  7268  011250  6EF7               	movwf	tblptrh,c
  7269  011252                     	if	1	;There are 3 active tblptr bytes
  7270  011252  6AF8               	clrf	tblptru,c
  7271  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7272  011256  22F8               	addwfc	tblptru,f,c
  7273  011258                     	endif
  7274  011258  0009               	tblrd		*+
  7275  01125A  CFF5 F076          	movff	tablat,___llmod@divisor
  7276  01125E  0009               	tblrd		*+
  7277  011260  CFF5 F077          	movff	tablat,___llmod@divisor+1
  7278  011264  0009               	tblrd		*+
  7279  011266  CFF5 F078          	movff	tablat,___llmod@divisor+2
  7280  01126A  000A               	tblrd		*-
  7281  01126C  CFF5 F079          	movff	tablat,___llmod@divisor+3
  7282  011270  EC9A  F0AC         	call	___llmod	;wreg free
  7283  011274  C072  F12D         	movff	?___llmod,sprintf@val
  7284  011278  C073  F12E         	movff	?___llmod+1,sprintf@val+1
  7285  01127C  C074  F12F         	movff	?___llmod+2,sprintf@val+2
  7286  011280  C075  F130         	movff	?___llmod+3,sprintf@val+3
  7287  011284                     l8426:
  7288  011284  0101               	movlb	1	; () banked
  7289  011286  073D               	decf	sprintf@c& (0+255),f,b
  7290  011288  0101               	movlb	1	; () banked
  7291  01128A  293D               	incf	sprintf@c& (0+255),w,b
  7292  01128C  B4D8               	btfsc	status,2,c
  7293  01128E  D00E               	goto	l8434
  7294  011290  D77F               	goto	l8416
  7295  011292                     l8428:
  7296                           
  7297                           ; BSR set to: 1
  7298                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7299  011292  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7300  011296  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7301  01129A  0E30               	movlw	48
  7302  01129C  6EDF               	movwf	indf2,c
  7303                           
  7304                           ; BSR set to: 1
  7305  01129E  0100               	movlb	0	; () banked
  7306  0112A0  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7307  0112A2  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;doprnt.c: 1237: prec--;
  7311  0112A4  0101               	movlb	1	; () banked
  7312  0112A6  0737               	decf	sprintf@prec& (0+255),f,b
  7313  0112A8  A0D8               	btfss	status,0,c
  7314  0112AA  0738               	decf	(sprintf@prec+1)& (0+255),f,b
  7315  0112AC                     l8434:
  7316                           
  7317                           ; BSR set to: 1
  7318  0112AC  0101               	movlb	1	; () banked
  7319  0112AE  5137               	movf	sprintf@prec& (0+255),w,b
  7320  0112B0  0101               	movlb	1	; () banked
  7321  0112B2  1138               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7322  0112B4  B4D8               	btfsc	status,2,c
  7323  0112B6  D059               	goto	l8456
  7324  0112B8  D7EC               	goto	l8428
  7325  0112BA                     l8436:
  7326                           
  7327                           ; BSR set to: 1
  7328                           ;doprnt.c: 1246: }
  7329                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7330  0112BA  0101               	movlb	1	; () banked
  7331  0112BC  5137               	movf	sprintf@prec& (0+255),w,b
  7332  0112BE  0101               	movlb	1	; () banked
  7333  0112C0  1138               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7334  0112C2  A4D8               	btfss	status,2,c
  7335  0112C4  D00D               	goto	l8442
  7336                           
  7337                           ; BSR set to: 1
  7338  0112C6  0101               	movlb	1	; () banked
  7339  0112C8  512D               	movf	sprintf@val& (0+255),w,b
  7340  0112CA  0101               	movlb	1	; () banked
  7341  0112CC  112E               	iorwf	(sprintf@val+1)& (0+255),w,b
  7342  0112CE  0101               	movlb	1	; () banked
  7343  0112D0  112F               	iorwf	(sprintf@val+2)& (0+255),w,b
  7344  0112D2  0101               	movlb	1	; () banked
  7345  0112D4  1130               	iorwf	(sprintf@val+3)& (0+255),w,b
  7346  0112D6  A4D8               	btfss	status,2,c
  7347  0112D8  D003               	goto	l8442
  7348                           
  7349                           ; BSR set to: 1
  7350                           ;doprnt.c: 1291: prec++;
  7351  0112DA  0101               	movlb	1	; () banked
  7352  0112DC  4B37               	infsnz	sprintf@prec& (0+255),f,b
  7353  0112DE  2B38               	incf	(sprintf@prec+1)& (0+255),f,b
  7354  0112E0                     l8442:
  7355                           
  7356                           ; BSR set to: 1
  7357                           ;doprnt.c: 1339: if(c < prec)
  7358  0112E0  0E80               	movlw	128
  7359  0112E2  0101               	movlb	1	; () banked
  7360  0112E4  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7361  0112E6  0E7F               	movlw	127
  7362  0112E8  0101               	movlb	1	; () banked
  7363  0112EA  6F23               	movwf	??_sprintf& (0+255),b
  7364  0112EC  0101               	movlb	1	; () banked
  7365  0112EE  5137               	movf	sprintf@prec& (0+255),w,b
  7366  0112F0  0101               	movlb	1	; () banked
  7367  0112F2  5D3D               	subwf	sprintf@c& (0+255),w,b
  7368  0112F4  0101               	movlb	1	; () banked
  7369  0112F6  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7370  0112F8  0A80               	xorlw	128
  7371  0112FA  0101               	movlb	1	; () banked
  7372  0112FC  5923               	subwfb	??_sprintf& (0+255),w,b
  7373  0112FE  B0D8               	btfsc	status,0,c
  7374  011300  D003               	goto	l8446
  7375                           
  7376                           ; BSR set to: 1
  7377                           ;doprnt.c: 1340: c = prec;
  7378  011302  C137  F13D         	movff	sprintf@prec,sprintf@c
  7379  011306  D018               	goto	l8450
  7380  011308                     l8446:
  7381                           
  7382                           ; BSR set to: 1
  7383                           ;doprnt.c: 1341: else if(prec < c)
  7384  011308  0101               	movlb	1	; () banked
  7385  01130A  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7386  01130C  0A80               	xorlw	128
  7387  01130E  0101               	movlb	1	; () banked
  7388  011310  6F23               	movwf	??_sprintf& (0+255),b
  7389  011312  0101               	movlb	1	; () banked
  7390  011314  513D               	movf	sprintf@c& (0+255),w,b
  7391  011316  0101               	movlb	1	; () banked
  7392  011318  5D37               	subwf	sprintf@prec& (0+255),w,b
  7393  01131A  0E80               	movlw	128
  7394  01131C  0101               	movlb	1	; () banked
  7395  01131E  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7396  011320  0E7F               	movlw	127
  7397  011322  0101               	movlb	1	; () banked
  7398  011324  5923               	subwfb	??_sprintf& (0+255),w,b
  7399  011326  B0D8               	btfsc	status,0,c
  7400  011328  D007               	goto	l8450
  7401                           
  7402                           ; BSR set to: 1
  7403                           ;doprnt.c: 1342: prec = c;
  7404  01132A  0101               	movlb	1	; () banked
  7405  01132C  513D               	movf	sprintf@c& (0+255),w,b
  7406  01132E  0101               	movlb	1	; () banked
  7407  011330  6F37               	movwf	sprintf@prec& (0+255),b
  7408  011332  6B38               	clrf	(sprintf@prec+1)& (0+255),b
  7409  011334  BF37               	btfsc	sprintf@prec& (0+255),7,b
  7410  011336  0738               	decf	(sprintf@prec+1)& (0+255),f,b
  7411  011338                     l8450:
  7412                           
  7413                           ; BSR set to: 1
  7414                           ;doprnt.c: 1422: {
  7415                           ;doprnt.c: 1438: if(flag & 0x03)
  7416  011338  0E03               	movlw	3
  7417  01133A  0101               	movlb	1	; () banked
  7418  01133C  152B               	andwf	sprintf@flag& (0+255),w,b
  7419  01133E  0101               	movlb	1	; () banked
  7420  011340  6F23               	movwf	??_sprintf& (0+255),b
  7421  011342  0E00               	movlw	0
  7422  011344  0101               	movlb	1	; () banked
  7423  011346  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  7424  011348  0101               	movlb	1	; () banked
  7425  01134A  6F24               	movwf	(??_sprintf+1)& (0+255),b
  7426  01134C  0101               	movlb	1	; () banked
  7427  01134E  5123               	movf	??_sprintf& (0+255),w,b
  7428  011350  0101               	movlb	1	; () banked
  7429  011352  1124               	iorwf	(??_sprintf+1)& (0+255),w,b
  7430  011354  B4D8               	btfsc	status,2,c
  7431  011356  D009               	goto	l8456
  7432                           
  7433                           ; BSR set to: 1
  7434                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7435  011358  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7436  01135C  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7437  011360  0E2D               	movlw	45
  7438  011362  6EDF               	movwf	indf2,c
  7439  011364                     l8454:
  7440                           
  7441                           ; BSR set to: 1
  7442  011364  0100               	movlb	0	; () banked
  7443  011366  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7444  011368  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7445  01136A                     l8456:
  7446  01136A  C0C6  FFF6         	movff	sprintf@f,tblptrl
  7447  01136E  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  7448  011372  0100               	movlb	0	; () banked
  7449  011374  4BC6               	infsnz	sprintf@f& (0+255),f,b
  7450  011376  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  7451  011378                     	if	0	;tblptru may be non-zero
  7452  011378                     	endif
  7453  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7454  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7455  01137A  6EF8               	movwf	tblptru,c
  7456  01137C                     	endif
  7457  01137C  0008               	tblrd		*
  7458  01137E  CFF5 F13D          	movff	tablat,sprintf@c
  7459  011382  0101               	movlb	1	; () banked
  7460  011384  513D               	movf	sprintf@c& (0+255),w,b
  7461  011386  A4D8               	btfss	status,2,c
  7462  011388  EF8B  F085         	goto	l8258
  7463  01138C                     l8458:
  7464                           
  7465                           ; BSR set to: 1
  7466                           ;doprnt.c: 1538: *sp = 0;
  7467  01138C  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7468  011390  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7469  011394  0E00               	movlw	0
  7470  011396  6EDF               	movwf	indf2,c
  7471  011398  0012               	return	
  7472  01139A                     __end_of_sprintf:
  7473                           	opt stack 0
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           intcon	equ	0xFF2
  7481                           postinc0	equ	0xFEE
  7482                           wreg	equ	0xFE8
  7483                           indf2	equ	0xFDF
  7484                           postinc2	equ	0xFDE
  7485                           fsr2h	equ	0xFDA
  7486                           fsr2l	equ	0xFD9
  7487                           status	equ	0xFD8
  7488                           
  7489 ;; *************** function _scale *****************
  7490 ;; Defined at:
  7491 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  scl             1    wreg     char 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  scl             1   65[BANK0 ] char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  4   57[BANK0 ] char 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7505 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;Total ram usage:        9 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    4
  7512 ;; This function calls:
  7513 ;;		___awdiv
  7514 ;;		___awmod
  7515 ;;		___flmul
  7516 ;; This function is called by:
  7517 ;;		_sprintf
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text9
  7522  012846                     __ptext9:
  7523                           	opt stack 0
  7524  012846                     _scale:
  7525                           	opt stack 24
  7526                           
  7527                           ; BSR set to: 1
  7528                           ;incstack = 0
  7529                           ;scale@scl stored from wreg
  7530  012846  0100               	movlb	0	; () banked
  7531  012848  6FA1               	movwf	scale@scl& (0+255),b
  7532                           
  7533                           ;doprnt.c: 428: if(scl < 0) {
  7534  01284A  0100               	movlb	0	; () banked
  7535  01284C  AFA1               	btfss	scale@scl& (0+255),7,b
  7536  01284E  D145               	goto	l7890
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;doprnt.c: 429: scl = -scl;
  7540  012850  0100               	movlb	0	; () banked
  7541  012852  6DA1               	negf	scale@scl& (0+255),b
  7542                           
  7543                           ;doprnt.c: 430: if(scl>=110)
  7544  012854  0100               	movlb	0	; () banked
  7545  012856  51A1               	movf	scale@scl& (0+255),w,b
  7546  012858  0A80               	xorlw	128
  7547  01285A  0F12               	addlw	-238
  7548  01285C  A0D8               	btfss	status,0,c
  7549  01285E  D0BB               	goto	l7880
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7553  012860  0E00               	movlw	0
  7554  012862  0100               	movlb	0	; () banked
  7555  012864  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7556  012866  0E0A               	movlw	10
  7557  012868  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7558  01286A  0E00               	movlw	0
  7559  01286C  0100               	movlb	0	; () banked
  7560  01286E  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7561  012870  0E64               	movlw	100
  7562  012872  6F74               	movwf	___awmod@divisor& (0+255),b
  7563  012874  0100               	movlb	0	; () banked
  7564  012876  51A1               	movf	scale@scl& (0+255),w,b
  7565  012878  0100               	movlb	0	; () banked
  7566  01287A  6F72               	movwf	___awmod@dividend& (0+255),b
  7567  01287C  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7568  01287E  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7569  012880  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7570  012882  EC49  F0AC         	call	___awmod	;wreg free
  7571  012886  C072  F078         	movff	?___awmod,___awdiv@dividend
  7572  01288A  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7573  01288E  EC88  F0AA         	call	___awdiv	;wreg free
  7574  012892  0100               	movlb	0	; () banked
  7575  012894  90D8               	bcf	status,0,c
  7576  012896  3778               	rlcf	?___awdiv& (0+255),f,b
  7577  012898  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7578  01289A  0100               	movlb	0	; () banked
  7579  01289C  90D8               	bcf	status,0,c
  7580  01289E  3778               	rlcf	?___awdiv& (0+255),f,b
  7581  0128A0  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7582  0128A2  0E24               	movlw	36
  7583  0128A4  0100               	movlb	0	; () banked
  7584  0128A6  2778               	addwf	?___awdiv& (0+255),f,b
  7585  0128A8  0E00               	movlw	0
  7586  0128AA  0100               	movlb	0	; () banked
  7587  0128AC  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7588  0128AE  0EBB               	movlw	low __npowers_
  7589  0128B0  0100               	movlb	0	; () banked
  7590  0128B2  2578               	addwf	?___awdiv& (0+255),w,b
  7591  0128B4  6EF6               	movwf	tblptrl,c
  7592  0128B6  0EFE               	movlw	high __npowers_
  7593  0128B8  0100               	movlb	0	; () banked
  7594  0128BA  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7595  0128BC  6EF7               	movwf	tblptrh,c
  7596  0128BE                     	if	1	;There are 3 active tblptr bytes
  7597  0128BE  6AF8               	clrf	tblptru,c
  7598  0128C0  0E00               	movlw	low (__mediumconst shr (0+16))
  7599  0128C2  22F8               	addwfc	tblptru,f,c
  7600  0128C4                     	endif
  7601  0128C4  0009               	tblrd		*+
  7602  0128C6  CFF5 F084          	movff	tablat,___flmul@a
  7603  0128CA  0009               	tblrd		*+
  7604  0128CC  CFF5 F085          	movff	tablat,___flmul@a+1
  7605  0128D0  0009               	tblrd		*+
  7606  0128D2  CFF5 F086          	movff	tablat,___flmul@a+2
  7607  0128D6  000A               	tblrd		*-
  7608  0128D8  CFF5 F087          	movff	tablat,___flmul@a+3
  7609  0128DC  0E00               	movlw	0
  7610  0128DE  0100               	movlb	0	; () banked
  7611  0128E0  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7612  0128E2  0E64               	movlw	100
  7613  0128E4  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7614  0128E6  0100               	movlb	0	; () banked
  7615  0128E8  51A1               	movf	scale@scl& (0+255),w,b
  7616  0128EA  0100               	movlb	0	; () banked
  7617  0128EC  6F78               	movwf	___awdiv@dividend& (0+255),b
  7618  0128EE  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7619  0128F0  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7620  0128F2  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7621  0128F4  EC88  F0AA         	call	___awdiv	;wreg free
  7622  0128F8  0100               	movlb	0	; () banked
  7623  0128FA  90D8               	bcf	status,0,c
  7624  0128FC  3778               	rlcf	?___awdiv& (0+255),f,b
  7625  0128FE  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7626  012900  0100               	movlb	0	; () banked
  7627  012902  90D8               	bcf	status,0,c
  7628  012904  3778               	rlcf	?___awdiv& (0+255),f,b
  7629  012906  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7630  012908  0E48               	movlw	72
  7631  01290A  0100               	movlb	0	; () banked
  7632  01290C  2778               	addwf	?___awdiv& (0+255),f,b
  7633  01290E  0E00               	movlw	0
  7634  012910  0100               	movlb	0	; () banked
  7635  012912  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7636  012914  0EBB               	movlw	low __npowers_
  7637  012916  0100               	movlb	0	; () banked
  7638  012918  2578               	addwf	?___awdiv& (0+255),w,b
  7639  01291A  6EF6               	movwf	tblptrl,c
  7640  01291C  0EFE               	movlw	high __npowers_
  7641  01291E  0100               	movlb	0	; () banked
  7642  012920  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7643  012922  6EF7               	movwf	tblptrh,c
  7644  012924                     	if	1	;There are 3 active tblptr bytes
  7645  012924  6AF8               	clrf	tblptru,c
  7646  012926  0E00               	movlw	low (__mediumconst shr (0+16))
  7647  012928  22F8               	addwfc	tblptru,f,c
  7648  01292A                     	endif
  7649  01292A  0009               	tblrd		*+
  7650  01292C  CFF5 F080          	movff	tablat,___flmul@b
  7651  012930  0009               	tblrd		*+
  7652  012932  CFF5 F081          	movff	tablat,___flmul@b+1
  7653  012936  0009               	tblrd		*+
  7654  012938  CFF5 F082          	movff	tablat,___flmul@b+2
  7655  01293C  000A               	tblrd		*-
  7656  01293E  CFF5 F083          	movff	tablat,___flmul@b+3
  7657  012942  EC8A  F09B         	call	___flmul	;wreg free
  7658  012946  C080  F09D         	movff	?___flmul,_scale$4212
  7659  01294A  C081  F09E         	movff	?___flmul+1,_scale$4212+1
  7660  01294E  C082  F09F         	movff	?___flmul+2,_scale$4212+2
  7661  012952  C083  F0A0         	movff	?___flmul+3,_scale$4212+3
  7662                           
  7663                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7664  012956  C09D  F080         	movff	_scale$4212,___flmul@b
  7665  01295A  C09E  F081         	movff	_scale$4212+1,___flmul@b+1
  7666  01295E  C09F  F082         	movff	_scale$4212+2,___flmul@b+2
  7667  012962  C0A0  F083         	movff	_scale$4212+3,___flmul@b+3
  7668  012966  0E00               	movlw	0
  7669  012968  0100               	movlb	0	; () banked
  7670  01296A  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7671  01296C  0E0A               	movlw	10
  7672  01296E  6F74               	movwf	___awmod@divisor& (0+255),b
  7673  012970  0100               	movlb	0	; () banked
  7674  012972  51A1               	movf	scale@scl& (0+255),w,b
  7675  012974  0100               	movlb	0	; () banked
  7676  012976  6F72               	movwf	___awmod@dividend& (0+255),b
  7677  012978  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7678  01297A  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7679  01297C  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7680  01297E  EC49  F0AC         	call	___awmod	;wreg free
  7681  012982  0100               	movlb	0	; () banked
  7682  012984  90D8               	bcf	status,0,c
  7683  012986  3772               	rlcf	?___awmod& (0+255),f,b
  7684  012988  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7685  01298A  0100               	movlb	0	; () banked
  7686  01298C  90D8               	bcf	status,0,c
  7687  01298E  3772               	rlcf	?___awmod& (0+255),f,b
  7688  012990  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7689  012992  0EBB               	movlw	low __npowers_
  7690  012994  0100               	movlb	0	; () banked
  7691  012996  2572               	addwf	?___awmod& (0+255),w,b
  7692  012998  6EF6               	movwf	tblptrl,c
  7693  01299A  0EFE               	movlw	high __npowers_
  7694  01299C  0100               	movlb	0	; () banked
  7695  01299E  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7696  0129A0  6EF7               	movwf	tblptrh,c
  7697  0129A2                     	if	1	;There are 3 active tblptr bytes
  7698  0129A2  6AF8               	clrf	tblptru,c
  7699  0129A4  0E00               	movlw	low (__mediumconst shr (0+16))
  7700  0129A6  22F8               	addwfc	tblptru,f,c
  7701  0129A8                     	endif
  7702  0129A8  0009               	tblrd		*+
  7703  0129AA  CFF5 F084          	movff	tablat,___flmul@a
  7704  0129AE  0009               	tblrd		*+
  7705  0129B0  CFF5 F085          	movff	tablat,___flmul@a+1
  7706  0129B4  0009               	tblrd		*+
  7707  0129B6  CFF5 F086          	movff	tablat,___flmul@a+2
  7708  0129BA  000A               	tblrd		*-
  7709  0129BC  CFF5 F087          	movff	tablat,___flmul@a+3
  7710  0129C0  EC8A  F09B         	call	___flmul	;wreg free
  7711  0129C4  C080  F099         	movff	?___flmul,?_scale
  7712  0129C8  C081  F09A         	movff	?___flmul+1,?_scale+1
  7713  0129CC  C082  F09B         	movff	?___flmul+2,?_scale+2
  7714  0129D0  C083  F09C         	movff	?___flmul+3,?_scale+3
  7715  0129D4  0012               	return	
  7716  0129D6                     l7880:
  7717                           
  7718                           ;doprnt.c: 432: else if(scl > 10)
  7719  0129D6  0100               	movlb	0	; () banked
  7720  0129D8  51A1               	movf	scale@scl& (0+255),w,b
  7721  0129DA  0A80               	xorlw	128
  7722  0129DC  0F75               	addlw	-139
  7723  0129DE  A0D8               	btfss	status,0,c
  7724  0129E0  D063               	goto	l7886
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7728  0129E2  0E00               	movlw	0
  7729  0129E4  0100               	movlb	0	; () banked
  7730  0129E6  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7731  0129E8  0E0A               	movlw	10
  7732  0129EA  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7733  0129EC  0100               	movlb	0	; () banked
  7734  0129EE  51A1               	movf	scale@scl& (0+255),w,b
  7735  0129F0  0100               	movlb	0	; () banked
  7736  0129F2  6F78               	movwf	___awdiv@dividend& (0+255),b
  7737  0129F4  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7738  0129F6  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7739  0129F8  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7740  0129FA  EC88  F0AA         	call	___awdiv	;wreg free
  7741  0129FE  0100               	movlb	0	; () banked
  7742  012A00  90D8               	bcf	status,0,c
  7743  012A02  3778               	rlcf	?___awdiv& (0+255),f,b
  7744  012A04  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7745  012A06  0100               	movlb	0	; () banked
  7746  012A08  90D8               	bcf	status,0,c
  7747  012A0A  3778               	rlcf	?___awdiv& (0+255),f,b
  7748  012A0C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7749  012A0E  0E24               	movlw	36
  7750  012A10  0100               	movlb	0	; () banked
  7751  012A12  2778               	addwf	?___awdiv& (0+255),f,b
  7752  012A14  0E00               	movlw	0
  7753  012A16  0100               	movlb	0	; () banked
  7754  012A18  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7755  012A1A  0EBB               	movlw	low __npowers_
  7756  012A1C  0100               	movlb	0	; () banked
  7757  012A1E  2578               	addwf	?___awdiv& (0+255),w,b
  7758  012A20  6EF6               	movwf	tblptrl,c
  7759  012A22  0EFE               	movlw	high __npowers_
  7760  012A24  0100               	movlb	0	; () banked
  7761  012A26  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7762  012A28  6EF7               	movwf	tblptrh,c
  7763  012A2A                     	if	1	;There are 3 active tblptr bytes
  7764  012A2A  6AF8               	clrf	tblptru,c
  7765  012A2C  0E00               	movlw	low (__mediumconst shr (0+16))
  7766  012A2E  22F8               	addwfc	tblptru,f,c
  7767  012A30                     	endif
  7768  012A30  0009               	tblrd		*+
  7769  012A32  CFF5 F080          	movff	tablat,___flmul@b
  7770  012A36  0009               	tblrd		*+
  7771  012A38  CFF5 F081          	movff	tablat,___flmul@b+1
  7772  012A3C  0009               	tblrd		*+
  7773  012A3E  CFF5 F082          	movff	tablat,___flmul@b+2
  7774  012A42  000A               	tblrd		*-
  7775  012A44  CFF5 F083          	movff	tablat,___flmul@b+3
  7776  012A48  0E00               	movlw	0
  7777  012A4A  0100               	movlb	0	; () banked
  7778  012A4C  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7779  012A4E  0E0A               	movlw	10
  7780  012A50  6F74               	movwf	___awmod@divisor& (0+255),b
  7781  012A52  0100               	movlb	0	; () banked
  7782  012A54  51A1               	movf	scale@scl& (0+255),w,b
  7783  012A56  0100               	movlb	0	; () banked
  7784  012A58  6F72               	movwf	___awmod@dividend& (0+255),b
  7785  012A5A  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7786  012A5C  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7787  012A5E  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7788  012A60  EC49  F0AC         	call	___awmod	;wreg free
  7789  012A64  0100               	movlb	0	; () banked
  7790  012A66  90D8               	bcf	status,0,c
  7791  012A68  3772               	rlcf	?___awmod& (0+255),f,b
  7792  012A6A  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7793  012A6C  0100               	movlb	0	; () banked
  7794  012A6E  90D8               	bcf	status,0,c
  7795  012A70  3772               	rlcf	?___awmod& (0+255),f,b
  7796  012A72  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7797  012A74  0EBB               	movlw	low __npowers_
  7798  012A76  0100               	movlb	0	; () banked
  7799  012A78  2572               	addwf	?___awmod& (0+255),w,b
  7800  012A7A  6EF6               	movwf	tblptrl,c
  7801  012A7C  0EFE               	movlw	high __npowers_
  7802  012A7E  0100               	movlb	0	; () banked
  7803  012A80  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7804  012A82  6EF7               	movwf	tblptrh,c
  7805  012A84                     	if	1	;There are 3 active tblptr bytes
  7806  012A84  6AF8               	clrf	tblptru,c
  7807  012A86  0E00               	movlw	low (__mediumconst shr (0+16))
  7808  012A88  22F8               	addwfc	tblptru,f,c
  7809  012A8A                     	endif
  7810  012A8A  0009               	tblrd		*+
  7811  012A8C  CFF5 F084          	movff	tablat,___flmul@a
  7812  012A90  0009               	tblrd		*+
  7813  012A92  CFF5 F085          	movff	tablat,___flmul@a+1
  7814  012A96  0009               	tblrd		*+
  7815  012A98  CFF5 F086          	movff	tablat,___flmul@a+2
  7816  012A9C  000A               	tblrd		*-
  7817  012A9E  CFF5 F087          	movff	tablat,___flmul@a+3
  7818  012AA2  EC8A  F09B         	call	___flmul	;wreg free
  7819  012AA6  D78E               	goto	L5
  7820  012AA8                     l7886:
  7821                           
  7822                           ;doprnt.c: 434: return _npowers_[scl];
  7823  012AA8  0100               	movlb	0	; () banked
  7824  012AAA  51A1               	movf	scale@scl& (0+255),w,b
  7825  012AAC  0D04               	mullw	4
  7826  012AAE  0EBB               	movlw	low __npowers_
  7827  012AB0  24F3               	addwf	prodl,w,c
  7828  012AB2  6EF6               	movwf	tblptrl,c
  7829  012AB4  0EFE               	movlw	high __npowers_
  7830  012AB6  20F4               	addwfc	prodh,w,c
  7831  012AB8  6EF7               	movwf	tblptrh,c
  7832  012ABA                     	if	1	;There are 3 active tblptr bytes
  7833  012ABA  6AF8               	clrf	tblptru,c
  7834  012ABC  0E00               	movlw	low (__mediumconst shr (0+16))
  7835  012ABE  22F8               	addwfc	tblptru,f,c
  7836  012AC0                     	endif
  7837  012AC0  0009               	tblrd		*+
  7838  012AC2  CFF5 F099          	movff	tablat,?_scale
  7839  012AC6  0009               	tblrd		*+
  7840  012AC8  CFF5 F09A          	movff	tablat,?_scale+1
  7841  012ACC  0009               	tblrd		*+
  7842  012ACE  CFF5 F09B          	movff	tablat,?_scale+2
  7843  012AD2  000A               	tblrd		*-
  7844  012AD4  CFF5 F09C          	movff	tablat,?_scale+3
  7845                           
  7846                           ; BSR set to: 0
  7847  012AD8  0012               	return	
  7848  012ADA                     l7890:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;doprnt.c: 435: }
  7852                           ;doprnt.c: 436: if(scl>=110)
  7853  012ADA  0100               	movlb	0	; () banked
  7854  012ADC  51A1               	movf	scale@scl& (0+255),w,b
  7855  012ADE  0A80               	xorlw	128
  7856  012AE0  0F12               	addlw	-238
  7857  012AE2  A0D8               	btfss	status,0,c
  7858  012AE4  D0BB               	goto	l7898
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7862  012AE6  0E00               	movlw	0
  7863  012AE8  0100               	movlb	0	; () banked
  7864  012AEA  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7865  012AEC  0E0A               	movlw	10
  7866  012AEE  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7867  012AF0  0E00               	movlw	0
  7868  012AF2  0100               	movlb	0	; () banked
  7869  012AF4  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7870  012AF6  0E64               	movlw	100
  7871  012AF8  6F74               	movwf	___awmod@divisor& (0+255),b
  7872  012AFA  0100               	movlb	0	; () banked
  7873  012AFC  51A1               	movf	scale@scl& (0+255),w,b
  7874  012AFE  0100               	movlb	0	; () banked
  7875  012B00  6F72               	movwf	___awmod@dividend& (0+255),b
  7876  012B02  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7877  012B04  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7878  012B06  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7879  012B08  EC49  F0AC         	call	___awmod	;wreg free
  7880  012B0C  C072  F078         	movff	?___awmod,___awdiv@dividend
  7881  012B10  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7882  012B14  EC88  F0AA         	call	___awdiv	;wreg free
  7883  012B18  0100               	movlb	0	; () banked
  7884  012B1A  90D8               	bcf	status,0,c
  7885  012B1C  3778               	rlcf	?___awdiv& (0+255),f,b
  7886  012B1E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7887  012B20  0100               	movlb	0	; () banked
  7888  012B22  90D8               	bcf	status,0,c
  7889  012B24  3778               	rlcf	?___awdiv& (0+255),f,b
  7890  012B26  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7891  012B28  0E24               	movlw	36
  7892  012B2A  0100               	movlb	0	; () banked
  7893  012B2C  2778               	addwf	?___awdiv& (0+255),f,b
  7894  012B2E  0E00               	movlw	0
  7895  012B30  0100               	movlb	0	; () banked
  7896  012B32  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7897  012B34  0EEF               	movlw	low __powers_
  7898  012B36  0100               	movlb	0	; () banked
  7899  012B38  2578               	addwf	?___awdiv& (0+255),w,b
  7900  012B3A  6EF6               	movwf	tblptrl,c
  7901  012B3C  0EFE               	movlw	high __powers_
  7902  012B3E  0100               	movlb	0	; () banked
  7903  012B40  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7904  012B42  6EF7               	movwf	tblptrh,c
  7905  012B44                     	if	1	;There are 3 active tblptr bytes
  7906  012B44  6AF8               	clrf	tblptru,c
  7907  012B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7908  012B48  22F8               	addwfc	tblptru,f,c
  7909  012B4A                     	endif
  7910  012B4A  0009               	tblrd		*+
  7911  012B4C  CFF5 F084          	movff	tablat,___flmul@a
  7912  012B50  0009               	tblrd		*+
  7913  012B52  CFF5 F085          	movff	tablat,___flmul@a+1
  7914  012B56  0009               	tblrd		*+
  7915  012B58  CFF5 F086          	movff	tablat,___flmul@a+2
  7916  012B5C  000A               	tblrd		*-
  7917  012B5E  CFF5 F087          	movff	tablat,___flmul@a+3
  7918  012B62  0E00               	movlw	0
  7919  012B64  0100               	movlb	0	; () banked
  7920  012B66  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7921  012B68  0E64               	movlw	100
  7922  012B6A  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7923  012B6C  0100               	movlb	0	; () banked
  7924  012B6E  51A1               	movf	scale@scl& (0+255),w,b
  7925  012B70  0100               	movlb	0	; () banked
  7926  012B72  6F78               	movwf	___awdiv@dividend& (0+255),b
  7927  012B74  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7928  012B76  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7929  012B78  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7930  012B7A  EC88  F0AA         	call	___awdiv	;wreg free
  7931  012B7E  0100               	movlb	0	; () banked
  7932  012B80  90D8               	bcf	status,0,c
  7933  012B82  3778               	rlcf	?___awdiv& (0+255),f,b
  7934  012B84  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7935  012B86  0100               	movlb	0	; () banked
  7936  012B88  90D8               	bcf	status,0,c
  7937  012B8A  3778               	rlcf	?___awdiv& (0+255),f,b
  7938  012B8C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7939  012B8E  0E48               	movlw	72
  7940  012B90  0100               	movlb	0	; () banked
  7941  012B92  2778               	addwf	?___awdiv& (0+255),f,b
  7942  012B94  0E00               	movlw	0
  7943  012B96  0100               	movlb	0	; () banked
  7944  012B98  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7945  012B9A  0EEF               	movlw	low __powers_
  7946  012B9C  0100               	movlb	0	; () banked
  7947  012B9E  2578               	addwf	?___awdiv& (0+255),w,b
  7948  012BA0  6EF6               	movwf	tblptrl,c
  7949  012BA2  0EFE               	movlw	high __powers_
  7950  012BA4  0100               	movlb	0	; () banked
  7951  012BA6  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7952  012BA8  6EF7               	movwf	tblptrh,c
  7953  012BAA                     	if	1	;There are 3 active tblptr bytes
  7954  012BAA  6AF8               	clrf	tblptru,c
  7955  012BAC  0E00               	movlw	low (__mediumconst shr (0+16))
  7956  012BAE  22F8               	addwfc	tblptru,f,c
  7957  012BB0                     	endif
  7958  012BB0  0009               	tblrd		*+
  7959  012BB2  CFF5 F080          	movff	tablat,___flmul@b
  7960  012BB6  0009               	tblrd		*+
  7961  012BB8  CFF5 F081          	movff	tablat,___flmul@b+1
  7962  012BBC  0009               	tblrd		*+
  7963  012BBE  CFF5 F082          	movff	tablat,___flmul@b+2
  7964  012BC2  000A               	tblrd		*-
  7965  012BC4  CFF5 F083          	movff	tablat,___flmul@b+3
  7966  012BC8  EC8A  F09B         	call	___flmul	;wreg free
  7967  012BCC  C080  F09D         	movff	?___flmul,_scale$4212
  7968  012BD0  C081  F09E         	movff	?___flmul+1,_scale$4212+1
  7969  012BD4  C082  F09F         	movff	?___flmul+2,_scale$4212+2
  7970  012BD8  C083  F0A0         	movff	?___flmul+3,_scale$4212+3
  7971                           
  7972                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7973  012BDC  C09D  F080         	movff	_scale$4212,___flmul@b
  7974  012BE0  C09E  F081         	movff	_scale$4212+1,___flmul@b+1
  7975  012BE4  C09F  F082         	movff	_scale$4212+2,___flmul@b+2
  7976  012BE8  C0A0  F083         	movff	_scale$4212+3,___flmul@b+3
  7977  012BEC  0E00               	movlw	0
  7978  012BEE  0100               	movlb	0	; () banked
  7979  012BF0  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7980  012BF2  0E0A               	movlw	10
  7981  012BF4  6F74               	movwf	___awmod@divisor& (0+255),b
  7982  012BF6  0100               	movlb	0	; () banked
  7983  012BF8  51A1               	movf	scale@scl& (0+255),w,b
  7984  012BFA  0100               	movlb	0	; () banked
  7985  012BFC  6F72               	movwf	___awmod@dividend& (0+255),b
  7986  012BFE  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7987  012C00  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7988  012C02  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7989  012C04  EC49  F0AC         	call	___awmod	;wreg free
  7990  012C08  0100               	movlb	0	; () banked
  7991  012C0A  90D8               	bcf	status,0,c
  7992  012C0C  3772               	rlcf	?___awmod& (0+255),f,b
  7993  012C0E  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7994  012C10  0100               	movlb	0	; () banked
  7995  012C12  90D8               	bcf	status,0,c
  7996  012C14  3772               	rlcf	?___awmod& (0+255),f,b
  7997  012C16  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7998  012C18  0EEF               	movlw	low __powers_
  7999  012C1A  0100               	movlb	0	; () banked
  8000  012C1C  2572               	addwf	?___awmod& (0+255),w,b
  8001  012C1E  6EF6               	movwf	tblptrl,c
  8002  012C20  0EFE               	movlw	high __powers_
  8003  012C22  0100               	movlb	0	; () banked
  8004  012C24  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8005  012C26  6EF7               	movwf	tblptrh,c
  8006  012C28                     	if	1	;There are 3 active tblptr bytes
  8007  012C28  6AF8               	clrf	tblptru,c
  8008  012C2A  0E00               	movlw	low (__mediumconst shr (0+16))
  8009  012C2C  22F8               	addwfc	tblptru,f,c
  8010  012C2E                     	endif
  8011  012C2E  0009               	tblrd		*+
  8012  012C30  CFF5 F084          	movff	tablat,___flmul@a
  8013  012C34  0009               	tblrd		*+
  8014  012C36  CFF5 F085          	movff	tablat,___flmul@a+1
  8015  012C3A  0009               	tblrd		*+
  8016  012C3C  CFF5 F086          	movff	tablat,___flmul@a+2
  8017  012C40  000A               	tblrd		*-
  8018  012C42  CFF5 F087          	movff	tablat,___flmul@a+3
  8019  012C46  EC8A  F09B         	call	___flmul	;wreg free
  8020  012C4A  C080  F099         	movff	?___flmul,?_scale
  8021  012C4E  C081  F09A         	movff	?___flmul+1,?_scale+1
  8022  012C52  C082  F09B         	movff	?___flmul+2,?_scale+2
  8023  012C56  C083  F09C         	movff	?___flmul+3,?_scale+3
  8024  012C5A  0012               	return	
  8025  012C5C                     l7898:
  8026                           
  8027                           ;doprnt.c: 438: else if(scl > 10)
  8028  012C5C  0100               	movlb	0	; () banked
  8029  012C5E  51A1               	movf	scale@scl& (0+255),w,b
  8030  012C60  0A80               	xorlw	128
  8031  012C62  0F75               	addlw	-139
  8032  012C64  A0D8               	btfss	status,0,c
  8033  012C66  D063               	goto	l7904
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8037  012C68  0E00               	movlw	0
  8038  012C6A  0100               	movlb	0	; () banked
  8039  012C6C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8040  012C6E  0E0A               	movlw	10
  8041  012C70  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8042  012C72  0100               	movlb	0	; () banked
  8043  012C74  51A1               	movf	scale@scl& (0+255),w,b
  8044  012C76  0100               	movlb	0	; () banked
  8045  012C78  6F78               	movwf	___awdiv@dividend& (0+255),b
  8046  012C7A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8047  012C7C  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  8048  012C7E  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8049  012C80  EC88  F0AA         	call	___awdiv	;wreg free
  8050  012C84  0100               	movlb	0	; () banked
  8051  012C86  90D8               	bcf	status,0,c
  8052  012C88  3778               	rlcf	?___awdiv& (0+255),f,b
  8053  012C8A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8054  012C8C  0100               	movlb	0	; () banked
  8055  012C8E  90D8               	bcf	status,0,c
  8056  012C90  3778               	rlcf	?___awdiv& (0+255),f,b
  8057  012C92  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8058  012C94  0E24               	movlw	36
  8059  012C96  0100               	movlb	0	; () banked
  8060  012C98  2778               	addwf	?___awdiv& (0+255),f,b
  8061  012C9A  0E00               	movlw	0
  8062  012C9C  0100               	movlb	0	; () banked
  8063  012C9E  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8064  012CA0  0EEF               	movlw	low __powers_
  8065  012CA2  0100               	movlb	0	; () banked
  8066  012CA4  2578               	addwf	?___awdiv& (0+255),w,b
  8067  012CA6  6EF6               	movwf	tblptrl,c
  8068  012CA8  0EFE               	movlw	high __powers_
  8069  012CAA  0100               	movlb	0	; () banked
  8070  012CAC  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8071  012CAE  6EF7               	movwf	tblptrh,c
  8072  012CB0                     	if	1	;There are 3 active tblptr bytes
  8073  012CB0  6AF8               	clrf	tblptru,c
  8074  012CB2  0E00               	movlw	low (__mediumconst shr (0+16))
  8075  012CB4  22F8               	addwfc	tblptru,f,c
  8076  012CB6                     	endif
  8077  012CB6  0009               	tblrd		*+
  8078  012CB8  CFF5 F080          	movff	tablat,___flmul@b
  8079  012CBC  0009               	tblrd		*+
  8080  012CBE  CFF5 F081          	movff	tablat,___flmul@b+1
  8081  012CC2  0009               	tblrd		*+
  8082  012CC4  CFF5 F082          	movff	tablat,___flmul@b+2
  8083  012CC8  000A               	tblrd		*-
  8084  012CCA  CFF5 F083          	movff	tablat,___flmul@b+3
  8085  012CCE  0E00               	movlw	0
  8086  012CD0  0100               	movlb	0	; () banked
  8087  012CD2  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8088  012CD4  0E0A               	movlw	10
  8089  012CD6  6F74               	movwf	___awmod@divisor& (0+255),b
  8090  012CD8  0100               	movlb	0	; () banked
  8091  012CDA  51A1               	movf	scale@scl& (0+255),w,b
  8092  012CDC  0100               	movlb	0	; () banked
  8093  012CDE  6F72               	movwf	___awmod@dividend& (0+255),b
  8094  012CE0  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8095  012CE2  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  8096  012CE4  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  8097  012CE6  EC49  F0AC         	call	___awmod	;wreg free
  8098  012CEA  0100               	movlb	0	; () banked
  8099  012CEC  90D8               	bcf	status,0,c
  8100  012CEE  3772               	rlcf	?___awmod& (0+255),f,b
  8101  012CF0  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8102  012CF2  0100               	movlb	0	; () banked
  8103  012CF4  90D8               	bcf	status,0,c
  8104  012CF6  3772               	rlcf	?___awmod& (0+255),f,b
  8105  012CF8  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8106  012CFA  0EEF               	movlw	low __powers_
  8107  012CFC  0100               	movlb	0	; () banked
  8108  012CFE  2572               	addwf	?___awmod& (0+255),w,b
  8109  012D00  6EF6               	movwf	tblptrl,c
  8110  012D02  0EFE               	movlw	high __powers_
  8111  012D04  0100               	movlb	0	; () banked
  8112  012D06  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8113  012D08  6EF7               	movwf	tblptrh,c
  8114  012D0A                     	if	1	;There are 3 active tblptr bytes
  8115  012D0A  6AF8               	clrf	tblptru,c
  8116  012D0C  0E00               	movlw	low (__mediumconst shr (0+16))
  8117  012D0E  22F8               	addwfc	tblptru,f,c
  8118  012D10                     	endif
  8119  012D10  0009               	tblrd		*+
  8120  012D12  CFF5 F084          	movff	tablat,___flmul@a
  8121  012D16  0009               	tblrd		*+
  8122  012D18  CFF5 F085          	movff	tablat,___flmul@a+1
  8123  012D1C  0009               	tblrd		*+
  8124  012D1E  CFF5 F086          	movff	tablat,___flmul@a+2
  8125  012D22  000A               	tblrd		*-
  8126  012D24  CFF5 F087          	movff	tablat,___flmul@a+3
  8127  012D28  EC8A  F09B         	call	___flmul	;wreg free
  8128  012D2C  D78E               	goto	L6
  8129  012D2E                     l7904:
  8130                           
  8131                           ;doprnt.c: 440: return _powers_[scl];
  8132  012D2E  0100               	movlb	0	; () banked
  8133  012D30  51A1               	movf	scale@scl& (0+255),w,b
  8134  012D32  0D04               	mullw	4
  8135  012D34  0EEF               	movlw	low __powers_
  8136  012D36  24F3               	addwf	prodl,w,c
  8137  012D38  6EF6               	movwf	tblptrl,c
  8138  012D3A  0EFE               	movlw	high __powers_
  8139  012D3C  20F4               	addwfc	prodh,w,c
  8140  012D3E  6EF7               	movwf	tblptrh,c
  8141  012D40                     	if	1	;There are 3 active tblptr bytes
  8142  012D40  6AF8               	clrf	tblptru,c
  8143  012D42  0E00               	movlw	low (__mediumconst shr (0+16))
  8144  012D44  22F8               	addwfc	tblptru,f,c
  8145  012D46                     	endif
  8146  012D46  0009               	tblrd		*+
  8147  012D48  CFF5 F099          	movff	tablat,?_scale
  8148  012D4C  0009               	tblrd		*+
  8149  012D4E  CFF5 F09A          	movff	tablat,?_scale+1
  8150  012D52  0009               	tblrd		*+
  8151  012D54  CFF5 F09B          	movff	tablat,?_scale+2
  8152  012D58  000A               	tblrd		*-
  8153  012D5A  CFF5 F09C          	movff	tablat,?_scale+3
  8154  012D5E  0012               	return	
  8155  012D60                     __end_of_scale:
  8156                           	opt stack 0
  8157                           tblptru	equ	0xFF8
  8158                           tblptrh	equ	0xFF7
  8159                           tblptrl	equ	0xFF6
  8160                           tablat	equ	0xFF5
  8161                           prodh	equ	0xFF4
  8162                           prodl	equ	0xFF3
  8163                           intcon	equ	0xFF2
  8164                           postinc0	equ	0xFEE
  8165                           wreg	equ	0xFE8
  8166                           indf2	equ	0xFDF
  8167                           postinc2	equ	0xFDE
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function _isdigit *****************
  8173 ;; Defined at:
  8174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  c               1    wreg     unsigned char 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  c               1   20[BANK0 ] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;		None               void
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;Total ram usage:        3 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    3
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_sprintf
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text10
  8203  015D0A                     __ptext10:
  8204                           	opt stack 0
  8205  015D0A                     _isdigit:
  8206                           	opt stack 25
  8207                           
  8208                           ;incstack = 0
  8209                           ;isdigit@c stored from wreg
  8210  015D0A  0100               	movlb	0	; () banked
  8211  015D0C  6F74               	movwf	isdigit@c& (0+255),b
  8212  015D0E  0E00               	movlw	0
  8213  015D10  0100               	movlb	0	; () banked
  8214  015D12  6F73               	movwf	_isdigit$3795& (0+255),b
  8215                           
  8216                           ; BSR set to: 0
  8217  015D14  0E3A               	movlw	58
  8218  015D16  0100               	movlb	0	; () banked
  8219  015D18  6174               	cpfslt	isdigit@c& (0+255),b
  8220  015D1A  D007               	goto	l7916
  8221                           
  8222                           ; BSR set to: 0
  8223  015D1C  0E2F               	movlw	47
  8224  015D1E  0100               	movlb	0	; () banked
  8225  015D20  6574               	cpfsgt	isdigit@c& (0+255),b
  8226  015D22  D003               	goto	l7916
  8227                           
  8228                           ; BSR set to: 0
  8229  015D24  0E01               	movlw	1
  8230  015D26  0100               	movlb	0	; () banked
  8231  015D28  6F73               	movwf	_isdigit$3795& (0+255),b
  8232  015D2A                     l7916:
  8233                           
  8234                           ; BSR set to: 0
  8235  015D2A  C073  F072         	movff	_isdigit$3795,??_isdigit
  8236  015D2E  0100               	movlb	0	; () banked
  8237  015D30  3172               	rrcf	??_isdigit& (0+255),w,b
  8238  015D32  0012               	return	
  8239  015D34                     __end_of_isdigit:
  8240                           	opt stack 0
  8241                           tblptru	equ	0xFF8
  8242                           tblptrh	equ	0xFF7
  8243                           tblptrl	equ	0xFF6
  8244                           tablat	equ	0xFF5
  8245                           prodh	equ	0xFF4
  8246                           prodl	equ	0xFF3
  8247                           intcon	equ	0xFF2
  8248                           postinc0	equ	0xFEE
  8249                           wreg	equ	0xFE8
  8250                           indf2	equ	0xFDF
  8251                           postinc2	equ	0xFDE
  8252                           fsr2h	equ	0xFDA
  8253                           fsr2l	equ	0xFD9
  8254                           status	equ	0xFD8
  8255                           
  8256 ;; *************** function _fround *****************
  8257 ;; Defined at:
  8258 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  prec            1    wreg     unsigned char 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  prec            1   69[BANK0 ] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  4   57[BANK0 ] unsigned char 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;Total ram usage:       13 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    4
  8279 ;; This function calls:
  8280 ;;		___awdiv
  8281 ;;		___awmod
  8282 ;;		___flmul
  8283 ;; This function is called by:
  8284 ;;		_sprintf
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text11
  8289  014318                     __ptext11:
  8290                           	opt stack 0
  8291  014318                     _fround:
  8292                           	opt stack 24
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;incstack = 0
  8296                           ;fround@prec stored from wreg
  8297  014318  0100               	movlb	0	; () banked
  8298  01431A  6FA5               	movwf	fround@prec& (0+255),b
  8299                           
  8300                           ;doprnt.c: 413: if(prec>=110)
  8301  01431C  0E6D               	movlw	109
  8302  01431E  0100               	movlb	0	; () banked
  8303  014320  65A5               	cpfsgt	fround@prec& (0+255),b
  8304  014322  D0CD               	goto	l7858
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8308  014324  0E00               	movlw	0
  8309  014326  0100               	movlb	0	; () banked
  8310  014328  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8311  01432A  0E0A               	movlw	10
  8312  01432C  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8313  01432E  0E00               	movlw	0
  8314  014330  0100               	movlb	0	; () banked
  8315  014332  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8316  014334  0E64               	movlw	100
  8317  014336  6F74               	movwf	___awmod@divisor& (0+255),b
  8318  014338  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8319  01433C  0100               	movlb	0	; () banked
  8320  01433E  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8321  014340  EC49  F0AC         	call	___awmod	;wreg free
  8322  014344  C072  F078         	movff	?___awmod,___awdiv@dividend
  8323  014348  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  8324  01434C  EC88  F0AA         	call	___awdiv	;wreg free
  8325  014350  0100               	movlb	0	; () banked
  8326  014352  90D8               	bcf	status,0,c
  8327  014354  3778               	rlcf	?___awdiv& (0+255),f,b
  8328  014356  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8329  014358  0100               	movlb	0	; () banked
  8330  01435A  90D8               	bcf	status,0,c
  8331  01435C  3778               	rlcf	?___awdiv& (0+255),f,b
  8332  01435E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8333  014360  0E24               	movlw	36
  8334  014362  0100               	movlb	0	; () banked
  8335  014364  2778               	addwf	?___awdiv& (0+255),f,b
  8336  014366  0E00               	movlw	0
  8337  014368  0100               	movlb	0	; () banked
  8338  01436A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8339  01436C  0EBB               	movlw	low __npowers_
  8340  01436E  0100               	movlb	0	; () banked
  8341  014370  2578               	addwf	?___awdiv& (0+255),w,b
  8342  014372  6EF6               	movwf	tblptrl,c
  8343  014374  0EFE               	movlw	high __npowers_
  8344  014376  0100               	movlb	0	; () banked
  8345  014378  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8346  01437A  6EF7               	movwf	tblptrh,c
  8347  01437C                     	if	1	;There are 3 active tblptr bytes
  8348  01437C  6AF8               	clrf	tblptru,c
  8349  01437E  0E00               	movlw	low (__mediumconst shr (0+16))
  8350  014380  22F8               	addwfc	tblptru,f,c
  8351  014382                     	endif
  8352  014382  0009               	tblrd		*+
  8353  014384  CFF5 F084          	movff	tablat,___flmul@a
  8354  014388  0009               	tblrd		*+
  8355  01438A  CFF5 F085          	movff	tablat,___flmul@a+1
  8356  01438E  0009               	tblrd		*+
  8357  014390  CFF5 F086          	movff	tablat,___flmul@a+2
  8358  014394  000A               	tblrd		*-
  8359  014396  CFF5 F087          	movff	tablat,___flmul@a+3
  8360  01439A  0E00               	movlw	0
  8361  01439C  0100               	movlb	0	; () banked
  8362  01439E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8363  0143A0  0E64               	movlw	100
  8364  0143A2  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8365  0143A4  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8366  0143A8  0100               	movlb	0	; () banked
  8367  0143AA  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8368  0143AC  EC88  F0AA         	call	___awdiv	;wreg free
  8369  0143B0  0100               	movlb	0	; () banked
  8370  0143B2  90D8               	bcf	status,0,c
  8371  0143B4  3778               	rlcf	?___awdiv& (0+255),f,b
  8372  0143B6  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8373  0143B8  0100               	movlb	0	; () banked
  8374  0143BA  90D8               	bcf	status,0,c
  8375  0143BC  3778               	rlcf	?___awdiv& (0+255),f,b
  8376  0143BE  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8377  0143C0  0E48               	movlw	72
  8378  0143C2  0100               	movlb	0	; () banked
  8379  0143C4  2778               	addwf	?___awdiv& (0+255),f,b
  8380  0143C6  0E00               	movlw	0
  8381  0143C8  0100               	movlb	0	; () banked
  8382  0143CA  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8383  0143CC  0EBB               	movlw	low __npowers_
  8384  0143CE  0100               	movlb	0	; () banked
  8385  0143D0  2578               	addwf	?___awdiv& (0+255),w,b
  8386  0143D2  6EF6               	movwf	tblptrl,c
  8387  0143D4  0EFE               	movlw	high __npowers_
  8388  0143D6  0100               	movlb	0	; () banked
  8389  0143D8  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8390  0143DA  6EF7               	movwf	tblptrh,c
  8391  0143DC                     	if	1	;There are 3 active tblptr bytes
  8392  0143DC  6AF8               	clrf	tblptru,c
  8393  0143DE  0E00               	movlw	low (__mediumconst shr (0+16))
  8394  0143E0  22F8               	addwfc	tblptru,f,c
  8395  0143E2                     	endif
  8396  0143E2  0009               	tblrd		*+
  8397  0143E4  CFF5 F080          	movff	tablat,___flmul@b
  8398  0143E8  0009               	tblrd		*+
  8399  0143EA  CFF5 F081          	movff	tablat,___flmul@b+1
  8400  0143EE  0009               	tblrd		*+
  8401  0143F0  CFF5 F082          	movff	tablat,___flmul@b+2
  8402  0143F4  000A               	tblrd		*-
  8403  0143F6  CFF5 F083          	movff	tablat,___flmul@b+3
  8404  0143FA  EC8A  F09B         	call	___flmul	;wreg free
  8405  0143FE  C080  F0A1         	movff	?___flmul,_fround$4210
  8406  014402  C081  F0A2         	movff	?___flmul+1,_fround$4210+1
  8407  014406  C082  F0A3         	movff	?___flmul+2,_fround$4210+2
  8408  01440A  C083  F0A4         	movff	?___flmul+3,_fround$4210+3
  8409                           
  8410                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8411  01440E  0E00               	movlw	0
  8412  014410  0100               	movlb	0	; () banked
  8413  014412  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8414  014414  0E0A               	movlw	10
  8415  014416  6F74               	movwf	___awmod@divisor& (0+255),b
  8416  014418  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8417  01441C  0100               	movlb	0	; () banked
  8418  01441E  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8419  014420  EC49  F0AC         	call	___awmod	;wreg free
  8420  014424  0100               	movlb	0	; () banked
  8421  014426  90D8               	bcf	status,0,c
  8422  014428  3772               	rlcf	?___awmod& (0+255),f,b
  8423  01442A  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8424  01442C  0100               	movlb	0	; () banked
  8425  01442E  90D8               	bcf	status,0,c
  8426  014430  3772               	rlcf	?___awmod& (0+255),f,b
  8427  014432  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8428  014434  0EBB               	movlw	low __npowers_
  8429  014436  0100               	movlb	0	; () banked
  8430  014438  2572               	addwf	?___awmod& (0+255),w,b
  8431  01443A  6EF6               	movwf	tblptrl,c
  8432  01443C  0EFE               	movlw	high __npowers_
  8433  01443E  0100               	movlb	0	; () banked
  8434  014440  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8435  014442  6EF7               	movwf	tblptrh,c
  8436  014444                     	if	1	;There are 3 active tblptr bytes
  8437  014444  6AF8               	clrf	tblptru,c
  8438  014446  0E00               	movlw	low (__mediumconst shr (0+16))
  8439  014448  22F8               	addwfc	tblptru,f,c
  8440  01444A                     	endif
  8441  01444A  0009               	tblrd		*+
  8442  01444C  CFF5 F084          	movff	tablat,___flmul@a
  8443  014450  0009               	tblrd		*+
  8444  014452  CFF5 F085          	movff	tablat,___flmul@a+1
  8445  014456  0009               	tblrd		*+
  8446  014458  CFF5 F086          	movff	tablat,___flmul@a+2
  8447  01445C  000A               	tblrd		*-
  8448  01445E  CFF5 F087          	movff	tablat,___flmul@a+3
  8449  014462  C0A1  F080         	movff	_fround$4210,___flmul@b
  8450  014466  C0A2  F081         	movff	_fround$4210+1,___flmul@b+1
  8451  01446A  C0A3  F082         	movff	_fround$4210+2,___flmul@b+2
  8452  01446E  C0A4  F083         	movff	_fround$4210+3,___flmul@b+3
  8453  014472  EC8A  F09B         	call	___flmul	;wreg free
  8454  014476  C080  F09D         	movff	?___flmul,_fround$4211
  8455  01447A  C081  F09E         	movff	?___flmul+1,_fround$4211+1
  8456  01447E  C082  F09F         	movff	?___flmul+2,_fround$4211+2
  8457  014482  C083  F0A0         	movff	?___flmul+3,_fround$4211+3
  8458                           
  8459                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8460  014486  C09D  F080         	movff	_fround$4211,___flmul@b
  8461  01448A  C09E  F081         	movff	_fround$4211+1,___flmul@b+1
  8462  01448E  C09F  F082         	movff	_fround$4211+2,___flmul@b+2
  8463  014492  C0A0  F083         	movff	_fround$4211+3,___flmul@b+3
  8464  014496  0E00               	movlw	0
  8465  014498  0100               	movlb	0	; () banked
  8466  01449A  6F84               	movwf	___flmul@a& (0+255),b
  8467  01449C  0E00               	movlw	0
  8468  01449E  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8469  0144A0  0E00               	movlw	0
  8470  0144A2  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8471  0144A4  0E3F               	movlw	63
  8472  0144A6  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8473  0144A8  EC8A  F09B         	call	___flmul	;wreg free
  8474  0144AC  C080  F099         	movff	?___flmul,?_fround
  8475  0144B0  C081  F09A         	movff	?___flmul+1,?_fround+1
  8476  0144B4  C082  F09B         	movff	?___flmul+2,?_fround+2
  8477  0144B8  C083  F09C         	movff	?___flmul+3,?_fround+3
  8478  0144BC  0012               	return	
  8479  0144BE                     l7858:
  8480                           
  8481                           ;doprnt.c: 415: else if(prec > 10)
  8482  0144BE  0E0A               	movlw	10
  8483  0144C0  0100               	movlb	0	; () banked
  8484  0144C2  65A5               	cpfsgt	fround@prec& (0+255),b
  8485  0144C4  D078               	goto	l7866
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8489  0144C6  0E00               	movlw	0
  8490  0144C8  0100               	movlb	0	; () banked
  8491  0144CA  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8492  0144CC  0E0A               	movlw	10
  8493  0144CE  6F74               	movwf	___awmod@divisor& (0+255),b
  8494  0144D0  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8495  0144D4  0100               	movlb	0	; () banked
  8496  0144D6  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8497  0144D8  EC49  F0AC         	call	___awmod	;wreg free
  8498  0144DC  0100               	movlb	0	; () banked
  8499  0144DE  90D8               	bcf	status,0,c
  8500  0144E0  3772               	rlcf	?___awmod& (0+255),f,b
  8501  0144E2  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8502  0144E4  0100               	movlb	0	; () banked
  8503  0144E6  90D8               	bcf	status,0,c
  8504  0144E8  3772               	rlcf	?___awmod& (0+255),f,b
  8505  0144EA  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8506  0144EC  0EBB               	movlw	low __npowers_
  8507  0144EE  0100               	movlb	0	; () banked
  8508  0144F0  2572               	addwf	?___awmod& (0+255),w,b
  8509  0144F2  6EF6               	movwf	tblptrl,c
  8510  0144F4  0EFE               	movlw	high __npowers_
  8511  0144F6  0100               	movlb	0	; () banked
  8512  0144F8  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8513  0144FA  6EF7               	movwf	tblptrh,c
  8514  0144FC                     	if	1	;There are 3 active tblptr bytes
  8515  0144FC  6AF8               	clrf	tblptru,c
  8516  0144FE  0E00               	movlw	low (__mediumconst shr (0+16))
  8517  014500  22F8               	addwfc	tblptru,f,c
  8518  014502                     	endif
  8519  014502  0009               	tblrd		*+
  8520  014504  CFF5 F084          	movff	tablat,___flmul@a
  8521  014508  0009               	tblrd		*+
  8522  01450A  CFF5 F085          	movff	tablat,___flmul@a+1
  8523  01450E  0009               	tblrd		*+
  8524  014510  CFF5 F086          	movff	tablat,___flmul@a+2
  8525  014514  000A               	tblrd		*-
  8526  014516  CFF5 F087          	movff	tablat,___flmul@a+3
  8527  01451A  0E00               	movlw	0
  8528  01451C  0100               	movlb	0	; () banked
  8529  01451E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8530  014520  0E0A               	movlw	10
  8531  014522  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8532  014524  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8533  014528  0100               	movlb	0	; () banked
  8534  01452A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8535  01452C  EC88  F0AA         	call	___awdiv	;wreg free
  8536  014530  0100               	movlb	0	; () banked
  8537  014532  90D8               	bcf	status,0,c
  8538  014534  3778               	rlcf	?___awdiv& (0+255),f,b
  8539  014536  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8540  014538  0100               	movlb	0	; () banked
  8541  01453A  90D8               	bcf	status,0,c
  8542  01453C  3778               	rlcf	?___awdiv& (0+255),f,b
  8543  01453E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8544  014540  0E24               	movlw	36
  8545  014542  0100               	movlb	0	; () banked
  8546  014544  2778               	addwf	?___awdiv& (0+255),f,b
  8547  014546  0E00               	movlw	0
  8548  014548  0100               	movlb	0	; () banked
  8549  01454A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8550  01454C  0EBB               	movlw	low __npowers_
  8551  01454E  0100               	movlb	0	; () banked
  8552  014550  2578               	addwf	?___awdiv& (0+255),w,b
  8553  014552  6EF6               	movwf	tblptrl,c
  8554  014554  0EFE               	movlw	high __npowers_
  8555  014556  0100               	movlb	0	; () banked
  8556  014558  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8557  01455A  6EF7               	movwf	tblptrh,c
  8558  01455C                     	if	1	;There are 3 active tblptr bytes
  8559  01455C  6AF8               	clrf	tblptru,c
  8560  01455E  0E00               	movlw	low (__mediumconst shr (0+16))
  8561  014560  22F8               	addwfc	tblptru,f,c
  8562  014562                     	endif
  8563  014562  0009               	tblrd		*+
  8564  014564  CFF5 F080          	movff	tablat,___flmul@b
  8565  014568  0009               	tblrd		*+
  8566  01456A  CFF5 F081          	movff	tablat,___flmul@b+1
  8567  01456E  0009               	tblrd		*+
  8568  014570  CFF5 F082          	movff	tablat,___flmul@b+2
  8569  014574  000A               	tblrd		*-
  8570  014576  CFF5 F083          	movff	tablat,___flmul@b+3
  8571  01457A  EC8A  F09B         	call	___flmul	;wreg free
  8572  01457E  C080  F0A1         	movff	?___flmul,_fround$4210
  8573  014582  C081  F0A2         	movff	?___flmul+1,_fround$4210+1
  8574  014586  C082  F0A3         	movff	?___flmul+2,_fround$4210+2
  8575  01458A  C083  F0A4         	movff	?___flmul+3,_fround$4210+3
  8576                           
  8577                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8578  01458E  C0A1  F080         	movff	_fround$4210,___flmul@b
  8579  014592  C0A2  F081         	movff	_fround$4210+1,___flmul@b+1
  8580  014596  C0A3  F082         	movff	_fround$4210+2,___flmul@b+2
  8581  01459A  C0A4  F083         	movff	_fround$4210+3,___flmul@b+3
  8582  01459E  0E00               	movlw	0
  8583  0145A0  0100               	movlb	0	; () banked
  8584  0145A2  6F84               	movwf	___flmul@a& (0+255),b
  8585  0145A4  0E00               	movlw	0
  8586  0145A6  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8587  0145A8  0E00               	movlw	0
  8588  0145AA  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8589  0145AC  0E3F               	movlw	63
  8590  0145AE  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8591  0145B0  EC8A  F09B         	call	___flmul	;wreg free
  8592  0145B4  D77B               	goto	L7
  8593  0145B6                     l7866:
  8594                           
  8595                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8596  0145B6  0100               	movlb	0	; () banked
  8597  0145B8  51A5               	movf	fround@prec& (0+255),w,b
  8598  0145BA  0D04               	mullw	4
  8599  0145BC  0EBB               	movlw	low __npowers_
  8600  0145BE  24F3               	addwf	prodl,w,c
  8601  0145C0  6EF6               	movwf	tblptrl,c
  8602  0145C2  0EFE               	movlw	high __npowers_
  8603  0145C4  20F4               	addwfc	prodh,w,c
  8604  0145C6  6EF7               	movwf	tblptrh,c
  8605  0145C8                     	if	1	;There are 3 active tblptr bytes
  8606  0145C8  6AF8               	clrf	tblptru,c
  8607  0145CA  0E00               	movlw	low (__mediumconst shr (0+16))
  8608  0145CC  22F8               	addwfc	tblptru,f,c
  8609  0145CE                     	endif
  8610  0145CE  0009               	tblrd		*+
  8611  0145D0  CFF5 F080          	movff	tablat,___flmul@b
  8612  0145D4  0009               	tblrd		*+
  8613  0145D6  CFF5 F081          	movff	tablat,___flmul@b+1
  8614  0145DA  0009               	tblrd		*+
  8615  0145DC  CFF5 F082          	movff	tablat,___flmul@b+2
  8616  0145E0  000A               	tblrd		*-
  8617  0145E2  CFF5 F083          	movff	tablat,___flmul@b+3
  8618  0145E6  0E00               	movlw	0
  8619  0145E8  0100               	movlb	0	; () banked
  8620  0145EA  6F84               	movwf	___flmul@a& (0+255),b
  8621  0145EC  0E00               	movlw	0
  8622  0145EE  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8623  0145F0  0E00               	movlw	0
  8624  0145F2  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8625  0145F4  0E3F               	movlw	63
  8626  0145F6  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8627  0145F8  EC8A  F09B         	call	___flmul	;wreg free
  8628  0145FC  C080  F099         	movff	?___flmul,?_fround
  8629  014600  C081  F09A         	movff	?___flmul+1,?_fround+1
  8630  014604  C082  F09B         	movff	?___flmul+2,?_fround+2
  8631  014608  C083  F09C         	movff	?___flmul+3,?_fround+3
  8632  01460C  0012               	return	
  8633  01460E                     __end_of_fround:
  8634                           	opt stack 0
  8635                           tblptru	equ	0xFF8
  8636                           tblptrh	equ	0xFF7
  8637                           tblptrl	equ	0xFF6
  8638                           tablat	equ	0xFF5
  8639                           prodh	equ	0xFF4
  8640                           prodl	equ	0xFF3
  8641                           intcon	equ	0xFF2
  8642                           postinc0	equ	0xFEE
  8643                           wreg	equ	0xFE8
  8644                           indf2	equ	0xFDF
  8645                           postinc2	equ	0xFDE
  8646                           fsr2h	equ	0xFDA
  8647                           fsr2l	equ	0xFD9
  8648                           status	equ	0xFD8
  8649                           
  8650 ;; *************** function ___flmul *****************
  8651 ;; Defined at:
  8652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  b               4   32[BANK0 ] unsigned char 
  8655 ;;  a               4   36[BANK0 ] unsigned char 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  prod            4   51[BANK0 ] struct .
  8658 ;;  grs             4   46[BANK0 ] unsigned long 
  8659 ;;  temp            2   55[BANK0 ] struct .
  8660 ;;  bexp            1   50[BANK0 ] unsigned char 
  8661 ;;  aexp            1   45[BANK0 ] unsigned char 
  8662 ;;  sign            1   44[BANK0 ] unsigned char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  4   32[BANK0 ] unsigned char 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0, prodl, prodh
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8672 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;Total ram usage:       25 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    3
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_main
  8683 ;;		_fround
  8684 ;;		_scale
  8685 ;;		_sprintf
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text12
  8690  013714                     __ptext12:
  8691                           	opt stack 0
  8692  013714                     ___flmul:
  8693                           	opt stack 27
  8694                           
  8695                           ;incstack = 0
  8696  013714  0100               	movlb	0	; () banked
  8697  013716  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8698  013718  0B80               	andlw	128
  8699  01371A  0100               	movlb	0	; () banked
  8700  01371C  6F8C               	movwf	___flmul@sign& (0+255),b
  8701  01371E  0100               	movlb	0	; () banked
  8702  013720  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8703  013722  2583               	addwf	(___flmul@b+3)& (0+255),w,b
  8704  013724  0100               	movlb	0	; () banked
  8705  013726  6F92               	movwf	___flmul@bexp& (0+255),b
  8706                           
  8707                           ; BSR set to: 0
  8708  013728  0100               	movlb	0	; () banked
  8709  01372A  AF82               	btfss	(___flmul@b+2)& (0+255),7,b
  8710  01372C  D002               	goto	l7602
  8711                           
  8712                           ; BSR set to: 0
  8713  01372E  0100               	movlb	0	; () banked
  8714  013730  8192               	bsf	___flmul@bexp& (0+255),0,b
  8715  013732                     l7602:
  8716                           
  8717                           ; BSR set to: 0
  8718  013732  0100               	movlb	0	; () banked
  8719  013734  5192               	movf	___flmul@bexp& (0+255),w,b
  8720  013736  0100               	movlb	0	; () banked
  8721  013738  B4D8               	btfsc	status,2,c
  8722  01373A  D010               	goto	l7610
  8723                           
  8724                           ; BSR set to: 0
  8725  01373C  0100               	movlb	0	; () banked
  8726  01373E  2992               	incf	___flmul@bexp& (0+255),w,b
  8727  013740  A4D8               	btfss	status,2,c
  8728  013742  D009               	goto	l7608
  8729                           
  8730                           ; BSR set to: 0
  8731  013744  0E00               	movlw	0
  8732  013746  0100               	movlb	0	; () banked
  8733  013748  6F80               	movwf	___flmul@b& (0+255),b
  8734  01374A  0E00               	movlw	0
  8735  01374C  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8736  01374E  0E00               	movlw	0
  8737  013750  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8738  013752  0E00               	movlw	0
  8739  013754  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8740  013756                     l7608:
  8741                           
  8742                           ; BSR set to: 0
  8743  013756  0100               	movlb	0	; () banked
  8744  013758  8F82               	bsf	(___flmul@b+2)& (0+255),7,b
  8745  01375A  D009               	goto	l7612
  8746  01375C                     l7610:
  8747                           
  8748                           ; BSR set to: 0
  8749  01375C  0E00               	movlw	0
  8750  01375E  0100               	movlb	0	; () banked
  8751  013760  6F80               	movwf	___flmul@b& (0+255),b
  8752  013762  0E00               	movlw	0
  8753  013764  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8754  013766  0E00               	movlw	0
  8755  013768  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8756  01376A  0E00               	movlw	0
  8757  01376C  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8758  01376E                     l7612:
  8759                           
  8760                           ; BSR set to: 0
  8761  01376E  0100               	movlb	0	; () banked
  8762  013770  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8763  013772  0B80               	andlw	128
  8764  013774  0100               	movlb	0	; () banked
  8765  013776  1B8C               	xorwf	___flmul@sign& (0+255),f,b
  8766                           
  8767                           ; BSR set to: 0
  8768  013778  0100               	movlb	0	; () banked
  8769  01377A  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8770  01377C  2587               	addwf	(___flmul@a+3)& (0+255),w,b
  8771  01377E  0100               	movlb	0	; () banked
  8772  013780  6F8D               	movwf	___flmul@aexp& (0+255),b
  8773                           
  8774                           ; BSR set to: 0
  8775  013782  0100               	movlb	0	; () banked
  8776  013784  AF86               	btfss	(___flmul@a+2)& (0+255),7,b
  8777  013786  D002               	goto	l7620
  8778                           
  8779                           ; BSR set to: 0
  8780  013788  0100               	movlb	0	; () banked
  8781  01378A  818D               	bsf	___flmul@aexp& (0+255),0,b
  8782  01378C                     l7620:
  8783                           
  8784                           ; BSR set to: 0
  8785  01378C  0100               	movlb	0	; () banked
  8786  01378E  518D               	movf	___flmul@aexp& (0+255),w,b
  8787  013790  0100               	movlb	0	; () banked
  8788  013792  B4D8               	btfsc	status,2,c
  8789  013794  D010               	goto	l7628
  8790                           
  8791                           ; BSR set to: 0
  8792  013796  0100               	movlb	0	; () banked
  8793  013798  298D               	incf	___flmul@aexp& (0+255),w,b
  8794  01379A  A4D8               	btfss	status,2,c
  8795  01379C  D009               	goto	l7626
  8796                           
  8797                           ; BSR set to: 0
  8798  01379E  0E00               	movlw	0
  8799  0137A0  0100               	movlb	0	; () banked
  8800  0137A2  6F84               	movwf	___flmul@a& (0+255),b
  8801  0137A4  0E00               	movlw	0
  8802  0137A6  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8803  0137A8  0E00               	movlw	0
  8804  0137AA  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8805  0137AC  0E00               	movlw	0
  8806  0137AE  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8807  0137B0                     l7626:
  8808                           
  8809                           ; BSR set to: 0
  8810  0137B0  0100               	movlb	0	; () banked
  8811  0137B2  8F86               	bsf	(___flmul@a+2)& (0+255),7,b
  8812  0137B4  D009               	goto	l1558
  8813  0137B6                     l7628:
  8814                           
  8815                           ; BSR set to: 0
  8816  0137B6  0E00               	movlw	0
  8817  0137B8  0100               	movlb	0	; () banked
  8818  0137BA  6F84               	movwf	___flmul@a& (0+255),b
  8819  0137BC  0E00               	movlw	0
  8820  0137BE  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8821  0137C0  0E00               	movlw	0
  8822  0137C2  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8823  0137C4  0E00               	movlw	0
  8824  0137C6  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8825  0137C8                     l1558:
  8826                           
  8827                           ; BSR set to: 0
  8828  0137C8  0100               	movlb	0	; () banked
  8829  0137CA  518D               	movf	___flmul@aexp& (0+255),w,b
  8830  0137CC  0100               	movlb	0	; () banked
  8831  0137CE  B4D8               	btfsc	status,2,c
  8832  0137D0  D005               	goto	l7632
  8833                           
  8834                           ; BSR set to: 0
  8835  0137D2  0100               	movlb	0	; () banked
  8836  0137D4  5192               	movf	___flmul@bexp& (0+255),w,b
  8837  0137D6  0100               	movlb	0	; () banked
  8838  0137D8  A4D8               	btfss	status,2,c
  8839  0137DA  D00A               	goto	l7636
  8840  0137DC                     l7632:
  8841                           
  8842                           ; BSR set to: 0
  8843  0137DC  0E00               	movlw	0
  8844  0137DE  0100               	movlb	0	; () banked
  8845  0137E0  6F80               	movwf	?___flmul& (0+255),b
  8846  0137E2  0E00               	movlw	0
  8847  0137E4  6F81               	movwf	(?___flmul+1)& (0+255),b
  8848  0137E6  0E00               	movlw	0
  8849  0137E8  6F82               	movwf	(?___flmul+2)& (0+255),b
  8850  0137EA  0E00               	movlw	0
  8851  0137EC  6F83               	movwf	(?___flmul+3)& (0+255),b
  8852                           
  8853                           ; BSR set to: 0
  8854  0137EE  0012               	return	
  8855  0137F0                     l7636:
  8856                           
  8857                           ; BSR set to: 0
  8858  0137F0  0100               	movlb	0	; () banked
  8859  0137F2  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8860  0137F4  0100               	movlb	0	; () banked
  8861  0137F6  0380               	mulwf	___flmul@b& (0+255),b
  8862  0137F8  CFF3 F097          	movff	prodl,___flmul@temp
  8863  0137FC  CFF4 F098          	movff	prodh,___flmul@temp+1
  8864                           
  8865                           ; BSR set to: 0
  8866  013800  0100               	movlb	0	; () banked
  8867  013802  5197               	movf	___flmul@temp& (0+255),w,b
  8868  013804  0100               	movlb	0	; () banked
  8869  013806  6F8E               	movwf	___flmul@grs& (0+255),b
  8870  013808  6B8F               	clrf	(___flmul@grs+1)& (0+255),b
  8871  01380A  6B90               	clrf	(___flmul@grs+2)& (0+255),b
  8872  01380C  6B91               	clrf	(___flmul@grs+3)& (0+255),b
  8873                           
  8874                           ; BSR set to: 0
  8875  01380E  0100               	movlb	0	; () banked
  8876  013810  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8877  013812  0100               	movlb	0	; () banked
  8878  013814  6F93               	movwf	___flmul@prod& (0+255),b
  8879  013816  6B94               	clrf	(___flmul@prod+1)& (0+255),b
  8880  013818  6B95               	clrf	(___flmul@prod+2)& (0+255),b
  8881  01381A  6B96               	clrf	(___flmul@prod+3)& (0+255),b
  8882  01381C  0100               	movlb	0	; () banked
  8883  01381E  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8884  013820  0100               	movlb	0	; () banked
  8885  013822  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8886  013824  CFF3 F097          	movff	prodl,___flmul@temp
  8887  013828  CFF4 F098          	movff	prodh,___flmul@temp+1
  8888                           
  8889                           ; BSR set to: 0
  8890  01382C  0100               	movlb	0	; () banked
  8891  01382E  5197               	movf	___flmul@temp& (0+255),w,b
  8892  013830  0100               	movlb	0	; () banked
  8893  013832  278E               	addwf	___flmul@grs& (0+255),f,b
  8894  013834  0E00               	movlw	0
  8895  013836  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8896  013838  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8897  01383A  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8898                           
  8899                           ; BSR set to: 0
  8900  01383C  0100               	movlb	0	; () banked
  8901  01383E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8902  013840  0100               	movlb	0	; () banked
  8903  013842  2793               	addwf	___flmul@prod& (0+255),f,b
  8904  013844  0E00               	movlw	0
  8905  013846  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8906  013848  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8907  01384A  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8908  01384C  0100               	movlb	0	; () banked
  8909  01384E  5184               	movf	___flmul@a& (0+255),w,b
  8910  013850  0100               	movlb	0	; () banked
  8911  013852  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8912  013854  CFF3 F097          	movff	prodl,___flmul@temp
  8913  013858  CFF4 F098          	movff	prodh,___flmul@temp+1
  8914                           
  8915                           ; BSR set to: 0
  8916  01385C  0100               	movlb	0	; () banked
  8917  01385E  5197               	movf	___flmul@temp& (0+255),w,b
  8918  013860  0100               	movlb	0	; () banked
  8919  013862  278E               	addwf	___flmul@grs& (0+255),f,b
  8920  013864  0E00               	movlw	0
  8921  013866  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8922  013868  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8923  01386A  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8924                           
  8925                           ; BSR set to: 0
  8926  01386C  0100               	movlb	0	; () banked
  8927  01386E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8928  013870  0100               	movlb	0	; () banked
  8929  013872  2793               	addwf	___flmul@prod& (0+255),f,b
  8930  013874  0E00               	movlw	0
  8931  013876  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8932  013878  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8933  01387A  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8934                           
  8935                           ; BSR set to: 0
  8936  01387C  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8937  013880  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8938  013884  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8939  013888  0100               	movlb	0	; () banked
  8940  01388A  6B8E               	clrf	___flmul@grs& (0+255),b
  8941                           
  8942                           ; BSR set to: 0
  8943  01388C  0100               	movlb	0	; () banked
  8944  01388E  5184               	movf	___flmul@a& (0+255),w,b
  8945  013890  0100               	movlb	0	; () banked
  8946  013892  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8947  013894  CFF3 F097          	movff	prodl,___flmul@temp
  8948  013898  CFF4 F098          	movff	prodh,___flmul@temp+1
  8949                           
  8950                           ; BSR set to: 0
  8951  01389C  0100               	movlb	0	; () banked
  8952  01389E  5197               	movf	___flmul@temp& (0+255),w,b
  8953  0138A0  0100               	movlb	0	; () banked
  8954  0138A2  278E               	addwf	___flmul@grs& (0+255),f,b
  8955  0138A4  0100               	movlb	0	; () banked
  8956  0138A6  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8957  0138A8  0100               	movlb	0	; () banked
  8958  0138AA  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8959  0138AC  0E00               	movlw	0
  8960  0138AE  0100               	movlb	0	; () banked
  8961  0138B0  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8962  0138B2  0E00               	movlw	0
  8963  0138B4  0100               	movlb	0	; () banked
  8964  0138B6  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8965                           
  8966                           ; BSR set to: 0
  8967  0138B8  0100               	movlb	0	; () banked
  8968  0138BA  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8969  0138BC  0100               	movlb	0	; () banked
  8970  0138BE  0380               	mulwf	___flmul@b& (0+255),b
  8971  0138C0  CFF3 F097          	movff	prodl,___flmul@temp
  8972  0138C4  CFF4 F098          	movff	prodh,___flmul@temp+1
  8973                           
  8974                           ; BSR set to: 0
  8975  0138C8  0100               	movlb	0	; () banked
  8976  0138CA  5197               	movf	___flmul@temp& (0+255),w,b
  8977  0138CC  0100               	movlb	0	; () banked
  8978  0138CE  278E               	addwf	___flmul@grs& (0+255),f,b
  8979  0138D0  0100               	movlb	0	; () banked
  8980  0138D2  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8981  0138D4  0100               	movlb	0	; () banked
  8982  0138D6  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8983  0138D8  0E00               	movlw	0
  8984  0138DA  0100               	movlb	0	; () banked
  8985  0138DC  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8986  0138DE  0E00               	movlw	0
  8987  0138E0  0100               	movlb	0	; () banked
  8988  0138E2  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8989                           
  8990                           ; BSR set to: 0
  8991  0138E4  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8992  0138E8  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8993  0138EC  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8994  0138F0  0100               	movlb	0	; () banked
  8995  0138F2  6B8E               	clrf	___flmul@grs& (0+255),b
  8996  0138F4  0100               	movlb	0	; () banked
  8997  0138F6  5184               	movf	___flmul@a& (0+255),w,b
  8998  0138F8  0100               	movlb	0	; () banked
  8999  0138FA  0380               	mulwf	___flmul@b& (0+255),b
  9000  0138FC  CFF3 F097          	movff	prodl,___flmul@temp
  9001  013900  CFF4 F098          	movff	prodh,___flmul@temp+1
  9002                           
  9003                           ; BSR set to: 0
  9004  013904  0100               	movlb	0	; () banked
  9005  013906  5197               	movf	___flmul@temp& (0+255),w,b
  9006  013908  0100               	movlb	0	; () banked
  9007  01390A  278E               	addwf	___flmul@grs& (0+255),f,b
  9008  01390C  0100               	movlb	0	; () banked
  9009  01390E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9010  013910  0100               	movlb	0	; () banked
  9011  013912  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9012  013914  0E00               	movlw	0
  9013  013916  0100               	movlb	0	; () banked
  9014  013918  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9015  01391A  0E00               	movlw	0
  9016  01391C  0100               	movlb	0	; () banked
  9017  01391E  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9018                           
  9019                           ; BSR set to: 0
  9020  013920  0100               	movlb	0	; () banked
  9021  013922  5186               	movf	(___flmul@a+2)& (0+255),w,b
  9022  013924  0100               	movlb	0	; () banked
  9023  013926  0381               	mulwf	(___flmul@b+1)& (0+255),b
  9024  013928  CFF3 F097          	movff	prodl,___flmul@temp
  9025  01392C  CFF4 F098          	movff	prodh,___flmul@temp+1
  9026  013930  0100               	movlb	0	; () banked
  9027  013932  5197               	movf	___flmul@temp& (0+255),w,b
  9028  013934  0100               	movlb	0	; () banked
  9029  013936  2793               	addwf	___flmul@prod& (0+255),f,b
  9030  013938  0100               	movlb	0	; () banked
  9031  01393A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9032  01393C  0100               	movlb	0	; () banked
  9033  01393E  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9034  013940  0E00               	movlw	0
  9035  013942  0100               	movlb	0	; () banked
  9036  013944  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9037  013946  0E00               	movlw	0
  9038  013948  0100               	movlb	0	; () banked
  9039  01394A  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9040                           
  9041                           ; BSR set to: 0
  9042  01394C  0100               	movlb	0	; () banked
  9043  01394E  5185               	movf	(___flmul@a+1)& (0+255),w,b
  9044  013950  0100               	movlb	0	; () banked
  9045  013952  0382               	mulwf	(___flmul@b+2)& (0+255),b
  9046  013954  CFF3 F097          	movff	prodl,___flmul@temp
  9047  013958  CFF4 F098          	movff	prodh,___flmul@temp+1
  9048                           
  9049                           ; BSR set to: 0
  9050  01395C  0100               	movlb	0	; () banked
  9051  01395E  5197               	movf	___flmul@temp& (0+255),w,b
  9052  013960  0100               	movlb	0	; () banked
  9053  013962  2793               	addwf	___flmul@prod& (0+255),f,b
  9054  013964  0100               	movlb	0	; () banked
  9055  013966  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9056  013968  0100               	movlb	0	; () banked
  9057  01396A  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9058  01396C  0E00               	movlw	0
  9059  01396E  0100               	movlb	0	; () banked
  9060  013970  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9061  013972  0E00               	movlw	0
  9062  013974  0100               	movlb	0	; () banked
  9063  013976  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9064  013978  0100               	movlb	0	; () banked
  9065  01397A  5186               	movf	(___flmul@a+2)& (0+255),w,b
  9066  01397C  0100               	movlb	0	; () banked
  9067  01397E  0382               	mulwf	(___flmul@b+2)& (0+255),b
  9068  013980  CFF3 F097          	movff	prodl,___flmul@temp
  9069  013984  CFF4 F098          	movff	prodh,___flmul@temp+1
  9070                           
  9071                           ; BSR set to: 0
  9072  013988  0100               	movlb	0	; () banked
  9073  01398A  5197               	movf	___flmul@temp& (0+255),w,b
  9074  01398C  0100               	movlb	0	; () banked
  9075  01398E  6F88               	movwf	??___flmul& (0+255),b
  9076  013990  0100               	movlb	0	; () banked
  9077  013992  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9078  013994  0100               	movlb	0	; () banked
  9079  013996  6F89               	movwf	(??___flmul+1)& (0+255),b
  9080  013998  0100               	movlb	0	; () banked
  9081  01399A  6B8A               	clrf	(??___flmul+2)& (0+255),b
  9082  01399C  0100               	movlb	0	; () banked
  9083  01399E  6B8B               	clrf	(??___flmul+3)& (0+255),b
  9084  0139A0  C08A  F08B         	movff	??___flmul+2,??___flmul+3
  9085  0139A4  C089  F08A         	movff	??___flmul+1,??___flmul+2
  9086  0139A8  C088  F089         	movff	??___flmul,??___flmul+1
  9087  0139AC  0100               	movlb	0	; () banked
  9088  0139AE  6B88               	clrf	??___flmul& (0+255),b
  9089  0139B0  0100               	movlb	0	; () banked
  9090  0139B2  5188               	movf	??___flmul& (0+255),w,b
  9091  0139B4  0100               	movlb	0	; () banked
  9092  0139B6  2793               	addwf	___flmul@prod& (0+255),f,b
  9093  0139B8  0100               	movlb	0	; () banked
  9094  0139BA  5189               	movf	(??___flmul+1)& (0+255),w,b
  9095  0139BC  0100               	movlb	0	; () banked
  9096  0139BE  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9097  0139C0  0100               	movlb	0	; () banked
  9098  0139C2  518A               	movf	(??___flmul+2)& (0+255),w,b
  9099  0139C4  0100               	movlb	0	; () banked
  9100  0139C6  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9101  0139C8  0100               	movlb	0	; () banked
  9102  0139CA  518B               	movf	(??___flmul+3)& (0+255),w,b
  9103  0139CC  0100               	movlb	0	; () banked
  9104  0139CE  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9105                           
  9106                           ; BSR set to: 0
  9107  0139D0  C08E  F088         	movff	___flmul@grs,??___flmul
  9108  0139D4  C08F  F089         	movff	___flmul@grs+1,??___flmul+1
  9109  0139D8  C090  F08A         	movff	___flmul@grs+2,??___flmul+2
  9110  0139DC  C091  F08B         	movff	___flmul@grs+3,??___flmul+3
  9111  0139E0  0E19               	movlw	25
  9112  0139E2  D006               	goto	u10160
  9113  0139E4                     u10165:
  9114  0139E4  0100               	movlb	0	; () banked
  9115  0139E6  90D8               	bcf	status,0,c
  9116  0139E8  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9117  0139EA  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9118  0139EC  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9119  0139EE  3388               	rrcf	??___flmul& (0+255),f,b
  9120  0139F0                     u10160:
  9121  0139F0  2EE8               	decfsz	wreg,f,c
  9122  0139F2  D7F8               	goto	u10165
  9123  0139F4  0100               	movlb	0	; () banked
  9124  0139F6  5188               	movf	??___flmul& (0+255),w,b
  9125  0139F8  0100               	movlb	0	; () banked
  9126  0139FA  2793               	addwf	___flmul@prod& (0+255),f,b
  9127  0139FC  0100               	movlb	0	; () banked
  9128  0139FE  5189               	movf	(??___flmul+1)& (0+255),w,b
  9129  013A00  0100               	movlb	0	; () banked
  9130  013A02  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9131  013A04  0100               	movlb	0	; () banked
  9132  013A06  518A               	movf	(??___flmul+2)& (0+255),w,b
  9133  013A08  0100               	movlb	0	; () banked
  9134  013A0A  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9135  013A0C  0100               	movlb	0	; () banked
  9136  013A0E  518B               	movf	(??___flmul+3)& (0+255),w,b
  9137  013A10  0100               	movlb	0	; () banked
  9138  013A12  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9139                           
  9140                           ; BSR set to: 0
  9141  013A14  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  9142  013A18  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  9143  013A1C  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  9144  013A20  0100               	movlb	0	; () banked
  9145  013A22  6B8E               	clrf	___flmul@grs& (0+255),b
  9146                           
  9147                           ; BSR set to: 0
  9148  013A24  0100               	movlb	0	; () banked
  9149  013A26  518D               	movf	___flmul@aexp& (0+255),w,b
  9150  013A28  C092  F088         	movff	___flmul@bexp,??___flmul
  9151  013A2C  0100               	movlb	0	; () banked
  9152  013A2E  6B89               	clrf	(??___flmul+1)& (0+255),b
  9153  013A30  0100               	movlb	0	; () banked
  9154  013A32  2788               	addwf	??___flmul& (0+255),f,b
  9155  013A34  0E00               	movlw	0
  9156  013A36  2389               	addwfc	(??___flmul+1)& (0+255),f,b
  9157  013A38  0E82               	movlw	130
  9158  013A3A  0100               	movlb	0	; () banked
  9159  013A3C  2588               	addwf	??___flmul& (0+255),w,b
  9160  013A3E  0100               	movlb	0	; () banked
  9161  013A40  6F97               	movwf	___flmul@temp& (0+255),b
  9162  013A42  0EFF               	movlw	255
  9163  013A44  0100               	movlb	0	; () banked
  9164  013A46  2189               	addwfc	(??___flmul+1)& (0+255),w,b
  9165  013A48  0100               	movlb	0	; () banked
  9166  013A4A  6F98               	movwf	(___flmul@temp+1)& (0+255),b
  9167  013A4C  D015               	goto	l7684
  9168  013A4E                     l7678:
  9169                           
  9170                           ; BSR set to: 0
  9171  013A4E  0100               	movlb	0	; () banked
  9172  013A50  90D8               	bcf	status,0,c
  9173  013A52  3793               	rlcf	___flmul@prod& (0+255),f,b
  9174  013A54  3794               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9175  013A56  3795               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9176  013A58  3796               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9177                           
  9178                           ; BSR set to: 0
  9179  013A5A  0100               	movlb	0	; () banked
  9180  013A5C  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9181  013A5E  D002               	goto	l1565
  9182                           
  9183                           ; BSR set to: 0
  9184  013A60  0100               	movlb	0	; () banked
  9185  013A62  8193               	bsf	___flmul@prod& (0+255),0,b
  9186  013A64                     l1565:
  9187                           
  9188                           ; BSR set to: 0
  9189  013A64  0100               	movlb	0	; () banked
  9190  013A66  90D8               	bcf	status,0,c
  9191  013A68  378E               	rlcf	___flmul@grs& (0+255),f,b
  9192  013A6A  378F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9193  013A6C  3790               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9194  013A6E  3791               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9195  013A70  0100               	movlb	0	; () banked
  9196  013A72  0797               	decf	___flmul@temp& (0+255),f,b
  9197  013A74  A0D8               	btfss	status,0,c
  9198  013A76  0798               	decf	(___flmul@temp+1)& (0+255),f,b
  9199  013A78                     l7684:
  9200                           
  9201                           ; BSR set to: 0
  9202  013A78  0100               	movlb	0	; () banked
  9203  013A7A  AF95               	btfss	(___flmul@prod+2)& (0+255),7,b
  9204  013A7C  D7E8               	goto	l7678
  9205                           
  9206                           ; BSR set to: 0
  9207                           
  9208                           ; BSR set to: 0
  9209  013A7E  0E00               	movlw	0
  9210  013A80  0100               	movlb	0	; () banked
  9211  013A82  6F8D               	movwf	___flmul@aexp& (0+255),b
  9212                           
  9213                           ; BSR set to: 0
  9214  013A84  0100               	movlb	0	; () banked
  9215  013A86  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9216  013A88  D024               	goto	l1567
  9217                           
  9218                           ; BSR set to: 0
  9219  013A8A  0EFF               	movlw	255
  9220  013A8C  0100               	movlb	0	; () banked
  9221  013A8E  158E               	andwf	___flmul@grs& (0+255),w,b
  9222  013A90  0100               	movlb	0	; () banked
  9223  013A92  6F88               	movwf	??___flmul& (0+255),b
  9224  013A94  0EFF               	movlw	255
  9225  013A96  0100               	movlb	0	; () banked
  9226  013A98  158F               	andwf	(___flmul@grs+1)& (0+255),w,b
  9227  013A9A  0100               	movlb	0	; () banked
  9228  013A9C  6F89               	movwf	(??___flmul+1)& (0+255),b
  9229  013A9E  0EFF               	movlw	255
  9230  013AA0  0100               	movlb	0	; () banked
  9231  013AA2  1590               	andwf	(___flmul@grs+2)& (0+255),w,b
  9232  013AA4  0100               	movlb	0	; () banked
  9233  013AA6  6F8A               	movwf	(??___flmul+2)& (0+255),b
  9234  013AA8  0E7F               	movlw	127
  9235  013AAA  0100               	movlb	0	; () banked
  9236  013AAC  1591               	andwf	(___flmul@grs+3)& (0+255),w,b
  9237  013AAE  0100               	movlb	0	; () banked
  9238  013AB0  6F8B               	movwf	(??___flmul+3)& (0+255),b
  9239  013AB2  0100               	movlb	0	; () banked
  9240  013AB4  5188               	movf	??___flmul& (0+255),w,b
  9241  013AB6  0100               	movlb	0	; () banked
  9242  013AB8  1189               	iorwf	(??___flmul+1)& (0+255),w,b
  9243  013ABA  0100               	movlb	0	; () banked
  9244  013ABC  118A               	iorwf	(??___flmul+2)& (0+255),w,b
  9245  013ABE  0100               	movlb	0	; () banked
  9246  013AC0  118B               	iorwf	(??___flmul+3)& (0+255),w,b
  9247  013AC2  A4D8               	btfss	status,2,c
  9248  013AC4  D003               	goto	l7694
  9249                           
  9250                           ; BSR set to: 0
  9251                           
  9252                           ; BSR set to: 0
  9253  013AC6  0100               	movlb	0	; () banked
  9254  013AC8  A193               	btfss	___flmul@prod& (0+255),0,b
  9255  013ACA  D003               	goto	l1567
  9256  013ACC                     l7694:
  9257                           
  9258                           ; BSR set to: 0
  9259  013ACC  0E01               	movlw	1
  9260  013ACE  0100               	movlb	0	; () banked
  9261  013AD0  6F8D               	movwf	___flmul@aexp& (0+255),b
  9262  013AD2                     l1567:
  9263                           
  9264                           ; BSR set to: 0
  9265  013AD2  0100               	movlb	0	; () banked
  9266  013AD4  518D               	movf	___flmul@aexp& (0+255),w,b
  9267  013AD6  0100               	movlb	0	; () banked
  9268  013AD8  B4D8               	btfsc	status,2,c
  9269  013ADA  D023               	goto	l7704
  9270                           
  9271                           ; BSR set to: 0
  9272  013ADC  0E01               	movlw	1
  9273  013ADE  0100               	movlb	0	; () banked
  9274  013AE0  2793               	addwf	___flmul@prod& (0+255),f,b
  9275  013AE2  0E00               	movlw	0
  9276  013AE4  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9277  013AE6  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9278  013AE8  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9279                           
  9280                           ; BSR set to: 0
  9281  013AEA  0100               	movlb	0	; () banked
  9282  013AEC  A196               	btfss	(___flmul@prod+3)& (0+255),0,b
  9283  013AEE  D019               	goto	l7704
  9284                           
  9285                           ; BSR set to: 0
  9286  013AF0  C093  F088         	movff	___flmul@prod,??___flmul
  9287  013AF4  C094  F089         	movff	___flmul@prod+1,??___flmul+1
  9288  013AF8  C095  F08A         	movff	___flmul@prod+2,??___flmul+2
  9289  013AFC  C096  F08B         	movff	___flmul@prod+3,??___flmul+3
  9290  013B00  0100               	movlb	0	; () banked
  9291  013B02  358B               	rlcf	(??___flmul+3)& (0+255),w,b
  9292  013B04  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9293  013B06  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9294  013B08  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9295  013B0A  3388               	rrcf	??___flmul& (0+255),f,b
  9296  013B0C  C088  F093         	movff	??___flmul,___flmul@prod
  9297  013B10  C089  F094         	movff	??___flmul+1,___flmul@prod+1
  9298  013B14  C08A  F095         	movff	??___flmul+2,___flmul@prod+2
  9299  013B18  C08B  F096         	movff	??___flmul+3,___flmul@prod+3
  9300                           
  9301                           ; BSR set to: 0
  9302  013B1C  0100               	movlb	0	; () banked
  9303  013B1E  4B97               	infsnz	___flmul@temp& (0+255),f,b
  9304  013B20  2B98               	incf	(___flmul@temp+1)& (0+255),f,b
  9305  013B22                     l7704:
  9306                           
  9307                           ; BSR set to: 0
  9308  013B22  0100               	movlb	0	; () banked
  9309  013B24  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9310  013B26  D010               	goto	l7708
  9311  013B28  0100               	movlb	0	; () banked
  9312  013B2A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9313  013B2C  E104               	bnz	u10240
  9314  013B2E  0100               	movlb	0	; () banked
  9315  013B30  2997               	incf	___flmul@temp& (0+255),w,b
  9316  013B32  A0D8               	btfss	status,0,c
  9317  013B34  D009               	goto	l7708
  9318  013B36                     u10240:
  9319                           
  9320                           ; BSR set to: 0
  9321  013B36  0E00               	movlw	0
  9322  013B38  0100               	movlb	0	; () banked
  9323  013B3A  6F93               	movwf	___flmul@prod& (0+255),b
  9324  013B3C  0E00               	movlw	0
  9325  013B3E  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9326  013B40  0E80               	movlw	128
  9327  013B42  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9328  013B44  0E7F               	movlw	127
  9329  013B46  D02B               	goto	L8
  9330  013B48                     l7708:
  9331                           
  9332                           ; BSR set to: 0
  9333  013B48  0100               	movlb	0	; () banked
  9334  013B4A  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9335  013B4C  D007               	goto	l7710
  9336  013B4E  0100               	movlb	0	; () banked
  9337  013B50  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9338  013B52  E111               	bnz	l1575
  9339  013B54  0100               	movlb	0	; () banked
  9340  013B56  0597               	decf	___flmul@temp& (0+255),w,b
  9341  013B58  B0D8               	btfsc	status,0,c
  9342  013B5A  D00D               	goto	l1575
  9343  013B5C                     l7710:
  9344                           
  9345                           ; BSR set to: 0
  9346  013B5C  0E00               	movlw	0
  9347  013B5E  0100               	movlb	0	; () banked
  9348  013B60  6F93               	movwf	___flmul@prod& (0+255),b
  9349  013B62  0E00               	movlw	0
  9350  013B64  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9351  013B66  0E00               	movlw	0
  9352  013B68  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9353  013B6A  0E00               	movlw	0
  9354  013B6C  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9355  013B6E  0E00               	movlw	0
  9356  013B70  0100               	movlb	0	; () banked
  9357  013B72  6F8C               	movwf	___flmul@sign& (0+255),b
  9358  013B74  D015               	goto	l7720
  9359  013B76                     l1575:
  9360                           
  9361                           ; BSR set to: 0
  9362  013B76  C097  F092         	movff	___flmul@temp,___flmul@bexp
  9363                           
  9364                           ; BSR set to: 0
  9365  013B7A  0EFF               	movlw	255
  9366  013B7C  0100               	movlb	0	; () banked
  9367  013B7E  1793               	andwf	___flmul@prod& (0+255),f,b
  9368  013B80  0EFF               	movlw	255
  9369  013B82  1794               	andwf	(___flmul@prod+1)& (0+255),f,b
  9370  013B84  0E7F               	movlw	127
  9371  013B86  1795               	andwf	(___flmul@prod+2)& (0+255),f,b
  9372  013B88  0E00               	movlw	0
  9373  013B8A  1796               	andwf	(___flmul@prod+3)& (0+255),f,b
  9374                           
  9375                           ; BSR set to: 0
  9376  013B8C  0100               	movlb	0	; () banked
  9377  013B8E  A192               	btfss	___flmul@bexp& (0+255),0,b
  9378  013B90  D002               	goto	l7718
  9379                           
  9380                           ; BSR set to: 0
  9381  013B92  0100               	movlb	0	; () banked
  9382  013B94  8F95               	bsf	(___flmul@prod+2)& (0+255),7,b
  9383  013B96                     l7718:
  9384                           
  9385                           ; BSR set to: 0
  9386  013B96  0100               	movlb	0	; () banked
  9387  013B98  90D8               	bcf	status,0,c
  9388  013B9A  3192               	rrcf	___flmul@bexp& (0+255),w,b
  9389  013B9C  0100               	movlb	0	; () banked
  9390  013B9E                     L8:
  9391  013B9E  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9392  013BA0                     l7720:
  9393                           
  9394                           ; BSR set to: 0
  9395  013BA0  0100               	movlb	0	; () banked
  9396  013BA2  518C               	movf	___flmul@sign& (0+255),w,b
  9397  013BA4  0100               	movlb	0	; () banked
  9398  013BA6  1396               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9399                           
  9400                           ; BSR set to: 0
  9401  013BA8  C093  F080         	movff	___flmul@prod,?___flmul
  9402  013BAC  C094  F081         	movff	___flmul@prod+1,?___flmul+1
  9403  013BB0  C095  F082         	movff	___flmul@prod+2,?___flmul+2
  9404  013BB4  C096  F083         	movff	___flmul@prod+3,?___flmul+3
  9405  013BB8  0012               	return	
  9406  013BBA                     __end_of___flmul:
  9407                           	opt stack 0
  9408                           tblptru	equ	0xFF8
  9409                           tblptrh	equ	0xFF7
  9410                           tblptrl	equ	0xFF6
  9411                           tablat	equ	0xFF5
  9412                           prodh	equ	0xFF4
  9413                           prodl	equ	0xFF3
  9414                           intcon	equ	0xFF2
  9415                           postinc0	equ	0xFEE
  9416                           wreg	equ	0xFE8
  9417                           indf2	equ	0xFDF
  9418                           postinc2	equ	0xFDE
  9419                           fsr2h	equ	0xFDA
  9420                           fsr2l	equ	0xFD9
  9421                           status	equ	0xFD8
  9422                           
  9423 ;; *************** function ___awmod *****************
  9424 ;; Defined at:
  9425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  dividend        2   18[BANK0 ] int 
  9428 ;;  divisor         2   20[BANK0 ] int 
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;  sign            1   23[BANK0 ] unsigned char 
  9431 ;;  counter         1   22[BANK0 ] unsigned char 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  2   18[BANK0 ] int 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9441 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9442 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;Total ram usage:        6 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    3
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_fround
  9452 ;;		_scale
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text13
  9457  015892                     __ptext13:
  9458                           	opt stack 0
  9459  015892                     ___awmod:
  9460                           	opt stack 24
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;incstack = 0
  9464  015892  0E00               	movlw	0
  9465  015894  0100               	movlb	0	; () banked
  9466  015896  6F77               	movwf	___awmod@sign& (0+255),b
  9467                           
  9468                           ; BSR set to: 0
  9469  015898  0100               	movlb	0	; () banked
  9470  01589A  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9471  01589C  D008               	goto	l7778
  9472                           
  9473                           ; BSR set to: 0
  9474  01589E  0100               	movlb	0	; () banked
  9475  0158A0  6D72               	negf	___awmod@dividend& (0+255),b
  9476  0158A2  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9477  0158A4  B0D8               	btfsc	status,0,c
  9478  0158A6  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9479                           
  9480                           ; BSR set to: 0
  9481  0158A8  0E01               	movlw	1
  9482  0158AA  0100               	movlb	0	; () banked
  9483  0158AC  6F77               	movwf	___awmod@sign& (0+255),b
  9484  0158AE                     l7778:
  9485                           
  9486                           ; BSR set to: 0
  9487  0158AE  0100               	movlb	0	; () banked
  9488  0158B0  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9489  0158B2  D005               	goto	l7782
  9490                           
  9491                           ; BSR set to: 0
  9492  0158B4  0100               	movlb	0	; () banked
  9493  0158B6  6D74               	negf	___awmod@divisor& (0+255),b
  9494  0158B8  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
  9495  0158BA  B0D8               	btfsc	status,0,c
  9496  0158BC  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
  9497  0158BE                     l7782:
  9498                           
  9499                           ; BSR set to: 0
  9500  0158BE  0100               	movlb	0	; () banked
  9501  0158C0  5174               	movf	___awmod@divisor& (0+255),w,b
  9502  0158C2  0100               	movlb	0	; () banked
  9503  0158C4  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9504  0158C6  B4D8               	btfsc	status,2,c
  9505  0158C8  D026               	goto	l7798
  9506                           
  9507                           ; BSR set to: 0
  9508  0158CA  0E01               	movlw	1
  9509  0158CC  0100               	movlb	0	; () banked
  9510  0158CE  6F76               	movwf	___awmod@counter& (0+255),b
  9511  0158D0  D006               	goto	l7788
  9512  0158D2                     l7786:
  9513                           
  9514                           ; BSR set to: 0
  9515  0158D2  0100               	movlb	0	; () banked
  9516  0158D4  90D8               	bcf	status,0,c
  9517  0158D6  3774               	rlcf	___awmod@divisor& (0+255),f,b
  9518  0158D8  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9519  0158DA  0100               	movlb	0	; () banked
  9520  0158DC  2B76               	incf	___awmod@counter& (0+255),f,b
  9521  0158DE                     l7788:
  9522                           
  9523                           ; BSR set to: 0
  9524  0158DE  0100               	movlb	0	; () banked
  9525  0158E0  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9526  0158E2  D7F7               	goto	l7786
  9527  0158E4                     l7790:
  9528                           
  9529                           ; BSR set to: 0
  9530  0158E4  0100               	movlb	0	; () banked
  9531  0158E6  5174               	movf	___awmod@divisor& (0+255),w,b
  9532  0158E8  0100               	movlb	0	; () banked
  9533  0158EA  5D72               	subwf	___awmod@dividend& (0+255),w,b
  9534  0158EC  0100               	movlb	0	; () banked
  9535  0158EE  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9536  0158F0  0100               	movlb	0	; () banked
  9537  0158F2  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9538  0158F4  A0D8               	btfss	status,0,c
  9539  0158F6  D008               	goto	l7794
  9540                           
  9541                           ; BSR set to: 0
  9542  0158F8  0100               	movlb	0	; () banked
  9543  0158FA  5174               	movf	___awmod@divisor& (0+255),w,b
  9544  0158FC  0100               	movlb	0	; () banked
  9545  0158FE  5F72               	subwf	___awmod@dividend& (0+255),f,b
  9546  015900  0100               	movlb	0	; () banked
  9547  015902  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9548  015904  0100               	movlb	0	; () banked
  9549  015906  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9550  015908                     l7794:
  9551                           
  9552                           ; BSR set to: 0
  9553  015908  0100               	movlb	0	; () banked
  9554  01590A  90D8               	bcf	status,0,c
  9555  01590C  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9556  01590E  3374               	rrcf	___awmod@divisor& (0+255),f,b
  9557                           
  9558                           ; BSR set to: 0
  9559  015910  0100               	movlb	0	; () banked
  9560  015912  2F76               	decfsz	___awmod@counter& (0+255),f,b
  9561  015914  D7E7               	goto	l7790
  9562  015916                     l7798:
  9563                           
  9564                           ; BSR set to: 0
  9565  015916  0100               	movlb	0	; () banked
  9566  015918  5177               	movf	___awmod@sign& (0+255),w,b
  9567  01591A  0100               	movlb	0	; () banked
  9568  01591C  B4D8               	btfsc	status,2,c
  9569  01591E  D005               	goto	l7802
  9570                           
  9571                           ; BSR set to: 0
  9572  015920  0100               	movlb	0	; () banked
  9573  015922  6D72               	negf	___awmod@dividend& (0+255),b
  9574  015924  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9575  015926  B0D8               	btfsc	status,0,c
  9576  015928  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9577  01592A                     l7802:
  9578                           
  9579                           ; BSR set to: 0
  9580  01592A  C072  F072         	movff	___awmod@dividend,?___awmod
  9581  01592E  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
  9582  015932  0012               	return	
  9583  015934                     __end_of___awmod:
  9584                           	opt stack 0
  9585                           tblptru	equ	0xFF8
  9586                           tblptrh	equ	0xFF7
  9587                           tblptrl	equ	0xFF6
  9588                           tablat	equ	0xFF5
  9589                           prodh	equ	0xFF4
  9590                           prodl	equ	0xFF3
  9591                           intcon	equ	0xFF2
  9592                           postinc0	equ	0xFEE
  9593                           wreg	equ	0xFE8
  9594                           indf2	equ	0xFDF
  9595                           postinc2	equ	0xFDE
  9596                           fsr2h	equ	0xFDA
  9597                           fsr2l	equ	0xFD9
  9598                           status	equ	0xFD8
  9599                           
  9600 ;; *************** function ___awdiv *****************
  9601 ;; Defined at:
  9602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  dividend        2   24[BANK0 ] int 
  9605 ;;  divisor         2   26[BANK0 ] int 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  quotient        2   30[BANK0 ] int 
  9608 ;;  sign            1   29[BANK0 ] unsigned char 
  9609 ;;  counter         1   28[BANK0 ] unsigned char 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  2   24[BANK0 ] int 
  9612 ;; Registers used:
  9613 ;;		wreg, status,2, status,0
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;Total ram usage:        8 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    3
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_fround
  9630 ;;		_scale
  9631 ;;		_sprintf
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text14
  9636  015510                     __ptext14:
  9637                           	opt stack 0
  9638  015510                     ___awdiv:
  9639                           	opt stack 24
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;incstack = 0
  9643  015510  0E00               	movlw	0
  9644  015512  0100               	movlb	0	; () banked
  9645  015514  6F7D               	movwf	___awdiv@sign& (0+255),b
  9646                           
  9647                           ; BSR set to: 0
  9648  015516  0100               	movlb	0	; () banked
  9649  015518  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9650  01551A  D008               	goto	l7734
  9651                           
  9652                           ; BSR set to: 0
  9653  01551C  0100               	movlb	0	; () banked
  9654  01551E  6D7A               	negf	___awdiv@divisor& (0+255),b
  9655  015520  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9656  015522  B0D8               	btfsc	status,0,c
  9657  015524  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9658                           
  9659                           ; BSR set to: 0
  9660  015526  0E01               	movlw	1
  9661  015528  0100               	movlb	0	; () banked
  9662  01552A  6F7D               	movwf	___awdiv@sign& (0+255),b
  9663  01552C                     l7734:
  9664                           
  9665                           ; BSR set to: 0
  9666  01552C  0100               	movlb	0	; () banked
  9667  01552E  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9668  015530  D008               	goto	l7740
  9669                           
  9670                           ; BSR set to: 0
  9671  015532  0100               	movlb	0	; () banked
  9672  015534  6D78               	negf	___awdiv@dividend& (0+255),b
  9673  015536  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9674  015538  B0D8               	btfsc	status,0,c
  9675  01553A  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9676                           
  9677                           ; BSR set to: 0
  9678  01553C  0E01               	movlw	1
  9679  01553E  0100               	movlb	0	; () banked
  9680  015540  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
  9681  015542                     l7740:
  9682                           
  9683                           ; BSR set to: 0
  9684  015542  0E00               	movlw	0
  9685  015544  0100               	movlb	0	; () banked
  9686  015546  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
  9687  015548  0E00               	movlw	0
  9688  01554A  6F7E               	movwf	___awdiv@quotient& (0+255),b
  9689                           
  9690                           ; BSR set to: 0
  9691  01554C  0100               	movlb	0	; () banked
  9692  01554E  517A               	movf	___awdiv@divisor& (0+255),w,b
  9693  015550  0100               	movlb	0	; () banked
  9694  015552  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9695  015554  B4D8               	btfsc	status,2,c
  9696  015556  D02C               	goto	l7762
  9697                           
  9698                           ; BSR set to: 0
  9699  015558  0E01               	movlw	1
  9700  01555A  0100               	movlb	0	; () banked
  9701  01555C  6F7C               	movwf	___awdiv@counter& (0+255),b
  9702  01555E  D006               	goto	l7748
  9703  015560                     l7746:
  9704                           
  9705                           ; BSR set to: 0
  9706  015560  0100               	movlb	0	; () banked
  9707  015562  90D8               	bcf	status,0,c
  9708  015564  377A               	rlcf	___awdiv@divisor& (0+255),f,b
  9709  015566  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9710  015568  0100               	movlb	0	; () banked
  9711  01556A  2B7C               	incf	___awdiv@counter& (0+255),f,b
  9712  01556C                     l7748:
  9713                           
  9714                           ; BSR set to: 0
  9715  01556C  0100               	movlb	0	; () banked
  9716  01556E  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9717  015570  D7F7               	goto	l7746
  9718  015572                     l7750:
  9719                           
  9720                           ; BSR set to: 0
  9721  015572  0100               	movlb	0	; () banked
  9722  015574  90D8               	bcf	status,0,c
  9723  015576  377E               	rlcf	___awdiv@quotient& (0+255),f,b
  9724  015578  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9725                           
  9726                           ; BSR set to: 0
  9727  01557A  0100               	movlb	0	; () banked
  9728  01557C  517A               	movf	___awdiv@divisor& (0+255),w,b
  9729  01557E  0100               	movlb	0	; () banked
  9730  015580  5D78               	subwf	___awdiv@dividend& (0+255),w,b
  9731  015582  0100               	movlb	0	; () banked
  9732  015584  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9733  015586  0100               	movlb	0	; () banked
  9734  015588  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9735  01558A  A0D8               	btfss	status,0,c
  9736  01558C  D00A               	goto	l7758
  9737                           
  9738                           ; BSR set to: 0
  9739  01558E  0100               	movlb	0	; () banked
  9740  015590  517A               	movf	___awdiv@divisor& (0+255),w,b
  9741  015592  0100               	movlb	0	; () banked
  9742  015594  5F78               	subwf	___awdiv@dividend& (0+255),f,b
  9743  015596  0100               	movlb	0	; () banked
  9744  015598  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9745  01559A  0100               	movlb	0	; () banked
  9746  01559C  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9747                           
  9748                           ; BSR set to: 0
  9749  01559E  0100               	movlb	0	; () banked
  9750  0155A0  817E               	bsf	___awdiv@quotient& (0+255),0,b
  9751  0155A2                     l7758:
  9752                           
  9753                           ; BSR set to: 0
  9754  0155A2  0100               	movlb	0	; () banked
  9755  0155A4  90D8               	bcf	status,0,c
  9756  0155A6  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9757  0155A8  337A               	rrcf	___awdiv@divisor& (0+255),f,b
  9758                           
  9759                           ; BSR set to: 0
  9760  0155AA  0100               	movlb	0	; () banked
  9761  0155AC  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
  9762  0155AE  D7E1               	goto	l7750
  9763  0155B0                     l7762:
  9764                           
  9765                           ; BSR set to: 0
  9766  0155B0  0100               	movlb	0	; () banked
  9767  0155B2  517D               	movf	___awdiv@sign& (0+255),w,b
  9768  0155B4  0100               	movlb	0	; () banked
  9769  0155B6  B4D8               	btfsc	status,2,c
  9770  0155B8  D005               	goto	l7766
  9771                           
  9772                           ; BSR set to: 0
  9773  0155BA  0100               	movlb	0	; () banked
  9774  0155BC  6D7E               	negf	___awdiv@quotient& (0+255),b
  9775  0155BE  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9776  0155C0  B0D8               	btfsc	status,0,c
  9777  0155C2  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9778  0155C4                     l7766:
  9779                           
  9780                           ; BSR set to: 0
  9781  0155C4  C07E  F078         	movff	___awdiv@quotient,?___awdiv
  9782  0155C8  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
  9783  0155CC  0012               	return	
  9784  0155CE                     __end_of___awdiv:
  9785                           	opt stack 0
  9786                           tblptru	equ	0xFF8
  9787                           tblptrh	equ	0xFF7
  9788                           tblptrl	equ	0xFF6
  9789                           tablat	equ	0xFF5
  9790                           prodh	equ	0xFF4
  9791                           prodl	equ	0xFF3
  9792                           intcon	equ	0xFF2
  9793                           postinc0	equ	0xFEE
  9794                           wreg	equ	0xFE8
  9795                           indf2	equ	0xFDF
  9796                           postinc2	equ	0xFDE
  9797                           fsr2h	equ	0xFDA
  9798                           fsr2l	equ	0xFD9
  9799                           status	equ	0xFD8
  9800                           
  9801 ;; *************** function __tdiv_to_l_ *****************
  9802 ;; Defined at:
  9803 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  f1              4   18[BANK0 ] float 
  9806 ;;  f2              4   22[BANK0 ] float 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  quot            4   29[BANK0 ] unsigned long 
  9809 ;;  exp1            1   34[BANK0 ] unsigned char 
  9810 ;;  cntr            1   33[BANK0 ] unsigned char 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  4   18[BANK0 ] unsigned long 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2, status,0
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9820 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;Total ram usage:       17 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:    3
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_sprintf
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text15
  9835  014B92                     __ptext15:
  9836                           	opt stack 0
  9837  014B92                     __tdiv_to_l_:
  9838                           	opt stack 25
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;incstack = 0
  9842  014B92  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9843  014B96  0100               	movlb	0	; () banked
  9844  014B98  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9845  014B9A  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9846  014B9C  0100               	movlb	0	; () banked
  9847  014B9E  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9848  014BA0  0100               	movlb	0	; () banked
  9849  014BA2  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9850  014BA4  E301               	bnc	u10491
  9851  014BA6  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9852  014BA8                     u10491:
  9853  014BA8  0100               	movlb	0	; () banked
  9854  014BAA  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9855  014BAC  0100               	movlb	0	; () banked
  9856  014BAE  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9857  014BB0  0100               	movlb	0	; () banked
  9858  014BB2  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9859  014BB4  A4D8               	btfss	status,2,c
  9860  014BB6  D00A               	goto	l7926
  9861                           
  9862                           ; BSR set to: 0
  9863  014BB8  0E00               	movlw	0
  9864  014BBA  0100               	movlb	0	; () banked
  9865  014BBC  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9866  014BBE  0E00               	movlw	0
  9867  014BC0  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9868  014BC2  0E00               	movlw	0
  9869  014BC4  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9870  014BC6  0E00               	movlw	0
  9871  014BC8  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9872                           
  9873                           ; BSR set to: 0
  9874  014BCA  0012               	return	
  9875  014BCC                     l7926:
  9876                           
  9877                           ; BSR set to: 0
  9878  014BCC  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9879  014BD0  0100               	movlb	0	; () banked
  9880  014BD2  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9881  014BD4  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9882  014BD6  0100               	movlb	0	; () banked
  9883  014BD8  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9884  014BDA  0100               	movlb	0	; () banked
  9885  014BDC  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9886  014BDE  E301               	bnc	u10511
  9887  014BE0  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9888  014BE2                     u10511:
  9889  014BE2  0100               	movlb	0	; () banked
  9890  014BE4  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9891  014BE6  0100               	movlb	0	; () banked
  9892  014BE8  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9893  014BEA  0100               	movlb	0	; () banked
  9894  014BEC  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9895  014BEE  A4D8               	btfss	status,2,c
  9896  014BF0  D00A               	goto	l7932
  9897                           
  9898                           ; BSR set to: 0
  9899  014BF2  0E00               	movlw	0
  9900  014BF4  0100               	movlb	0	; () banked
  9901  014BF6  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9902  014BF8  0E00               	movlw	0
  9903  014BFA  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9904  014BFC  0E00               	movlw	0
  9905  014BFE  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9906  014C00  0E00               	movlw	0
  9907  014C02  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9908                           
  9909                           ; BSR set to: 0
  9910  014C04  0012               	return	
  9911  014C06                     l7932:
  9912                           
  9913                           ; BSR set to: 0
  9914  014C06  0100               	movlb	0	; () banked
  9915  014C08  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9916                           
  9917                           ; BSR set to: 0
  9918  014C0A  0EFF               	movlw	255
  9919  014C0C  0100               	movlb	0	; () banked
  9920  014C0E  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9921  014C10  0EFF               	movlw	255
  9922  014C12  0100               	movlb	0	; () banked
  9923  014C14  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9924  014C16  0E00               	movlw	0
  9925  014C18  0100               	movlb	0	; () banked
  9926  014C1A  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9927  014C1C  0100               	movlb	0	; () banked
  9928  014C1E  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9929                           
  9930                           ; BSR set to: 0
  9931  014C20  0EFF               	movlw	255
  9932  014C22  0100               	movlb	0	; () banked
  9933  014C24  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9934  014C26  0EFF               	movlw	255
  9935  014C28  0100               	movlb	0	; () banked
  9936  014C2A  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9937  014C2C  0E00               	movlw	0
  9938  014C2E  0100               	movlb	0	; () banked
  9939  014C30  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9940                           
  9941                           ; BSR set to: 0
  9942  014C32  0E00               	movlw	0
  9943  014C34  0100               	movlb	0	; () banked
  9944  014C36  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
  9945  014C38  0E00               	movlw	0
  9946  014C3A  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9947  014C3C  0E00               	movlw	0
  9948  014C3E  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9949  014C40  0E00               	movlw	0
  9950  014C42  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9951                           
  9952                           ; BSR set to: 0
  9953  014C44  0E7F               	movlw	127
  9954  014C46  0100               	movlb	0	; () banked
  9955  014C48  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9956                           
  9957                           ; BSR set to: 0
  9958  014C4A  0100               	movlb	0	; () banked
  9959  014C4C  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9960  014C4E  0F98               	addlw	152
  9961  014C50  0100               	movlb	0	; () banked
  9962  014C52  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9963                           
  9964                           ; BSR set to: 0
  9965  014C54  0E18               	movlw	24
  9966  014C56  0100               	movlb	0	; () banked
  9967  014C58  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9968  014C5A                     l1282:
  9969                           
  9970                           ; BSR set to: 0
  9971  014C5A  0100               	movlb	0	; () banked
  9972  014C5C  90D8               	bcf	status,0,c
  9973  014C5E  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9974  014C60  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9975  014C62  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9976  014C64  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9977                           
  9978                           ; BSR set to: 0
  9979  014C66  0100               	movlb	0	; () banked
  9980  014C68  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9981  014C6A  0100               	movlb	0	; () banked
  9982  014C6C  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9983  014C6E  0100               	movlb	0	; () banked
  9984  014C70  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9985  014C72  0100               	movlb	0	; () banked
  9986  014C74  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9987  014C76  0100               	movlb	0	; () banked
  9988  014C78  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9989  014C7A  0100               	movlb	0	; () banked
  9990  014C7C  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9991  014C7E  A0D8               	btfss	status,0,c
  9992  014C80  D00E               	goto	l1283
  9993                           
  9994                           ; BSR set to: 0
  9995  014C82  0100               	movlb	0	; () banked
  9996  014C84  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9997  014C86  0100               	movlb	0	; () banked
  9998  014C88  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9999  014C8A  0100               	movlb	0	; () banked
 10000  014C8C  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10001  014C8E  0100               	movlb	0	; () banked
 10002  014C90  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10003  014C92  0100               	movlb	0	; () banked
 10004  014C94  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10005  014C96  0100               	movlb	0	; () banked
 10006  014C98  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10007                           
 10008                           ; BSR set to: 0
 10009  014C9A  0100               	movlb	0	; () banked
 10010  014C9C  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10011  014C9E                     l1283:
 10012                           
 10013                           ; BSR set to: 0
 10014  014C9E  0100               	movlb	0	; () banked
 10015  014CA0  90D8               	bcf	status,0,c
 10016  014CA2  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10017  014CA4  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10018  014CA6  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10019                           
 10020                           ; BSR set to: 0
 10021  014CA8  0100               	movlb	0	; () banked
 10022  014CAA  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10023  014CAC  D7D6               	goto	l1282
 10024                           
 10025                           ; BSR set to: 0
 10026                           
 10027                           ; BSR set to: 0
 10028  014CAE  0100               	movlb	0	; () banked
 10029  014CB0  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10030  014CB2  D01A               	goto	l7966
 10031                           
 10032                           ; BSR set to: 0
 10033  014CB4  0100               	movlb	0	; () banked
 10034  014CB6  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10035  014CB8  0A80               	xorlw	128
 10036  014CBA  0F97               	addlw	151
 10037  014CBC  B0D8               	btfsc	status,0,c
 10038  014CBE  D00A               	goto	l7962
 10039                           
 10040                           ; BSR set to: 0
 10041  014CC0  0E00               	movlw	0
 10042  014CC2  0100               	movlb	0	; () banked
 10043  014CC4  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 10044  014CC6  0E00               	movlw	0
 10045  014CC8  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10046  014CCA  0E00               	movlw	0
 10047  014CCC  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10048  014CCE  0E00               	movlw	0
 10049  014CD0  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10050                           
 10051                           ; BSR set to: 0
 10052  014CD2  0012               	return	
 10053  014CD4                     l7962:
 10054                           
 10055                           ; BSR set to: 0
 10056  014CD4  0100               	movlb	0	; () banked
 10057  014CD6  90D8               	bcf	status,0,c
 10058  014CD8  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10059  014CDA  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10060  014CDC  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10061  014CDE  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10062                           
 10063                           ; BSR set to: 0
 10064  014CE0  0100               	movlb	0	; () banked
 10065  014CE2  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10066  014CE4  D7F7               	goto	l7962
 10067                           
 10068                           ; BSR set to: 0
 10069  014CE6  D01B               	goto	l1289
 10070  014CE8                     l7966:
 10071                           
 10072                           ; BSR set to: 0
 10073  014CE8  0E17               	movlw	23
 10074  014CEA  0100               	movlb	0	; () banked
 10075  014CEC  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10076  014CEE  D012               	goto	l7974
 10077                           
 10078                           ; BSR set to: 0
 10079  014CF0  0E00               	movlw	0
 10080  014CF2  0100               	movlb	0	; () banked
 10081  014CF4  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 10082  014CF6  0E00               	movlw	0
 10083  014CF8  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10084  014CFA  0E00               	movlw	0
 10085  014CFC  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10086  014CFE  0E00               	movlw	0
 10087  014D00  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10088                           
 10089                           ; BSR set to: 0
 10090  014D02  0012               	return	
 10091  014D04                     l7972:
 10092                           
 10093                           ; BSR set to: 0
 10094  014D04  0100               	movlb	0	; () banked
 10095  014D06  90D8               	bcf	status,0,c
 10096  014D08  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10097  014D0A  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10098  014D0C  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10099  014D0E  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10100  014D10  0100               	movlb	0	; () banked
 10101  014D12  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10102  014D14                     l7974:
 10103                           
 10104                           ; BSR set to: 0
 10105  014D14  0100               	movlb	0	; () banked
 10106  014D16  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10107  014D18  0100               	movlb	0	; () banked
 10108  014D1A  A4D8               	btfss	status,2,c
 10109  014D1C  D7F3               	goto	l7972
 10110  014D1E                     l1289:
 10111                           
 10112                           ; BSR set to: 0
 10113  014D1E  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10114  014D22  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10115  014D26  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10116  014D2A  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10117                           
 10118                           ; BSR set to: 0
 10119  014D2E  0012               	return		;funcret
 10120  014D30                     __end_of__tdiv_to_l_:
 10121                           	opt stack 0
 10122                           tblptru	equ	0xFF8
 10123                           tblptrh	equ	0xFF7
 10124                           tblptrl	equ	0xFF6
 10125                           tablat	equ	0xFF5
 10126                           prodh	equ	0xFF4
 10127                           prodl	equ	0xFF3
 10128                           intcon	equ	0xFF2
 10129                           postinc0	equ	0xFEE
 10130                           wreg	equ	0xFE8
 10131                           indf2	equ	0xFDF
 10132                           postinc2	equ	0xFDE
 10133                           fsr2h	equ	0xFDA
 10134                           fsr2l	equ	0xFD9
 10135                           status	equ	0xFD8
 10136                           
 10137 ;; *************** function __div_to_l_ *****************
 10138 ;; Defined at:
 10139 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;  f1              4   18[BANK0 ] unsigned long 
 10142 ;;  f2              4   22[BANK0 ] unsigned long 
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;  quot            4   26[BANK0 ] unsigned long 
 10145 ;;  exp1            1   31[BANK0 ] unsigned char 
 10146 ;;  cntr            1   30[BANK0 ] unsigned char 
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  4   18[BANK0 ] unsigned long 
 10149 ;; Registers used:
 10150 ;;		wreg, status,2, status,0
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10156 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10159 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10160 ;;Total ram usage:       14 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:    3
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_sprintf
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text16
 10171  014EC0                     __ptext16:
 10172                           	opt stack 0
 10173  014EC0                     __div_to_l_:
 10174                           	opt stack 25
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;incstack = 0
 10178  014EC0  0100               	movlb	0	; () banked
 10179  014EC2  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10180  014EC4  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10181  014EC6  0100               	movlb	0	; () banked
 10182  014EC8  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 10183  014ECA  0100               	movlb	0	; () banked
 10184  014ECC  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10185  014ECE  A4D8               	btfss	status,2,c
 10186  014ED0  D00A               	goto	l7982
 10187                           
 10188                           ; BSR set to: 0
 10189  014ED2  0E00               	movlw	0
 10190  014ED4  0100               	movlb	0	; () banked
 10191  014ED6  6F72               	movwf	?__div_to_l_& (0+255),b
 10192  014ED8  0E00               	movlw	0
 10193  014EDA  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10194  014EDC  0E00               	movlw	0
 10195  014EDE  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10196  014EE0  0E00               	movlw	0
 10197  014EE2  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10198                           
 10199                           ; BSR set to: 0
 10200  014EE4  0012               	return	
 10201  014EE6                     l7982:
 10202                           
 10203                           ; BSR set to: 0
 10204  014EE6  0100               	movlb	0	; () banked
 10205  014EE8  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10206  014EEA  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10207  014EEC  0100               	movlb	0	; () banked
 10208  014EEE  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10209  014EF0  0100               	movlb	0	; () banked
 10210  014EF2  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10211  014EF4  A4D8               	btfss	status,2,c
 10212  014EF6  D00A               	goto	l7988
 10213                           
 10214                           ; BSR set to: 0
 10215  014EF8  0E00               	movlw	0
 10216  014EFA  0100               	movlb	0	; () banked
 10217  014EFC  6F72               	movwf	?__div_to_l_& (0+255),b
 10218  014EFE  0E00               	movlw	0
 10219  014F00  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10220  014F02  0E00               	movlw	0
 10221  014F04  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10222  014F06  0E00               	movlw	0
 10223  014F08  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10224                           
 10225                           ; BSR set to: 0
 10226  014F0A  0012               	return	
 10227  014F0C                     l7988:
 10228                           
 10229                           ; BSR set to: 0
 10230  014F0C  0100               	movlb	0	; () banked
 10231  014F0E  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10232                           
 10233                           ; BSR set to: 0
 10234  014F10  0EFF               	movlw	255
 10235  014F12  0100               	movlb	0	; () banked
 10236  014F14  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 10237  014F16  0EFF               	movlw	255
 10238  014F18  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10239  014F1A  0EFF               	movlw	255
 10240  014F1C  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10241  014F1E  0E00               	movlw	0
 10242  014F20  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10243                           
 10244                           ; BSR set to: 0
 10245  014F22  0100               	movlb	0	; () banked
 10246  014F24  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10247  014F26  0EFF               	movlw	255
 10248  014F28  0100               	movlb	0	; () banked
 10249  014F2A  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 10250  014F2C  0EFF               	movlw	255
 10251  014F2E  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10252  014F30  0EFF               	movlw	255
 10253  014F32  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10254  014F34  0E00               	movlw	0
 10255  014F36  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10256                           
 10257                           ; BSR set to: 0
 10258  014F38  0E00               	movlw	0
 10259  014F3A  0100               	movlb	0	; () banked
 10260  014F3C  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 10261  014F3E  0E00               	movlw	0
 10262  014F40  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10263  014F42  0E00               	movlw	0
 10264  014F44  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10265  014F46  0E00               	movlw	0
 10266  014F48  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10267                           
 10268                           ; BSR set to: 0
 10269  014F4A  0E7F               	movlw	127
 10270  014F4C  0100               	movlb	0	; () banked
 10271  014F4E  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 0
 10274  014F50  0100               	movlb	0	; () banked
 10275  014F52  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10276  014F54  0FA0               	addlw	160
 10277  014F56  0100               	movlb	0	; () banked
 10278  014F58  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10279                           
 10280                           ; BSR set to: 0
 10281  014F5A  0E20               	movlw	32
 10282  014F5C  0100               	movlb	0	; () banked
 10283  014F5E  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10284  014F60                     l8002:
 10285                           
 10286                           ; BSR set to: 0
 10287  014F60  0100               	movlb	0	; () banked
 10288  014F62  90D8               	bcf	status,0,c
 10289  014F64  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10290  014F66  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10291  014F68  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10292  014F6A  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10293                           
 10294                           ; BSR set to: 0
 10295  014F6C  0100               	movlb	0	; () banked
 10296  014F6E  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10297  014F70  0100               	movlb	0	; () banked
 10298  014F72  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 10299  014F74  0100               	movlb	0	; () banked
 10300  014F76  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10301  014F78  0100               	movlb	0	; () banked
 10302  014F7A  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10303  014F7C  0100               	movlb	0	; () banked
 10304  014F7E  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10305  014F80  0100               	movlb	0	; () banked
 10306  014F82  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10307  014F84  0100               	movlb	0	; () banked
 10308  014F86  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10309  014F88  0100               	movlb	0	; () banked
 10310  014F8A  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10311  014F8C  A0D8               	btfss	status,0,c
 10312  014F8E  D012               	goto	l8010
 10313                           
 10314                           ; BSR set to: 0
 10315  014F90  0100               	movlb	0	; () banked
 10316  014F92  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10317  014F94  0100               	movlb	0	; () banked
 10318  014F96  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 10319  014F98  0100               	movlb	0	; () banked
 10320  014F9A  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10321  014F9C  0100               	movlb	0	; () banked
 10322  014F9E  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10323  014FA0  0100               	movlb	0	; () banked
 10324  014FA2  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10325  014FA4  0100               	movlb	0	; () banked
 10326  014FA6  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10327  014FA8  0100               	movlb	0	; () banked
 10328  014FAA  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10329  014FAC  0100               	movlb	0	; () banked
 10330  014FAE  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10331                           
 10332                           ; BSR set to: 0
 10333  014FB0  0100               	movlb	0	; () banked
 10334  014FB2  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 10335  014FB4                     l8010:
 10336                           
 10337                           ; BSR set to: 0
 10338  014FB4  0100               	movlb	0	; () banked
 10339  014FB6  90D8               	bcf	status,0,c
 10340  014FB8  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 10341  014FBA  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10342  014FBC  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10343  014FBE  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10344                           
 10345                           ; BSR set to: 0
 10346  014FC0  0100               	movlb	0	; () banked
 10347  014FC2  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10348  014FC4  D7CD               	goto	l8002
 10349                           
 10350                           ; BSR set to: 0
 10351                           
 10352                           ; BSR set to: 0
 10353  014FC6  0100               	movlb	0	; () banked
 10354  014FC8  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 10355  014FCA  D01A               	goto	l8026
 10356                           
 10357                           ; BSR set to: 0
 10358  014FCC  0100               	movlb	0	; () banked
 10359  014FCE  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10360  014FD0  0A80               	xorlw	128
 10361  014FD2  0F9F               	addlw	159
 10362  014FD4  B0D8               	btfsc	status,0,c
 10363  014FD6  D00A               	goto	l8022
 10364                           
 10365                           ; BSR set to: 0
 10366  014FD8  0E00               	movlw	0
 10367  014FDA  0100               	movlb	0	; () banked
 10368  014FDC  6F72               	movwf	?__div_to_l_& (0+255),b
 10369  014FDE  0E00               	movlw	0
 10370  014FE0  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10371  014FE2  0E00               	movlw	0
 10372  014FE4  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10373  014FE6  0E00               	movlw	0
 10374  014FE8  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10375                           
 10376                           ; BSR set to: 0
 10377  014FEA  0012               	return	
 10378  014FEC                     l8022:
 10379                           
 10380                           ; BSR set to: 0
 10381  014FEC  0100               	movlb	0	; () banked
 10382  014FEE  90D8               	bcf	status,0,c
 10383  014FF0  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10384  014FF2  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10385  014FF4  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10386  014FF6  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 10387                           
 10388                           ; BSR set to: 0
 10389  014FF8  0100               	movlb	0	; () banked
 10390  014FFA  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10391  014FFC  D7F7               	goto	l8022
 10392                           
 10393                           ; BSR set to: 0
 10394  014FFE  D01B               	goto	l1185
 10395  015000                     l8026:
 10396                           
 10397                           ; BSR set to: 0
 10398  015000  0E1F               	movlw	31
 10399  015002  0100               	movlb	0	; () banked
 10400  015004  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10401  015006  D012               	goto	l8034
 10402                           
 10403                           ; BSR set to: 0
 10404  015008  0E00               	movlw	0
 10405  01500A  0100               	movlb	0	; () banked
 10406  01500C  6F72               	movwf	?__div_to_l_& (0+255),b
 10407  01500E  0E00               	movlw	0
 10408  015010  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10409  015012  0E00               	movlw	0
 10410  015014  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10411  015016  0E00               	movlw	0
 10412  015018  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10413                           
 10414                           ; BSR set to: 0
 10415  01501A  0012               	return	
 10416  01501C                     l8032:
 10417                           
 10418                           ; BSR set to: 0
 10419  01501C  0100               	movlb	0	; () banked
 10420  01501E  90D8               	bcf	status,0,c
 10421  015020  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10422  015022  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10423  015024  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10424  015026  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10425  015028  0100               	movlb	0	; () banked
 10426  01502A  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 10427  01502C                     l8034:
 10428                           
 10429                           ; BSR set to: 0
 10430  01502C  0100               	movlb	0	; () banked
 10431  01502E  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10432  015030  0100               	movlb	0	; () banked
 10433  015032  A4D8               	btfss	status,2,c
 10434  015034  D7F3               	goto	l8032
 10435  015036                     l1185:
 10436                           
 10437                           ; BSR set to: 0
 10438  015036  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 10439  01503A  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10440  01503E  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10441  015042  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10442                           
 10443                           ; BSR set to: 0
 10444  015046  0012               	return		;funcret
 10445  015048                     __end_of__div_to_l_:
 10446                           	opt stack 0
 10447                           tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           intcon	equ	0xFF2
 10454                           postinc0	equ	0xFEE
 10455                           wreg	equ	0xFE8
 10456                           indf2	equ	0xFDF
 10457                           postinc2	equ	0xFDE
 10458                           fsr2h	equ	0xFDA
 10459                           fsr2l	equ	0xFD9
 10460                           status	equ	0xFD8
 10461                           
 10462 ;; *************** function ___xxtofl *****************
 10463 ;; Defined at:
 10464 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  sign            1    wreg     unsigned char 
 10467 ;;  val             4   18[BANK0 ] long 
 10468 ;; Auto vars:     Size  Location     Type
 10469 ;;  sign            1   26[BANK0 ] unsigned char 
 10470 ;;  arg             4   28[BANK0 ] unsigned long 
 10471 ;;  exp             1   27[BANK0 ] unsigned char 
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  4   18[BANK0 ] unsigned char 
 10474 ;; Registers used:
 10475 ;;		wreg, status,2, status,0
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;Total ram usage:       14 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; Hardware stack levels required when called:    3
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_main
 10492 ;;		_LCD_Handler
 10493 ;;		_sprintf
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           	psect	text17
 10498  0147FE                     __ptext17:
 10499                           	opt stack 0
 10500  0147FE                     ___xxtofl:
 10501                           	opt stack 27
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;incstack = 0
 10505                           ;___xxtofl@sign stored from wreg
 10506  0147FE  0100               	movlb	0	; () banked
 10507  014800  6F7A               	movwf	___xxtofl@sign& (0+255),b
 10508  014802  0100               	movlb	0	; () banked
 10509  014804  517A               	movf	___xxtofl@sign& (0+255),w,b
 10510  014806  0100               	movlb	0	; () banked
 10511  014808  B4D8               	btfsc	status,2,c
 10512  01480A  D01E               	goto	l1580
 10513                           
 10514                           ; BSR set to: 0
 10515  01480C  0100               	movlb	0	; () banked
 10516  01480E  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10517  014810  D01B               	goto	l1580
 10518                           
 10519                           ; BSR set to: 0
 10520  014812  C072  F076         	movff	___xxtofl@val,??___xxtofl
 10521  014816  C073  F077         	movff	___xxtofl@val+1,??___xxtofl+1
 10522  01481A  C074  F078         	movff	___xxtofl@val+2,??___xxtofl+2
 10523  01481E  C075  F079         	movff	___xxtofl@val+3,??___xxtofl+3
 10524  014822  0100               	movlb	0	; () banked
 10525  014824  1F76               	comf	??___xxtofl& (0+255),f,b
 10526  014826  1F77               	comf	(??___xxtofl+1)& (0+255),f,b
 10527  014828  1F78               	comf	(??___xxtofl+2)& (0+255),f,b
 10528  01482A  1F79               	comf	(??___xxtofl+3)& (0+255),f,b
 10529  01482C  2B76               	incf	??___xxtofl& (0+255),f,b
 10530  01482E  0E00               	movlw	0
 10531  014830  2377               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10532  014832  2378               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10533  014834  2379               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10534  014836  C076  F07C         	movff	??___xxtofl,___xxtofl@arg
 10535  01483A  C077  F07D         	movff	??___xxtofl+1,___xxtofl@arg+1
 10536  01483E  C078  F07E         	movff	??___xxtofl+2,___xxtofl@arg+2
 10537  014842  C079  F07F         	movff	??___xxtofl+3,___xxtofl@arg+3
 10538  014846  D008               	goto	l8160
 10539  014848                     l1580:
 10540                           
 10541                           ; BSR set to: 0
 10542  014848  C072  F07C         	movff	___xxtofl@val,___xxtofl@arg
 10543  01484C  C073  F07D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10544  014850  C074  F07E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10545  014854  C075  F07F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10546  014858                     l8160:
 10547                           
 10548                           ; BSR set to: 0
 10549  014858  0100               	movlb	0	; () banked
 10550  01485A  5172               	movf	___xxtofl@val& (0+255),w,b
 10551  01485C  0100               	movlb	0	; () banked
 10552  01485E  1173               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10553  014860  0100               	movlb	0	; () banked
 10554  014862  1174               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10555  014864  0100               	movlb	0	; () banked
 10556  014866  1175               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10557  014868  A4D8               	btfss	status,2,c
 10558  01486A  D00A               	goto	l8166
 10559                           
 10560                           ; BSR set to: 0
 10561  01486C  0E00               	movlw	0
 10562  01486E  0100               	movlb	0	; () banked
 10563  014870  6F72               	movwf	?___xxtofl& (0+255),b
 10564  014872  0E00               	movlw	0
 10565  014874  6F73               	movwf	(?___xxtofl+1)& (0+255),b
 10566  014876  0E00               	movlw	0
 10567  014878  6F74               	movwf	(?___xxtofl+2)& (0+255),b
 10568  01487A  0E00               	movlw	0
 10569  01487C  6F75               	movwf	(?___xxtofl+3)& (0+255),b
 10570                           
 10571                           ; BSR set to: 0
 10572  01487E  0012               	return	
 10573  014880                     l8166:
 10574                           
 10575                           ; BSR set to: 0
 10576  014880  0E96               	movlw	150
 10577  014882  0100               	movlb	0	; () banked
 10578  014884  6F7B               	movwf	___xxtofl@exp& (0+255),b
 10579  014886  D008               	goto	l8170
 10580  014888                     l8168:
 10581                           
 10582                           ; BSR set to: 0
 10583  014888  0100               	movlb	0	; () banked
 10584  01488A  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10585  01488C  0100               	movlb	0	; () banked
 10586  01488E  90D8               	bcf	status,0,c
 10587  014890  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10588  014892  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10589  014894  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10590  014896  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10591  014898                     l8170:
 10592                           
 10593                           ; BSR set to: 0
 10594  014898  0E00               	movlw	0
 10595  01489A  0100               	movlb	0	; () banked
 10596  01489C  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10597  01489E  0100               	movlb	0	; () banked
 10598  0148A0  6F76               	movwf	??___xxtofl& (0+255),b
 10599  0148A2  0E00               	movlw	0
 10600  0148A4  0100               	movlb	0	; () banked
 10601  0148A6  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10602  0148A8  0100               	movlb	0	; () banked
 10603  0148AA  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10604  0148AC  0E00               	movlw	0
 10605  0148AE  0100               	movlb	0	; () banked
 10606  0148B0  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10607  0148B2  0100               	movlb	0	; () banked
 10608  0148B4  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10609  0148B6  0EFE               	movlw	254
 10610  0148B8  0100               	movlb	0	; () banked
 10611  0148BA  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10612  0148BC  0100               	movlb	0	; () banked
 10613  0148BE  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10614  0148C0  0100               	movlb	0	; () banked
 10615  0148C2  5176               	movf	??___xxtofl& (0+255),w,b
 10616  0148C4  0100               	movlb	0	; () banked
 10617  0148C6  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10618  0148C8  0100               	movlb	0	; () banked
 10619  0148CA  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10620  0148CC  0100               	movlb	0	; () banked
 10621  0148CE  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10622  0148D0  B4D8               	btfsc	status,2,c
 10623  0148D2  D010               	goto	l1587
 10624  0148D4  D7D9               	goto	l8168
 10625  0148D6                     l8172:
 10626                           
 10627                           ; BSR set to: 0
 10628  0148D6  0100               	movlb	0	; () banked
 10629  0148D8  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10630                           
 10631                           ; BSR set to: 0
 10632  0148DA  0E01               	movlw	1
 10633  0148DC  0100               	movlb	0	; () banked
 10634  0148DE  277C               	addwf	___xxtofl@arg& (0+255),f,b
 10635  0148E0  0E00               	movlw	0
 10636  0148E2  237D               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10637  0148E4  237E               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10638  0148E6  237F               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10639                           
 10640                           ; BSR set to: 0
 10641  0148E8  0100               	movlb	0	; () banked
 10642  0148EA  90D8               	bcf	status,0,c
 10643  0148EC  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10644  0148EE  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10645  0148F0  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10646  0148F2  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10647  0148F4                     l1587:
 10648                           
 10649                           ; BSR set to: 0
 10650  0148F4  0E00               	movlw	0
 10651  0148F6  0100               	movlb	0	; () banked
 10652  0148F8  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10653  0148FA  0100               	movlb	0	; () banked
 10654  0148FC  6F76               	movwf	??___xxtofl& (0+255),b
 10655  0148FE  0E00               	movlw	0
 10656  014900  0100               	movlb	0	; () banked
 10657  014902  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10658  014904  0100               	movlb	0	; () banked
 10659  014906  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10660  014908  0E00               	movlw	0
 10661  01490A  0100               	movlb	0	; () banked
 10662  01490C  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10663  01490E  0100               	movlb	0	; () banked
 10664  014910  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10665  014912  0EFF               	movlw	255
 10666  014914  0100               	movlb	0	; () banked
 10667  014916  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10668  014918  0100               	movlb	0	; () banked
 10669  01491A  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10670  01491C  0100               	movlb	0	; () banked
 10671  01491E  5176               	movf	??___xxtofl& (0+255),w,b
 10672  014920  0100               	movlb	0	; () banked
 10673  014922  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10674  014924  0100               	movlb	0	; () banked
 10675  014926  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10676  014928  0100               	movlb	0	; () banked
 10677  01492A  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10678  01492C  B4D8               	btfsc	status,2,c
 10679  01492E  D009               	goto	l8180
 10680  014930  D7D2               	goto	l8172
 10681  014932                     l8178:
 10682                           
 10683                           ; BSR set to: 0
 10684  014932  0100               	movlb	0	; () banked
 10685  014934  077B               	decf	___xxtofl@exp& (0+255),f,b
 10686  014936  0100               	movlb	0	; () banked
 10687  014938  90D8               	bcf	status,0,c
 10688  01493A  377C               	rlcf	___xxtofl@arg& (0+255),f,b
 10689  01493C  377D               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10690  01493E  377E               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10691  014940  377F               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10692  014942                     l8180:
 10693                           
 10694                           ; BSR set to: 0
 10695  014942  0100               	movlb	0	; () banked
 10696  014944  BF7E               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10697  014946  D004               	goto	l1594
 10698                           
 10699                           ; BSR set to: 0
 10700  014948  0E02               	movlw	2
 10701  01494A  0100               	movlb	0	; () banked
 10702  01494C  617B               	cpfslt	___xxtofl@exp& (0+255),b
 10703  01494E  D7F1               	goto	l8178
 10704  014950                     l1594:
 10705                           
 10706                           ; BSR set to: 0
 10707  014950  0100               	movlb	0	; () banked
 10708  014952  B17B               	btfsc	___xxtofl@exp& (0+255),0,b
 10709  014954  D009               	goto	l1595
 10710                           
 10711                           ; BSR set to: 0
 10712  014956  0EFF               	movlw	255
 10713  014958  0100               	movlb	0	; () banked
 10714  01495A  177C               	andwf	___xxtofl@arg& (0+255),f,b
 10715  01495C  0EFF               	movlw	255
 10716  01495E  177D               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10717  014960  0E7F               	movlw	127
 10718  014962  177E               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10719  014964  0EFF               	movlw	255
 10720  014966  177F               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10721  014968                     l1595:
 10722                           
 10723                           ; BSR set to: 0
 10724  014968  0100               	movlb	0	; () banked
 10725  01496A  90D8               	bcf	status,0,c
 10726  01496C  337B               	rrcf	___xxtofl@exp& (0+255),f,b
 10727  01496E  C07B  F076         	movff	___xxtofl@exp,??___xxtofl
 10728  014972  0100               	movlb	0	; () banked
 10729  014974  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10730  014976  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10731  014978  6B79               	clrf	(??___xxtofl+3)& (0+255),b
 10732  01497A  C076  F079         	movff	??___xxtofl,??___xxtofl+3
 10733  01497E  0100               	movlb	0	; () banked
 10734  014980  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10735  014982  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10736  014984  6B76               	clrf	??___xxtofl& (0+255),b
 10737  014986  0100               	movlb	0	; () banked
 10738  014988  5176               	movf	??___xxtofl& (0+255),w,b
 10739  01498A  0100               	movlb	0	; () banked
 10740  01498C  137C               	iorwf	___xxtofl@arg& (0+255),f,b
 10741  01498E  0100               	movlb	0	; () banked
 10742  014990  5177               	movf	(??___xxtofl+1)& (0+255),w,b
 10743  014992  0100               	movlb	0	; () banked
 10744  014994  137D               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10745  014996  0100               	movlb	0	; () banked
 10746  014998  5178               	movf	(??___xxtofl+2)& (0+255),w,b
 10747  01499A  0100               	movlb	0	; () banked
 10748  01499C  137E               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10749  01499E  0100               	movlb	0	; () banked
 10750  0149A0  5179               	movf	(??___xxtofl+3)& (0+255),w,b
 10751  0149A2  0100               	movlb	0	; () banked
 10752  0149A4  137F               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10753                           
 10754                           ; BSR set to: 0
 10755  0149A6  0100               	movlb	0	; () banked
 10756  0149A8  517A               	movf	___xxtofl@sign& (0+255),w,b
 10757  0149AA  0100               	movlb	0	; () banked
 10758  0149AC  B4D8               	btfsc	status,2,c
 10759  0149AE  D005               	goto	l8192
 10760                           
 10761                           ; BSR set to: 0
 10762  0149B0  0100               	movlb	0	; () banked
 10763  0149B2  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10764  0149B4  D002               	goto	l8192
 10765                           
 10766                           ; BSR set to: 0
 10767  0149B6  0100               	movlb	0	; () banked
 10768  0149B8  8F7F               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10769  0149BA                     l8192:
 10770                           
 10771                           ; BSR set to: 0
 10772  0149BA  C07C  F072         	movff	___xxtofl@arg,?___xxtofl
 10773  0149BE  C07D  F073         	movff	___xxtofl@arg+1,?___xxtofl+1
 10774  0149C2  C07E  F074         	movff	___xxtofl@arg+2,?___xxtofl+2
 10775  0149C6  C07F  F075         	movff	___xxtofl@arg+3,?___xxtofl+3
 10776  0149CA  0012               	return	
 10777  0149CC                     __end_of___xxtofl:
 10778                           	opt stack 0
 10779                           tblptru	equ	0xFF8
 10780                           tblptrh	equ	0xFF7
 10781                           tblptrl	equ	0xFF6
 10782                           tablat	equ	0xFF5
 10783                           prodh	equ	0xFF4
 10784                           prodl	equ	0xFF3
 10785                           intcon	equ	0xFF2
 10786                           postinc0	equ	0xFEE
 10787                           wreg	equ	0xFE8
 10788                           indf2	equ	0xFDF
 10789                           postinc2	equ	0xFDE
 10790                           fsr2h	equ	0xFDA
 10791                           fsr2l	equ	0xFD9
 10792                           status	equ	0xFD8
 10793                           
 10794 ;; *************** function ___llmod *****************
 10795 ;; Defined at:
 10796 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  dividend        4   18[BANK0 ] unsigned long 
 10799 ;;  divisor         4   22[BANK0 ] unsigned long 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  counter         1   26[BANK0 ] unsigned char 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  4   18[BANK0 ] unsigned long 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2, status,0
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10811 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;Total ram usage:        9 bytes
 10816 ;; Hardware stack levels used:    1
 10817 ;; Hardware stack levels required when called:    3
 10818 ;; This function calls:
 10819 ;;		Nothing
 10820 ;; This function is called by:
 10821 ;;		_sprintf
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text18
 10826  015934                     __ptext18:
 10827                           	opt stack 0
 10828  015934                     ___llmod:
 10829                           	opt stack 25
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;incstack = 0
 10833  015934  0100               	movlb	0	; () banked
 10834  015936  5176               	movf	___llmod@divisor& (0+255),w,b
 10835  015938  0100               	movlb	0	; () banked
 10836  01593A  1177               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10837  01593C  0100               	movlb	0	; () banked
 10838  01593E  1178               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10839  015940  0100               	movlb	0	; () banked
 10840  015942  1179               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10841  015944  B4D8               	btfsc	status,2,c
 10842  015946  D03A               	goto	l1388
 10843                           
 10844                           ; BSR set to: 0
 10845  015948  0E01               	movlw	1
 10846  01594A  0100               	movlb	0	; () banked
 10847  01594C  6F7A               	movwf	___llmod@counter& (0+255),b
 10848  01594E  D008               	goto	l8144
 10849  015950                     l8142:
 10850                           
 10851                           ; BSR set to: 0
 10852  015950  0100               	movlb	0	; () banked
 10853  015952  90D8               	bcf	status,0,c
 10854  015954  3776               	rlcf	___llmod@divisor& (0+255),f,b
 10855  015956  3777               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10856  015958  3778               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10857  01595A  3779               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10858  01595C  0100               	movlb	0	; () banked
 10859  01595E  2B7A               	incf	___llmod@counter& (0+255),f,b
 10860  015960                     l8144:
 10861                           
 10862                           ; BSR set to: 0
 10863  015960  0100               	movlb	0	; () banked
 10864  015962  AF79               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10865  015964  D7F5               	goto	l8142
 10866  015966                     l8146:
 10867                           
 10868                           ; BSR set to: 0
 10869  015966  0100               	movlb	0	; () banked
 10870  015968  5176               	movf	___llmod@divisor& (0+255),w,b
 10871  01596A  0100               	movlb	0	; () banked
 10872  01596C  5D72               	subwf	___llmod@dividend& (0+255),w,b
 10873  01596E  0100               	movlb	0	; () banked
 10874  015970  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10875  015972  0100               	movlb	0	; () banked
 10876  015974  5973               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10877  015976  0100               	movlb	0	; () banked
 10878  015978  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10879  01597A  0100               	movlb	0	; () banked
 10880  01597C  5974               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10881  01597E  0100               	movlb	0	; () banked
 10882  015980  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10883  015982  0100               	movlb	0	; () banked
 10884  015984  5975               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10885  015986  A0D8               	btfss	status,0,c
 10886  015988  D010               	goto	l8150
 10887                           
 10888                           ; BSR set to: 0
 10889  01598A  0100               	movlb	0	; () banked
 10890  01598C  5176               	movf	___llmod@divisor& (0+255),w,b
 10891  01598E  0100               	movlb	0	; () banked
 10892  015990  5F72               	subwf	___llmod@dividend& (0+255),f,b
 10893  015992  0100               	movlb	0	; () banked
 10894  015994  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10895  015996  0100               	movlb	0	; () banked
 10896  015998  5B73               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10897  01599A  0100               	movlb	0	; () banked
 10898  01599C  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10899  01599E  0100               	movlb	0	; () banked
 10900  0159A0  5B74               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10901  0159A2  0100               	movlb	0	; () banked
 10902  0159A4  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10903  0159A6  0100               	movlb	0	; () banked
 10904  0159A8  5B75               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10905  0159AA                     l8150:
 10906                           
 10907                           ; BSR set to: 0
 10908  0159AA  0100               	movlb	0	; () banked
 10909  0159AC  90D8               	bcf	status,0,c
 10910  0159AE  3379               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10911  0159B0  3378               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10912  0159B2  3377               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10913  0159B4  3376               	rrcf	___llmod@divisor& (0+255),f,b
 10914                           
 10915                           ; BSR set to: 0
 10916  0159B6  0100               	movlb	0	; () banked
 10917  0159B8  2F7A               	decfsz	___llmod@counter& (0+255),f,b
 10918  0159BA  D7D5               	goto	l8146
 10919  0159BC                     l1388:
 10920                           
 10921                           ; BSR set to: 0
 10922  0159BC  C072  F072         	movff	___llmod@dividend,?___llmod
 10923  0159C0  C073  F073         	movff	___llmod@dividend+1,?___llmod+1
 10924  0159C4  C074  F074         	movff	___llmod@dividend+2,?___llmod+2
 10925  0159C8  C075  F075         	movff	___llmod@dividend+3,?___llmod+3
 10926                           
 10927                           ; BSR set to: 0
 10928  0159CC  0012               	return		;funcret
 10929  0159CE                     __end_of___llmod:
 10930                           	opt stack 0
 10931                           tblptru	equ	0xFF8
 10932                           tblptrh	equ	0xFF7
 10933                           tblptrl	equ	0xFF6
 10934                           tablat	equ	0xFF5
 10935                           prodh	equ	0xFF4
 10936                           prodl	equ	0xFF3
 10937                           intcon	equ	0xFF2
 10938                           postinc0	equ	0xFEE
 10939                           wreg	equ	0xFE8
 10940                           indf2	equ	0xFDF
 10941                           postinc2	equ	0xFDE
 10942                           fsr2h	equ	0xFDA
 10943                           fsr2l	equ	0xFD9
 10944                           status	equ	0xFD8
 10945                           
 10946 ;; *************** function ___lldiv *****************
 10947 ;; Defined at:
 10948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;  dividend        4   18[BANK0 ] unsigned long 
 10951 ;;  divisor         4   22[BANK0 ] unsigned long 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  quotient        4   26[BANK0 ] unsigned long 
 10954 ;;  counter         1   30[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  4   18[BANK0 ] unsigned long 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10964 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;Total ram usage:       13 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    3
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_sprintf
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           	psect	text19
 10979  0155CE                     __ptext19:
 10980                           	opt stack 0
 10981  0155CE                     ___lldiv:
 10982                           	opt stack 25
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;incstack = 0
 10986  0155CE  0E00               	movlw	0
 10987  0155D0  0100               	movlb	0	; () banked
 10988  0155D2  6F7A               	movwf	___lldiv@quotient& (0+255),b
 10989  0155D4  0E00               	movlw	0
 10990  0155D6  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 10991  0155D8  0E00               	movlw	0
 10992  0155DA  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 10993  0155DC  0E00               	movlw	0
 10994  0155DE  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 10995                           
 10996                           ; BSR set to: 0
 10997  0155E0  0100               	movlb	0	; () banked
 10998  0155E2  5176               	movf	___lldiv@divisor& (0+255),w,b
 10999  0155E4  0100               	movlb	0	; () banked
 11000  0155E6  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11001  0155E8  0100               	movlb	0	; () banked
 11002  0155EA  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11003  0155EC  0100               	movlb	0	; () banked
 11004  0155EE  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11005  0155F0  B4D8               	btfsc	status,2,c
 11006  0155F2  D042               	goto	l1378
 11007                           
 11008                           ; BSR set to: 0
 11009  0155F4  0E01               	movlw	1
 11010  0155F6  0100               	movlb	0	; () banked
 11011  0155F8  6F7E               	movwf	___lldiv@counter& (0+255),b
 11012  0155FA  D008               	goto	l8124
 11013  0155FC                     l8122:
 11014                           
 11015                           ; BSR set to: 0
 11016  0155FC  0100               	movlb	0	; () banked
 11017  0155FE  90D8               	bcf	status,0,c
 11018  015600  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 11019  015602  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11020  015604  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11021  015606  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11022  015608  0100               	movlb	0	; () banked
 11023  01560A  2B7E               	incf	___lldiv@counter& (0+255),f,b
 11024  01560C                     l8124:
 11025                           
 11026                           ; BSR set to: 0
 11027  01560C  0100               	movlb	0	; () banked
 11028  01560E  AF79               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11029  015610  D7F5               	goto	l8122
 11030  015612                     l8126:
 11031                           
 11032                           ; BSR set to: 0
 11033  015612  0100               	movlb	0	; () banked
 11034  015614  90D8               	bcf	status,0,c
 11035  015616  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 11036  015618  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11037  01561A  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11038  01561C  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11039                           
 11040                           ; BSR set to: 0
 11041  01561E  0100               	movlb	0	; () banked
 11042  015620  5176               	movf	___lldiv@divisor& (0+255),w,b
 11043  015622  0100               	movlb	0	; () banked
 11044  015624  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 11045  015626  0100               	movlb	0	; () banked
 11046  015628  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11047  01562A  0100               	movlb	0	; () banked
 11048  01562C  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11049  01562E  0100               	movlb	0	; () banked
 11050  015630  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11051  015632  0100               	movlb	0	; () banked
 11052  015634  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11053  015636  0100               	movlb	0	; () banked
 11054  015638  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11055  01563A  0100               	movlb	0	; () banked
 11056  01563C  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11057  01563E  A0D8               	btfss	status,0,c
 11058  015640  D012               	goto	l8134
 11059                           
 11060                           ; BSR set to: 0
 11061  015642  0100               	movlb	0	; () banked
 11062  015644  5176               	movf	___lldiv@divisor& (0+255),w,b
 11063  015646  0100               	movlb	0	; () banked
 11064  015648  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 11065  01564A  0100               	movlb	0	; () banked
 11066  01564C  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11067  01564E  0100               	movlb	0	; () banked
 11068  015650  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11069  015652  0100               	movlb	0	; () banked
 11070  015654  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11071  015656  0100               	movlb	0	; () banked
 11072  015658  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11073  01565A  0100               	movlb	0	; () banked
 11074  01565C  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11075  01565E  0100               	movlb	0	; () banked
 11076  015660  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11077                           
 11078                           ; BSR set to: 0
 11079  015662  0100               	movlb	0	; () banked
 11080  015664  817A               	bsf	___lldiv@quotient& (0+255),0,b
 11081  015666                     l8134:
 11082                           
 11083                           ; BSR set to: 0
 11084  015666  0100               	movlb	0	; () banked
 11085  015668  90D8               	bcf	status,0,c
 11086  01566A  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11087  01566C  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11088  01566E  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11089  015670  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 11090                           
 11091                           ; BSR set to: 0
 11092  015672  0100               	movlb	0	; () banked
 11093  015674  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 11094  015676  D7CD               	goto	l8126
 11095  015678                     l1378:
 11096                           
 11097                           ; BSR set to: 0
 11098  015678  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 11099  01567C  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 11100  015680  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 11101  015684  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 11102                           
 11103                           ; BSR set to: 0
 11104  015688  0012               	return		;funcret
 11105  01568A                     __end_of___lldiv:
 11106                           	opt stack 0
 11107                           tblptru	equ	0xFF8
 11108                           tblptrh	equ	0xFF7
 11109                           tblptrl	equ	0xFF6
 11110                           tablat	equ	0xFF5
 11111                           prodh	equ	0xFF4
 11112                           prodl	equ	0xFF3
 11113                           intcon	equ	0xFF2
 11114                           postinc0	equ	0xFEE
 11115                           wreg	equ	0xFE8
 11116                           indf2	equ	0xFDF
 11117                           postinc2	equ	0xFDE
 11118                           fsr2h	equ	0xFDA
 11119                           fsr2l	equ	0xFD9
 11120                           status	equ	0xFD8
 11121                           
 11122 ;; *************** function ___fltol *****************
 11123 ;; Defined at:
 11124 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;  f1              4   90[BANK0 ] unsigned long 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  exp1            1   99[BANK0 ] unsigned char 
 11129 ;;  sign1           1   98[BANK0 ] unsigned char 
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  4   90[BANK0 ] long 
 11132 ;; Registers used:
 11133 ;;		wreg, status,2, status,0
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11139 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;Total ram usage:       10 bytes
 11144 ;; Hardware stack levels used:    1
 11145 ;; Hardware stack levels required when called:    3
 11146 ;; This function calls:
 11147 ;;		Nothing
 11148 ;; This function is called by:
 11149 ;;		_main
 11150 ;;		_sprintf
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text20
 11155  015318                     __ptext20:
 11156                           	opt stack 0
 11157  015318                     ___fltol:
 11158                           	opt stack 27
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;incstack = 0
 11162  015318  0100               	movlb	0	; () banked
 11163  01531A  35BC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11164  01531C  35BD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11165  01531E  0100               	movlb	0	; () banked
 11166  015320  6FC3               	movwf	___fltol@exp1& (0+255),b
 11167  015322  0100               	movlb	0	; () banked
 11168  015324  51C3               	movf	___fltol@exp1& (0+255),w,b
 11169  015326  A4D8               	btfss	status,2,c
 11170  015328  D00A               	goto	l8078
 11171                           
 11172                           ; BSR set to: 0
 11173  01532A  0E00               	movlw	0
 11174  01532C  0100               	movlb	0	; () banked
 11175  01532E  6FBA               	movwf	?___fltol& (0+255),b
 11176  015330  0E00               	movlw	0
 11177  015332  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11178  015334  0E00               	movlw	0
 11179  015336  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11180  015338  0E00               	movlw	0
 11181  01533A  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11182                           
 11183                           ; BSR set to: 0
 11184  01533C  0012               	return	
 11185  01533E                     l8078:
 11186                           
 11187                           ; BSR set to: 0
 11188  01533E  C0BA  F0BE         	movff	___fltol@f1,??___fltol
 11189  015342  C0BB  F0BF         	movff	___fltol@f1+1,??___fltol+1
 11190  015346  C0BC  F0C0         	movff	___fltol@f1+2,??___fltol+2
 11191  01534A  C0BD  F0C1         	movff	___fltol@f1+3,??___fltol+3
 11192  01534E  0E20               	movlw	32
 11193  015350  D006               	goto	u10720
 11194  015352                     u10725:
 11195  015352  0100               	movlb	0	; () banked
 11196  015354  90D8               	bcf	status,0,c
 11197  015356  33C1               	rrcf	(??___fltol+3)& (0+255),f,b
 11198  015358  33C0               	rrcf	(??___fltol+2)& (0+255),f,b
 11199  01535A  33BF               	rrcf	(??___fltol+1)& (0+255),f,b
 11200  01535C  33BE               	rrcf	??___fltol& (0+255),f,b
 11201  01535E                     u10720:
 11202  01535E  2EE8               	decfsz	wreg,f,c
 11203  015360  D7F8               	goto	u10725
 11204  015362  0100               	movlb	0	; () banked
 11205  015364  51BE               	movf	??___fltol& (0+255),w,b
 11206  015366  0100               	movlb	0	; () banked
 11207  015368  6FC2               	movwf	___fltol@sign1& (0+255),b
 11208                           
 11209                           ; BSR set to: 0
 11210  01536A  0100               	movlb	0	; () banked
 11211  01536C  8FBC               	bsf	(___fltol@f1+2)& (0+255),7,b
 11212                           
 11213                           ; BSR set to: 0
 11214  01536E  0EFF               	movlw	255
 11215  015370  0100               	movlb	0	; () banked
 11216  015372  17BA               	andwf	___fltol@f1& (0+255),f,b
 11217  015374  0EFF               	movlw	255
 11218  015376  17BB               	andwf	(___fltol@f1+1)& (0+255),f,b
 11219  015378  0EFF               	movlw	255
 11220  01537A  17BC               	andwf	(___fltol@f1+2)& (0+255),f,b
 11221  01537C  0E00               	movlw	0
 11222  01537E  17BD               	andwf	(___fltol@f1+3)& (0+255),f,b
 11223                           
 11224                           ; BSR set to: 0
 11225  015380  0E96               	movlw	150
 11226  015382  0100               	movlb	0	; () banked
 11227  015384  5FC3               	subwf	___fltol@exp1& (0+255),f,b
 11228                           
 11229                           ; BSR set to: 0
 11230  015386  0100               	movlb	0	; () banked
 11231  015388  AFC3               	btfss	___fltol@exp1& (0+255),7,b
 11232  01538A  D01A               	goto	l8098
 11233                           
 11234                           ; BSR set to: 0
 11235  01538C  0100               	movlb	0	; () banked
 11236  01538E  51C3               	movf	___fltol@exp1& (0+255),w,b
 11237  015390  0A80               	xorlw	128
 11238  015392  0F97               	addlw	151
 11239  015394  B0D8               	btfsc	status,0,c
 11240  015396  D00A               	goto	l8094
 11241                           
 11242                           ; BSR set to: 0
 11243  015398  0E00               	movlw	0
 11244  01539A  0100               	movlb	0	; () banked
 11245  01539C  6FBA               	movwf	?___fltol& (0+255),b
 11246  01539E  0E00               	movlw	0
 11247  0153A0  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11248  0153A2  0E00               	movlw	0
 11249  0153A4  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11250  0153A6  0E00               	movlw	0
 11251  0153A8  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11252                           
 11253                           ; BSR set to: 0
 11254  0153AA  0012               	return	
 11255  0153AC                     l8094:
 11256                           
 11257                           ; BSR set to: 0
 11258  0153AC  0100               	movlb	0	; () banked
 11259  0153AE  90D8               	bcf	status,0,c
 11260  0153B0  33BD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11261  0153B2  33BC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11262  0153B4  33BB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11263  0153B6  33BA               	rrcf	___fltol@f1& (0+255),f,b
 11264                           
 11265                           ; BSR set to: 0
 11266  0153B8  0100               	movlb	0	; () banked
 11267  0153BA  3FC3               	incfsz	___fltol@exp1& (0+255),f,b
 11268  0153BC  D7F7               	goto	l8094
 11269                           
 11270                           ; BSR set to: 0
 11271  0153BE  D01B               	goto	l8108
 11272  0153C0                     l8098:
 11273                           
 11274                           ; BSR set to: 0
 11275  0153C0  0E1F               	movlw	31
 11276  0153C2  0100               	movlb	0	; () banked
 11277  0153C4  65C3               	cpfsgt	___fltol@exp1& (0+255),b
 11278  0153C6  D012               	goto	l8106
 11279                           
 11280                           ; BSR set to: 0
 11281  0153C8  0E00               	movlw	0
 11282  0153CA  0100               	movlb	0	; () banked
 11283  0153CC  6FBA               	movwf	?___fltol& (0+255),b
 11284  0153CE  0E00               	movlw	0
 11285  0153D0  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11286  0153D2  0E00               	movlw	0
 11287  0153D4  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11288  0153D6  0E00               	movlw	0
 11289  0153D8  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11290                           
 11291                           ; BSR set to: 0
 11292  0153DA  0012               	return	
 11293  0153DC                     l8104:
 11294                           
 11295                           ; BSR set to: 0
 11296  0153DC  0100               	movlb	0	; () banked
 11297  0153DE  90D8               	bcf	status,0,c
 11298  0153E0  37BA               	rlcf	___fltol@f1& (0+255),f,b
 11299  0153E2  37BB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11300  0153E4  37BC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11301  0153E6  37BD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11302  0153E8  0100               	movlb	0	; () banked
 11303  0153EA  07C3               	decf	___fltol@exp1& (0+255),f,b
 11304  0153EC                     l8106:
 11305                           
 11306                           ; BSR set to: 0
 11307  0153EC  0100               	movlb	0	; () banked
 11308  0153EE  51C3               	movf	___fltol@exp1& (0+255),w,b
 11309  0153F0  0100               	movlb	0	; () banked
 11310  0153F2  A4D8               	btfss	status,2,c
 11311  0153F4  D7F3               	goto	l8104
 11312  0153F6                     l8108:
 11313                           
 11314                           ; BSR set to: 0
 11315  0153F6  0100               	movlb	0	; () banked
 11316  0153F8  51C2               	movf	___fltol@sign1& (0+255),w,b
 11317  0153FA  0100               	movlb	0	; () banked
 11318  0153FC  B4D8               	btfsc	status,2,c
 11319  0153FE  D009               	goto	l8112
 11320                           
 11321                           ; BSR set to: 0
 11322  015400  0100               	movlb	0	; () banked
 11323  015402  1FBD               	comf	(___fltol@f1+3)& (0+255),f,b
 11324  015404  1FBC               	comf	(___fltol@f1+2)& (0+255),f,b
 11325  015406  1FBB               	comf	(___fltol@f1+1)& (0+255),f,b
 11326  015408  6DBA               	negf	___fltol@f1& (0+255),b
 11327  01540A  0E00               	movlw	0
 11328  01540C  23BB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11329  01540E  23BC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11330  015410  23BD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11331  015412                     l8112:
 11332                           
 11333                           ; BSR set to: 0
 11334  015412  C0BA  F0BA         	movff	___fltol@f1,?___fltol
 11335  015416  C0BB  F0BB         	movff	___fltol@f1+1,?___fltol+1
 11336  01541A  C0BC  F0BC         	movff	___fltol@f1+2,?___fltol+2
 11337  01541E  C0BD  F0BD         	movff	___fltol@f1+3,?___fltol+3
 11338  015422  0012               	return	
 11339  015424                     __end_of___fltol:
 11340                           	opt stack 0
 11341                           tblptru	equ	0xFF8
 11342                           tblptrh	equ	0xFF7
 11343                           tblptrl	equ	0xFF6
 11344                           tablat	equ	0xFF5
 11345                           prodh	equ	0xFF4
 11346                           prodl	equ	0xFF3
 11347                           intcon	equ	0xFF2
 11348                           postinc0	equ	0xFEE
 11349                           wreg	equ	0xFE8
 11350                           indf2	equ	0xFDF
 11351                           postinc2	equ	0xFDE
 11352                           fsr2h	equ	0xFDA
 11353                           fsr2l	equ	0xFD9
 11354                           status	equ	0xFD8
 11355                           
 11356 ;; *************** function ___flsub *****************
 11357 ;; Defined at:
 11358 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11359 ;; Parameters:    Size  Location     Type
 11360 ;;  b               4   90[BANK0 ] long 
 11361 ;;  a               4   94[BANK0 ] long 
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;		None
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  4   90[BANK0 ] long 
 11366 ;; Registers used:
 11367 ;;		wreg, status,2, status,0, cstack
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11373 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;Total ram usage:        8 bytes
 11378 ;; Hardware stack levels used:    1
 11379 ;; Hardware stack levels required when called:    4
 11380 ;; This function calls:
 11381 ;;		___fladd
 11382 ;; This function is called by:
 11383 ;;		_sprintf
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387                           	psect	text21
 11388  015B04                     __ptext21:
 11389                           	opt stack 0
 11390  015B04                     ___flsub:
 11391                           	opt stack 24
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;incstack = 0
 11395  015B04  0E00               	movlw	0
 11396  015B06  0100               	movlb	0	; () banked
 11397  015B08  1BBE               	xorwf	___flsub@a& (0+255),f,b
 11398  015B0A  0E00               	movlw	0
 11399  015B0C  1BBF               	xorwf	(___flsub@a+1)& (0+255),f,b
 11400  015B0E  0E00               	movlw	0
 11401  015B10  1BC0               	xorwf	(___flsub@a+2)& (0+255),f,b
 11402  015B12  0E80               	movlw	128
 11403  015B14  1BC1               	xorwf	(___flsub@a+3)& (0+255),f,b
 11404                           
 11405                           ; BSR set to: 0
 11406  015B16  C0BA  F0A6         	movff	___flsub@b,___fladd@b
 11407  015B1A  C0BB  F0A7         	movff	___flsub@b+1,___fladd@b+1
 11408  015B1E  C0BC  F0A8         	movff	___flsub@b+2,___fladd@b+2
 11409  015B22  C0BD  F0A9         	movff	___flsub@b+3,___fladd@b+3
 11410  015B26  C0BE  F0AA         	movff	___flsub@a,___fladd@a
 11411  015B2A  C0BF  F0AB         	movff	___flsub@a+1,___fladd@a+1
 11412  015B2E  C0C0  F0AC         	movff	___flsub@a+2,___fladd@a+2
 11413  015B32  C0C1  F0AD         	movff	___flsub@a+3,___fladd@a+3
 11414  015B36  EC36  F099         	call	___fladd	;wreg free
 11415  015B3A  C0A6  F0BA         	movff	?___fladd,?___flsub
 11416  015B3E  C0A7  F0BB         	movff	?___fladd+1,?___flsub+1
 11417  015B42  C0A8  F0BC         	movff	?___fladd+2,?___flsub+2
 11418  015B46  C0A9  F0BD         	movff	?___fladd+3,?___flsub+3
 11419  015B4A  0012               	return	
 11420  015B4C                     __end_of___flsub:
 11421                           	opt stack 0
 11422                           tblptru	equ	0xFF8
 11423                           tblptrh	equ	0xFF7
 11424                           tblptrl	equ	0xFF6
 11425                           tablat	equ	0xFF5
 11426                           prodh	equ	0xFF4
 11427                           prodl	equ	0xFF3
 11428                           intcon	equ	0xFF2
 11429                           postinc0	equ	0xFEE
 11430                           wreg	equ	0xFE8
 11431                           indf2	equ	0xFDF
 11432                           postinc2	equ	0xFDE
 11433                           fsr2h	equ	0xFDA
 11434                           fsr2l	equ	0xFD9
 11435                           status	equ	0xFD8
 11436                           
 11437 ;; *************** function ___fladd *****************
 11438 ;; Defined at:
 11439 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11440 ;; Parameters:    Size  Location     Type
 11441 ;;  b               4   70[BANK0 ] long 
 11442 ;;  a               4   74[BANK0 ] long 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;  grs             1   89[BANK0 ] unsigned char 
 11445 ;;  bexp            1   88[BANK0 ] unsigned char 
 11446 ;;  aexp            1   87[BANK0 ] unsigned char 
 11447 ;;  signs           1   86[BANK0 ] unsigned char 
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  4   70[BANK0 ] unsigned char 
 11450 ;; Registers used:
 11451 ;;		wreg, status,2, status,0
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11457 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;Total ram usage:       20 bytes
 11462 ;; Hardware stack levels used:    1
 11463 ;; Hardware stack levels required when called:    3
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_main
 11468 ;;		_sprintf
 11469 ;;		___flsub
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text22
 11474  01326C                     __ptext22:
 11475                           	opt stack 0
 11476  01326C                     ___fladd:
 11477                           	opt stack 27
 11478                           
 11479                           ;incstack = 0
 11480  01326C  0100               	movlb	0	; () banked
 11481  01326E  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11482  013270  0B80               	andlw	128
 11483  013272  0100               	movlb	0	; () banked
 11484  013274  6FB6               	movwf	___fladd@signs& (0+255),b
 11485  013276  0100               	movlb	0	; () banked
 11486  013278  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11487  01327A  25A9               	addwf	(___fladd@b+3)& (0+255),w,b
 11488  01327C  0100               	movlb	0	; () banked
 11489  01327E  6FB8               	movwf	___fladd@bexp& (0+255),b
 11490                           
 11491                           ; BSR set to: 0
 11492  013280  0100               	movlb	0	; () banked
 11493  013282  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 11494  013284  D002               	goto	l7400
 11495                           
 11496                           ; BSR set to: 0
 11497  013286  0100               	movlb	0	; () banked
 11498  013288  81B8               	bsf	___fladd@bexp& (0+255),0,b
 11499  01328A                     l7400:
 11500                           
 11501                           ; BSR set to: 0
 11502  01328A  0100               	movlb	0	; () banked
 11503  01328C  51B8               	movf	___fladd@bexp& (0+255),w,b
 11504  01328E  0100               	movlb	0	; () banked
 11505  013290  B4D8               	btfsc	status,2,c
 11506  013292  D012               	goto	l7410
 11507                           
 11508                           ; BSR set to: 0
 11509  013294  0100               	movlb	0	; () banked
 11510  013296  29B8               	incf	___fladd@bexp& (0+255),w,b
 11511  013298  A4D8               	btfss	status,2,c
 11512  01329A  D009               	goto	l7406
 11513                           
 11514                           ; BSR set to: 0
 11515  01329C  0E00               	movlw	0
 11516  01329E  0100               	movlb	0	; () banked
 11517  0132A0  6FA6               	movwf	___fladd@b& (0+255),b
 11518  0132A2  0E00               	movlw	0
 11519  0132A4  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11520  0132A6  0E00               	movlw	0
 11521  0132A8  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11522  0132AA  0E00               	movlw	0
 11523  0132AC  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11524  0132AE                     l7406:
 11525                           
 11526                           ; BSR set to: 0
 11527  0132AE  0100               	movlb	0	; () banked
 11528  0132B0  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 11529                           
 11530                           ; BSR set to: 0
 11531  0132B2  0E00               	movlw	0
 11532  0132B4  0100               	movlb	0	; () banked
 11533  0132B6  D008               	goto	L9
 11534  0132B8                     l7410:
 11535                           
 11536                           ; BSR set to: 0
 11537  0132B8  0E00               	movlw	0
 11538  0132BA  0100               	movlb	0	; () banked
 11539  0132BC  6FA6               	movwf	___fladd@b& (0+255),b
 11540  0132BE  0E00               	movlw	0
 11541  0132C0  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11542  0132C2  0E00               	movlw	0
 11543  0132C4  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11544  0132C6  0E00               	movlw	0
 11545  0132C8                     L9:
 11546  0132C8  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11547                           
 11548                           ; BSR set to: 0
 11549                           
 11550                           ; BSR set to: 0
 11551  0132CA  0100               	movlb	0	; () banked
 11552  0132CC  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11553  0132CE  0B80               	andlw	128
 11554  0132D0  0100               	movlb	0	; () banked
 11555  0132D2  6FB7               	movwf	___fladd@aexp& (0+255),b
 11556                           
 11557                           ; BSR set to: 0
 11558  0132D4  0100               	movlb	0	; () banked
 11559  0132D6  51B6               	movf	___fladd@signs& (0+255),w,b
 11560  0132D8  0100               	movlb	0	; () banked
 11561  0132DA  19B7               	xorwf	___fladd@aexp& (0+255),w,b
 11562  0132DC  B4D8               	btfsc	status,2,c
 11563  0132DE  D002               	goto	l7418
 11564                           
 11565                           ; BSR set to: 0
 11566  0132E0  0100               	movlb	0	; () banked
 11567  0132E2  8DB6               	bsf	___fladd@signs& (0+255),6,b
 11568  0132E4                     l7418:
 11569                           
 11570                           ; BSR set to: 0
 11571  0132E4  0100               	movlb	0	; () banked
 11572  0132E6  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11573  0132E8  25AD               	addwf	(___fladd@a+3)& (0+255),w,b
 11574  0132EA  0100               	movlb	0	; () banked
 11575  0132EC  6FB7               	movwf	___fladd@aexp& (0+255),b
 11576                           
 11577                           ; BSR set to: 0
 11578  0132EE  0100               	movlb	0	; () banked
 11579  0132F0  AFAC               	btfss	(___fladd@a+2)& (0+255),7,b
 11580  0132F2  D002               	goto	l7424
 11581                           
 11582                           ; BSR set to: 0
 11583  0132F4  0100               	movlb	0	; () banked
 11584  0132F6  81B7               	bsf	___fladd@aexp& (0+255),0,b
 11585  0132F8                     l7424:
 11586                           
 11587                           ; BSR set to: 0
 11588  0132F8  0100               	movlb	0	; () banked
 11589  0132FA  51B7               	movf	___fladd@aexp& (0+255),w,b
 11590  0132FC  0100               	movlb	0	; () banked
 11591  0132FE  B4D8               	btfsc	status,2,c
 11592  013300  D012               	goto	l7434
 11593                           
 11594                           ; BSR set to: 0
 11595  013302  0100               	movlb	0	; () banked
 11596  013304  29B7               	incf	___fladd@aexp& (0+255),w,b
 11597  013306  A4D8               	btfss	status,2,c
 11598  013308  D009               	goto	l7430
 11599                           
 11600                           ; BSR set to: 0
 11601  01330A  0E00               	movlw	0
 11602  01330C  0100               	movlb	0	; () banked
 11603  01330E  6FAA               	movwf	___fladd@a& (0+255),b
 11604  013310  0E00               	movlw	0
 11605  013312  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11606  013314  0E00               	movlw	0
 11607  013316  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11608  013318  0E00               	movlw	0
 11609  01331A  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11610  01331C                     l7430:
 11611                           
 11612                           ; BSR set to: 0
 11613  01331C  0100               	movlb	0	; () banked
 11614  01331E  8FAC               	bsf	(___fladd@a+2)& (0+255),7,b
 11615                           
 11616                           ; BSR set to: 0
 11617  013320  0E00               	movlw	0
 11618  013322  0100               	movlb	0	; () banked
 11619  013324  D008               	goto	L10
 11620  013326                     l7434:
 11621                           
 11622                           ; BSR set to: 0
 11623  013326  0E00               	movlw	0
 11624  013328  0100               	movlb	0	; () banked
 11625  01332A  6FAA               	movwf	___fladd@a& (0+255),b
 11626  01332C  0E00               	movlw	0
 11627  01332E  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11628  013330  0E00               	movlw	0
 11629  013332  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11630  013334  0E00               	movlw	0
 11631  013336                     L10:
 11632  013336  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11633                           
 11634                           ; BSR set to: 0
 11635                           
 11636                           ; BSR set to: 0
 11637  013338  0100               	movlb	0	; () banked
 11638  01333A  51B8               	movf	___fladd@bexp& (0+255),w,b
 11639  01333C  0100               	movlb	0	; () banked
 11640  01333E  5DB7               	subwf	___fladd@aexp& (0+255),w,b
 11641  013340  B0D8               	btfsc	status,0,c
 11642  013342  D024               	goto	l7472
 11643                           
 11644                           ; BSR set to: 0
 11645  013344  0100               	movlb	0	; () banked
 11646  013346  ADB6               	btfss	___fladd@signs& (0+255),6,b
 11647  013348  D003               	goto	l7442
 11648                           
 11649                           ; BSR set to: 0
 11650  01334A  0E80               	movlw	128
 11651  01334C  0100               	movlb	0	; () banked
 11652  01334E  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11653  013350                     l7442:
 11654                           
 11655                           ; BSR set to: 0
 11656  013350  C0B8  F0B9         	movff	___fladd@bexp,___fladd@grs
 11657                           
 11658                           ; BSR set to: 0
 11659  013354  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11660                           
 11661                           ; BSR set to: 0
 11662  013358  C0B9  F0B7         	movff	___fladd@grs,___fladd@aexp
 11663                           
 11664                           ; BSR set to: 0
 11665  01335C  C0A6  F0B9         	movff	___fladd@b,___fladd@grs
 11666                           
 11667                           ; BSR set to: 0
 11668  013360  C0AA  F0A6         	movff	___fladd@a,___fladd@b
 11669                           
 11670                           ; BSR set to: 0
 11671  013364  C0B9  F0AA         	movff	___fladd@grs,___fladd@a
 11672                           
 11673                           ; BSR set to: 0
 11674  013368  C0A7  F0B9         	movff	___fladd@b+1,___fladd@grs
 11675                           
 11676                           ; BSR set to: 0
 11677  01336C  C0AB  F0A7         	movff	___fladd@a+1,___fladd@b+1
 11678                           
 11679                           ; BSR set to: 0
 11680  013370  C0B9  F0AB         	movff	___fladd@grs,___fladd@a+1
 11681                           
 11682                           ; BSR set to: 0
 11683  013374  C0A8  F0B9         	movff	___fladd@b+2,___fladd@grs
 11684                           
 11685                           ; BSR set to: 0
 11686  013378  C0AC  F0A8         	movff	___fladd@a+2,___fladd@b+2
 11687                           
 11688                           ; BSR set to: 0
 11689  01337C  C0B9  F0AC         	movff	___fladd@grs,___fladd@a+2
 11690                           
 11691                           ; BSR set to: 0
 11692  013380  C0A9  F0B9         	movff	___fladd@b+3,___fladd@grs
 11693                           
 11694                           ; BSR set to: 0
 11695  013384  C0AD  F0A9         	movff	___fladd@a+3,___fladd@b+3
 11696                           
 11697                           ; BSR set to: 0
 11698  013388  C0B9  F0AD         	movff	___fladd@grs,___fladd@a+3
 11699  01338C                     l7472:
 11700                           
 11701                           ; BSR set to: 0
 11702  01338C  0E00               	movlw	0
 11703  01338E  0100               	movlb	0	; () banked
 11704  013390  6FB9               	movwf	___fladd@grs& (0+255),b
 11705                           
 11706                           ; BSR set to: 0
 11707  013392  0100               	movlb	0	; () banked
 11708  013394  51B8               	movf	___fladd@bexp& (0+255),w,b
 11709  013396  0100               	movlb	0	; () banked
 11710  013398  6FAE               	movwf	??___fladd& (0+255),b
 11711  01339A  6BAF               	clrf	(??___fladd+1)& (0+255),b
 11712  01339C  0100               	movlb	0	; () banked
 11713  01339E  1FAE               	comf	??___fladd& (0+255),f,b
 11714  0133A0  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11715  0133A2  4BAE               	infsnz	??___fladd& (0+255),f,b
 11716  0133A4  2BAF               	incf	(??___fladd+1)& (0+255),f,b
 11717  0133A6  0100               	movlb	0	; () banked
 11718  0133A8  51B7               	movf	___fladd@aexp& (0+255),w,b
 11719  0133AA  0100               	movlb	0	; () banked
 11720  0133AC  6FB0               	movwf	(??___fladd+2)& (0+255),b
 11721  0133AE  6BB1               	clrf	(??___fladd+3)& (0+255),b
 11722  0133B0  0100               	movlb	0	; () banked
 11723  0133B2  51AE               	movf	??___fladd& (0+255),w,b
 11724  0133B4  0100               	movlb	0	; () banked
 11725  0133B6  27B0               	addwf	(??___fladd+2)& (0+255),f,b
 11726  0133B8  0100               	movlb	0	; () banked
 11727  0133BA  51AF               	movf	(??___fladd+1)& (0+255),w,b
 11728  0133BC  0100               	movlb	0	; () banked
 11729  0133BE  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11730  0133C0  0100               	movlb	0	; () banked
 11731  0133C2  BFB1               	btfsc	(??___fladd+3)& (0+255),7,b
 11732  0133C4  D03D               	goto	l1473
 11733  0133C6  0100               	movlb	0	; () banked
 11734  0133C8  51B1               	movf	(??___fladd+3)& (0+255),w,b
 11735  0133CA  E105               	bnz	u9780
 11736  0133CC  0E1A               	movlw	26
 11737  0133CE  0100               	movlb	0	; () banked
 11738  0133D0  5DB0               	subwf	(??___fladd+2)& (0+255),w,b
 11739  0133D2  A0D8               	btfss	status,0,c
 11740  0133D4  D035               	goto	l1473
 11741  0133D6                     u9780:
 11742                           
 11743                           ; BSR set to: 0
 11744  0133D6  0100               	movlb	0	; () banked
 11745  0133D8  51A6               	movf	___fladd@b& (0+255),w,b
 11746  0133DA  0100               	movlb	0	; () banked
 11747  0133DC  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 11748  0133DE  0100               	movlb	0	; () banked
 11749  0133E0  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 11750  0133E2  0100               	movlb	0	; () banked
 11751  0133E4  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 11752  0133E6  B4D8               	btfsc	status,2,c
 11753  0133E8  D002               	goto	u9790
 11754  0133EA  0E01               	movlw	1
 11755  0133EC  D001               	goto	u9800
 11756  0133EE                     u9790:
 11757  0133EE  0E00               	movlw	0
 11758  0133F0                     u9800:
 11759  0133F0  0100               	movlb	0	; () banked
 11760  0133F2  6FB9               	movwf	___fladd@grs& (0+255),b
 11761                           
 11762                           ; BSR set to: 0
 11763  0133F4  0E00               	movlw	0
 11764  0133F6  0100               	movlb	0	; () banked
 11765  0133F8  6FA6               	movwf	___fladd@b& (0+255),b
 11766  0133FA  0E00               	movlw	0
 11767  0133FC  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11768  0133FE  0E00               	movlw	0
 11769  013400  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11770  013402  0E00               	movlw	0
 11771  013404  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11772                           
 11773                           ; BSR set to: 0
 11774  013406  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11775  01340A  D020               	goto	l1472
 11776  01340C                     l1474:
 11777                           
 11778                           ; BSR set to: 0
 11779  01340C  0100               	movlb	0	; () banked
 11780  01340E  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11781  013410  D007               	goto	l7484
 11782                           
 11783                           ; BSR set to: 0
 11784  013412  0100               	movlb	0	; () banked
 11785  013414  90D8               	bcf	status,0,c
 11786  013416  31B9               	rrcf	___fladd@grs& (0+255),w,b
 11787  013418  0901               	iorlw	1
 11788  01341A  0100               	movlb	0	; () banked
 11789  01341C  6FB9               	movwf	___fladd@grs& (0+255),b
 11790  01341E  D003               	goto	l7486
 11791  013420                     l7484:
 11792                           
 11793                           ; BSR set to: 0
 11794  013420  0100               	movlb	0	; () banked
 11795  013422  90D8               	bcf	status,0,c
 11796  013424  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11797  013426                     l7486:
 11798                           
 11799                           ; BSR set to: 0
 11800  013426  0100               	movlb	0	; () banked
 11801  013428  A1A6               	btfss	___fladd@b& (0+255),0,b
 11802  01342A  D002               	goto	l7490
 11803                           
 11804                           ; BSR set to: 0
 11805  01342C  0100               	movlb	0	; () banked
 11806  01342E  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11807  013430                     l7490:
 11808                           
 11809                           ; BSR set to: 0
 11810  013430  0100               	movlb	0	; () banked
 11811  013432  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11812  013434  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11813  013436  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11814  013438  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11815  01343A  33A6               	rrcf	___fladd@b& (0+255),f,b
 11816                           
 11817                           ; BSR set to: 0
 11818  01343C  0100               	movlb	0	; () banked
 11819  01343E  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11820  013440                     l1473:
 11821                           
 11822                           ; BSR set to: 0
 11823  013440  0100               	movlb	0	; () banked
 11824  013442  51B7               	movf	___fladd@aexp& (0+255),w,b
 11825  013444  0100               	movlb	0	; () banked
 11826  013446  5DB8               	subwf	___fladd@bexp& (0+255),w,b
 11827  013448  A0D8               	btfss	status,0,c
 11828  01344A  D7E0               	goto	l1474
 11829  01344C                     l1472:
 11830                           
 11831                           ; BSR set to: 0
 11832  01344C  0100               	movlb	0	; () banked
 11833  01344E  BDB6               	btfsc	___fladd@signs& (0+255),6,b
 11834  013450  D03F               	goto	l7518
 11835                           
 11836                           ; BSR set to: 0
 11837  013452  0100               	movlb	0	; () banked
 11838  013454  51B8               	movf	___fladd@bexp& (0+255),w,b
 11839  013456  0100               	movlb	0	; () banked
 11840  013458  A4D8               	btfss	status,2,c
 11841  01345A  D00A               	goto	l7500
 11842                           
 11843                           ; BSR set to: 0
 11844  01345C  0E00               	movlw	0
 11845  01345E  0100               	movlb	0	; () banked
 11846  013460  6FA6               	movwf	?___fladd& (0+255),b
 11847  013462  0E00               	movlw	0
 11848  013464  6FA7               	movwf	(?___fladd+1)& (0+255),b
 11849  013466  0E00               	movlw	0
 11850  013468  6FA8               	movwf	(?___fladd+2)& (0+255),b
 11851  01346A  0E00               	movlw	0
 11852  01346C  6FA9               	movwf	(?___fladd+3)& (0+255),b
 11853                           
 11854                           ; BSR set to: 0
 11855  01346E  0012               	return	
 11856  013470                     l7500:
 11857                           
 11858                           ; BSR set to: 0
 11859  013470  0100               	movlb	0	; () banked
 11860  013472  51AA               	movf	___fladd@a& (0+255),w,b
 11861  013474  0100               	movlb	0	; () banked
 11862  013476  27A6               	addwf	___fladd@b& (0+255),f,b
 11863  013478  0100               	movlb	0	; () banked
 11864  01347A  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11865  01347C  0100               	movlb	0	; () banked
 11866  01347E  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11867  013480  0100               	movlb	0	; () banked
 11868  013482  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11869  013484  0100               	movlb	0	; () banked
 11870  013486  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11871  013488  0100               	movlb	0	; () banked
 11872  01348A  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11873  01348C  0100               	movlb	0	; () banked
 11874  01348E  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11875                           
 11876                           ; BSR set to: 0
 11877  013490  0100               	movlb	0	; () banked
 11878  013492  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 11879  013494  D0CC               	goto	l7554
 11880                           
 11881                           ; BSR set to: 0
 11882  013496  0100               	movlb	0	; () banked
 11883  013498  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11884  01349A  D009               	goto	l7508
 11885                           
 11886                           ; BSR set to: 0
 11887  01349C  0100               	movlb	0	; () banked
 11888  01349E  90D8               	bcf	status,0,c
 11889  0134A0  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11890  0134A2  0100               	movlb	0	; () banked
 11891  0134A4  51B9               	movf	___fladd@grs& (0+255),w,b
 11892  0134A6  0901               	iorlw	1
 11893  0134A8  0100               	movlb	0	; () banked
 11894  0134AA  6FB9               	movwf	___fladd@grs& (0+255),b
 11895  0134AC  D003               	goto	l7510
 11896  0134AE                     l7508:
 11897                           
 11898                           ; BSR set to: 0
 11899  0134AE  0100               	movlb	0	; () banked
 11900  0134B0  90D8               	bcf	status,0,c
 11901  0134B2  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11902  0134B4                     l7510:
 11903                           
 11904                           ; BSR set to: 0
 11905  0134B4  0100               	movlb	0	; () banked
 11906  0134B6  A1A6               	btfss	___fladd@b& (0+255),0,b
 11907  0134B8  D002               	goto	l7514
 11908                           
 11909                           ; BSR set to: 0
 11910  0134BA  0100               	movlb	0	; () banked
 11911  0134BC  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11912  0134BE                     l7514:
 11913                           
 11914                           ; BSR set to: 0
 11915  0134BE  0100               	movlb	0	; () banked
 11916  0134C0  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11917  0134C2  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11918  0134C4  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11919  0134C6  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11920  0134C8  33A6               	rrcf	___fladd@b& (0+255),f,b
 11921                           
 11922                           ; BSR set to: 0
 11923  0134CA  0100               	movlb	0	; () banked
 11924  0134CC  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11925                           
 11926                           ; BSR set to: 0
 11927  0134CE  D0AF               	goto	l7554
 11928  0134D0                     l7518:
 11929                           
 11930                           ; BSR set to: 0
 11931  0134D0  0100               	movlb	0	; () banked
 11932  0134D2  51AA               	movf	___fladd@a& (0+255),w,b
 11933  0134D4  0100               	movlb	0	; () banked
 11934  0134D6  5DA6               	subwf	___fladd@b& (0+255),w,b
 11935  0134D8  0100               	movlb	0	; () banked
 11936  0134DA  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11937  0134DC  0100               	movlb	0	; () banked
 11938  0134DE  59A7               	subwfb	(___fladd@b+1)& (0+255),w,b
 11939  0134E0  0100               	movlb	0	; () banked
 11940  0134E2  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11941  0134E4  0100               	movlb	0	; () banked
 11942  0134E6  59A8               	subwfb	(___fladd@b+2)& (0+255),w,b
 11943  0134E8  0100               	movlb	0	; () banked
 11944  0134EA  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11945  0134EC  0A80               	xorlw	128
 11946  0134EE  0100               	movlb	0	; () banked
 11947  0134F0  6FAE               	movwf	??___fladd& (0+255),b
 11948  0134F2  0100               	movlb	0	; () banked
 11949  0134F4  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11950  0134F6  0A80               	xorlw	128
 11951  0134F8  0100               	movlb	0	; () banked
 11952  0134FA  59AE               	subwfb	??___fladd& (0+255),w,b
 11953  0134FC  B0D8               	btfsc	status,0,c
 11954  0134FE  D050               	goto	l7528
 11955                           
 11956                           ; BSR set to: 0
 11957  013500  C0A6  F0AE         	movff	___fladd@b,??___fladd
 11958  013504  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 11959  013508  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 11960  01350C  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 11961  013510  0100               	movlb	0	; () banked
 11962  013512  1FAE               	comf	??___fladd& (0+255),f,b
 11963  013514  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11964  013516  1FB0               	comf	(??___fladd+2)& (0+255),f,b
 11965  013518  1FB1               	comf	(??___fladd+3)& (0+255),f,b
 11966  01351A  2BAE               	incf	??___fladd& (0+255),f,b
 11967  01351C  0E00               	movlw	0
 11968  01351E  23AF               	addwfc	(??___fladd+1)& (0+255),f,b
 11969  013520  23B0               	addwfc	(??___fladd+2)& (0+255),f,b
 11970  013522  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11971  013524  0100               	movlb	0	; () banked
 11972  013526  51AA               	movf	___fladd@a& (0+255),w,b
 11973  013528  0100               	movlb	0	; () banked
 11974  01352A  25AE               	addwf	??___fladd& (0+255),w,b
 11975  01352C  0100               	movlb	0	; () banked
 11976  01352E  6FB2               	movwf	(??___fladd+4)& (0+255),b
 11977  013530  0100               	movlb	0	; () banked
 11978  013532  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11979  013534  0100               	movlb	0	; () banked
 11980  013536  21AF               	addwfc	(??___fladd+1)& (0+255),w,b
 11981  013538  0100               	movlb	0	; () banked
 11982  01353A  6FB3               	movwf	(??___fladd+5)& (0+255),b
 11983  01353C  0100               	movlb	0	; () banked
 11984  01353E  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11985  013540  0100               	movlb	0	; () banked
 11986  013542  21B0               	addwfc	(??___fladd+2)& (0+255),w,b
 11987  013544  0100               	movlb	0	; () banked
 11988  013546  6FB4               	movwf	(??___fladd+6)& (0+255),b
 11989  013548  0100               	movlb	0	; () banked
 11990  01354A  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11991  01354C  0100               	movlb	0	; () banked
 11992  01354E  21B1               	addwfc	(??___fladd+3)& (0+255),w,b
 11993  013550  0100               	movlb	0	; () banked
 11994  013552  6FB5               	movwf	(??___fladd+7)& (0+255),b
 11995  013554  0EFF               	movlw	255
 11996  013556  0100               	movlb	0	; () banked
 11997  013558  25B2               	addwf	(??___fladd+4)& (0+255),w,b
 11998  01355A  0100               	movlb	0	; () banked
 11999  01355C  6FA6               	movwf	___fladd@b& (0+255),b
 12000  01355E  0EFF               	movlw	255
 12001  013560  0100               	movlb	0	; () banked
 12002  013562  21B3               	addwfc	(??___fladd+5)& (0+255),w,b
 12003  013564  0100               	movlb	0	; () banked
 12004  013566  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 12005  013568  0EFF               	movlw	255
 12006  01356A  0100               	movlb	0	; () banked
 12007  01356C  21B4               	addwfc	(??___fladd+6)& (0+255),w,b
 12008  01356E  0100               	movlb	0	; () banked
 12009  013570  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 12010  013572  0EFF               	movlw	255
 12011  013574  0100               	movlb	0	; () banked
 12012  013576  21B5               	addwfc	(??___fladd+7)& (0+255),w,b
 12013  013578  0100               	movlb	0	; () banked
 12014  01357A  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12015  01357C  0E80               	movlw	128
 12016  01357E  0100               	movlb	0	; () banked
 12017  013580  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 12018                           
 12019                           ; BSR set to: 0
 12020  013582  0100               	movlb	0	; () banked
 12021  013584  6DB9               	negf	___fladd@grs& (0+255),b
 12022                           
 12023                           ; BSR set to: 0
 12024  013586  0100               	movlb	0	; () banked
 12025  013588  51B9               	movf	___fladd@grs& (0+255),w,b
 12026  01358A  0100               	movlb	0	; () banked
 12027  01358C  A4D8               	btfss	status,2,c
 12028  01358E  D018               	goto	l1489
 12029                           
 12030                           ; BSR set to: 0
 12031  013590  0E01               	movlw	1
 12032  013592  0100               	movlb	0	; () banked
 12033  013594  27A6               	addwf	___fladd@b& (0+255),f,b
 12034  013596  0E00               	movlw	0
 12035  013598  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 12036  01359A  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 12037  01359C  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 12038                           
 12039                           ; BSR set to: 0
 12040  01359E  D010               	goto	l1489
 12041  0135A0                     l7528:
 12042                           
 12043                           ; BSR set to: 0
 12044  0135A0  0100               	movlb	0	; () banked
 12045  0135A2  51AA               	movf	___fladd@a& (0+255),w,b
 12046  0135A4  0100               	movlb	0	; () banked
 12047  0135A6  5FA6               	subwf	___fladd@b& (0+255),f,b
 12048  0135A8  0100               	movlb	0	; () banked
 12049  0135AA  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 12050  0135AC  0100               	movlb	0	; () banked
 12051  0135AE  5BA7               	subwfb	(___fladd@b+1)& (0+255),f,b
 12052  0135B0  0100               	movlb	0	; () banked
 12053  0135B2  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 12054  0135B4  0100               	movlb	0	; () banked
 12055  0135B6  5BA8               	subwfb	(___fladd@b+2)& (0+255),f,b
 12056  0135B8  0100               	movlb	0	; () banked
 12057  0135BA  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 12058  0135BC  0100               	movlb	0	; () banked
 12059  0135BE  5BA9               	subwfb	(___fladd@b+3)& (0+255),f,b
 12060  0135C0                     l1489:
 12061                           
 12062                           ; BSR set to: 0
 12063  0135C0  0100               	movlb	0	; () banked
 12064  0135C2  51A6               	movf	___fladd@b& (0+255),w,b
 12065  0135C4  0100               	movlb	0	; () banked
 12066  0135C6  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 12067  0135C8  0100               	movlb	0	; () banked
 12068  0135CA  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 12069  0135CC  0100               	movlb	0	; () banked
 12070  0135CE  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 12071  0135D0  A4D8               	btfss	status,2,c
 12072  0135D2  D02A               	goto	l7552
 12073                           
 12074                           ; BSR set to: 0
 12075  0135D4  0100               	movlb	0	; () banked
 12076  0135D6  51B9               	movf	___fladd@grs& (0+255),w,b
 12077  0135D8  0100               	movlb	0	; () banked
 12078  0135DA  A4D8               	btfss	status,2,c
 12079  0135DC  D025               	goto	l7552
 12080                           
 12081                           ; BSR set to: 0
 12082  0135DE  0E00               	movlw	0
 12083  0135E0  0100               	movlb	0	; () banked
 12084  0135E2  6FA6               	movwf	?___fladd& (0+255),b
 12085  0135E4  0E00               	movlw	0
 12086  0135E6  6FA7               	movwf	(?___fladd+1)& (0+255),b
 12087  0135E8  0E00               	movlw	0
 12088  0135EA  6FA8               	movwf	(?___fladd+2)& (0+255),b
 12089  0135EC  0E00               	movlw	0
 12090  0135EE  6FA9               	movwf	(?___fladd+3)& (0+255),b
 12091                           
 12092                           ; BSR set to: 0
 12093  0135F0  0012               	return	
 12094  0135F2                     l7536:
 12095                           
 12096                           ; BSR set to: 0
 12097  0135F2  0100               	movlb	0	; () banked
 12098  0135F4  90D8               	bcf	status,0,c
 12099  0135F6  37A6               	rlcf	___fladd@b& (0+255),f,b
 12100  0135F8  37A7               	rlcf	(___fladd@b+1)& (0+255),f,b
 12101  0135FA  37A8               	rlcf	(___fladd@b+2)& (0+255),f,b
 12102  0135FC  37A9               	rlcf	(___fladd@b+3)& (0+255),f,b
 12103                           
 12104                           ; BSR set to: 0
 12105  0135FE  0100               	movlb	0	; () banked
 12106  013600  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12107  013602  D002               	goto	l7542
 12108                           
 12109                           ; BSR set to: 0
 12110  013604  0100               	movlb	0	; () banked
 12111  013606  81A6               	bsf	___fladd@b& (0+255),0,b
 12112  013608                     l7542:
 12113                           
 12114                           ; BSR set to: 0
 12115  013608  0100               	movlb	0	; () banked
 12116  01360A  A1B9               	btfss	___fladd@grs& (0+255),0,b
 12117  01360C  D003               	goto	l7546
 12118                           
 12119                           ; BSR set to: 0
 12120  01360E  80D8               	bsf	status,0,c
 12121  013610  0100               	movlb	0	; () banked
 12122  013612  D002               	goto	L11
 12123  013614                     l7546:
 12124                           
 12125                           ; BSR set to: 0
 12126  013614  0100               	movlb	0	; () banked
 12127  013616  90D8               	bcf	status,0,c
 12128  013618                     L11:
 12129  013618  37B9               	rlcf	___fladd@grs& (0+255),f,b
 12130                           
 12131                           ; BSR set to: 0
 12132                           
 12133                           ; BSR set to: 0
 12134  01361A  0100               	movlb	0	; () banked
 12135  01361C  51B8               	movf	___fladd@bexp& (0+255),w,b
 12136  01361E  0100               	movlb	0	; () banked
 12137  013620  B4D8               	btfsc	status,2,c
 12138  013622  D002               	goto	l7552
 12139                           
 12140                           ; BSR set to: 0
 12141  013624  0100               	movlb	0	; () banked
 12142  013626  07B8               	decf	___fladd@bexp& (0+255),f,b
 12143  013628                     l7552:
 12144                           
 12145                           ; BSR set to: 0
 12146  013628  0100               	movlb	0	; () banked
 12147  01362A  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 12148  01362C  D7E2               	goto	l7536
 12149  01362E                     l7554:
 12150                           
 12151                           ; BSR set to: 0
 12152  01362E  0E00               	movlw	0
 12153  013630  0100               	movlb	0	; () banked
 12154  013632  6FB7               	movwf	___fladd@aexp& (0+255),b
 12155                           
 12156                           ; BSR set to: 0
 12157  013634  0100               	movlb	0	; () banked
 12158  013636  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12159  013638  D00D               	goto	l1498
 12160                           
 12161                           ; BSR set to: 0
 12162  01363A  C0B9  F0AE         	movff	___fladd@grs,??___fladd
 12163  01363E  0E7F               	movlw	127
 12164  013640  0100               	movlb	0	; () banked
 12165  013642  17AE               	andwf	??___fladd& (0+255),f,b
 12166  013644  A4D8               	btfss	status,2,c
 12167  013646  D003               	goto	l7562
 12168                           
 12169                           ; BSR set to: 0
 12170                           
 12171                           ; BSR set to: 0
 12172  013648  0100               	movlb	0	; () banked
 12173  01364A  A1A6               	btfss	___fladd@b& (0+255),0,b
 12174  01364C  D003               	goto	l1498
 12175  01364E                     l7562:
 12176                           
 12177                           ; BSR set to: 0
 12178  01364E  0E01               	movlw	1
 12179  013650  0100               	movlb	0	; () banked
 12180  013652  6FB7               	movwf	___fladd@aexp& (0+255),b
 12181  013654                     l1498:
 12182                           
 12183                           ; BSR set to: 0
 12184  013654  0100               	movlb	0	; () banked
 12185  013656  51B7               	movf	___fladd@aexp& (0+255),w,b
 12186  013658  0100               	movlb	0	; () banked
 12187  01365A  B4D8               	btfsc	status,2,c
 12188  01365C  D026               	goto	l7572
 12189                           
 12190                           ; BSR set to: 0
 12191  01365E  0E01               	movlw	1
 12192  013660  0100               	movlb	0	; () banked
 12193  013662  27A6               	addwf	___fladd@b& (0+255),f,b
 12194  013664  0E00               	movlw	0
 12195  013666  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 12196  013668  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 12197  01366A  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 12198                           
 12199                           ; BSR set to: 0
 12200  01366C  0100               	movlb	0	; () banked
 12201  01366E  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 12202  013670  D01C               	goto	l7572
 12203                           
 12204                           ; BSR set to: 0
 12205  013672  C0A6  F0AE         	movff	___fladd@b,??___fladd
 12206  013676  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 12207  01367A  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 12208  01367E  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 12209  013682  0100               	movlb	0	; () banked
 12210  013684  35B1               	rlcf	(??___fladd+3)& (0+255),w,b
 12211  013686  33B1               	rrcf	(??___fladd+3)& (0+255),f,b
 12212  013688  33B0               	rrcf	(??___fladd+2)& (0+255),f,b
 12213  01368A  33AF               	rrcf	(??___fladd+1)& (0+255),f,b
 12214  01368C  33AE               	rrcf	??___fladd& (0+255),f,b
 12215  01368E  C0AE  F0A6         	movff	??___fladd,___fladd@b
 12216  013692  C0AF  F0A7         	movff	??___fladd+1,___fladd@b+1
 12217  013696  C0B0  F0A8         	movff	??___fladd+2,___fladd@b+2
 12218  01369A  C0B1  F0A9         	movff	??___fladd+3,___fladd@b+3
 12219  01369E  0100               	movlb	0	; () banked
 12220  0136A0  29B8               	incf	___fladd@bexp& (0+255),w,b
 12221  0136A2  B4D8               	btfsc	status,2,c
 12222  0136A4  D002               	goto	l7572
 12223                           
 12224                           ; BSR set to: 0
 12225  0136A6  0100               	movlb	0	; () banked
 12226  0136A8  2BB8               	incf	___fladd@bexp& (0+255),f,b
 12227  0136AA                     l7572:
 12228                           
 12229                           ; BSR set to: 0
 12230  0136AA  0100               	movlb	0	; () banked
 12231  0136AC  29B8               	incf	___fladd@bexp& (0+255),w,b
 12232  0136AE  B4D8               	btfsc	status,2,c
 12233  0136B0  D005               	goto	l7576
 12234                           
 12235                           ; BSR set to: 0
 12236  0136B2  0100               	movlb	0	; () banked
 12237  0136B4  51B8               	movf	___fladd@bexp& (0+255),w,b
 12238  0136B6  0100               	movlb	0	; () banked
 12239  0136B8  A4D8               	btfss	status,2,c
 12240  0136BA  D011               	goto	l7580
 12241  0136BC                     l7576:
 12242                           
 12243                           ; BSR set to: 0
 12244  0136BC  0E00               	movlw	0
 12245  0136BE  0100               	movlb	0	; () banked
 12246  0136C0  6FA6               	movwf	___fladd@b& (0+255),b
 12247  0136C2  0E00               	movlw	0
 12248  0136C4  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 12249  0136C6  0E00               	movlw	0
 12250  0136C8  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 12251  0136CA  0E00               	movlw	0
 12252  0136CC  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12253  0136CE  0100               	movlb	0	; () banked
 12254  0136D0  51B8               	movf	___fladd@bexp& (0+255),w,b
 12255  0136D2  0100               	movlb	0	; () banked
 12256  0136D4  A4D8               	btfss	status,2,c
 12257  0136D6  D003               	goto	l7580
 12258                           
 12259                           ; BSR set to: 0
 12260  0136D8  0E00               	movlw	0
 12261  0136DA  0100               	movlb	0	; () banked
 12262  0136DC  6FB6               	movwf	___fladd@signs& (0+255),b
 12263  0136DE                     l7580:
 12264                           
 12265                           ; BSR set to: 0
 12266  0136DE  0100               	movlb	0	; () banked
 12267  0136E0  A1B8               	btfss	___fladd@bexp& (0+255),0,b
 12268  0136E2  D003               	goto	l7584
 12269                           
 12270                           ; BSR set to: 0
 12271  0136E4  0100               	movlb	0	; () banked
 12272  0136E6  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 12273  0136E8  D002               	goto	l7586
 12274  0136EA                     l7584:
 12275                           
 12276                           ; BSR set to: 0
 12277  0136EA  0100               	movlb	0	; () banked
 12278  0136EC  9FA8               	bcf	(___fladd@b+2)& (0+255),7,b
 12279  0136EE                     l7586:
 12280                           
 12281                           ; BSR set to: 0
 12282  0136EE  0100               	movlb	0	; () banked
 12283  0136F0  90D8               	bcf	status,0,c
 12284  0136F2  31B8               	rrcf	___fladd@bexp& (0+255),w,b
 12285  0136F4  0100               	movlb	0	; () banked
 12286  0136F6  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12287                           
 12288                           ; BSR set to: 0
 12289  0136F8  0100               	movlb	0	; () banked
 12290  0136FA  AFB6               	btfss	___fladd@signs& (0+255),7,b
 12291  0136FC  D002               	goto	l7592
 12292                           
 12293                           ; BSR set to: 0
 12294  0136FE  0100               	movlb	0	; () banked
 12295  013700  8FA9               	bsf	(___fladd@b+3)& (0+255),7,b
 12296  013702                     l7592:
 12297                           
 12298                           ; BSR set to: 0
 12299  013702  C0A6  F0A6         	movff	___fladd@b,?___fladd
 12300  013706  C0A7  F0A7         	movff	___fladd@b+1,?___fladd+1
 12301  01370A  C0A8  F0A8         	movff	___fladd@b+2,?___fladd+2
 12302  01370E  C0A9  F0A9         	movff	___fladd@b+3,?___fladd+3
 12303  013712  0012               	return	
 12304  013714                     __end_of___fladd:
 12305                           	opt stack 0
 12306                           tblptru	equ	0xFF8
 12307                           tblptrh	equ	0xFF7
 12308                           tblptrl	equ	0xFF6
 12309                           tablat	equ	0xFF5
 12310                           prodh	equ	0xFF4
 12311                           prodl	equ	0xFF3
 12312                           intcon	equ	0xFF2
 12313                           postinc0	equ	0xFEE
 12314                           wreg	equ	0xFE8
 12315                           indf2	equ	0xFDF
 12316                           postinc2	equ	0xFDE
 12317                           fsr2h	equ	0xFDA
 12318                           fsr2l	equ	0xFD9
 12319                           status	equ	0xFD8
 12320                           
 12321 ;; *************** function ___flneg *****************
 12322 ;; Defined at:
 12323 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;  f1              4   57[BANK0 ] unsigned char 
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  4   57[BANK0 ] unsigned char 
 12330 ;; Registers used:
 12331 ;;		wreg, status,2, status,0
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/0
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12337 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;Total ram usage:        4 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; Hardware stack levels required when called:    3
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_main
 12348 ;;		_sprintf
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text23
 12353  015C04                     __ptext23:
 12354                           	opt stack 0
 12355  015C04                     ___flneg:
 12356                           	opt stack 27
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;incstack = 0
 12360  015C04  0100               	movlb	0	; () banked
 12361  015C06  5199               	movf	___flneg@f1& (0+255),w,b
 12362  015C08  0100               	movlb	0	; () banked
 12363  015C0A  119A               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12364  015C0C  0100               	movlb	0	; () banked
 12365  015C0E  119B               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12366  015C10  0100               	movlb	0	; () banked
 12367  015C12  119C               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12368  015C14  B4D8               	btfsc	status,2,c
 12369  015C16  D009               	goto	l8068
 12370                           
 12371                           ; BSR set to: 0
 12372  015C18  0E00               	movlw	0
 12373  015C1A  0100               	movlb	0	; () banked
 12374  015C1C  1B99               	xorwf	___flneg@f1& (0+255),f,b
 12375  015C1E  0E00               	movlw	0
 12376  015C20  1B9A               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12377  015C22  0E00               	movlw	0
 12378  015C24  1B9B               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12379  015C26  0E80               	movlw	128
 12380  015C28  1B9C               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12381  015C2A                     l8068:
 12382                           
 12383                           ; BSR set to: 0
 12384  015C2A  C099  F099         	movff	___flneg@f1,?___flneg
 12385  015C2E  C09A  F09A         	movff	___flneg@f1+1,?___flneg+1
 12386  015C32  C09B  F09B         	movff	___flneg@f1+2,?___flneg+2
 12387  015C36  C09C  F09C         	movff	___flneg@f1+3,?___flneg+3
 12388  015C3A  0012               	return	
 12389  015C3C                     __end_of___flneg:
 12390                           	opt stack 0
 12391                           tblptru	equ	0xFF8
 12392                           tblptrh	equ	0xFF7
 12393                           tblptrl	equ	0xFF6
 12394                           tablat	equ	0xFF5
 12395                           prodh	equ	0xFF4
 12396                           prodl	equ	0xFF3
 12397                           intcon	equ	0xFF2
 12398                           postinc0	equ	0xFEE
 12399                           wreg	equ	0xFE8
 12400                           indf2	equ	0xFDF
 12401                           postinc2	equ	0xFDE
 12402                           fsr2h	equ	0xFDA
 12403                           fsr2l	equ	0xFD9
 12404                           status	equ	0xFD8
 12405                           
 12406 ;; *************** function ___flge *****************
 12407 ;; Defined at:
 12408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;  ff1             4   18[BANK0 ] unsigned char 
 12411 ;;  ff2             4   22[BANK0 ] unsigned char 
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;		None
 12414 ;; Return value:  Size  Location     Type
 12415 ;;		None               void
 12416 ;; Registers used:
 12417 ;;		wreg, status,2, status,0
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/0
 12420 ;;		On exit  : 0/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12423 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;Total ram usage:       12 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; Hardware stack levels required when called:    3
 12430 ;; This function calls:
 12431 ;;		Nothing
 12432 ;; This function is called by:
 12433 ;;		_sprintf
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           	psect	text24
 12438  014D30                     __ptext24:
 12439                           	opt stack 0
 12440  014D30                     ___flge:
 12441                           	opt stack 25
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;incstack = 0
 12445  014D30  0E00               	movlw	0
 12446  014D32  0100               	movlb	0	; () banked
 12447  014D34  1572               	andwf	___flge@ff1& (0+255),w,b
 12448  014D36  0100               	movlb	0	; () banked
 12449  014D38  6F7A               	movwf	??___flge& (0+255),b
 12450  014D3A  0E00               	movlw	0
 12451  014D3C  0100               	movlb	0	; () banked
 12452  014D3E  1573               	andwf	(___flge@ff1+1)& (0+255),w,b
 12453  014D40  0100               	movlb	0	; () banked
 12454  014D42  6F7B               	movwf	(??___flge+1)& (0+255),b
 12455  014D44  0E80               	movlw	128
 12456  014D46  0100               	movlb	0	; () banked
 12457  014D48  1574               	andwf	(___flge@ff1+2)& (0+255),w,b
 12458  014D4A  0100               	movlb	0	; () banked
 12459  014D4C  6F7C               	movwf	(??___flge+2)& (0+255),b
 12460  014D4E  0E7F               	movlw	127
 12461  014D50  0100               	movlb	0	; () banked
 12462  014D52  1575               	andwf	(___flge@ff1+3)& (0+255),w,b
 12463  014D54  0100               	movlb	0	; () banked
 12464  014D56  6F7D               	movwf	(??___flge+3)& (0+255),b
 12465  014D58  0100               	movlb	0	; () banked
 12466  014D5A  517A               	movf	??___flge& (0+255),w,b
 12467  014D5C  0100               	movlb	0	; () banked
 12468  014D5E  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12469  014D60  0100               	movlb	0	; () banked
 12470  014D62  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12471  014D64  0100               	movlb	0	; () banked
 12472  014D66  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12473  014D68  A4D8               	btfss	status,2,c
 12474  014D6A  D009               	goto	l8046
 12475                           
 12476                           ; BSR set to: 0
 12477  014D6C  0E00               	movlw	0
 12478  014D6E  0100               	movlb	0	; () banked
 12479  014D70  6F72               	movwf	___flge@ff1& (0+255),b
 12480  014D72  0E00               	movlw	0
 12481  014D74  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12482  014D76  0E00               	movlw	0
 12483  014D78  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12484  014D7A  0E00               	movlw	0
 12485  014D7C  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12486  014D7E                     l8046:
 12487                           
 12488                           ; BSR set to: 0
 12489  014D7E  0E00               	movlw	0
 12490  014D80  0100               	movlb	0	; () banked
 12491  014D82  1576               	andwf	___flge@ff2& (0+255),w,b
 12492  014D84  0100               	movlb	0	; () banked
 12493  014D86  6F7A               	movwf	??___flge& (0+255),b
 12494  014D88  0E00               	movlw	0
 12495  014D8A  0100               	movlb	0	; () banked
 12496  014D8C  1577               	andwf	(___flge@ff2+1)& (0+255),w,b
 12497  014D8E  0100               	movlb	0	; () banked
 12498  014D90  6F7B               	movwf	(??___flge+1)& (0+255),b
 12499  014D92  0E80               	movlw	128
 12500  014D94  0100               	movlb	0	; () banked
 12501  014D96  1578               	andwf	(___flge@ff2+2)& (0+255),w,b
 12502  014D98  0100               	movlb	0	; () banked
 12503  014D9A  6F7C               	movwf	(??___flge+2)& (0+255),b
 12504  014D9C  0E7F               	movlw	127
 12505  014D9E  0100               	movlb	0	; () banked
 12506  014DA0  1579               	andwf	(___flge@ff2+3)& (0+255),w,b
 12507  014DA2  0100               	movlb	0	; () banked
 12508  014DA4  6F7D               	movwf	(??___flge+3)& (0+255),b
 12509  014DA6  0100               	movlb	0	; () banked
 12510  014DA8  517A               	movf	??___flge& (0+255),w,b
 12511  014DAA  0100               	movlb	0	; () banked
 12512  014DAC  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12513  014DAE  0100               	movlb	0	; () banked
 12514  014DB0  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12515  014DB2  0100               	movlb	0	; () banked
 12516  014DB4  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12517  014DB6  A4D8               	btfss	status,2,c
 12518  014DB8  D009               	goto	l8050
 12519                           
 12520                           ; BSR set to: 0
 12521  014DBA  0E00               	movlw	0
 12522  014DBC  0100               	movlb	0	; () banked
 12523  014DBE  6F76               	movwf	___flge@ff2& (0+255),b
 12524  014DC0  0E00               	movlw	0
 12525  014DC2  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12526  014DC4  0E00               	movlw	0
 12527  014DC6  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12528  014DC8  0E00               	movlw	0
 12529  014DCA  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12530  014DCC                     l8050:
 12531                           
 12532                           ; BSR set to: 0
 12533  014DCC  0100               	movlb	0	; () banked
 12534  014DCE  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 12535  014DD0  D026               	goto	l8054
 12536                           
 12537                           ; BSR set to: 0
 12538  014DD2  C072  F07A         	movff	___flge@ff1,??___flge
 12539  014DD6  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 12540  014DDA  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 12541  014DDE  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 12542  014DE2  0100               	movlb	0	; () banked
 12543  014DE4  1F7A               	comf	??___flge& (0+255),f,b
 12544  014DE6  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12545  014DE8  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12546  014DEA  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12547  014DEC  2B7A               	incf	??___flge& (0+255),f,b
 12548  014DEE  0E00               	movlw	0
 12549  014DF0  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12550  014DF2  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12551  014DF4  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12552  014DF6  0E00               	movlw	0
 12553  014DF8  0100               	movlb	0	; () banked
 12554  014DFA  257A               	addwf	??___flge& (0+255),w,b
 12555  014DFC  0100               	movlb	0	; () banked
 12556  014DFE  6F72               	movwf	___flge@ff1& (0+255),b
 12557  014E00  0E00               	movlw	0
 12558  014E02  0100               	movlb	0	; () banked
 12559  014E04  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12560  014E06  0100               	movlb	0	; () banked
 12561  014E08  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12562  014E0A  0E00               	movlw	0
 12563  014E0C  0100               	movlb	0	; () banked
 12564  014E0E  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12565  014E10  0100               	movlb	0	; () banked
 12566  014E12  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12567  014E14  0E80               	movlw	128
 12568  014E16  0100               	movlb	0	; () banked
 12569  014E18  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12570  014E1A  0100               	movlb	0	; () banked
 12571  014E1C  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12572  014E1E                     l8054:
 12573                           
 12574                           ; BSR set to: 0
 12575  014E1E  0100               	movlb	0	; () banked
 12576  014E20  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 12577  014E22  D026               	goto	l1195
 12578                           
 12579                           ; BSR set to: 0
 12580  014E24  C076  F07A         	movff	___flge@ff2,??___flge
 12581  014E28  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 12582  014E2C  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 12583  014E30  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 12584  014E34  0100               	movlb	0	; () banked
 12585  014E36  1F7A               	comf	??___flge& (0+255),f,b
 12586  014E38  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12587  014E3A  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12588  014E3C  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12589  014E3E  2B7A               	incf	??___flge& (0+255),f,b
 12590  014E40  0E00               	movlw	0
 12591  014E42  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12592  014E44  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12593  014E46  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12594  014E48  0E00               	movlw	0
 12595  014E4A  0100               	movlb	0	; () banked
 12596  014E4C  257A               	addwf	??___flge& (0+255),w,b
 12597  014E4E  0100               	movlb	0	; () banked
 12598  014E50  6F76               	movwf	___flge@ff2& (0+255),b
 12599  014E52  0E00               	movlw	0
 12600  014E54  0100               	movlb	0	; () banked
 12601  014E56  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12602  014E58  0100               	movlb	0	; () banked
 12603  014E5A  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12604  014E5C  0E00               	movlw	0
 12605  014E5E  0100               	movlb	0	; () banked
 12606  014E60  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12607  014E62  0100               	movlb	0	; () banked
 12608  014E64  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12609  014E66  0E80               	movlw	128
 12610  014E68  0100               	movlb	0	; () banked
 12611  014E6A  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12612  014E6C  0100               	movlb	0	; () banked
 12613  014E6E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12614  014E70                     l1195:
 12615                           
 12616                           ; BSR set to: 0
 12617  014E70  0E00               	movlw	0
 12618  014E72  0100               	movlb	0	; () banked
 12619  014E74  1B72               	xorwf	___flge@ff1& (0+255),f,b
 12620  014E76  0E00               	movlw	0
 12621  014E78  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12622  014E7A  0E00               	movlw	0
 12623  014E7C  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12624  014E7E  0E80               	movlw	128
 12625  014E80  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12626  014E82  0E00               	movlw	0
 12627  014E84  0100               	movlb	0	; () banked
 12628  014E86  1B76               	xorwf	___flge@ff2& (0+255),f,b
 12629  014E88  0E00               	movlw	0
 12630  014E8A  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12631  014E8C  0E00               	movlw	0
 12632  014E8E  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12633  014E90  0E80               	movlw	128
 12634  014E92  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12635  014E94  0100               	movlb	0	; () banked
 12636  014E96  5176               	movf	___flge@ff2& (0+255),w,b
 12637  014E98  0100               	movlb	0	; () banked
 12638  014E9A  5D72               	subwf	___flge@ff1& (0+255),w,b
 12639  014E9C  0100               	movlb	0	; () banked
 12640  014E9E  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 12641  014EA0  0100               	movlb	0	; () banked
 12642  014EA2  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12643  014EA4  0100               	movlb	0	; () banked
 12644  014EA6  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 12645  014EA8  0100               	movlb	0	; () banked
 12646  014EAA  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12647  014EAC  0100               	movlb	0	; () banked
 12648  014EAE  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 12649  014EB0  0100               	movlb	0	; () banked
 12650  014EB2  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12651  014EB4  B0D8               	btfsc	status,0,c
 12652  014EB6  D002               	goto	l8060
 12653                           
 12654                           ; BSR set to: 0
 12655  014EB8  90D8               	bcf	status,0,c
 12656  014EBA  0012               	return	
 12657  014EBC                     l8060:
 12658                           
 12659                           ; BSR set to: 0
 12660  014EBC  80D8               	bsf	status,0,c
 12661                           
 12662                           ; BSR set to: 0
 12663  014EBE  0012               	return	
 12664  014EC0                     __end_of___flge:
 12665                           	opt stack 0
 12666                           tblptru	equ	0xFF8
 12667                           tblptrh	equ	0xFF7
 12668                           tblptrl	equ	0xFF6
 12669                           tablat	equ	0xFF5
 12670                           prodh	equ	0xFF4
 12671                           prodl	equ	0xFF3
 12672                           intcon	equ	0xFF2
 12673                           postinc0	equ	0xFEE
 12674                           wreg	equ	0xFE8
 12675                           indf2	equ	0xFDF
 12676                           postinc2	equ	0xFDE
 12677                           fsr2h	equ	0xFDA
 12678                           fsr2l	equ	0xFD9
 12679                           status	equ	0xFD8
 12680                           
 12681 ;; *************** function ___fldiv *****************
 12682 ;; Defined at:
 12683 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;  b               4   32[BANK0 ] unsigned char 
 12686 ;;  a               4   36[BANK0 ] unsigned char 
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;  grs             4   51[BANK0 ] unsigned long 
 12689 ;;  rem             4   45[BANK0 ] unsigned long 
 12690 ;;  new_exp         2   49[BANK0 ] int 
 12691 ;;  aexp            1   56[BANK0 ] unsigned char 
 12692 ;;  bexp            1   55[BANK0 ] unsigned char 
 12693 ;;  sign            1   44[BANK0 ] unsigned char 
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  4   32[BANK0 ] unsigned char 
 12696 ;; Registers used:
 12697 ;;		wreg, status,2, status,0
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12703 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12707 ;;Total ram usage:       25 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:    3
 12710 ;; This function calls:
 12711 ;;		Nothing
 12712 ;; This function is called by:
 12713 ;;		_LCD_Handler
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717                           	psect	text25
 12718  013BBA                     __ptext25:
 12719                           	opt stack 0
 12720  013BBA                     ___fldiv:
 12721                           	opt stack 26
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;incstack = 0
 12725  013BBA  0100               	movlb	0	; () banked
 12726  013BBC  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12727  013BBE  0B80               	andlw	128
 12728  013BC0  0100               	movlb	0	; () banked
 12729  013BC2  6F8C               	movwf	___fldiv@sign& (0+255),b
 12730  013BC4  0100               	movlb	0	; () banked
 12731  013BC6  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12732  013BC8  2583               	addwf	(___fldiv@b+3)& (0+255),w,b
 12733  013BCA  0100               	movlb	0	; () banked
 12734  013BCC  6F97               	movwf	___fldiv@bexp& (0+255),b
 12735                           
 12736                           ; BSR set to: 0
 12737  013BCE  0100               	movlb	0	; () banked
 12738  013BD0  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 12739  013BD2  D002               	goto	l6340
 12740                           
 12741                           ; BSR set to: 0
 12742  013BD4  0100               	movlb	0	; () banked
 12743  013BD6  8197               	bsf	___fldiv@bexp& (0+255),0,b
 12744  013BD8                     l6340:
 12745                           
 12746                           ; BSR set to: 0
 12747  013BD8  0100               	movlb	0	; () banked
 12748  013BDA  5197               	movf	___fldiv@bexp& (0+255),w,b
 12749  013BDC  0100               	movlb	0	; () banked
 12750  013BDE  B4D8               	btfsc	status,2,c
 12751  013BE0  D012               	goto	l6350
 12752                           
 12753                           ; BSR set to: 0
 12754  013BE2  0100               	movlb	0	; () banked
 12755  013BE4  2997               	incf	___fldiv@bexp& (0+255),w,b
 12756  013BE6  A4D8               	btfss	status,2,c
 12757  013BE8  D009               	goto	l6346
 12758                           
 12759                           ; BSR set to: 0
 12760  013BEA  0E00               	movlw	0
 12761  013BEC  0100               	movlb	0	; () banked
 12762  013BEE  6F80               	movwf	___fldiv@b& (0+255),b
 12763  013BF0  0E00               	movlw	0
 12764  013BF2  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12765  013BF4  0E00               	movlw	0
 12766  013BF6  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12767  013BF8  0E00               	movlw	0
 12768  013BFA  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12769  013BFC                     l6346:
 12770                           
 12771                           ; BSR set to: 0
 12772  013BFC  0100               	movlb	0	; () banked
 12773  013BFE  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 12774                           
 12775                           ; BSR set to: 0
 12776  013C00  0E00               	movlw	0
 12777  013C02  0100               	movlb	0	; () banked
 12778  013C04  D008               	goto	L12
 12779  013C06                     l6350:
 12780                           
 12781                           ; BSR set to: 0
 12782  013C06  0E00               	movlw	0
 12783  013C08  0100               	movlb	0	; () banked
 12784  013C0A  6F80               	movwf	___fldiv@b& (0+255),b
 12785  013C0C  0E00               	movlw	0
 12786  013C0E  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12787  013C10  0E00               	movlw	0
 12788  013C12  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12789  013C14  0E00               	movlw	0
 12790  013C16                     L12:
 12791  013C16  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12792                           
 12793                           ; BSR set to: 0
 12794                           
 12795                           ; BSR set to: 0
 12796  013C18  0100               	movlb	0	; () banked
 12797  013C1A  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12798  013C1C  0B80               	andlw	128
 12799  013C1E  0100               	movlb	0	; () banked
 12800  013C20  1B8C               	xorwf	___fldiv@sign& (0+255),f,b
 12801                           
 12802                           ; BSR set to: 0
 12803  013C22  0100               	movlb	0	; () banked
 12804  013C24  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12805  013C26  2587               	addwf	(___fldiv@a+3)& (0+255),w,b
 12806  013C28  0100               	movlb	0	; () banked
 12807  013C2A  6F98               	movwf	___fldiv@aexp& (0+255),b
 12808                           
 12809                           ; BSR set to: 0
 12810  013C2C  0100               	movlb	0	; () banked
 12811  013C2E  AF86               	btfss	(___fldiv@a+2)& (0+255),7,b
 12812  013C30  D002               	goto	l6360
 12813                           
 12814                           ; BSR set to: 0
 12815  013C32  0100               	movlb	0	; () banked
 12816  013C34  8198               	bsf	___fldiv@aexp& (0+255),0,b
 12817  013C36                     l6360:
 12818                           
 12819                           ; BSR set to: 0
 12820  013C36  0100               	movlb	0	; () banked
 12821  013C38  5198               	movf	___fldiv@aexp& (0+255),w,b
 12822  013C3A  0100               	movlb	0	; () banked
 12823  013C3C  B4D8               	btfsc	status,2,c
 12824  013C3E  D012               	goto	l6370
 12825                           
 12826                           ; BSR set to: 0
 12827  013C40  0100               	movlb	0	; () banked
 12828  013C42  2998               	incf	___fldiv@aexp& (0+255),w,b
 12829  013C44  A4D8               	btfss	status,2,c
 12830  013C46  D009               	goto	l6366
 12831                           
 12832                           ; BSR set to: 0
 12833  013C48  0E00               	movlw	0
 12834  013C4A  0100               	movlb	0	; () banked
 12835  013C4C  6F84               	movwf	___fldiv@a& (0+255),b
 12836  013C4E  0E00               	movlw	0
 12837  013C50  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12838  013C52  0E00               	movlw	0
 12839  013C54  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12840  013C56  0E00               	movlw	0
 12841  013C58  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12842  013C5A                     l6366:
 12843                           
 12844                           ; BSR set to: 0
 12845  013C5A  0100               	movlb	0	; () banked
 12846  013C5C  8F86               	bsf	(___fldiv@a+2)& (0+255),7,b
 12847                           
 12848                           ; BSR set to: 0
 12849  013C5E  0E00               	movlw	0
 12850  013C60  0100               	movlb	0	; () banked
 12851  013C62  D008               	goto	L13
 12852  013C64                     l6370:
 12853                           
 12854                           ; BSR set to: 0
 12855  013C64  0E00               	movlw	0
 12856  013C66  0100               	movlb	0	; () banked
 12857  013C68  6F84               	movwf	___fldiv@a& (0+255),b
 12858  013C6A  0E00               	movlw	0
 12859  013C6C  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12860  013C6E  0E00               	movlw	0
 12861  013C70  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12862  013C72  0E00               	movlw	0
 12863  013C74                     L13:
 12864  013C74  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12865                           
 12866                           ; BSR set to: 0
 12867                           
 12868                           ; BSR set to: 0
 12869  013C76  0100               	movlb	0	; () banked
 12870  013C78  5184               	movf	___fldiv@a& (0+255),w,b
 12871  013C7A  0100               	movlb	0	; () banked
 12872  013C7C  1185               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12873  013C7E  0100               	movlb	0	; () banked
 12874  013C80  1186               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12875  013C82  0100               	movlb	0	; () banked
 12876  013C84  1187               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12877  013C86  A4D8               	btfss	status,2,c
 12878  013C88  D017               	goto	l6382
 12879                           
 12880                           ; BSR set to: 0
 12881  013C8A  0E00               	movlw	0
 12882  013C8C  0100               	movlb	0	; () banked
 12883  013C8E  6F80               	movwf	___fldiv@b& (0+255),b
 12884  013C90  0E00               	movlw	0
 12885  013C92  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12886  013C94  0E00               	movlw	0
 12887  013C96  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12888  013C98  0E00               	movlw	0
 12889  013C9A  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12890                           
 12891                           ; BSR set to: 0
 12892  013C9C  0100               	movlb	0	; () banked
 12893  013C9E  0E80               	movlw	128
 12894  013CA0  1382               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12895  013CA2  0E7F               	movlw	127
 12896  013CA4  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12897                           
 12898                           ; BSR set to: 0
 12899  013CA6  C080  F080         	movff	___fldiv@b,?___fldiv
 12900  013CAA  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12901  013CAE  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12902  013CB2  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12903                           
 12904                           ; BSR set to: 0
 12905  013CB6  0012               	return	
 12906  013CB8                     l6382:
 12907                           
 12908                           ; BSR set to: 0
 12909  013CB8  0100               	movlb	0	; () banked
 12910  013CBA  5197               	movf	___fldiv@bexp& (0+255),w,b
 12911  013CBC  0100               	movlb	0	; () banked
 12912  013CBE  A4D8               	btfss	status,2,c
 12913  013CC0  D012               	goto	l6390
 12914                           
 12915                           ; BSR set to: 0
 12916  013CC2  0E00               	movlw	0
 12917  013CC4  0100               	movlb	0	; () banked
 12918  013CC6  6F80               	movwf	___fldiv@b& (0+255),b
 12919  013CC8  0E00               	movlw	0
 12920  013CCA  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12921  013CCC  0E00               	movlw	0
 12922  013CCE  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12923  013CD0  0E00               	movlw	0
 12924  013CD2  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12925                           
 12926                           ; BSR set to: 0
 12927  013CD4  C080  F080         	movff	___fldiv@b,?___fldiv
 12928  013CD8  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12929  013CDC  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12930  013CE0  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12931                           
 12932                           ; BSR set to: 0
 12933  013CE4  0012               	return	
 12934  013CE6                     l6390:
 12935                           
 12936                           ; BSR set to: 0
 12937  013CE6  0100               	movlb	0	; () banked
 12938  013CE8  5198               	movf	___fldiv@aexp& (0+255),w,b
 12939  013CEA  0100               	movlb	0	; () banked
 12940  013CEC  6F88               	movwf	??___fldiv& (0+255),b
 12941  013CEE  6B89               	clrf	(??___fldiv+1)& (0+255),b
 12942  013CF0  0100               	movlb	0	; () banked
 12943  013CF2  1F88               	comf	??___fldiv& (0+255),f,b
 12944  013CF4  1F89               	comf	(??___fldiv+1)& (0+255),f,b
 12945  013CF6  4B88               	infsnz	??___fldiv& (0+255),f,b
 12946  013CF8  2B89               	incf	(??___fldiv+1)& (0+255),f,b
 12947  013CFA  0100               	movlb	0	; () banked
 12948  013CFC  5197               	movf	___fldiv@bexp& (0+255),w,b
 12949  013CFE  0100               	movlb	0	; () banked
 12950  013D00  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 12951  013D02  6B8B               	clrf	(??___fldiv+3)& (0+255),b
 12952  013D04  0100               	movlb	0	; () banked
 12953  013D06  5188               	movf	??___fldiv& (0+255),w,b
 12954  013D08  0100               	movlb	0	; () banked
 12955  013D0A  278A               	addwf	(??___fldiv+2)& (0+255),f,b
 12956  013D0C  0100               	movlb	0	; () banked
 12957  013D0E  5189               	movf	(??___fldiv+1)& (0+255),w,b
 12958  013D10  0100               	movlb	0	; () banked
 12959  013D12  238B               	addwfc	(??___fldiv+3)& (0+255),f,b
 12960  013D14  0E7F               	movlw	127
 12961  013D16  0100               	movlb	0	; () banked
 12962  013D18  258A               	addwf	(??___fldiv+2)& (0+255),w,b
 12963  013D1A  0100               	movlb	0	; () banked
 12964  013D1C  6F91               	movwf	___fldiv@new_exp& (0+255),b
 12965  013D1E  0E00               	movlw	0
 12966  013D20  0100               	movlb	0	; () banked
 12967  013D22  218B               	addwfc	(??___fldiv+3)& (0+255),w,b
 12968  013D24  0100               	movlb	0	; () banked
 12969  013D26  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12970                           
 12971                           ; BSR set to: 0
 12972  013D28  C080  F08D         	movff	___fldiv@b,___fldiv@rem
 12973  013D2C  C081  F08E         	movff	___fldiv@b+1,___fldiv@rem+1
 12974  013D30  C082  F08F         	movff	___fldiv@b+2,___fldiv@rem+2
 12975  013D34  C083  F090         	movff	___fldiv@b+3,___fldiv@rem+3
 12976                           
 12977                           ; BSR set to: 0
 12978  013D38  0E00               	movlw	0
 12979  013D3A  0100               	movlb	0	; () banked
 12980  013D3C  6F80               	movwf	___fldiv@b& (0+255),b
 12981  013D3E  0E00               	movlw	0
 12982  013D40  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12983  013D42  0E00               	movlw	0
 12984  013D44  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12985  013D46  0E00               	movlw	0
 12986  013D48  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12987                           
 12988                           ; BSR set to: 0
 12989  013D4A  0E00               	movlw	0
 12990  013D4C  0100               	movlb	0	; () banked
 12991  013D4E  6F93               	movwf	___fldiv@grs& (0+255),b
 12992  013D50  0E00               	movlw	0
 12993  013D52  6F94               	movwf	(___fldiv@grs+1)& (0+255),b
 12994  013D54  0E00               	movlw	0
 12995  013D56  6F95               	movwf	(___fldiv@grs+2)& (0+255),b
 12996  013D58  0E00               	movlw	0
 12997  013D5A  6F96               	movwf	(___fldiv@grs+3)& (0+255),b
 12998                           
 12999                           ; BSR set to: 0
 13000  013D5C  0E00               	movlw	0
 13001  013D5E  0100               	movlb	0	; () banked
 13002  013D60  6F98               	movwf	___fldiv@aexp& (0+255),b
 13003  013D62  D042               	goto	l1528
 13004  013D64                     l6400:
 13005                           
 13006                           ; BSR set to: 0
 13007  013D64  0100               	movlb	0	; () banked
 13008  013D66  5198               	movf	___fldiv@aexp& (0+255),w,b
 13009  013D68  0100               	movlb	0	; () banked
 13010  013D6A  B4D8               	btfsc	status,2,c
 13011  013D6C  D017               	goto	l6408
 13012                           
 13013                           ; BSR set to: 0
 13014  013D6E  0100               	movlb	0	; () banked
 13015  013D70  90D8               	bcf	status,0,c
 13016  013D72  378D               	rlcf	___fldiv@rem& (0+255),f,b
 13017  013D74  378E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13018  013D76  378F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13019  013D78  3790               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13020  013D7A  0100               	movlb	0	; () banked
 13021  013D7C  90D8               	bcf	status,0,c
 13022  013D7E  3780               	rlcf	___fldiv@b& (0+255),f,b
 13023  013D80  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13024  013D82  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13025  013D84  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13026                           
 13027                           ; BSR set to: 0
 13028  013D86  0100               	movlb	0	; () banked
 13029  013D88  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13030  013D8A  D002               	goto	l1531
 13031                           
 13032                           ; BSR set to: 0
 13033  013D8C  0100               	movlb	0	; () banked
 13034  013D8E  8180               	bsf	___fldiv@b& (0+255),0,b
 13035  013D90                     l1531:
 13036                           
 13037                           ; BSR set to: 0
 13038  013D90  0100               	movlb	0	; () banked
 13039  013D92  90D8               	bcf	status,0,c
 13040  013D94  3793               	rlcf	___fldiv@grs& (0+255),f,b
 13041  013D96  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13042  013D98  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13043  013D9A  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13044  013D9C                     l6408:
 13045                           
 13046                           ; BSR set to: 0
 13047  013D9C  0100               	movlb	0	; () banked
 13048  013D9E  5184               	movf	___fldiv@a& (0+255),w,b
 13049  013DA0  0100               	movlb	0	; () banked
 13050  013DA2  5D8D               	subwf	___fldiv@rem& (0+255),w,b
 13051  013DA4  0100               	movlb	0	; () banked
 13052  013DA6  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 13053  013DA8  0100               	movlb	0	; () banked
 13054  013DAA  598E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13055  013DAC  0100               	movlb	0	; () banked
 13056  013DAE  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 13057  013DB0  0100               	movlb	0	; () banked
 13058  013DB2  598F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13059  013DB4  0100               	movlb	0	; () banked
 13060  013DB6  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13061  013DB8  0100               	movlb	0	; () banked
 13062  013DBA  5990               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13063  013DBC  A0D8               	btfss	status,0,c
 13064  013DBE  D012               	goto	l6414
 13065                           
 13066                           ; BSR set to: 0
 13067  013DC0  0100               	movlb	0	; () banked
 13068  013DC2  8D96               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13069                           
 13070                           ; BSR set to: 0
 13071  013DC4  0100               	movlb	0	; () banked
 13072  013DC6  5184               	movf	___fldiv@a& (0+255),w,b
 13073  013DC8  0100               	movlb	0	; () banked
 13074  013DCA  5F8D               	subwf	___fldiv@rem& (0+255),f,b
 13075  013DCC  0100               	movlb	0	; () banked
 13076  013DCE  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 13077  013DD0  0100               	movlb	0	; () banked
 13078  013DD2  5B8E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13079  013DD4  0100               	movlb	0	; () banked
 13080  013DD6  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 13081  013DD8  0100               	movlb	0	; () banked
 13082  013DDA  5B8F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13083  013DDC  0100               	movlb	0	; () banked
 13084  013DDE  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13085  013DE0  0100               	movlb	0	; () banked
 13086  013DE2  5B90               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13087  013DE4                     l6414:
 13088                           
 13089                           ; BSR set to: 0
 13090  013DE4  0100               	movlb	0	; () banked
 13091  013DE6  2B98               	incf	___fldiv@aexp& (0+255),f,b
 13092  013DE8                     l1528:
 13093                           
 13094                           ; BSR set to: 0
 13095  013DE8  0E19               	movlw	25
 13096  013DEA  0100               	movlb	0	; () banked
 13097  013DEC  6598               	cpfsgt	___fldiv@aexp& (0+255),b
 13098  013DEE  D7BA               	goto	l6400
 13099                           
 13100                           ; BSR set to: 0
 13101                           
 13102                           ; BSR set to: 0
 13103  013DF0  0100               	movlb	0	; () banked
 13104  013DF2  518D               	movf	___fldiv@rem& (0+255),w,b
 13105  013DF4  0100               	movlb	0	; () banked
 13106  013DF6  118E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13107  013DF8  0100               	movlb	0	; () banked
 13108  013DFA  118F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13109  013DFC  0100               	movlb	0	; () banked
 13110  013DFE  1190               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13111  013E00  B4D8               	btfsc	status,2,c
 13112  013E02  D018               	goto	l6426
 13113                           
 13114                           ; BSR set to: 0
 13115  013E04  0100               	movlb	0	; () banked
 13116  013E06  8193               	bsf	___fldiv@grs& (0+255),0,b
 13117                           
 13118                           ; BSR set to: 0
 13119  013E08  D015               	goto	l6426
 13120  013E0A                     l6420:
 13121                           
 13122                           ; BSR set to: 0
 13123  013E0A  0100               	movlb	0	; () banked
 13124  013E0C  90D8               	bcf	status,0,c
 13125  013E0E  3780               	rlcf	___fldiv@b& (0+255),f,b
 13126  013E10  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13127  013E12  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13128  013E14  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13129                           
 13130                           ; BSR set to: 0
 13131  013E16  0100               	movlb	0	; () banked
 13132  013E18  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13133  013E1A  D002               	goto	l1537
 13134                           
 13135                           ; BSR set to: 0
 13136  013E1C  0100               	movlb	0	; () banked
 13137  013E1E  8180               	bsf	___fldiv@b& (0+255),0,b
 13138  013E20                     l1537:
 13139                           
 13140                           ; BSR set to: 0
 13141  013E20  0100               	movlb	0	; () banked
 13142  013E22  90D8               	bcf	status,0,c
 13143  013E24  3793               	rlcf	___fldiv@grs& (0+255),f,b
 13144  013E26  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13145  013E28  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13146  013E2A  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13147  013E2C  0100               	movlb	0	; () banked
 13148  013E2E  0791               	decf	___fldiv@new_exp& (0+255),f,b
 13149  013E30  A0D8               	btfss	status,0,c
 13150  013E32  0792               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13151  013E34                     l6426:
 13152                           
 13153                           ; BSR set to: 0
 13154  013E34  0100               	movlb	0	; () banked
 13155  013E36  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 13156  013E38  D7E8               	goto	l6420
 13157                           
 13158                           ; BSR set to: 0
 13159                           
 13160                           ; BSR set to: 0
 13161  013E3A  0E00               	movlw	0
 13162  013E3C  0100               	movlb	0	; () banked
 13163  013E3E  6F98               	movwf	___fldiv@aexp& (0+255),b
 13164                           
 13165                           ; BSR set to: 0
 13166  013E40  0100               	movlb	0	; () banked
 13167  013E42  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13168  013E44  D024               	goto	l1539
 13169                           
 13170                           ; BSR set to: 0
 13171  013E46  0EFF               	movlw	255
 13172  013E48  0100               	movlb	0	; () banked
 13173  013E4A  1593               	andwf	___fldiv@grs& (0+255),w,b
 13174  013E4C  0100               	movlb	0	; () banked
 13175  013E4E  6F88               	movwf	??___fldiv& (0+255),b
 13176  013E50  0EFF               	movlw	255
 13177  013E52  0100               	movlb	0	; () banked
 13178  013E54  1594               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13179  013E56  0100               	movlb	0	; () banked
 13180  013E58  6F89               	movwf	(??___fldiv+1)& (0+255),b
 13181  013E5A  0EFF               	movlw	255
 13182  013E5C  0100               	movlb	0	; () banked
 13183  013E5E  1595               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13184  013E60  0100               	movlb	0	; () banked
 13185  013E62  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 13186  013E64  0E7F               	movlw	127
 13187  013E66  0100               	movlb	0	; () banked
 13188  013E68  1596               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13189  013E6A  0100               	movlb	0	; () banked
 13190  013E6C  6F8B               	movwf	(??___fldiv+3)& (0+255),b
 13191  013E6E  0100               	movlb	0	; () banked
 13192  013E70  5188               	movf	??___fldiv& (0+255),w,b
 13193  013E72  0100               	movlb	0	; () banked
 13194  013E74  1189               	iorwf	(??___fldiv+1)& (0+255),w,b
 13195  013E76  0100               	movlb	0	; () banked
 13196  013E78  118A               	iorwf	(??___fldiv+2)& (0+255),w,b
 13197  013E7A  0100               	movlb	0	; () banked
 13198  013E7C  118B               	iorwf	(??___fldiv+3)& (0+255),w,b
 13199  013E7E  A4D8               	btfss	status,2,c
 13200  013E80  D003               	goto	l6436
 13201                           
 13202                           ; BSR set to: 0
 13203                           
 13204                           ; BSR set to: 0
 13205  013E82  0100               	movlb	0	; () banked
 13206  013E84  A180               	btfss	___fldiv@b& (0+255),0,b
 13207  013E86  D003               	goto	l1539
 13208  013E88                     l6436:
 13209                           
 13210                           ; BSR set to: 0
 13211  013E88  0E01               	movlw	1
 13212  013E8A  0100               	movlb	0	; () banked
 13213  013E8C  6F98               	movwf	___fldiv@aexp& (0+255),b
 13214  013E8E                     l1539:
 13215                           
 13216                           ; BSR set to: 0
 13217  013E8E  0100               	movlb	0	; () banked
 13218  013E90  5198               	movf	___fldiv@aexp& (0+255),w,b
 13219  013E92  0100               	movlb	0	; () banked
 13220  013E94  B4D8               	btfsc	status,2,c
 13221  013E96  D023               	goto	l6446
 13222                           
 13223                           ; BSR set to: 0
 13224  013E98  0E01               	movlw	1
 13225  013E9A  0100               	movlb	0	; () banked
 13226  013E9C  2780               	addwf	___fldiv@b& (0+255),f,b
 13227  013E9E  0E00               	movlw	0
 13228  013EA0  2381               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13229  013EA2  2382               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13230  013EA4  2383               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13231                           
 13232                           ; BSR set to: 0
 13233  013EA6  0100               	movlb	0	; () banked
 13234  013EA8  A183               	btfss	(___fldiv@b+3)& (0+255),0,b
 13235  013EAA  D019               	goto	l6446
 13236                           
 13237                           ; BSR set to: 0
 13238  013EAC  C080  F088         	movff	___fldiv@b,??___fldiv
 13239  013EB0  C081  F089         	movff	___fldiv@b+1,??___fldiv+1
 13240  013EB4  C082  F08A         	movff	___fldiv@b+2,??___fldiv+2
 13241  013EB8  C083  F08B         	movff	___fldiv@b+3,??___fldiv+3
 13242  013EBC  0100               	movlb	0	; () banked
 13243  013EBE  358B               	rlcf	(??___fldiv+3)& (0+255),w,b
 13244  013EC0  338B               	rrcf	(??___fldiv+3)& (0+255),f,b
 13245  013EC2  338A               	rrcf	(??___fldiv+2)& (0+255),f,b
 13246  013EC4  3389               	rrcf	(??___fldiv+1)& (0+255),f,b
 13247  013EC6  3388               	rrcf	??___fldiv& (0+255),f,b
 13248  013EC8  C088  F080         	movff	??___fldiv,___fldiv@b
 13249  013ECC  C089  F081         	movff	??___fldiv+1,___fldiv@b+1
 13250  013ED0  C08A  F082         	movff	??___fldiv+2,___fldiv@b+2
 13251  013ED4  C08B  F083         	movff	??___fldiv+3,___fldiv@b+3
 13252                           
 13253                           ; BSR set to: 0
 13254  013ED8  0100               	movlb	0	; () banked
 13255  013EDA  4B91               	infsnz	___fldiv@new_exp& (0+255),f,b
 13256  013EDC  2B92               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13257  013EDE                     l6446:
 13258                           
 13259                           ; BSR set to: 0
 13260  013EDE  0100               	movlb	0	; () banked
 13261  013EE0  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13262  013EE2  D014               	goto	l6450
 13263  013EE4  0100               	movlb	0	; () banked
 13264  013EE6  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13265  013EE8  E104               	bnz	u8100
 13266  013EEA  0100               	movlb	0	; () banked
 13267  013EEC  2991               	incf	___fldiv@new_exp& (0+255),w,b
 13268  013EEE  A0D8               	btfss	status,0,c
 13269  013EF0  D00D               	goto	l6450
 13270  013EF2                     u8100:
 13271                           
 13272                           ; BSR set to: 0
 13273  013EF2  0E00               	movlw	0
 13274  013EF4  0100               	movlb	0	; () banked
 13275  013EF6  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13276  013EF8  6991               	setf	___fldiv@new_exp& (0+255),b
 13277  013EFA  0E00               	movlw	0
 13278  013EFC  0100               	movlb	0	; () banked
 13279  013EFE  6F80               	movwf	___fldiv@b& (0+255),b
 13280  013F00  0E00               	movlw	0
 13281  013F02  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13282  013F04  0E00               	movlw	0
 13283  013F06  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13284  013F08  0E00               	movlw	0
 13285  013F0A  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13286  013F0C                     l6450:
 13287                           
 13288                           ; BSR set to: 0
 13289  013F0C  0100               	movlb	0	; () banked
 13290  013F0E  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13291  013F10  D007               	goto	l6452
 13292  013F12  0100               	movlb	0	; () banked
 13293  013F14  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13294  013F16  E115               	bnz	l6454
 13295  013F18  0100               	movlb	0	; () banked
 13296  013F1A  0591               	decf	___fldiv@new_exp& (0+255),w,b
 13297  013F1C  B0D8               	btfsc	status,0,c
 13298  013F1E  D011               	goto	l6454
 13299  013F20                     l6452:
 13300                           
 13301                           ; BSR set to: 0
 13302  013F20  0E00               	movlw	0
 13303  013F22  0100               	movlb	0	; () banked
 13304  013F24  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13305  013F26  0E00               	movlw	0
 13306  013F28  6F91               	movwf	___fldiv@new_exp& (0+255),b
 13307  013F2A  0E00               	movlw	0
 13308  013F2C  0100               	movlb	0	; () banked
 13309  013F2E  6F80               	movwf	___fldiv@b& (0+255),b
 13310  013F30  0E00               	movlw	0
 13311  013F32  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13312  013F34  0E00               	movlw	0
 13313  013F36  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13314  013F38  0E00               	movlw	0
 13315  013F3A  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13316  013F3C  0E00               	movlw	0
 13317  013F3E  0100               	movlb	0	; () banked
 13318  013F40  6F8C               	movwf	___fldiv@sign& (0+255),b
 13319  013F42                     l6454:
 13320                           
 13321                           ; BSR set to: 0
 13322  013F42  C091  F097         	movff	___fldiv@new_exp,___fldiv@bexp
 13323                           
 13324                           ; BSR set to: 0
 13325  013F46  0100               	movlb	0	; () banked
 13326  013F48  A197               	btfss	___fldiv@bexp& (0+255),0,b
 13327  013F4A  D003               	goto	l6460
 13328                           
 13329                           ; BSR set to: 0
 13330  013F4C  0100               	movlb	0	; () banked
 13331  013F4E  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 13332  013F50  D002               	goto	l6462
 13333  013F52                     l6460:
 13334                           
 13335                           ; BSR set to: 0
 13336  013F52  0100               	movlb	0	; () banked
 13337  013F54  9F82               	bcf	(___fldiv@b+2)& (0+255),7,b
 13338  013F56                     l6462:
 13339                           
 13340                           ; BSR set to: 0
 13341  013F56  0100               	movlb	0	; () banked
 13342  013F58  90D8               	bcf	status,0,c
 13343  013F5A  3197               	rrcf	___fldiv@bexp& (0+255),w,b
 13344  013F5C  0100               	movlb	0	; () banked
 13345  013F5E  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13346                           
 13347                           ; BSR set to: 0
 13348  013F60  0100               	movlb	0	; () banked
 13349  013F62  518C               	movf	___fldiv@sign& (0+255),w,b
 13350  013F64  0100               	movlb	0	; () banked
 13351  013F66  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13352                           
 13353                           ; BSR set to: 0
 13354  013F68  C080  F080         	movff	___fldiv@b,?___fldiv
 13355  013F6C  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 13356  013F70  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 13357  013F74  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 13358  013F78  0012               	return	
 13359  013F7A                     __end_of___fldiv:
 13360                           	opt stack 0
 13361                           tblptru	equ	0xFF8
 13362                           tblptrh	equ	0xFF7
 13363                           tblptrl	equ	0xFF6
 13364                           tablat	equ	0xFF5
 13365                           prodh	equ	0xFF4
 13366                           prodl	equ	0xFF3
 13367                           intcon	equ	0xFF2
 13368                           postinc0	equ	0xFEE
 13369                           wreg	equ	0xFE8
 13370                           indf2	equ	0xFDF
 13371                           postinc2	equ	0xFDE
 13372                           fsr2h	equ	0xFDA
 13373                           fsr2l	equ	0xFD9
 13374                           status	equ	0xFD8
 13375                           
 13376 ;; *************** function _LCD_write_string *****************
 13377 ;; Defined at:
 13378 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  buffer          2   35[BANK0 ] PTR unsigned char 
 13381 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;		None
 13384 ;; Return value:  Size  Location     Type
 13385 ;;		None               void
 13386 ;; Registers used:
 13387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;Total ram usage:        2 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:    8
 13400 ;; This function calls:
 13401 ;;		_LCD_write_char
 13402 ;; This function is called by:
 13403 ;;		_LCD_Handler
 13404 ;;		_LCD_write_integer
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text26
 13409  015D34                     __ptext26:
 13410                           	opt stack 0
 13411  015D34                     _LCD_write_string:
 13412                           	opt stack 21
 13413                           
 13414                           ;src\LCD_44780.c: 197: while(*buffer){
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;incstack = 0
 13418  015D34  D00A               	goto	l8212
 13419  015D36                     l8208:
 13420                           
 13421                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 13422  015D36  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13423  015D3A  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13424  015D3E  50DF               	movf	indf2,w,c
 13425  015D40  ECE7  F0AC         	call	_LCD_write_char
 13426                           
 13427                           ;src\LCD_44780.c: 202: buffer++;
 13428  015D44  0100               	movlb	0	; () banked
 13429  015D46  4B83               	infsnz	LCD_write_string@buffer& (0+255),f,b
 13430  015D48  2B84               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 13431  015D4A                     l8212:
 13432  015D4A  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13433  015D4E  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13434  015D52  50DF               	movf	indf2,w,c
 13435  015D54  B4D8               	btfsc	status,2,c
 13436  015D56  0012               	return	
 13437  015D58  D7EE               	goto	l8208
 13438  015D5A                     __end_of_LCD_write_string:
 13439                           	opt stack 0
 13440                           tblptru	equ	0xFF8
 13441                           tblptrh	equ	0xFF7
 13442                           tblptrl	equ	0xFF6
 13443                           tablat	equ	0xFF5
 13444                           prodh	equ	0xFF4
 13445                           prodl	equ	0xFF3
 13446                           intcon	equ	0xFF2
 13447                           postinc0	equ	0xFEE
 13448                           wreg	equ	0xFE8
 13449                           indf2	equ	0xFDF
 13450                           postinc2	equ	0xFDE
 13451                           fsr2h	equ	0xFDA
 13452                           fsr2l	equ	0xFD9
 13453                           status	equ	0xFD8
 13454                           
 13455 ;; *************** function _LCD_write_message *****************
 13456 ;; Defined at:
 13457 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  buffer          2   35[BANK0 ] PTR const unsigned char 
 13460 ;;		 -> STR_16(8), STR_15(8), STR_14(8), STR_13(8), 
 13461 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(14), 
 13462 ;;		 -> STR_8(17), STR_7(12), STR_6(21), STR_4(21), 
 13463 ;;		 -> STR_3(21), STR_2(21), STR_1(21), 
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;		None
 13466 ;; Return value:  Size  Location     Type
 13467 ;;		None               void
 13468 ;; Registers used:
 13469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13470 ;; Tracked objects:
 13471 ;;		On entry : 0/0
 13472 ;;		On exit  : 0/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;Total ram usage:        2 bytes
 13480 ;; Hardware stack levels used:    1
 13481 ;; Hardware stack levels required when called:    8
 13482 ;; This function calls:
 13483 ;;		_LCD_write_char
 13484 ;; This function is called by:
 13485 ;;		_main
 13486 ;;		_LCD_Handler
 13487 ;; This function uses a non-reentrant model
 13488 ;;
 13489                           
 13490                           	psect	text27
 13491  015C72                     __ptext27:
 13492                           	opt stack 0
 13493  015C72                     _LCD_write_message:
 13494                           	opt stack 22
 13495                           
 13496                           ;src\LCD_44780.c: 181: while(*buffer) {
 13497                           
 13498                           ;incstack = 0
 13499  015C72  D00D               	goto	l8204
 13500  015C74                     l8200:
 13501                           
 13502                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13503  015C74  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13504  015C78  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13505  015C7C                     	if	0	;tblptru may be non-zero
 13506  015C7C                     	endif
 13507  015C7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13508  015C7C  0E00               	movlw	low (__mediumconst shr (0+16))
 13509  015C7E  6EF8               	movwf	tblptru,c
 13510  015C80                     	endif
 13511  015C80  0008               	tblrd		*
 13512  015C82  50F5               	movf	tablat,w,c
 13513  015C84  ECE7  F0AC         	call	_LCD_write_char
 13514                           
 13515                           ;src\LCD_44780.c: 186: buffer++;
 13516  015C88  0100               	movlb	0	; () banked
 13517  015C8A  4B83               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13518  015C8C  2B84               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13519  015C8E                     l8204:
 13520  015C8E  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13521  015C92  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13522  015C96                     	if	0	;tblptru may be non-zero
 13523  015C96                     	endif
 13524  015C96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13525  015C96  0E00               	movlw	low (__mediumconst shr (0+16))
 13526  015C98  6EF8               	movwf	tblptru,c
 13527  015C9A                     	endif
 13528  015C9A  0008               	tblrd		*
 13529  015C9C  50F5               	movf	tablat,w,c
 13530  015C9E  0900               	iorlw	0
 13531  015CA0  B4D8               	btfsc	status,2,c
 13532  015CA2  0012               	return	
 13533  015CA4  D7E7               	goto	l8200
 13534  015CA6                     __end_of_LCD_write_message:
 13535                           	opt stack 0
 13536                           tblptru	equ	0xFF8
 13537                           tblptrh	equ	0xFF7
 13538                           tblptrl	equ	0xFF6
 13539                           tablat	equ	0xFF5
 13540                           prodh	equ	0xFF4
 13541                           prodl	equ	0xFF3
 13542                           intcon	equ	0xFF2
 13543                           postinc0	equ	0xFEE
 13544                           wreg	equ	0xFE8
 13545                           indf2	equ	0xFDF
 13546                           postinc2	equ	0xFDE
 13547                           fsr2h	equ	0xFDA
 13548                           fsr2l	equ	0xFD9
 13549                           status	equ	0xFD8
 13550                           
 13551 ;; *************** function _LCD_write_char *****************
 13552 ;; Defined at:
 13553 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  value           1    wreg     unsigned char 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;  value           1   34[BANK0 ] unsigned char 
 13558 ;;  D0              1   33[BANK0 ] unsigned char 
 13559 ;;  D1              1   32[BANK0 ] unsigned char 
 13560 ;;  D2              1   31[BANK0 ] unsigned char 
 13561 ;;  D3              1   30[BANK0 ] unsigned char 
 13562 ;; Return value:  Size  Location     Type
 13563 ;;		None               void
 13564 ;; Registers used:
 13565 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;Total ram usage:        5 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:    7
 13578 ;; This function calls:
 13579 ;;		_LCD_send_command
 13580 ;; This function is called by:
 13581 ;;		_LCD_write_message
 13582 ;;		_LCD_write_string
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           	psect	text28
 13587  0159CE                     __ptext28:
 13588                           	opt stack 0
 13589  0159CE                     _LCD_write_char:
 13590                           	opt stack 22
 13591                           
 13592                           ;incstack = 0
 13593                           ;LCD_write_char@value stored from wreg
 13594  0159CE  0100               	movlb	0	; () banked
 13595  0159D0  6F82               	movwf	LCD_write_char@value& (0+255),b
 13596                           
 13597                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13598                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13599  0159D2  848D               	bsf	3981,2,c	;volatile
 13600                           
 13601                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13602  0159D4  0100               	movlb	0	; () banked
 13603  0159D6  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 13604  0159D8  0B01               	andlw	1
 13605  0159DA  0100               	movlb	0	; () banked
 13606  0159DC  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 13607                           
 13608                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13609  0159DE  0100               	movlb	0	; () banked
 13610  0159E0  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 13611  0159E2  46E8               	rlncf	wreg,f,c
 13612  0159E4  0B03               	andlw	3
 13613  0159E6  0B01               	andlw	1
 13614  0159E8  0100               	movlb	0	; () banked
 13615  0159EA  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 13616                           
 13617                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13618  0159EC  0100               	movlb	0	; () banked
 13619  0159EE  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13620  0159F0  42E8               	rrncf	wreg,f,c
 13621  0159F2  0B07               	andlw	7
 13622  0159F4  0B01               	andlw	1
 13623  0159F6  0100               	movlb	0	; () banked
 13624  0159F8  6F80               	movwf	LCD_write_char@D1& (0+255),b
 13625                           
 13626                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13627  0159FA  0100               	movlb	0	; () banked
 13628  0159FC  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13629  0159FE  0B0F               	andlw	15
 13630  015A00  0B01               	andlw	1
 13631  015A02  0100               	movlb	0	; () banked
 13632  015A04  6F81               	movwf	LCD_write_char@D0& (0+255),b
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13636  015A06  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 13637  015A0A  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 13638  015A0E  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 13639  015A12  0100               	movlb	0	; () banked
 13640  015A14  517E               	movf	LCD_write_char@D3& (0+255),w,b
 13641  015A16  ECC8  F0AD         	call	_LCD_send_command
 13642                           
 13643                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13644  015A1A  0100               	movlb	0	; () banked
 13645  015A1C  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13646  015A1E  46E8               	rlncf	wreg,f,c
 13647  015A20  0B1F               	andlw	31
 13648  015A22  0B01               	andlw	1
 13649  015A24  0100               	movlb	0	; () banked
 13650  015A26  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 13654  015A28  0100               	movlb	0	; () banked
 13655  015A2A  4182               	rrncf	LCD_write_char@value& (0+255),w,b
 13656  015A2C  42E8               	rrncf	wreg,f,c
 13657  015A2E  0B3F               	andlw	63
 13658  015A30  0B01               	andlw	1
 13659  015A32  0100               	movlb	0	; () banked
 13660  015A34  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 13664  015A36  0100               	movlb	0	; () banked
 13665  015A38  90D8               	bcf	status,0,c
 13666  015A3A  3182               	rrcf	LCD_write_char@value& (0+255),w,b
 13667  015A3C  0B01               	andlw	1
 13668  015A3E  0100               	movlb	0	; () banked
 13669  015A40  6F80               	movwf	LCD_write_char@D1& (0+255),b
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 13673  015A42  0100               	movlb	0	; () banked
 13674  015A44  5182               	movf	LCD_write_char@value& (0+255),w,b
 13675  015A46  0B01               	andlw	1
 13676  015A48  0100               	movlb	0	; () banked
 13677  015A4A  6F81               	movwf	LCD_write_char@D0& (0+255),b
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 13681  015A4C  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 13682  015A50  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 13683  015A54  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 13684  015A58  0100               	movlb	0	; () banked
 13685  015A5A  517E               	movf	LCD_write_char@D3& (0+255),w,b
 13686  015A5C  ECC8  F0AD         	call	_LCD_send_command
 13687                           
 13688                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 13689  015A60  948D               	bcf	3981,2,c	;volatile
 13690  015A62  0012               	return		;funcret
 13691  015A64                     __end_of_LCD_write_char:
 13692                           	opt stack 0
 13693                           tblptru	equ	0xFF8
 13694                           tblptrh	equ	0xFF7
 13695                           tblptrl	equ	0xFF6
 13696                           tablat	equ	0xFF5
 13697                           prodh	equ	0xFF4
 13698                           prodl	equ	0xFF3
 13699                           intcon	equ	0xFF2
 13700                           postinc0	equ	0xFEE
 13701                           wreg	equ	0xFE8
 13702                           indf2	equ	0xFDF
 13703                           postinc2	equ	0xFDE
 13704                           fsr2h	equ	0xFDA
 13705                           fsr2l	equ	0xFD9
 13706                           status	equ	0xFD8
 13707                           
 13708 ;; *************** function _LCD_initialize *****************
 13709 ;; Defined at:
 13710 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;  quartz_frequ    1    wreg     unsigned char 
 13713 ;; Auto vars:     Size  Location     Type
 13714 ;;  quartz_frequ    1   32[BANK0 ] unsigned char 
 13715 ;; Return value:  Size  Location     Type
 13716 ;;		None               void
 13717 ;; Registers used:
 13718 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13719 ;; Tracked objects:
 13720 ;;		On entry : 0/0
 13721 ;;		On exit  : 0/0
 13722 ;;		Unchanged: 0/0
 13723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;Total ram usage:        1 bytes
 13729 ;; Hardware stack levels used:    1
 13730 ;; Hardware stack levels required when called:    8
 13731 ;; This function calls:
 13732 ;;		_LCD_clear
 13733 ;;		_LCD_cursor
 13734 ;;		_LCD_send_command
 13735 ;;		_delay_ms
 13736 ;;		_delay_set_quartz
 13737 ;; This function is called by:
 13738 ;;		_main
 13739 ;;		_LCD_Handler
 13740 ;;		_board_initialization
 13741 ;; This function uses a non-reentrant model
 13742 ;;
 13743                           
 13744                           	psect	text29
 13745  015048                     __ptext29:
 13746                           	opt stack 0
 13747  015048                     _LCD_initialize:
 13748                           	opt stack 21
 13749                           
 13750                           ;incstack = 0
 13751                           ;LCD_initialize@quartz_frequency stored from wreg
 13752  015048  0100               	movlb	0	; () banked
 13753  01504A  6F80               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 13754                           
 13755                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 13756  01504C  0100               	movlb	0	; () banked
 13757  01504E  5180               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 13758  015050  EC2D  F0AF         	call	_delay_set_quartz
 13759                           
 13760                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 13761  015054  948D               	bcf	3981,2,c	;volatile
 13762                           
 13763                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 13764  015056  928B               	bcf	3979,1,c	;volatile
 13765                           
 13766                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 13767  015058  908B               	bcf	3979,0,c	;volatile
 13768                           
 13769                           ;src\LCD_44780.c: 291: delay_ms (100);
 13770  01505A  0E00               	movlw	0
 13771  01505C  0100               	movlb	0	; () banked
 13772  01505E  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13773  015060  0E64               	movlw	100
 13774  015062  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13775  015064  ECE5  F0AD         	call	_delay_ms	;wreg free
 13776                           
 13777                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 13778  015068  0E00               	movlw	0
 13779  01506A  0100               	movlb	0	; () banked
 13780  01506C  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13781  01506E  0E01               	movlw	1
 13782  015070  0100               	movlb	0	; () banked
 13783  015072  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13784  015074  0E01               	movlw	1
 13785  015076  0100               	movlb	0	; () banked
 13786  015078  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13787  01507A  0E00               	movlw	0
 13788  01507C  ECC8  F0AD         	call	_LCD_send_command
 13789                           
 13790                           ;src\LCD_44780.c: 293: delay_ms (100);
 13791  015080  0E00               	movlw	0
 13792  015082  0100               	movlb	0	; () banked
 13793  015084  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13794  015086  0E64               	movlw	100
 13795  015088  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13796  01508A  ECE5  F0AD         	call	_delay_ms	;wreg free
 13797                           
 13798                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 13799  01508E  0E00               	movlw	0
 13800  015090  0100               	movlb	0	; () banked
 13801  015092  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13802  015094  0E01               	movlw	1
 13803  015096  0100               	movlb	0	; () banked
 13804  015098  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13805  01509A  0E01               	movlw	1
 13806  01509C  0100               	movlb	0	; () banked
 13807  01509E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13808  0150A0  0E00               	movlw	0
 13809  0150A2  ECC8  F0AD         	call	_LCD_send_command
 13810                           
 13811                           ;src\LCD_44780.c: 295: delay_ms (10);
 13812  0150A6  0E00               	movlw	0
 13813  0150A8  0100               	movlb	0	; () banked
 13814  0150AA  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13815  0150AC  0E0A               	movlw	10
 13816  0150AE  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13817  0150B0  ECE5  F0AD         	call	_delay_ms	;wreg free
 13818                           
 13819                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 13820  0150B4  0E00               	movlw	0
 13821  0150B6  0100               	movlb	0	; () banked
 13822  0150B8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13823  0150BA  0E01               	movlw	1
 13824  0150BC  0100               	movlb	0	; () banked
 13825  0150BE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13826  0150C0  0E01               	movlw	1
 13827  0150C2  0100               	movlb	0	; () banked
 13828  0150C4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13829  0150C6  0E00               	movlw	0
 13830  0150C8  ECC8  F0AD         	call	_LCD_send_command
 13831                           
 13832                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 13833  0150CC  0E00               	movlw	0
 13834  0150CE  0100               	movlb	0	; () banked
 13835  0150D0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13836  0150D2  0E01               	movlw	1
 13837  0150D4  0100               	movlb	0	; () banked
 13838  0150D6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13839  0150D8  0E00               	movlw	0
 13840  0150DA  0100               	movlb	0	; () banked
 13841  0150DC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13842  0150DE  0E00               	movlw	0
 13843  0150E0  ECC8  F0AD         	call	_LCD_send_command
 13844                           
 13845                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 13846  0150E4  0E00               	movlw	0
 13847  0150E6  0100               	movlb	0	; () banked
 13848  0150E8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13849  0150EA  0E01               	movlw	1
 13850  0150EC  0100               	movlb	0	; () banked
 13851  0150EE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13852  0150F0  0E00               	movlw	0
 13853  0150F2  0100               	movlb	0	; () banked
 13854  0150F4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13855  0150F6  0E00               	movlw	0
 13856  0150F8  ECC8  F0AD         	call	_LCD_send_command
 13857                           
 13858                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 13859  0150FC  0E00               	movlw	0
 13860  0150FE  0100               	movlb	0	; () banked
 13861  015100  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13862  015102  0E00               	movlw	0
 13863  015104  0100               	movlb	0	; () banked
 13864  015106  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13865  015108  0E00               	movlw	0
 13866  01510A  0100               	movlb	0	; () banked
 13867  01510C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13868  01510E  0E01               	movlw	1
 13869  015110  ECC8  F0AD         	call	_LCD_send_command
 13870                           
 13871                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 13872  015114  0E00               	movlw	0
 13873  015116  0100               	movlb	0	; () banked
 13874  015118  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13875  01511A  0E00               	movlw	0
 13876  01511C  0100               	movlb	0	; () banked
 13877  01511E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13878  015120  0E00               	movlw	0
 13879  015122  0100               	movlb	0	; () banked
 13880  015124  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13881  015126  0E00               	movlw	0
 13882  015128  ECC8  F0AD         	call	_LCD_send_command
 13883                           
 13884                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 13885  01512C  0E00               	movlw	0
 13886  01512E  0100               	movlb	0	; () banked
 13887  015130  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13888  015132  0E00               	movlw	0
 13889  015134  0100               	movlb	0	; () banked
 13890  015136  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13891  015138  0E00               	movlw	0
 13892  01513A  0100               	movlb	0	; () banked
 13893  01513C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13894  01513E  0E01               	movlw	1
 13895  015140  ECC8  F0AD         	call	_LCD_send_command
 13896                           
 13897                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 13898  015144  0E00               	movlw	0
 13899  015146  0100               	movlb	0	; () banked
 13900  015148  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13901  01514A  0E00               	movlw	0
 13902  01514C  0100               	movlb	0	; () banked
 13903  01514E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13904  015150  0E00               	movlw	0
 13905  015152  0100               	movlb	0	; () banked
 13906  015154  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13907  015156  0E00               	movlw	0
 13908  015158  ECC8  F0AD         	call	_LCD_send_command
 13909                           
 13910                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 13911  01515C  0E00               	movlw	0
 13912  01515E  0100               	movlb	0	; () banked
 13913  015160  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13914  015162  0E00               	movlw	0
 13915  015164  0100               	movlb	0	; () banked
 13916  015166  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13917  015168  0E01               	movlw	1
 13918  01516A  0100               	movlb	0	; () banked
 13919  01516C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13920  01516E  0E00               	movlw	0
 13921  015170  ECC8  F0AD         	call	_LCD_send_command
 13922                           
 13923                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 13924  015174  0E00               	movlw	0
 13925  015176  0100               	movlb	0	; () banked
 13926  015178  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13927  01517A  0E00               	movlw	0
 13928  01517C  0100               	movlb	0	; () banked
 13929  01517E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13930  015180  0E00               	movlw	0
 13931  015182  0100               	movlb	0	; () banked
 13932  015184  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13933  015186  0E00               	movlw	0
 13934  015188  ECC8  F0AD         	call	_LCD_send_command
 13935                           
 13936                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 13937  01518C  0E01               	movlw	1
 13938  01518E  0100               	movlb	0	; () banked
 13939  015190  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13940  015192  0E01               	movlw	1
 13941  015194  0100               	movlb	0	; () banked
 13942  015196  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13943  015198  0E00               	movlw	0
 13944  01519A  0100               	movlb	0	; () banked
 13945  01519C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13946  01519E  0E00               	movlw	0
 13947  0151A0  ECC8  F0AD         	call	_LCD_send_command
 13948                           
 13949                           ;src\LCD_44780.c: 312: LCD_clear ();
 13950  0151A4  EC6C  F0AE         	call	_LCD_clear	;wreg free
 13951                           
 13952                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 13953  0151A8  0E00               	movlw	0
 13954  0151AA  0100               	movlb	0	; () banked
 13955  0151AC  6F7E               	movwf	LCD_cursor@blinking& (0+255),b
 13956  0151AE  0E00               	movlw	0
 13957  0151B0  EC53  F0AE         	call	_LCD_cursor
 13958  0151B4  0012               	return		;funcret
 13959  0151B6                     __end_of_LCD_initialize:
 13960                           	opt stack 0
 13961                           tblptru	equ	0xFF8
 13962                           tblptrh	equ	0xFF7
 13963                           tblptrl	equ	0xFF6
 13964                           tablat	equ	0xFF5
 13965                           prodh	equ	0xFF4
 13966                           prodl	equ	0xFF3
 13967                           intcon	equ	0xFF2
 13968                           postinc0	equ	0xFEE
 13969                           wreg	equ	0xFE8
 13970                           indf2	equ	0xFDF
 13971                           postinc2	equ	0xFDE
 13972                           fsr2h	equ	0xFDA
 13973                           fsr2l	equ	0xFD9
 13974                           status	equ	0xFD8
 13975                           
 13976 ;; *************** function _delay_set_quartz *****************
 13977 ;; Defined at:
 13978 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;  frequency       1    wreg     unsigned char 
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  frequency       1   18[BANK0 ] unsigned char 
 13983 ;; Return value:  Size  Location     Type
 13984 ;;		None               void
 13985 ;; Registers used:
 13986 ;;		wreg
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;Total ram usage:        1 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:    3
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_LCD_initialize
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text30
 14007  015E5A                     __ptext30:
 14008                           	opt stack 0
 14009  015E5A                     _delay_set_quartz:
 14010                           	opt stack 25
 14011                           
 14012                           ;incstack = 0
 14013                           ;delay_set_quartz@frequency stored from wreg
 14014  015E5A  0100               	movlb	0	; () banked
 14015  015E5C  6F72               	movwf	delay_set_quartz@frequency& (0+255),b
 14016                           
 14017                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 14018  015E5E  C072  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 14019  015E62  0012               	return		;funcret
 14020  015E64                     __end_of_delay_set_quartz:
 14021                           	opt stack 0
 14022                           tblptru	equ	0xFF8
 14023                           tblptrh	equ	0xFF7
 14024                           tblptrl	equ	0xFF6
 14025                           tablat	equ	0xFF5
 14026                           prodh	equ	0xFF4
 14027                           prodl	equ	0xFF3
 14028                           intcon	equ	0xFF2
 14029                           postinc0	equ	0xFEE
 14030                           wreg	equ	0xFE8
 14031                           indf2	equ	0xFDF
 14032                           postinc2	equ	0xFDE
 14033                           fsr2h	equ	0xFDA
 14034                           fsr2l	equ	0xFD9
 14035                           status	equ	0xFD8
 14036                           
 14037 ;; *************** function _LCD_cursor *****************
 14038 ;; Defined at:
 14039 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;  active          1    wreg     unsigned char 
 14042 ;;  blinking        1   30[BANK0 ] unsigned char 
 14043 ;; Auto vars:     Size  Location     Type
 14044 ;;  active          1   31[BANK0 ] unsigned char 
 14045 ;; Return value:  Size  Location     Type
 14046 ;;		None               void
 14047 ;; Registers used:
 14048 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14049 ;; Tracked objects:
 14050 ;;		On entry : 0/0
 14051 ;;		On exit  : 0/0
 14052 ;;		Unchanged: 0/0
 14053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14054 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;Total ram usage:        2 bytes
 14059 ;; Hardware stack levels used:    1
 14060 ;; Hardware stack levels required when called:    7
 14061 ;; This function calls:
 14062 ;;		_LCD_send_command
 14063 ;; This function is called by:
 14064 ;;		_LCD_initialize
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           	psect	text31
 14069  015CA6                     __ptext31:
 14070                           	opt stack 0
 14071  015CA6                     _LCD_cursor:
 14072                           	opt stack 21
 14073                           
 14074                           ;incstack = 0
 14075                           ;LCD_cursor@active stored from wreg
 14076  015CA6  0100               	movlb	0	; () banked
 14077  015CA8  6F7F               	movwf	LCD_cursor@active& (0+255),b
 14078                           
 14079                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 14080  015CAA  0E00               	movlw	0
 14081  015CAC  0100               	movlb	0	; () banked
 14082  015CAE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14083  015CB0  0E00               	movlw	0
 14084  015CB2  0100               	movlb	0	; () banked
 14085  015CB4  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14086  015CB6  0E00               	movlw	0
 14087  015CB8  0100               	movlb	0	; () banked
 14088  015CBA  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14089  015CBC  0E00               	movlw	0
 14090  015CBE  ECC8  F0AD         	call	_LCD_send_command
 14091                           
 14092                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 14093  015CC2  0E01               	movlw	1
 14094  015CC4  0100               	movlb	0	; () banked
 14095  015CC6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14096  015CC8  C07F  F07B         	movff	LCD_cursor@active,LCD_send_command@D1
 14097  015CCC  C07E  F07C         	movff	LCD_cursor@blinking,LCD_send_command@D0
 14098  015CD0  0E01               	movlw	1
 14099  015CD2  ECC8  F0AD         	call	_LCD_send_command
 14100  015CD6  0012               	return		;funcret
 14101  015CD8                     __end_of_LCD_cursor:
 14102                           	opt stack 0
 14103                           tblptru	equ	0xFF8
 14104                           tblptrh	equ	0xFF7
 14105                           tblptrl	equ	0xFF6
 14106                           tablat	equ	0xFF5
 14107                           prodh	equ	0xFF4
 14108                           prodl	equ	0xFF3
 14109                           intcon	equ	0xFF2
 14110                           postinc0	equ	0xFEE
 14111                           wreg	equ	0xFE8
 14112                           indf2	equ	0xFDF
 14113                           postinc2	equ	0xFDE
 14114                           fsr2h	equ	0xFDA
 14115                           fsr2l	equ	0xFD9
 14116                           status	equ	0xFD8
 14117                           
 14118 ;; *************** function _LCD_clear *****************
 14119 ;; Defined at:
 14120 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;		None
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;		None
 14125 ;; Return value:  Size  Location     Type
 14126 ;;		None               void
 14127 ;; Registers used:
 14128 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14138 ;;Total ram usage:        0 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    7
 14141 ;; This function calls:
 14142 ;;		_LCD_send_command
 14143 ;; This function is called by:
 14144 ;;		_LCD_initialize
 14145 ;;		_LCD_Handler
 14146 ;;		_board_initialization
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150                           	psect	text32
 14151  015CD8                     __ptext32:
 14152                           	opt stack 0
 14153  015CD8                     _LCD_clear:
 14154                           	opt stack 21
 14155                           
 14156                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 14157                           
 14158                           ;incstack = 0
 14159  015CD8  0E00               	movlw	0
 14160  015CDA  0100               	movlb	0	; () banked
 14161  015CDC  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14162  015CDE  0E00               	movlw	0
 14163  015CE0  0100               	movlb	0	; () banked
 14164  015CE2  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14165  015CE4  0E00               	movlw	0
 14166  015CE6  0100               	movlb	0	; () banked
 14167  015CE8  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14168  015CEA  0E00               	movlw	0
 14169  015CEC  ECC8  F0AD         	call	_LCD_send_command
 14170                           
 14171                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 14172  015CF0  0E00               	movlw	0
 14173  015CF2  0100               	movlb	0	; () banked
 14174  015CF4  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14175  015CF6  0E00               	movlw	0
 14176  015CF8  0100               	movlb	0	; () banked
 14177  015CFA  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14178  015CFC  0E01               	movlw	1
 14179  015CFE  0100               	movlb	0	; () banked
 14180  015D00  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14181  015D02  0E00               	movlw	0
 14182  015D04  ECC8  F0AD         	call	_LCD_send_command
 14183  015D08  0012               	return		;funcret
 14184  015D0A                     __end_of_LCD_clear:
 14185                           	opt stack 0
 14186                           tblptru	equ	0xFF8
 14187                           tblptrh	equ	0xFF7
 14188                           tblptrl	equ	0xFF6
 14189                           tablat	equ	0xFF5
 14190                           prodh	equ	0xFF4
 14191                           prodl	equ	0xFF3
 14192                           intcon	equ	0xFF2
 14193                           postinc0	equ	0xFEE
 14194                           wreg	equ	0xFE8
 14195                           indf2	equ	0xFDF
 14196                           postinc2	equ	0xFDE
 14197                           fsr2h	equ	0xFDA
 14198                           fsr2l	equ	0xFD9
 14199                           status	equ	0xFD8
 14200                           
 14201 ;; *************** function _LCD_goto_xy *****************
 14202 ;; Defined at:
 14203 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;  x               1    wreg     unsigned char 
 14206 ;;  y               1   33[BANK0 ] unsigned char 
 14207 ;; Auto vars:     Size  Location     Type
 14208 ;;  x               1   34[BANK0 ] unsigned char 
 14209 ;; Return value:  Size  Location     Type
 14210 ;;		None               void
 14211 ;; Registers used:
 14212 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14213 ;; Tracked objects:
 14214 ;;		On entry : 0/0
 14215 ;;		On exit  : 0/0
 14216 ;;		Unchanged: 0/0
 14217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14218 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14222 ;;Total ram usage:        2 bytes
 14223 ;; Hardware stack levels used:    1
 14224 ;; Hardware stack levels required when called:    8
 14225 ;; This function calls:
 14226 ;;		_LCD_goto_line
 14227 ;;		_LCD_shift_cursor
 14228 ;; This function is called by:
 14229 ;;		_LCD_Handler
 14230 ;; This function uses a non-reentrant model
 14231 ;;
 14232                           
 14233                           	psect	text33
 14234  015DDA                     __ptext33:
 14235                           	opt stack 0
 14236  015DDA                     _LCD_goto_xy:
 14237                           	opt stack 21
 14238                           
 14239                           ;incstack = 0
 14240                           ;LCD_goto_xy@x stored from wreg
 14241  015DDA  0100               	movlb	0	; () banked
 14242  015DDC  6F82               	movwf	LCD_goto_xy@x& (0+255),b
 14243                           
 14244                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14245  015DDE  0100               	movlb	0	; () banked
 14246  015DE0  5181               	movf	LCD_goto_xy@y& (0+255),w,b
 14247  015DE2  EC12  F0AA         	call	_LCD_goto_line
 14248                           
 14249                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14250  015DE6  0100               	movlb	0	; () banked
 14251  015DE8  0582               	decf	LCD_goto_xy@x& (0+255),w,b
 14252  015DEA  0100               	movlb	0	; () banked
 14253  015DEC  6F7E               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14254  015DEE  0E01               	movlw	1
 14255  015DF0  EC5C  F0AD         	call	_LCD_shift_cursor
 14256  015DF4  0012               	return		;funcret
 14257  015DF6                     __end_of_LCD_goto_xy:
 14258                           	opt stack 0
 14259                           tblptru	equ	0xFF8
 14260                           tblptrh	equ	0xFF7
 14261                           tblptrl	equ	0xFF6
 14262                           tablat	equ	0xFF5
 14263                           prodh	equ	0xFF4
 14264                           prodl	equ	0xFF3
 14265                           intcon	equ	0xFF2
 14266                           postinc0	equ	0xFEE
 14267                           wreg	equ	0xFE8
 14268                           indf2	equ	0xFDF
 14269                           postinc2	equ	0xFDE
 14270                           fsr2h	equ	0xFDA
 14271                           fsr2l	equ	0xFD9
 14272                           status	equ	0xFD8
 14273                           
 14274 ;; *************** function _LCD_shift_cursor *****************
 14275 ;; Defined at:
 14276 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14277 ;; Parameters:    Size  Location     Type
 14278 ;;  shift           1    wreg     unsigned char 
 14279 ;;  number_of_sh    1   30[BANK0 ] unsigned char 
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;  shift           1   31[BANK0 ] unsigned char 
 14282 ;;  i               1   32[BANK0 ] unsigned char 
 14283 ;; Return value:  Size  Location     Type
 14284 ;;		None               void
 14285 ;; Registers used:
 14286 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14292 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14295 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14296 ;;Total ram usage:        3 bytes
 14297 ;; Hardware stack levels used:    1
 14298 ;; Hardware stack levels required when called:    7
 14299 ;; This function calls:
 14300 ;;		_LCD_send_command
 14301 ;; This function is called by:
 14302 ;;		_LCD_goto_xy
 14303 ;; This function uses a non-reentrant model
 14304 ;;
 14305                           
 14306                           	psect	text34
 14307  015AB8                     __ptext34:
 14308                           	opt stack 0
 14309  015AB8                     _LCD_shift_cursor:
 14310                           	opt stack 21
 14311                           
 14312                           ;incstack = 0
 14313                           ;LCD_shift_cursor@shift stored from wreg
 14314  015AB8  0100               	movlb	0	; () banked
 14315  015ABA  6F7F               	movwf	LCD_shift_cursor@shift& (0+255),b
 14316                           
 14317                           ;src\LCD_44780.c: 100: unsigned char i;
 14318                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14319  015ABC  0E00               	movlw	0
 14320  015ABE  0100               	movlb	0	; () banked
 14321  015AC0  6F80               	movwf	LCD_shift_cursor@i& (0+255),b
 14322  015AC2  D019               	goto	l7812
 14323  015AC4                     l7808:
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14327  015AC4  0E00               	movlw	0
 14328  015AC6  0100               	movlb	0	; () banked
 14329  015AC8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14330  015ACA  0E00               	movlw	0
 14331  015ACC  0100               	movlb	0	; () banked
 14332  015ACE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14333  015AD0  0E01               	movlw	1
 14334  015AD2  0100               	movlb	0	; () banked
 14335  015AD4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14336  015AD6  0E00               	movlw	0
 14337  015AD8  ECC8  F0AD         	call	_LCD_send_command
 14338                           
 14339                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14340  015ADC  C07F  F07A         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14341  015AE0  0E00               	movlw	0
 14342  015AE2  0100               	movlb	0	; () banked
 14343  015AE4  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14344  015AE6  0E00               	movlw	0
 14345  015AE8  0100               	movlb	0	; () banked
 14346  015AEA  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14347  015AEC  0E00               	movlw	0
 14348  015AEE  ECC8  F0AD         	call	_LCD_send_command
 14349  015AF2  0100               	movlb	0	; () banked
 14350  015AF4  2B80               	incf	LCD_shift_cursor@i& (0+255),f,b
 14351  015AF6                     l7812:
 14352                           
 14353                           ; BSR set to: 0
 14354  015AF6  0100               	movlb	0	; () banked
 14355  015AF8  517E               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14356  015AFA  0100               	movlb	0	; () banked
 14357  015AFC  5D80               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14358  015AFE  B0D8               	btfsc	status,0,c
 14359  015B00  0012               	return	
 14360  015B02  D7E0               	goto	l7808
 14361  015B04                     __end_of_LCD_shift_cursor:
 14362                           	opt stack 0
 14363                           tblptru	equ	0xFF8
 14364                           tblptrh	equ	0xFF7
 14365                           tblptrl	equ	0xFF6
 14366                           tablat	equ	0xFF5
 14367                           prodh	equ	0xFF4
 14368                           prodl	equ	0xFF3
 14369                           intcon	equ	0xFF2
 14370                           postinc0	equ	0xFEE
 14371                           wreg	equ	0xFE8
 14372                           indf2	equ	0xFDF
 14373                           postinc2	equ	0xFDE
 14374                           fsr2h	equ	0xFDA
 14375                           fsr2l	equ	0xFD9
 14376                           status	equ	0xFD8
 14377                           
 14378 ;; *************** function _LCD_goto_line *****************
 14379 ;; Defined at:
 14380 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14381 ;; Parameters:    Size  Location     Type
 14382 ;;  line            1    wreg     unsigned char 
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;  line            1   30[BANK0 ] unsigned char 
 14385 ;; Return value:  Size  Location     Type
 14386 ;;		None               void
 14387 ;; Registers used:
 14388 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14389 ;; Tracked objects:
 14390 ;;		On entry : 0/0
 14391 ;;		On exit  : 0/0
 14392 ;;		Unchanged: 0/0
 14393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;Total ram usage:        1 bytes
 14399 ;; Hardware stack levels used:    1
 14400 ;; Hardware stack levels required when called:    7
 14401 ;; This function calls:
 14402 ;;		_LCD_send_command
 14403 ;; This function is called by:
 14404 ;;		_LCD_goto_xy
 14405 ;;		_main
 14406 ;;		_LCD_Handler
 14407 ;;		_board_initialization
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           	psect	text35
 14412  015424                     __ptext35:
 14413                           	opt stack 0
 14414  015424                     _LCD_goto_line:
 14415                           	opt stack 22
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;incstack = 0
 14419                           ;LCD_goto_line@line stored from wreg
 14420  015424  0100               	movlb	0	; () banked
 14421  015426  6F7E               	movwf	LCD_goto_line@line& (0+255),b
 14422                           
 14423                           ;src\LCD_44780.c: 113: switch(line) {
 14424  015428  D064               	goto	l7824
 14425  01542A                     l7816:
 14426  01542A  0E00               	movlw	0
 14427  01542C  0100               	movlb	0	; () banked
 14428  01542E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14429  015430  0E00               	movlw	0
 14430  015432  0100               	movlb	0	; () banked
 14431  015434  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14432  015436  0E00               	movlw	0
 14433  015438  0100               	movlb	0	; () banked
 14434  01543A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14435  01543C  0E01               	movlw	1
 14436  01543E  ECC8  F0AD         	call	_LCD_send_command
 14437                           
 14438                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 14439  015442  0E00               	movlw	0
 14440  015444  0100               	movlb	0	; () banked
 14441  015446  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14442  015448  0E00               	movlw	0
 14443  01544A  0100               	movlb	0	; () banked
 14444  01544C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14445  01544E  0E00               	movlw	0
 14446  015450  0100               	movlb	0	; () banked
 14447  015452  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14448  015454  0E00               	movlw	0
 14449  015456  ECC8  F0AD         	call	_LCD_send_command
 14450                           
 14451                           ;src\LCD_44780.c: 117: break;
 14452  01545A  0012               	return	
 14453  01545C                     l7818:
 14454  01545C  0E01               	movlw	1
 14455  01545E  0100               	movlb	0	; () banked
 14456  015460  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14457  015462  0E00               	movlw	0
 14458  015464  0100               	movlb	0	; () banked
 14459  015466  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14460  015468  0E00               	movlw	0
 14461  01546A  0100               	movlb	0	; () banked
 14462  01546C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14463  01546E  0E01               	movlw	1
 14464  015470  ECC8  F0AD         	call	_LCD_send_command
 14465                           
 14466                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 14467  015474  0E00               	movlw	0
 14468  015476  0100               	movlb	0	; () banked
 14469  015478  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14470  01547A  0E00               	movlw	0
 14471  01547C  0100               	movlb	0	; () banked
 14472  01547E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14473  015480  0E00               	movlw	0
 14474  015482  0100               	movlb	0	; () banked
 14475  015484  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14476  015486  0E00               	movlw	0
 14477  015488  ECC8  F0AD         	call	_LCD_send_command
 14478                           
 14479                           ;src\LCD_44780.c: 121: break;
 14480  01548C  0012               	return	
 14481  01548E                     l7820:
 14482  01548E  0E00               	movlw	0
 14483  015490  0100               	movlb	0	; () banked
 14484  015492  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14485  015494  0E00               	movlw	0
 14486  015496  0100               	movlb	0	; () banked
 14487  015498  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14488  01549A  0E01               	movlw	1
 14489  01549C  0100               	movlb	0	; () banked
 14490  01549E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14491  0154A0  0E01               	movlw	1
 14492  0154A2  ECC8  F0AD         	call	_LCD_send_command
 14493                           
 14494                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 14495  0154A6  0E01               	movlw	1
 14496  0154A8  0100               	movlb	0	; () banked
 14497  0154AA  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14498  0154AC  0E00               	movlw	0
 14499  0154AE  0100               	movlb	0	; () banked
 14500  0154B0  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14501  0154B2  0E00               	movlw	0
 14502  0154B4  0100               	movlb	0	; () banked
 14503  0154B6  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14504  0154B8  0E00               	movlw	0
 14505  0154BA  ECC8  F0AD         	call	_LCD_send_command
 14506                           
 14507                           ;src\LCD_44780.c: 125: break;
 14508  0154BE  0012               	return	
 14509  0154C0                     l7822:
 14510  0154C0  0E01               	movlw	1
 14511  0154C2  0100               	movlb	0	; () banked
 14512  0154C4  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14513  0154C6  0E00               	movlw	0
 14514  0154C8  0100               	movlb	0	; () banked
 14515  0154CA  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14516  0154CC  0E01               	movlw	1
 14517  0154CE  0100               	movlb	0	; () banked
 14518  0154D0  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14519  0154D2  0E01               	movlw	1
 14520  0154D4  ECC8  F0AD         	call	_LCD_send_command
 14521                           
 14522                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 14523  0154D8  0E01               	movlw	1
 14524  0154DA  0100               	movlb	0	; () banked
 14525  0154DC  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14526  0154DE  0E00               	movlw	0
 14527  0154E0  0100               	movlb	0	; () banked
 14528  0154E2  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14529  0154E4  0E00               	movlw	0
 14530  0154E6  0100               	movlb	0	; () banked
 14531  0154E8  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14532  0154EA  0E00               	movlw	0
 14533  0154EC  ECC8  F0AD         	call	_LCD_send_command
 14534                           
 14535                           ;src\LCD_44780.c: 129: }
 14536  0154F0  0012               	return	
 14537  0154F2                     l7824:
 14538  0154F2  0100               	movlb	0	; () banked
 14539  0154F4  517E               	movf	LCD_goto_line@line& (0+255),w,b
 14540                           
 14541                           ; Switch size 1, requested type "space"
 14542                           ; Number of cases is 4, Range of values is 1 to 4
 14543                           ; switch strategies available:
 14544                           ; Name         Instructions Cycles
 14545                           ; simple_byte           13     7 (average)
 14546                           ;	Chosen strategy is simple_byte
 14547  0154F6  0A01               	xorlw	1	; case 1
 14548  0154F8  B4D8               	btfsc	status,2,c
 14549  0154FA  D797               	goto	l7816
 14550  0154FC  0A03               	xorlw	3	; case 2
 14551  0154FE  B4D8               	btfsc	status,2,c
 14552  015500  D7AD               	goto	l7818
 14553  015502  0A01               	xorlw	1	; case 3
 14554  015504  B4D8               	btfsc	status,2,c
 14555  015506  D7C3               	goto	l7820
 14556  015508  0A07               	xorlw	7	; case 4
 14557  01550A  A4D8               	btfss	status,2,c
 14558  01550C  0012               	return	
 14559  01550E  D7D8               	goto	l7822
 14560  015510                     __end_of_LCD_goto_line:
 14561                           	opt stack 0
 14562                           tblptru	equ	0xFF8
 14563                           tblptrh	equ	0xFF7
 14564                           tblptrl	equ	0xFF6
 14565                           tablat	equ	0xFF5
 14566                           prodh	equ	0xFF4
 14567                           prodl	equ	0xFF3
 14568                           intcon	equ	0xFF2
 14569                           postinc0	equ	0xFEE
 14570                           wreg	equ	0xFE8
 14571                           indf2	equ	0xFDF
 14572                           postinc2	equ	0xFDE
 14573                           fsr2h	equ	0xFDA
 14574                           fsr2l	equ	0xFD9
 14575                           status	equ	0xFD8
 14576                           
 14577 ;; *************** function _LCD_send_command *****************
 14578 ;; Defined at:
 14579 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;  D3              1    wreg     unsigned char 
 14582 ;;  D2              1   26[BANK0 ] unsigned char 
 14583 ;;  D1              1   27[BANK0 ] unsigned char 
 14584 ;;  D0              1   28[BANK0 ] unsigned char 
 14585 ;; Auto vars:     Size  Location     Type
 14586 ;;  D3              1   29[BANK0 ] unsigned char 
 14587 ;; Return value:  Size  Location     Type
 14588 ;;		None               void
 14589 ;; Registers used:
 14590 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14591 ;; Tracked objects:
 14592 ;;		On entry : 0/0
 14593 ;;		On exit  : 0/0
 14594 ;;		Unchanged: 0/0
 14595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14596 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;Total ram usage:        4 bytes
 14601 ;; Hardware stack levels used:    1
 14602 ;; Hardware stack levels required when called:    6
 14603 ;; This function calls:
 14604 ;;		_LCD_enable_pulse
 14605 ;; This function is called by:
 14606 ;;		_LCD_shift_cursor
 14607 ;;		_LCD_goto_line
 14608 ;;		_LCD_write_char
 14609 ;;		_LCD_clear
 14610 ;;		_LCD_cursor
 14611 ;;		_LCD_initialize
 14612 ;;		_LCD_home
 14613 ;;		_LCD_shift
 14614 ;; This function uses a non-reentrant model
 14615 ;;
 14616                           
 14617                           	psect	text36
 14618  015B90                     __ptext36:
 14619                           	opt stack 0
 14620  015B90                     _LCD_send_command:
 14621                           	opt stack 22
 14622                           
 14623                           ;incstack = 0
 14624                           ;LCD_send_command@D3 stored from wreg
 14625  015B90  0100               	movlb	0	; () banked
 14626  015B92  6F7D               	movwf	LCD_send_command@D3& (0+255),b
 14627                           
 14628                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 14629  015B94  0100               	movlb	0	; () banked
 14630  015B96  B17C               	btfsc	LCD_send_command@D0& (0+255),0,b
 14631  015B98  D002               	bra	u9655
 14632  015B9A  948B               	bcf	3979,2,c	;volatile
 14633  015B9C  D001               	bra	u9656
 14634  015B9E                     u9655:
 14635  015B9E  848B               	bsf	3979,2,c	;volatile
 14636  015BA0                     u9656:
 14637                           
 14638                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 14639  015BA0  0100               	movlb	0	; () banked
 14640  015BA2  B17B               	btfsc	LCD_send_command@D1& (0+255),0,b
 14641  015BA4  D002               	bra	u9665
 14642  015BA6  968B               	bcf	3979,3,c	;volatile
 14643  015BA8  D001               	bra	u9666
 14644  015BAA                     u9665:
 14645  015BAA  868B               	bsf	3979,3,c	;volatile
 14646  015BAC                     u9666:
 14647                           
 14648                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 14649  015BAC  0100               	movlb	0	; () banked
 14650  015BAE  B17A               	btfsc	LCD_send_command@D2& (0+255),0,b
 14651  015BB0  D002               	bra	u9675
 14652  015BB2  908C               	bcf	3980,0,c	;volatile
 14653  015BB4  D001               	bra	u9676
 14654  015BB6                     u9675:
 14655  015BB6  808C               	bsf	3980,0,c	;volatile
 14656  015BB8                     u9676:
 14657                           
 14658                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 14659  015BB8  0100               	movlb	0	; () banked
 14660  015BBA  B17D               	btfsc	LCD_send_command@D3& (0+255),0,b
 14661  015BBC  D002               	bra	u9685
 14662  015BBE  928C               	bcf	3980,1,c	;volatile
 14663  015BC0  D001               	bra	u9686
 14664  015BC2                     u9685:
 14665  015BC2  828C               	bsf	3980,1,c	;volatile
 14666  015BC4                     u9686:
 14667                           
 14668                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 14669  015BC4  ECBF  F0AE         	call	_LCD_enable_pulse	;wreg free
 14670  015BC8  0012               	return		;funcret
 14671  015BCA                     __end_of_LCD_send_command:
 14672                           	opt stack 0
 14673                           tblptru	equ	0xFF8
 14674                           tblptrh	equ	0xFF7
 14675                           tblptrl	equ	0xFF6
 14676                           tablat	equ	0xFF5
 14677                           prodh	equ	0xFF4
 14678                           prodl	equ	0xFF3
 14679                           intcon	equ	0xFF2
 14680                           postinc0	equ	0xFEE
 14681                           wreg	equ	0xFE8
 14682                           indf2	equ	0xFDF
 14683                           postinc2	equ	0xFDE
 14684                           fsr2h	equ	0xFDA
 14685                           fsr2l	equ	0xFD9
 14686                           status	equ	0xFD8
 14687                           
 14688 ;; *************** function _LCD_enable_pulse *****************
 14689 ;; Defined at:
 14690 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;		None
 14693 ;; Auto vars:     Size  Location     Type
 14694 ;;		None
 14695 ;; Return value:  Size  Location     Type
 14696 ;;		None               void
 14697 ;; Registers used:
 14698 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14699 ;; Tracked objects:
 14700 ;;		On entry : 0/0
 14701 ;;		On exit  : 0/0
 14702 ;;		Unchanged: 0/0
 14703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14708 ;;Total ram usage:        0 bytes
 14709 ;; Hardware stack levels used:    1
 14710 ;; Hardware stack levels required when called:    5
 14711 ;; This function calls:
 14712 ;;		_delay_ms
 14713 ;; This function is called by:
 14714 ;;		_LCD_send_command
 14715 ;; This function uses a non-reentrant model
 14716 ;;
 14717                           
 14718                           	psect	text37
 14719  015D7E                     __ptext37:
 14720                           	opt stack 0
 14721  015D7E                     _LCD_enable_pulse:
 14722                           	opt stack 22
 14723                           
 14724                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 14725                           
 14726                           ;incstack = 0
 14727  015D7E  828B               	bsf	3979,1,c	;volatile
 14728                           
 14729                           ;src\LCD_44780.c: 52: delay_ms (1);
 14730  015D80  0E00               	movlw	0
 14731  015D82  0100               	movlb	0	; () banked
 14732  015D84  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14733  015D86  0E01               	movlw	1
 14734  015D88  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14735  015D8A  ECE5  F0AD         	call	_delay_ms	;wreg free
 14736                           
 14737                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 14738  015D8E  928B               	bcf	3979,1,c	;volatile
 14739                           
 14740                           ;src\LCD_44780.c: 54: delay_ms (1);
 14741  015D90  0E00               	movlw	0
 14742  015D92  0100               	movlb	0	; () banked
 14743  015D94  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14744  015D96  0E01               	movlw	1
 14745  015D98  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14746  015D9A  ECE5  F0AD         	call	_delay_ms	;wreg free
 14747  015D9E  0012               	return		;funcret
 14748  015DA0                     __end_of_LCD_enable_pulse:
 14749                           	opt stack 0
 14750                           tblptru	equ	0xFF8
 14751                           tblptrh	equ	0xFF7
 14752                           tblptrl	equ	0xFF6
 14753                           tablat	equ	0xFF5
 14754                           prodh	equ	0xFF4
 14755                           prodl	equ	0xFF3
 14756                           intcon	equ	0xFF2
 14757                           postinc0	equ	0xFEE
 14758                           wreg	equ	0xFE8
 14759                           indf2	equ	0xFDF
 14760                           postinc2	equ	0xFDE
 14761                           fsr2h	equ	0xFDA
 14762                           fsr2l	equ	0xFD9
 14763                           status	equ	0xFD8
 14764                           
 14765 ;; *************** function _delay_ms *****************
 14766 ;; Defined at:
 14767 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;  value_ms        2   24[BANK0 ] unsigned int 
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;		None
 14772 ;; Return value:  Size  Location     Type
 14773 ;;		None               void
 14774 ;; Registers used:
 14775 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14776 ;; Tracked objects:
 14777 ;;		On entry : 0/0
 14778 ;;		On exit  : 0/0
 14779 ;;		Unchanged: 0/0
 14780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14781 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14785 ;;Total ram usage:        2 bytes
 14786 ;; Hardware stack levels used:    1
 14787 ;; Hardware stack levels required when called:    4
 14788 ;; This function calls:
 14789 ;;		___wmul
 14790 ;; This function is called by:
 14791 ;;		_LCD_enable_pulse
 14792 ;;		_LCD_initialize
 14793 ;;		_main
 14794 ;;		_delay_s
 14795 ;; This function uses a non-reentrant model
 14796 ;;
 14797                           
 14798                           	psect	text38
 14799  015BCA                     __ptext38:
 14800                           	opt stack 0
 14801  015BCA                     _delay_ms:
 14802                           	opt stack 26
 14803                           
 14804                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 14805                           
 14806                           ;incstack = 0
 14807  015BCA  C0EC  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 14808  015BCE  0100               	movlb	0	; () banked
 14809  015BD0  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
 14810  015BD2  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
 14811  015BD6  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 14812  015BDA  EC1E  F0AE         	call	___wmul	;wreg free
 14813  015BDE  C072  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 14814  015BE2  C073  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 14815                           
 14816                           ;src\delay.c: 75: while (clock_counter_reference) {
 14817  015BE6  D007               	goto	l581
 14818  015BE8                     l7378:
 14819                           
 14820                           ;src\delay.c: 85: _delay(240);
 14821  015BE8  0E50               	movlw	80
 14822  015BEA                     u12217:
 14823  015BEA  2EE8               	decfsz	wreg,f,c
 14824  015BEC  D7FE               	goto	u12217
 14825                           
 14826                           ;src\delay.c: 88: clock_counter_reference--;
 14827  015BEE  0100               	movlb	0	; () banked
 14828  015BF0  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 14829  015BF2  A0D8               	btfss	status,0,c
 14830  015BF4  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 14831  015BF6                     l581:
 14832  015BF6  0100               	movlb	0	; () banked
 14833  015BF8  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 14834  015BFA  0100               	movlb	0	; () banked
 14835  015BFC  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 14836  015BFE  B4D8               	btfsc	status,2,c
 14837  015C00  0012               	return	
 14838  015C02  D7F2               	goto	l7378
 14839  015C04                     __end_of_delay_ms:
 14840                           	opt stack 0
 14841                           tblptru	equ	0xFF8
 14842                           tblptrh	equ	0xFF7
 14843                           tblptrl	equ	0xFF6
 14844                           tablat	equ	0xFF5
 14845                           prodh	equ	0xFF4
 14846                           prodl	equ	0xFF3
 14847                           intcon	equ	0xFF2
 14848                           postinc0	equ	0xFEE
 14849                           wreg	equ	0xFE8
 14850                           indf2	equ	0xFDF
 14851                           postinc2	equ	0xFDE
 14852                           fsr2h	equ	0xFDA
 14853                           fsr2l	equ	0xFD9
 14854                           status	equ	0xFD8
 14855                           
 14856 ;; *************** function ___wmul *****************
 14857 ;; Defined at:
 14858 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;  multiplier      2   18[BANK0 ] unsigned int 
 14861 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;  product         2   22[BANK0 ] unsigned int 
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  2   18[BANK0 ] unsigned int 
 14866 ;; Registers used:
 14867 ;;		wreg, status,2, status,0, prodl, prodh
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;Total ram usage:        6 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:    3
 14880 ;; This function calls:
 14881 ;;		Nothing
 14882 ;; This function is called by:
 14883 ;;		_delay_ms
 14884 ;;		_sprintf
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887                           
 14888                           	psect	text39
 14889  015C3C                     __ptext39:
 14890                           	opt stack 0
 14891  015C3C                     ___wmul:
 14892                           	opt stack 26
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;incstack = 0
 14896  015C3C  0100               	movlb	0	; () banked
 14897  015C3E  5172               	movf	___wmul@multiplier& (0+255),w,b
 14898  015C40  0100               	movlb	0	; () banked
 14899  015C42  0374               	mulwf	___wmul@multiplicand& (0+255),b
 14900  015C44  CFF3 F076          	movff	prodl,___wmul@product
 14901  015C48  CFF4 F077          	movff	prodh,___wmul@product+1
 14902  015C4C  0100               	movlb	0	; () banked
 14903  015C4E  5172               	movf	___wmul@multiplier& (0+255),w,b
 14904  015C50  0100               	movlb	0	; () banked
 14905  015C52  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14906  015C54  50F3               	movf	prodl,w,c
 14907  015C56  0100               	movlb	0	; () banked
 14908  015C58  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 14909  015C5A  0100               	movlb	0	; () banked
 14910  015C5C  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14911  015C5E  0100               	movlb	0	; () banked
 14912  015C60  0374               	mulwf	___wmul@multiplicand& (0+255),b
 14913  015C62  50F3               	movf	prodl,w,c
 14914  015C64  0100               	movlb	0	; () banked
 14915  015C66  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 14916                           
 14917                           ; BSR set to: 0
 14918  015C68  C076  F072         	movff	___wmul@product,?___wmul
 14919  015C6C  C077  F073         	movff	___wmul@product+1,?___wmul+1
 14920  015C70  0012               	return	
 14921  015C72                     __end_of___wmul:
 14922                           	opt stack 0
 14923                           tblptru	equ	0xFF8
 14924                           tblptrh	equ	0xFF7
 14925                           tblptrl	equ	0xFF6
 14926                           tablat	equ	0xFF5
 14927                           prodh	equ	0xFF4
 14928                           prodl	equ	0xFF3
 14929                           intcon	equ	0xFF2
 14930                           postinc0	equ	0xFEE
 14931                           wreg	equ	0xFE8
 14932                           indf2	equ	0xFDF
 14933                           postinc2	equ	0xFDE
 14934                           fsr2h	equ	0xFDA
 14935                           fsr2l	equ	0xFD9
 14936                           status	equ	0xFD8
 14937                           
 14938 ;; *************** function _Joystick_Polling *****************
 14939 ;; Defined at:
 14940 ;;		line 433 in file "RemoteCan.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;		None
 14943 ;; Auto vars:     Size  Location     Type
 14944 ;;  i               1   19[BANK0 ] unsigned char 
 14945 ;; Return value:  Size  Location     Type
 14946 ;;		None               void
 14947 ;; Registers used:
 14948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14958 ;;Total ram usage:        2 bytes
 14959 ;; Hardware stack levels used:    1
 14960 ;; Hardware stack levels required when called:    3
 14961 ;; This function calls:
 14962 ;;		Nothing
 14963 ;; This function is called by:
 14964 ;;		_main
 14965 ;; This function uses a non-reentrant model
 14966 ;;
 14967                           
 14968                           	psect	text40
 14969  015A64                     __ptext40:
 14970                           	opt stack 0
 14971  015A64                     _Joystick_Polling:
 14972                           	opt stack 27
 14973                           
 14974                           ;RemoteCan.c: 434: for (unsigned char i = 0; i < 2; i++) {
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;incstack = 0
 14978  015A64  0E00               	movlw	0
 14979  015A66  0100               	movlb	0	; () banked
 14980  015A68  6F73               	movwf	Joystick_Polling@i& (0+255),b
 14981  015A6A                     l6726:
 14982                           
 14983                           ; BSR set to: 0
 14984  015A6A  0E01               	movlw	1
 14985  015A6C  0100               	movlb	0	; () banked
 14986  015A6E  6573               	cpfsgt	Joystick_Polling@i& (0+255),b
 14987  015A70  D001               	goto	l874
 14988  015A72  0012               	return	
 14989  015A74                     l874:
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;RemoteCan.c: 435: ADCON0bits.GO = 1;
 14993  015A74  82C2               	bsf	4034,1,c	;volatile
 14994  015A76                     l876:
 14995  015A76  B2C2               	btfsc	4034,1,c	;volatile
 14996  015A78  D7FE               	goto	l876
 14997                           
 14998                           ;RemoteCan.c: 437: JoystickValues[i] = ADRESH;
 14999  015A7A  0100               	movlb	0	; () banked
 15000  015A7C  5173               	movf	Joystick_Polling@i& (0+255),w,b
 15001  015A7E  0D01               	mullw	1
 15002  015A80  0EDC               	movlw	low _JoystickValues
 15003  015A82  24F3               	addwf	prodl,w,c
 15004  015A84  6ED9               	movwf	fsr2l,c
 15005  015A86  0E00               	movlw	high _JoystickValues
 15006  015A88  20F4               	addwfc	prodh,w,c
 15007  015A8A  6EDA               	movwf	fsr2h,c
 15008  015A8C  CFC4 FFDF          	movff	4036,indf2	;volatile
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;RemoteCan.c: 438: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 15012  015A90  A4C2               	btfss	4034,2,c	;volatile
 15013  015A92  D002               	goto	u8590
 15014  015A94  0E01               	movlw	1
 15015  015A96  D001               	goto	u8596
 15016  015A98                     u8590:
 15017  015A98  0E00               	movlw	0
 15018  015A9A                     u8596:
 15019  015A9A  0AFF               	xorlw	255
 15020  015A9C  0100               	movlb	0	; () banked
 15021  015A9E  6F72               	movwf	??_Joystick_Polling& (0+255),b
 15022  015AA0  0100               	movlb	0	; () banked
 15023  015AA2  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 15024  015AA4  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 15025  015AA6  50C2               	movf	4034,w,c	;volatile
 15026  015AA8  0100               	movlb	0	; () banked
 15027  015AAA  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 15028  015AAC  0BFB               	andlw	-5
 15029  015AAE  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 15030  015AB0  6EC2               	movwf	4034,c	;volatile
 15031                           
 15032                           ; BSR set to: 0
 15033  015AB2  0100               	movlb	0	; () banked
 15034  015AB4  2B73               	incf	Joystick_Polling@i& (0+255),f,b
 15035  015AB6  D7D9               	goto	l6726
 15036  015AB8                     __end_of_Joystick_Polling:
 15037                           	opt stack 0
 15038                           tblptru	equ	0xFF8
 15039                           tblptrh	equ	0xFF7
 15040                           tblptrl	equ	0xFF6
 15041                           tablat	equ	0xFF5
 15042                           prodh	equ	0xFF4
 15043                           prodl	equ	0xFF3
 15044                           intcon	equ	0xFF2
 15045                           postinc0	equ	0xFEE
 15046                           wreg	equ	0xFE8
 15047                           indf2	equ	0xFDF
 15048                           postinc2	equ	0xFDE
 15049                           fsr2h	equ	0xFDA
 15050                           fsr2l	equ	0xFD9
 15051                           status	equ	0xFD8
 15052                           
 15053 ;; *************** function _F2_Button_Polling *****************
 15054 ;; Defined at:
 15055 ;;		line 423 in file "RemoteCan.c"
 15056 ;; Parameters:    Size  Location     Type
 15057 ;;		None
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;		None
 15060 ;; Return value:  Size  Location     Type
 15061 ;;		None               void
 15062 ;; Registers used:
 15063 ;;		None
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;Total ram usage:        0 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:    3
 15076 ;; This function calls:
 15077 ;;		Nothing
 15078 ;; This function is called by:
 15079 ;;		_main
 15080 ;; This function uses a non-reentrant model
 15081 ;;
 15082                           
 15083                           	psect	text41
 15084  015DF6                     __ptext41:
 15085                           	opt stack 0
 15086  015DF6                     _F2_Button_Polling:
 15087                           	opt stack 27
 15088                           
 15089                           ;RemoteCan.c: 424: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 15090                           
 15091                           ; BSR set to: 0
 15092                           ;incstack = 0
 15093  015DF6  A281               	btfss	3969,1,c	;volatile
 15094  015DF8  D002               	goto	l869
 15095  015DFA  B84C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15096  015DFC  0012               	return	
 15097  015DFE                     l869:
 15098                           
 15099                           ;RemoteCan.c: 425: wait_low_3 = 0;
 15100  015DFE  984C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15101                           
 15102                           ;RemoteCan.c: 426: if (PORTBbits.RB1 == 1) {
 15103  015E00  A281               	btfss	3969,1,c	;volatile
 15104  015E02  0012               	return	
 15105                           
 15106                           ;RemoteCan.c: 427: F2_switch = ~F2_switch;
 15107  015E04  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15108  015E06  D002               	goto	u8520
 15109  015E08  844B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15110  015E0A  D001               	goto	u8535
 15111  015E0C                     u8520:
 15112  015E0C  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15113  015E0E                     u8535:
 15114                           
 15115                           ;RemoteCan.c: 428: wait_low_3 = 1;
 15116  015E0E  884C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15117  015E10  0012               	return	
 15118  015E12                     __end_of_F2_Button_Polling:
 15119                           	opt stack 0
 15120                           tblptru	equ	0xFF8
 15121                           tblptrh	equ	0xFF7
 15122                           tblptrl	equ	0xFF6
 15123                           tablat	equ	0xFF5
 15124                           prodh	equ	0xFF4
 15125                           prodl	equ	0xFF3
 15126                           intcon	equ	0xFF2
 15127                           postinc0	equ	0xFEE
 15128                           wreg	equ	0xFE8
 15129                           indf2	equ	0xFDF
 15130                           postinc2	equ	0xFDE
 15131                           fsr2h	equ	0xFDA
 15132                           fsr2l	equ	0xFD9
 15133                           status	equ	0xFD8
 15134                           
 15135 ;; *************** function _F1_Button_Polling *****************
 15136 ;; Defined at:
 15137 ;;		line 413 in file "RemoteCan.c"
 15138 ;; Parameters:    Size  Location     Type
 15139 ;;		None
 15140 ;; Auto vars:     Size  Location     Type
 15141 ;;		None
 15142 ;; Return value:  Size  Location     Type
 15143 ;;		None               void
 15144 ;; Registers used:
 15145 ;;		None
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/0
 15148 ;;		On exit  : 0/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;Total ram usage:        0 bytes
 15156 ;; Hardware stack levels used:    1
 15157 ;; Hardware stack levels required when called:    3
 15158 ;; This function calls:
 15159 ;;		Nothing
 15160 ;; This function is called by:
 15161 ;;		_main
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165                           	psect	text42
 15166  015E12                     __ptext42:
 15167                           	opt stack 0
 15168  015E12                     _F1_Button_Polling:
 15169                           	opt stack 27
 15170                           
 15171                           ;RemoteCan.c: 414: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 15172                           
 15173                           ;incstack = 0
 15174  015E12  A881               	btfss	3969,4,c	;volatile
 15175  015E14  D002               	goto	l862
 15176  015E16  B64C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15177  015E18  0012               	return	
 15178  015E1A                     l862:
 15179                           
 15180                           ;RemoteCan.c: 415: wait_low_2 = 0;
 15181  015E1A  964C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15182                           
 15183                           ;RemoteCan.c: 416: if (PORTBbits.RB4 == 1) {
 15184  015E1C  A881               	btfss	3969,4,c	;volatile
 15185  015E1E  0012               	return	
 15186                           
 15187                           ;RemoteCan.c: 417: F1_switch = ~F1_switch;
 15188  015E20  B24B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15189  015E22  D002               	goto	u8470
 15190  015E24  824B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15191  015E26  D001               	goto	u8485
 15192  015E28                     u8470:
 15193  015E28  924B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15194  015E2A                     u8485:
 15195                           
 15196                           ;RemoteCan.c: 418: wait_low_2 = 1;
 15197  015E2A  864C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15198  015E2C  0012               	return	
 15199  015E2E                     __end_of_F1_Button_Polling:
 15200                           	opt stack 0
 15201                           tblptru	equ	0xFF8
 15202                           tblptrh	equ	0xFF7
 15203                           tblptrl	equ	0xFF6
 15204                           tablat	equ	0xFF5
 15205                           prodh	equ	0xFF4
 15206                           prodl	equ	0xFF3
 15207                           intcon	equ	0xFF2
 15208                           postinc0	equ	0xFEE
 15209                           wreg	equ	0xFE8
 15210                           indf2	equ	0xFDF
 15211                           postinc2	equ	0xFDE
 15212                           fsr2h	equ	0xFDA
 15213                           fsr2l	equ	0xFD9
 15214                           status	equ	0xFD8
 15215                           
 15216 ;; *************** function _CAN_interpreter *****************
 15217 ;; Defined at:
 15218 ;;		line 369 in file "RemoteCan.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;		None
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;		None
 15223 ;; Return value:  Size  Location     Type
 15224 ;;		None               void
 15225 ;; Registers used:
 15226 ;;		wreg, status,2, status,0
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;Total ram usage:        4 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; Hardware stack levels required when called:    3
 15239 ;; This function calls:
 15240 ;;		Nothing
 15241 ;; This function is called by:
 15242 ;;		_main
 15243 ;; This function uses a non-reentrant model
 15244 ;;
 15245                           
 15246                           	psect	text43
 15247  015744                     __ptext43:
 15248                           	opt stack 0
 15249  015744                     _CAN_interpreter:
 15250                           	opt stack 27
 15251                           
 15252                           ;RemoteCan.c: 370: if (id == 0b00000000010) {
 15253                           
 15254                           ;incstack = 0
 15255  015744  0E02               	movlw	2
 15256  015746  1812               	xorwf	_id,w,c	;volatile
 15257  015748  1013               	iorwf	_id+1,w,c	;volatile
 15258  01574A  1014               	iorwf	_id+2,w,c	;volatile
 15259  01574C  1015               	iorwf	_id+3,w,c	;volatile
 15260  01574E  A4D8               	btfss	status,2,c
 15261  015750  D015               	goto	l6754
 15262                           
 15263                           ;RemoteCan.c: 371: if (RTR_Flag == 1) {
 15264  015752  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15265  015754  D00C               	goto	l6744
 15266                           
 15267                           ;RemoteCan.c: 372: pr_time_4 = time_counter;
 15268  015756  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 15269  01575A  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 15270  01575E  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 15271  015762  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 15272                           
 15273                           ;RemoteCan.c: 373: MotoreFlag = 1;
 15274  015766  864B               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 15275                           
 15276                           ;RemoteCan.c: 374: AbsFlag = 0;
 15277  015768  904B               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15278                           
 15279                           ;RemoteCan.c: 375: SterzoFlag = 0;
 15280  01576A  9A4B               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15281                           
 15282                           ;RemoteCan.c: 376: } else {
 15283  01576C  D007               	goto	l6754
 15284  01576E                     l6744:
 15285                           
 15286                           ;RemoteCan.c: 377: if (data[0] == 0x01) {
 15287  01576E  042C               	decf	_data,w,c
 15288  015770  B4D8               	btfsc	status,2,c
 15289                           
 15290                           ;RemoteCan.c: 378: AbsFlag = 1;
 15291  015772  804B               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15292                           
 15293                           ;RemoteCan.c: 379: }
 15294                           ;RemoteCan.c: 380: if (data[0] == 0x02) {
 15295  015774  0E02               	movlw	2
 15296  015776  182C               	xorwf	_data,w,c
 15297  015778  B4D8               	btfsc	status,2,c
 15298                           
 15299                           ;RemoteCan.c: 381: SterzoFlag = 1;
 15300  01577A  8A4B               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15301  01577C                     l6754:
 15302                           
 15303                           ;RemoteCan.c: 388: }
 15304                           ;RemoteCan.c: 390: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 15305  01577C  0E06               	movlw	6
 15306  01577E  1812               	xorwf	_id,w,c	;volatile
 15307  015780  1013               	iorwf	_id+1,w,c	;volatile
 15308  015782  1014               	iorwf	_id+2,w,c	;volatile
 15309  015784  1015               	iorwf	_id+3,w,c	;volatile
 15310  015786  B4D8               	btfsc	status,2,c
 15311  015788  B84B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15312  01578A  D027               	goto	l6766
 15313                           
 15314                           ;RemoteCan.c: 391: left_speed = data_speed_rx[1];
 15315  01578C  C002  F026         	movff	_data_speed_rx+1,_left_speed
 15316  015790  6A27               	clrf	_left_speed+1,c
 15317                           
 15318                           ;RemoteCan.c: 392: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 15319  015792  5026               	movf	_left_speed,w,c
 15320  015794  0100               	movlb	0	; () banked
 15321  015796  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15322  015798  5001               	movf	_data_speed_rx,w,c
 15323  01579A  6E26               	movwf	_left_speed,c
 15324  01579C  C072  F027         	movff	??_CAN_interpreter,_left_speed+1
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;RemoteCan.c: 393: right_speed = data_speed_rx[3];
 15328  0157A0  C004  F028         	movff	_data_speed_rx+3,_right_speed
 15329  0157A4  6A29               	clrf	_right_speed+1,c
 15330                           
 15331                           ;RemoteCan.c: 394: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 15332  0157A6  5028               	movf	_right_speed,w,c
 15333  0157A8  0100               	movlb	0	; () banked
 15334  0157AA  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15335  0157AC  5003               	movf	_data_speed_rx+2,w,c
 15336  0157AE  6E28               	movwf	_right_speed,c
 15337  0157B0  C072  F029         	movff	??_CAN_interpreter,_right_speed+1
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;RemoteCan.c: 395: actual_speed = (right_speed + left_speed) / 2;
 15341  0157B4  5026               	movf	_left_speed,w,c
 15342  0157B6  2428               	addwf	_right_speed,w,c
 15343  0157B8  0100               	movlb	0	; () banked
 15344  0157BA  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15345  0157BC  5027               	movf	_left_speed+1,w,c
 15346  0157BE  2029               	addwfc	_right_speed+1,w,c
 15347  0157C0  0100               	movlb	0	; () banked
 15348  0157C2  6F73               	movwf	(??_CAN_interpreter+1)& (0+255),b
 15349  0157C4  90D8               	bcf	status,0,c
 15350  0157C6  0100               	movlb	0	; () banked
 15351  0157C8  3173               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 15352  0157CA  0100               	movlb	0	; () banked
 15353  0157CC  6F74               	movwf	(??_CAN_interpreter+2)& (0+255),b
 15354  0157CE  0100               	movlb	0	; () banked
 15355  0157D0  3172               	rrcf	??_CAN_interpreter& (0+255),w,b
 15356  0157D2  0100               	movlb	0	; () banked
 15357  0157D4  6FDE               	movwf	_actual_speed& (0+255),b
 15358  0157D6  C074  F0DF         	movff	??_CAN_interpreter+2,_actual_speed+1
 15359  0157DA                     l6766:
 15360                           
 15361                           ;RemoteCan.c: 396: }
 15362                           ;RemoteCan.c: 398: if (id == 0b00000001001) {
 15363  0157DA  0E09               	movlw	9
 15364  0157DC  1812               	xorwf	_id,w,c	;volatile
 15365  0157DE  1013               	iorwf	_id+1,w,c	;volatile
 15366  0157E0  1014               	iorwf	_id+2,w,c	;volatile
 15367  0157E2  1015               	iorwf	_id+3,w,c	;volatile
 15368  0157E4  A4D8               	btfss	status,2,c
 15369  0157E6  0012               	return	
 15370                           
 15371                           ;RemoteCan.c: 399: battery = data[0];
 15372  0157E8  C02C  F02A         	movff	_data,_battery	;volatile
 15373  0157EC  0012               	return	
 15374  0157EE                     __end_of_CAN_interpreter:
 15375                           	opt stack 0
 15376                           tblptru	equ	0xFF8
 15377                           tblptrh	equ	0xFF7
 15378                           tblptrl	equ	0xFF6
 15379                           tablat	equ	0xFF5
 15380                           prodh	equ	0xFF4
 15381                           prodl	equ	0xFF3
 15382                           intcon	equ	0xFF2
 15383                           postinc0	equ	0xFEE
 15384                           wreg	equ	0xFE8
 15385                           indf2	equ	0xFDF
 15386                           postinc2	equ	0xFDE
 15387                           fsr2h	equ	0xFDA
 15388                           fsr2l	equ	0xFD9
 15389                           status	equ	0xFD8
 15390                           
 15391 ;; *************** function _CAN_Send *****************
 15392 ;; Defined at:
 15393 ;;		line 300 in file "RemoteCan.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;		None
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;		None
 15398 ;; Return value:  Size  Location     Type
 15399 ;;		None               void
 15400 ;; Registers used:
 15401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/0
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15411 ;;Total ram usage:        0 bytes
 15412 ;; Hardware stack levels used:    1
 15413 ;; Hardware stack levels required when called:    4
 15414 ;; This function calls:
 15415 ;;		_CANisTxReady
 15416 ;;		_CANsendMessage
 15417 ;; This function is called by:
 15418 ;;		_main
 15419 ;; This function uses a non-reentrant model
 15420 ;;
 15421                           
 15422                           	psect	text44
 15423  01568A                     __ptext44:
 15424                           	opt stack 0
 15425  01568A                     _CAN_Send:
 15426                           	opt stack 26
 15427  01568A                     l6706:
 15428  01568A  ECAD  F0AE         	call	_CANisTxReady	;wreg free
 15429  01568E  06E8               	decf	wreg,f,c
 15430  015690  A4D8               	btfss	status,2,c
 15431  015692  D7FB               	goto	l6706
 15432                           
 15433                           ;RemoteCan.c: 302: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15434  015694  0E05               	movlw	5
 15435  015696  0100               	movlb	0	; () banked
 15436  015698  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15437  01569A  0E00               	movlw	0
 15438  01569C  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15439  01569E  0E00               	movlw	0
 15440  0156A0  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15441  0156A2  0E00               	movlw	0
 15442  0156A4  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15443  0156A6  0EEB               	movlw	low _data_steering
 15444  0156A8  0100               	movlb	0	; () banked
 15445  0156AA  6F76               	movwf	CANsendMessage@data& (0+255),b
 15446  0156AC  0E00               	movlw	high _data_steering
 15447  0156AE  0100               	movlb	0	; () banked
 15448  0156B0  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15449  0156B2  0E08               	movlw	8
 15450  0156B4  0100               	movlb	0	; () banked
 15451  0156B6  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15452  0156B8  0EBC               	movlw	188
 15453  0156BA  0100               	movlb	0	; () banked
 15454  0156BC  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15455  0156BE  ECCD  F089         	call	_CANsendMessage	;wreg free
 15456                           
 15457                           ;RemoteCan.c: 303: data_speed[0] = set_speed;
 15458  0156C2  C0E2  F0EA         	movff	_set_speed,_data_speed	;volatile
 15459                           
 15460                           ;RemoteCan.c: 304: data_speed[1] = (set_speed >> 8);
 15461  0156C6  0100               	movlb	0	; () banked
 15462  0156C8  51E3               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 15463  0156CA  0100               	movlb	0	; () banked
 15464  0156CC  6FEB               	movwf	(_data_speed+1)& (0+255),b
 15465                           
 15466                           ; BSR set to: 0
 15467                           ;RemoteCan.c: 305: data_speed[2] = dir;
 15468  0156CE  C0E4  F0EC         	movff	_dir,_data_speed+2	;volatile
 15469  0156D2                     l6716:
 15470  0156D2  ECAD  F0AE         	call	_CANisTxReady	;wreg free
 15471  0156D6  06E8               	decf	wreg,f,c
 15472  0156D8  A4D8               	btfss	status,2,c
 15473  0156DA  D7FB               	goto	l6716
 15474                           
 15475                           ;RemoteCan.c: 307: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15476  0156DC  0E03               	movlw	3
 15477  0156DE  0100               	movlb	0	; () banked
 15478  0156E0  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15479  0156E2  0E00               	movlw	0
 15480  0156E4  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15481  0156E6  0E00               	movlw	0
 15482  0156E8  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15483  0156EA  0E00               	movlw	0
 15484  0156EC  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15485  0156EE  0EEA               	movlw	low _data_speed
 15486  0156F0  0100               	movlb	0	; () banked
 15487  0156F2  6F76               	movwf	CANsendMessage@data& (0+255),b
 15488  0156F4  0E00               	movlw	high _data_speed
 15489  0156F6  0100               	movlb	0	; () banked
 15490  0156F8  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15491  0156FA  0E08               	movlw	8
 15492  0156FC  0100               	movlb	0	; () banked
 15493  0156FE  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15494  015700  0EBC               	movlw	188
 15495  015702  0100               	movlb	0	; () banked
 15496  015704  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15497  015706  ECCD  F089         	call	_CANsendMessage	;wreg free
 15498  01570A                     l6720:
 15499  01570A  ECAD  F0AE         	call	_CANisTxReady	;wreg free
 15500  01570E  06E8               	decf	wreg,f,c
 15501  015710  A4D8               	btfss	status,2,c
 15502  015712  D7FB               	goto	l6720
 15503                           
 15504                           ;RemoteCan.c: 309: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 15505  015714  0E04               	movlw	4
 15506  015716  0100               	movlb	0	; () banked
 15507  015718  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15508  01571A  0E00               	movlw	0
 15509  01571C  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15510  01571E  0E00               	movlw	0
 15511  015720  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15512  015722  0E00               	movlw	0
 15513  015724  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15514  015726  0EE9               	movlw	low _data_brake
 15515  015728  0100               	movlb	0	; () banked
 15516  01572A  6F76               	movwf	CANsendMessage@data& (0+255),b
 15517  01572C  0E00               	movlw	high _data_brake
 15518  01572E  0100               	movlb	0	; () banked
 15519  015730  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15520  015732  0E08               	movlw	8
 15521  015734  0100               	movlb	0	; () banked
 15522  015736  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15523  015738  0EBD               	movlw	189
 15524  01573A  0100               	movlb	0	; () banked
 15525  01573C  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15526  01573E  ECCD  F089         	call	_CANsendMessage	;wreg free
 15527  015742  0012               	return		;funcret
 15528  015744                     __end_of_CAN_Send:
 15529                           	opt stack 0
 15530                           tblptru	equ	0xFF8
 15531                           tblptrh	equ	0xFF7
 15532                           tblptrl	equ	0xFF6
 15533                           tablat	equ	0xFF5
 15534                           prodh	equ	0xFF4
 15535                           prodl	equ	0xFF3
 15536                           intcon	equ	0xFF2
 15537                           postinc0	equ	0xFEE
 15538                           wreg	equ	0xFE8
 15539                           indf2	equ	0xFDF
 15540                           postinc2	equ	0xFDE
 15541                           fsr2h	equ	0xFDA
 15542                           fsr2l	equ	0xFD9
 15543                           status	equ	0xFD8
 15544                           
 15545 ;; *************** function _CANsendMessage *****************
 15546 ;; Defined at:
 15547 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 15548 ;; Parameters:    Size  Location     Type
 15549 ;;  identifier      4   18[BANK0 ] unsigned long 
 15550 ;;  data            2   22[BANK0 ] PTR unsigned char 
 15551 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 15552 ;;		 -> data(1), 
 15553 ;;  dataLength      1   24[BANK0 ] unsigned char 
 15554 ;;  flags           1   25[BANK0 ] enum E16909
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;  tamp            4   30[BANK0 ] unsigned long 
 15557 ;; Return value:  Size  Location     Type
 15558 ;;		None               void
 15559 ;; Registers used:
 15560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15561 ;; Tracked objects:
 15562 ;;		On entry : 0/0
 15563 ;;		On exit  : 0/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15566 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15567 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15568 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15569 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15570 ;;Total ram usage:       16 bytes
 15571 ;; Hardware stack levels used:    1
 15572 ;; Hardware stack levels required when called:    3
 15573 ;; This function calls:
 15574 ;;		Nothing
 15575 ;; This function is called by:
 15576 ;;		_main
 15577 ;;		_CAN_Send
 15578 ;;		_LCD_Handler
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text45
 15583  01139A                     __ptext45:
 15584                           	opt stack 0
 15585  01139A                     _CANsendMessage:
 15586                           	opt stack 26
 15587                           
 15588                           ;inc\CANlib.h: 296: unsigned long tamp;
 15589                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15590                           
 15591                           ;incstack = 0
 15592  01139A  010F               	movlb	15	; () banked
 15593  01139C  B740               	btfsc	64,3,b	;volatile
 15594  01139E  D13F               	goto	l375
 15595                           
 15596                           ; BSR set to: 15
 15597                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15598  0113A0  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 15599                           
 15600                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15601  0113A4  0100               	movlb	0	; () banked
 15602  0113A6  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 15603  0113A8  D003               	goto	l376
 15604                           
 15605                           ; BSR set to: 0
 15606                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15607  0113AA  010F               	movlb	15	; () banked
 15608  0113AC  8D45               	bsf	69,6,b	;volatile
 15609  0113AE  D002               	goto	l377
 15610  0113B0                     l376:
 15611                           
 15612                           ; BSR set to: 0
 15613                           ;inc\CANlib.h: 302: else
 15614                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15615  0113B0  010F               	movlb	15	; () banked
 15616  0113B2  9D45               	bcf	69,6,b	;volatile
 15617  0113B4                     l377:
 15618                           
 15619                           ; BSR set to: 15
 15620                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15621  0113B4  0100               	movlb	0	; () banked
 15622  0113B6  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 15623  0113B8  D079               	goto	l378
 15624                           
 15625                           ; BSR set to: 0
 15626                           ;inc\CANlib.h: 306: {
 15627                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15628  0113BA  0100               	movlb	0	; () banked
 15629  0113BC  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 15630  0113BE  0100               	movlb	0	; () banked
 15631  0113C0  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15632  0113C2  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15633  0113C4  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15634  0113C6  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15635                           
 15636                           ; BSR set to: 0
 15637                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15638  0113C8  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15642  0113CC  0E00               	movlw	0
 15643  0113CE  0100               	movlb	0	; () banked
 15644  0113D0  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 15645  0113D2  0100               	movlb	0	; () banked
 15646  0113D4  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15647  0113D6  0EFF               	movlw	255
 15648  0113D8  0100               	movlb	0	; () banked
 15649  0113DA  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15650  0113DC  0100               	movlb	0	; () banked
 15651  0113DE  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15652  0113E0  0E00               	movlw	0
 15653  0113E2  0100               	movlb	0	; () banked
 15654  0113E4  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15655  0113E6  0100               	movlb	0	; () banked
 15656  0113E8  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15657  0113EA  0E00               	movlw	0
 15658  0113EC  0100               	movlb	0	; () banked
 15659  0113EE  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15660  0113F0  0100               	movlb	0	; () banked
 15661  0113F2  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15665  0113F4  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 15666  0113F8  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15667  0113FC  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15668  011400  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15669  011404  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 15670  011408  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15671  01140C  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15672  011410  0100               	movlb	0	; () banked
 15673  011412  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 15674  011414  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15675  011418  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15676  01141C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15677  011420  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15678                           
 15679                           ; BSR set to: 0
 15680                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15681  011424  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15685  011428  0E00               	movlw	0
 15686  01142A  010F               	movlb	15	; () banked
 15687  01142C  6F42               	movwf	66,b	;volatile
 15688                           
 15689                           ; BSR set to: 15
 15690                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15691  01142E  010F               	movlb	15	; () banked
 15692  011430  8742               	bsf	66,3,b	;volatile
 15693                           
 15694                           ; BSR set to: 15
 15695                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15696  011432  0100               	movlb	0	; () banked
 15697  011434  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15698  011436  D002               	goto	l379
 15699                           
 15700                           ; BSR set to: 0
 15701                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15702  011438  010F               	movlb	15	; () banked
 15703  01143A  8142               	bsf	66,0,b	;volatile
 15704  01143C                     l379:
 15705                           
 15706                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15707  01143C  0100               	movlb	0	; () banked
 15708  01143E  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15709  011440  D002               	goto	l380
 15710                           
 15711                           ; BSR set to: 0
 15712                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15713  011442  010F               	movlb	15	; () banked
 15714  011444  8342               	bsf	66,1,b	;volatile
 15715  011446                     l380:
 15716                           
 15717                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15718  011446  0100               	movlb	0	; () banked
 15719  011448  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15720  01144A  D002               	goto	l381
 15721                           
 15722                           ; BSR set to: 0
 15723                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15724  01144C  010F               	movlb	15	; () banked
 15725  01144E  8B42               	bsf	66,5,b	;volatile
 15726  011450                     l381:
 15727                           
 15728                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15729  011450  0100               	movlb	0	; () banked
 15730  011452  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15731  011454  D002               	goto	l382
 15732                           
 15733                           ; BSR set to: 0
 15734                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15735  011456  010F               	movlb	15	; () banked
 15736  011458  8D42               	bsf	66,6,b	;volatile
 15737  01145A                     l382:
 15738                           
 15739                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15740  01145A  0100               	movlb	0	; () banked
 15741  01145C  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15742  01145E  D002               	goto	l5858
 15743                           
 15744                           ; BSR set to: 0
 15745                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15746  011460  010F               	movlb	15	; () banked
 15747  011462  8F42               	bsf	66,7,b	;volatile
 15748  011464                     l5858:
 15749                           
 15750                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15751  011464  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 15752  011468  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15753  01146C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15754  011470  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15755  011474  0E16               	movlw	22
 15756  011476  D006               	goto	u7220
 15757  011478                     u7225:
 15758  011478  0100               	movlb	0	; () banked
 15759  01147A  90D8               	bcf	status,0,c
 15760  01147C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15761  01147E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15762  011480  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15763  011482  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 15764  011484                     u7220:
 15765  011484  2EE8               	decfsz	wreg,f,c
 15766  011486  D7F8               	goto	u7225
 15767  011488  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15768  01148C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15769  011490  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15770  011494  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15774  011498  0100               	movlb	0	; () banked
 15775  01149A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 15776  01149C  0100               	movlb	0	; () banked
 15777  01149E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15778  0114A0  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15779  0114A2  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15780  0114A4  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15781                           
 15782                           ; BSR set to: 0
 15783                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15784  0114A6  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15785                           
 15786                           ;inc\CANlib.h: 332: }
 15787  0114AA  D059               	goto	l5878
 15788  0114AC                     l378:
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;inc\CANlib.h: 334: else
 15792                           ;inc\CANlib.h: 336: {
 15793                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15794  0114AC  010F               	movlb	15	; () banked
 15795  0114AE  9742               	bcf	66,3,b	;volatile
 15796                           
 15797                           ; BSR set to: 15
 15798                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15799  0114B0  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 15800  0114B4  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15801  0114B8  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15802  0114BC  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15803  0114C0  0E04               	movlw	4
 15804  0114C2  D006               	goto	u7230
 15805  0114C4                     u7235:
 15806  0114C4  0100               	movlb	0	; () banked
 15807  0114C6  90D8               	bcf	status,0,c
 15808  0114C8  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15809  0114CA  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15810  0114CC  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15811  0114CE  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 15812  0114D0                     u7230:
 15813  0114D0  2EE8               	decfsz	wreg,f,c
 15814  0114D2  D7F8               	goto	u7235
 15815  0114D4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15816  0114D8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15817  0114DC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15818  0114E0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15819                           
 15820                           ; BSR set to: 0
 15821                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15822  0114E4  0100               	movlb	0	; () banked
 15823  0114E6  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 15824  0114E8  0100               	movlb	0	; () banked
 15825  0114EA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15826  0114EC  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15827  0114EE  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15828  0114F0  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15829                           
 15830                           ; BSR set to: 0
 15831                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15832  0114F2  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15836  0114F6  0E07               	movlw	7
 15837  0114F8  0100               	movlb	0	; () banked
 15838  0114FA  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 15839  0114FC  0100               	movlb	0	; () banked
 15840  0114FE  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15841  011500  0E00               	movlw	0
 15842  011502  0100               	movlb	0	; () banked
 15843  011504  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15844  011506  0100               	movlb	0	; () banked
 15845  011508  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15846  01150A  0E00               	movlw	0
 15847  01150C  0100               	movlb	0	; () banked
 15848  01150E  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15849  011510  0100               	movlb	0	; () banked
 15850  011512  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15851  011514  0E00               	movlw	0
 15852  011516  0100               	movlb	0	; () banked
 15853  011518  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15854  01151A  0100               	movlb	0	; () banked
 15855  01151C  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15856                           
 15857                           ; BSR set to: 0
 15858                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15859  01151E  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 15860  011522  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15861  011526  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15862  01152A  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15863  01152E  0E05               	movlw	5
 15864  011530                     u7245:
 15865  011530  90D8               	bcf	status,0,c
 15866  011532  0100               	movlb	0	; () banked
 15867  011534  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 15868  011536  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15869  011538  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15870  01153A  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15871  01153C  2EE8               	decfsz	wreg,f,c
 15872  01153E  D7F8               	goto	u7245
 15873  011540  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15874  011544  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15875  011548  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15876  01154C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15880  011550  010F               	movlb	15	; () banked
 15881  011552  5142               	movf	66,w,b	;volatile
 15882  011554  0B1F               	andlw	31
 15883  011556  010F               	movlb	15	; () banked
 15884  011558  6F42               	movwf	66,b	;volatile
 15885                           
 15886                           ; BSR set to: 15
 15887                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15888  01155A  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15889  01155E                     l5878:
 15890                           
 15891                           ;inc\CANlib.h: 347: }
 15892                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15893  01155E  0100               	movlb	0	; () banked
 15894  011560  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 15895  011562  D003               	goto	l385
 15896                           
 15897                           ; BSR set to: 0
 15898                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15899  011564  010F               	movlb	15	; () banked
 15900  011566  8140               	bsf	64,0,b	;volatile
 15901  011568  D002               	goto	l386
 15902  01156A                     l385:
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;inc\CANlib.h: 351: else
 15906                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15907  01156A  010F               	movlb	15	; () banked
 15908  01156C  9140               	bcf	64,0,b	;volatile
 15909  01156E                     l386:
 15910                           
 15911                           ; BSR set to: 15
 15912                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15913  01156E  0100               	movlb	0	; () banked
 15914  011570  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 15915  011572  D003               	goto	l387
 15916                           
 15917                           ; BSR set to: 0
 15918                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15919  011574  010F               	movlb	15	; () banked
 15920  011576  8340               	bsf	64,1,b	;volatile
 15921  011578  D002               	goto	l5884
 15922  01157A                     l387:
 15923                           
 15924                           ; BSR set to: 0
 15925                           ;inc\CANlib.h: 355: else
 15926                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15927  01157A  010F               	movlb	15	; () banked
 15928  01157C  9340               	bcf	64,1,b	;volatile
 15929  01157E                     l5884:
 15930                           
 15931                           ; BSR set to: 15
 15932                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15933  01157E  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 15934  011582  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15935  011586  50DF               	movf	indf2,w,c
 15936  011588  010F               	movlb	15	; () banked
 15937  01158A  6F46               	movwf	70,b	;volatile
 15938                           
 15939                           ; BSR set to: 15
 15940                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15941  01158C  0100               	movlb	0	; () banked
 15942  01158E  EE20 F001          	lfsr	2,1
 15943  011592  5176               	movf	CANsendMessage@data& (0+255),w,b
 15944  011594  26D9               	addwf	fsr2l,f,c
 15945  011596  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15946  011598  22DA               	addwfc	fsr2h,f,c
 15947  01159A  50DF               	movf	indf2,w,c
 15948  01159C  010F               	movlb	15	; () banked
 15949  01159E  6F47               	movwf	71,b	;volatile
 15950                           
 15951                           ; BSR set to: 15
 15952                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15953  0115A0  0100               	movlb	0	; () banked
 15954  0115A2  EE20 F002          	lfsr	2,2
 15955  0115A6  5176               	movf	CANsendMessage@data& (0+255),w,b
 15956  0115A8  26D9               	addwf	fsr2l,f,c
 15957  0115AA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15958  0115AC  22DA               	addwfc	fsr2h,f,c
 15959  0115AE  50DF               	movf	indf2,w,c
 15960  0115B0  010F               	movlb	15	; () banked
 15961  0115B2  6F48               	movwf	72,b	;volatile
 15962                           
 15963                           ; BSR set to: 15
 15964                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15965  0115B4  0100               	movlb	0	; () banked
 15966  0115B6  EE20 F003          	lfsr	2,3
 15967  0115BA  5176               	movf	CANsendMessage@data& (0+255),w,b
 15968  0115BC  26D9               	addwf	fsr2l,f,c
 15969  0115BE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15970  0115C0  22DA               	addwfc	fsr2h,f,c
 15971  0115C2  50DF               	movf	indf2,w,c
 15972  0115C4  010F               	movlb	15	; () banked
 15973  0115C6  6F49               	movwf	73,b	;volatile
 15974                           
 15975                           ; BSR set to: 15
 15976                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15977  0115C8  0100               	movlb	0	; () banked
 15978  0115CA  EE20 F004          	lfsr	2,4
 15979  0115CE  5176               	movf	CANsendMessage@data& (0+255),w,b
 15980  0115D0  26D9               	addwf	fsr2l,f,c
 15981  0115D2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15982  0115D4  22DA               	addwfc	fsr2h,f,c
 15983  0115D6  50DF               	movf	indf2,w,c
 15984  0115D8  010F               	movlb	15	; () banked
 15985  0115DA  6F4A               	movwf	74,b	;volatile
 15986                           
 15987                           ; BSR set to: 15
 15988                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15989  0115DC  0100               	movlb	0	; () banked
 15990  0115DE  EE20 F005          	lfsr	2,5
 15991  0115E2  5176               	movf	CANsendMessage@data& (0+255),w,b
 15992  0115E4  26D9               	addwf	fsr2l,f,c
 15993  0115E6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15994  0115E8  22DA               	addwfc	fsr2h,f,c
 15995  0115EA  50DF               	movf	indf2,w,c
 15996  0115EC  010F               	movlb	15	; () banked
 15997  0115EE  6F4B               	movwf	75,b	;volatile
 15998                           
 15999                           ; BSR set to: 15
 16000                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 16001  0115F0  0100               	movlb	0	; () banked
 16002  0115F2  EE20 F006          	lfsr	2,6
 16003  0115F6  5176               	movf	CANsendMessage@data& (0+255),w,b
 16004  0115F8  26D9               	addwf	fsr2l,f,c
 16005  0115FA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16006  0115FC  22DA               	addwfc	fsr2h,f,c
 16007  0115FE  50DF               	movf	indf2,w,c
 16008  011600  010F               	movlb	15	; () banked
 16009  011602  6F4C               	movwf	76,b	;volatile
 16010                           
 16011                           ; BSR set to: 15
 16012                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 16013  011604  0100               	movlb	0	; () banked
 16014  011606  EE20 F007          	lfsr	2,7
 16015  01160A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16016  01160C  26D9               	addwf	fsr2l,f,c
 16017  01160E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16018  011610  22DA               	addwfc	fsr2h,f,c
 16019  011612  50DF               	movf	indf2,w,c
 16020  011614  010F               	movlb	15	; () banked
 16021  011616  6F4D               	movwf	77,b	;volatile
 16022                           
 16023                           ; BSR set to: 15
 16024                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 16025  011618  010F               	movlb	15	; () banked
 16026  01161A  8740               	bsf	64,3,b	;volatile
 16027                           
 16028                           ; BSR set to: 15
 16029                           ;inc\CANlib.h: 368: return;
 16030  01161C  0012               	return	
 16031  01161E                     l375:
 16032                           
 16033                           ; BSR set to: 15
 16034                           ;inc\CANlib.h: 369: }
 16035                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 16036  01161E  010F               	movlb	15	; () banked
 16037  011620  B730               	btfsc	48,3,b	;volatile
 16038  011622  D13F               	goto	l390
 16039                           
 16040                           ; BSR set to: 15
 16041                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 16042  011624  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 16043                           
 16044                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 16045  011628  0100               	movlb	0	; () banked
 16046  01162A  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 16047  01162C  D003               	goto	l391
 16048                           
 16049                           ; BSR set to: 0
 16050                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 16051  01162E  010F               	movlb	15	; () banked
 16052  011630  8D35               	bsf	53,6,b	;volatile
 16053  011632  D002               	goto	l392
 16054  011634                     l391:
 16055                           
 16056                           ; BSR set to: 0
 16057                           ;inc\CANlib.h: 378: else
 16058                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16059  011634  010F               	movlb	15	; () banked
 16060  011636  9D35               	bcf	53,6,b	;volatile
 16061  011638                     l392:
 16062                           
 16063                           ; BSR set to: 15
 16064                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16065  011638  0100               	movlb	0	; () banked
 16066  01163A  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 16067  01163C  D079               	goto	l393
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;inc\CANlib.h: 382: {
 16071                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16072  01163E  0100               	movlb	0	; () banked
 16073  011640  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 16074  011642  0100               	movlb	0	; () banked
 16075  011644  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16076  011646  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16077  011648  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16078  01164A  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16082  01164C  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 16083                           
 16084                           ; BSR set to: 0
 16085                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16086  011650  0E00               	movlw	0
 16087  011652  0100               	movlb	0	; () banked
 16088  011654  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16089  011656  0100               	movlb	0	; () banked
 16090  011658  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16091  01165A  0EFF               	movlw	255
 16092  01165C  0100               	movlb	0	; () banked
 16093  01165E  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16094  011660  0100               	movlb	0	; () banked
 16095  011662  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16096  011664  0E00               	movlw	0
 16097  011666  0100               	movlb	0	; () banked
 16098  011668  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16099  01166A  0100               	movlb	0	; () banked
 16100  01166C  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16101  01166E  0E00               	movlw	0
 16102  011670  0100               	movlb	0	; () banked
 16103  011672  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16104  011674  0100               	movlb	0	; () banked
 16105  011676  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16106                           
 16107                           ; BSR set to: 0
 16108                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 16109  011678  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16110  01167C  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16111  011680  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16112  011684  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16113  011688  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 16114  01168C  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16115  011690  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16116  011694  0100               	movlb	0	; () banked
 16117  011696  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 16118  011698  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16119  01169C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16120  0116A0  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16121  0116A4  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16122                           
 16123                           ; BSR set to: 0
 16124                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 16125  0116A8  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 16129  0116AC  0E00               	movlw	0
 16130  0116AE  010F               	movlb	15	; () banked
 16131  0116B0  6F32               	movwf	50,b	;volatile
 16132                           
 16133                           ; BSR set to: 15
 16134                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 16135  0116B2  010F               	movlb	15	; () banked
 16136  0116B4  8732               	bsf	50,3,b	;volatile
 16137                           
 16138                           ; BSR set to: 15
 16139                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 16140  0116B6  0100               	movlb	0	; () banked
 16141  0116B8  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16142  0116BA  D002               	goto	l394
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 16146  0116BC  010F               	movlb	15	; () banked
 16147  0116BE  8132               	bsf	50,0,b	;volatile
 16148  0116C0                     l394:
 16149                           
 16150                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 16151  0116C0  0100               	movlb	0	; () banked
 16152  0116C2  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16153  0116C4  D002               	goto	l395
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 16157  0116C6  010F               	movlb	15	; () banked
 16158  0116C8  8332               	bsf	50,1,b	;volatile
 16159  0116CA                     l395:
 16160                           
 16161                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 16162  0116CA  0100               	movlb	0	; () banked
 16163  0116CC  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16164  0116CE  D002               	goto	l396
 16165                           
 16166                           ; BSR set to: 0
 16167                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 16168  0116D0  010F               	movlb	15	; () banked
 16169  0116D2  8B32               	bsf	50,5,b	;volatile
 16170  0116D4                     l396:
 16171                           
 16172                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 16173  0116D4  0100               	movlb	0	; () banked
 16174  0116D6  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16175  0116D8  D002               	goto	l397
 16176                           
 16177                           ; BSR set to: 0
 16178                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 16179  0116DA  010F               	movlb	15	; () banked
 16180  0116DC  8D32               	bsf	50,6,b	;volatile
 16181  0116DE                     l397:
 16182                           
 16183                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 16184  0116DE  0100               	movlb	0	; () banked
 16185  0116E0  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16186  0116E2  D002               	goto	l5934
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 16190  0116E4  010F               	movlb	15	; () banked
 16191  0116E6  8F32               	bsf	50,7,b	;volatile
 16192  0116E8                     l5934:
 16193                           
 16194                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 16195  0116E8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16196  0116EC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16197  0116F0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16198  0116F4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16199  0116F8  0E16               	movlw	22
 16200  0116FA  D006               	goto	u7350
 16201  0116FC                     u7355:
 16202  0116FC  0100               	movlb	0	; () banked
 16203  0116FE  90D8               	bcf	status,0,c
 16204  011700  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16205  011702  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16206  011704  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16207  011706  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16208  011708                     u7350:
 16209  011708  2EE8               	decfsz	wreg,f,c
 16210  01170A  D7F8               	goto	u7355
 16211  01170C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16212  011710  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16213  011714  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16214  011718  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16215                           
 16216                           ; BSR set to: 0
 16217                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16218  01171C  0100               	movlb	0	; () banked
 16219  01171E  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16220  011720  0100               	movlb	0	; () banked
 16221  011722  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16222  011724  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16223  011726  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16224  011728  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16225                           
 16226                           ; BSR set to: 0
 16227                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16228  01172A  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16229                           
 16230                           ;inc\CANlib.h: 407: }
 16231  01172E  D059               	goto	l5954
 16232  011730                     l393:
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;inc\CANlib.h: 409: else
 16236                           ;inc\CANlib.h: 411: {
 16237                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16238  011730  010F               	movlb	15	; () banked
 16239  011732  9732               	bcf	50,3,b	;volatile
 16240                           
 16241                           ; BSR set to: 15
 16242                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16243  011734  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16244  011738  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16245  01173C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16246  011740  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16247  011744  0E04               	movlw	4
 16248  011746  D006               	goto	u7360
 16249  011748                     u7365:
 16250  011748  0100               	movlb	0	; () banked
 16251  01174A  90D8               	bcf	status,0,c
 16252  01174C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16253  01174E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16254  011750  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16255  011752  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16256  011754                     u7360:
 16257  011754  2EE8               	decfsz	wreg,f,c
 16258  011756  D7F8               	goto	u7365
 16259  011758  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16260  01175C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16261  011760  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16262  011764  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16263                           
 16264                           ; BSR set to: 0
 16265                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16266  011768  0100               	movlb	0	; () banked
 16267  01176A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16268  01176C  0100               	movlb	0	; () banked
 16269  01176E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16270  011770  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16271  011772  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16272  011774  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16276  011776  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16277                           
 16278                           ; BSR set to: 0
 16279                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16280  01177A  0E07               	movlw	7
 16281  01177C  0100               	movlb	0	; () banked
 16282  01177E  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16283  011780  0100               	movlb	0	; () banked
 16284  011782  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16285  011784  0E00               	movlw	0
 16286  011786  0100               	movlb	0	; () banked
 16287  011788  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16288  01178A  0100               	movlb	0	; () banked
 16289  01178C  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16290  01178E  0E00               	movlw	0
 16291  011790  0100               	movlb	0	; () banked
 16292  011792  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16293  011794  0100               	movlb	0	; () banked
 16294  011796  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16295  011798  0E00               	movlw	0
 16296  01179A  0100               	movlb	0	; () banked
 16297  01179C  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16298  01179E  0100               	movlb	0	; () banked
 16299  0117A0  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16300                           
 16301                           ; BSR set to: 0
 16302                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16303  0117A2  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16304  0117A6  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16305  0117AA  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16306  0117AE  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16307  0117B2  0E05               	movlw	5
 16308  0117B4                     u7375:
 16309  0117B4  90D8               	bcf	status,0,c
 16310  0117B6  0100               	movlb	0	; () banked
 16311  0117B8  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 16312  0117BA  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16313  0117BC  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16314  0117BE  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16315  0117C0  2EE8               	decfsz	wreg,f,c
 16316  0117C2  D7F8               	goto	u7375
 16317  0117C4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16318  0117C8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16319  0117CC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16320  0117D0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16321                           
 16322                           ; BSR set to: 0
 16323                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16324  0117D4  010F               	movlb	15	; () banked
 16325  0117D6  5132               	movf	50,w,b	;volatile
 16326  0117D8  0B1F               	andlw	31
 16327  0117DA  010F               	movlb	15	; () banked
 16328  0117DC  6F32               	movwf	50,b	;volatile
 16329                           
 16330                           ; BSR set to: 15
 16331                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16332  0117DE  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 16333  0117E2                     l5954:
 16334                           
 16335                           ;inc\CANlib.h: 422: }
 16336                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16337  0117E2  0100               	movlb	0	; () banked
 16338  0117E4  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 16339  0117E6  D003               	goto	l400
 16340                           
 16341                           ; BSR set to: 0
 16342                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16343  0117E8  010F               	movlb	15	; () banked
 16344  0117EA  8130               	bsf	48,0,b	;volatile
 16345  0117EC  D002               	goto	l401
 16346  0117EE                     l400:
 16347                           
 16348                           ; BSR set to: 0
 16349                           ;inc\CANlib.h: 426: else
 16350                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16351  0117EE  010F               	movlb	15	; () banked
 16352  0117F0  9130               	bcf	48,0,b	;volatile
 16353  0117F2                     l401:
 16354                           
 16355                           ; BSR set to: 15
 16356                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16357  0117F2  0100               	movlb	0	; () banked
 16358  0117F4  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 16359  0117F6  D003               	goto	l402
 16360                           
 16361                           ; BSR set to: 0
 16362                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16363  0117F8  010F               	movlb	15	; () banked
 16364  0117FA  8330               	bsf	48,1,b	;volatile
 16365  0117FC  D002               	goto	l5960
 16366  0117FE                     l402:
 16367                           
 16368                           ; BSR set to: 0
 16369                           ;inc\CANlib.h: 430: else
 16370                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16371  0117FE  010F               	movlb	15	; () banked
 16372  011800  9330               	bcf	48,1,b	;volatile
 16373  011802                     l5960:
 16374                           
 16375                           ; BSR set to: 15
 16376                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16377  011802  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 16378  011806  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16379  01180A  50DF               	movf	indf2,w,c
 16380  01180C  010F               	movlb	15	; () banked
 16381  01180E  6F36               	movwf	54,b	;volatile
 16382                           
 16383                           ; BSR set to: 15
 16384                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16385  011810  0100               	movlb	0	; () banked
 16386  011812  EE20 F001          	lfsr	2,1
 16387  011816  5176               	movf	CANsendMessage@data& (0+255),w,b
 16388  011818  26D9               	addwf	fsr2l,f,c
 16389  01181A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16390  01181C  22DA               	addwfc	fsr2h,f,c
 16391  01181E  50DF               	movf	indf2,w,c
 16392  011820  010F               	movlb	15	; () banked
 16393  011822  6F37               	movwf	55,b	;volatile
 16394                           
 16395                           ; BSR set to: 15
 16396                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16397  011824  0100               	movlb	0	; () banked
 16398  011826  EE20 F002          	lfsr	2,2
 16399  01182A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16400  01182C  26D9               	addwf	fsr2l,f,c
 16401  01182E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16402  011830  22DA               	addwfc	fsr2h,f,c
 16403  011832  50DF               	movf	indf2,w,c
 16404  011834  010F               	movlb	15	; () banked
 16405  011836  6F38               	movwf	56,b	;volatile
 16406                           
 16407                           ; BSR set to: 15
 16408                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16409  011838  0100               	movlb	0	; () banked
 16410  01183A  EE20 F003          	lfsr	2,3
 16411  01183E  5176               	movf	CANsendMessage@data& (0+255),w,b
 16412  011840  26D9               	addwf	fsr2l,f,c
 16413  011842  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16414  011844  22DA               	addwfc	fsr2h,f,c
 16415  011846  50DF               	movf	indf2,w,c
 16416  011848  010F               	movlb	15	; () banked
 16417  01184A  6F39               	movwf	57,b	;volatile
 16418                           
 16419                           ; BSR set to: 15
 16420                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16421  01184C  0100               	movlb	0	; () banked
 16422  01184E  EE20 F004          	lfsr	2,4
 16423  011852  5176               	movf	CANsendMessage@data& (0+255),w,b
 16424  011854  26D9               	addwf	fsr2l,f,c
 16425  011856  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16426  011858  22DA               	addwfc	fsr2h,f,c
 16427  01185A  50DF               	movf	indf2,w,c
 16428  01185C  010F               	movlb	15	; () banked
 16429  01185E  6F3A               	movwf	58,b	;volatile
 16430                           
 16431                           ; BSR set to: 15
 16432                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16433  011860  0100               	movlb	0	; () banked
 16434  011862  EE20 F005          	lfsr	2,5
 16435  011866  5176               	movf	CANsendMessage@data& (0+255),w,b
 16436  011868  26D9               	addwf	fsr2l,f,c
 16437  01186A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16438  01186C  22DA               	addwfc	fsr2h,f,c
 16439  01186E  50DF               	movf	indf2,w,c
 16440  011870  010F               	movlb	15	; () banked
 16441  011872  6F3B               	movwf	59,b	;volatile
 16442                           
 16443                           ; BSR set to: 15
 16444                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16445  011874  0100               	movlb	0	; () banked
 16446  011876  EE20 F006          	lfsr	2,6
 16447  01187A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16448  01187C  26D9               	addwf	fsr2l,f,c
 16449  01187E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16450  011880  22DA               	addwfc	fsr2h,f,c
 16451  011882  50DF               	movf	indf2,w,c
 16452  011884  010F               	movlb	15	; () banked
 16453  011886  6F3C               	movwf	60,b	;volatile
 16454                           
 16455                           ; BSR set to: 15
 16456                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16457  011888  0100               	movlb	0	; () banked
 16458  01188A  EE20 F007          	lfsr	2,7
 16459  01188E  5176               	movf	CANsendMessage@data& (0+255),w,b
 16460  011890  26D9               	addwf	fsr2l,f,c
 16461  011892  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16462  011894  22DA               	addwfc	fsr2h,f,c
 16463  011896  50DF               	movf	indf2,w,c
 16464  011898  010F               	movlb	15	; () banked
 16465  01189A  6F3D               	movwf	61,b	;volatile
 16466                           
 16467                           ; BSR set to: 15
 16468                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16469  01189C  010F               	movlb	15	; () banked
 16470  01189E  8730               	bsf	48,3,b	;volatile
 16471                           
 16472                           ; BSR set to: 15
 16473                           ;inc\CANlib.h: 444: return;
 16474  0118A0  0012               	return	
 16475  0118A2                     l390:
 16476                           
 16477                           ; BSR set to: 15
 16478                           ;inc\CANlib.h: 445: }
 16479                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16480  0118A2  010F               	movlb	15	; () banked
 16481  0118A4  B720               	btfsc	32,3,b	;volatile
 16482  0118A6  0012               	return	
 16483                           
 16484                           ; BSR set to: 15
 16485                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16486  0118A8  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 16487                           
 16488                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16489  0118AC  0100               	movlb	0	; () banked
 16490  0118AE  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 16491  0118B0  D003               	goto	l405
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16495  0118B2  010F               	movlb	15	; () banked
 16496  0118B4  8D25               	bsf	37,6,b	;volatile
 16497  0118B6  D002               	goto	l406
 16498  0118B8                     l405:
 16499                           
 16500                           ; BSR set to: 0
 16501                           ;inc\CANlib.h: 454: else
 16502                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16503  0118B8  010F               	movlb	15	; () banked
 16504  0118BA  9D25               	bcf	37,6,b	;volatile
 16505  0118BC                     l406:
 16506                           
 16507                           ; BSR set to: 15
 16508                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16509  0118BC  0100               	movlb	0	; () banked
 16510  0118BE  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 16511  0118C0  D079               	goto	l407
 16512                           
 16513                           ; BSR set to: 0
 16514                           ;inc\CANlib.h: 458: {
 16515                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16516  0118C2  0100               	movlb	0	; () banked
 16517  0118C4  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 16518  0118C6  0100               	movlb	0	; () banked
 16519  0118C8  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16520  0118CA  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16521  0118CC  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16522  0118CE  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16523                           
 16524                           ; BSR set to: 0
 16525                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16526  0118D0  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 16527                           
 16528                           ; BSR set to: 0
 16529                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16530  0118D4  0E00               	movlw	0
 16531  0118D6  0100               	movlb	0	; () banked
 16532  0118D8  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16533  0118DA  0100               	movlb	0	; () banked
 16534  0118DC  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16535  0118DE  0EFF               	movlw	255
 16536  0118E0  0100               	movlb	0	; () banked
 16537  0118E2  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16538  0118E4  0100               	movlb	0	; () banked
 16539  0118E6  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16540  0118E8  0E00               	movlw	0
 16541  0118EA  0100               	movlb	0	; () banked
 16542  0118EC  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16543  0118EE  0100               	movlb	0	; () banked
 16544  0118F0  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16545  0118F2  0E00               	movlw	0
 16546  0118F4  0100               	movlb	0	; () banked
 16547  0118F6  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16548  0118F8  0100               	movlb	0	; () banked
 16549  0118FA  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16553  0118FC  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16554  011900  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16555  011904  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16556  011908  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16557  01190C  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 16558  011910  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16559  011914  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16560  011918  0100               	movlb	0	; () banked
 16561  01191A  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 16562  01191C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16563  011920  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16564  011924  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16565  011928  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16569  01192C  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16573  011930  0E00               	movlw	0
 16574  011932  010F               	movlb	15	; () banked
 16575  011934  6F22               	movwf	34,b	;volatile
 16576                           
 16577                           ; BSR set to: 15
 16578                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16579  011936  010F               	movlb	15	; () banked
 16580  011938  8722               	bsf	34,3,b	;volatile
 16581                           
 16582                           ; BSR set to: 15
 16583                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16584  01193A  0100               	movlb	0	; () banked
 16585  01193C  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16586  01193E  D002               	goto	l408
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16590  011940  010F               	movlb	15	; () banked
 16591  011942  8122               	bsf	34,0,b	;volatile
 16592  011944                     l408:
 16593                           
 16594                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16595  011944  0100               	movlb	0	; () banked
 16596  011946  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16597  011948  D002               	goto	l409
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16601  01194A  010F               	movlb	15	; () banked
 16602  01194C  8322               	bsf	34,1,b	;volatile
 16603  01194E                     l409:
 16604                           
 16605                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16606  01194E  0100               	movlb	0	; () banked
 16607  011950  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16608  011952  D002               	goto	l410
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16612  011954  010F               	movlb	15	; () banked
 16613  011956  8B22               	bsf	34,5,b	;volatile
 16614  011958                     l410:
 16615                           
 16616                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16617  011958  0100               	movlb	0	; () banked
 16618  01195A  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16619  01195C  D002               	goto	l411
 16620                           
 16621                           ; BSR set to: 0
 16622                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16623  01195E  010F               	movlb	15	; () banked
 16624  011960  8D22               	bsf	34,6,b	;volatile
 16625  011962                     l411:
 16626                           
 16627                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16628  011962  0100               	movlb	0	; () banked
 16629  011964  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16630  011966  D002               	goto	l6010
 16631                           
 16632                           ; BSR set to: 0
 16633                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16634  011968  010F               	movlb	15	; () banked
 16635  01196A  8F22               	bsf	34,7,b	;volatile
 16636  01196C                     l6010:
 16637                           
 16638                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16639  01196C  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16640  011970  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16641  011974  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16642  011978  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16643  01197C  0E16               	movlw	22
 16644  01197E  D006               	goto	u7480
 16645  011980                     u7485:
 16646  011980  0100               	movlb	0	; () banked
 16647  011982  90D8               	bcf	status,0,c
 16648  011984  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16649  011986  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16650  011988  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16651  01198A  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16652  01198C                     u7480:
 16653  01198C  2EE8               	decfsz	wreg,f,c
 16654  01198E  D7F8               	goto	u7485
 16655  011990  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16656  011994  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16657  011998  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16658  01199C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16659                           
 16660                           ; BSR set to: 0
 16661                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16662  0119A0  0100               	movlb	0	; () banked
 16663  0119A2  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16664  0119A4  0100               	movlb	0	; () banked
 16665  0119A6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16666  0119A8  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16667  0119AA  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16668  0119AC  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16669                           
 16670                           ; BSR set to: 0
 16671                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16672  0119AE  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16673                           
 16674                           ;inc\CANlib.h: 483: }
 16675  0119B2  D059               	goto	l6030
 16676  0119B4                     l407:
 16677                           
 16678                           ; BSR set to: 0
 16679                           ;inc\CANlib.h: 485: else
 16680                           ;inc\CANlib.h: 487: {
 16681                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16682  0119B4  010F               	movlb	15	; () banked
 16683  0119B6  9722               	bcf	34,3,b	;volatile
 16684                           
 16685                           ; BSR set to: 15
 16686                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16687  0119B8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16688  0119BC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16689  0119C0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16690  0119C4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16691  0119C8  0E04               	movlw	4
 16692  0119CA  D006               	goto	u7490
 16693  0119CC                     u7495:
 16694  0119CC  0100               	movlb	0	; () banked
 16695  0119CE  90D8               	bcf	status,0,c
 16696  0119D0  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16697  0119D2  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16698  0119D4  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16699  0119D6  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16700  0119D8                     u7490:
 16701  0119D8  2EE8               	decfsz	wreg,f,c
 16702  0119DA  D7F8               	goto	u7495
 16703  0119DC  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16704  0119E0  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16705  0119E4  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16706  0119E8  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16707                           
 16708                           ; BSR set to: 0
 16709                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16710  0119EC  0100               	movlb	0	; () banked
 16711  0119EE  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16712  0119F0  0100               	movlb	0	; () banked
 16713  0119F2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16714  0119F4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16715  0119F6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16716  0119F8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16720  0119FA  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16724  0119FE  0E07               	movlw	7
 16725  011A00  0100               	movlb	0	; () banked
 16726  011A02  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16727  011A04  0100               	movlb	0	; () banked
 16728  011A06  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16729  011A08  0E00               	movlw	0
 16730  011A0A  0100               	movlb	0	; () banked
 16731  011A0C  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16732  011A0E  0100               	movlb	0	; () banked
 16733  011A10  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16734  011A12  0E00               	movlw	0
 16735  011A14  0100               	movlb	0	; () banked
 16736  011A16  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16737  011A18  0100               	movlb	0	; () banked
 16738  011A1A  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16739  011A1C  0E00               	movlw	0
 16740  011A1E  0100               	movlb	0	; () banked
 16741  011A20  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16742  011A22  0100               	movlb	0	; () banked
 16743  011A24  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16747  011A26  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16748  011A2A  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16749  011A2E  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16750  011A32  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16751  011A36  0E05               	movlw	5
 16752  011A38                     u7505:
 16753  011A38  90D8               	bcf	status,0,c
 16754  011A3A  0100               	movlb	0	; () banked
 16755  011A3C  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 16756  011A3E  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16757  011A40  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16758  011A42  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16759  011A44  2EE8               	decfsz	wreg,f,c
 16760  011A46  D7F8               	goto	u7505
 16761  011A48  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16762  011A4C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16763  011A50  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16764  011A54  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16768  011A58  010F               	movlb	15	; () banked
 16769  011A5A  5122               	movf	34,w,b	;volatile
 16770  011A5C  0B1F               	andlw	31
 16771  011A5E  010F               	movlb	15	; () banked
 16772  011A60  6F22               	movwf	34,b	;volatile
 16773                           
 16774                           ; BSR set to: 15
 16775                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16776  011A62  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 16777  011A66                     l6030:
 16778                           
 16779                           ;inc\CANlib.h: 498: }
 16780                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16781  011A66  0100               	movlb	0	; () banked
 16782  011A68  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 16783  011A6A  D003               	goto	l414
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16787  011A6C  010F               	movlb	15	; () banked
 16788  011A6E  8120               	bsf	32,0,b	;volatile
 16789  011A70  D002               	goto	l415
 16790  011A72                     l414:
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;inc\CANlib.h: 502: else
 16794                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16795  011A72  010F               	movlb	15	; () banked
 16796  011A74  9120               	bcf	32,0,b	;volatile
 16797  011A76                     l415:
 16798                           
 16799                           ; BSR set to: 15
 16800                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16801  011A76  0100               	movlb	0	; () banked
 16802  011A78  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 16803  011A7A  D003               	goto	l416
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16807  011A7C  010F               	movlb	15	; () banked
 16808  011A7E  8320               	bsf	32,1,b	;volatile
 16809  011A80  D002               	goto	l6036
 16810  011A82                     l416:
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;inc\CANlib.h: 506: else
 16814                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16815  011A82  010F               	movlb	15	; () banked
 16816  011A84  9320               	bcf	32,1,b	;volatile
 16817  011A86                     l6036:
 16818                           
 16819                           ; BSR set to: 15
 16820                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16821  011A86  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 16822  011A8A  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16823  011A8E  50DF               	movf	indf2,w,c
 16824  011A90  010F               	movlb	15	; () banked
 16825  011A92  6F26               	movwf	38,b	;volatile
 16826                           
 16827                           ; BSR set to: 15
 16828                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16829  011A94  0100               	movlb	0	; () banked
 16830  011A96  EE20 F001          	lfsr	2,1
 16831  011A9A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16832  011A9C  26D9               	addwf	fsr2l,f,c
 16833  011A9E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16834  011AA0  22DA               	addwfc	fsr2h,f,c
 16835  011AA2  50DF               	movf	indf2,w,c
 16836  011AA4  010F               	movlb	15	; () banked
 16837  011AA6  6F27               	movwf	39,b	;volatile
 16838                           
 16839                           ; BSR set to: 15
 16840                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16841  011AA8  0100               	movlb	0	; () banked
 16842  011AAA  EE20 F002          	lfsr	2,2
 16843  011AAE  5176               	movf	CANsendMessage@data& (0+255),w,b
 16844  011AB0  26D9               	addwf	fsr2l,f,c
 16845  011AB2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16846  011AB4  22DA               	addwfc	fsr2h,f,c
 16847  011AB6  50DF               	movf	indf2,w,c
 16848  011AB8  010F               	movlb	15	; () banked
 16849  011ABA  6F28               	movwf	40,b	;volatile
 16850                           
 16851                           ; BSR set to: 15
 16852                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16853  011ABC  0100               	movlb	0	; () banked
 16854  011ABE  EE20 F003          	lfsr	2,3
 16855  011AC2  5176               	movf	CANsendMessage@data& (0+255),w,b
 16856  011AC4  26D9               	addwf	fsr2l,f,c
 16857  011AC6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16858  011AC8  22DA               	addwfc	fsr2h,f,c
 16859  011ACA  50DF               	movf	indf2,w,c
 16860  011ACC  010F               	movlb	15	; () banked
 16861  011ACE  6F29               	movwf	41,b	;volatile
 16862                           
 16863                           ; BSR set to: 15
 16864                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16865  011AD0  0100               	movlb	0	; () banked
 16866  011AD2  EE20 F004          	lfsr	2,4
 16867  011AD6  5176               	movf	CANsendMessage@data& (0+255),w,b
 16868  011AD8  26D9               	addwf	fsr2l,f,c
 16869  011ADA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16870  011ADC  22DA               	addwfc	fsr2h,f,c
 16871  011ADE  50DF               	movf	indf2,w,c
 16872  011AE0  010F               	movlb	15	; () banked
 16873  011AE2  6F2A               	movwf	42,b	;volatile
 16874                           
 16875                           ; BSR set to: 15
 16876                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16877  011AE4  0100               	movlb	0	; () banked
 16878  011AE6  EE20 F005          	lfsr	2,5
 16879  011AEA  5176               	movf	CANsendMessage@data& (0+255),w,b
 16880  011AEC  26D9               	addwf	fsr2l,f,c
 16881  011AEE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16882  011AF0  22DA               	addwfc	fsr2h,f,c
 16883  011AF2  50DF               	movf	indf2,w,c
 16884  011AF4  010F               	movlb	15	; () banked
 16885  011AF6  6F2B               	movwf	43,b	;volatile
 16886                           
 16887                           ; BSR set to: 15
 16888                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16889  011AF8  0100               	movlb	0	; () banked
 16890  011AFA  EE20 F006          	lfsr	2,6
 16891  011AFE  5176               	movf	CANsendMessage@data& (0+255),w,b
 16892  011B00  26D9               	addwf	fsr2l,f,c
 16893  011B02  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16894  011B04  22DA               	addwfc	fsr2h,f,c
 16895  011B06  50DF               	movf	indf2,w,c
 16896  011B08  010F               	movlb	15	; () banked
 16897  011B0A  6F2C               	movwf	44,b	;volatile
 16898                           
 16899                           ; BSR set to: 15
 16900                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16901  011B0C  0100               	movlb	0	; () banked
 16902  011B0E  EE20 F007          	lfsr	2,7
 16903  011B12  5176               	movf	CANsendMessage@data& (0+255),w,b
 16904  011B14  26D9               	addwf	fsr2l,f,c
 16905  011B16  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16906  011B18  22DA               	addwfc	fsr2h,f,c
 16907  011B1A  50DF               	movf	indf2,w,c
 16908  011B1C  010F               	movlb	15	; () banked
 16909  011B1E  6F2D               	movwf	45,b	;volatile
 16910                           
 16911                           ; BSR set to: 15
 16912                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16913  011B20  010F               	movlb	15	; () banked
 16914  011B22  8720               	bsf	32,3,b	;volatile
 16915                           
 16916                           ; BSR set to: 15
 16917                           ;inc\CANlib.h: 520: return;
 16918  011B24  0012               	return	
 16919  011B26                     __end_of_CANsendMessage:
 16920                           	opt stack 0
 16921                           tblptru	equ	0xFF8
 16922                           tblptrh	equ	0xFF7
 16923                           tblptrl	equ	0xFF6
 16924                           tablat	equ	0xFF5
 16925                           prodh	equ	0xFF4
 16926                           prodl	equ	0xFF3
 16927                           intcon	equ	0xFF2
 16928                           postinc0	equ	0xFEE
 16929                           wreg	equ	0xFE8
 16930                           indf2	equ	0xFDF
 16931                           postinc2	equ	0xFDE
 16932                           fsr2h	equ	0xFDA
 16933                           fsr2l	equ	0xFD9
 16934                           status	equ	0xFD8
 16935                           
 16936 ;; *************** function _CANisTxReady *****************
 16937 ;; Defined at:
 16938 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16939 ;; Parameters:    Size  Location     Type
 16940 ;;		None
 16941 ;; Auto vars:     Size  Location     Type
 16942 ;;		None
 16943 ;; Return value:  Size  Location     Type
 16944 ;;                  1    wreg      unsigned char 
 16945 ;; Registers used:
 16946 ;;		wreg, status,2
 16947 ;; Tracked objects:
 16948 ;;		On entry : 0/0
 16949 ;;		On exit  : 0/0
 16950 ;;		Unchanged: 0/0
 16951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16955 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16956 ;;Total ram usage:        1 bytes
 16957 ;; Hardware stack levels used:    1
 16958 ;; Hardware stack levels required when called:    3
 16959 ;; This function calls:
 16960 ;;		Nothing
 16961 ;; This function is called by:
 16962 ;;		_main
 16963 ;;		_CAN_Send
 16964 ;;		_LCD_Handler
 16965 ;; This function uses a non-reentrant model
 16966 ;;
 16967                           
 16968                           	psect	text46
 16969  015D5A                     __ptext46:
 16970                           	opt stack 0
 16971  015D5A                     _CANisTxReady:
 16972                           	opt stack 26
 16973                           
 16974                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16975                           
 16976                           ; BSR set to: 15
 16977                           ;incstack = 0
 16978  015D5A  0E01               	movlw	1
 16979  015D5C  0100               	movlb	0	; () banked
 16980  015D5E  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 16981                           
 16982                           ; BSR set to: 0
 16983  015D60  010F               	movlb	15	; () banked
 16984  015D62  A740               	btfss	64,3,b	;volatile
 16985  015D64  D009               	goto	l568
 16986                           
 16987                           ; BSR set to: 15
 16988  015D66  010F               	movlb	15	; () banked
 16989  015D68  A730               	btfss	48,3,b	;volatile
 16990  015D6A  D006               	goto	l568
 16991                           
 16992                           ; BSR set to: 15
 16993  015D6C  010F               	movlb	15	; () banked
 16994  015D6E  A720               	btfss	32,3,b	;volatile
 16995  015D70  D003               	goto	l568
 16996                           
 16997                           ; BSR set to: 15
 16998  015D72  0E00               	movlw	0
 16999  015D74  0100               	movlb	0	; () banked
 17000  015D76  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 17001  015D78                     l568:
 17002  015D78  0100               	movlb	0	; () banked
 17003  015D7A  5172               	movf	_CANisTxReady$3235& (0+255),w,b
 17004  015D7C  0012               	return	
 17005  015D7E                     __end_of_CANisTxReady:
 17006                           	opt stack 0
 17007                           tblptru	equ	0xFF8
 17008                           tblptrh	equ	0xFF7
 17009                           tblptrl	equ	0xFF6
 17010                           tablat	equ	0xFF5
 17011                           prodh	equ	0xFF4
 17012                           prodl	equ	0xFF3
 17013                           intcon	equ	0xFF2
 17014                           postinc0	equ	0xFEE
 17015                           wreg	equ	0xFE8
 17016                           indf2	equ	0xFDF
 17017                           postinc2	equ	0xFDE
 17018                           fsr2h	equ	0xFDA
 17019                           fsr2l	equ	0xFD9
 17020                           status	equ	0xFD8
 17021                           
 17022 ;; *************** function _ISR_bassa *****************
 17023 ;; Defined at:
 17024 ;;		line 145 in file "RemoteCan.c"
 17025 ;; Parameters:    Size  Location     Type
 17026 ;;		None
 17027 ;; Auto vars:     Size  Location     Type
 17028 ;;		None
 17029 ;; Return value:  Size  Location     Type
 17030 ;;		None               void
 17031 ;; Registers used:
 17032 ;;		wreg, status,2, status,0
 17033 ;; Tracked objects:
 17034 ;;		On entry : 0/0
 17035 ;;		On exit  : 0/0
 17036 ;;		Unchanged: 0/0
 17037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;Total ram usage:       17 bytes
 17043 ;; Hardware stack levels used:    1
 17044 ;; Hardware stack levels required when called:    2
 17045 ;; This function calls:
 17046 ;;		Nothing
 17047 ;; This function is called by:
 17048 ;;		Interrupt level 1
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052                           	psect	intcodelo
 17053  000018                     __pintcodelo:
 17054                           	opt stack 0
 17055  000018                     _ISR_bassa:
 17056                           	opt stack 21
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;incstack = 0
 17060  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17061  00001A  CFD8 F02D          	movff	status,??_ISR_bassa
 17062  00001E  CFE8 F02E          	movff	wreg,??_ISR_bassa+1
 17063  000022  CFE0 F02F          	movff	bsr,??_ISR_bassa+2
 17064  000026  CFFA F030          	movff	pclath,??_ISR_bassa+3
 17065  00002A  CFFB F031          	movff	pclatu,??_ISR_bassa+4
 17066  00002E  CFE9 F032          	movff	fsr0l,??_ISR_bassa+5
 17067  000032  CFEA F033          	movff	fsr0h,??_ISR_bassa+6
 17068  000036  CFE1 F034          	movff	fsr1l,??_ISR_bassa+7
 17069  00003A  CFE2 F035          	movff	fsr1h,??_ISR_bassa+8
 17070  00003E  CFD9 F036          	movff	fsr2l,??_ISR_bassa+9
 17071  000042  CFDA F037          	movff	fsr2h,??_ISR_bassa+10
 17072  000046  CFF3 F038          	movff	prodl,??_ISR_bassa+11
 17073  00004A  CFF4 F039          	movff	prodh,??_ISR_bassa+12
 17074  00004E  CFF6 F03A          	movff	tblptrl,??_ISR_bassa+13
 17075  000052  CFF7 F03B          	movff	tblptrh,??_ISR_bassa+14
 17076  000056  CFF8 F03C          	movff	tblptru,??_ISR_bassa+15
 17077  00005A  CFF5 F03D          	movff	tablat,??_ISR_bassa+16
 17078                           
 17079                           ;RemoteCan.c: 146: if (PIR2bits.TMR3IF == 1) {
 17080  00005E  A2A1               	btfss	4001,1,c	;volatile
 17081  000060  D00B               	goto	i1l770
 17082                           
 17083                           ;RemoteCan.c: 147: time_counter++;
 17084  000062  0E01               	movlw	1
 17085  000064  2622               	addwf	_time_counter,f,c	;volatile
 17086  000066  0E00               	movlw	0
 17087  000068  2223               	addwfc	_time_counter+1,f,c	;volatile
 17088  00006A  2224               	addwfc	_time_counter+2,f,c	;volatile
 17089  00006C  2225               	addwfc	_time_counter+3,f,c	;volatile
 17090                           
 17091                           ;RemoteCan.c: 148: TMR3H = 0x63;
 17092  00006E  0E63               	movlw	99
 17093  000070  6EB3               	movwf	4019,c	;volatile
 17094                           
 17095                           ;RemoteCan.c: 149: TMR3L = 0xC0;
 17096  000072  0EC0               	movlw	192
 17097  000074  6EB2               	movwf	4018,c	;volatile
 17098                           
 17099                           ;RemoteCan.c: 150: PIR2bits.TMR3IF = 0;
 17100  000076  92A1               	bcf	4001,1,c	;volatile
 17101  000078                     i1l770:
 17102  000078  C03D  FFF5         	movff	??_ISR_bassa+16,tablat
 17103  00007C  C03C  FFF8         	movff	??_ISR_bassa+15,tblptru
 17104  000080  C03B  FFF7         	movff	??_ISR_bassa+14,tblptrh
 17105  000084  C03A  FFF6         	movff	??_ISR_bassa+13,tblptrl
 17106  000088  C039  FFF4         	movff	??_ISR_bassa+12,prodh
 17107  00008C  C038  FFF3         	movff	??_ISR_bassa+11,prodl
 17108  000090  C037  FFDA         	movff	??_ISR_bassa+10,fsr2h
 17109  000094  C036  FFD9         	movff	??_ISR_bassa+9,fsr2l
 17110  000098  C035  FFE2         	movff	??_ISR_bassa+8,fsr1h
 17111  00009C  C034  FFE1         	movff	??_ISR_bassa+7,fsr1l
 17112  0000A0  C033  FFEA         	movff	??_ISR_bassa+6,fsr0h
 17113  0000A4  C032  FFE9         	movff	??_ISR_bassa+5,fsr0l
 17114  0000A8  C031  FFFB         	movff	??_ISR_bassa+4,pclatu
 17115  0000AC  C030  FFFA         	movff	??_ISR_bassa+3,pclath
 17116  0000B0  C02F  FFE0         	movff	??_ISR_bassa+2,bsr
 17117  0000B4  C02E  FFE8         	movff	??_ISR_bassa+1,wreg
 17118  0000B8  C02D  FFD8         	movff	??_ISR_bassa,status
 17119  0000BC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17120  0000BE  0010               	retfie	
 17121  0000C0                     __end_of_ISR_bassa:
 17122                           	opt stack 0
 17123                           pclatu	equ	0xFFB
 17124                           pclath	equ	0xFFA
 17125                           tblptru	equ	0xFF8
 17126                           tblptrh	equ	0xFF7
 17127                           tblptrl	equ	0xFF6
 17128                           tablat	equ	0xFF5
 17129                           prodh	equ	0xFF4
 17130                           prodl	equ	0xFF3
 17131                           intcon	equ	0xFF2
 17132                           postinc0	equ	0xFEE
 17133                           fsr0h	equ	0xFEA
 17134                           fsr0l	equ	0xFE9
 17135                           wreg	equ	0xFE8
 17136                           fsr1h	equ	0xFE2
 17137                           fsr1l	equ	0xFE1
 17138                           bsr	equ	0xFE0
 17139                           indf2	equ	0xFDF
 17140                           postinc2	equ	0xFDE
 17141                           fsr2h	equ	0xFDA
 17142                           fsr2l	equ	0xFD9
 17143                           status	equ	0xFD8
 17144                           
 17145 ;; *************** function _ISR_alta *****************
 17146 ;; Defined at:
 17147 ;;		line 104 in file "RemoteCan.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;		None
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;  i               1   29[COMRAM] unsigned char 
 17152 ;; Return value:  Size  Location     Type
 17153 ;;		None               void
 17154 ;; Registers used:
 17155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17156 ;; Tracked objects:
 17157 ;;		On entry : 0/0
 17158 ;;		On exit  : 0/0
 17159 ;;		Unchanged: 0/0
 17160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17163 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17164 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;Total ram usage:       15 bytes
 17166 ;; Hardware stack levels used:    1
 17167 ;; Hardware stack levels required when called:    1
 17168 ;; This function calls:
 17169 ;;		_CANisRxReady
 17170 ;;		_CANreceiveMessage
 17171 ;;		i2_CANisTxReady
 17172 ;;		i2_CANsendMessage
 17173 ;; This function is called by:
 17174 ;;		Interrupt level 2
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           
 17178                           	psect	intcode
 17179  000008                     __pintcode:
 17180                           	opt stack 0
 17181  000008                     _ISR_alta:
 17182                           	opt stack 21
 17183                           
 17184                           ;incstack = 0
 17185  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17186  00000A  CFFA F064          	movff	pclath,??_ISR_alta
 17187  00000E  CFFB F065          	movff	pclatu,??_ISR_alta+1
 17188  000012  EFDB  F0A8         	goto	int_func
 17189                           pclatu	equ	0xFFB
 17190                           pclath	equ	0xFFA
 17191                           tblptru	equ	0xFF8
 17192                           tblptrh	equ	0xFF7
 17193                           tblptrl	equ	0xFF6
 17194                           tablat	equ	0xFF5
 17195                           prodh	equ	0xFF4
 17196                           prodl	equ	0xFF3
 17197                           intcon	equ	0xFF2
 17198                           postinc0	equ	0xFEE
 17199                           fsr0h	equ	0xFEA
 17200                           fsr0l	equ	0xFE9
 17201                           wreg	equ	0xFE8
 17202                           fsr1h	equ	0xFE2
 17203                           fsr1l	equ	0xFE1
 17204                           bsr	equ	0xFE0
 17205                           indf2	equ	0xFDF
 17206                           postinc2	equ	0xFDE
 17207                           fsr2h	equ	0xFDA
 17208                           fsr2l	equ	0xFD9
 17209                           status	equ	0xFD8
 17210                           
 17211                           	psect	intcode_body
 17212  0151B6                     __pintcode_body:
 17213                           	opt stack 21
 17214  0151B6                     int_func:
 17215                           	opt stack 21
 17216  0151B6  CFE9 F066          	movff	fsr0l,??_ISR_alta+2
 17217  0151BA  CFEA F067          	movff	fsr0h,??_ISR_alta+3
 17218  0151BE  CFE1 F068          	movff	fsr1l,??_ISR_alta+4
 17219  0151C2  CFE2 F069          	movff	fsr1h,??_ISR_alta+5
 17220  0151C6  CFD9 F06A          	movff	fsr2l,??_ISR_alta+6
 17221  0151CA  CFDA F06B          	movff	fsr2h,??_ISR_alta+7
 17222  0151CE  CFF3 F06C          	movff	prodl,??_ISR_alta+8
 17223  0151D2  CFF4 F06D          	movff	prodh,??_ISR_alta+9
 17224  0151D6  CFF6 F06E          	movff	tblptrl,??_ISR_alta+10
 17225  0151DA  CFF7 F06F          	movff	tblptrh,??_ISR_alta+11
 17226  0151DE  CFF8 F070          	movff	tblptru,??_ISR_alta+12
 17227  0151E2  CFF5 F071          	movff	tablat,??_ISR_alta+13
 17228                           
 17229                           ;RemoteCan.c: 105: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 17230  0151E6  A2A4               	btfss	4004,1,c	;volatile
 17231  0151E8  B0A4               	btfsc	4004,0,c	;volatile
 17232  0151EA  D001               	goto	i2l8876
 17233  0151EC  D077               	goto	i2l766
 17234  0151EE                     i2l8876:
 17235                           
 17236                           ;RemoteCan.c: 106: if (CANisRxReady()) {
 17237  0151EE  EC22  F0AF         	call	_CANisRxReady	;wreg free
 17238  0151F2  0900               	iorlw	0
 17239  0151F4  B4D8               	btfsc	status,2,c
 17240  0151F6  D06E               	goto	i2l8920
 17241                           
 17242                           ;RemoteCan.c: 107: CANreceiveMessage(&msg);
 17243  0151F8  0E00               	movlw	low _msg
 17244  0151FA  6E3E               	movwf	CANreceiveMessage@msg,c
 17245  0151FC  0E01               	movlw	high _msg
 17246  0151FE  6E3F               	movwf	CANreceiveMessage@msg+1,c
 17247  015200  ECB0  F096         	call	_CANreceiveMessage	;wreg free
 17248                           
 17249                           ;RemoteCan.c: 108: RTR_Flag = msg.RTR;
 17250  015204  0101               	movlb	1	; () banked
 17251  015206  A10E               	btfss	(_msg+14)& (0+255),0,b
 17252  015208  D002               	goto	i2u1186_40
 17253  01520A  884B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17254  01520C  D001               	goto	i2l8882
 17255  01520E                     i2u1186_40:
 17256  01520E  984B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17257  015210                     i2l8882:
 17258                           
 17259                           ;RemoteCan.c: 109: id = msg.identifier;
 17260  015210  C100  F012         	movff	_msg,_id	;volatile
 17261  015214  C101  F013         	movff	_msg+1,_id+1	;volatile
 17262  015218  C102  F014         	movff	_msg+2,_id+2	;volatile
 17263  01521C  C103  F015         	movff	_msg+3,_id+3	;volatile
 17264                           
 17265                           ;RemoteCan.c: 110: newMessageCan = 1;
 17266  015220  8E4B               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 17267                           
 17268                           ;RemoteCan.c: 111: if (id == 0b00000000110) {
 17269  015222  0E06               	movlw	6
 17270  015224  1812               	xorwf	_id,w,c	;volatile
 17271  015226  1013               	iorwf	_id+1,w,c	;volatile
 17272  015228  1014               	iorwf	_id+2,w,c	;volatile
 17273  01522A  1015               	iorwf	_id+3,w,c	;volatile
 17274  01522C  A4D8               	btfss	status,2,c
 17275  01522E  D01A               	goto	i2l8900
 17276                           
 17277                           ;RemoteCan.c: 112: for (unsigned char i = 0; i < 8; i++) {
 17278  015230  0E00               	movlw	0
 17279  015232  6E4A               	movwf	ISR_alta@i,c
 17280  015234                     i2l8890:
 17281  015234  0E07               	movlw	7
 17282  015236  644A               	cpfsgt	ISR_alta@i,c
 17283  015238  D001               	goto	i2l8894
 17284  01523A  D014               	goto	i2l8900
 17285  01523C                     i2l8894:
 17286                           
 17287                           ;RemoteCan.c: 113: data_speed_rx[i] = msg.data[i];
 17288  01523C  504A               	movf	ISR_alta@i,w,c
 17289  01523E  0D01               	mullw	1
 17290  015240  0E04               	movlw	low (_msg+4)
 17291  015242  24F3               	addwf	prodl,w,c
 17292  015244  6ED9               	movwf	fsr2l,c
 17293  015246  0E01               	movlw	high (_msg+4)
 17294  015248  20F4               	addwfc	prodh,w,c
 17295  01524A  6EDA               	movwf	fsr2h,c
 17296  01524C  504A               	movf	ISR_alta@i,w,c
 17297  01524E  0D01               	mullw	1
 17298  015250  0E01               	movlw	low _data_speed_rx
 17299  015252  24F3               	addwf	prodl,w,c
 17300  015254  6EE1               	movwf	fsr1l,c
 17301  015256  0E00               	movlw	high _data_speed_rx
 17302  015258  20F4               	addwfc	prodh,w,c
 17303  01525A  6EE2               	movwf	fsr1h,c
 17304  01525C  CFDF FFE7          	movff	indf2,indf1
 17305  015260  2A4A               	incf	ISR_alta@i,f,c
 17306  015262  D7E8               	goto	i2l8890
 17307  015264                     i2l8900:
 17308                           
 17309                           ;RemoteCan.c: 114: }
 17310                           ;RemoteCan.c: 115: }
 17311                           ;RemoteCan.c: 117: if (id == 0b00000001011) {
 17312  015264  0E0B               	movlw	11
 17313  015266  1812               	xorwf	_id,w,c	;volatile
 17314  015268  1013               	iorwf	_id+1,w,c	;volatile
 17315  01526A  1014               	iorwf	_id+2,w,c	;volatile
 17316  01526C  1015               	iorwf	_id+3,w,c	;volatile
 17317  01526E  A4D8               	btfss	status,2,c
 17318  015270  D004               	goto	i2l8906
 17319                           
 17320                           ;RemoteCan.c: 118: if (msg.data[0] == 1) {
 17321  015272  0101               	movlb	1	; () banked
 17322  015274  0504               	decf	(_msg+4)& (0+255),w,b
 17323  015276  B4D8               	btfsc	status,2,c
 17324                           
 17325                           ; BSR set to: 1
 17326                           ;RemoteCan.c: 119: space_available = 1;
 17327  015278  824C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 17328  01527A                     i2l8906:
 17329                           
 17330                           ;RemoteCan.c: 120: }
 17331                           ;RemoteCan.c: 121: }
 17332                           ;RemoteCan.c: 123: if (id == 0b00000000010) {
 17333  01527A  0E02               	movlw	2
 17334  01527C  1812               	xorwf	_id,w,c	;volatile
 17335  01527E  1013               	iorwf	_id+1,w,c	;volatile
 17336  015280  1014               	iorwf	_id+2,w,c	;volatile
 17337  015282  1015               	iorwf	_id+3,w,c	;volatile
 17338  015284  B4D8               	btfsc	status,2,c
 17339                           
 17340                           ;RemoteCan.c: 124: if (RTR_Flag == 1) {
 17341  015286  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17342  015288  D025               	goto	i2l8920
 17343                           
 17344                           ;RemoteCan.c: 125: pr_time_4 = time_counter;
 17345  01528A  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 17346  01528E  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 17347  015292  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 17348  015296  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 17349                           
 17350                           ;RemoteCan.c: 126: data[0] = 0x03;
 17351  01529A  0E03               	movlw	3
 17352  01529C  6E2C               	movwf	_data,c
 17353                           
 17354                           ;RemoteCan.c: 127: _delay((unsigned long)((10)*(16000000/4000000.0)));
 17355  01529E  0E0D               	movlw	13
 17356  0152A0                     i2u1222_47:
 17357  0152A0  2EE8               	decfsz	wreg,f,c
 17358  0152A2  D7FE               	goto	i2u1222_47
 17359  0152A4  F000               	nop	
 17360  0152A6                     i2l8916:
 17361  0152A6  ECD0  F0AE         	call	i2_CANisTxReady	;wreg free
 17362  0152AA  06E8               	decf	wreg,f,c
 17363  0152AC  A4D8               	btfss	status,2,c
 17364  0152AE  D7FB               	goto	i2l8916
 17365                           
 17366                           ;RemoteCan.c: 129: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 17367  0152B0  0E02               	movlw	2
 17368  0152B2  6E3E               	movwf	i2CANsendMessage@identifier,c
 17369  0152B4  0E00               	movlw	0
 17370  0152B6  6E3F               	movwf	i2CANsendMessage@identifier+1,c
 17371  0152B8  0E00               	movlw	0
 17372  0152BA  6E40               	movwf	i2CANsendMessage@identifier+2,c
 17373  0152BC  0E00               	movlw	0
 17374  0152BE  6E41               	movwf	i2CANsendMessage@identifier+3,c
 17375  0152C0  0E2C               	movlw	low _data
 17376  0152C2  6E42               	movwf	i2CANsendMessage@data,c
 17377  0152C4  0E00               	movlw	high _data
 17378  0152C6  6E43               	movwf	i2CANsendMessage@data+1,c
 17379  0152C8  0E08               	movlw	8
 17380  0152CA  6E44               	movwf	i2CANsendMessage@dataLength,c
 17381  0152CC  0EBC               	movlw	188
 17382  0152CE  6E45               	movwf	i2CANsendMessage@flags,c
 17383  0152D0  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 17384  0152D4                     i2l8920:
 17385                           
 17386                           ;RemoteCan.c: 135: }
 17387                           ;RemoteCan.c: 136: }
 17388                           ;RemoteCan.c: 137: }
 17389                           ;RemoteCan.c: 138: LATDbits.LATD2 = 1;
 17390  0152D4  848C               	bsf	3980,2,c	;volatile
 17391                           
 17392                           ;RemoteCan.c: 139: LATDbits.LATD3 = 1;
 17393  0152D6  868C               	bsf	3980,3,c	;volatile
 17394                           
 17395                           ;RemoteCan.c: 140: PIR3bits.RXB1IF = 0;
 17396  0152D8  92A4               	bcf	4004,1,c	;volatile
 17397                           
 17398                           ;RemoteCan.c: 141: PIR3bits.RXB0IF = 0;
 17399  0152DA  90A4               	bcf	4004,0,c	;volatile
 17400  0152DC                     i2l766:
 17401  0152DC  C071  FFF5         	movff	??_ISR_alta+13,tablat
 17402  0152E0  C070  FFF8         	movff	??_ISR_alta+12,tblptru
 17403  0152E4  C06F  FFF7         	movff	??_ISR_alta+11,tblptrh
 17404  0152E8  C06E  FFF6         	movff	??_ISR_alta+10,tblptrl
 17405  0152EC  C06D  FFF4         	movff	??_ISR_alta+9,prodh
 17406  0152F0  C06C  FFF3         	movff	??_ISR_alta+8,prodl
 17407  0152F4  C06B  FFDA         	movff	??_ISR_alta+7,fsr2h
 17408  0152F8  C06A  FFD9         	movff	??_ISR_alta+6,fsr2l
 17409  0152FC  C069  FFE2         	movff	??_ISR_alta+5,fsr1h
 17410  015300  C068  FFE1         	movff	??_ISR_alta+4,fsr1l
 17411  015304  C067  FFEA         	movff	??_ISR_alta+3,fsr0h
 17412  015308  C066  FFE9         	movff	??_ISR_alta+2,fsr0l
 17413  01530C  C065  FFFB         	movff	??_ISR_alta+1,pclatu
 17414  015310  C064  FFFA         	movff	??_ISR_alta,pclath
 17415  015314  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17416  015316  0011               	retfie		f
 17417  015318                     __end_of_ISR_alta:
 17418                           	opt stack 0
 17419                           pclatu	equ	0xFFB
 17420                           pclath	equ	0xFFA
 17421                           tblptru	equ	0xFF8
 17422                           tblptrh	equ	0xFF7
 17423                           tblptrl	equ	0xFF6
 17424                           tablat	equ	0xFF5
 17425                           prodh	equ	0xFF4
 17426                           prodl	equ	0xFF3
 17427                           intcon	equ	0xFF2
 17428                           postinc0	equ	0xFEE
 17429                           fsr0h	equ	0xFEA
 17430                           fsr0l	equ	0xFE9
 17431                           wreg	equ	0xFE8
 17432                           indf1	equ	0xFE7
 17433                           fsr1h	equ	0xFE2
 17434                           fsr1l	equ	0xFE1
 17435                           bsr	equ	0xFE0
 17436                           indf2	equ	0xFDF
 17437                           postinc2	equ	0xFDE
 17438                           fsr2h	equ	0xFDA
 17439                           fsr2l	equ	0xFD9
 17440                           status	equ	0xFD8
 17441                           
 17442 ;; *************** function i2_CANsendMessage *****************
 17443 ;; Defined at:
 17444 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17445 ;; Parameters:    Size  Location     Type
 17446 ;;  identifier      4   17[COMRAM] unsigned long 
 17447 ;;  data            2   21[COMRAM] PTR unsigned char 
 17448 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 17449 ;;		 -> data(1), 
 17450 ;;  dataLength      1   23[COMRAM] unsigned char 
 17451 ;;  flags           1   24[COMRAM] enum E16909
 17452 ;; Auto vars:     Size  Location     Type
 17453 ;;  CANsendMessa    4    0[BANK0 ] unsigned long 
 17454 ;; Return value:  Size  Location     Type
 17455 ;;		None               void
 17456 ;; Registers used:
 17457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17458 ;; Tracked objects:
 17459 ;;		On entry : 0/0
 17460 ;;		On exit  : 0/0
 17461 ;;		Unchanged: 0/0
 17462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17463 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17464 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17466 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;Total ram usage:       16 bytes
 17468 ;; Hardware stack levels used:    1
 17469 ;; This function calls:
 17470 ;;		Nothing
 17471 ;; This function is called by:
 17472 ;;		_ISR_alta
 17473 ;; This function uses a non-reentrant model
 17474 ;;
 17475                           
 17476                           	psect	text49
 17477  011B26                     __ptext49:
 17478                           	opt stack 0
 17479  011B26                     i2_CANsendMessage:
 17480                           	opt stack 21
 17481                           
 17482                           ;inc\CANlib.h: 296: unsigned long tamp;
 17483                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17484                           
 17485                           ;incstack = 0
 17486  011B26  010F               	movlb	15	; () banked
 17487  011B28  B740               	btfsc	64,3,b	;volatile
 17488  011B2A  D122               	goto	i2l375
 17489                           
 17490                           ; BSR set to: 15
 17491                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17492  011B2C  C044  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 17493                           
 17494                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17495  011B30  AC45               	btfss	i2CANsendMessage@flags,6,c
 17496  011B32  D003               	goto	i2l376
 17497                           
 17498                           ; BSR set to: 15
 17499                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17500  011B34  010F               	movlb	15	; () banked
 17501  011B36  8D45               	bsf	69,6,b	;volatile
 17502  011B38  D002               	goto	i2l377
 17503  011B3A                     i2l376:
 17504                           
 17505                           ; BSR set to: 15
 17506                           ;inc\CANlib.h: 302: else
 17507                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17508  011B3A  010F               	movlb	15	; () banked
 17509  011B3C  9D45               	bcf	69,6,b	;volatile
 17510  011B3E                     i2l377:
 17511                           
 17512                           ; BSR set to: 15
 17513                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17514  011B3E  A645               	btfss	i2CANsendMessage@flags,3,c
 17515  011B40  D06D               	goto	i2l378
 17516                           
 17517                           ; BSR set to: 15
 17518                           ;inc\CANlib.h: 306: {
 17519                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17520  011B42  503E               	movf	i2CANsendMessage@identifier,w,c
 17521  011B44  0100               	movlb	0	; () banked
 17522  011B46  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17523  011B48  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17524  011B4A  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17525  011B4C  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17526                           
 17527                           ; BSR set to: 0
 17528                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17529  011B4E  C060  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17533  011B52  0E00               	movlw	0
 17534  011B54  143E               	andwf	i2CANsendMessage@identifier,w,c
 17535  011B56  0100               	movlb	0	; () banked
 17536  011B58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17537  011B5A  0EFF               	movlw	255
 17538  011B5C  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17539  011B5E  0100               	movlb	0	; () banked
 17540  011B60  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17541  011B62  0E00               	movlw	0
 17542  011B64  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17543  011B66  0100               	movlb	0	; () banked
 17544  011B68  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17545  011B6A  0E00               	movlw	0
 17546  011B6C  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17547  011B6E  0100               	movlb	0	; () banked
 17548  011B70  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17552  011B72  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17553  011B76  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17554  011B7A  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17555  011B7E  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17556  011B82  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17557  011B86  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17558  011B8A  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17559  011B8E  6A49               	clrf	??i2_CANsendMessage+3,c
 17560  011B90  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17561  011B94  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17562  011B98  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17563  011B9C  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17567  011BA0  C060  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17571  011BA4  0E00               	movlw	0
 17572  011BA6  010F               	movlb	15	; () banked
 17573  011BA8  6F42               	movwf	66,b	;volatile
 17574                           
 17575                           ; BSR set to: 15
 17576                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17577  011BAA  010F               	movlb	15	; () banked
 17578  011BAC  8742               	bsf	66,3,b	;volatile
 17579                           
 17580                           ; BSR set to: 15
 17581                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17582  011BAE  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 17583  011BB0  D002               	goto	i2l379
 17584                           
 17585                           ; BSR set to: 15
 17586                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17587  011BB2  010F               	movlb	15	; () banked
 17588  011BB4  8142               	bsf	66,0,b	;volatile
 17589  011BB6                     i2l379:
 17590                           
 17591                           ; BSR set to: 15
 17592                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17593  011BB6  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 17594  011BB8  D002               	goto	i2l380
 17595                           
 17596                           ; BSR set to: 15
 17597                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17598  011BBA  010F               	movlb	15	; () banked
 17599  011BBC  8342               	bsf	66,1,b	;volatile
 17600  011BBE                     i2l380:
 17601                           
 17602                           ; BSR set to: 15
 17603                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17604  011BBE  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 17605  011BC0  D002               	goto	i2l381
 17606                           
 17607                           ; BSR set to: 15
 17608                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17609  011BC2  010F               	movlb	15	; () banked
 17610  011BC4  8B42               	bsf	66,5,b	;volatile
 17611  011BC6                     i2l381:
 17612                           
 17613                           ; BSR set to: 15
 17614                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17615  011BC6  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 17616  011BC8  D002               	goto	i2l382
 17617                           
 17618                           ; BSR set to: 15
 17619                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17620  011BCA  010F               	movlb	15	; () banked
 17621  011BCC  8D42               	bsf	66,6,b	;volatile
 17622  011BCE                     i2l382:
 17623                           
 17624                           ; BSR set to: 15
 17625                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17626  011BCE  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 17627  011BD0  D002               	goto	i2l8624
 17628                           
 17629                           ; BSR set to: 15
 17630                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17631  011BD2  010F               	movlb	15	; () banked
 17632  011BD4  8F42               	bsf	66,7,b	;volatile
 17633  011BD6                     i2l8624:
 17634                           
 17635                           ; BSR set to: 15
 17636                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17637  011BD6  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17638  011BDA  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17639  011BDE  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17640  011BE2  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17641  011BE6  0E16               	movlw	22
 17642  011BE8  D005               	goto	i2u1143_40
 17643  011BEA                     i2u1143_45:
 17644  011BEA  90D8               	bcf	status,0,c
 17645  011BEC  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17646  011BEE  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17647  011BF0  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17648  011BF2  3246               	rrcf	??i2_CANsendMessage,f,c
 17649  011BF4                     i2u1143_40:
 17650  011BF4  2EE8               	decfsz	wreg,f,c
 17651  011BF6  D7F9               	goto	i2u1143_45
 17652  011BF8  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17653  011BFC  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17654  011C00  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17655  011C04  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17656                           
 17657                           ; BSR set to: 15
 17658                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17659  011C08  0100               	movlb	0	; () banked
 17660  011C0A  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 17661  011C0C  0100               	movlb	0	; () banked
 17662  011C0E  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17663  011C10  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17664  011C12  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17665  011C14  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17666                           
 17667                           ; BSR set to: 0
 17668                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17669  011C16  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17670                           
 17671                           ;inc\CANlib.h: 332: }
 17672  011C1A  D053               	goto	i2l8644
 17673  011C1C                     i2l378:
 17674                           
 17675                           ; BSR set to: 15
 17676                           ;inc\CANlib.h: 334: else
 17677                           ;inc\CANlib.h: 336: {
 17678                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17679  011C1C  010F               	movlb	15	; () banked
 17680  011C1E  9742               	bcf	66,3,b	;volatile
 17681                           
 17682                           ; BSR set to: 15
 17683                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17684  011C20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17685  011C24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17686  011C28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17687  011C2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17688  011C30  0E04               	movlw	4
 17689  011C32  D005               	goto	i2u1144_40
 17690  011C34                     i2u1144_45:
 17691  011C34  90D8               	bcf	status,0,c
 17692  011C36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17693  011C38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17694  011C3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17695  011C3C  3246               	rrcf	??i2_CANsendMessage,f,c
 17696  011C3E                     i2u1144_40:
 17697  011C3E  2EE8               	decfsz	wreg,f,c
 17698  011C40  D7F9               	goto	i2u1144_45
 17699  011C42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17700  011C46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17701  011C4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17702  011C4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17703                           
 17704                           ; BSR set to: 15
 17705                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17706  011C52  0100               	movlb	0	; () banked
 17707  011C54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 17708  011C56  0100               	movlb	0	; () banked
 17709  011C58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17710  011C5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17711  011C5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17712  011C5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17713                           
 17714                           ; BSR set to: 0
 17715                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17716  011C60  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17720  011C64  0E07               	movlw	7
 17721  011C66  143E               	andwf	i2CANsendMessage@identifier,w,c
 17722  011C68  0100               	movlb	0	; () banked
 17723  011C6A  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17724  011C6C  0E00               	movlw	0
 17725  011C6E  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17726  011C70  0100               	movlb	0	; () banked
 17727  011C72  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17728  011C74  0E00               	movlw	0
 17729  011C76  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17730  011C78  0100               	movlb	0	; () banked
 17731  011C7A  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17732  011C7C  0E00               	movlw	0
 17733  011C7E  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17734  011C80  0100               	movlb	0	; () banked
 17735  011C82  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17739  011C84  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17740  011C88  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17741  011C8C  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17742  011C90  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17743  011C94  0E05               	movlw	5
 17744  011C96                     i2u1145_45:
 17745  011C96  90D8               	bcf	status,0,c
 17746  011C98  3646               	rlcf	??i2_CANsendMessage,f,c
 17747  011C9A  3647               	rlcf	??i2_CANsendMessage+1,f,c
 17748  011C9C  3648               	rlcf	??i2_CANsendMessage+2,f,c
 17749  011C9E  3649               	rlcf	??i2_CANsendMessage+3,f,c
 17750  011CA0  2EE8               	decfsz	wreg,f,c
 17751  011CA2  D7F9               	goto	i2u1145_45
 17752  011CA4  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17753  011CA8  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17754  011CAC  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17755  011CB0  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17756                           
 17757                           ; BSR set to: 0
 17758                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17759  011CB4  010F               	movlb	15	; () banked
 17760  011CB6  5142               	movf	66,w,b	;volatile
 17761  011CB8  0B1F               	andlw	31
 17762  011CBA  010F               	movlb	15	; () banked
 17763  011CBC  6F42               	movwf	66,b	;volatile
 17764                           
 17765                           ; BSR set to: 15
 17766                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17767  011CBE  C060  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 17768  011CC2                     i2l8644:
 17769                           
 17770                           ;inc\CANlib.h: 347: }
 17771                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17772  011CC2  A045               	btfss	i2CANsendMessage@flags,0,c
 17773  011CC4  D003               	goto	i2l385
 17774                           
 17775                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17776  011CC6  010F               	movlb	15	; () banked
 17777  011CC8  8140               	bsf	64,0,b	;volatile
 17778  011CCA  D002               	goto	i2l386
 17779  011CCC                     i2l385:
 17780                           
 17781                           ;inc\CANlib.h: 351: else
 17782                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17783  011CCC  010F               	movlb	15	; () banked
 17784  011CCE  9140               	bcf	64,0,b	;volatile
 17785  011CD0                     i2l386:
 17786                           
 17787                           ; BSR set to: 15
 17788                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17789  011CD0  A245               	btfss	i2CANsendMessage@flags,1,c
 17790  011CD2  D003               	goto	i2l387
 17791                           
 17792                           ; BSR set to: 15
 17793                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17794  011CD4  010F               	movlb	15	; () banked
 17795  011CD6  8340               	bsf	64,1,b	;volatile
 17796  011CD8  D002               	goto	i2l8650
 17797  011CDA                     i2l387:
 17798                           
 17799                           ; BSR set to: 15
 17800                           ;inc\CANlib.h: 355: else
 17801                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17802  011CDA  010F               	movlb	15	; () banked
 17803  011CDC  9340               	bcf	64,1,b	;volatile
 17804  011CDE                     i2l8650:
 17805                           
 17806                           ; BSR set to: 15
 17807                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17808  011CDE  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17809  011CE2  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17810  011CE6  50DF               	movf	indf2,w,c
 17811  011CE8  010F               	movlb	15	; () banked
 17812  011CEA  6F46               	movwf	70,b	;volatile
 17813                           
 17814                           ; BSR set to: 15
 17815                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17816  011CEC  EE20 F001          	lfsr	2,1
 17817  011CF0  5042               	movf	i2CANsendMessage@data,w,c
 17818  011CF2  26D9               	addwf	fsr2l,f,c
 17819  011CF4  5043               	movf	i2CANsendMessage@data+1,w,c
 17820  011CF6  22DA               	addwfc	fsr2h,f,c
 17821  011CF8  50DF               	movf	indf2,w,c
 17822  011CFA  010F               	movlb	15	; () banked
 17823  011CFC  6F47               	movwf	71,b	;volatile
 17824                           
 17825                           ; BSR set to: 15
 17826                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17827  011CFE  EE20 F002          	lfsr	2,2
 17828  011D02  5042               	movf	i2CANsendMessage@data,w,c
 17829  011D04  26D9               	addwf	fsr2l,f,c
 17830  011D06  5043               	movf	i2CANsendMessage@data+1,w,c
 17831  011D08  22DA               	addwfc	fsr2h,f,c
 17832  011D0A  50DF               	movf	indf2,w,c
 17833  011D0C  010F               	movlb	15	; () banked
 17834  011D0E  6F48               	movwf	72,b	;volatile
 17835                           
 17836                           ; BSR set to: 15
 17837                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17838  011D10  EE20 F003          	lfsr	2,3
 17839  011D14  5042               	movf	i2CANsendMessage@data,w,c
 17840  011D16  26D9               	addwf	fsr2l,f,c
 17841  011D18  5043               	movf	i2CANsendMessage@data+1,w,c
 17842  011D1A  22DA               	addwfc	fsr2h,f,c
 17843  011D1C  50DF               	movf	indf2,w,c
 17844  011D1E  010F               	movlb	15	; () banked
 17845  011D20  6F49               	movwf	73,b	;volatile
 17846                           
 17847                           ; BSR set to: 15
 17848                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17849  011D22  EE20 F004          	lfsr	2,4
 17850  011D26  5042               	movf	i2CANsendMessage@data,w,c
 17851  011D28  26D9               	addwf	fsr2l,f,c
 17852  011D2A  5043               	movf	i2CANsendMessage@data+1,w,c
 17853  011D2C  22DA               	addwfc	fsr2h,f,c
 17854  011D2E  50DF               	movf	indf2,w,c
 17855  011D30  010F               	movlb	15	; () banked
 17856  011D32  6F4A               	movwf	74,b	;volatile
 17857                           
 17858                           ; BSR set to: 15
 17859                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17860  011D34  EE20 F005          	lfsr	2,5
 17861  011D38  5042               	movf	i2CANsendMessage@data,w,c
 17862  011D3A  26D9               	addwf	fsr2l,f,c
 17863  011D3C  5043               	movf	i2CANsendMessage@data+1,w,c
 17864  011D3E  22DA               	addwfc	fsr2h,f,c
 17865  011D40  50DF               	movf	indf2,w,c
 17866  011D42  010F               	movlb	15	; () banked
 17867  011D44  6F4B               	movwf	75,b	;volatile
 17868                           
 17869                           ; BSR set to: 15
 17870                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17871  011D46  EE20 F006          	lfsr	2,6
 17872  011D4A  5042               	movf	i2CANsendMessage@data,w,c
 17873  011D4C  26D9               	addwf	fsr2l,f,c
 17874  011D4E  5043               	movf	i2CANsendMessage@data+1,w,c
 17875  011D50  22DA               	addwfc	fsr2h,f,c
 17876  011D52  50DF               	movf	indf2,w,c
 17877  011D54  010F               	movlb	15	; () banked
 17878  011D56  6F4C               	movwf	76,b	;volatile
 17879                           
 17880                           ; BSR set to: 15
 17881                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17882  011D58  EE20 F007          	lfsr	2,7
 17883  011D5C  5042               	movf	i2CANsendMessage@data,w,c
 17884  011D5E  26D9               	addwf	fsr2l,f,c
 17885  011D60  5043               	movf	i2CANsendMessage@data+1,w,c
 17886  011D62  22DA               	addwfc	fsr2h,f,c
 17887  011D64  50DF               	movf	indf2,w,c
 17888  011D66  010F               	movlb	15	; () banked
 17889  011D68  6F4D               	movwf	77,b	;volatile
 17890                           
 17891                           ; BSR set to: 15
 17892                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17893  011D6A  010F               	movlb	15	; () banked
 17894  011D6C  8740               	bsf	64,3,b	;volatile
 17895                           
 17896                           ; BSR set to: 15
 17897                           ;inc\CANlib.h: 368: return;
 17898  011D6E  0012               	return	
 17899  011D70                     i2l375:
 17900                           
 17901                           ; BSR set to: 15
 17902                           ;inc\CANlib.h: 369: }
 17903                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17904  011D70  010F               	movlb	15	; () banked
 17905  011D72  B730               	btfsc	48,3,b	;volatile
 17906  011D74  D122               	goto	i2l390
 17907                           
 17908                           ; BSR set to: 15
 17909                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17910  011D76  C044  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 17911                           
 17912                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17913  011D7A  AC45               	btfss	i2CANsendMessage@flags,6,c
 17914  011D7C  D003               	goto	i2l391
 17915                           
 17916                           ; BSR set to: 15
 17917                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17918  011D7E  010F               	movlb	15	; () banked
 17919  011D80  8D35               	bsf	53,6,b	;volatile
 17920  011D82  D002               	goto	i2l392
 17921  011D84                     i2l391:
 17922                           
 17923                           ; BSR set to: 15
 17924                           ;inc\CANlib.h: 378: else
 17925                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17926  011D84  010F               	movlb	15	; () banked
 17927  011D86  9D35               	bcf	53,6,b	;volatile
 17928  011D88                     i2l392:
 17929                           
 17930                           ; BSR set to: 15
 17931                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17932  011D88  A645               	btfss	i2CANsendMessage@flags,3,c
 17933  011D8A  D06D               	goto	i2l393
 17934                           
 17935                           ; BSR set to: 15
 17936                           ;inc\CANlib.h: 382: {
 17937                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17938  011D8C  503E               	movf	i2CANsendMessage@identifier,w,c
 17939  011D8E  0100               	movlb	0	; () banked
 17940  011D90  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17941  011D92  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17942  011D94  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17943  011D96  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17947  011D98  C060  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17951  011D9C  0E00               	movlw	0
 17952  011D9E  143E               	andwf	i2CANsendMessage@identifier,w,c
 17953  011DA0  0100               	movlb	0	; () banked
 17954  011DA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17955  011DA4  0EFF               	movlw	255
 17956  011DA6  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17957  011DA8  0100               	movlb	0	; () banked
 17958  011DAA  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17959  011DAC  0E00               	movlw	0
 17960  011DAE  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17961  011DB0  0100               	movlb	0	; () banked
 17962  011DB2  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17963  011DB4  0E00               	movlw	0
 17964  011DB6  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17965  011DB8  0100               	movlb	0	; () banked
 17966  011DBA  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17967                           
 17968                           ; BSR set to: 0
 17969                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17970  011DBC  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17971  011DC0  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17972  011DC4  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17973  011DC8  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17974  011DCC  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17975  011DD0  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17976  011DD4  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17977  011DD8  6A49               	clrf	??i2_CANsendMessage+3,c
 17978  011DDA  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17979  011DDE  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17980  011DE2  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17981  011DE6  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17982                           
 17983                           ; BSR set to: 0
 17984                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17985  011DEA  C060  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 17986                           
 17987                           ; BSR set to: 0
 17988                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17989  011DEE  0E00               	movlw	0
 17990  011DF0  010F               	movlb	15	; () banked
 17991  011DF2  6F32               	movwf	50,b	;volatile
 17992                           
 17993                           ; BSR set to: 15
 17994                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17995  011DF4  010F               	movlb	15	; () banked
 17996  011DF6  8732               	bsf	50,3,b	;volatile
 17997                           
 17998                           ; BSR set to: 15
 17999                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18000  011DF8  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 18001  011DFA  D002               	goto	i2l394
 18002                           
 18003                           ; BSR set to: 15
 18004                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18005  011DFC  010F               	movlb	15	; () banked
 18006  011DFE  8132               	bsf	50,0,b	;volatile
 18007  011E00                     i2l394:
 18008                           
 18009                           ; BSR set to: 15
 18010                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18011  011E00  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 18012  011E02  D002               	goto	i2l395
 18013                           
 18014                           ; BSR set to: 15
 18015                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18016  011E04  010F               	movlb	15	; () banked
 18017  011E06  8332               	bsf	50,1,b	;volatile
 18018  011E08                     i2l395:
 18019                           
 18020                           ; BSR set to: 15
 18021                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18022  011E08  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 18023  011E0A  D002               	goto	i2l396
 18024                           
 18025                           ; BSR set to: 15
 18026                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18027  011E0C  010F               	movlb	15	; () banked
 18028  011E0E  8B32               	bsf	50,5,b	;volatile
 18029  011E10                     i2l396:
 18030                           
 18031                           ; BSR set to: 15
 18032                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18033  011E10  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 18034  011E12  D002               	goto	i2l397
 18035                           
 18036                           ; BSR set to: 15
 18037                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18038  011E14  010F               	movlb	15	; () banked
 18039  011E16  8D32               	bsf	50,6,b	;volatile
 18040  011E18                     i2l397:
 18041                           
 18042                           ; BSR set to: 15
 18043                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18044  011E18  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 18045  011E1A  D002               	goto	i2l8700
 18046                           
 18047                           ; BSR set to: 15
 18048                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18049  011E1C  010F               	movlb	15	; () banked
 18050  011E1E  8F32               	bsf	50,7,b	;volatile
 18051  011E20                     i2l8700:
 18052                           
 18053                           ; BSR set to: 15
 18054                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18055  011E20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18056  011E24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18057  011E28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18058  011E2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18059  011E30  0E16               	movlw	22
 18060  011E32  D005               	goto	i2u1156_40
 18061  011E34                     i2u1156_45:
 18062  011E34  90D8               	bcf	status,0,c
 18063  011E36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18064  011E38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18065  011E3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18066  011E3C  3246               	rrcf	??i2_CANsendMessage,f,c
 18067  011E3E                     i2u1156_40:
 18068  011E3E  2EE8               	decfsz	wreg,f,c
 18069  011E40  D7F9               	goto	i2u1156_45
 18070  011E42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18071  011E46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18072  011E4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18073  011E4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18074                           
 18075                           ; BSR set to: 15
 18076                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18077  011E52  0100               	movlb	0	; () banked
 18078  011E54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18079  011E56  0100               	movlb	0	; () banked
 18080  011E58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18081  011E5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18082  011E5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18083  011E5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18087  011E60  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18088                           
 18089                           ;inc\CANlib.h: 407: }
 18090  011E64  D053               	goto	i2l8720
 18091  011E66                     i2l393:
 18092                           
 18093                           ; BSR set to: 15
 18094                           ;inc\CANlib.h: 409: else
 18095                           ;inc\CANlib.h: 411: {
 18096                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18097  011E66  010F               	movlb	15	; () banked
 18098  011E68  9732               	bcf	50,3,b	;volatile
 18099                           
 18100                           ; BSR set to: 15
 18101                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18102  011E6A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18103  011E6E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18104  011E72  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18105  011E76  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18106  011E7A  0E04               	movlw	4
 18107  011E7C  D005               	goto	i2u1157_40
 18108  011E7E                     i2u1157_45:
 18109  011E7E  90D8               	bcf	status,0,c
 18110  011E80  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18111  011E82  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18112  011E84  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18113  011E86  3246               	rrcf	??i2_CANsendMessage,f,c
 18114  011E88                     i2u1157_40:
 18115  011E88  2EE8               	decfsz	wreg,f,c
 18116  011E8A  D7F9               	goto	i2u1157_45
 18117  011E8C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18118  011E90  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18119  011E94  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18120  011E98  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18121                           
 18122                           ; BSR set to: 15
 18123                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18124  011E9C  0100               	movlb	0	; () banked
 18125  011E9E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18126  011EA0  0100               	movlb	0	; () banked
 18127  011EA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18128  011EA4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18129  011EA6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18130  011EA8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18134  011EAA  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18138  011EAE  0E07               	movlw	7
 18139  011EB0  143E               	andwf	i2CANsendMessage@identifier,w,c
 18140  011EB2  0100               	movlb	0	; () banked
 18141  011EB4  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18142  011EB6  0E00               	movlw	0
 18143  011EB8  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18144  011EBA  0100               	movlb	0	; () banked
 18145  011EBC  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18146  011EBE  0E00               	movlw	0
 18147  011EC0  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18148  011EC2  0100               	movlb	0	; () banked
 18149  011EC4  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18150  011EC6  0E00               	movlw	0
 18151  011EC8  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18152  011ECA  0100               	movlb	0	; () banked
 18153  011ECC  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18154                           
 18155                           ; BSR set to: 0
 18156                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18157  011ECE  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18158  011ED2  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18159  011ED6  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18160  011EDA  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18161  011EDE  0E05               	movlw	5
 18162  011EE0                     i2u1158_45:
 18163  011EE0  90D8               	bcf	status,0,c
 18164  011EE2  3646               	rlcf	??i2_CANsendMessage,f,c
 18165  011EE4  3647               	rlcf	??i2_CANsendMessage+1,f,c
 18166  011EE6  3648               	rlcf	??i2_CANsendMessage+2,f,c
 18167  011EE8  3649               	rlcf	??i2_CANsendMessage+3,f,c
 18168  011EEA  2EE8               	decfsz	wreg,f,c
 18169  011EEC  D7F9               	goto	i2u1158_45
 18170  011EEE  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18171  011EF2  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18172  011EF6  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18173  011EFA  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18177  011EFE  010F               	movlb	15	; () banked
 18178  011F00  5132               	movf	50,w,b	;volatile
 18179  011F02  0B1F               	andlw	31
 18180  011F04  010F               	movlb	15	; () banked
 18181  011F06  6F32               	movwf	50,b	;volatile
 18182                           
 18183                           ; BSR set to: 15
 18184                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18185  011F08  C060  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 18186  011F0C                     i2l8720:
 18187                           
 18188                           ;inc\CANlib.h: 422: }
 18189                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18190  011F0C  A045               	btfss	i2CANsendMessage@flags,0,c
 18191  011F0E  D003               	goto	i2l400
 18192                           
 18193                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18194  011F10  010F               	movlb	15	; () banked
 18195  011F12  8130               	bsf	48,0,b	;volatile
 18196  011F14  D002               	goto	i2l401
 18197  011F16                     i2l400:
 18198                           
 18199                           ;inc\CANlib.h: 426: else
 18200                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18201  011F16  010F               	movlb	15	; () banked
 18202  011F18  9130               	bcf	48,0,b	;volatile
 18203  011F1A                     i2l401:
 18204                           
 18205                           ; BSR set to: 15
 18206                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18207  011F1A  A245               	btfss	i2CANsendMessage@flags,1,c
 18208  011F1C  D003               	goto	i2l402
 18209                           
 18210                           ; BSR set to: 15
 18211                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18212  011F1E  010F               	movlb	15	; () banked
 18213  011F20  8330               	bsf	48,1,b	;volatile
 18214  011F22  D002               	goto	i2l8726
 18215  011F24                     i2l402:
 18216                           
 18217                           ; BSR set to: 15
 18218                           ;inc\CANlib.h: 430: else
 18219                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18220  011F24  010F               	movlb	15	; () banked
 18221  011F26  9330               	bcf	48,1,b	;volatile
 18222  011F28                     i2l8726:
 18223                           
 18224                           ; BSR set to: 15
 18225                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18226  011F28  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18227  011F2C  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18228  011F30  50DF               	movf	indf2,w,c
 18229  011F32  010F               	movlb	15	; () banked
 18230  011F34  6F36               	movwf	54,b	;volatile
 18231                           
 18232                           ; BSR set to: 15
 18233                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18234  011F36  EE20 F001          	lfsr	2,1
 18235  011F3A  5042               	movf	i2CANsendMessage@data,w,c
 18236  011F3C  26D9               	addwf	fsr2l,f,c
 18237  011F3E  5043               	movf	i2CANsendMessage@data+1,w,c
 18238  011F40  22DA               	addwfc	fsr2h,f,c
 18239  011F42  50DF               	movf	indf2,w,c
 18240  011F44  010F               	movlb	15	; () banked
 18241  011F46  6F37               	movwf	55,b	;volatile
 18242                           
 18243                           ; BSR set to: 15
 18244                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18245  011F48  EE20 F002          	lfsr	2,2
 18246  011F4C  5042               	movf	i2CANsendMessage@data,w,c
 18247  011F4E  26D9               	addwf	fsr2l,f,c
 18248  011F50  5043               	movf	i2CANsendMessage@data+1,w,c
 18249  011F52  22DA               	addwfc	fsr2h,f,c
 18250  011F54  50DF               	movf	indf2,w,c
 18251  011F56  010F               	movlb	15	; () banked
 18252  011F58  6F38               	movwf	56,b	;volatile
 18253                           
 18254                           ; BSR set to: 15
 18255                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18256  011F5A  EE20 F003          	lfsr	2,3
 18257  011F5E  5042               	movf	i2CANsendMessage@data,w,c
 18258  011F60  26D9               	addwf	fsr2l,f,c
 18259  011F62  5043               	movf	i2CANsendMessage@data+1,w,c
 18260  011F64  22DA               	addwfc	fsr2h,f,c
 18261  011F66  50DF               	movf	indf2,w,c
 18262  011F68  010F               	movlb	15	; () banked
 18263  011F6A  6F39               	movwf	57,b	;volatile
 18264                           
 18265                           ; BSR set to: 15
 18266                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18267  011F6C  EE20 F004          	lfsr	2,4
 18268  011F70  5042               	movf	i2CANsendMessage@data,w,c
 18269  011F72  26D9               	addwf	fsr2l,f,c
 18270  011F74  5043               	movf	i2CANsendMessage@data+1,w,c
 18271  011F76  22DA               	addwfc	fsr2h,f,c
 18272  011F78  50DF               	movf	indf2,w,c
 18273  011F7A  010F               	movlb	15	; () banked
 18274  011F7C  6F3A               	movwf	58,b	;volatile
 18275                           
 18276                           ; BSR set to: 15
 18277                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18278  011F7E  EE20 F005          	lfsr	2,5
 18279  011F82  5042               	movf	i2CANsendMessage@data,w,c
 18280  011F84  26D9               	addwf	fsr2l,f,c
 18281  011F86  5043               	movf	i2CANsendMessage@data+1,w,c
 18282  011F88  22DA               	addwfc	fsr2h,f,c
 18283  011F8A  50DF               	movf	indf2,w,c
 18284  011F8C  010F               	movlb	15	; () banked
 18285  011F8E  6F3B               	movwf	59,b	;volatile
 18286                           
 18287                           ; BSR set to: 15
 18288                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18289  011F90  EE20 F006          	lfsr	2,6
 18290  011F94  5042               	movf	i2CANsendMessage@data,w,c
 18291  011F96  26D9               	addwf	fsr2l,f,c
 18292  011F98  5043               	movf	i2CANsendMessage@data+1,w,c
 18293  011F9A  22DA               	addwfc	fsr2h,f,c
 18294  011F9C  50DF               	movf	indf2,w,c
 18295  011F9E  010F               	movlb	15	; () banked
 18296  011FA0  6F3C               	movwf	60,b	;volatile
 18297                           
 18298                           ; BSR set to: 15
 18299                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18300  011FA2  EE20 F007          	lfsr	2,7
 18301  011FA6  5042               	movf	i2CANsendMessage@data,w,c
 18302  011FA8  26D9               	addwf	fsr2l,f,c
 18303  011FAA  5043               	movf	i2CANsendMessage@data+1,w,c
 18304  011FAC  22DA               	addwfc	fsr2h,f,c
 18305  011FAE  50DF               	movf	indf2,w,c
 18306  011FB0  010F               	movlb	15	; () banked
 18307  011FB2  6F3D               	movwf	61,b	;volatile
 18308                           
 18309                           ; BSR set to: 15
 18310                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18311  011FB4  010F               	movlb	15	; () banked
 18312  011FB6  8730               	bsf	48,3,b	;volatile
 18313                           
 18314                           ; BSR set to: 15
 18315                           ;inc\CANlib.h: 444: return;
 18316  011FB8  0012               	return	
 18317  011FBA                     i2l390:
 18318                           
 18319                           ; BSR set to: 15
 18320                           ;inc\CANlib.h: 445: }
 18321                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18322  011FBA  010F               	movlb	15	; () banked
 18323  011FBC  B720               	btfsc	32,3,b	;volatile
 18324  011FBE  0012               	return	
 18325                           
 18326                           ; BSR set to: 15
 18327                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18328  011FC0  C044  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 18329                           
 18330                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18331  011FC4  AC45               	btfss	i2CANsendMessage@flags,6,c
 18332  011FC6  D003               	goto	i2l405
 18333                           
 18334                           ; BSR set to: 15
 18335                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18336  011FC8  010F               	movlb	15	; () banked
 18337  011FCA  8D25               	bsf	37,6,b	;volatile
 18338  011FCC  D002               	goto	i2l406
 18339  011FCE                     i2l405:
 18340                           
 18341                           ; BSR set to: 15
 18342                           ;inc\CANlib.h: 454: else
 18343                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18344  011FCE  010F               	movlb	15	; () banked
 18345  011FD0  9D25               	bcf	37,6,b	;volatile
 18346  011FD2                     i2l406:
 18347                           
 18348                           ; BSR set to: 15
 18349                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18350  011FD2  A645               	btfss	i2CANsendMessage@flags,3,c
 18351  011FD4  D06D               	goto	i2l407
 18352                           
 18353                           ; BSR set to: 15
 18354                           ;inc\CANlib.h: 458: {
 18355                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18356  011FD6  503E               	movf	i2CANsendMessage@identifier,w,c
 18357  011FD8  0100               	movlb	0	; () banked
 18358  011FDA  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18359  011FDC  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18360  011FDE  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18361  011FE0  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18365  011FE2  C060  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18369  011FE6  0E00               	movlw	0
 18370  011FE8  143E               	andwf	i2CANsendMessage@identifier,w,c
 18371  011FEA  0100               	movlb	0	; () banked
 18372  011FEC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18373  011FEE  0EFF               	movlw	255
 18374  011FF0  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18375  011FF2  0100               	movlb	0	; () banked
 18376  011FF4  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18377  011FF6  0E00               	movlw	0
 18378  011FF8  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18379  011FFA  0100               	movlb	0	; () banked
 18380  011FFC  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18381  011FFE  0E00               	movlw	0
 18382  012000  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18383  012002  0100               	movlb	0	; () banked
 18384  012004  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18388  012006  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18389  01200A  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18390  01200E  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18391  012012  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18392  012016  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18393  01201A  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18394  01201E  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18395  012022  6A49               	clrf	??i2_CANsendMessage+3,c
 18396  012024  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18397  012028  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18398  01202C  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18399  012030  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18400                           
 18401                           ; BSR set to: 0
 18402                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18403  012034  C060  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 18404                           
 18405                           ; BSR set to: 0
 18406                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18407  012038  0E00               	movlw	0
 18408  01203A  010F               	movlb	15	; () banked
 18409  01203C  6F22               	movwf	34,b	;volatile
 18410                           
 18411                           ; BSR set to: 15
 18412                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18413  01203E  010F               	movlb	15	; () banked
 18414  012040  8722               	bsf	34,3,b	;volatile
 18415                           
 18416                           ; BSR set to: 15
 18417                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18418  012042  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 18419  012044  D002               	goto	i2l408
 18420                           
 18421                           ; BSR set to: 15
 18422                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18423  012046  010F               	movlb	15	; () banked
 18424  012048  8122               	bsf	34,0,b	;volatile
 18425  01204A                     i2l408:
 18426                           
 18427                           ; BSR set to: 15
 18428                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18429  01204A  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 18430  01204C  D002               	goto	i2l409
 18431                           
 18432                           ; BSR set to: 15
 18433                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18434  01204E  010F               	movlb	15	; () banked
 18435  012050  8322               	bsf	34,1,b	;volatile
 18436  012052                     i2l409:
 18437                           
 18438                           ; BSR set to: 15
 18439                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18440  012052  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 18441  012054  D002               	goto	i2l410
 18442                           
 18443                           ; BSR set to: 15
 18444                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18445  012056  010F               	movlb	15	; () banked
 18446  012058  8B22               	bsf	34,5,b	;volatile
 18447  01205A                     i2l410:
 18448                           
 18449                           ; BSR set to: 15
 18450                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18451  01205A  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 18452  01205C  D002               	goto	i2l411
 18453                           
 18454                           ; BSR set to: 15
 18455                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18456  01205E  010F               	movlb	15	; () banked
 18457  012060  8D22               	bsf	34,6,b	;volatile
 18458  012062                     i2l411:
 18459                           
 18460                           ; BSR set to: 15
 18461                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18462  012062  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 18463  012064  D002               	goto	i2l8776
 18464                           
 18465                           ; BSR set to: 15
 18466                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18467  012066  010F               	movlb	15	; () banked
 18468  012068  8F22               	bsf	34,7,b	;volatile
 18469  01206A                     i2l8776:
 18470                           
 18471                           ; BSR set to: 15
 18472                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18473  01206A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18474  01206E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18475  012072  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18476  012076  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18477  01207A  0E16               	movlw	22
 18478  01207C  D005               	goto	i2u1169_40
 18479  01207E                     i2u1169_45:
 18480  01207E  90D8               	bcf	status,0,c
 18481  012080  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18482  012082  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18483  012084  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18484  012086  3246               	rrcf	??i2_CANsendMessage,f,c
 18485  012088                     i2u1169_40:
 18486  012088  2EE8               	decfsz	wreg,f,c
 18487  01208A  D7F9               	goto	i2u1169_45
 18488  01208C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18489  012090  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18490  012094  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18491  012098  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18492                           
 18493                           ; BSR set to: 15
 18494                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18495  01209C  0100               	movlb	0	; () banked
 18496  01209E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18497  0120A0  0100               	movlb	0	; () banked
 18498  0120A2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18499  0120A4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18500  0120A6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18501  0120A8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18505  0120AA  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18506                           
 18507                           ;inc\CANlib.h: 483: }
 18508  0120AE  D053               	goto	i2l8796
 18509  0120B0                     i2l407:
 18510                           
 18511                           ; BSR set to: 15
 18512                           ;inc\CANlib.h: 485: else
 18513                           ;inc\CANlib.h: 487: {
 18514                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18515  0120B0  010F               	movlb	15	; () banked
 18516  0120B2  9722               	bcf	34,3,b	;volatile
 18517                           
 18518                           ; BSR set to: 15
 18519                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18520  0120B4  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18521  0120B8  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18522  0120BC  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18523  0120C0  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18524  0120C4  0E04               	movlw	4
 18525  0120C6  D005               	goto	i2u1170_40
 18526  0120C8                     i2u1170_45:
 18527  0120C8  90D8               	bcf	status,0,c
 18528  0120CA  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18529  0120CC  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18530  0120CE  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18531  0120D0  3246               	rrcf	??i2_CANsendMessage,f,c
 18532  0120D2                     i2u1170_40:
 18533  0120D2  2EE8               	decfsz	wreg,f,c
 18534  0120D4  D7F9               	goto	i2u1170_45
 18535  0120D6  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18536  0120DA  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18537  0120DE  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18538  0120E2  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18539                           
 18540                           ; BSR set to: 15
 18541                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18542  0120E6  0100               	movlb	0	; () banked
 18543  0120E8  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18544  0120EA  0100               	movlb	0	; () banked
 18545  0120EC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18546  0120EE  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18547  0120F0  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18548  0120F2  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18549                           
 18550                           ; BSR set to: 0
 18551                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18552  0120F4  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18556  0120F8  0E07               	movlw	7
 18557  0120FA  143E               	andwf	i2CANsendMessage@identifier,w,c
 18558  0120FC  0100               	movlb	0	; () banked
 18559  0120FE  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18560  012100  0E00               	movlw	0
 18561  012102  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18562  012104  0100               	movlb	0	; () banked
 18563  012106  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18564  012108  0E00               	movlw	0
 18565  01210A  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18566  01210C  0100               	movlb	0	; () banked
 18567  01210E  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18568  012110  0E00               	movlw	0
 18569  012112  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18570  012114  0100               	movlb	0	; () banked
 18571  012116  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18575  012118  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18576  01211C  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18577  012120  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18578  012124  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18579  012128  0E05               	movlw	5
 18580  01212A                     i2u1171_45:
 18581  01212A  90D8               	bcf	status,0,c
 18582  01212C  3646               	rlcf	??i2_CANsendMessage,f,c
 18583  01212E  3647               	rlcf	??i2_CANsendMessage+1,f,c
 18584  012130  3648               	rlcf	??i2_CANsendMessage+2,f,c
 18585  012132  3649               	rlcf	??i2_CANsendMessage+3,f,c
 18586  012134  2EE8               	decfsz	wreg,f,c
 18587  012136  D7F9               	goto	i2u1171_45
 18588  012138  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18589  01213C  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18590  012140  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18591  012144  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18592                           
 18593                           ; BSR set to: 0
 18594                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18595  012148  010F               	movlb	15	; () banked
 18596  01214A  5122               	movf	34,w,b	;volatile
 18597  01214C  0B1F               	andlw	31
 18598  01214E  010F               	movlb	15	; () banked
 18599  012150  6F22               	movwf	34,b	;volatile
 18600                           
 18601                           ; BSR set to: 15
 18602                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18603  012152  C060  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 18604  012156                     i2l8796:
 18605                           
 18606                           ;inc\CANlib.h: 498: }
 18607                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18608  012156  A045               	btfss	i2CANsendMessage@flags,0,c
 18609  012158  D003               	goto	i2l414
 18610                           
 18611                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18612  01215A  010F               	movlb	15	; () banked
 18613  01215C  8120               	bsf	32,0,b	;volatile
 18614  01215E  D002               	goto	i2l415
 18615  012160                     i2l414:
 18616                           
 18617                           ;inc\CANlib.h: 502: else
 18618                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18619  012160  010F               	movlb	15	; () banked
 18620  012162  9120               	bcf	32,0,b	;volatile
 18621  012164                     i2l415:
 18622                           
 18623                           ; BSR set to: 15
 18624                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18625  012164  A245               	btfss	i2CANsendMessage@flags,1,c
 18626  012166  D003               	goto	i2l416
 18627                           
 18628                           ; BSR set to: 15
 18629                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18630  012168  010F               	movlb	15	; () banked
 18631  01216A  8320               	bsf	32,1,b	;volatile
 18632  01216C  D002               	goto	i2l8802
 18633  01216E                     i2l416:
 18634                           
 18635                           ; BSR set to: 15
 18636                           ;inc\CANlib.h: 506: else
 18637                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18638  01216E  010F               	movlb	15	; () banked
 18639  012170  9320               	bcf	32,1,b	;volatile
 18640  012172                     i2l8802:
 18641                           
 18642                           ; BSR set to: 15
 18643                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18644  012172  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18645  012176  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18646  01217A  50DF               	movf	indf2,w,c
 18647  01217C  010F               	movlb	15	; () banked
 18648  01217E  6F26               	movwf	38,b	;volatile
 18649                           
 18650                           ; BSR set to: 15
 18651                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18652  012180  EE20 F001          	lfsr	2,1
 18653  012184  5042               	movf	i2CANsendMessage@data,w,c
 18654  012186  26D9               	addwf	fsr2l,f,c
 18655  012188  5043               	movf	i2CANsendMessage@data+1,w,c
 18656  01218A  22DA               	addwfc	fsr2h,f,c
 18657  01218C  50DF               	movf	indf2,w,c
 18658  01218E  010F               	movlb	15	; () banked
 18659  012190  6F27               	movwf	39,b	;volatile
 18660                           
 18661                           ; BSR set to: 15
 18662                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18663  012192  EE20 F002          	lfsr	2,2
 18664  012196  5042               	movf	i2CANsendMessage@data,w,c
 18665  012198  26D9               	addwf	fsr2l,f,c
 18666  01219A  5043               	movf	i2CANsendMessage@data+1,w,c
 18667  01219C  22DA               	addwfc	fsr2h,f,c
 18668  01219E  50DF               	movf	indf2,w,c
 18669  0121A0  010F               	movlb	15	; () banked
 18670  0121A2  6F28               	movwf	40,b	;volatile
 18671                           
 18672                           ; BSR set to: 15
 18673                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18674  0121A4  EE20 F003          	lfsr	2,3
 18675  0121A8  5042               	movf	i2CANsendMessage@data,w,c
 18676  0121AA  26D9               	addwf	fsr2l,f,c
 18677  0121AC  5043               	movf	i2CANsendMessage@data+1,w,c
 18678  0121AE  22DA               	addwfc	fsr2h,f,c
 18679  0121B0  50DF               	movf	indf2,w,c
 18680  0121B2  010F               	movlb	15	; () banked
 18681  0121B4  6F29               	movwf	41,b	;volatile
 18682                           
 18683                           ; BSR set to: 15
 18684                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18685  0121B6  EE20 F004          	lfsr	2,4
 18686  0121BA  5042               	movf	i2CANsendMessage@data,w,c
 18687  0121BC  26D9               	addwf	fsr2l,f,c
 18688  0121BE  5043               	movf	i2CANsendMessage@data+1,w,c
 18689  0121C0  22DA               	addwfc	fsr2h,f,c
 18690  0121C2  50DF               	movf	indf2,w,c
 18691  0121C4  010F               	movlb	15	; () banked
 18692  0121C6  6F2A               	movwf	42,b	;volatile
 18693                           
 18694                           ; BSR set to: 15
 18695                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18696  0121C8  EE20 F005          	lfsr	2,5
 18697  0121CC  5042               	movf	i2CANsendMessage@data,w,c
 18698  0121CE  26D9               	addwf	fsr2l,f,c
 18699  0121D0  5043               	movf	i2CANsendMessage@data+1,w,c
 18700  0121D2  22DA               	addwfc	fsr2h,f,c
 18701  0121D4  50DF               	movf	indf2,w,c
 18702  0121D6  010F               	movlb	15	; () banked
 18703  0121D8  6F2B               	movwf	43,b	;volatile
 18704                           
 18705                           ; BSR set to: 15
 18706                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18707  0121DA  EE20 F006          	lfsr	2,6
 18708  0121DE  5042               	movf	i2CANsendMessage@data,w,c
 18709  0121E0  26D9               	addwf	fsr2l,f,c
 18710  0121E2  5043               	movf	i2CANsendMessage@data+1,w,c
 18711  0121E4  22DA               	addwfc	fsr2h,f,c
 18712  0121E6  50DF               	movf	indf2,w,c
 18713  0121E8  010F               	movlb	15	; () banked
 18714  0121EA  6F2C               	movwf	44,b	;volatile
 18715                           
 18716                           ; BSR set to: 15
 18717                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18718  0121EC  EE20 F007          	lfsr	2,7
 18719  0121F0  5042               	movf	i2CANsendMessage@data,w,c
 18720  0121F2  26D9               	addwf	fsr2l,f,c
 18721  0121F4  5043               	movf	i2CANsendMessage@data+1,w,c
 18722  0121F6  22DA               	addwfc	fsr2h,f,c
 18723  0121F8  50DF               	movf	indf2,w,c
 18724  0121FA  010F               	movlb	15	; () banked
 18725  0121FC  6F2D               	movwf	45,b	;volatile
 18726                           
 18727                           ; BSR set to: 15
 18728                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18729  0121FE  010F               	movlb	15	; () banked
 18730  012200  8720               	bsf	32,3,b	;volatile
 18731                           
 18732                           ; BSR set to: 15
 18733                           ;inc\CANlib.h: 520: return;
 18734  012202  0012               	return	
 18735  012204                     __end_ofi2_CANsendMessage:
 18736                           	opt stack 0
 18737                           pclatu	equ	0xFFB
 18738                           pclath	equ	0xFFA
 18739                           tblptru	equ	0xFF8
 18740                           tblptrh	equ	0xFF7
 18741                           tblptrl	equ	0xFF6
 18742                           tablat	equ	0xFF5
 18743                           prodh	equ	0xFF4
 18744                           prodl	equ	0xFF3
 18745                           intcon	equ	0xFF2
 18746                           postinc0	equ	0xFEE
 18747                           fsr0h	equ	0xFEA
 18748                           fsr0l	equ	0xFE9
 18749                           wreg	equ	0xFE8
 18750                           indf1	equ	0xFE7
 18751                           fsr1h	equ	0xFE2
 18752                           fsr1l	equ	0xFE1
 18753                           bsr	equ	0xFE0
 18754                           indf2	equ	0xFDF
 18755                           postinc2	equ	0xFDE
 18756                           fsr2h	equ	0xFDA
 18757                           fsr2l	equ	0xFD9
 18758                           status	equ	0xFD8
 18759                           
 18760 ;; *************** function i2_CANisTxReady *****************
 18761 ;; Defined at:
 18762 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18763 ;; Parameters:    Size  Location     Type
 18764 ;;		None
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;		None
 18767 ;; Return value:  Size  Location     Type
 18768 ;;                  1    wreg      unsigned char 
 18769 ;; Registers used:
 18770 ;;		wreg, status,2
 18771 ;; Tracked objects:
 18772 ;;		On entry : 0/0
 18773 ;;		On exit  : 0/0
 18774 ;;		Unchanged: 0/0
 18775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18780 ;;Total ram usage:        1 bytes
 18781 ;; Hardware stack levels used:    1
 18782 ;; This function calls:
 18783 ;;		Nothing
 18784 ;; This function is called by:
 18785 ;;		_ISR_alta
 18786 ;; This function uses a non-reentrant model
 18787 ;;
 18788                           
 18789                           	psect	text50
 18790  015DA0                     __ptext50:
 18791                           	opt stack 0
 18792  015DA0                     i2_CANisTxReady:
 18793                           	opt stack 21
 18794                           
 18795                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18796                           
 18797                           ; BSR set to: 15
 18798                           ;incstack = 0
 18799  015DA0  0E01               	movlw	1
 18800  015DA2  6E3E               	movwf	i2_CANisTxReady$3235,c
 18801  015DA4  010F               	movlb	15	; () banked
 18802  015DA6  A740               	btfss	64,3,b	;volatile
 18803  015DA8  D008               	goto	i2l568
 18804                           
 18805                           ; BSR set to: 15
 18806  015DAA  010F               	movlb	15	; () banked
 18807  015DAC  A730               	btfss	48,3,b	;volatile
 18808  015DAE  D005               	goto	i2l568
 18809                           
 18810                           ; BSR set to: 15
 18811  015DB0  010F               	movlb	15	; () banked
 18812  015DB2  A720               	btfss	32,3,b	;volatile
 18813  015DB4  D002               	goto	i2l568
 18814                           
 18815                           ; BSR set to: 15
 18816  015DB6  0E00               	movlw	0
 18817  015DB8  6E3E               	movwf	i2_CANisTxReady$3235,c
 18818  015DBA                     i2l568:
 18819                           
 18820                           ; BSR set to: 15
 18821  015DBA  503E               	movf	i2_CANisTxReady$3235,w,c
 18822  015DBC  0012               	return	
 18823  015DBE                     __end_ofi2_CANisTxReady:
 18824                           	opt stack 0
 18825                           pclatu	equ	0xFFB
 18826                           pclath	equ	0xFFA
 18827                           tblptru	equ	0xFF8
 18828                           tblptrh	equ	0xFF7
 18829                           tblptrl	equ	0xFF6
 18830                           tablat	equ	0xFF5
 18831                           prodh	equ	0xFF4
 18832                           prodl	equ	0xFF3
 18833                           intcon	equ	0xFF2
 18834                           postinc0	equ	0xFEE
 18835                           fsr0h	equ	0xFEA
 18836                           fsr0l	equ	0xFE9
 18837                           wreg	equ	0xFE8
 18838                           indf1	equ	0xFE7
 18839                           fsr1h	equ	0xFE2
 18840                           fsr1l	equ	0xFE1
 18841                           bsr	equ	0xFE0
 18842                           indf2	equ	0xFDF
 18843                           postinc2	equ	0xFDE
 18844                           fsr2h	equ	0xFDA
 18845                           fsr2l	equ	0xFD9
 18846                           status	equ	0xFD8
 18847                           
 18848 ;; *************** function _CANreceiveMessage *****************
 18849 ;; Defined at:
 18850 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18851 ;; Parameters:    Size  Location     Type
 18852 ;;  msg             2   17[COMRAM] PTR struct .
 18853 ;;		 -> msg(15), 
 18854 ;; Auto vars:     Size  Location     Type
 18855 ;;  tamp            1   28[COMRAM] unsigned char 
 18856 ;;  error           1   27[COMRAM] unsigned char 
 18857 ;; Return value:  Size  Location     Type
 18858 ;;                  1    wreg      unsigned char 
 18859 ;; Registers used:
 18860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18861 ;; Tracked objects:
 18862 ;;		On entry : 0/0
 18863 ;;		On exit  : 0/0
 18864 ;;		Unchanged: 0/0
 18865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18868 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18869 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18870 ;;Total ram usage:       12 bytes
 18871 ;; Hardware stack levels used:    1
 18872 ;; This function calls:
 18873 ;;		Nothing
 18874 ;; This function is called by:
 18875 ;;		_ISR_alta
 18876 ;; This function uses a non-reentrant model
 18877 ;;
 18878                           
 18879                           	psect	text51
 18880  012D60                     __ptext51:
 18881                           	opt stack 0
 18882  012D60                     _CANreceiveMessage:
 18883                           	opt stack 21
 18884                           
 18885                           ;inc\CANlib.h: 530: BYTE tamp;
 18886                           ;inc\CANlib.h: 531: BYTE error = 0;
 18887                           
 18888                           ; BSR set to: 15
 18889                           ;incstack = 0
 18890  012D60  0E00               	movlw	0
 18891  012D62  6E48               	movwf	CANreceiveMessage@error,c
 18892                           
 18893                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 18894  012D64  BE74               	btfsc	3956,7,c	;volatile
 18895                           
 18896                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 18897  012D66  8048               	bsf	CANreceiveMessage@error,0,c
 18898                           
 18899                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 18900  012D68  BC74               	btfsc	3956,6,c	;volatile
 18901                           
 18902                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 18903  012D6A  8248               	bsf	CANreceiveMessage@error,1,c
 18904                           
 18905                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 18906  012D6C  010F               	movlb	15	; () banked
 18907  012D6E  AF50               	btfss	80,7,b	;volatile
 18908  012D70  D143               	goto	i2l422
 18909                           
 18910                           ; BSR set to: 15
 18911                           ;inc\CANlib.h: 541: {
 18912                           ;inc\CANlib.h: 542: msg->identifier = 0;
 18913  012D72  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18914  012D76  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18915  012D7A  6ADE               	clrf	postinc2,c
 18916  012D7C  6ADE               	clrf	postinc2,c
 18917  012D7E  6ADE               	clrf	postinc2,c
 18918  012D80  6ADD               	clrf	postdec2,c
 18919                           
 18920                           ; BSR set to: 15
 18921                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 18922  012D82  EE20 F004          	lfsr	2,4
 18923  012D86  503E               	movf	CANreceiveMessage@msg,w,c
 18924  012D88  26D9               	addwf	fsr2l,f,c
 18925  012D8A  503F               	movf	CANreceiveMessage@msg+1,w,c
 18926  012D8C  22DA               	addwfc	fsr2h,f,c
 18927  012D8E  CF56 FFDF          	movff	3926,indf2	;volatile
 18928                           
 18929                           ; BSR set to: 15
 18930                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 18931  012D92  EE20 F005          	lfsr	2,5
 18932  012D96  503E               	movf	CANreceiveMessage@msg,w,c
 18933  012D98  26D9               	addwf	fsr2l,f,c
 18934  012D9A  503F               	movf	CANreceiveMessage@msg+1,w,c
 18935  012D9C  22DA               	addwfc	fsr2h,f,c
 18936  012D9E  CF57 FFDF          	movff	3927,indf2	;volatile
 18937                           
 18938                           ; BSR set to: 15
 18939                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 18940  012DA2  EE20 F006          	lfsr	2,6
 18941  012DA6  503E               	movf	CANreceiveMessage@msg,w,c
 18942  012DA8  26D9               	addwf	fsr2l,f,c
 18943  012DAA  503F               	movf	CANreceiveMessage@msg+1,w,c
 18944  012DAC  22DA               	addwfc	fsr2h,f,c
 18945  012DAE  CF58 FFDF          	movff	3928,indf2	;volatile
 18946                           
 18947                           ; BSR set to: 15
 18948                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 18949  012DB2  EE20 F007          	lfsr	2,7
 18950  012DB6  503E               	movf	CANreceiveMessage@msg,w,c
 18951  012DB8  26D9               	addwf	fsr2l,f,c
 18952  012DBA  503F               	movf	CANreceiveMessage@msg+1,w,c
 18953  012DBC  22DA               	addwfc	fsr2h,f,c
 18954  012DBE  CF59 FFDF          	movff	3929,indf2	;volatile
 18955                           
 18956                           ; BSR set to: 15
 18957                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 18958  012DC2  EE20 F008          	lfsr	2,8
 18959  012DC6  503E               	movf	CANreceiveMessage@msg,w,c
 18960  012DC8  26D9               	addwf	fsr2l,f,c
 18961  012DCA  503F               	movf	CANreceiveMessage@msg+1,w,c
 18962  012DCC  22DA               	addwfc	fsr2h,f,c
 18963  012DCE  CF5A FFDF          	movff	3930,indf2	;volatile
 18964                           
 18965                           ; BSR set to: 15
 18966                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 18967  012DD2  EE20 F009          	lfsr	2,9
 18968  012DD6  503E               	movf	CANreceiveMessage@msg,w,c
 18969  012DD8  26D9               	addwf	fsr2l,f,c
 18970  012DDA  503F               	movf	CANreceiveMessage@msg+1,w,c
 18971  012DDC  22DA               	addwfc	fsr2h,f,c
 18972  012DDE  CF5B FFDF          	movff	3931,indf2	;volatile
 18973                           
 18974                           ; BSR set to: 15
 18975                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 18976  012DE2  EE20 F00A          	lfsr	2,10
 18977  012DE6  503E               	movf	CANreceiveMessage@msg,w,c
 18978  012DE8  26D9               	addwf	fsr2l,f,c
 18979  012DEA  503F               	movf	CANreceiveMessage@msg+1,w,c
 18980  012DEC  22DA               	addwfc	fsr2h,f,c
 18981  012DEE  CF5C FFDF          	movff	3932,indf2	;volatile
 18982                           
 18983                           ; BSR set to: 15
 18984                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 18985  012DF2  EE20 F00B          	lfsr	2,11
 18986  012DF6  503E               	movf	CANreceiveMessage@msg,w,c
 18987  012DF8  26D9               	addwf	fsr2l,f,c
 18988  012DFA  503F               	movf	CANreceiveMessage@msg+1,w,c
 18989  012DFC  22DA               	addwfc	fsr2h,f,c
 18990  012DFE  CF5D FFDF          	movff	3933,indf2	;volatile
 18991                           
 18992                           ; BSR set to: 15
 18993                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 18994  012E02  EE20 F00E          	lfsr	2,14
 18995  012E06  503E               	movf	CANreceiveMessage@msg,w,c
 18996  012E08  26D9               	addwf	fsr2l,f,c
 18997  012E0A  503F               	movf	CANreceiveMessage@msg+1,w,c
 18998  012E0C  22DA               	addwfc	fsr2h,f,c
 18999  012E0E  010F               	movlb	15	; () banked
 19000  012E10  AD55               	btfss	85,6,b	;volatile
 19001  012E12  D002               	goto	i2u816_40
 19002  012E14  0E01               	movlw	1
 19003  012E16  D001               	goto	i2u816_46
 19004  012E18                     i2u816_40:
 19005  012E18  0E00               	movlw	0
 19006  012E1A                     i2u816_46:
 19007  012E1A  6EDF               	movwf	indf2,c
 19008                           
 19009                           ; BSR set to: 15
 19010                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 19011  012E1C  EE20 F00D          	lfsr	2,13
 19012  012E20  503E               	movf	CANreceiveMessage@msg,w,c
 19013  012E22  26D9               	addwf	fsr2l,f,c
 19014  012E24  503F               	movf	CANreceiveMessage@msg+1,w,c
 19015  012E26  22DA               	addwfc	fsr2h,f,c
 19016  012E28  010F               	movlb	15	; () banked
 19017  012E2A  5155               	movf	85,w,b	;volatile
 19018  012E2C  0B0F               	andlw	15
 19019  012E2E  6EDF               	movwf	indf2,c
 19020                           
 19021                           ; BSR set to: 15
 19022                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 19023  012E30  EE20 F00C          	lfsr	2,12
 19024  012E34  503E               	movf	CANreceiveMessage@msg,w,c
 19025  012E36  26D9               	addwf	fsr2l,f,c
 19026  012E38  503F               	movf	CANreceiveMessage@msg+1,w,c
 19027  012E3A  22DA               	addwfc	fsr2h,f,c
 19028  012E3C  010F               	movlb	15	; () banked
 19029  012E3E  A752               	btfss	82,3,b	;volatile
 19030  012E40  D002               	goto	i2u817_40
 19031  012E42  0E01               	movlw	1
 19032  012E44  D001               	goto	i2u817_46
 19033  012E46                     i2u817_40:
 19034  012E46  0E00               	movlw	0
 19035  012E48                     i2u817_46:
 19036  012E48  6EDF               	movwf	indf2,c
 19037                           
 19038                           ; BSR set to: 15
 19039                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 19040  012E4A  010F               	movlb	15	; () banked
 19041  012E4C  B752               	btfsc	82,3,b	;volatile
 19042  012E4E  D044               	goto	i2l6514
 19043                           
 19044                           ; BSR set to: 15
 19045                           ;inc\CANlib.h: 559: {
 19046                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 19047  012E50  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 19048  012E54  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19049  012E56  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19050  012E58  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19051  012E5A  0E03               	movlw	3
 19052  012E5C                     i2u819_45:
 19053  012E5C  90D8               	bcf	status,0,c
 19054  012E5E  3640               	rlcf	??_CANreceiveMessage,f,c
 19055  012E60  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19056  012E62  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19057  012E64  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19058  012E66  2EE8               	decfsz	wreg,f,c
 19059  012E68  D7F9               	goto	i2u819_45
 19060  012E6A  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19061  012E6E  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19062  012E72  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19063  012E76  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19064  012E7A  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19065  012E7E  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19066                           
 19067                           ; BSR set to: 15
 19068                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 19069  012E82  010F               	movlb	15	; () banked
 19070  012E84  3952               	swapf	82,w,b	;volatile
 19071  012E86  42E8               	rrncf	wreg,f,c
 19072  012E88  0B07               	andlw	7
 19073  012E8A  0B07               	andlw	7
 19074  012E8C  6E49               	movwf	CANreceiveMessage@tamp,c
 19075                           
 19076                           ; BSR set to: 15
 19077                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 19078  012E8E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19079  012E92  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19080  012E96  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 19081  012E9A  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 19082  012E9E  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 19083  012EA2  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 19084  012EA6  5049               	movf	CANreceiveMessage@tamp,w,c
 19085  012EA8  2440               	addwf	??_CANreceiveMessage,w,c
 19086  012EAA  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19087  012EAC  0E00               	movlw	0
 19088  012EAE  2041               	addwfc	??_CANreceiveMessage+1,w,c
 19089  012EB0  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19090  012EB2  0E00               	movlw	0
 19091  012EB4  2042               	addwfc	??_CANreceiveMessage+2,w,c
 19092  012EB6  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19093  012EB8  0E00               	movlw	0
 19094  012EBA  2043               	addwfc	??_CANreceiveMessage+3,w,c
 19095  012EBC  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19096  012EBE  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19097  012EC2  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19098  012EC6  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19099  012ECA  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19100  012ECE  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19101  012ED2  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19102                           
 19103                           ;inc\CANlib.h: 563: }
 19104  012ED6  D08D               	goto	i2l6540
 19105  012ED8                     i2l6514:
 19106                           
 19107                           ; BSR set to: 15
 19108                           ;inc\CANlib.h: 564: else
 19109                           ;inc\CANlib.h: 565: {
 19110                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 19111  012ED8  CF54 F040          	movff	3924,??_CANreceiveMessage	;volatile
 19112  012EDC  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19113  012EDE  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19114  012EE0  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19115  012EE2  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19116  012EE6  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19117  012EEA  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19118  012EEE  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19119  012EF2  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19120  012EF6  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19121                           
 19122                           ; BSR set to: 15
 19123                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 19124  012EFA  CF53 F040          	movff	3923,??_CANreceiveMessage	;volatile
 19125  012EFE  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19126  012F00  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19127  012F02  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19128  012F04  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19129  012F08  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19130  012F0C  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19131  012F10  6A40               	clrf	??_CANreceiveMessage,c
 19132  012F12  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19133  012F16  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19134  012F1A  5040               	movf	??_CANreceiveMessage,w,c
 19135  012F1C  26DE               	addwf	postinc2,f,c
 19136  012F1E  5041               	movf	??_CANreceiveMessage+1,w,c
 19137  012F20  22DE               	addwfc	postinc2,f,c
 19138  012F22  5042               	movf	??_CANreceiveMessage+2,w,c
 19139  012F24  22DE               	addwfc	postinc2,f,c
 19140  012F26  5043               	movf	??_CANreceiveMessage+3,w,c
 19141  012F28  22DE               	addwfc	postinc2,f,c
 19142                           
 19143                           ; BSR set to: 15
 19144                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 19145  012F2A  010F               	movlb	15	; () banked
 19146  012F2C  A152               	btfss	82,0,b	;volatile
 19147  012F2E  D00C               	goto	i2l6522
 19148                           
 19149                           ; BSR set to: 15
 19150                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 19151  012F30  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19152  012F34  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19153  012F38  0E00               	movlw	0
 19154  012F3A  12DE               	iorwf	postinc2,f,c
 19155  012F3C  0E00               	movlw	0
 19156  012F3E  12DE               	iorwf	postinc2,f,c
 19157  012F40  0E01               	movlw	1
 19158  012F42  12DE               	iorwf	postinc2,f,c
 19159  012F44  0E00               	movlw	0
 19160  012F46  12DE               	iorwf	postinc2,f,c
 19161  012F48                     i2l6522:
 19162                           
 19163                           ; BSR set to: 15
 19164                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 19165  012F48  010F               	movlb	15	; () banked
 19166  012F4A  A352               	btfss	82,1,b	;volatile
 19167  012F4C  D00C               	goto	i2l6526
 19168                           
 19169                           ; BSR set to: 15
 19170                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 19171  012F4E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19172  012F52  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19173  012F56  0E00               	movlw	0
 19174  012F58  12DE               	iorwf	postinc2,f,c
 19175  012F5A  0E00               	movlw	0
 19176  012F5C  12DE               	iorwf	postinc2,f,c
 19177  012F5E  0E02               	movlw	2
 19178  012F60  12DE               	iorwf	postinc2,f,c
 19179  012F62  0E00               	movlw	0
 19180  012F64  12DE               	iorwf	postinc2,f,c
 19181  012F66                     i2l6526:
 19182                           
 19183                           ; BSR set to: 15
 19184                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 19185  012F66  010F               	movlb	15	; () banked
 19186  012F68  AB52               	btfss	82,5,b	;volatile
 19187  012F6A  D00C               	goto	i2l6530
 19188                           
 19189                           ; BSR set to: 15
 19190                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 19191  012F6C  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19192  012F70  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19193  012F74  0E00               	movlw	0
 19194  012F76  12DE               	iorwf	postinc2,f,c
 19195  012F78  0E00               	movlw	0
 19196  012F7A  12DE               	iorwf	postinc2,f,c
 19197  012F7C  0E04               	movlw	4
 19198  012F7E  12DE               	iorwf	postinc2,f,c
 19199  012F80  0E00               	movlw	0
 19200  012F82  12DE               	iorwf	postinc2,f,c
 19201  012F84                     i2l6530:
 19202                           
 19203                           ; BSR set to: 15
 19204                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 19205  012F84  010F               	movlb	15	; () banked
 19206  012F86  AD52               	btfss	82,6,b	;volatile
 19207  012F88  D00C               	goto	i2l6534
 19208                           
 19209                           ; BSR set to: 15
 19210                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 19211  012F8A  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19212  012F8E  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19213  012F92  0E00               	movlw	0
 19214  012F94  12DE               	iorwf	postinc2,f,c
 19215  012F96  0E00               	movlw	0
 19216  012F98  12DE               	iorwf	postinc2,f,c
 19217  012F9A  0E08               	movlw	8
 19218  012F9C  12DE               	iorwf	postinc2,f,c
 19219  012F9E  0E00               	movlw	0
 19220  012FA0  12DE               	iorwf	postinc2,f,c
 19221  012FA2                     i2l6534:
 19222                           
 19223                           ; BSR set to: 15
 19224                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 19225  012FA2  010F               	movlb	15	; () banked
 19226  012FA4  AF52               	btfss	82,7,b	;volatile
 19227  012FA6  D00C               	goto	i2l6538
 19228                           
 19229                           ; BSR set to: 15
 19230                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 19231  012FA8  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19232  012FAC  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19233  012FB0  0E00               	movlw	0
 19234  012FB2  12DE               	iorwf	postinc2,f,c
 19235  012FB4  0E00               	movlw	0
 19236  012FB6  12DE               	iorwf	postinc2,f,c
 19237  012FB8  0E10               	movlw	16
 19238  012FBA  12DE               	iorwf	postinc2,f,c
 19239  012FBC  0E00               	movlw	0
 19240  012FBE  12DE               	iorwf	postinc2,f,c
 19241  012FC0                     i2l6538:
 19242                           
 19243                           ; BSR set to: 15
 19244                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 19245  012FC0  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 19246  012FC4  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19247  012FC6  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19248  012FC8  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19249  012FCA  0E15               	movlw	21
 19250  012FCC                     i2u825_45:
 19251  012FCC  90D8               	bcf	status,0,c
 19252  012FCE  3640               	rlcf	??_CANreceiveMessage,f,c
 19253  012FD0  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19254  012FD2  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19255  012FD4  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19256  012FD6  2EE8               	decfsz	wreg,f,c
 19257  012FD8  D7F9               	goto	i2u825_45
 19258  012FDA  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19259  012FDE  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19260  012FE2  5040               	movf	??_CANreceiveMessage,w,c
 19261  012FE4  12DE               	iorwf	postinc2,f,c
 19262  012FE6  5041               	movf	??_CANreceiveMessage+1,w,c
 19263  012FE8  12DE               	iorwf	postinc2,f,c
 19264  012FEA  5042               	movf	??_CANreceiveMessage+2,w,c
 19265  012FEC  12DE               	iorwf	postinc2,f,c
 19266  012FEE  5043               	movf	??_CANreceiveMessage+3,w,c
 19267  012FF0  12DE               	iorwf	postinc2,f,c
 19268  012FF2                     i2l6540:
 19269                           
 19270                           ; BSR set to: 15
 19271                           ;inc\CANlib.h: 581: }
 19272                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 19273  012FF2  010F               	movlb	15	; () banked
 19274  012FF4  9F50               	bcf	80,7,b	;volatile
 19275                           
 19276                           ; BSR set to: 15
 19277                           ;inc\CANlib.h: 584: return (error);
 19278                           ;	Return value of _CANreceiveMessage is never used
 19279  012FF6  0012               	return	
 19280  012FF8                     i2l422:
 19281                           
 19282                           ; BSR set to: 15
 19283                           ;inc\CANlib.h: 585: }
 19284                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 19285  012FF8  AE60               	btfss	3936,7,c	;volatile
 19286  012FFA  0012               	return	
 19287                           
 19288                           ; BSR set to: 15
 19289                           ;inc\CANlib.h: 588: {
 19290                           ;inc\CANlib.h: 589: msg->identifier = 0;
 19291  012FFC  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19292  013000  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19293  013004  6ADE               	clrf	postinc2,c
 19294  013006  6ADE               	clrf	postinc2,c
 19295  013008  6ADE               	clrf	postinc2,c
 19296  01300A  6ADD               	clrf	postdec2,c
 19297                           
 19298                           ; BSR set to: 15
 19299                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 19300  01300C  EE20 F004          	lfsr	2,4
 19301  013010  503E               	movf	CANreceiveMessage@msg,w,c
 19302  013012  26D9               	addwf	fsr2l,f,c
 19303  013014  503F               	movf	CANreceiveMessage@msg+1,w,c
 19304  013016  22DA               	addwfc	fsr2h,f,c
 19305  013018  CF66 FFDF          	movff	3942,indf2	;volatile
 19306                           
 19307                           ; BSR set to: 15
 19308                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 19309  01301C  EE20 F005          	lfsr	2,5
 19310  013020  503E               	movf	CANreceiveMessage@msg,w,c
 19311  013022  26D9               	addwf	fsr2l,f,c
 19312  013024  503F               	movf	CANreceiveMessage@msg+1,w,c
 19313  013026  22DA               	addwfc	fsr2h,f,c
 19314  013028  CF67 FFDF          	movff	3943,indf2	;volatile
 19315                           
 19316                           ; BSR set to: 15
 19317                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 19318  01302C  EE20 F006          	lfsr	2,6
 19319  013030  503E               	movf	CANreceiveMessage@msg,w,c
 19320  013032  26D9               	addwf	fsr2l,f,c
 19321  013034  503F               	movf	CANreceiveMessage@msg+1,w,c
 19322  013036  22DA               	addwfc	fsr2h,f,c
 19323  013038  CF68 FFDF          	movff	3944,indf2	;volatile
 19324                           
 19325                           ; BSR set to: 15
 19326                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 19327  01303C  EE20 F007          	lfsr	2,7
 19328  013040  503E               	movf	CANreceiveMessage@msg,w,c
 19329  013042  26D9               	addwf	fsr2l,f,c
 19330  013044  503F               	movf	CANreceiveMessage@msg+1,w,c
 19331  013046  22DA               	addwfc	fsr2h,f,c
 19332  013048  CF69 FFDF          	movff	3945,indf2	;volatile
 19333                           
 19334                           ; BSR set to: 15
 19335                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 19336  01304C  EE20 F008          	lfsr	2,8
 19337  013050  503E               	movf	CANreceiveMessage@msg,w,c
 19338  013052  26D9               	addwf	fsr2l,f,c
 19339  013054  503F               	movf	CANreceiveMessage@msg+1,w,c
 19340  013056  22DA               	addwfc	fsr2h,f,c
 19341  013058  CF6A FFDF          	movff	3946,indf2	;volatile
 19342                           
 19343                           ; BSR set to: 15
 19344                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 19345  01305C  EE20 F009          	lfsr	2,9
 19346  013060  503E               	movf	CANreceiveMessage@msg,w,c
 19347  013062  26D9               	addwf	fsr2l,f,c
 19348  013064  503F               	movf	CANreceiveMessage@msg+1,w,c
 19349  013066  22DA               	addwfc	fsr2h,f,c
 19350  013068  CF6B FFDF          	movff	3947,indf2	;volatile
 19351                           
 19352                           ; BSR set to: 15
 19353                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 19354  01306C  EE20 F00A          	lfsr	2,10
 19355  013070  503E               	movf	CANreceiveMessage@msg,w,c
 19356  013072  26D9               	addwf	fsr2l,f,c
 19357  013074  503F               	movf	CANreceiveMessage@msg+1,w,c
 19358  013076  22DA               	addwfc	fsr2h,f,c
 19359  013078  CF6C FFDF          	movff	3948,indf2	;volatile
 19360                           
 19361                           ; BSR set to: 15
 19362                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 19363  01307C  EE20 F00B          	lfsr	2,11
 19364  013080  503E               	movf	CANreceiveMessage@msg,w,c
 19365  013082  26D9               	addwf	fsr2l,f,c
 19366  013084  503F               	movf	CANreceiveMessage@msg+1,w,c
 19367  013086  22DA               	addwfc	fsr2h,f,c
 19368  013088  CF6D FFDF          	movff	3949,indf2	;volatile
 19369                           
 19370                           ; BSR set to: 15
 19371                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 19372  01308C  EE20 F00E          	lfsr	2,14
 19373  013090  503E               	movf	CANreceiveMessage@msg,w,c
 19374  013092  26D9               	addwf	fsr2l,f,c
 19375  013094  503F               	movf	CANreceiveMessage@msg+1,w,c
 19376  013096  22DA               	addwfc	fsr2h,f,c
 19377  013098  AC65               	btfss	3941,6,c	;volatile
 19378  01309A  D002               	goto	i2u827_40
 19379  01309C  0E01               	movlw	1
 19380  01309E  D001               	goto	i2u827_46
 19381  0130A0                     i2u827_40:
 19382  0130A0  0E00               	movlw	0
 19383  0130A2                     i2u827_46:
 19384  0130A2  6EDF               	movwf	indf2,c
 19385                           
 19386                           ; BSR set to: 15
 19387                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 19388  0130A4  EE20 F00D          	lfsr	2,13
 19389  0130A8  503E               	movf	CANreceiveMessage@msg,w,c
 19390  0130AA  26D9               	addwf	fsr2l,f,c
 19391  0130AC  503F               	movf	CANreceiveMessage@msg+1,w,c
 19392  0130AE  22DA               	addwfc	fsr2h,f,c
 19393  0130B0  5065               	movf	3941,w,c	;volatile
 19394  0130B2  0B0F               	andlw	15
 19395  0130B4  6EDF               	movwf	indf2,c
 19396                           
 19397                           ; BSR set to: 15
 19398                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 19399  0130B6  EE20 F00C          	lfsr	2,12
 19400  0130BA  503E               	movf	CANreceiveMessage@msg,w,c
 19401  0130BC  26D9               	addwf	fsr2l,f,c
 19402  0130BE  503F               	movf	CANreceiveMessage@msg+1,w,c
 19403  0130C0  22DA               	addwfc	fsr2h,f,c
 19404  0130C2  A662               	btfss	3938,3,c	;volatile
 19405  0130C4  D002               	goto	i2u828_40
 19406  0130C6  0E01               	movlw	1
 19407  0130C8  D001               	goto	i2u828_46
 19408  0130CA                     i2u828_40:
 19409  0130CA  0E00               	movlw	0
 19410  0130CC                     i2u828_46:
 19411  0130CC  6EDF               	movwf	indf2,c
 19412                           
 19413                           ; BSR set to: 15
 19414                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 19415  0130CE  B662               	btfsc	3938,3,c	;volatile
 19416  0130D0  D043               	goto	i2l6576
 19417                           
 19418                           ; BSR set to: 15
 19419                           ;inc\CANlib.h: 606: {
 19420                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 19421  0130D2  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 19422  0130D6  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19423  0130D8  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19424  0130DA  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19425  0130DC  0E03               	movlw	3
 19426  0130DE                     i2u830_45:
 19427  0130DE  90D8               	bcf	status,0,c
 19428  0130E0  3640               	rlcf	??_CANreceiveMessage,f,c
 19429  0130E2  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19430  0130E4  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19431  0130E6  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19432  0130E8  2EE8               	decfsz	wreg,f,c
 19433  0130EA  D7F9               	goto	i2u830_45
 19434  0130EC  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19435  0130F0  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19436  0130F4  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19437  0130F8  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19438  0130FC  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19439  013100  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19440                           
 19441                           ; BSR set to: 15
 19442                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 19443  013104  3862               	swapf	3938,w,c	;volatile
 19444  013106  42E8               	rrncf	wreg,f,c
 19445  013108  0B07               	andlw	7
 19446  01310A  0B07               	andlw	7
 19447  01310C  6E49               	movwf	CANreceiveMessage@tamp,c
 19448                           
 19449                           ; BSR set to: 15
 19450                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 19451  01310E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19452  013112  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19453  013116  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 19454  01311A  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 19455  01311E  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 19456  013122  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 19457  013126  5049               	movf	CANreceiveMessage@tamp,w,c
 19458  013128  2440               	addwf	??_CANreceiveMessage,w,c
 19459  01312A  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19460  01312C  0E00               	movlw	0
 19461  01312E  2041               	addwfc	??_CANreceiveMessage+1,w,c
 19462  013130  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19463  013132  0E00               	movlw	0
 19464  013134  2042               	addwfc	??_CANreceiveMessage+2,w,c
 19465  013136  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19466  013138  0E00               	movlw	0
 19467  01313A  2043               	addwfc	??_CANreceiveMessage+3,w,c
 19468  01313C  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19469  01313E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19470  013142  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19471  013146  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19472  01314A  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19473  01314E  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19474  013152  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19475                           
 19476                           ;inc\CANlib.h: 610: }
 19477  013156  D088               	goto	i2l6602
 19478  013158                     i2l6576:
 19479                           
 19480                           ; BSR set to: 15
 19481                           ;inc\CANlib.h: 611: else
 19482                           ;inc\CANlib.h: 612: {
 19483                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 19484  013158  CF64 F040          	movff	3940,??_CANreceiveMessage	;volatile
 19485  01315C  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19486  01315E  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19487  013160  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19488  013162  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19489  013166  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19490  01316A  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19491  01316E  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19492  013172  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19493  013176  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19494                           
 19495                           ; BSR set to: 15
 19496                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 19497  01317A  CF63 F040          	movff	3939,??_CANreceiveMessage	;volatile
 19498  01317E  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19499  013180  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19500  013182  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19501  013184  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19502  013188  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19503  01318C  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19504  013190  6A40               	clrf	??_CANreceiveMessage,c
 19505  013192  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19506  013196  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19507  01319A  5040               	movf	??_CANreceiveMessage,w,c
 19508  01319C  26DE               	addwf	postinc2,f,c
 19509  01319E  5041               	movf	??_CANreceiveMessage+1,w,c
 19510  0131A0  22DE               	addwfc	postinc2,f,c
 19511  0131A2  5042               	movf	??_CANreceiveMessage+2,w,c
 19512  0131A4  22DE               	addwfc	postinc2,f,c
 19513  0131A6  5043               	movf	??_CANreceiveMessage+3,w,c
 19514  0131A8  22DE               	addwfc	postinc2,f,c
 19515                           
 19516                           ; BSR set to: 15
 19517                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 19518  0131AA  A062               	btfss	3938,0,c	;volatile
 19519  0131AC  D00C               	goto	i2l6584
 19520                           
 19521                           ; BSR set to: 15
 19522                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 19523  0131AE  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19524  0131B2  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19525  0131B6  0E00               	movlw	0
 19526  0131B8  12DE               	iorwf	postinc2,f,c
 19527  0131BA  0E00               	movlw	0
 19528  0131BC  12DE               	iorwf	postinc2,f,c
 19529  0131BE  0E01               	movlw	1
 19530  0131C0  12DE               	iorwf	postinc2,f,c
 19531  0131C2  0E00               	movlw	0
 19532  0131C4  12DE               	iorwf	postinc2,f,c
 19533  0131C6                     i2l6584:
 19534                           
 19535                           ; BSR set to: 15
 19536                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 19537  0131C6  A262               	btfss	3938,1,c	;volatile
 19538  0131C8  D00C               	goto	i2l6588
 19539                           
 19540                           ; BSR set to: 15
 19541                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 19542  0131CA  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19543  0131CE  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19544  0131D2  0E00               	movlw	0
 19545  0131D4  12DE               	iorwf	postinc2,f,c
 19546  0131D6  0E00               	movlw	0
 19547  0131D8  12DE               	iorwf	postinc2,f,c
 19548  0131DA  0E02               	movlw	2
 19549  0131DC  12DE               	iorwf	postinc2,f,c
 19550  0131DE  0E00               	movlw	0
 19551  0131E0  12DE               	iorwf	postinc2,f,c
 19552  0131E2                     i2l6588:
 19553                           
 19554                           ; BSR set to: 15
 19555                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 19556  0131E2  AA62               	btfss	3938,5,c	;volatile
 19557  0131E4  D00C               	goto	i2l6592
 19558                           
 19559                           ; BSR set to: 15
 19560                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 19561  0131E6  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19562  0131EA  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19563  0131EE  0E00               	movlw	0
 19564  0131F0  12DE               	iorwf	postinc2,f,c
 19565  0131F2  0E00               	movlw	0
 19566  0131F4  12DE               	iorwf	postinc2,f,c
 19567  0131F6  0E04               	movlw	4
 19568  0131F8  12DE               	iorwf	postinc2,f,c
 19569  0131FA  0E00               	movlw	0
 19570  0131FC  12DE               	iorwf	postinc2,f,c
 19571  0131FE                     i2l6592:
 19572                           
 19573                           ; BSR set to: 15
 19574                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 19575  0131FE  AC62               	btfss	3938,6,c	;volatile
 19576  013200  D00C               	goto	i2l6596
 19577                           
 19578                           ; BSR set to: 15
 19579                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 19580  013202  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19581  013206  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19582  01320A  0E00               	movlw	0
 19583  01320C  12DE               	iorwf	postinc2,f,c
 19584  01320E  0E00               	movlw	0
 19585  013210  12DE               	iorwf	postinc2,f,c
 19586  013212  0E08               	movlw	8
 19587  013214  12DE               	iorwf	postinc2,f,c
 19588  013216  0E00               	movlw	0
 19589  013218  12DE               	iorwf	postinc2,f,c
 19590  01321A                     i2l6596:
 19591                           
 19592                           ; BSR set to: 15
 19593                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 19594  01321A  AE62               	btfss	3938,7,c	;volatile
 19595  01321C  D00C               	goto	i2l6600
 19596                           
 19597                           ; BSR set to: 15
 19598                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 19599  01321E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19600  013222  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19601  013226  0E00               	movlw	0
 19602  013228  12DE               	iorwf	postinc2,f,c
 19603  01322A  0E00               	movlw	0
 19604  01322C  12DE               	iorwf	postinc2,f,c
 19605  01322E  0E10               	movlw	16
 19606  013230  12DE               	iorwf	postinc2,f,c
 19607  013232  0E00               	movlw	0
 19608  013234  12DE               	iorwf	postinc2,f,c
 19609  013236                     i2l6600:
 19610                           
 19611                           ; BSR set to: 15
 19612                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 19613  013236  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 19614  01323A  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19615  01323C  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19616  01323E  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19617  013240  0E15               	movlw	21
 19618  013242                     i2u836_45:
 19619  013242  90D8               	bcf	status,0,c
 19620  013244  3640               	rlcf	??_CANreceiveMessage,f,c
 19621  013246  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19622  013248  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19623  01324A  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19624  01324C  2EE8               	decfsz	wreg,f,c
 19625  01324E  D7F9               	goto	i2u836_45
 19626  013250  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19627  013254  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19628  013258  5040               	movf	??_CANreceiveMessage,w,c
 19629  01325A  12DE               	iorwf	postinc2,f,c
 19630  01325C  5041               	movf	??_CANreceiveMessage+1,w,c
 19631  01325E  12DE               	iorwf	postinc2,f,c
 19632  013260  5042               	movf	??_CANreceiveMessage+2,w,c
 19633  013262  12DE               	iorwf	postinc2,f,c
 19634  013264  5043               	movf	??_CANreceiveMessage+3,w,c
 19635  013266  12DE               	iorwf	postinc2,f,c
 19636  013268                     i2l6602:
 19637                           
 19638                           ; BSR set to: 15
 19639                           ;inc\CANlib.h: 629: }
 19640                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 19641  013268  9E60               	bcf	3936,7,c	;volatile
 19642                           
 19643                           ; BSR set to: 15
 19644                           ;inc\CANlib.h: 632: return (error);
 19645                           ;	Return value of _CANreceiveMessage is never used
 19646  01326A  0012               	return	
 19647  01326C                     __end_of_CANreceiveMessage:
 19648                           	opt stack 0
 19649                           pclatu	equ	0xFFB
 19650                           pclath	equ	0xFFA
 19651                           tblptru	equ	0xFF8
 19652                           tblptrh	equ	0xFF7
 19653                           tblptrl	equ	0xFF6
 19654                           tablat	equ	0xFF5
 19655                           prodh	equ	0xFF4
 19656                           prodl	equ	0xFF3
 19657                           intcon	equ	0xFF2
 19658                           postinc0	equ	0xFEE
 19659                           fsr0h	equ	0xFEA
 19660                           fsr0l	equ	0xFE9
 19661                           wreg	equ	0xFE8
 19662                           indf1	equ	0xFE7
 19663                           fsr1h	equ	0xFE2
 19664                           fsr1l	equ	0xFE1
 19665                           bsr	equ	0xFE0
 19666                           indf2	equ	0xFDF
 19667                           postinc2	equ	0xFDE
 19668                           postdec2	equ	0xFDD
 19669                           fsr2h	equ	0xFDA
 19670                           fsr2l	equ	0xFD9
 19671                           status	equ	0xFD8
 19672                           
 19673 ;; *************** function _CANisRxReady *****************
 19674 ;; Defined at:
 19675 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19676 ;; Parameters:    Size  Location     Type
 19677 ;;		None
 19678 ;; Auto vars:     Size  Location     Type
 19679 ;;		None
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  1    wreg      unsigned char 
 19682 ;; Registers used:
 19683 ;;		wreg, status,2
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19693 ;;Total ram usage:        1 bytes
 19694 ;; Hardware stack levels used:    1
 19695 ;; This function calls:
 19696 ;;		Nothing
 19697 ;; This function is called by:
 19698 ;;		_ISR_alta
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           	psect	text52
 19703  015E44                     __ptext52:
 19704                           	opt stack 0
 19705  015E44                     _CANisRxReady:
 19706                           	opt stack 21
 19707                           
 19708                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 19709                           
 19710                           ; BSR set to: 15
 19711                           ;incstack = 0
 19712  015E44  0E01               	movlw	1
 19713  015E46  6E3E               	movwf	_CANisRxReady$3237,c
 19714  015E48  BE60               	btfsc	3936,7,c	;volatile
 19715  015E4A  D005               	goto	i2l573
 19716  015E4C  010F               	movlb	15	; () banked
 19717  015E4E  BF50               	btfsc	80,7,b	;volatile
 19718  015E50  D002               	goto	i2l573
 19719                           
 19720                           ; BSR set to: 15
 19721  015E52  0E00               	movlw	0
 19722  015E54  6E3E               	movwf	_CANisRxReady$3237,c
 19723  015E56                     i2l573:
 19724  015E56  503E               	movf	_CANisRxReady$3237,w,c
 19725  015E58  0012               	return	
 19726  015E5A                     __end_of_CANisRxReady:
 19727                           	opt stack 0
 19728                           pclatu	equ	0xFFB
 19729                           pclath	equ	0xFFA
 19730                           tblptru	equ	0xFF8
 19731                           tblptrh	equ	0xFF7
 19732                           tblptrl	equ	0xFF6
 19733                           tablat	equ	0xFF5
 19734                           prodh	equ	0xFF4
 19735                           prodl	equ	0xFF3
 19736                           intcon	equ	0xFF2
 19737                           postinc0	equ	0xFEE
 19738                           fsr0h	equ	0xFEA
 19739                           fsr0l	equ	0xFE9
 19740                           wreg	equ	0xFE8
 19741                           indf1	equ	0xFE7
 19742                           fsr1h	equ	0xFE2
 19743                           fsr1l	equ	0xFE1
 19744                           bsr	equ	0xFE0
 19745                           indf2	equ	0xFDF
 19746                           postinc2	equ	0xFDE
 19747                           postdec2	equ	0xFDD
 19748                           fsr2h	equ	0xFDA
 19749                           fsr2l	equ	0xFD9
 19750                           status	equ	0xFD8
 19751                           pclatu	equ	0xFFB
 19752                           pclath	equ	0xFFA
 19753                           tblptru	equ	0xFF8
 19754                           tblptrh	equ	0xFF7
 19755                           tblptrl	equ	0xFF6
 19756                           tablat	equ	0xFF5
 19757                           prodh	equ	0xFF4
 19758                           prodl	equ	0xFF3
 19759                           intcon	equ	0xFF2
 19760                           postinc0	equ	0xFEE
 19761                           fsr0h	equ	0xFEA
 19762                           fsr0l	equ	0xFE9
 19763                           wreg	equ	0xFE8
 19764                           indf1	equ	0xFE7
 19765                           fsr1h	equ	0xFE2
 19766                           fsr1l	equ	0xFE1
 19767                           bsr	equ	0xFE0
 19768                           indf2	equ	0xFDF
 19769                           postinc2	equ	0xFDE
 19770                           postdec2	equ	0xFDD
 19771                           fsr2h	equ	0xFDA
 19772                           fsr2l	equ	0xFD9
 19773                           status	equ	0xFD8
 19774                           
 19775                           	psect	rparam
 19776  0000                     pclatu	equ	0xFFB
 19777                           pclath	equ	0xFFA
 19778                           tblptru	equ	0xFF8
 19779                           tblptrh	equ	0xFF7
 19780                           tblptrl	equ	0xFF6
 19781                           tablat	equ	0xFF5
 19782                           prodh	equ	0xFF4
 19783                           prodl	equ	0xFF3
 19784                           intcon	equ	0xFF2
 19785                           postinc0	equ	0xFEE
 19786                           fsr0h	equ	0xFEA
 19787                           fsr0l	equ	0xFE9
 19788                           wreg	equ	0xFE8
 19789                           indf1	equ	0xFE7
 19790                           fsr1h	equ	0xFE2
 19791                           fsr1l	equ	0xFE1
 19792                           bsr	equ	0xFE0
 19793                           indf2	equ	0xFDF
 19794                           postinc2	equ	0xFDE
 19795                           postdec2	equ	0xFDD
 19796                           fsr2h	equ	0xFDA
 19797                           fsr2l	equ	0xFD9
 19798                           status	equ	0xFD8
 19799                           
 19800                           	psect	temp
 19801  00004D                     btemp:
 19802                           	opt stack 0
 19803  00004D                     	ds	1
 19804  0000                     int$flags	set	btemp
 19805                           pclatu	equ	0xFFB
 19806                           pclath	equ	0xFFA
 19807                           tblptru	equ	0xFF8
 19808                           tblptrh	equ	0xFF7
 19809                           tblptrl	equ	0xFF6
 19810                           tablat	equ	0xFF5
 19811                           prodh	equ	0xFF4
 19812                           prodl	equ	0xFF3
 19813                           intcon	equ	0xFF2
 19814                           postinc0	equ	0xFEE
 19815                           fsr0h	equ	0xFEA
 19816                           fsr0l	equ	0xFE9
 19817                           wreg	equ	0xFE8
 19818                           indf1	equ	0xFE7
 19819                           fsr1h	equ	0xFE2
 19820                           fsr1l	equ	0xFE1
 19821                           bsr	equ	0xFE0
 19822                           indf2	equ	0xFDF
 19823                           postinc2	equ	0xFDE
 19824                           postdec2	equ	0xFDD
 19825                           fsr2h	equ	0xFDA
 19826                           fsr2l	equ	0xFD9
 19827                           status	equ	0xFD8


Data Sizes:
    Strings     179
    Constant    144
    Data        1
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      76
    BANK0           160    108     141
    BANK1           256     35      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[8]), 
		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[14]), 
		 -> STR_8(CODE[17]), STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage
    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  249699
                                             27 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  131383
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                            100 BANK0      8     0      8
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             57 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             57 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             32 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             18 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             18 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             90 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             90 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             70 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             57 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             32 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   10520
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             30 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             32 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             30 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18060
                                             33 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             30 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             30 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             26 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             18 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    4512
                                             29 COMRAM     1     1      0
                                              4 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (10) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (10) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      8D       5       88.1%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1E      4C       1       80.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      20        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Apr 15 19:05:58 2016

                   ___fldiv@aexp 0098                     ___fldiv@bexp 0097  
                              _x 00E7                                _y 0265  
                              _z 00E8        __size_of_delay_set_quartz 000A  
           __end_of_CANSetFilter 0B06                     ?_LCD_Handler 002D  
                   ___fldiv@sign 008C                     ___awdiv@sign 007D  
                             _id 0012                               bsr 000FE0  
            ___wmul@multiplicand 0074                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                     __CFG_CP4$OFF 000000  
                   __CFG_CP5$OFF 000000                              l400 17EE  
                            l401 17F2                              l410 1958  
                            l402 17FE                              l411 1962  
                            l500 073A                              l405 18B8  
                            l501 0746                              l414 1A72  
                            l406 18BC                              l510 0852  
                            l502 074A                              l415 1A76  
                            l407 19B4                              l511 0856  
                            l503 0756                              l416 1A82  
                            l408 1944                              l520 0962  
                            l512 0862                              l504 075A  
                            l409 194E                              l521 096E  
                            l513 0866                              l505 0766  
                            l530 0A7A                              l522 0972  
                            l514 0872                              l450 41A4  
                            l370 4A88                              l531 0A7E  
                            l523 097E                              l515 0876  
                            l451 41A8                              l371 4A92  
                            l380 1446                              l532 0A8A  
                            l524 0982                              l516 0882  
                            l508 0842                              l460 42B0  
                            l452 41B4                              l444 4174  
                            l381 1450                              l533 0A8E  
                            l525 098E                              l509 0846  
                            l461 42BC                              l445 4178  
                            l390 18A2                              l382 145A  
                            l534 0A9A                              l526 0992  
                            l462 42C0                              l446 4184  
                            l391 1634                              l375 161E  
                            l535 0A9E                              l527 099E  
                            l519 095E                              l463 42CC  
                            l455 428C                              l447 4188  
                            l392 1638                              l376 13B0  
                            l536 0AAA                              l480 0514  
                            l456 4290                              l448 4194  
                            l393 1730                              l385 156A  
                            l377 13B4                              l537 0AAE  
                            l481 0520                              l457 429C  
                            l449 4198                              l394 16C0  
                            l386 156E                              l378 14AC  
                            l538 0ABA                              l490 062A  
                            l482 0524                              l458 42A0  
                            l395 16CA                              l387 157A  
                            l379 143C                              l491 062E  
                            l483 0530                              l475 04F0  
                            l459 42AC                              l396 16D4  
                            l492 063A                              l476 04F4  
                            l397 16DE                              l581 5BF6  
                            l493 063E                              l477 0500  
                            l494 064A                              l486 060A  
                            l478 0504                              l487 060E  
                            l479 0510                              l568 5D78  
                            l488 061A                              l497 0726  
                            l489 061E                              l498 072A  
                            l499 0736                              l862 5E1A  
                            l855 5DC6                              l960 10FA  
                            l874 5A74                              l779 2388  
                            l876 5A76                              l869 5DFE  
                            l789 24AE             ??_PWR_Button_Polling 0072  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                    ?_LCD_cursor 007E                              _dir 00E4  
                            _msg 0100                              _str 010F  
                   ___awmod@sign 0077                              prod 000FF3  
                            wreg 000FE8                     ___flmul@aexp 008D  
                   ___flmul@bexp 0092                     ___flmul@sign 008C  
                   ___flmul@temp 0097                     ___flmul@prod 0093  
                   __CFG_LVP$OFF 000000           __size_of_LCD_goto_line 00EC  
                   ___fltol@exp1 00C3                     __CFG_WDT$OFF 000000  
                           l1185 5036                             l1282 4C5A  
                           l1531 3D90                             l1195 4E70  
                           l1283 4C9E                             l1528 3DE8  
                           l1472 344C                             l1537 3E20  
                           l1473 3440                             l1289 4D1E  
                           l1474 340C                             l1378 5678  
                           l1539 3E8E                             l1388 59BC  
                           l1580 4848                             l1565 3A64  
                           l1558 37C8                             l5006 40E8  
                           l1575 3B76                             l1567 3AD2  
                           l5032 41B8                             l1489 35C0  
                           l6010 196C                             l1498 3654  
                           l1594 4950                             l5106 0176  
                           l1595 4968                             l1587 48F4  
                           l5212 057A                             l5124 0230  
                           l6030 1A66                             l5206 0534  
                           l5142 02EA                             l5038 41FE  
                           l5240 064E                             l5160 03A4  
                           l5064 42D0                             l5314 08CC  
                           l6036 1A86                             l5308 0886  
                           l5342 09A2                             l5246 0694  
                           l6400 3D64                             l5280 07B0  
                           l5088 00BE                             l8010 4FB4  
                           l8002 4F60                             l5274 076A  
                           l5178 045E                             l6420 3E0A  
                           l6340 3BD8                             l5348 09E8  
                           l6414 3DE4                             l6350 3C06  
                           l8022 4FEC                             l8200 5C74  
                           l6408 3D9C                             l6360 3C36  
                           l7400 328A                             l8112 5412  
                           l8104 53DC                             l8032 501C  
                           l5376 0ABE                             l6450 3F0C  
                           l6426 3E34                             l6370 3C64  
                           l6346 3BFC                             l8050 4DCC  
                           l7410 32B8                             l8106 53EC  
                           l8122 55FC                             l8034 502C  
                           l8026 5000                             l8204 5C8E  
                           l8212 5D4A                             l6460 3F52  
                           l6452 3F20                             l6436 3E88  
                           l8060 4EBC                             l7500 3470  
                           l8108 53F6                             l8124 560C  
                           l5820 4AE2                             l5812 4A80  
                           l9004 23CC                             l9012 240E  
                           l6462 3F56                             l6454 3F42  
                           l6446 3EDE                             l6390 3CE6  
                           l6382 3CB8                             l6366 3C5A  
                           l8054 4E1E                             l8046 4D7E  
                           l7510 34B4                             l7430 331C  
                           l7406 32AE                             l8134 5666  
                           l8126 5612                             l8150 59AA  
                           l8142 5950                             l5814 4A96  
                           l9030 24E6                             l9022 24D2  
                           l6720 570A                             l8208 5D36  
                           l7424 32F8                             l8144 5960  
                           l8160 4858                             l8400 10DC  
                           l8320 0CFA                             l8304 0C76  
                           l9040 2532                             l6706 568A  
                           l7514 34BE                             l7442 3350  
                           l7434 3326                             l7418 32E4  
                           l8146 5966                             l8170 4898  
                           l7610 375C                             l7602 3732  
                           l5818 4A9E                             l6716 56D2  
                           l8068 5C2A                             l7508 34AE  
                           l8180 4942                             l8172 48D6  
                           l7620 378C                             l7612 376E  
                           l8412 112E                             l8404 10FE  
                           l8332 0DB0                             l4972 5E36  
                           l9052 2560                             l9060 25A0  
                           l5934 16E8                             l6726 5A6A  
                           l7542 3608                             l7518 34D0  
                           l8094 53AC                             l8078 533E  
                           l8166 4880                             l7710 3B5C  
                           l8334 0DC6                             l4990 4032  
                           l9038 252A                             l5960 1802  
                           l6744 576E                             l7536 35F2  
                           l7552 3628                             l7528 35A0  
                           l7472 338C                             l8192 49BA  
                           l8168 4888                             l7720 3BA0  
                           l7704 3B22                             l7632 37DC  
                           l7608 3756                             l8416 1190  
                           l8344 0E6A                             l8336 0E02  
                           l8328 0D7E                             l8272 0B66  
                           l8264 0B30                             l9064 25A4  
                           l5954 17E2                             l5858 1464  
                           l6754 577C                             l7378 5BE8  
                           l7562 364E                             l7546 3614  
                           l7554 362E                             l7490 3430  
                           l8098 53C0                             l8178 4932  
                           l7802 592A                             l7626 37B0  
                           l8450 1338                             l8442 12E0  
                           l8434 12AC                             l8426 1284  
                           l8362 0F7E                             l8338 0E18  
                           l8282 0BDA                             l8258 0B16  
                           l9090 27CC                             l9074 26C6  
                           l5884 157E                             l7820 548E  
                           l7812 5AF6                             l7580 36DE  
                           l7572 36AA                             l7484 3420  
                           l7740 5542                             l7708 3B48  
                           l7636 37F0                             l7628 37B6  
                           l8428 1292                             l8380 0FFC  
                           l8364 0F84                             l8348 0E9C  
                           l8436 12BA                             l8276 0BB0  
                           l9084 2754                             l5878 155E  
                           l6766 57DA                             l7822 54C0  
                           l7486 3426                             l7750 5572  
                           l7734 552C                             l7718 3B96  
                           l8454 1364                             l8446 1308  
                           l8382 1004                             l8390 10A0  
                           l8358 0F06                             l8294 0C24  
                           l8286 0BE0                             l8278 0BCA  
                           l8534 460E                             l9078 274A  
                           l7816 542A                             l7824 54F2  
                           l7808 5AC4                             l7592 3702  
                           l7584 36EA                             l7576 36BC  
                           l7904 2D2E                             l8392 10AE  
                           l8376 0FD0                             l8288 0C0A  
                           l8456 136A                             l8560 472A  
                           l7818 545C                             l7586 36EE  
                           l7746 5560                             l7762 55B0  
                           l8458 138C                             l8570 476A  
                           l7932 4C06                             l7748 556C  
                           l7684 3A78                             l7916 5D2A  
                           l8572 477A                             l7926 4BCC  
                           l7766 55C4                             l7758 55A2  
                           l7790 58E4                             l7782 58BE  
                           l7694 3ACC                             l7678 3A4E  
                           l8398 10C8                             l8590 47EC  
                           l8582 47BC                             l7880 29D6  
                           l8568 4758                             l7962 4CD4  
                           l7794 5908                             l7786 58D2  
                           l7778 58AE                             l7866 45B6  
                           l7858 44BE                             l7890 2ADA  
                           l7972 4D04                             l7788 58DE  
                           l8588 47DA                             l7982 4EE6  
                           l7974 4D14                             l7966 4CE8  
                           l7798 5916                             l7886 2AA8  
                           l8936 222E                             l7898 2C5C  
                           l8970 22C8                             l7988 4F0C  
                           l8980 2370                             l8990 2396  
                           l8982 2378                             STR_1 FF8A  
                           l8992 23A2                             l8976 235E  
                           STR_2 FF60                             STR_3 FF4B  
                           STR_4 FF8A                             STR_5 FFF9  
                           STR_6 FF75                             STR_7 FFBE  
                           STR_8 FF9F                             STR_9 FFB0  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             u6010 0320  
                           u6015 0314                             u6025 0380  
                           u6050 03DA                             u6300 078A  
                           u6220 066E                             u6140 0554  
                           u6055 03CE                             u6305 077E  
                           u6225 0662                             u6145 0548  
                           u6065 043A                             u5610 3FAE  
                           u7220 1484                             u8100 3EF2  
                           u7230 14D0                             u5615 3FA2  
                           u7225 1478                             u5625 400E  
                           u5650 4064                             u7235 14C4  
                           u6540 0ADE                             u6460 09C2  
                           u6380 08A6                             u5820 42F0  
                           u5740 41D8                _F2_Button_Polling 5DF6  
                           u7245 1530                             u7350 1708  
                           u5655 4058                             u7360 1754  
                           u7505 1A38                             u6545 0AD2  
                           u6465 09B6                             u6385 089A  
                           u5905 0152                             u5825 42E4  
                           u5745 41CC                             u5665 40C4  
                           u5930 01AC                             u5850 003A  
                           u7355 16FC                             u8420 5DD4  
                           u7365 1748                             u7375 17B4  
                           u5935 01A0                             u5855 002E  
                           u7480 198C                             u8520 5E0C  
                           u5945 020C                             u5865 009A  
                           u7490 19D8                             u5970 0266  
                           u5890 00F2                             u8435 5DD6  
                           u7485 1980                             u8470 5E28  
                           u7495 19CC                             u8535 5E0E  
                           u5975 025A                             u5895 00E6  
                           u5985 02C6                             u8485 5E2A  
                           u8590 5A98                             u9800 33F0  
                           u8596 5A9A                             u9655 5B9E  
                           u9656 5BA0                             u9665 5BAA  
                           u9666 5BAC                             u9675 5BB6  
                           u9676 5BB8                             u9780 33D6  
                           u9685 5BC2                             u9686 5BC4  
                           u9790 33EE              __size_of_CANSetMask 039E  
                   ?_LCD_goto_xy 0081                             _data 002C  
                           _main 2204               ?_F2_Button_Polling 002D  
      __size_of_LCD_send_command 003A                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 004D  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 00C0  
                  __CFG_IESO$OFF 000000                  ___fldiv@new_exp 0091  
             __size_of_LCD_clear 0032                 __end_of_CAN_Send 5744  
                   _sprintf$4213 0125                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000010              ??_F2_Button_Polling 0072  
       __end_of_LCD_enable_pulse 5DA0                 _CANOperationMode 5E2E  
                _space_available 0261          __size_of_LCD_initialize 016E  
     __size_of_CANreceiveMessage 050C                    ___fltol@sign1 00C2  
                __end_of___fladd 3714                            ?_main 002D  
                __end_of___fldiv 3F7A                  __end_of___awdiv 55CE  
                __end_of___flneg 5C3C                            STR_10 FFEF  
                          STR_11 FFF4                            STR_12 FFEA  
                          STR_13 FFCA                            STR_14 FFDA  
                          STR_15 FFD2                            STR_16 FFE2  
                __end_of___awmod 5934                  __end_of___flmul 3BBA  
                __end_of___flsub 5B4C                  __end_of___fltol 5424  
                __end_of___lldiv 568A                            u10240 3B36  
                          u10160 39F0                            u10165 39E4  
                          u10511 4BE2                            u12200 2830  
                          u11180 10F2                            u12060 2472  
                ___awdiv@divisor 007A                            u10720 535E  
                          u12080 248E                            u12217 5BEA  
                __end_of___llmod 59CE                            u12090 24B8  
                          u10491 4BA8                            u10725 5352  
                          u12190 27B8                            u12086 2490  
                          u12096 24BA                            _T3CON 000FB1  
                          u11970 232C                            u11980 2344  
                          u11986 2346                            i2l400 1F16  
                          i2l401 1F1A                            i2l410 205A  
                          i2l402 1F24                            i2l411 2062  
                          i2l405 1FCE                            i2l422 2FF8  
                          i2l414 2160                            i2l406 1FD2  
                          i2l415 2164                            i2l407 20B0  
                          i2l416 216E                            i2l408 204A  
                          i2l409 2052                            i1l770 0078  
                          i2l380 1BBE                            i2l381 1BC6  
                          i2l390 1FBA                            i2l382 1BCE  
                          i2l391 1D84                            i2l375 1D70  
                          i2l392 1D88                            i2l376 1B3A  
                          i2l393 1E66                            i2l385 1CCC  
                          i2l377 1B3E                            i2l394 1E00  
                          i2l386 1CD0                            i2l378 1C1C  
                          i2l395 1E08                            i2l387 1CDA  
                          i2l379 1BB6                            i2l396 1E10  
                          i2l573 5E56                            i2l397 1E18  
                          i2l568 5DBA                            i2l766 52DC  
                ___awdiv@counter 007C                            _TMR3H 000FB3  
                          _TMR3L 000FB2                _CANisRxReady$3237 003E  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                  __CFG_WRT4$OFF 000000               __size_of_ISR_bassa 00A8  
                  __CFG_WRT5$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
             CANInitialize@flags 0084                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                   __CFG_EBTR4$OFF 000000  
               __end_of_ISR_alta 5318                   __CFG_EBTR5$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
      __end_of_F2_Button_Polling 5E12                  __end_of_dpowers FF4B  
                          _scale 2846                  __end_of_isdigit 5D34  
      __size_of_LCD_shift_cursor 004C                   __pbitbssCOMRAM 0258  
           __end_of_CANisRxReady 5E5A                            tablat 000FF5  
           __end_of_CANisTxReady 5D7E                            status 000FD8  
                __end_of_sprintf 139A              __size_of_LCD_cursor 0032  
                __initialization 5B4C                     __end_of_main 2846  
  __size_of_board_initialization 00A4                    _LCD_goto_line 5424  
              ?_Joystick_Polling 002D               ??_Joystick_Polling 0072  
              ?_LCD_write_string 0083                           ??_main 013E  
      __size_ofi2_CANsendMessage 06DE                    __activetblptr 000003  
                 _JoystickValues 00DC               ??_LCD_write_string 0085  
           __size_of__tdiv_to_l_ 019E                _CANisTxReady$3235 0072  
       __size_of_CAN_interpreter 00AA                __end_of_LCD_clear 5D0A  
          i2CANsendMessage@flags 0045           LCD_write_string@buffer 0083  
                         _ADCON1 000FC1                           _CANCON 000F6F  
               ___llmod@dividend 0072                           ?_scale 0099  
                         _ADRESH 000FC4                 ___awdiv@dividend 0078  
                __CFG_BBSIZ$1024 000000                           i2l6600 3236  
                         i2l6602 3268                           i2l6530 2F84  
                         i2l6522 2F48                           i2l6514 2ED8  
                         i2l6540 2FF2                           i2l6534 2FA2  
                         i2l6526 2F66                           i2l6538 2FC0  
                         i2l6592 31FE                           i2l6584 31C6  
                         i2l6576 3158                           i2l6596 321A  
                         i2l6588 31E2                           i2l8700 1E20  
                         i2l8720 1F0C                           i2l8624 1BD6  
                         i2l8802 2172                           i2l8650 1CDE  
                         i2l8644 1CC2                           i2l8900 5264  
                         i2l8726 1F28                           i2l8920 52D4  
                         i2l8906 527A                           i2l8916 52A6  
                         i2l8776 206A                           i2l8890 5234  
                         i2l8882 5210                           i2l8796 2156  
                         i2l8876 51EE                           i2l8894 523C  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F56  
                         _RXB0D5 000F6B                           _RXB1D1 000F57  
                         _RXB0D6 000F6C                           _RXB1D2 000F58  
                         _RXB0D7 000F6D                           _RXB1D3 000F59  
                         _RXB1D4 000F5A                           _RXB1D5 000F5B  
                         _RXB1D6 000F5C                           _RXB1D7 000F5D  
                         _TXB0D0 000F46                           _TXB0D1 000F47  
                         _TXB0D2 000F48                           _TXB0D3 000F49  
                         _TXB1D0 000F36                           _TXB0D4 000F4A  
                         _TXB1D1 000F37                           _TXB0D5 000F4B  
                         _TXB1D2 000F38                           _TXB0D6 000F4C  
                         _TXB1D3 000F39                           _TXB0D7 000F4D  
                         _TXB2D0 000F26                           _TXB1D4 000F3A  
                         _TXB2D1 000F27                           _TXB1D5 000F3B  
                         _TXB2D2 000F28                           _TXB1D6 000F3C  
                         _TXB2D3 000F29                           _TXB1D7 000F3D  
                         _TXB2D4 000F2A                           _TXB2D5 000F2B  
                         _TXB2D6 000F2C                           _TXB2D7 000F2D  
             CANsendMessage@data 0076               CANsendMessage@tamp 007E  
               __end_of___xxtofl 49CC                  _switch_position 00E6  
               __end_of_delay_ms 5C04            __size_of_CANSetFilter 0B06  
                 __CFG_XINST$OFF 000000                __end_of_ISR_bassa 00C0  
               __end_of__powers_ FF23                       _MotoreFlag 025B  
                 ?_LCD_goto_line 002D                           ___flge 4D30  
                      ??___fladd 00AE                 _delay_set_quartz 5E5A  
                         ___wmul 5C3C                        ??___fldiv 0088  
                      ??___awdiv 007C                        ??___flneg 009D  
                 __CFG_STVREN$ON 000000                        ??___awmod 0076  
                      ??___flmul 0088                        ??___flsub 00C2  
                      ??___fltol 00BE                        ??___lldiv 007A  
                      ??___llmod 007A                     ??_CANSetMask 0077  
        __size_of_LCD_write_char 0096                           _fround 4318  
 LCD_initialize@quartz_frequency 0080                           clear_0 5B52  
                         clear_1 5B5E                           clear_2 5B6E  
               ___awdiv@quotient 007E                  ___awmod@divisor 0074  
           __size_of_LCD_Handler 01F0                  ___awmod@counter 0076  
                __CFG_BOREN$BOHW 000000                _JoystickConstants 00CC  
                      ??_isdigit 0072                     __mediumconst FEBA  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_CAN_Send 002D  
     __size_of_F2_Button_Polling 001C                        ??_sprintf 0123  
                   _CANSetFilter 0000                       ___flge@ff1 0072  
                     ___flge@ff2 0076                     ___xxtofl@arg 007C  
                   ___xxtofl@exp 007B                     ___xxtofl@val 0072  
                     __accesstop 0060          __end_of__initialization 5B86  
             __end_of_CANSetMask 4318                  __CFG_PBADEN$OFF 000000  
                     _SterzoFlag 025D                       ___flneg@f1 0099  
               _LCD_send_command 5B90                    ___rparam_used 000001  
                     ___fltol@f1 00BA             __size_of_LCD_goto_xy 001C  
                 __pcstackCOMRAM 002D                     __pidataBANK0 5E64  
                      ?_ISR_alta 002D                     LCD_goto_xy@x 0082  
                   LCD_goto_xy@y 0081                    __end_of_scale 2D60  
                 _LCD_initialize 5048                _LCD_write_message 5C72  
          CANSetFilter@numBuffer 007B               ?_LCD_write_message 0083  
                     __div_to_l_ 4EC0                     ??_LCD_cursor 007F  
                  _newMessageCan 025F                     _actual_speed 00DE  
          __size_of_CANisRxReady 0016            __size_of_CANisTxReady 0024  
                     ??_CAN_Send 0082                  __div_to_l_@exp1 007F  
            ??_LCD_write_message 0085                  __div_to_l_@cntr 007E  
                        ??_scale 009D                 _LCD_shift_cursor 5AB8  
                __div_to_l_@quot 007A         __end_of_CANOperationMode 5E44  
                     __pbssBANK0 00CC                       __pbssBANK1 0100  
              ??_CAN_interpreter 0072                       _data_brake 00E9  
        __size_of_CANsendMessage 078C                       _data_speed 00EA  
                  __div_to_l_@f1 0072                    __div_to_l_@f2 0076  
                ??_LCD_goto_line 007E               __end_of_LCD_cursor 5CD8  
         __end_of_LCD_initialize 51B6                          ?___flge 0072  
                        ?___wmul 0072                       ??_ISR_alta 0064  
      __end_of_LCD_write_message 5CA6                ?_LCD_enable_pulse 002D  
                        ?_fround 0099                     _CANisRxReady 5E44  
                        _CANSTAT 000F6E               ??_LCD_enable_pulse 007A  
                   _CANisTxReady 5D5A                        ISR_alta@i 004A  
                        _BRGCON1 000F70                          _BRGCON2 000F71  
                        _BRGCON3 000F72                 i2_CANsendMessage 1B26  
    __size_of_PWR_Button_Polling 001C                        ?___xxtofl 0072  
        __size_ofi2_CANisTxReady 001E           __size_of_CANInitialize 01C6  
               LCD_cursor@active 007F                        ?_delay_ms 0078  
                        _RXB0DLC 000F65                          _RXB1DLC 000F55  
                        _RXB0CON 000F60                          _RXB1CON 000F50  
                        _TXB0DLC 000F45                          _TXB1DLC 000F35  
                        _TXB2DLC 000F25              CANsendMessage@flags 0079  
                        _AbsFlag 0258                __end_of__npowers_ FEEF  
                        __Hparam 0000                       _left_speed 0026  
                     _scale$4212 009D                          __Lparam 0000  
               delay_ms@value_ms 0078                  ?_LCD_initialize 002D  
                __size_of___flge 0190                          ___fladd 326C  
                        ___fldiv 3BBA                          ___awdiv 5510  
                        ___flneg 5C04                          ___awmod 5892  
                        ___flmul 3714                          ___flsub 5B04  
                        ___fltol 5318                          ___lldiv 55CE  
                __size_of___wmul 0036                   _LCD_write_char 59CE  
                        ___llmod 5934             CANInitialize@propSeg 0089  
                        __pcinit 5B4C                          _battery 002A  
                __size_of_fround 02F6                          __ramtop 0D00  
            LCD_write_char@value 0082                          __ptext0 2204  
                        __ptext1 57EE                          __ptext2 49CC  
                        __ptext3 3F7A                          __ptext4 0000  
                        __ptext5 5E2E                          __ptext6 5DBE  
                        __ptext7 460E                          __ptext8 0B06  
                        __ptext9 2846                      ?__div_to_l_ 0072  
               LCD_write_char@D0 0081                 LCD_write_char@D1 0080  
               LCD_write_char@D2 007F                 LCD_write_char@D3 007E  
                      _F1_switch 0259                          _dpowers FF23  
                      _F2_switch 025A                          _isdigit 5D0A  
                     ??___xxtofl 0076                 ___awmod@dividend 0072  
                     ??_delay_ms 007A           CANreceiveMessage@error 0048  
   __end_of_board_initialization 5892        __size_of_Joystick_Polling 0054  
       __end_of_delay_set_quartz 5E64                          _sprintf 0B06  
                 __pintcode_body 51B6                        _LCD_clear 5CD8  
           end_of_initialization 5B86        __size_of_LCD_write_string 0026  
                        int_func 51B6                        i2u1222_47 52A0  
                      i2u1143_40 1BF4                        i2u1143_45 1BEA  
                      i2u1144_40 1C3E                        i2u1144_45 1C34  
                      i2u1145_45 1C96                        i2u1170_40 20D2  
                      i2u1170_45 20C8                        i2u1171_45 212A  
                      i2u1156_40 1E3E                        i2u1156_45 1E34  
                      i2u1157_40 1E88                        i2u1157_45 1E7E  
                      i2u1158_45 1EE0                        i2u1169_40 2088  
                      i2u1169_45 207E                        i2u1186_40 520E  
                  _CANInitialize 49CC                  ___lldiv@divisor 0076  
             LCD_cursor@blinking 007E                    _parking_state 00E5  
                ___lldiv@counter 007E           __end_of_LCD_write_char 5A64  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE       __size_of_LCD_write_message 0034  
                 __tdiv_to_l_@f1 0072                   __tdiv_to_l_@f2 0076  
                     _wait_low_1 0262                       _wait_low_2 0263  
                     _wait_low_3 0264                        _ISR_bassa 0018  
                  ??__tdiv_to_l_ 007A                        _PORTAbits 000F80  
                      _PORTBbits 000F81                   CANSetMask@mask 0072  
                      _PORTDbits 000F83                   CANSetMask@tamp 007C  
       __end_of_LCD_send_command 5BCA                   CANSetMask@type 0076  
                    ___fladd@grs 00B9                    ___xxtofl@sign 007A  
                    ___fldiv@grs 0093                      ___fldiv@rem 008D  
              _F1_Button_Polling 5E12                       ?_LCD_clear 002D  
             ?_F1_Button_Polling 002D                __size_of_CAN_Send 00BA  
        _clock_counter_reference 00E0                      ___flmul@grs 008E  
                 _CANsendMessage 139A                 CANInitialize@BRP 0083  
               CANInitialize@SJW 0082                   ?_CANInitialize 0080  
            ??_F1_Button_Polling 0072              __size_of__div_to_l_ 0188  
        LCD_write_integer@F17272 0008                  ?_LCD_write_char 002D  
                  ??_LCD_Handler 00CC         __end_of_LCD_shift_cursor 5B04  
                 __end_of___flge 4EC0                       ?_ISR_bassa 002D  
                 __end_of___wmul 5C72                __size_of_ISR_alta 5310  
              LCD_shift_cursor@i 0080                   __end_of_fround 460E  
                _CAN_interpreter 5744                   i2_CANisTxReady 5DA0  
      __end_of_F1_Button_Polling 5E2E              start_initialization 5B4C  
            __end_of__tdiv_to_l_ 4D30              CANSetMask@numBuffer 007B  
                  _data_speed_rx 0001           __end_of_CANsendMessage 1B26  
              ?_CANOperationMode 002D                    _data_steering 00EB  
                  ??_LCD_goto_xy 0082       i2CANsendMessage@dataLength 0044  
           i2CANsendMessage@data 0042               ??_CANOperationMode 0072  
           i2CANsendMessage@tamp 0060                  ___llmod@divisor 0076  
       __end_ofi2_CANsendMessage 2204       CANInitialize@FilterConfig1 008A  
     CANInitialize@FilterConfig2 008B                  ___llmod@counter 007A  
                       ??___flge 007A             _board_initialization 57EE  
                       ??___wmul 0076                      __pdataBANK0 00EC  
               __CFG_LPT1OSC$OFF 000000                         ??_fround 009D  
         __end_ofi2_CANisTxReady 5DBE                    sprintf@tmpval 0133  
                      ___fladd@a 00AA                        ___fladd@b 00A6  
         CANInitialize@phaseSeg1 0080           CANInitialize@phaseSeg2 0081  
                     fround@prec 00A5              __end_of_LCD_Handler 47FE  
                      ___fldiv@a 0084                        ___fldiv@b 0080  
                      ___flmul@a 0084                        ___flmul@b 0080  
                    __pbssCOMRAM 0001                        ___flsub@a 00BE  
                      ___flsub@b 00BA                    __pcstackBANK0 0060  
                  __pcstackBANK1 0123                      _BRGCON2bits 000F71  
                    _BRGCON3bits 000F72                 _Joystick_Polling 5A64  
              __size_of___xxtofl 01CE        __size_of_LCD_enable_pulse 0022  
                   _isdigit$3795 0073       i2CANsendMessage@identifier 003E  
              _park_assist_state 011B                __size_of_delay_ms 003A  
                    ??_LCD_clear 007E                  ?_CANsendMessage 0072  
        LCD_write_message@buffer 0083                 _LCD_write_string 5D34  
                ??_CANInitialize 0085                      sprintf@flag 012B  
                    sprintf@fval 0139                      sprintf@prec 0137  
               ??_LCD_initialize 0080               CANSetFilter@filter 0072  
      delay_set_quartz@frequency 0072               LCD_send_command@D0 007C  
             LCD_send_command@D1 007B               LCD_send_command@D2 007A  
             LCD_send_command@D3 007D              __end_of_LCD_goto_xy 5DF6  
          __end_of_LCD_goto_line 5510            ?_board_initialization 002D  
                      __pintcode 0008                    __pmediumconst FEBA  
                       ?___fladd 00A6                         ?___fldiv 0080  
                       ?___awdiv 0078                         ?___flneg 0099  
                       ?___awmod 0072                         ?___flmul 0080  
        __end_of_CAN_interpreter 57EE                         ?___flsub 00BA  
                       ?___fltol 00BA                         ?___lldiv 0072  
                       ?___llmod 0072                        __npowers_ FEBB  
                    ??_ISR_bassa 002D                      __pintcodelo 0018  
     __end_of_PWR_Button_Polling 5DDA                  ?i2_CANisTxReady 002D  
                    __tdiv_to_l_ 4B92                     ??__div_to_l_ 007A  
                    _COMSTATbits 000F74                         ?_isdigit 002D  
     __size_of_F1_Button_Polling 001C                         _CAN_Send 568A  
                       ?_sprintf 00C4                   __size_of_scale 051A  
              ?_delay_set_quartz 002D            CANreceiveMessage@tamp 0049  
             ??_delay_set_quartz 0072                   ___wmul@product 0076  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATEbits 000F8D                         _IPR2bits 000FA2  
   _delay_quartz_frequency_value 00EC                         _IPR3bits 000FA5  
                       _PIE2bits 000FA0                         _PIE3bits 000FA3  
             __end_of__div_to_l_ 5048                         _PIR2bits 000FA1  
                       _PIR3bits 000FA4                         i2u830_45 30DE  
                       i2u816_40 2E18                         i2u816_46 2E1A  
                       i2u817_40 2E46                         i2u825_45 2FCC  
                       i2u817_46 2E48                         i2u827_40 30A0  
                       i2u819_45 2E5C                         i2u827_46 30A2  
                       i2u828_40 30CA                         i2u836_45 3242  
                       i2u828_46 30CC                         _RXB0EIDH 000F63  
                       _RXB0EIDL 000F64                         _RXB1EIDH 000F53  
                      _pr_time_1 00D4                        _pr_time_2 00D8  
                       _RXB1EIDL 000F54                        _pr_time_3 0016  
                      _pr_time_4 001A                        _pr_time_5 001E  
                      _set_speed 00E2                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                         _RXB0SIDH 000F61  
                       _RXB0SIDL 000F62                         _RXF0EIDH 000F02  
                       _RXB1SIDH 000F51                         _RXF0EIDL 000F03  
                       _RXB1SIDL 000F52                         _RXF1EIDH 000F06  
                       _RXF1EIDL 000F07                         _RXF2EIDH 000F0A  
                       _RXF2EIDL 000F0B                         _RXF3EIDH 000F0E  
                       _RXF3EIDL 000F0F                         _RXF4EIDH 000F12  
                       _RXF4EIDL 000F13                         _RXF5EIDH 000F16  
                       _RXF5EIDL 000F17                         _RXF0SIDH 000F00  
                       _RXF0SIDL 000F01                         _TXB0EIDH 000F43  
                       _RXF1SIDH 000F04                         _TXB0EIDL 000F44  
                       _RXF1SIDL 000F05                         _TXB1EIDH 000F33  
                       _RXF2SIDH 000F08                         _TXB1EIDL 000F34  
                       _RXF2SIDL 000F09                         _ISR_alta 0008  
                       _TXB2EIDH 000F23                         _RXF3SIDH 000F0C  
                       _TXB2EIDL 000F24                         _RXF3SIDL 000F0D  
                       _RXF4SIDH 000F10                         _RXF4SIDL 000F11  
                       _RXF5SIDH 000F14                         _RXF5SIDL 000F15  
                       _RXM0EIDH 000F1A                         _RXM0EIDL 000F1B  
                       _TXB0SIDH 000F41                         _RXM1EIDH 000F1E  
                       _TXB0SIDL 000F42                         _RXM1EIDL 000F1F  
                       _TXB1SIDH 000F31                         _TXB1SIDL 000F32  
                       _TXB2SIDH 000F21                         _TXB2SIDL 000F22  
                    _LCD_Handler 460E                         _RXM0SIDH 000F18  
                       _RXM0SIDL 000F19                         _RXM1SIDH 000F1C  
                       _RXM1SIDL 000F1D                         _RXERRCNT 000F75  
                       _TXERRCNT 000F76                       _ADCON0bits 000FC2  
                     _ADCON2bits 000FC0                ___wmul@multiplier 0072  
                       _RTR_Flag 025C                ?_LCD_send_command 007A  
               _actual_speed_kmh 000E               ??_LCD_send_command 007D  
                  ?_CANSetFilter 0072                       _CANCONbits 000F6F  
                    _LCD_goto_xy 5DDA                 ??_LCD_write_char 007E  
              LCD_goto_line@line 007E                         __Hrparam 0000  
                   _RXB0SIDLbits 000F62           ??_board_initialization 008C  
                       __Lrparam 0000                     _RXB1SIDLbits 000F52  
               ?_CAN_interpreter 002D                 __size_of___fladd 04A8  
                     _CANSetMask 3F7A                 __size_of___fldiv 03C0  
               __size_of___awdiv 00BE                 __size_of___flneg 0038  
               __size_of___awmod 00A2                 __size_of___flmul 04A6  
              ?_LCD_shift_cursor 007E                 __size_of___flsub 0048  
               __size_of___fltol 010C                 __size_of___lldiv 00BC  
               __size_of___llmod 009A                      _fround$4210 00A1  
                    _fround$4211 009D               ??_LCD_shift_cursor 007F  
                     sprintf@exp 0131                       sprintf@val 012D  
                       ___xxtofl 47FE                     _RXF0SIDLbits 000F01  
               __size_of_isdigit 002A                         _delay_ms 5BCA  
                   _RXF1SIDLbits 000F05                   ??_CANSetFilter 0077  
               _LCD_enable_pulse 5D7E                         __ptext10 5D0A  
                       __ptext11 4318                         __ptext20 5318  
                       __ptext12 3714                         __ptext21 5B04  
                       __ptext13 5892                         __ptext30 5E5A  
                       __ptext22 326C                         __ptext14 5510  
                       __ptext31 5CA6                         __ptext23 5C04  
                       __ptext15 4B92                         __ptext40 5A64  
                       __ptext32 5CD8                         __ptext24 4D30  
                       __ptext16 4EC0                         __ptext41 5DF6  
                       __ptext33 5DDA                         __ptext25 3BBA  
                       __ptext17 47FE                         __ptext50 5DA0  
                       __ptext42 5E12                         __ptext34 5AB8  
                       __ptext26 5D34                         __ptext18 5934  
                       __ptext51 2D60                         __ptext43 5744  
                       __ptext35 5424                         __ptext27 5C72  
                       __ptext19 55CE                         __ptext52 5E44  
                       __ptext44 568A                         __ptext36 5B90  
                       __ptext28 59CE                         __ptext45 139A  
                       __ptext37 5D7E                         __ptext29 5048  
                       __ptext46 5D5A                         __ptext38 5BCA  
                       __ptext39 5C3C                         __ptext49 1B26  
                   _RXF2SIDLbits 000F09                         __powers_ FEEF  
                   _RXF3SIDLbits 000F0D                 __size_of_sprintf 0894  
                   _RXF4SIDLbits 000F11                     _RXF5SIDLbits 000F15  
       CANsendMessage@dataLength 0078                    __size_of_main 0642  
              ?i2_CANsendMessage 003E             CANreceiveMessage@msg 003E  
          LCD_shift_cursor@shift 007F              i2_CANisTxReady$3235 003E  
                   _TXB0SIDLbits 000F42                Joystick_Polling@i 0073  
             ??i2_CANsendMessage 0046                     _TXB1SIDLbits 000F32  
       __end_of_Joystick_Polling 5AB8                     _TXB2SIDLbits 000F22  
                       int$flags 004D        __size_of_CANOperationMode 0016  
                  ?_CANisRxReady 002D                    ?_CANisTxReady 002D  
       __end_of_LCD_write_string 5D5A                      _RXB0DLCbits 000F65  
                    _RXB1DLCbits 000F55                     _RXM0SIDLbits 000F19  
                    _RXB0CONbits 000F60                       _LCD_cursor 5CA6  
                    _RXB1CONbits 000F50                _CANreceiveMessage 2D60  
                   _RXM1SIDLbits 000F1D                       _INTCONbits 000FF2  
                   _set_steering 002B                 ??_CANsendMessage 007A  
             ?_CANreceiveMessage 003E                         isdigit@c 0074  
                       scale@scl 00A1         CANsendMessage@identifier 0072  
                   _time_counter 0022                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 0129  
               __tdiv_to_l_@exp1 0082                        sprintf@sp 00C4  
               __tdiv_to_l_@cntr 0081                 CANSetFilter@tamp 007C  
               __tdiv_to_l_@quot 007D                 CANSetFilter@type 0076  
            ??_CANreceiveMessage 0040                 ___lldiv@dividend 0072  
                    _TXB0DLCbits 000F45                      _right_speed 0028  
                    _TXB1DLCbits 000F35                      _TXB0CONbits 000F40  
                    _TXB2DLCbits 000F25                      _TXB1CONbits 000F30  
                    _TXB2CONbits 000F20                  _display_refresh 025E  
               ??i2_CANisTxReady 003E             CANOperationMode@mode 0072  
                 ??_CANisRxReady 003E                      ?_CANSetMask 0072  
                 ??_CANisTxReady 0072                     ?__tdiv_to_l_ 0072  
      __end_of_CANreceiveMessage 326C                         sprintf@c 013D  
                       sprintf@f 00C6                 ___lldiv@quotient 007A  
LCD_shift_cursor@number_of_shift 007E                    ___fladd@signs 00B6  
             _PWR_Button_Polling 5DBE                     ___fladd@aexp 00B7  
                   ___fladd@bexp 00B8            __end_of_CANInitialize 4B92  
            ?_PWR_Button_Polling 002D                     _power_switch 0260  
