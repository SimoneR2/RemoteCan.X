

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Mar 26 21:30:15 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           	psect	idataBANK0
    71  015A92                     __pidataBANK0:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _delay_quartz_frequency_value
    75  015A92  10                 	db	16
    76                           
    77                           	psect	mediumconst
    78  00FEDC                     __pmediumconst:
    79                           	opt stack 0
    80  00FEDC  00                 	db	0
    81  00FEDD                     __npowers_:
    82                           	opt stack 0
    83  00FEDD  0000               	dw	0
    84  00FEDF  3F80               	dw	16256
    85  00FEE1  CCCD               	dw	52429
    86  00FEE3  3DCC               	dw	15820
    87  00FEE5  D70A               	dw	55050
    88  00FEE7  3C23               	dw	15395
    89  00FEE9  126F               	dw	4719
    90  00FEEB  3A83               	dw	14979
    91  00FEED  B717               	dw	46871
    92  00FEEF  38D1               	dw	14545
    93  00FEF1  C5AC               	dw	50604
    94  00FEF3  3727               	dw	14119
    95  00FEF5  37BD               	dw	14269
    96  00FEF7  3586               	dw	13702
    97  00FEF9  BF95               	dw	49045
    98  00FEFB  33D6               	dw	13270
    99  00FEFD  CC77               	dw	52343
   100  00FEFF  322B               	dw	12843
   101  00FF01  705F               	dw	28767
   102  00FF03  3089               	dw	12425
   103  00FF05  E6FF               	dw	59135
   104  00FF07  2EDB               	dw	11995
   105  00FF09  E508               	dw	58632
   106  00FF0B  1E3C               	dw	7740
   107  00FF0D  4260               	dw	16992
   108  00FF0F  0DA2               	dw	3490
   109  00FF11                     __end_of__npowers_:
   110                           	opt stack 0
   111  00FF11                     __powers_:
   112                           	opt stack 0
   113  00FF11  0000               	dw	0
   114  00FF13  3F80               	dw	16256
   115  00FF15  0000               	dw	0
   116  00FF17  4120               	dw	16672
   117  00FF19  0000               	dw	0
   118  00FF1B  42C8               	dw	17096
   119  00FF1D  0000               	dw	0
   120  00FF1F  447A               	dw	17530
   121  00FF21  4000               	dw	16384
   122  00FF23  461C               	dw	17948
   123  00FF25  5000               	dw	20480
   124  00FF27  47C3               	dw	18371
   125  00FF29  2400               	dw	9216
   126  00FF2B  4974               	dw	18804
   127  00FF2D  9680               	dw	38528
   128  00FF2F  4B18               	dw	19224
   129  00FF31  BC20               	dw	48160
   130  00FF33  4CBE               	dw	19646
   131  00FF35  6B28               	dw	27432
   132  00FF37  4E6E               	dw	20078
   133  00FF39  02F9               	dw	761
   134  00FF3B  5015               	dw	20501
   135  00FF3D  78EC               	dw	30956
   136  00FF3F  60AD               	dw	24749
   137  00FF41  F2CA               	dw	62154
   138  00FF43  7149               	dw	29001
   139  00FF45                     __end_of__powers_:
   140                           	opt stack 0
   141  00FF45                     _dpowers:
   142                           	opt stack 0
   143  00FF45  0001               	dw	1
   144  00FF47  0000               	dw	0
   145  00FF49  000A               	dw	10
   146  00FF4B  0000               	dw	0
   147  00FF4D  0064               	dw	100
   148  00FF4F  0000               	dw	0
   149  00FF51  03E8               	dw	1000
   150  00FF53  0000               	dw	0
   151  00FF55  2710               	dw	10000
   152  00FF57  0000               	dw	0
   153  00FF59  86A0               	dw	34464
   154  00FF5B  0001               	dw	1
   155  00FF5D  4240               	dw	16960
   156  00FF5F  000F               	dw	15
   157  00FF61  9680               	dw	38528
   158  00FF63  0098               	dw	152
   159  00FF65  E100               	dw	57600
   160  00FF67  05F5               	dw	1525
   161  00FF69  CA00               	dw	51712
   162  00FF6B  3B9A               	dw	15258
   163  00FF6D                     __end_of_dpowers:
   164                           	opt stack 0
   165  0000                     _RXB1CON	set	3920
   166  0000                     _RXB1CONbits	set	3920
   167  0000                     _RXB1D0	set	3926
   168  0000                     _RXB1D1	set	3927
   169  0000                     _RXB1D2	set	3928
   170  0000                     _RXB1D3	set	3929
   171  0000                     _RXB1D4	set	3930
   172  0000                     _RXB1D5	set	3931
   173  0000                     _RXB1D6	set	3932
   174  0000                     _RXB1D7	set	3933
   175  0000                     _RXB1DLC	set	3925
   176  0000                     _RXB1DLCbits	set	3925
   177  0000                     _RXB1EIDH	set	3923
   178  0000                     _RXB1EIDL	set	3924
   179  0000                     _RXB1SIDH	set	3921
   180  0000                     _RXB1SIDL	set	3922
   181  0000                     _RXB1SIDLbits	set	3922
   182  0000                     _RXF0EIDH	set	3842
   183  0000                     _RXF0EIDL	set	3843
   184  0000                     _RXF0SIDH	set	3840
   185  0000                     _RXF0SIDL	set	3841
   186  0000                     _RXF0SIDLbits	set	3841
   187  0000                     _RXF1EIDH	set	3846
   188  0000                     _RXF1EIDL	set	3847
   189  0000                     _RXF1SIDH	set	3844
   190  0000                     _RXF1SIDL	set	3845
   191  0000                     _RXF1SIDLbits	set	3845
   192  0000                     _RXF2EIDH	set	3850
   193  0000                     _RXF2EIDL	set	3851
   194  0000                     _RXF2SIDH	set	3848
   195  0000                     _RXF2SIDL	set	3849
   196  0000                     _RXF2SIDLbits	set	3849
   197  0000                     _RXF3EIDH	set	3854
   198  0000                     _RXF3EIDL	set	3855
   199  0000                     _RXF3SIDH	set	3852
   200  0000                     _RXF3SIDL	set	3853
   201  0000                     _RXF3SIDLbits	set	3853
   202  0000                     _RXF4EIDH	set	3858
   203  0000                     _RXF4EIDL	set	3859
   204  0000                     _RXF4SIDH	set	3856
   205  0000                     _RXF4SIDL	set	3857
   206  0000                     _RXF4SIDLbits	set	3857
   207  0000                     _RXF5EIDH	set	3862
   208  0000                     _RXF5EIDL	set	3863
   209  0000                     _RXF5SIDH	set	3860
   210  0000                     _RXF5SIDL	set	3861
   211  0000                     _RXF5SIDLbits	set	3861
   212  0000                     _RXM0EIDH	set	3866
   213  0000                     _RXM0EIDL	set	3867
   214  0000                     _RXM0SIDH	set	3864
   215  0000                     _RXM0SIDL	set	3865
   216  0000                     _RXM0SIDLbits	set	3865
   217  0000                     _RXM1EIDH	set	3870
   218  0000                     _RXM1EIDL	set	3871
   219  0000                     _RXM1SIDH	set	3868
   220  0000                     _RXM1SIDL	set	3869
   221  0000                     _RXM1SIDLbits	set	3869
   222  0000                     _TXB0CONbits	set	3904
   223  0000                     _TXB0D0	set	3910
   224  0000                     _TXB0D1	set	3911
   225  0000                     _TXB0D2	set	3912
   226  0000                     _TXB0D3	set	3913
   227  0000                     _TXB0D4	set	3914
   228  0000                     _TXB0D5	set	3915
   229  0000                     _TXB0D6	set	3916
   230  0000                     _TXB0D7	set	3917
   231  0000                     _TXB0DLC	set	3909
   232  0000                     _TXB0DLCbits	set	3909
   233  0000                     _TXB0EIDH	set	3907
   234  0000                     _TXB0EIDL	set	3908
   235  0000                     _TXB0SIDH	set	3905
   236  0000                     _TXB0SIDL	set	3906
   237  0000                     _TXB0SIDLbits	set	3906
   238  0000                     _TXB1CONbits	set	3888
   239  0000                     _TXB1D0	set	3894
   240  0000                     _TXB1D1	set	3895
   241  0000                     _TXB1D2	set	3896
   242  0000                     _TXB1D3	set	3897
   243  0000                     _TXB1D4	set	3898
   244  0000                     _TXB1D5	set	3899
   245  0000                     _TXB1D6	set	3900
   246  0000                     _TXB1D7	set	3901
   247  0000                     _TXB1DLC	set	3893
   248  0000                     _TXB1DLCbits	set	3893
   249  0000                     _TXB1EIDH	set	3891
   250  0000                     _TXB1EIDL	set	3892
   251  0000                     _TXB1SIDH	set	3889
   252  0000                     _TXB1SIDL	set	3890
   253  0000                     _TXB1SIDLbits	set	3890
   254  0000                     _TXB2CONbits	set	3872
   255  0000                     _TXB2D0	set	3878
   256  0000                     _TXB2D1	set	3879
   257  0000                     _TXB2D2	set	3880
   258  0000                     _TXB2D3	set	3881
   259  0000                     _TXB2D4	set	3882
   260  0000                     _TXB2D5	set	3883
   261  0000                     _TXB2D6	set	3884
   262  0000                     _TXB2D7	set	3885
   263  0000                     _TXB2DLC	set	3877
   264  0000                     _TXB2DLCbits	set	3877
   265  0000                     _TXB2EIDH	set	3875
   266  0000                     _TXB2EIDL	set	3876
   267  0000                     _TXB2SIDH	set	3873
   268  0000                     _TXB2SIDL	set	3874
   269  0000                     _TXB2SIDLbits	set	3874
   270  0000                     _ADCON0bits	set	4034
   271  0000                     _ADCON1	set	4033
   272  0000                     _ADCON2bits	set	4032
   273  0000                     _ADRESH	set	4036
   274  0000                     _BRGCON1	set	3952
   275  0000                     _BRGCON2	set	3953
   276  0000                     _BRGCON2bits	set	3953
   277  0000                     _BRGCON3	set	3954
   278  0000                     _BRGCON3bits	set	3954
   279  0000                     _CANCON	set	3951
   280  0000                     _CANCONbits	set	3951
   281  0000                     _CANSTAT	set	3950
   282  0000                     _COMSTATbits	set	3956
   283  0000                     _INTCONbits	set	4082
   284  0000                     _IPR2bits	set	4002
   285  0000                     _IPR3bits	set	4005
   286  0000                     _LATA	set	3977
   287  0000                     _LATB	set	3978
   288  0000                     _LATC	set	3979
   289  0000                     _LATCbits	set	3979
   290  0000                     _LATD	set	3980
   291  0000                     _LATDbits	set	3980
   292  0000                     _LATE	set	3981
   293  0000                     _LATEbits	set	3981
   294  0000                     _PIE2bits	set	4000
   295  0000                     _PIE3bits	set	4003
   296  0000                     _PIR2bits	set	4001
   297  0000                     _PIR3bits	set	4004
   298  0000                     _PORTAbits	set	3968
   299  0000                     _PORTBbits	set	3969
   300  0000                     _PORTDbits	set	3971
   301  0000                     _RCONbits	set	4048
   302  0000                     _RXB0CON	set	3936
   303  0000                     _RXB0CONbits	set	3936
   304  0000                     _RXB0D0	set	3942
   305  0000                     _RXB0D1	set	3943
   306  0000                     _RXB0D2	set	3944
   307  0000                     _RXB0D3	set	3945
   308  0000                     _RXB0D4	set	3946
   309  0000                     _RXB0D5	set	3947
   310  0000                     _RXB0D6	set	3948
   311  0000                     _RXB0D7	set	3949
   312  0000                     _RXB0DLC	set	3941
   313  0000                     _RXB0DLCbits	set	3941
   314  0000                     _RXB0EIDH	set	3939
   315  0000                     _RXB0EIDL	set	3940
   316  0000                     _RXB0SIDH	set	3937
   317  0000                     _RXB0SIDL	set	3938
   318  0000                     _RXB0SIDLbits	set	3938
   319  0000                     _RXERRCNT	set	3957
   320  0000                     _T3CON	set	4017
   321  0000                     _TMR3H	set	4019
   322  0000                     _TMR3L	set	4018
   323  0000                     _TRISA	set	3986
   324  0000                     _TRISB	set	3987
   325  0000                     _TRISC	set	3988
   326  0000                     _TRISD	set	3989
   327  0000                     _TRISE	set	3990
   328  0000                     _TXERRCNT	set	3958
   329  00FF6D                     STR_3:
   330  00FF6D  54                 	db	84	;'T'
   331  00FF6E  75                 	db	117	;'u'
   332  00FF6F  72                 	db	114	;'r'
   333  00FF70  6E                 	db	110	;'n'
   334  00FF71  20                 	db	32
   335  00FF72  74                 	db	116	;'t'
   336  00FF73  68                 	db	104	;'h'
   337  00FF74  65                 	db	101	;'e'
   338  00FF75  20                 	db	32
   339  00FF76  73                 	db	115	;'s'
   340  00FF77  77                 	db	119	;'w'
   341  00FF78  69                 	db	105	;'i'
   342  00FF79  74                 	db	116	;'t'
   343  00FF7A  63                 	db	99	;'c'
   344  00FF7B  68                 	db	104	;'h'
   345  00FF7C  20                 	db	32
   346  00FF7D  4F                 	db	79	;'O'
   347  00FF7E  4E                 	db	78	;'N'
   348  00FF7F  21                 	db	33
   349  00FF80  20                 	db	32
   350  00FF81  00                 	db	0
   351  00FF82                     STR_2:
   352  00FF82  3D                 	db	61	;'='
   353  00FF83  3D                 	db	61	;'='
   354  00FF84  3E                 	db	62	;'>'
   355  00FF85  20                 	db	32
   356  00FF86  56                 	db	86	;'V'
   357  00FF87  45                 	db	69	;'E'
   358  00FF88  48                 	db	72	;'H'
   359  00FF89  49                 	db	73	;'I'
   360  00FF8A  43                 	db	67	;'C'
   361  00FF8B  4C                 	db	76	;'L'
   362  00FF8C  45                 	db	69	;'E'
   363  00FF8D  20                 	db	32
   364  00FF8E  20                 	db	32
   365  00FF8F  4F                 	db	79	;'O'
   366  00FF90  46                 	db	70	;'F'
   367  00FF91  46                 	db	70	;'F'
   368  00FF92  20                 	db	32
   369  00FF93  3C                 	db	60	;'<'
   370  00FF94  3D                 	db	61	;'='
   371  00FF95  3D                 	db	61	;'='
   372  00FF96  00                 	db	0
   373  00FF97                     STR_5:
   374  00FF97  3D                 	db	61	;'='
   375  00FF98  3D                 	db	61	;'='
   376  00FF99  3D                 	db	61	;'='
   377  00FF9A  20                 	db	32
   378  00FF9B  56                 	db	86	;'V'
   379  00FF9C  45                 	db	69	;'E'
   380  00FF9D  48                 	db	72	;'H'
   381  00FF9E  49                 	db	73	;'I'
   382  00FF9F  43                 	db	67	;'C'
   383  00FFA0  4C                 	db	76	;'L'
   384  00FFA1  45                 	db	69	;'E'
   385  00FFA2  20                 	db	32
   386  00FFA3  44                 	db	68	;'D'
   387  00FFA4  41                 	db	65	;'A'
   388  00FFA5  54                 	db	84	;'T'
   389  00FFA6  41                 	db	65	;'A'
   390  00FFA7  20                 	db	32
   391  00FFA8  3D                 	db	61	;'='
   392  00FFA9  3D                 	db	61	;'='
   393  00FFAA  3D                 	db	61	;'='
   394  00FFAB  00                 	db	0
   395  00FFAC                     STR_1:
   396  00FFAC  3D                 	db	61	;'='
   397  00FFAD  3D                 	db	61	;'='
   398  00FFAE  3D                 	db	61	;'='
   399  00FFAF  3D                 	db	61	;'='
   400  00FFB0  3D                 	db	61	;'='
   401  00FFB1  3D                 	db	61	;'='
   402  00FFB2  3D                 	db	61	;'='
   403  00FFB3  3D                 	db	61	;'='
   404  00FFB4  3D                 	db	61	;'='
   405  00FFB5  3D                 	db	61	;'='
   406  00FFB6  3D                 	db	61	;'='
   407  00FFB7  3D                 	db	61	;'='
   408  00FFB8  3D                 	db	61	;'='
   409  00FFB9  3D                 	db	61	;'='
   410  00FFBA  3D                 	db	61	;'='
   411  00FFBB  3D                 	db	61	;'='
   412  00FFBC  3D                 	db	61	;'='
   413  00FFBD  3D                 	db	61	;'='
   414  00FFBE  3D                 	db	61	;'='
   415  00FFBF  3D                 	db	61	;'='
   416  00FFC0  00                 	db	0
   417  00FFC1                     STR_14:
   418  00FFC1  68                 	db	104	;'h'
   419  00FFC2  6F                 	db	111	;'o'
   420  00FFC3  6C                 	db	108	;'l'
   421  00FFC4  61                 	db	97	;'a'
   422  00FFC5  20                 	db	32
   423  00FFC6  6D                 	db	109	;'m'
   424  00FFC7  75                 	db	117	;'u'
   425  00FFC8  63                 	db	99	;'c'
   426  00FFC9  68                 	db	104	;'h'
   427  00FFCA  61                 	db	97	;'a'
   428  00FFCB  63                 	db	99	;'c'
   429  00FFCC  68                 	db	104	;'h'
   430  00FFCD  6F                 	db	111	;'o'
   431  00FFCE  00                 	db	0
   432  00FFCF                     STR_6:
   433  00FFCF  44                 	db	68	;'D'
   434  00FFD0  69                 	db	105	;'i'
   435  00FFD1  72                 	db	114	;'r'
   436  00FFD2  65                 	db	101	;'e'
   437  00FFD3  63                 	db	99	;'c'
   438  00FFD4  74                 	db	116	;'t'
   439  00FFD5  69                 	db	105	;'i'
   440  00FFD6  6F                 	db	111	;'o'
   441  00FFD7  6E                 	db	110	;'n'
   442  00FFD8  3A                 	db	58	;':'
   443  00FFD9  20                 	db	32
   444  00FFDA  00                 	db	0
   445  00FFDB                     STR_10:
   446  00FFDB  53                 	db	83	;'S'
   447  00FFDC  70                 	db	112	;'p'
   448  00FFDD  65                 	db	101	;'e'
   449  00FFDE  65                 	db	101	;'e'
   450  00FFDF  64                 	db	100	;'d'
   451  00FFE0  3A                 	db	58	;':'
   452  00FFE1  20                 	db	32
   453  00FFE2  25                 	db	37
   454  00FFE3  2E                 	db	46
   455  00FFE4  33                 	db	51	;'3'
   456  00FFE5  66                 	db	102	;'f'
   457  00FFE6  00                 	db	0
   458  00FFE7                     STR_13:
   459  00FFE7  57                 	db	87	;'W'
   460  00FFE8  61                 	db	97	;'a'
   461  00FFE9  69                 	db	105	;'i'
   462  00FFEA  74                 	db	116	;'t'
   463  00FFEB  2E                 	db	46
   464  00FFEC  2E                 	db	46
   465  00FFED  2E                 	db	46
   466  00FFEE  00                 	db	0
   467  00FFEF                     STR_8:
   468  00FFEF  42                 	db	66	;'B'
   469  00FFF0  4B                 	db	75	;'K'
   470  00FFF1  57                 	db	87	;'W'
   471  00FFF2  44                 	db	68	;'D'
   472  00FFF3  00                 	db	0
   473  00FFF4                     STR_11:
   474  00FFF4  4B                 	db	75	;'K'
   475  00FFF5  6D                 	db	109	;'m'
   476  00FFF6  2F                 	db	47
   477  00FFF7  68                 	db	104	;'h'
   478  00FFF8  00                 	db	0
   479  00FFF9                     STR_7:
   480  00FFF9  46                 	db	70	;'F'
   481  00FFFA  57                 	db	87	;'W'
   482  00FFFB  44                 	db	68	;'D'
   483  00FFFC  00                 	db	0
   484  00FFFD                     STR_9:
   485  00FFFD  50                 	db	80	;'P'
   486  00FFFE  00                 	db	0
   487  0000                     
   488                           ; #config settings
   489  00FFFF  00                 	db	0	; dummy byte at the end
   490  0000                     
   491                           	psect	cinit
   492  0157D0                     __pcinit:
   493                           	opt stack 0
   494  0157D0                     start_initialization:
   495                           	opt stack 0
   496  0157D0                     __initialization:
   497                           	opt stack 0
   498                           
   499                           ; Clear objects allocated to BANK1 (12 bytes)
   500  0157D0  EE01  F021         	lfsr	0,__pbssBANK1
   501  0157D4  0E0C               	movlw	12
   502  0157D6                     clear_0:
   503  0157D6  6AEE               	clrf	postinc0,c
   504  0157D8  06E8               	decf	wreg,f,c
   505  0157DA  E1FD               	bnz	clear_0
   506                           
   507                           ; Clear objects allocated to BANK0 (36 bytes)
   508  0157DC  EE00  F0C9         	lfsr	0,__pbssBANK0
   509  0157E0  0E24               	movlw	36
   510  0157E2                     clear_1:
   511  0157E2  6AEE               	clrf	postinc0,c
   512  0157E4  06E8               	decf	wreg,f,c
   513  0157E6  E1FD               	bnz	clear_1
   514                           
   515                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   516  0157E8  6A4D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   517                           
   518                           ; Clear objects allocated to COMRAM (43 bytes)
   519  0157EA  EE00  F001         	lfsr	0,__pbssCOMRAM
   520  0157EE  0E2B               	movlw	43
   521  0157F0                     clear_2:
   522  0157F0  6AEE               	clrf	postinc0,c
   523  0157F2  06E8               	decf	wreg,f,c
   524  0157F4  E1FD               	bnz	clear_2
   525                           
   526                           ; Initialize objects allocated to BANK0 (1 bytes)
   527                           ; load TBLPTR registers with __pidataBANK0
   528  0157F6  0E92               	movlw	low __pidataBANK0
   529  0157F8  6EF6               	movwf	tblptrl,c
   530  0157FA  0E5A               	movlw	high __pidataBANK0
   531  0157FC  6EF7               	movwf	tblptrh,c
   532  0157FE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   533  015800  6EF8               	movwf	tblptru,c
   534  015802  0009               	tblrd		*+	;fetch initializer
   535  015804  CFF5 F0ED          	movff	tablat,__pdataBANK0
   536  015808                     end_of_initialization:
   537                           	opt stack 0
   538  015808                     __end_of__initialization:
   539                           	opt stack 0
   540  015808  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   541  01580A  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   542  01580C  0100               	movlb	0
   543  01580E  EF95  F09A         	goto	_main	;jump to C main() function
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           
   551                           	psect	bitbssCOMRAM
   552  000268                     __pbitbssCOMRAM:
   553                           	opt stack 0
   554  000268                     _AbsFlag:
   555                           	opt stack 0
   556  000268                     	ds	1
   557  000269                     _MotoreFlag:
   558                           	opt stack 0
   559  000269                     	ds	1
   560  00026A                     _RTR_Flag:
   561                           	opt stack 0
   562  00026A                     	ds	1
   563  00026B                     _SterzoFlag:
   564                           	opt stack 0
   565  00026B                     	ds	1
   566  00026C                     _newMessageCan:
   567                           	opt stack 0
   568  00026C                     	ds	1
   569  00026D                     _power_switch:
   570                           	opt stack 0
   571  00026D                     	ds	1
   572  00026E                     _wait_low:
   573                           	opt stack 0
   574  00026E                     	ds	1
   575                           tblptru	equ	0xFF8
   576                           tblptrh	equ	0xFF7
   577                           tblptrl	equ	0xFF6
   578                           tablat	equ	0xFF5
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           
   582                           	psect	bssCOMRAM
   583  000001                     __pbssCOMRAM:
   584                           	opt stack 0
   585  000001                     LCD_write_integer@F17272:
   586                           	opt stack 0
   587  000001                     	ds	6
   588  000007                     _actual_speed:
   589                           	opt stack 0
   590  000007                     	ds	4
   591  00000B                     _actual_speed_kmh:
   592                           	opt stack 0
   593  00000B                     	ds	4
   594  00000F                     _id:
   595                           	opt stack 0
   596  00000F                     	ds	4
   597  000013                     _pr_time_4:
   598                           	opt stack 0
   599  000013                     	ds	4
   600  000017                     _time_counter:
   601                           	opt stack 0
   602  000017                     	ds	4
   603  00001B                     _set_steering:
   604                           	opt stack 0
   605  00001B                     	ds	1
   606  00001C                     _msg:
   607                           	opt stack 0
   608  00001C                     	ds	15
   609  00002B                     _data:
   610                           	opt stack 0
   611  00002B                     	ds	1
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           
   619                           	psect	bssBANK0
   620  0000C9                     __pbssBANK0:
   621                           	opt stack 0
   622  0000C9                     _JoystickConstants:
   623                           	opt stack 0
   624  0000C9                     	ds	8
   625  0000D1                     _pr_time_1:
   626                           	opt stack 0
   627  0000D1                     	ds	4
   628  0000D5                     _pr_time_2:
   629                           	opt stack 0
   630  0000D5                     	ds	4
   631  0000D9                     _pr_time_3:
   632                           	opt stack 0
   633  0000D9                     	ds	4
   634  0000DD                     _JoystickValues:
   635                           	opt stack 0
   636  0000DD                     	ds	2
   637  0000DF                     _clock_counter_reference:
   638                           	opt stack 0
   639  0000DF                     	ds	2
   640  0000E1                     _left_speed:
   641                           	opt stack 0
   642  0000E1                     	ds	2
   643  0000E3                     _right_speed:
   644                           	opt stack 0
   645  0000E3                     	ds	2
   646  0000E5                     _set_speed:
   647                           	opt stack 0
   648  0000E5                     	ds	2
   649  0000E7                     _battery:
   650                           	opt stack 0
   651  0000E7                     	ds	1
   652  0000E8                     _data_brake:
   653                           	opt stack 0
   654  0000E8                     	ds	1
   655  0000E9                     _dir:
   656                           	opt stack 0
   657  0000E9                     	ds	1
   658  0000EA                     _switch_position:
   659                           	opt stack 0
   660  0000EA                     	ds	1
   661  0000EB                     _data_speed:
   662                           	opt stack 0
   663  0000EB                     	ds	1
   664  0000EC                     _data_steering:
   665                           	opt stack 0
   666  0000EC                     	ds	1
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           
   674                           	psect	dataBANK0
   675  0000ED                     __pdataBANK0:
   676                           	opt stack 0
   677  0000ED                     _delay_quartz_frequency_value:
   678                           	opt stack 0
   679  0000ED                     	ds	1
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           
   687                           	psect	bssBANK1
   688  000121                     __pbssBANK1:
   689                           	opt stack 0
   690  000121                     _str:
   691                           	opt stack 0
   692  000121                     	ds	12
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           
   700                           	psect	cstackBANK1
   701  000100                     __pcstackBANK1:
   702                           	opt stack 0
   703  000100                     _sprintf$4193:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x0
   707  000100                     	ds	4
   708  000104                     sprintf@ap:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x4
   712  000104                     	ds	2
   713  000106                     sprintf@flag:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x6
   717  000106                     	ds	2
   718  000108                     sprintf@val:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x8
   722  000108                     	ds	4
   723  00010C                     sprintf@exp:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0xC
   727  00010C                     	ds	2
   728  00010E                     sprintf@tmpval:
   729                           	opt stack 0
   730                           
   731                           ; 4 bytes @ 0xE
   732  00010E                     	ds	4
   733  000112                     sprintf@prec:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x12
   737  000112                     	ds	2
   738  000114                     sprintf@fval:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x14
   742  000114                     	ds	4
   743  000118                     sprintf@c:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x18
   747  000118                     	ds	1
   748  000119                     ??_main:
   749                           
   750                           ; 0 bytes @ 0x19
   751  000119                     	ds	8
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           
   759                           	psect	cstackBANK0
   760  000060                     __pcstackBANK0:
   761                           	opt stack 0
   762  000060                     ??_ISR_alta:
   763                           
   764                           ; 0 bytes @ 0x0
   765  000060                     	ds	14
   766  00006E                     ISR_alta@i:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0xE
   770  00006E                     	ds	1
   771  00006F                     ??_Joystick_Polling:
   772  00006F                     ??_isdigit:
   773  00006F                     ?___wmul:
   774                           	opt stack 0
   775  00006F                     ?___awmod:
   776                           	opt stack 0
   777  00006F                     ?__tdiv_to_l_:
   778                           	opt stack 0
   779  00006F                     ?__div_to_l_:
   780                           	opt stack 0
   781  00006F                     ?___fldiv:
   782                           	opt stack 0
   783  00006F                     ?___flneg:
   784                           	opt stack 0
   785  00006F                     ?___lldiv:
   786                           	opt stack 0
   787  00006F                     ?___llmod:
   788                           	opt stack 0
   789  00006F                     ?___xxtofl:
   790                           	opt stack 0
   791  00006F                     CANOperationMode@mode:
   792                           	opt stack 0
   793  00006F                     _CANisTxReady$3227:
   794                           	opt stack 0
   795  00006F                     delay_set_quartz@frequency:
   796                           	opt stack 0
   797  00006F                     ___wmul@multiplier:
   798                           	opt stack 0
   799  00006F                     ___awmod@dividend:
   800                           	opt stack 0
   801  00006F                     CANsendMessage@identifier:
   802                           	opt stack 0
   803  00006F                     CANSetMask@mask:
   804                           	opt stack 0
   805  00006F                     CANSetFilter@filter:
   806                           	opt stack 0
   807  00006F                     __div_to_l_@f1:
   808                           	opt stack 0
   809  00006F                     ___flge@ff1:
   810                           	opt stack 0
   811  00006F                     ___flneg@f1:
   812                           	opt stack 0
   813  00006F                     __tdiv_to_l_@f1:
   814                           	opt stack 0
   815  00006F                     ___lldiv@dividend:
   816                           	opt stack 0
   817  00006F                     ___llmod@dividend:
   818                           	opt stack 0
   819  00006F                     ___fldiv@b:
   820                           	opt stack 0
   821  00006F                     ___xxtofl@val:
   822                           	opt stack 0
   823                           
   824                           ; 4 bytes @ 0xF
   825  00006F                     	ds	1
   826  000070                     Joystick_Polling@i:
   827                           	opt stack 0
   828  000070                     _isdigit$3771:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x10
   832  000070                     	ds	1
   833  000071                     isdigit@c:
   834                           	opt stack 0
   835  000071                     ___wmul@multiplicand:
   836                           	opt stack 0
   837  000071                     ___awmod@divisor:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x11
   841  000071                     	ds	2
   842  000073                     ??___xxtofl:
   843  000073                     CANSetMask@type:
   844                           	opt stack 0
   845  000073                     CANSetFilter@type:
   846                           	opt stack 0
   847  000073                     ___awmod@counter:
   848                           	opt stack 0
   849  000073                     CANsendMessage@data:
   850                           	opt stack 0
   851  000073                     ___wmul@product:
   852                           	opt stack 0
   853  000073                     __div_to_l_@f2:
   854                           	opt stack 0
   855  000073                     ___flge@ff2:
   856                           	opt stack 0
   857  000073                     __tdiv_to_l_@f2:
   858                           	opt stack 0
   859  000073                     ___lldiv@divisor:
   860                           	opt stack 0
   861  000073                     ___llmod@divisor:
   862                           	opt stack 0
   863  000073                     ___fldiv@a:
   864                           	opt stack 0
   865                           
   866                           ; 4 bytes @ 0x13
   867  000073                     	ds	1
   868  000074                     ??_CANSetMask:
   869  000074                     ??_CANSetFilter:
   870  000074                     ___awmod@sign:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x14
   874  000074                     	ds	1
   875  000075                     ?___awdiv:
   876                           	opt stack 0
   877  000075                     CANsendMessage@dataLength:
   878                           	opt stack 0
   879  000075                     delay_ms@value_ms:
   880                           	opt stack 0
   881  000075                     ___awdiv@dividend:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x15
   885  000075                     	ds	1
   886  000076                     CANsendMessage@flags:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x16
   890  000076                     	ds	1
   891  000077                     ??__tdiv_to_l_:
   892  000077                     ??___fldiv:
   893  000077                     ??_CANsendMessage:
   894  000077                     ??___flge:
   895  000077                     LCD_send_command@D2:
   896                           	opt stack 0
   897  000077                     ___llmod@counter:
   898                           	opt stack 0
   899  000077                     ___xxtofl@sign:
   900                           	opt stack 0
   901  000077                     ___awdiv@divisor:
   902                           	opt stack 0
   903  000077                     __div_to_l_@quot:
   904                           	opt stack 0
   905  000077                     ___lldiv@quotient:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x17
   909  000077                     	ds	1
   910  000078                     CANSetMask@numBuffer:
   911                           	opt stack 0
   912  000078                     CANSetFilter@numBuffer:
   913                           	opt stack 0
   914  000078                     LCD_send_command@D1:
   915                           	opt stack 0
   916  000078                     ___xxtofl@exp:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x18
   920  000078                     	ds	1
   921  000079                     LCD_send_command@D0:
   922                           	opt stack 0
   923  000079                     ___awdiv@counter:
   924                           	opt stack 0
   925  000079                     CANSetMask@tamp:
   926                           	opt stack 0
   927  000079                     CANSetFilter@tamp:
   928                           	opt stack 0
   929  000079                     ___xxtofl@arg:
   930                           	opt stack 0
   931                           
   932                           ; 4 bytes @ 0x19
   933  000079                     	ds	1
   934  00007A                     LCD_send_command@D3:
   935                           	opt stack 0
   936  00007A                     ___awdiv@sign:
   937                           	opt stack 0
   938  00007A                     __tdiv_to_l_@quot:
   939                           	opt stack 0
   940                           
   941                           ; 4 bytes @ 0x1A
   942  00007A                     	ds	1
   943  00007B                     LCD_goto_line@line:
   944                           	opt stack 0
   945  00007B                     LCD_write_char@D3:
   946                           	opt stack 0
   947  00007B                     LCD_cursor@blinking:
   948                           	opt stack 0
   949  00007B                     __div_to_l_@cntr:
   950                           	opt stack 0
   951  00007B                     ___lldiv@counter:
   952                           	opt stack 0
   953  00007B                     ___fldiv@sign:
   954                           	opt stack 0
   955  00007B                     ___awdiv@quotient:
   956                           	opt stack 0
   957  00007B                     CANsendMessage@tamp:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0x1B
   961  00007B                     	ds	1
   962  00007C                     LCD_write_char@D2:
   963                           	opt stack 0
   964  00007C                     LCD_cursor@active:
   965                           	opt stack 0
   966  00007C                     __div_to_l_@exp1:
   967                           	opt stack 0
   968  00007C                     ___fldiv@rem:
   969                           	opt stack 0
   970                           
   971                           ; 4 bytes @ 0x1C
   972  00007C                     	ds	1
   973  00007D                     ??_CAN_interpreter:
   974  00007D                     ?___flmul:
   975                           	opt stack 0
   976  00007D                     CANInitialize@phaseSeg1:
   977                           	opt stack 0
   978  00007D                     LCD_write_char@D1:
   979                           	opt stack 0
   980  00007D                     LCD_initialize@quartz_frequency:
   981                           	opt stack 0
   982  00007D                     ___flmul@b:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x1D
   986  00007D                     	ds	1
   987  00007E                     CANInitialize@phaseSeg2:
   988                           	opt stack 0
   989  00007E                     LCD_write_char@D0:
   990                           	opt stack 0
   991  00007E                     __tdiv_to_l_@cntr:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x1E
   995  00007E                     	ds	1
   996  00007F                     CANInitialize@SJW:
   997                           	opt stack 0
   998  00007F                     LCD_write_char@value:
   999                           	opt stack 0
  1000  00007F                     __tdiv_to_l_@exp1:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x1F
  1004  00007F                     	ds	1
  1005  000080                     CANInitialize@BRP:
  1006                           	opt stack 0
  1007  000080                     LCD_write_message@buffer:
  1008                           	opt stack 0
  1009  000080                     LCD_write_string@buffer:
  1010                           	opt stack 0
  1011  000080                     ___fldiv@new_exp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x20
  1015  000080                     	ds	1
  1016  000081                     CANInitialize@flags:
  1017                           	opt stack 0
  1018  000081                     ___flmul@a:
  1019                           	opt stack 0
  1020                           
  1021                           ; 4 bytes @ 0x21
  1022  000081                     	ds	1
  1023  000082                     ??_CANInitialize:
  1024  000082                     ___fldiv@grs:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x22
  1028  000082                     	ds	3
  1029  000085                     ??___flmul:
  1030                           
  1031                           ; 0 bytes @ 0x25
  1032  000085                     	ds	1
  1033  000086                     CANInitialize@propSeg:
  1034                           	opt stack 0
  1035  000086                     ___fldiv@bexp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x26
  1039  000086                     	ds	1
  1040  000087                     CANInitialize@FilterConfig1:
  1041                           	opt stack 0
  1042  000087                     ___fldiv@aexp:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x27
  1046  000087                     	ds	1
  1047  000088                     CANInitialize@FilterConfig2:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x28
  1051  000088                     	ds	1
  1052  000089                     ___flmul@sign:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0x29
  1056  000089                     	ds	1
  1057  00008A                     ___flmul@aexp:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x2A
  1061  00008A                     	ds	1
  1062  00008B                     ___flmul@grs:
  1063                           	opt stack 0
  1064                           
  1065                           ; 4 bytes @ 0x2B
  1066  00008B                     	ds	4
  1067  00008F                     ___flmul@bexp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x2F
  1071  00008F                     	ds	1
  1072  000090                     ___flmul@prod:
  1073                           	opt stack 0
  1074                           
  1075                           ; 4 bytes @ 0x30
  1076  000090                     	ds	4
  1077  000094                     ___flmul@temp:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x34
  1081  000094                     	ds	2
  1082  000096                     ?_fround:
  1083                           	opt stack 0
  1084  000096                     ?_scale:
  1085                           	opt stack 0
  1086                           
  1087                           ; 4 bytes @ 0x36
  1088  000096                     	ds	4
  1089  00009A                     _fround$4191:
  1090                           	opt stack 0
  1091  00009A                     _scale$4192:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x3A
  1095  00009A                     	ds	4
  1096  00009E                     scale@scl:
  1097                           	opt stack 0
  1098  00009E                     _fround$4190:
  1099                           	opt stack 0
  1100                           
  1101                           ; 4 bytes @ 0x3E
  1102  00009E                     	ds	1
  1103  00009F                     ?___fltol:
  1104                           	opt stack 0
  1105  00009F                     ___fltol@f1:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x3F
  1109  00009F                     	ds	3
  1110  0000A2                     fround@prec:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x42
  1114  0000A2                     	ds	1
  1115  0000A3                     ??___fltol:
  1116  0000A3                     ?___fladd:
  1117                           	opt stack 0
  1118  0000A3                     ___fladd@b:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x43
  1122  0000A3                     	ds	4
  1123  0000A7                     ___fltol@sign1:
  1124                           	opt stack 0
  1125  0000A7                     ___fladd@a:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x47
  1129  0000A7                     	ds	1
  1130  0000A8                     ___fltol@exp1:
  1131                           	opt stack 0
  1132                           
  1133                           ; 1 bytes @ 0x48
  1134  0000A8                     	ds	3
  1135  0000AB                     ??___fladd:
  1136                           
  1137                           ; 0 bytes @ 0x4B
  1138  0000AB                     	ds	8
  1139  0000B3                     ___fladd@signs:
  1140                           	opt stack 0
  1141                           
  1142                           ; 1 bytes @ 0x53
  1143  0000B3                     	ds	1
  1144  0000B4                     ___fladd@aexp:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x54
  1148  0000B4                     	ds	1
  1149  0000B5                     ___fladd@bexp:
  1150                           	opt stack 0
  1151                           
  1152                           ; 1 bytes @ 0x55
  1153  0000B5                     	ds	1
  1154  0000B6                     ___fladd@grs:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x56
  1158  0000B6                     	ds	1
  1159  0000B7                     ?___flsub:
  1160                           	opt stack 0
  1161  0000B7                     ___flsub@b:
  1162                           	opt stack 0
  1163                           
  1164                           ; 4 bytes @ 0x57
  1165  0000B7                     	ds	4
  1166  0000BB                     ___flsub@a:
  1167                           	opt stack 0
  1168                           
  1169                           ; 4 bytes @ 0x5B
  1170  0000BB                     	ds	4
  1171  0000BF                     ?_sprintf:
  1172                           	opt stack 0
  1173  0000BF                     sprintf@sp:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x5F
  1177  0000BF                     	ds	2
  1178  0000C1                     sprintf@f:
  1179                           	opt stack 0
  1180                           
  1181                           ; 2 bytes @ 0x61
  1182  0000C1                     	ds	6
  1183  0000C7                     ??_sprintf:
  1184                           
  1185                           ; 0 bytes @ 0x67
  1186  0000C7                     	ds	2
  1187  0000C9                     tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           
  1194                           ; 0 bytes @ 0x69
  1195                           
  1196                           	psect	cstackCOMRAM
  1197  00002C                     __pcstackCOMRAM:
  1198                           	opt stack 0
  1199  00002C                     ??_ISR_bassa:
  1200  00002C                     
  1201                           ; 1 bytes @ 0x0
  1202  00002C                     	ds	17
  1203  00003D                     _CANisRxReady$3229:
  1204                           	opt stack 0
  1205  00003D                     i2_CANisTxReady$3227:
  1206                           	opt stack 0
  1207  00003D                     CANreceiveMessage@msg:
  1208                           	opt stack 0
  1209  00003D                     i2CANsendMessage@identifier:
  1210                           	opt stack 0
  1211                           
  1212                           ; 4 bytes @ 0x11
  1213  00003D                     	ds	2
  1214  00003F                     ??_CANreceiveMessage:
  1215                           
  1216                           ; 0 bytes @ 0x13
  1217  00003F                     	ds	2
  1218  000041                     i2CANsendMessage@data:
  1219                           	opt stack 0
  1220                           
  1221                           ; 2 bytes @ 0x15
  1222  000041                     	ds	2
  1223  000043                     i2CANsendMessage@dataLength:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x17
  1227  000043                     	ds	1
  1228  000044                     i2CANsendMessage@flags:
  1229                           	opt stack 0
  1230                           
  1231                           ; 1 bytes @ 0x18
  1232  000044                     	ds	1
  1233  000045                     ??i2_CANsendMessage:
  1234                           
  1235                           ; 0 bytes @ 0x19
  1236  000045                     	ds	2
  1237  000047                     CANreceiveMessage@error:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x1B
  1241  000047                     	ds	1
  1242  000048                     CANreceiveMessage@tamp:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x1C
  1246  000048                     	ds	1
  1247  000049                     i2CANsendMessage@tamp:
  1248                           	opt stack 0
  1249                           
  1250                           ; 4 bytes @ 0x1D
  1251  000049                     	ds	4
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           
  1259 ;;
  1260 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1261 ;;
  1262 ;; *************** function _main *****************
  1263 ;; Defined at:
  1264 ;;		line 111 in file "RemoteCan.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;		None               void
  1271 ;; Registers used:
  1272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1282 ;;Total ram usage:        8 bytes
  1283 ;; Hardware stack levels required when called:   10
  1284 ;; This function calls:
  1285 ;;		_CAN_Send
  1286 ;;		_CAN_interpreter
  1287 ;;		_Joystick_Polling
  1288 ;;		_LCD_Handler
  1289 ;;		_LCD_clear
  1290 ;;		_LCD_goto_line
  1291 ;;		_LCD_initialize
  1292 ;;		_LCD_write_message
  1293 ;;		_PWR_Button_Polling
  1294 ;;		___flmul
  1295 ;;		___fltol
  1296 ;;		___xxtofl
  1297 ;;		_board_initialization
  1298 ;;		_delay_ms
  1299 ;; This function is called by:
  1300 ;;		Startup code after reset
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text0
  1305  01352A                     __ptext0:
  1306                           	opt stack 0
  1307  01352A                     _main:
  1308                           	opt stack 21
  1309                           
  1310                           ;RemoteCan.c: 112: board_initialization();
  1311                           
  1312                           ;incstack = 0
  1313  01352A  EC47  F0A9         	call	_board_initialization	;wreg free
  1314                           
  1315                           ;RemoteCan.c: 113: JoystickConstants[0] = 0.703;
  1316  01352E  0ECF               	movlw	207
  1317  013530  0100               	movlb	0	; () banked
  1318  013532  6FC9               	movwf	_JoystickConstants& (0+255),b	;volatile
  1319  013534  0EF7               	movlw	247
  1320  013536  6FCA               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1321  013538  0E33               	movlw	51
  1322  01353A  6FCB               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1323  01353C  0E3F               	movlw	63
  1324  01353E  6FCC               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;RemoteCan.c: 114: JoystickConstants[1] = 35;
  1328  013540  0E00               	movlw	0
  1329  013542  0100               	movlb	0	; () banked
  1330  013544  6FCD               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1331  013546  0E00               	movlw	0
  1332  013548  6FCE               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1333  01354A  0E0C               	movlw	12
  1334  01354C  6FCF               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1335  01354E  0E42               	movlw	66
  1336  013550  6FD0               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1337  013552                     l8788:
  1338                           
  1339                           ;RemoteCan.c: 117: PWR_Button_Polling();
  1340  013552  EC20  F0AD         	call	_PWR_Button_Polling	;wreg free
  1341                           
  1342                           ;RemoteCan.c: 118: if (power_switch == 0) {
  1343  013556  BA4D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1344  013558  D0A3               	goto	l8820
  1345                           
  1346                           ;RemoteCan.c: 119: dir = 0;
  1347  01355A  0E00               	movlw	0
  1348  01355C  0100               	movlb	0	; () banked
  1349  01355E  6FE9               	movwf	_dir& (0+255),b	;volatile
  1350                           
  1351                           ;RemoteCan.c: 120: set_speed = 0;
  1352  013560  0E00               	movlw	0
  1353  013562  0100               	movlb	0	; () banked
  1354  013564  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1355  013566  0E00               	movlw	0
  1356  013568  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  1357                           
  1358                           ;RemoteCan.c: 121: data_steering [0] = 90;
  1359  01356A  0E5A               	movlw	90
  1360  01356C  0100               	movlb	0	; () banked
  1361  01356E  6FEC               	movwf	_data_steering& (0+255),b
  1362                           
  1363                           ;RemoteCan.c: 122: data_brake [0] = 0;
  1364  013570  0E00               	movlw	0
  1365  013572  0100               	movlb	0	; () banked
  1366  013574  6FE8               	movwf	_data_brake& (0+255),b
  1367                           
  1368                           ;RemoteCan.c: 123: data_brake [1] = 1;
  1369  013576  0E01               	movlw	1
  1370  013578  0100               	movlb	0	; () banked
  1371  01357A  6FE9               	movwf	(_data_brake+1)& (0+255),b
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;RemoteCan.c: 124: CAN_Send();
  1375  01357C  EC59  F0AB         	call	_CAN_Send	;wreg free
  1376                           
  1377                           ;RemoteCan.c: 125: while (power_switch == 0) {
  1378  013580  D08C               	goto	l8818
  1379  013582                     l8796:
  1380                           
  1381                           ;RemoteCan.c: 126: LCD_clear();
  1382  013582  ECAD  F0AC         	call	_LCD_clear	;wreg free
  1383                           
  1384                           ;RemoteCan.c: 127: delay_ms(10);
  1385  013586  0E00               	movlw	0
  1386  013588  0100               	movlb	0	; () banked
  1387  01358A  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1388  01358C  0E0A               	movlw	10
  1389  01358E  6F75               	movwf	delay_ms@value_ms& (0+255),b
  1390  013590  EC26  F0AC         	call	_delay_ms	;wreg free
  1391                           
  1392                           ;RemoteCan.c: 128: LCD_initialize (16);
  1393  013594  0E10               	movlw	16
  1394  013596  ECE8  F0A5         	call	_LCD_initialize
  1395                           
  1396                           ;RemoteCan.c: 129: LCD_goto_line(1);
  1397  01359A  0E01               	movlw	1
  1398  01359C  EC62  F0A8         	call	_LCD_goto_line
  1399                           
  1400                           ;RemoteCan.c: 130: LCD_write_message("====================");
  1401  0135A0  0EAC               	movlw	low STR_1
  1402  0135A2  0100               	movlb	0	; () banked
  1403  0135A4  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1404  0135A6  0EFF               	movlw	high STR_1
  1405  0135A8  0100               	movlb	0	; () banked
  1406  0135AA  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1407  0135AC  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  1408                           
  1409                           ;RemoteCan.c: 131: LCD_goto_line(2);
  1410  0135B0  0E02               	movlw	2
  1411  0135B2  EC62  F0A8         	call	_LCD_goto_line
  1412                           
  1413                           ;RemoteCan.c: 132: LCD_write_message("==> VEHICLE  OFF <==");
  1414  0135B6  0E82               	movlw	low STR_2
  1415  0135B8  0100               	movlb	0	; () banked
  1416  0135BA  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1417  0135BC  0EFF               	movlw	high STR_2
  1418  0135BE  0100               	movlb	0	; () banked
  1419  0135C0  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1420  0135C2  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  1421                           
  1422                           ;RemoteCan.c: 133: LCD_goto_line(3);
  1423  0135C6  0E03               	movlw	3
  1424  0135C8  EC62  F0A8         	call	_LCD_goto_line
  1425                           
  1426                           ;RemoteCan.c: 134: LCD_write_message("Turn the switch ON! ");
  1427  0135CC  0E6D               	movlw	low STR_3
  1428  0135CE  0100               	movlb	0	; () banked
  1429  0135D0  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1430  0135D2  0EFF               	movlw	high STR_3
  1431  0135D4  0100               	movlb	0	; () banked
  1432  0135D6  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1433  0135D8  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  1434                           
  1435                           ;RemoteCan.c: 135: LCD_goto_line(4);
  1436  0135DC  0E04               	movlw	4
  1437  0135DE  EC62  F0A8         	call	_LCD_goto_line
  1438                           
  1439                           ;RemoteCan.c: 136: LCD_write_message("====================");
  1440  0135E2  0EAC               	movlw	low STR_1
  1441  0135E4  0100               	movlb	0	; () banked
  1442  0135E6  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1443  0135E8  0EFF               	movlw	high STR_1
  1444  0135EA  0100               	movlb	0	; () banked
  1445  0135EC  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1446  0135EE  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  1447                           
  1448                           ;RemoteCan.c: 137: if ((time_counter - pr_time_1) >= 30) {
  1449  0135F2  C0D1  F119         	movff	_pr_time_1,??_main	;volatile
  1450  0135F6  C0D2  F11A         	movff	_pr_time_1+1,??_main+1	;volatile
  1451  0135FA  C0D3  F11B         	movff	_pr_time_1+2,??_main+2	;volatile
  1452  0135FE  C0D4  F11C         	movff	_pr_time_1+3,??_main+3	;volatile
  1453  013602  0101               	movlb	1	; () banked
  1454  013604  1F19               	comf	??_main& (0+255),f,b
  1455  013606  1F1A               	comf	(??_main+1)& (0+255),f,b
  1456  013608  1F1B               	comf	(??_main+2)& (0+255),f,b
  1457  01360A  1F1C               	comf	(??_main+3)& (0+255),f,b
  1458  01360C  2B19               	incf	??_main& (0+255),f,b
  1459  01360E  0E00               	movlw	0
  1460  013610  231A               	addwfc	(??_main+1)& (0+255),f,b
  1461  013612  231B               	addwfc	(??_main+2)& (0+255),f,b
  1462  013614  231C               	addwfc	(??_main+3)& (0+255),f,b
  1463  013616  5017               	movf	_time_counter,w,c	;volatile
  1464  013618  0101               	movlb	1	; () banked
  1465  01361A  2519               	addwf	??_main& (0+255),w,b
  1466  01361C  0101               	movlb	1	; () banked
  1467  01361E  6F1D               	movwf	(??_main+4)& (0+255),b
  1468  013620  5018               	movf	_time_counter+1,w,c	;volatile
  1469  013622  0101               	movlb	1	; () banked
  1470  013624  211A               	addwfc	(??_main+1)& (0+255),w,b
  1471  013626  0101               	movlb	1	; () banked
  1472  013628  6F1E               	movwf	(??_main+5)& (0+255),b
  1473  01362A  5019               	movf	_time_counter+2,w,c	;volatile
  1474  01362C  0101               	movlb	1	; () banked
  1475  01362E  211B               	addwfc	(??_main+2)& (0+255),w,b
  1476  013630  0101               	movlb	1	; () banked
  1477  013632  6F1F               	movwf	(??_main+6)& (0+255),b
  1478  013634  501A               	movf	_time_counter+3,w,c	;volatile
  1479  013636  0101               	movlb	1	; () banked
  1480  013638  211C               	addwfc	(??_main+3)& (0+255),w,b
  1481  01363A  0101               	movlb	1	; () banked
  1482  01363C  6F20               	movwf	(??_main+7)& (0+255),b
  1483  01363E  0101               	movlb	1	; () banked
  1484  013640  5120               	movf	(??_main+7)& (0+255),w,b
  1485  013642  0101               	movlb	1	; () banked
  1486  013644  111F               	iorwf	(??_main+6)& (0+255),w,b
  1487  013646  0101               	movlb	1	; () banked
  1488  013648  111E               	iorwf	(??_main+5)& (0+255),w,b
  1489  01364A  E105               	bnz	u11570
  1490  01364C  0E1E               	movlw	30
  1491  01364E  0101               	movlb	1	; () banked
  1492  013650  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1493  013652  A0D8               	btfss	status,0,c
  1494  013654  D019               	goto	l8814
  1495  013656                     u11570:
  1496                           
  1497                           ; BSR set to: 1
  1498                           ;RemoteCan.c: 138: pr_time_1 = time_counter;
  1499  013656  C017  F0D1         	movff	_time_counter,_pr_time_1	;volatile
  1500  01365A  C018  F0D2         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1501  01365E  C019  F0D3         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1502  013662  C01A  F0D4         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1503                           
  1504                           ; BSR set to: 1
  1505                           ;RemoteCan.c: 139: PORTDbits.RD7 = ~PORTDbits.RD7;
  1506  013666  AE83               	btfss	3971,7,c	;volatile
  1507  013668  D002               	goto	u11580
  1508  01366A  0E01               	movlw	1
  1509  01366C  D001               	goto	u11586
  1510  01366E                     u11580:
  1511  01366E  0E00               	movlw	0
  1512  013670                     u11586:
  1513  013670  0AFF               	xorlw	255
  1514  013672  0101               	movlb	1	; () banked
  1515  013674  6F19               	movwf	??_main& (0+255),b
  1516  013676  0101               	movlb	1	; () banked
  1517  013678  3319               	rrcf	??_main& (0+255),f,b
  1518  01367A  3319               	rrcf	??_main& (0+255),f,b
  1519  01367C  5083               	movf	3971,w,c	;volatile
  1520  01367E  0101               	movlb	1	; () banked
  1521  013680  1919               	xorwf	??_main& (0+255),w,b
  1522  013682  0B7F               	andlw	-129
  1523  013684  1919               	xorwf	??_main& (0+255),w,b
  1524  013686  6E83               	movwf	3971,c	;volatile
  1525  013688                     l8814:
  1526                           
  1527                           ; BSR set to: 1
  1528                           ;RemoteCan.c: 140: }
  1529                           ;RemoteCan.c: 141: PWR_Button_Polling();
  1530  013688  EC20  F0AD         	call	_PWR_Button_Polling	;wreg free
  1531                           
  1532                           ;RemoteCan.c: 142: delay_ms(300);
  1533  01368C  0E01               	movlw	1
  1534  01368E  0100               	movlb	0	; () banked
  1535  013690  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1536  013692  0E2C               	movlw	44
  1537  013694  6F75               	movwf	delay_ms@value_ms& (0+255),b
  1538  013696  EC26  F0AC         	call	_delay_ms	;wreg free
  1539  01369A                     l8818:
  1540  01369A  AA4D               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1541  01369C  D772               	goto	l8796
  1542                           
  1543                           ;RemoteCan.c: 143: }
  1544                           ;RemoteCan.c: 144: PORTDbits.RD7 = 0;
  1545  01369E  9E83               	bcf	3971,7,c	;volatile
  1546  0136A0                     l8820:
  1547                           
  1548                           ;RemoteCan.c: 145: }
  1549                           ;RemoteCan.c: 147: Joystick_Polling();
  1550  0136A0  EC9A  F0AB         	call	_Joystick_Polling	;wreg free
  1551                           
  1552                           ;RemoteCan.c: 150: if (PORTAbits.RA2 == 1) {
  1553  0136A4  A480               	btfss	3968,2,c	;volatile
  1554  0136A6  D004               	goto	l749
  1555                           
  1556                           ;RemoteCan.c: 151: switch_position = 0;
  1557  0136A8  0E00               	movlw	0
  1558  0136AA  0100               	movlb	0	; () banked
  1559  0136AC  6FEA               	movwf	_switch_position& (0+255),b	;volatile
  1560                           
  1561                           ;RemoteCan.c: 152: } else {
  1562  0136AE  D00D               	goto	l8830
  1563  0136B0                     l749:
  1564                           
  1565                           ;RemoteCan.c: 153: if (PORTAbits.RA3 == 0) {
  1566  0136B0  B680               	btfsc	3968,3,c	;volatile
  1567  0136B2  D005               	goto	l8828
  1568                           
  1569                           ;RemoteCan.c: 154: switch_position = 1;
  1570  0136B4  0E01               	movlw	1
  1571  0136B6  0100               	movlb	0	; () banked
  1572  0136B8  6FEA               	movwf	_switch_position& (0+255),b	;volatile
  1573                           
  1574                           ;RemoteCan.c: 155: dir = 0;
  1575  0136BA  0E00               	movlw	0
  1576  0136BC  D004               	goto	L1
  1577  0136BE                     l8828:
  1578                           
  1579                           ;RemoteCan.c: 157: switch_position = 2;
  1580  0136BE  0E02               	movlw	2
  1581  0136C0  0100               	movlb	0	; () banked
  1582  0136C2  6FEA               	movwf	_switch_position& (0+255),b	;volatile
  1583                           
  1584                           ;RemoteCan.c: 158: dir = 1;
  1585  0136C4  0E01               	movlw	1
  1586  0136C6                     L1:
  1587  0136C6  0100               	movlb	0	; () banked
  1588  0136C8  6FE9               	movwf	_dir& (0+255),b	;volatile
  1589  0136CA                     l8830:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;RemoteCan.c: 159: }
  1593                           ;RemoteCan.c: 160: }
  1594                           ;RemoteCan.c: 162: data_steering [0] = (JoystickValues[0])*(JoystickConstants[0]);
  1595  0136CA  C0C9  F081         	movff	_JoystickConstants,___flmul@a	;volatile
  1596  0136CE  C0CA  F082         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1597  0136D2  C0CB  F083         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1598  0136D6  C0CC  F084         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1599  0136DA  0100               	movlb	0	; () banked
  1600  0136DC  51DD               	movf	_JoystickValues& (0+255),w,b	;volatile
  1601  0136DE  0100               	movlb	0	; () banked
  1602  0136E0  6F6F               	movwf	___xxtofl@val& (0+255),b
  1603  0136E2  6B70               	clrf	(___xxtofl@val+1)& (0+255),b
  1604  0136E4  6B71               	clrf	(___xxtofl@val+2)& (0+255),b
  1605  0136E6  6B72               	clrf	(___xxtofl@val+3)& (0+255),b
  1606  0136E8  0E00               	movlw	0
  1607  0136EA  ECC3  F0A1         	call	___xxtofl
  1608  0136EE  C06F  F07D         	movff	?___xxtofl,___flmul@b
  1609  0136F2  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  1610  0136F6  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  1611  0136FA  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  1612  0136FE  EC42  F098         	call	___flmul	;wreg free
  1613  013702  C07D  F09F         	movff	?___flmul,___fltol@f1
  1614  013706  C07E  F0A0         	movff	?___flmul+1,___fltol@f1+1
  1615  01370A  C07F  F0A1         	movff	?___flmul+2,___fltol@f1+2
  1616  01370E  C080  F0A2         	movff	?___flmul+3,___fltol@f1+3
  1617  013712  ECDC  F0A7         	call	___fltol	;wreg free
  1618  013716  0100               	movlb	0	; () banked
  1619  013718  519F               	movf	?___fltol& (0+255),w,b
  1620  01371A  0100               	movlb	0	; () banked
  1621  01371C  6FEC               	movwf	_data_steering& (0+255),b
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;RemoteCan.c: 163: if (switch_position != 0) {
  1625  01371E  0100               	movlb	0	; () banked
  1626  013720  51EA               	movf	_switch_position& (0+255),w,b	;volatile
  1627  013722  B4D8               	btfsc	status,2,c
  1628  013724  D088               	goto	l8844
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;RemoteCan.c: 164: if (JoystickValues[1] > 132) {
  1632  013726  0E84               	movlw	132
  1633  013728  0100               	movlb	0	; () banked
  1634  01372A  65DE               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  1635  01372C  D042               	goto	l8840
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;RemoteCan.c: 165: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1639  01372E  C0CD  F081         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1640  013732  C0CE  F082         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1641  013736  C0CF  F083         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1642  01373A  C0D0  F084         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1643  01373E  0E7E               	movlw	126
  1644  013740  0101               	movlb	1	; () banked
  1645  013742  6F19               	movwf	??_main& (0+255),b
  1646  013744  0EFF               	movlw	255
  1647  013746  0101               	movlb	1	; () banked
  1648  013748  6F1A               	movwf	(??_main+1)& (0+255),b
  1649  01374A  0100               	movlb	0	; () banked
  1650  01374C  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1651  01374E  0101               	movlb	1	; () banked
  1652  013750  6F1B               	movwf	(??_main+2)& (0+255),b
  1653  013752  6B1C               	clrf	(??_main+3)& (0+255),b
  1654  013754  0101               	movlb	1	; () banked
  1655  013756  5119               	movf	??_main& (0+255),w,b
  1656  013758  0101               	movlb	1	; () banked
  1657  01375A  271B               	addwf	(??_main+2)& (0+255),f,b
  1658  01375C  0101               	movlb	1	; () banked
  1659  01375E  511A               	movf	(??_main+1)& (0+255),w,b
  1660  013760  0101               	movlb	1	; () banked
  1661  013762  231C               	addwfc	(??_main+3)& (0+255),f,b
  1662  013764  C11B  F06F         	movff	??_main+2,___xxtofl@val
  1663  013768  C11C  F070         	movff	??_main+3,___xxtofl@val+1
  1664  01376C  0100               	movlb	0	; () banked
  1665  01376E  0E00               	movlw	0
  1666  013770  BF70               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1667  013772  0EFF               	movlw	-1
  1668  013774  6F71               	movwf	(___xxtofl@val+2)& (0+255),b
  1669  013776  6F72               	movwf	(___xxtofl@val+3)& (0+255),b
  1670  013778  0E01               	movlw	1
  1671  01377A  ECC3  F0A1         	call	___xxtofl
  1672  01377E  C06F  F07D         	movff	?___xxtofl,___flmul@b
  1673  013782  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  1674  013786  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  1675  01378A  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  1676  01378E  EC42  F098         	call	___flmul	;wreg free
  1677  013792  C07D  F09F         	movff	?___flmul,___fltol@f1
  1678  013796  C07E  F0A0         	movff	?___flmul+1,___fltol@f1+1
  1679  01379A  C07F  F0A1         	movff	?___flmul+2,___fltol@f1+2
  1680  01379E  C080  F0A2         	movff	?___flmul+3,___fltol@f1+3
  1681  0137A2  ECDC  F0A7         	call	___fltol	;wreg free
  1682  0137A6  C09F  F0E5         	movff	?___fltol,_set_speed	;volatile
  1683  0137AA  C0A0  F0E6         	movff	?___fltol+1,_set_speed+1	;volatile
  1684                           
  1685                           ;RemoteCan.c: 166: data_brake [0] = 0;
  1686  0137AE  0E00               	movlw	0
  1687  0137B0  D040               	goto	L2
  1688  0137B2                     l8840:
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;RemoteCan.c: 168: set_speed = 0;
  1692  0137B2  0E00               	movlw	0
  1693  0137B4  0100               	movlb	0	; () banked
  1694  0137B6  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1695  0137B8  0E00               	movlw	0
  1696  0137BA  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;RemoteCan.c: 169: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  1700  0137BC  0E33               	movlw	51
  1701  0137BE  0100               	movlb	0	; () banked
  1702  0137C0  6F81               	movwf	___flmul@a& (0+255),b
  1703  0137C2  0E33               	movlw	51
  1704  0137C4  6F82               	movwf	(___flmul@a+1)& (0+255),b
  1705  0137C6  0EF3               	movlw	243
  1706  0137C8  6F83               	movwf	(___flmul@a+2)& (0+255),b
  1707  0137CA  0E3F               	movlw	63
  1708  0137CC  6F84               	movwf	(___flmul@a+3)& (0+255),b
  1709  0137CE  0100               	movlb	0	; () banked
  1710  0137D0  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  1711  0137D2  0101               	movlb	1	; () banked
  1712  0137D4  6F19               	movwf	??_main& (0+255),b
  1713  0137D6  6B1A               	clrf	(??_main+1)& (0+255),b
  1714  0137D8  0101               	movlb	1	; () banked
  1715  0137DA  1F19               	comf	??_main& (0+255),f,b
  1716  0137DC  1F1A               	comf	(??_main+1)& (0+255),f,b
  1717  0137DE  4B19               	infsnz	??_main& (0+255),f,b
  1718  0137E0  2B1A               	incf	(??_main+1)& (0+255),f,b
  1719  0137E2  0E82               	movlw	130
  1720  0137E4  0101               	movlb	1	; () banked
  1721  0137E6  2719               	addwf	??_main& (0+255),f,b
  1722  0137E8  0E00               	movlw	0
  1723  0137EA  231A               	addwfc	(??_main+1)& (0+255),f,b
  1724  0137EC  C119  F06F         	movff	??_main,___xxtofl@val
  1725  0137F0  C11A  F070         	movff	??_main+1,___xxtofl@val+1
  1726  0137F4  0100               	movlb	0	; () banked
  1727  0137F6  0E00               	movlw	0
  1728  0137F8  BF70               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1729  0137FA  0EFF               	movlw	-1
  1730  0137FC  6F71               	movwf	(___xxtofl@val+2)& (0+255),b
  1731  0137FE  6F72               	movwf	(___xxtofl@val+3)& (0+255),b
  1732  013800  0E01               	movlw	1
  1733  013802  ECC3  F0A1         	call	___xxtofl
  1734  013806  C06F  F07D         	movff	?___xxtofl,___flmul@b
  1735  01380A  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  1736  01380E  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  1737  013812  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  1738  013816  EC42  F098         	call	___flmul	;wreg free
  1739  01381A  C07D  F09F         	movff	?___flmul,___fltol@f1
  1740  01381E  C07E  F0A0         	movff	?___flmul+1,___fltol@f1+1
  1741  013822  C07F  F0A1         	movff	?___flmul+2,___fltol@f1+2
  1742  013826  C080  F0A2         	movff	?___flmul+3,___fltol@f1+3
  1743  01382A  ECDC  F0A7         	call	___fltol	;wreg free
  1744  01382E  0100               	movlb	0	; () banked
  1745  013830  519F               	movf	?___fltol& (0+255),w,b
  1746  013832                     L2:
  1747  013832  0100               	movlb	0	; () banked
  1748  013834  6FE8               	movwf	_data_brake& (0+255),b
  1749  013836                     l8844:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;RemoteCan.c: 170: }
  1753                           ;RemoteCan.c: 171: }
  1754                           ;RemoteCan.c: 173: if (newMessageCan == 1) {
  1755  013836  A84D               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1756  013838  D003               	goto	l8850
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;RemoteCan.c: 174: CAN_interpreter();
  1760  01383A  ECD8  F0A8         	call	_CAN_interpreter	;wreg free
  1761                           
  1762                           ;RemoteCan.c: 175: newMessageCan = 0;
  1763  01383E  984D               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  1764  013840                     l8850:
  1765                           
  1766                           ;RemoteCan.c: 176: }
  1767                           ;RemoteCan.c: 178: if ((time_counter - pr_time_2) >= 2) {
  1768  013840  C0D5  F119         	movff	_pr_time_2,??_main	;volatile
  1769  013844  C0D6  F11A         	movff	_pr_time_2+1,??_main+1	;volatile
  1770  013848  C0D7  F11B         	movff	_pr_time_2+2,??_main+2	;volatile
  1771  01384C  C0D8  F11C         	movff	_pr_time_2+3,??_main+3	;volatile
  1772  013850  0101               	movlb	1	; () banked
  1773  013852  1F19               	comf	??_main& (0+255),f,b
  1774  013854  1F1A               	comf	(??_main+1)& (0+255),f,b
  1775  013856  1F1B               	comf	(??_main+2)& (0+255),f,b
  1776  013858  1F1C               	comf	(??_main+3)& (0+255),f,b
  1777  01385A  2B19               	incf	??_main& (0+255),f,b
  1778  01385C  0E00               	movlw	0
  1779  01385E  231A               	addwfc	(??_main+1)& (0+255),f,b
  1780  013860  231B               	addwfc	(??_main+2)& (0+255),f,b
  1781  013862  231C               	addwfc	(??_main+3)& (0+255),f,b
  1782  013864  5017               	movf	_time_counter,w,c	;volatile
  1783  013866  0101               	movlb	1	; () banked
  1784  013868  2519               	addwf	??_main& (0+255),w,b
  1785  01386A  0101               	movlb	1	; () banked
  1786  01386C  6F1D               	movwf	(??_main+4)& (0+255),b
  1787  01386E  5018               	movf	_time_counter+1,w,c	;volatile
  1788  013870  0101               	movlb	1	; () banked
  1789  013872  211A               	addwfc	(??_main+1)& (0+255),w,b
  1790  013874  0101               	movlb	1	; () banked
  1791  013876  6F1E               	movwf	(??_main+5)& (0+255),b
  1792  013878  5019               	movf	_time_counter+2,w,c	;volatile
  1793  01387A  0101               	movlb	1	; () banked
  1794  01387C  211B               	addwfc	(??_main+2)& (0+255),w,b
  1795  01387E  0101               	movlb	1	; () banked
  1796  013880  6F1F               	movwf	(??_main+6)& (0+255),b
  1797  013882  501A               	movf	_time_counter+3,w,c	;volatile
  1798  013884  0101               	movlb	1	; () banked
  1799  013886  211C               	addwfc	(??_main+3)& (0+255),w,b
  1800  013888  0101               	movlb	1	; () banked
  1801  01388A  6F20               	movwf	(??_main+7)& (0+255),b
  1802  01388C  0101               	movlb	1	; () banked
  1803  01388E  5120               	movf	(??_main+7)& (0+255),w,b
  1804  013890  0101               	movlb	1	; () banked
  1805  013892  111F               	iorwf	(??_main+6)& (0+255),w,b
  1806  013894  0101               	movlb	1	; () banked
  1807  013896  111E               	iorwf	(??_main+5)& (0+255),w,b
  1808  013898  E105               	bnz	u11650
  1809  01389A  0E02               	movlw	2
  1810  01389C  0101               	movlb	1	; () banked
  1811  01389E  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1812  0138A0  A0D8               	btfss	status,0,c
  1813  0138A2  D00A               	goto	l8856
  1814  0138A4                     u11650:
  1815                           
  1816                           ; BSR set to: 1
  1817                           ;RemoteCan.c: 179: pr_time_2 = time_counter;
  1818  0138A4  C017  F0D5         	movff	_time_counter,_pr_time_2	;volatile
  1819  0138A8  C018  F0D6         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1820  0138AC  C019  F0D7         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1821  0138B0  C01A  F0D8         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1822                           
  1823                           ; BSR set to: 1
  1824                           ;RemoteCan.c: 180: CAN_Send();
  1825  0138B4  EC59  F0AB         	call	_CAN_Send	;wreg free
  1826  0138B8                     l8856:
  1827                           
  1828                           ;RemoteCan.c: 181: }
  1829                           ;RemoteCan.c: 183: if ((time_counter - pr_time_3) >= 50) {
  1830  0138B8  C0D9  F119         	movff	_pr_time_3,??_main	;volatile
  1831  0138BC  C0DA  F11A         	movff	_pr_time_3+1,??_main+1	;volatile
  1832  0138C0  C0DB  F11B         	movff	_pr_time_3+2,??_main+2	;volatile
  1833  0138C4  C0DC  F11C         	movff	_pr_time_3+3,??_main+3	;volatile
  1834  0138C8  0101               	movlb	1	; () banked
  1835  0138CA  1F19               	comf	??_main& (0+255),f,b
  1836  0138CC  1F1A               	comf	(??_main+1)& (0+255),f,b
  1837  0138CE  1F1B               	comf	(??_main+2)& (0+255),f,b
  1838  0138D0  1F1C               	comf	(??_main+3)& (0+255),f,b
  1839  0138D2  2B19               	incf	??_main& (0+255),f,b
  1840  0138D4  0E00               	movlw	0
  1841  0138D6  231A               	addwfc	(??_main+1)& (0+255),f,b
  1842  0138D8  231B               	addwfc	(??_main+2)& (0+255),f,b
  1843  0138DA  231C               	addwfc	(??_main+3)& (0+255),f,b
  1844  0138DC  5017               	movf	_time_counter,w,c	;volatile
  1845  0138DE  0101               	movlb	1	; () banked
  1846  0138E0  2519               	addwf	??_main& (0+255),w,b
  1847  0138E2  0101               	movlb	1	; () banked
  1848  0138E4  6F1D               	movwf	(??_main+4)& (0+255),b
  1849  0138E6  5018               	movf	_time_counter+1,w,c	;volatile
  1850  0138E8  0101               	movlb	1	; () banked
  1851  0138EA  211A               	addwfc	(??_main+1)& (0+255),w,b
  1852  0138EC  0101               	movlb	1	; () banked
  1853  0138EE  6F1E               	movwf	(??_main+5)& (0+255),b
  1854  0138F0  5019               	movf	_time_counter+2,w,c	;volatile
  1855  0138F2  0101               	movlb	1	; () banked
  1856  0138F4  211B               	addwfc	(??_main+2)& (0+255),w,b
  1857  0138F6  0101               	movlb	1	; () banked
  1858  0138F8  6F1F               	movwf	(??_main+6)& (0+255),b
  1859  0138FA  501A               	movf	_time_counter+3,w,c	;volatile
  1860  0138FC  0101               	movlb	1	; () banked
  1861  0138FE  211C               	addwfc	(??_main+3)& (0+255),w,b
  1862  013900  0101               	movlb	1	; () banked
  1863  013902  6F20               	movwf	(??_main+7)& (0+255),b
  1864  013904  0101               	movlb	1	; () banked
  1865  013906  5120               	movf	(??_main+7)& (0+255),w,b
  1866  013908  0101               	movlb	1	; () banked
  1867  01390A  111F               	iorwf	(??_main+6)& (0+255),w,b
  1868  01390C  0101               	movlb	1	; () banked
  1869  01390E  111E               	iorwf	(??_main+5)& (0+255),w,b
  1870  013910  E105               	bnz	u11660
  1871  013912  0E32               	movlw	50
  1872  013914  0101               	movlb	1	; () banked
  1873  013916  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1874  013918  A0D8               	btfss	status,0,c
  1875  01391A  D61B               	goto	l8788
  1876  01391C                     u11660:
  1877                           
  1878                           ; BSR set to: 1
  1879                           ;RemoteCan.c: 184: pr_time_3 = time_counter;
  1880  01391C  C017  F0D9         	movff	_time_counter,_pr_time_3	;volatile
  1881  013920  C018  F0DA         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1882  013924  C019  F0DB         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1883  013928  C01A  F0DC         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1884                           
  1885                           ; BSR set to: 1
  1886                           ;RemoteCan.c: 185: LCD_Handler();
  1887  01392C  EC45  F0A7         	call	_LCD_Handler	;wreg free
  1888  013930  D610               	goto	l8788
  1889  013932                     __end_of_main:
  1890                           	opt stack 0
  1891                           tblptru	equ	0xFF8
  1892                           tblptrh	equ	0xFF7
  1893                           tblptrl	equ	0xFF6
  1894                           tablat	equ	0xFF5
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _board_initialization *****************
  1900 ;; Defined at:
  1901 ;;		line 292 in file "RemoteCan.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;		None               void
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    9
  1922 ;; This function calls:
  1923 ;;		_CANInitialize
  1924 ;;		_LCD_clear
  1925 ;;		_LCD_goto_line
  1926 ;;		_LCD_initialize
  1927 ;;		_LCD_write_message
  1928 ;;		_delay_ms
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text1
  1935  01528E                     __ptext1:
  1936                           	opt stack 0
  1937  01528E                     _board_initialization:
  1938                           	opt stack 21
  1939                           
  1940                           ;RemoteCan.c: 294: LATA = 0x00;
  1941                           
  1942                           ;incstack = 0
  1943  01528E  0E00               	movlw	0
  1944  015290  6E89               	movwf	3977,c	;volatile
  1945                           
  1946                           ;RemoteCan.c: 295: TRISA = 0b00011111;
  1947  015292  0E1F               	movlw	31
  1948  015294  6E92               	movwf	3986,c	;volatile
  1949                           
  1950                           ;RemoteCan.c: 296: LATB = 0x00;
  1951  015296  0E00               	movlw	0
  1952  015298  6E8A               	movwf	3978,c	;volatile
  1953                           
  1954                           ;RemoteCan.c: 297: TRISB = 0b11111011;
  1955  01529A  0EFB               	movlw	251
  1956  01529C  6E93               	movwf	3987,c	;volatile
  1957                           
  1958                           ;RemoteCan.c: 298: LATC = 0x00;
  1959  01529E  0E00               	movlw	0
  1960  0152A0  6E8B               	movwf	3979,c	;volatile
  1961                           
  1962                           ;RemoteCan.c: 299: TRISC = 0b11110000;
  1963  0152A2  0EF0               	movlw	240
  1964  0152A4  6E94               	movwf	3988,c	;volatile
  1965                           
  1966                           ;RemoteCan.c: 300: LATD = 0x00;
  1967  0152A6  0E00               	movlw	0
  1968  0152A8  6E8C               	movwf	3980,c	;volatile
  1969                           
  1970                           ;RemoteCan.c: 301: TRISD = 0x00;
  1971  0152AA  0E00               	movlw	0
  1972  0152AC  6E95               	movwf	3989,c	;volatile
  1973                           
  1974                           ;RemoteCan.c: 302: LATE = 0x00;
  1975  0152AE  0E00               	movlw	0
  1976  0152B0  6E8D               	movwf	3981,c	;volatile
  1977                           
  1978                           ;RemoteCan.c: 303: TRISE = 0x00;
  1979  0152B2  0E00               	movlw	0
  1980  0152B4  6E96               	movwf	3990,c	;volatile
  1981                           
  1982                           ;RemoteCan.c: 305: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1983  0152B6  0E06               	movlw	6
  1984  0152B8  0100               	movlb	0	; () banked
  1985  0152BA  6F7D               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1986  0152BC  0E05               	movlw	5
  1987  0152BE  0100               	movlb	0	; () banked
  1988  0152C0  6F7E               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1989  0152C2  0E01               	movlw	1
  1990  0152C4  0100               	movlb	0	; () banked
  1991  0152C6  6F7F               	movwf	CANInitialize@SJW& (0+255),b
  1992  0152C8  0E03               	movlw	3
  1993  0152CA  0100               	movlb	0	; () banked
  1994  0152CC  6F80               	movwf	CANInitialize@BRP& (0+255),b
  1995  0152CE  0E9D               	movlw	157
  1996  0152D0  0100               	movlb	0	; () banked
  1997  0152D2  6F81               	movwf	CANInitialize@flags& (0+255),b
  1998  0152D4  0E04               	movlw	4
  1999  0152D6  ECAA  F0A2         	call	_CANInitialize
  2000                           
  2001                           ;RemoteCan.c: 309: PIR2bits.TMR3IF = 0;
  2002  0152DA  92A1               	bcf	4001,1,c	;volatile
  2003                           
  2004                           ;RemoteCan.c: 310: PIR3bits.RXB1IF = 0;
  2005  0152DC  92A4               	bcf	4004,1,c	;volatile
  2006                           
  2007                           ;RemoteCan.c: 311: PIR3bits.RXB0IF = 0;
  2008  0152DE  90A4               	bcf	4004,0,c	;volatile
  2009                           
  2010                           ;RemoteCan.c: 314: RCONbits.IPEN = 1;
  2011  0152E0  8ED0               	bsf	4048,7,c	;volatile
  2012                           
  2013                           ;RemoteCan.c: 315: IPR3bits.RXB1IP = 1;
  2014  0152E2  82A5               	bsf	4005,1,c	;volatile
  2015                           
  2016                           ;RemoteCan.c: 316: IPR3bits.RXB0IP = 1;
  2017  0152E4  80A5               	bsf	4005,0,c	;volatile
  2018                           
  2019                           ;RemoteCan.c: 317: IPR2bits.TMR3IP = 0;
  2020  0152E6  92A2               	bcf	4002,1,c	;volatile
  2021                           
  2022                           ;RemoteCan.c: 320: ADCON1 = 0b00001101;
  2023  0152E8  0E0D               	movlw	13
  2024  0152EA  6EC1               	movwf	4033,c	;volatile
  2025                           
  2026                           ;RemoteCan.c: 321: ADCON0bits.CHS2 = 0;
  2027  0152EC  98C2               	bcf	4034,4,c	;volatile
  2028                           
  2029                           ;RemoteCan.c: 322: ADCON0bits.CHS1 = 0;
  2030  0152EE  96C2               	bcf	4034,3,c	;volatile
  2031                           
  2032                           ;RemoteCan.c: 323: ADCON0bits.CHS0 = 0;
  2033  0152F0  94C2               	bcf	4034,2,c	;volatile
  2034                           
  2035                           ;RemoteCan.c: 324: ADCON2bits.ACQT2 = 1;
  2036  0152F2  8AC0               	bsf	4032,5,c	;volatile
  2037                           
  2038                           ;RemoteCan.c: 325: ADCON2bits.ACQT1 = 1;
  2039  0152F4  88C0               	bsf	4032,4,c	;volatile
  2040                           
  2041                           ;RemoteCan.c: 326: ADCON2bits.ACQT0 = 0;
  2042  0152F6  96C0               	bcf	4032,3,c	;volatile
  2043                           
  2044                           ;RemoteCan.c: 327: ADCON2bits.ADCS2 = 1;
  2045  0152F8  84C0               	bsf	4032,2,c	;volatile
  2046                           
  2047                           ;RemoteCan.c: 328: ADCON2bits.ADCS1 = 0;
  2048  0152FA  92C0               	bcf	4032,1,c	;volatile
  2049                           
  2050                           ;RemoteCan.c: 329: ADCON2bits.ADCS0 = 1;
  2051  0152FC  80C0               	bsf	4032,0,c	;volatile
  2052                           
  2053                           ;RemoteCan.c: 330: ADCON2bits.ADFM = 0;
  2054  0152FE  9EC0               	bcf	4032,7,c	;volatile
  2055                           
  2056                           ;RemoteCan.c: 331: ADCON0bits.ADON = 1;
  2057  015300  80C2               	bsf	4034,0,c	;volatile
  2058                           
  2059                           ;RemoteCan.c: 334: LCD_initialize(16);
  2060  015302  0E10               	movlw	16
  2061  015304  ECE8  F0A5         	call	_LCD_initialize
  2062                           
  2063                           ;RemoteCan.c: 336: LCD_clear();
  2064  015308  ECAD  F0AC         	call	_LCD_clear	;wreg free
  2065                           
  2066                           ;RemoteCan.c: 337: LCD_goto_line(1);
  2067  01530C  0E01               	movlw	1
  2068  01530E  EC62  F0A8         	call	_LCD_goto_line
  2069                           
  2070                           ;RemoteCan.c: 339: LCD_write_message("Wait...");
  2071  015312  0EE7               	movlw	low STR_13
  2072  015314  0100               	movlb	0	; () banked
  2073  015316  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  2074  015318  0EFF               	movlw	high STR_13
  2075  01531A  0100               	movlb	0	; () banked
  2076  01531C  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2077  01531E  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  2078                           
  2079                           ;RemoteCan.c: 340: LCD_goto_line(2);
  2080  015322  0E02               	movlw	2
  2081  015324  EC62  F0A8         	call	_LCD_goto_line
  2082                           
  2083                           ;RemoteCan.c: 341: LCD_write_message("hola muchacho");
  2084  015328  0EC1               	movlw	low STR_14
  2085  01532A  0100               	movlb	0	; () banked
  2086  01532C  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  2087  01532E  0EFF               	movlw	high STR_14
  2088  015330  0100               	movlb	0	; () banked
  2089  015332  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2090  015334  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  2091                           
  2092                           ;RemoteCan.c: 342: delay_ms(300);
  2093  015338  0E01               	movlw	1
  2094  01533A  0100               	movlb	0	; () banked
  2095  01533C  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2096  01533E  0E2C               	movlw	44
  2097  015340  6F75               	movwf	delay_ms@value_ms& (0+255),b
  2098  015342  EC26  F0AC         	call	_delay_ms	;wreg free
  2099                           
  2100                           ;RemoteCan.c: 344: PORTDbits.RD2 = 0;
  2101  015346  9483               	bcf	3971,2,c	;volatile
  2102                           
  2103                           ;RemoteCan.c: 345: PORTDbits.RD3 = 0;
  2104  015348  9683               	bcf	3971,3,c	;volatile
  2105                           
  2106                           ;RemoteCan.c: 348: TMR3H = 0x63;
  2107  01534A  0E63               	movlw	99
  2108  01534C  6EB3               	movwf	4019,c	;volatile
  2109                           
  2110                           ;RemoteCan.c: 349: TMR3L = 0xC0;
  2111  01534E  0EC0               	movlw	192
  2112  015350  6EB2               	movwf	4018,c	;volatile
  2113                           
  2114                           ;RemoteCan.c: 352: PIE3bits.RXB1IE = 1;
  2115  015352  82A3               	bsf	4003,1,c	;volatile
  2116                           
  2117                           ;RemoteCan.c: 353: PIE3bits.RXB0IE = 1;
  2118  015354  80A3               	bsf	4003,0,c	;volatile
  2119                           
  2120                           ;RemoteCan.c: 354: PIE2bits.TMR3IE = 1;
  2121  015356  82A0               	bsf	4000,1,c	;volatile
  2122                           
  2123                           ;RemoteCan.c: 357: T3CON = 0x01;
  2124  015358  0E01               	movlw	1
  2125  01535A  6EB1               	movwf	4017,c	;volatile
  2126                           
  2127                           ;RemoteCan.c: 358: LCD_clear();
  2128  01535C  ECAD  F0AC         	call	_LCD_clear	;wreg free
  2129                           
  2130                           ;RemoteCan.c: 359: INTCONbits.GIEH = 1;
  2131  015360  8EF2               	bsf	intcon,7,c	;volatile
  2132                           
  2133                           ;RemoteCan.c: 360: INTCONbits.GIEL = 1;
  2134  015362  8CF2               	bsf	intcon,6,c	;volatile
  2135  015364  0012               	return		;funcret
  2136  015366                     __end_of_board_initialization:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           intcon	equ	0xFF2
  2143                           postinc0	equ	0xFEE
  2144                           wreg	equ	0xFE8
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _CANInitialize *****************
  2148 ;; Defined at:
  2149 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  propSeg         1    wreg     unsigned char 
  2152 ;;  phaseSeg1       1   29[BANK0 ] unsigned char 
  2153 ;;  phaseSeg2       1   30[BANK0 ] unsigned char 
  2154 ;;  SJW             1   31[BANK0 ] unsigned char 
  2155 ;;  BRP             1   32[BANK0 ] unsigned char 
  2156 ;;  flags           1   33[BANK0 ] enum E16887
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  propSeg         1   38[BANK0 ] unsigned char 
  2159 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  2160 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;		None               void
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2170 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2171 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;Total ram usage:       12 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    4
  2177 ;; This function calls:
  2178 ;;		_CANOperationMode
  2179 ;;		_CANSetFilter
  2180 ;;		_CANSetMask
  2181 ;; This function is called by:
  2182 ;;		_board_initialization
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text2
  2187  014554                     __ptext2:
  2188                           	opt stack 0
  2189  014554                     _CANInitialize:
  2190                           	opt stack 25
  2191                           
  2192                           ;incstack = 0
  2193                           ;CANInitialize@propSeg stored from wreg
  2194  014554  0100               	movlb	0	; () banked
  2195  014556  6F86               	movwf	CANInitialize@propSeg& (0+255),b
  2196                           
  2197                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2198                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2199                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2200  014558  0E80               	movlw	128
  2201  01455A  EC2E  F0AD         	call	_CANOperationMode
  2202                           
  2203                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2204  01455E  0E00               	movlw	0
  2205  014560  6E70               	movwf	3952,c	;volatile
  2206                           
  2207                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2208  014562  0E00               	movlw	0
  2209  014564  6E71               	movwf	3953,c	;volatile
  2210                           
  2211                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2212  014566  0E00               	movlw	0
  2213  014568  6E72               	movwf	3954,c	;volatile
  2214                           
  2215                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2216  01456A  0100               	movlb	0	; () banked
  2217  01456C  417F               	rrncf	CANInitialize@SJW& (0+255),w,b
  2218  01456E  42E8               	rrncf	wreg,f,c
  2219  014570  0BC0               	andlw	192
  2220  014572  0100               	movlb	0	; () banked
  2221  014574  6F7F               	movwf	CANInitialize@SJW& (0+255),b
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2225  014576  0100               	movlb	0	; () banked
  2226  014578  517F               	movf	CANInitialize@SJW& (0+255),w,b
  2227  01457A  1270               	iorwf	3952,f,c	;volatile
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2231  01457C  0100               	movlb	0	; () banked
  2232  01457E  5180               	movf	CANInitialize@BRP& (0+255),w,b
  2233  014580  1270               	iorwf	3952,f,c	;volatile
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2237  014582  0100               	movlb	0	; () banked
  2238  014584  5186               	movf	CANInitialize@propSeg& (0+255),w,b
  2239  014586  1271               	iorwf	3953,f,c	;volatile
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2243  014588  0100               	movlb	0	; () banked
  2244  01458A  397D               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2245  01458C  42E8               	rrncf	wreg,f,c
  2246  01458E  0BF8               	andlw	248
  2247  014590  0100               	movlb	0	; () banked
  2248  014592  6F7D               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2252  014594  0100               	movlb	0	; () banked
  2253  014596  517D               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2254  014598  1271               	iorwf	3953,f,c	;volatile
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2258  01459A  0100               	movlb	0	; () banked
  2259  01459C  A581               	btfss	CANInitialize@flags& (0+255),2,b
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2263  01459E  8C71               	bsf	3953,6,c	;volatile
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2267  0145A0  0100               	movlb	0	; () banked
  2268  0145A2  B181               	btfsc	CANInitialize@flags& (0+255),0,b
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2272  0145A4  8E71               	bsf	3953,7,c	;volatile
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2276                           
  2277                           ; BSR set to: 0
  2278  0145A6  0100               	movlb	0	; () banked
  2279  0145A8  517E               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2280  0145AA  1272               	iorwf	3954,f,c	;volatile
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2284  0145AC  0100               	movlb	0	; () banked
  2285  0145AE  B381               	btfsc	CANInitialize@flags& (0+255),1,b
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2289  0145B0  8C72               	bsf	3954,6,c	;volatile
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2293                           
  2294                           ; BSR set to: 0
  2295  0145B2  0100               	movlb	0	; () banked
  2296  0145B4  5181               	movf	CANInitialize@flags& (0+255),w,b
  2297  0145B6  0B60               	andlw	96
  2298  0145B8  6E60               	movwf	3936,c	;volatile
  2299                           
  2300                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2301  0145BA  0100               	movlb	0	; () banked
  2302  0145BC  5181               	movf	CANInitialize@flags& (0+255),w,b
  2303  0145BE  0B10               	andlw	16
  2304  0145C0  0AFF               	xorlw	255
  2305  0145C2  B4D8               	btfsc	status,2,c
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2309  0145C4  8460               	bsf	3936,2,c	;volatile
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2313  0145C6  CF60 FF50          	movff	3936,3920	;volatile
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2317  0145CA  0E00               	movlw	0
  2318  0145CC  0100               	movlb	0	; () banked
  2319  0145CE  6F6F               	movwf	CANSetMask@mask& (0+255),b
  2320  0145D0  0E00               	movlw	0
  2321  0145D2  6F70               	movwf	(CANSetMask@mask+1)& (0+255),b
  2322  0145D4  0E00               	movlw	0
  2323  0145D6  6F71               	movwf	(CANSetMask@mask+2)& (0+255),b
  2324  0145D8  0E00               	movlw	0
  2325  0145DA  6F72               	movwf	(CANSetMask@mask+3)& (0+255),b
  2326  0145DC  0EF7               	movlw	247
  2327  0145DE  0100               	movlb	0	; () banked
  2328  0145E0  6F73               	movwf	CANSetMask@type& (0+255),b
  2329  0145E2  0E01               	movlw	1
  2330  0145E4  EC79  F09E         	call	_CANSetMask
  2331                           
  2332                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2333  0145E8  0E00               	movlw	0
  2334  0145EA  0100               	movlb	0	; () banked
  2335  0145EC  6F6F               	movwf	CANSetMask@mask& (0+255),b
  2336  0145EE  0E00               	movlw	0
  2337  0145F0  6F70               	movwf	(CANSetMask@mask+1)& (0+255),b
  2338  0145F2  0E00               	movlw	0
  2339  0145F4  6F71               	movwf	(CANSetMask@mask+2)& (0+255),b
  2340  0145F6  0E00               	movlw	0
  2341  0145F8  6F72               	movwf	(CANSetMask@mask+3)& (0+255),b
  2342  0145FA  0EF7               	movlw	247
  2343  0145FC  0100               	movlb	0	; () banked
  2344  0145FE  6F73               	movwf	CANSetMask@type& (0+255),b
  2345  014600  0E02               	movlw	2
  2346  014602  EC79  F09E         	call	_CANSetMask
  2347                           
  2348                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2349  014606  D00F               	goto	l5606
  2350  014608                     l5600:
  2351                           
  2352                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2353  014608  0EF7               	movlw	247
  2354  01460A  0100               	movlb	0	; () banked
  2355  01460C  6F87               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2356  01460E  D007               	goto	l5602
  2357  014610                     l366:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2361  014610  0100               	movlb	0	; () banked
  2362  014612  6987               	setf	CANInitialize@FilterConfig1& (0+255),b
  2363                           
  2364                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2365  014614  0100               	movlb	0	; () banked
  2366  014616  6988               	setf	CANInitialize@FilterConfig2& (0+255),b
  2367                           
  2368                           ;inc\CANlib.h: 273: break;
  2369  014618  D028               	goto	l5608
  2370  01461A                     l367:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2374  01461A  0100               	movlb	0	; () banked
  2375  01461C  6987               	setf	CANInitialize@FilterConfig1& (0+255),b
  2376  01461E                     l5602:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2380  01461E  0EF7               	movlw	247
  2381  014620  0100               	movlb	0	; () banked
  2382  014622  6F88               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;inc\CANlib.h: 278: }
  2386                           
  2387                           ;inc\CANlib.h: 277: break;
  2388  014624  D022               	goto	l5608
  2389  014626                     l5606:
  2390  014626  0E9F               	movlw	159
  2391  014628  0100               	movlb	0	; () banked
  2392  01462A  6F82               	movwf	??_CANInitialize& (0+255),b
  2393  01462C  0EFF               	movlw	255
  2394  01462E  0100               	movlb	0	; () banked
  2395  014630  6F83               	movwf	(??_CANInitialize+1)& (0+255),b
  2396  014632  0100               	movlb	0	; () banked
  2397  014634  5181               	movf	CANInitialize@flags& (0+255),w,b
  2398  014636  0B60               	andlw	96
  2399  014638  0100               	movlb	0	; () banked
  2400  01463A  6F84               	movwf	(??_CANInitialize+2)& (0+255),b
  2401  01463C  6B85               	clrf	(??_CANInitialize+3)& (0+255),b
  2402  01463E  0100               	movlb	0	; () banked
  2403  014640  5182               	movf	??_CANInitialize& (0+255),w,b
  2404  014642  0100               	movlb	0	; () banked
  2405  014644  1384               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2406  014646  0100               	movlb	0	; () banked
  2407  014648  5183               	movf	(??_CANInitialize+1)& (0+255),w,b
  2408  01464A  0100               	movlb	0	; () banked
  2409  01464C  1385               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2410                           
  2411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2412                           ; Switch size 1, requested type "space"
  2413                           ; Number of cases is 1, Range of values is 0 to 0
  2414                           ; switch strategies available:
  2415                           ; Name         Instructions Cycles
  2416                           ; simple_byte            4     3 (average)
  2417                           ;	Chosen strategy is simple_byte
  2418  01464E  0100               	movlb	0	; () banked
  2419  014650  5185               	movf	(??_CANInitialize+3)& (0+255),w,b
  2420  014652  0A00               	xorlw	0	; case 0
  2421  014654  A4D8               	btfss	status,2,c
  2422  014656  D7E1               	goto	l367
  2423                           
  2424                           ; BSR set to: 0
  2425                           ; Switch size 1, requested type "space"
  2426                           ; Number of cases is 2, Range of values is 191 to 223
  2427                           ; switch strategies available:
  2428                           ; Name         Instructions Cycles
  2429                           ; simple_byte            7     4 (average)
  2430                           ;	Chosen strategy is simple_byte
  2431  014658  0100               	movlb	0	; () banked
  2432  01465A  5184               	movf	(??_CANInitialize+2)& (0+255),w,b
  2433  01465C  0ABF               	xorlw	191	; case 191
  2434  01465E  B4D8               	btfsc	status,2,c
  2435  014660  D7D7               	goto	l366
  2436  014662  0A60               	xorlw	96	; case 223
  2437  014664  B4D8               	btfsc	status,2,c
  2438  014666  D7D0               	goto	l5600
  2439  014668  D7D8               	goto	l367
  2440  01466A                     l5608:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2444  01466A  0E00               	movlw	0
  2445  01466C  0100               	movlb	0	; () banked
  2446  01466E  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2447  014670  0E00               	movlw	0
  2448  014672  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2449  014674  0E00               	movlw	0
  2450  014676  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2451  014678  0E00               	movlw	0
  2452  01467A  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2453  01467C  C087  F073         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2454  014680  0E00               	movlw	0
  2455  014682  EC00  F080         	call	_CANSetFilter
  2456                           
  2457                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2458  014686  0E00               	movlw	0
  2459  014688  0100               	movlb	0	; () banked
  2460  01468A  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2461  01468C  0E00               	movlw	0
  2462  01468E  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2463  014690  0E00               	movlw	0
  2464  014692  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2465  014694  0E00               	movlw	0
  2466  014696  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2467  014698  C087  F073         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2468  01469C  0E01               	movlw	1
  2469  01469E  EC00  F080         	call	_CANSetFilter
  2470                           
  2471                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2472  0146A2  0E00               	movlw	0
  2473  0146A4  0100               	movlb	0	; () banked
  2474  0146A6  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2475  0146A8  0E00               	movlw	0
  2476  0146AA  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2477  0146AC  0E00               	movlw	0
  2478  0146AE  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2479  0146B0  0E00               	movlw	0
  2480  0146B2  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2481  0146B4  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2482  0146B8  0E02               	movlw	2
  2483  0146BA  EC00  F080         	call	_CANSetFilter
  2484                           
  2485                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2486  0146BE  0E00               	movlw	0
  2487  0146C0  0100               	movlb	0	; () banked
  2488  0146C2  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2489  0146C4  0E00               	movlw	0
  2490  0146C6  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2491  0146C8  0E00               	movlw	0
  2492  0146CA  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2493  0146CC  0E00               	movlw	0
  2494  0146CE  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2495  0146D0  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2496  0146D4  0E03               	movlw	3
  2497  0146D6  EC00  F080         	call	_CANSetFilter
  2498                           
  2499                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2500  0146DA  0E00               	movlw	0
  2501  0146DC  0100               	movlb	0	; () banked
  2502  0146DE  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2503  0146E0  0E00               	movlw	0
  2504  0146E2  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2505  0146E4  0E00               	movlw	0
  2506  0146E6  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2507  0146E8  0E00               	movlw	0
  2508  0146EA  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2509  0146EC  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2510  0146F0  0E04               	movlw	4
  2511  0146F2  EC00  F080         	call	_CANSetFilter
  2512                           
  2513                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2514  0146F6  0E00               	movlw	0
  2515  0146F8  0100               	movlb	0	; () banked
  2516  0146FA  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2517  0146FC  0E00               	movlw	0
  2518  0146FE  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2519  014700  0E00               	movlw	0
  2520  014702  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2521  014704  0E00               	movlw	0
  2522  014706  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2523  014708  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2524  01470C  0E05               	movlw	5
  2525  01470E  EC00  F080         	call	_CANSetFilter
  2526                           
  2527                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2528  014712  0E00               	movlw	0
  2529  014714  EC2E  F0AD         	call	_CANOperationMode
  2530  014718  0012               	return		;funcret
  2531  01471A                     __end_of_CANInitialize:
  2532                           	opt stack 0
  2533                           tblptru	equ	0xFF8
  2534                           tblptrh	equ	0xFF7
  2535                           tblptrl	equ	0xFF6
  2536                           tablat	equ	0xFF5
  2537                           intcon	equ	0xFF2
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _CANSetMask *****************
  2543 ;; Defined at:
  2544 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  numBuffer       1    wreg     enum E16921
  2547 ;;  mask            4   15[BANK0 ] unsigned long 
  2548 ;;  type            1   19[BANK0 ] enum E16887
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  numBuffer       1   24[BANK0 ] enum E16921
  2551 ;;  tamp            4   25[BANK0 ] unsigned long 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;		None               void
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2561 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;Total ram usage:       14 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    3
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_CANInitialize
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text3
  2576  013CF2                     __ptext3:
  2577                           	opt stack 0
  2578  013CF2                     _CANSetMask:
  2579                           	opt stack 25
  2580                           
  2581                           ;incstack = 0
  2582                           ;CANSetMask@numBuffer stored from wreg
  2583  013CF2  0100               	movlb	0	; () banked
  2584  013CF4  6F78               	movwf	CANSetMask@numBuffer& (0+255),b
  2585                           
  2586                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2587  013CF6  0100               	movlb	0	; () banked
  2588  013CF8  0578               	decf	CANSetMask@numBuffer& (0+255),w,b
  2589  013CFA  A4D8               	btfss	status,2,c
  2590  013CFC  D056               	goto	l4798
  2591                           
  2592                           ; BSR set to: 0
  2593  013CFE  0100               	movlb	0	; () banked
  2594  013D00  2973               	incf	CANSetMask@type& (0+255),w,b
  2595  013D02  A4D8               	btfss	status,2,c
  2596  013D04  D052               	goto	l4798
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;inc\CANlib.h: 644: {
  2600                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  2601  013D06  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  2602  013D0A  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2603  013D0E  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2604  013D12  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2605  013D16  0E04               	movlw	4
  2606  013D18  D006               	goto	u5290
  2607  013D1A                     u5295:
  2608  013D1A  0100               	movlb	0	; () banked
  2609  013D1C  90D8               	bcf	status,0,c
  2610  013D1E  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2611  013D20  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2612  013D22  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2613  013D24  3374               	rrcf	??_CANSetMask& (0+255),f,b
  2614  013D26                     u5290:
  2615  013D26  2EE8               	decfsz	wreg,f,c
  2616  013D28  D7F8               	goto	u5295
  2617  013D2A  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  2618  013D2E  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2619  013D32  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2620  013D36  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  2624  013D3A  0100               	movlb	0	; () banked
  2625  013D3C  5179               	movf	CANSetMask@tamp& (0+255),w,b
  2626  013D3E  0100               	movlb	0	; () banked
  2627  013D40  6F79               	movwf	CANSetMask@tamp& (0+255),b
  2628  013D42  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2629  013D44  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2630  013D46  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2634  013D48  C079  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  2638  013D4C  0E07               	movlw	7
  2639  013D4E  0100               	movlb	0	; () banked
  2640  013D50  156F               	andwf	CANSetMask@mask& (0+255),w,b
  2641  013D52  0100               	movlb	0	; () banked
  2642  013D54  6F79               	movwf	CANSetMask@tamp& (0+255),b
  2643  013D56  0E00               	movlw	0
  2644  013D58  0100               	movlb	0	; () banked
  2645  013D5A  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2646  013D5C  0100               	movlb	0	; () banked
  2647  013D5E  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2648  013D60  0E00               	movlw	0
  2649  013D62  0100               	movlb	0	; () banked
  2650  013D64  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2651  013D66  0100               	movlb	0	; () banked
  2652  013D68  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2653  013D6A  0E00               	movlw	0
  2654  013D6C  0100               	movlb	0	; () banked
  2655  013D6E  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2656  013D70  0100               	movlb	0	; () banked
  2657  013D72  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  2661  013D74  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  2662  013D78  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2663  013D7C  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2664  013D80  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2665  013D84  0E05               	movlw	5
  2666  013D86                     u5305:
  2667  013D86  90D8               	bcf	status,0,c
  2668  013D88  0100               	movlb	0	; () banked
  2669  013D8A  3774               	rlcf	??_CANSetMask& (0+255),f,b
  2670  013D8C  3775               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2671  013D8E  3776               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2672  013D90  3777               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2673  013D92  2EE8               	decfsz	wreg,f,c
  2674  013D94  D7F8               	goto	u5305
  2675  013D96  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  2676  013D9A  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2677  013D9E  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2678  013DA2  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2682  013DA6  C079  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2683  013DAA                     l4798:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;inc\CANlib.h: 652: }
  2687                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2688  013DAA  0E02               	movlw	2
  2689  013DAC  0100               	movlb	0	; () banked
  2690  013DAE  1978               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2691  013DB0  A4D8               	btfss	status,2,c
  2692  013DB2  D056               	goto	l4814
  2693                           
  2694                           ; BSR set to: 0
  2695  013DB4  0100               	movlb	0	; () banked
  2696  013DB6  2973               	incf	CANSetMask@type& (0+255),w,b
  2697  013DB8  A4D8               	btfss	status,2,c
  2698  013DBA  D052               	goto	l4814
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;inc\CANlib.h: 655: {
  2702                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  2703  013DBC  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  2704  013DC0  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2705  013DC4  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2706  013DC8  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2707  013DCC  0E04               	movlw	4
  2708  013DCE  D006               	goto	u5330
  2709  013DD0                     u5335:
  2710  013DD0  0100               	movlb	0	; () banked
  2711  013DD2  90D8               	bcf	status,0,c
  2712  013DD4  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2713  013DD6  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2714  013DD8  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2715  013DDA  3374               	rrcf	??_CANSetMask& (0+255),f,b
  2716  013DDC                     u5330:
  2717  013DDC  2EE8               	decfsz	wreg,f,c
  2718  013DDE  D7F8               	goto	u5335
  2719  013DE0  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  2720  013DE4  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2721  013DE8  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2722  013DEC  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  2726  013DF0  0100               	movlb	0	; () banked
  2727  013DF2  5179               	movf	CANSetMask@tamp& (0+255),w,b
  2728  013DF4  0100               	movlb	0	; () banked
  2729  013DF6  6F79               	movwf	CANSetMask@tamp& (0+255),b
  2730  013DF8  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2731  013DFA  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2732  013DFC  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2736  013DFE  C079  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  2740  013E02  0E07               	movlw	7
  2741  013E04  0100               	movlb	0	; () banked
  2742  013E06  156F               	andwf	CANSetMask@mask& (0+255),w,b
  2743  013E08  0100               	movlb	0	; () banked
  2744  013E0A  6F79               	movwf	CANSetMask@tamp& (0+255),b
  2745  013E0C  0E00               	movlw	0
  2746  013E0E  0100               	movlb	0	; () banked
  2747  013E10  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2748  013E12  0100               	movlb	0	; () banked
  2749  013E14  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2750  013E16  0E00               	movlw	0
  2751  013E18  0100               	movlb	0	; () banked
  2752  013E1A  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2753  013E1C  0100               	movlb	0	; () banked
  2754  013E1E  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2755  013E20  0E00               	movlw	0
  2756  013E22  0100               	movlb	0	; () banked
  2757  013E24  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2758  013E26  0100               	movlb	0	; () banked
  2759  013E28  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  2763  013E2A  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  2764  013E2E  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2765  013E32  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2766  013E36  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2767  013E3A  0E05               	movlw	5
  2768  013E3C                     u5345:
  2769  013E3C  90D8               	bcf	status,0,c
  2770  013E3E  0100               	movlb	0	; () banked
  2771  013E40  3774               	rlcf	??_CANSetMask& (0+255),f,b
  2772  013E42  3775               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2773  013E44  3776               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2774  013E46  3777               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2775  013E48  2EE8               	decfsz	wreg,f,c
  2776  013E4A  D7F8               	goto	u5345
  2777  013E4C  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  2778  013E50  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2779  013E54  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2780  013E58  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2784  013E5C  C079  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2785  013E60                     l4814:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;inc\CANlib.h: 663: }
  2789                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2790  013E60  0100               	movlb	0	; () banked
  2791  013E62  0578               	decf	CANSetMask@numBuffer& (0+255),w,b
  2792  013E64  A4D8               	btfss	status,2,c
  2793  013E66  D087               	goto	l4846
  2794                           
  2795                           ; BSR set to: 0
  2796  013E68  0EF7               	movlw	247
  2797  013E6A  0100               	movlb	0	; () banked
  2798  013E6C  1973               	xorwf	CANSetMask@type& (0+255),w,b
  2799  013E6E  A4D8               	btfss	status,2,c
  2800  013E70  D082               	goto	l4846
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;inc\CANlib.h: 666: {
  2804                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  2805  013E72  0100               	movlb	0	; () banked
  2806  013E74  516F               	movf	CANSetMask@mask& (0+255),w,b
  2807  013E76  0100               	movlb	0	; () banked
  2808  013E78  6F79               	movwf	CANSetMask@tamp& (0+255),b
  2809  013E7A  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2810  013E7C  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2811  013E7E  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2815  013E80  C079  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  2819  013E84  0E00               	movlw	0
  2820  013E86  0100               	movlb	0	; () banked
  2821  013E88  156F               	andwf	CANSetMask@mask& (0+255),w,b
  2822  013E8A  0100               	movlb	0	; () banked
  2823  013E8C  6F79               	movwf	CANSetMask@tamp& (0+255),b
  2824  013E8E  0EFF               	movlw	255
  2825  013E90  0100               	movlb	0	; () banked
  2826  013E92  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2827  013E94  0100               	movlb	0	; () banked
  2828  013E96  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2829  013E98  0E00               	movlw	0
  2830  013E9A  0100               	movlb	0	; () banked
  2831  013E9C  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2832  013E9E  0100               	movlb	0	; () banked
  2833  013EA0  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2834  013EA2  0E00               	movlw	0
  2835  013EA4  0100               	movlb	0	; () banked
  2836  013EA6  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2837  013EA8  0100               	movlb	0	; () banked
  2838  013EAA  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  2842  013EAC  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  2843  013EB0  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2844  013EB4  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2845  013EB8  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2846  013EBC  C075  F074         	movff	??_CANSetMask+1,??_CANSetMask
  2847  013EC0  C076  F075         	movff	??_CANSetMask+2,??_CANSetMask+1
  2848  013EC4  C077  F076         	movff	??_CANSetMask+3,??_CANSetMask+2
  2849  013EC8  0100               	movlb	0	; () banked
  2850  013ECA  6B77               	clrf	(??_CANSetMask+3)& (0+255),b
  2851  013ECC  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  2852  013ED0  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2853  013ED4  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2854  013ED8  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2858  013EDC  C079  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  2862  013EE0  0100               	movlb	0	; () banked
  2863  013EE2  A171               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2864  013EE4  D003               	goto	l440
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2868  013EE6  010F               	movlb	15	; () banked
  2869  013EE8  8119               	bsf	25,0,b	;volatile
  2870  013EEA  D002               	goto	l441
  2871  013EEC                     l440:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;inc\CANlib.h: 676: else
  2875                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2876  013EEC  010F               	movlb	15	; () banked
  2877  013EEE  9119               	bcf	25,0,b	;volatile
  2878  013EF0                     l441:
  2879                           
  2880                           ; BSR set to: 15
  2881                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  2882  013EF0  0100               	movlb	0	; () banked
  2883  013EF2  A371               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2884  013EF4  D003               	goto	l442
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2888  013EF6  010F               	movlb	15	; () banked
  2889  013EF8  8319               	bsf	25,1,b	;volatile
  2890  013EFA  D002               	goto	l443
  2891  013EFC                     l442:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;inc\CANlib.h: 681: else
  2895                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2896  013EFC  010F               	movlb	15	; () banked
  2897  013EFE  9319               	bcf	25,1,b	;volatile
  2898  013F00                     l443:
  2899                           
  2900                           ; BSR set to: 15
  2901                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  2902  013F00  0100               	movlb	0	; () banked
  2903  013F02  A571               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2904  013F04  D003               	goto	l444
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2908  013F06  010F               	movlb	15	; () banked
  2909  013F08  8B19               	bsf	25,5,b	;volatile
  2910  013F0A  D002               	goto	l445
  2911  013F0C                     l444:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;inc\CANlib.h: 686: else
  2915                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2916  013F0C  010F               	movlb	15	; () banked
  2917  013F0E  9B19               	bcf	25,5,b	;volatile
  2918  013F10                     l445:
  2919                           
  2920                           ; BSR set to: 15
  2921                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  2922  013F10  0100               	movlb	0	; () banked
  2923  013F12  A771               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2924  013F14  D003               	goto	l446
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2928  013F16  010F               	movlb	15	; () banked
  2929  013F18  8D19               	bsf	25,6,b	;volatile
  2930  013F1A  D002               	goto	l447
  2931  013F1C                     l446:
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;inc\CANlib.h: 691: else
  2935                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2936  013F1C  010F               	movlb	15	; () banked
  2937  013F1E  9D19               	bcf	25,6,b	;volatile
  2938  013F20                     l447:
  2939                           
  2940                           ; BSR set to: 15
  2941                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  2942  013F20  0100               	movlb	0	; () banked
  2943  013F22  A971               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2944  013F24  D003               	goto	l448
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2948  013F26  010F               	movlb	15	; () banked
  2949  013F28  8F19               	bsf	25,7,b	;volatile
  2950  013F2A  D002               	goto	l4840
  2951  013F2C                     l448:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;inc\CANlib.h: 696: else
  2955                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2956  013F2C  010F               	movlb	15	; () banked
  2957  013F2E  9F19               	bcf	25,7,b	;volatile
  2958  013F30                     l4840:
  2959                           
  2960                           ; BSR set to: 15
  2961                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  2962  013F30  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  2963  013F34  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2964  013F38  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2965  013F3C  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2966  013F40  0E16               	movlw	22
  2967  013F42  D006               	goto	u5420
  2968  013F44                     u5425:
  2969  013F44  0100               	movlb	0	; () banked
  2970  013F46  90D8               	bcf	status,0,c
  2971  013F48  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2972  013F4A  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2973  013F4C  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2974  013F4E  3374               	rrcf	??_CANSetMask& (0+255),f,b
  2975  013F50                     u5420:
  2976  013F50  2EE8               	decfsz	wreg,f,c
  2977  013F52  D7F8               	goto	u5425
  2978  013F54  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  2979  013F58  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2980  013F5C  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2981  013F60  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  2985  013F64  0100               	movlb	0	; () banked
  2986  013F66  5179               	movf	CANSetMask@tamp& (0+255),w,b
  2987  013F68  0100               	movlb	0	; () banked
  2988  013F6A  6F79               	movwf	CANSetMask@tamp& (0+255),b
  2989  013F6C  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2990  013F6E  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2991  013F70  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2995  013F72  C079  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2996  013F76                     l4846:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;inc\CANlib.h: 702: }
  3000                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3001  013F76  0E02               	movlw	2
  3002  013F78  0100               	movlb	0	; () banked
  3003  013F7A  1978               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3004  013F7C  A4D8               	btfss	status,2,c
  3005  013F7E  0012               	return	
  3006                           
  3007                           ; BSR set to: 0
  3008  013F80  0EF7               	movlw	247
  3009  013F82  0100               	movlb	0	; () banked
  3010  013F84  1973               	xorwf	CANSetMask@type& (0+255),w,b
  3011  013F86  A4D8               	btfss	status,2,c
  3012  013F88  0012               	return	
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;inc\CANlib.h: 705: {
  3016                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3017  013F8A  0100               	movlb	0	; () banked
  3018  013F8C  516F               	movf	CANSetMask@mask& (0+255),w,b
  3019  013F8E  0100               	movlb	0	; () banked
  3020  013F90  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3021  013F92  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3022  013F94  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3023  013F96  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3027  013F98  C079  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3031  013F9C  0E00               	movlw	0
  3032  013F9E  0100               	movlb	0	; () banked
  3033  013FA0  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3034  013FA2  0100               	movlb	0	; () banked
  3035  013FA4  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3036  013FA6  0EFF               	movlw	255
  3037  013FA8  0100               	movlb	0	; () banked
  3038  013FAA  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3039  013FAC  0100               	movlb	0	; () banked
  3040  013FAE  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3041  013FB0  0E00               	movlw	0
  3042  013FB2  0100               	movlb	0	; () banked
  3043  013FB4  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3044  013FB6  0100               	movlb	0	; () banked
  3045  013FB8  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3046  013FBA  0E00               	movlw	0
  3047  013FBC  0100               	movlb	0	; () banked
  3048  013FBE  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3049  013FC0  0100               	movlb	0	; () banked
  3050  013FC2  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3054  013FC4  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3055  013FC8  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3056  013FCC  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3057  013FD0  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3058  013FD4  C075  F074         	movff	??_CANSetMask+1,??_CANSetMask
  3059  013FD8  C076  F075         	movff	??_CANSetMask+2,??_CANSetMask+1
  3060  013FDC  C077  F076         	movff	??_CANSetMask+3,??_CANSetMask+2
  3061  013FE0  0100               	movlb	0	; () banked
  3062  013FE2  6B77               	clrf	(??_CANSetMask+3)& (0+255),b
  3063  013FE4  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3064  013FE8  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3065  013FEC  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3066  013FF0  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3070  013FF4  C079  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3074  013FF8  0100               	movlb	0	; () banked
  3075  013FFA  A171               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3076  013FFC  D003               	goto	l451
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3080  013FFE  010F               	movlb	15	; () banked
  3081  014000  811D               	bsf	29,0,b	;volatile
  3082  014002  D002               	goto	l452
  3083  014004                     l451:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;inc\CANlib.h: 715: else
  3087                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3088  014004  010F               	movlb	15	; () banked
  3089  014006  911D               	bcf	29,0,b	;volatile
  3090  014008                     l452:
  3091                           
  3092                           ; BSR set to: 15
  3093                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3094  014008  0100               	movlb	0	; () banked
  3095  01400A  A371               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3096  01400C  D003               	goto	l453
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3100  01400E  010F               	movlb	15	; () banked
  3101  014010  831D               	bsf	29,1,b	;volatile
  3102  014012  D002               	goto	l454
  3103  014014                     l453:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;inc\CANlib.h: 720: else
  3107                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3108  014014  010F               	movlb	15	; () banked
  3109  014016  931D               	bcf	29,1,b	;volatile
  3110  014018                     l454:
  3111                           
  3112                           ; BSR set to: 15
  3113                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3114  014018  0100               	movlb	0	; () banked
  3115  01401A  A571               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3116  01401C  D003               	goto	l455
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3120  01401E  010F               	movlb	15	; () banked
  3121  014020  8B1D               	bsf	29,5,b	;volatile
  3122  014022  D002               	goto	l456
  3123  014024                     l455:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;inc\CANlib.h: 725: else
  3127                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3128  014024  010F               	movlb	15	; () banked
  3129  014026  9B1D               	bcf	29,5,b	;volatile
  3130  014028                     l456:
  3131                           
  3132                           ; BSR set to: 15
  3133                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3134  014028  0100               	movlb	0	; () banked
  3135  01402A  A771               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3136  01402C  D003               	goto	l457
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3140  01402E  010F               	movlb	15	; () banked
  3141  014030  8D1D               	bsf	29,6,b	;volatile
  3142  014032  D002               	goto	l458
  3143  014034                     l457:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;inc\CANlib.h: 730: else
  3147                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3148  014034  010F               	movlb	15	; () banked
  3149  014036  9D1D               	bcf	29,6,b	;volatile
  3150  014038                     l458:
  3151                           
  3152                           ; BSR set to: 15
  3153                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3154  014038  0100               	movlb	0	; () banked
  3155  01403A  A971               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3156  01403C  D003               	goto	l459
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3160  01403E  010F               	movlb	15	; () banked
  3161  014040  8F1D               	bsf	29,7,b	;volatile
  3162  014042  D002               	goto	l4872
  3163  014044                     l459:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;inc\CANlib.h: 735: else
  3167                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3168  014044  010F               	movlb	15	; () banked
  3169  014046  9F1D               	bcf	29,7,b	;volatile
  3170  014048                     l4872:
  3171                           
  3172                           ; BSR set to: 15
  3173                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3174  014048  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3175  01404C  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3176  014050  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3177  014054  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3178  014058  0E16               	movlw	22
  3179  01405A  D006               	goto	u5500
  3180  01405C                     u5505:
  3181  01405C  0100               	movlb	0	; () banked
  3182  01405E  90D8               	bcf	status,0,c
  3183  014060  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3184  014062  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3185  014064  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3186  014066  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3187  014068                     u5500:
  3188  014068  2EE8               	decfsz	wreg,f,c
  3189  01406A  D7F8               	goto	u5505
  3190  01406C  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3191  014070  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3192  014074  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3193  014078  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3197  01407C  0100               	movlb	0	; () banked
  3198  01407E  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3199  014080  0100               	movlb	0	; () banked
  3200  014082  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3201  014084  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3202  014086  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3203  014088  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3207  01408A  C079  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3208  01408E  0012               	return	
  3209  014090                     __end_of_CANSetMask:
  3210                           	opt stack 0
  3211                           tblptru	equ	0xFF8
  3212                           tblptrh	equ	0xFF7
  3213                           tblptrl	equ	0xFF6
  3214                           tablat	equ	0xFF5
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function _CANSetFilter *****************
  3221 ;; Defined at:
  3222 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  numBuffer       1    wreg     enum E16924
  3225 ;;  filter          4   15[BANK0 ] unsigned long 
  3226 ;;  type            1   19[BANK0 ] enum E16887
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  numBuffer       1   24[BANK0 ] enum E16924
  3229 ;;  tamp            4   25[BANK0 ] unsigned long 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;		None               void
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3239 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3240 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;Total ram usage:       14 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    3
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_CANInitialize
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text4
  3254  010000                     __ptext4:
  3255                           	opt stack 0
  3256  010000                     _CANSetFilter:
  3257                           	opt stack 25
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;incstack = 0
  3261                           ;CANSetFilter@numBuffer stored from wreg
  3262  010000  0100               	movlb	0	; () banked
  3263  010002  6F78               	movwf	CANSetFilter@numBuffer& (0+255),b
  3264                           
  3265                           ;inc\CANlib.h: 750: unsigned long tamp;
  3266                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3267  010004  0100               	movlb	0	; () banked
  3268  010006  5178               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3269  010008  0100               	movlb	0	; () banked
  3270  01000A  A4D8               	btfss	status,2,c
  3271  01000C  D058               	goto	l4896
  3272                           
  3273                           ; BSR set to: 0
  3274  01000E  0100               	movlb	0	; () banked
  3275  010010  2973               	incf	CANSetFilter@type& (0+255),w,b
  3276  010012  A4D8               	btfss	status,2,c
  3277  010014  D054               	goto	l4896
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;inc\CANlib.h: 753: {
  3281                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3282  010016  010F               	movlb	15	; () banked
  3283  010018  9701               	bcf	1,3,b	;volatile
  3284                           
  3285                           ; BSR set to: 15
  3286                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3287  01001A  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3288  01001E  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3289  010022  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3290  010026  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3291  01002A  0E04               	movlw	4
  3292  01002C  D006               	goto	u5530
  3293  01002E                     u5535:
  3294  01002E  0100               	movlb	0	; () banked
  3295  010030  90D8               	bcf	status,0,c
  3296  010032  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3297  010034  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3298  010036  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3299  010038  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3300  01003A                     u5530:
  3301  01003A  2EE8               	decfsz	wreg,f,c
  3302  01003C  D7F8               	goto	u5535
  3303  01003E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3304  010042  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3305  010046  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3306  01004A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3310  01004E  0100               	movlb	0	; () banked
  3311  010050  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3312  010052  0100               	movlb	0	; () banked
  3313  010054  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3314  010056  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3315  010058  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3316  01005A  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3320  01005C  C079  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3324  010060  0E07               	movlw	7
  3325  010062  0100               	movlb	0	; () banked
  3326  010064  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3327  010066  0100               	movlb	0	; () banked
  3328  010068  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3329  01006A  0E00               	movlw	0
  3330  01006C  0100               	movlb	0	; () banked
  3331  01006E  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3332  010070  0100               	movlb	0	; () banked
  3333  010072  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3334  010074  0E00               	movlw	0
  3335  010076  0100               	movlb	0	; () banked
  3336  010078  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3337  01007A  0100               	movlb	0	; () banked
  3338  01007C  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3339  01007E  0E00               	movlw	0
  3340  010080  0100               	movlb	0	; () banked
  3341  010082  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3342  010084  0100               	movlb	0	; () banked
  3343  010086  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3347  010088  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3348  01008C  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3349  010090  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3350  010094  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3351  010098  0E05               	movlw	5
  3352  01009A                     u5545:
  3353  01009A  90D8               	bcf	status,0,c
  3354  01009C  0100               	movlb	0	; () banked
  3355  01009E  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3356  0100A0  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3357  0100A2  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3358  0100A4  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3359  0100A6  2EE8               	decfsz	wreg,f,c
  3360  0100A8  D7F8               	goto	u5545
  3361  0100AA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3362  0100AE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3363  0100B2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3364  0100B6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3368  0100BA  C079  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3369  0100BE                     l4896:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;inc\CANlib.h: 763: }
  3373                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3374  0100BE  0100               	movlb	0	; () banked
  3375  0100C0  0578               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3376  0100C2  A4D8               	btfss	status,2,c
  3377  0100C4  D058               	goto	l4914
  3378                           
  3379                           ; BSR set to: 0
  3380  0100C6  0100               	movlb	0	; () banked
  3381  0100C8  2973               	incf	CANSetFilter@type& (0+255),w,b
  3382  0100CA  A4D8               	btfss	status,2,c
  3383  0100CC  D054               	goto	l4914
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;inc\CANlib.h: 766: {
  3387                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3388  0100CE  010F               	movlb	15	; () banked
  3389  0100D0  9705               	bcf	5,3,b	;volatile
  3390                           
  3391                           ; BSR set to: 15
  3392                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3393  0100D2  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3394  0100D6  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3395  0100DA  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3396  0100DE  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3397  0100E2  0E04               	movlw	4
  3398  0100E4  D006               	goto	u5570
  3399  0100E6                     u5575:
  3400  0100E6  0100               	movlb	0	; () banked
  3401  0100E8  90D8               	bcf	status,0,c
  3402  0100EA  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3403  0100EC  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3404  0100EE  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3405  0100F0  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3406  0100F2                     u5570:
  3407  0100F2  2EE8               	decfsz	wreg,f,c
  3408  0100F4  D7F8               	goto	u5575
  3409  0100F6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3410  0100FA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3411  0100FE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3412  010102  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3416  010106  0100               	movlb	0	; () banked
  3417  010108  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3418  01010A  0100               	movlb	0	; () banked
  3419  01010C  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3420  01010E  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3421  010110  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3422  010112  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3426  010114  C079  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3430  010118  0E07               	movlw	7
  3431  01011A  0100               	movlb	0	; () banked
  3432  01011C  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3433  01011E  0100               	movlb	0	; () banked
  3434  010120  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3435  010122  0E00               	movlw	0
  3436  010124  0100               	movlb	0	; () banked
  3437  010126  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3438  010128  0100               	movlb	0	; () banked
  3439  01012A  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3440  01012C  0E00               	movlw	0
  3441  01012E  0100               	movlb	0	; () banked
  3442  010130  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3443  010132  0100               	movlb	0	; () banked
  3444  010134  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3445  010136  0E00               	movlw	0
  3446  010138  0100               	movlb	0	; () banked
  3447  01013A  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3448  01013C  0100               	movlb	0	; () banked
  3449  01013E  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3453  010140  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3454  010144  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3455  010148  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3456  01014C  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3457  010150  0E05               	movlw	5
  3458  010152                     u5585:
  3459  010152  90D8               	bcf	status,0,c
  3460  010154  0100               	movlb	0	; () banked
  3461  010156  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3462  010158  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3463  01015A  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3464  01015C  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3465  01015E  2EE8               	decfsz	wreg,f,c
  3466  010160  D7F8               	goto	u5585
  3467  010162  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3468  010166  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3469  01016A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3470  01016E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3474  010172  C079  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3475  010176                     l4914:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;inc\CANlib.h: 776: }
  3479                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3480  010176  0E02               	movlw	2
  3481  010178  0100               	movlb	0	; () banked
  3482  01017A  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3483  01017C  A4D8               	btfss	status,2,c
  3484  01017E  D058               	goto	l4932
  3485                           
  3486                           ; BSR set to: 0
  3487  010180  0100               	movlb	0	; () banked
  3488  010182  2973               	incf	CANSetFilter@type& (0+255),w,b
  3489  010184  A4D8               	btfss	status,2,c
  3490  010186  D054               	goto	l4932
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 779: {
  3494                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3495  010188  010F               	movlb	15	; () banked
  3496  01018A  9709               	bcf	9,3,b	;volatile
  3497                           
  3498                           ; BSR set to: 15
  3499                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3500  01018C  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3501  010190  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3502  010194  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3503  010198  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3504  01019C  0E04               	movlw	4
  3505  01019E  D006               	goto	u5610
  3506  0101A0                     u5615:
  3507  0101A0  0100               	movlb	0	; () banked
  3508  0101A2  90D8               	bcf	status,0,c
  3509  0101A4  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3510  0101A6  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3511  0101A8  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3512  0101AA  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3513  0101AC                     u5610:
  3514  0101AC  2EE8               	decfsz	wreg,f,c
  3515  0101AE  D7F8               	goto	u5615
  3516  0101B0  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3517  0101B4  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3518  0101B8  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3519  0101BC  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3523  0101C0  0100               	movlb	0	; () banked
  3524  0101C2  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3525  0101C4  0100               	movlb	0	; () banked
  3526  0101C6  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3527  0101C8  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3528  0101CA  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3529  0101CC  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3533  0101CE  C079  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  3537  0101D2  0E07               	movlw	7
  3538  0101D4  0100               	movlb	0	; () banked
  3539  0101D6  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3540  0101D8  0100               	movlb	0	; () banked
  3541  0101DA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3542  0101DC  0E00               	movlw	0
  3543  0101DE  0100               	movlb	0	; () banked
  3544  0101E0  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3545  0101E2  0100               	movlb	0	; () banked
  3546  0101E4  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3547  0101E6  0E00               	movlw	0
  3548  0101E8  0100               	movlb	0	; () banked
  3549  0101EA  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3550  0101EC  0100               	movlb	0	; () banked
  3551  0101EE  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3552  0101F0  0E00               	movlw	0
  3553  0101F2  0100               	movlb	0	; () banked
  3554  0101F4  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3555  0101F6  0100               	movlb	0	; () banked
  3556  0101F8  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  3560  0101FA  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3561  0101FE  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3562  010202  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3563  010206  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3564  01020A  0E05               	movlw	5
  3565  01020C                     u5625:
  3566  01020C  90D8               	bcf	status,0,c
  3567  01020E  0100               	movlb	0	; () banked
  3568  010210  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3569  010212  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3570  010214  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3571  010216  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3572  010218  2EE8               	decfsz	wreg,f,c
  3573  01021A  D7F8               	goto	u5625
  3574  01021C  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3575  010220  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3576  010224  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3577  010228  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3581  01022C  C079  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3582  010230                     l4932:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;inc\CANlib.h: 789: }
  3586                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3587  010230  0E03               	movlw	3
  3588  010232  0100               	movlb	0	; () banked
  3589  010234  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3590  010236  A4D8               	btfss	status,2,c
  3591  010238  D058               	goto	l4950
  3592                           
  3593                           ; BSR set to: 0
  3594  01023A  0100               	movlb	0	; () banked
  3595  01023C  2973               	incf	CANSetFilter@type& (0+255),w,b
  3596  01023E  A4D8               	btfss	status,2,c
  3597  010240  D054               	goto	l4950
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;inc\CANlib.h: 792: {
  3601                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3602  010242  010F               	movlb	15	; () banked
  3603  010244  970D               	bcf	13,3,b	;volatile
  3604                           
  3605                           ; BSR set to: 15
  3606                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  3607  010246  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3608  01024A  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3609  01024E  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3610  010252  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3611  010256  0E04               	movlw	4
  3612  010258  D006               	goto	u5650
  3613  01025A                     u5655:
  3614  01025A  0100               	movlb	0	; () banked
  3615  01025C  90D8               	bcf	status,0,c
  3616  01025E  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3617  010260  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3618  010262  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3619  010264  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3620  010266                     u5650:
  3621  010266  2EE8               	decfsz	wreg,f,c
  3622  010268  D7F8               	goto	u5655
  3623  01026A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3624  01026E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3625  010272  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3626  010276  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  3630  01027A  0100               	movlb	0	; () banked
  3631  01027C  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3632  01027E  0100               	movlb	0	; () banked
  3633  010280  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3634  010282  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3635  010284  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3636  010286  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3640  010288  C079  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  3644  01028C  0E07               	movlw	7
  3645  01028E  0100               	movlb	0	; () banked
  3646  010290  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3647  010292  0100               	movlb	0	; () banked
  3648  010294  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3649  010296  0E00               	movlw	0
  3650  010298  0100               	movlb	0	; () banked
  3651  01029A  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3652  01029C  0100               	movlb	0	; () banked
  3653  01029E  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3654  0102A0  0E00               	movlw	0
  3655  0102A2  0100               	movlb	0	; () banked
  3656  0102A4  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3657  0102A6  0100               	movlb	0	; () banked
  3658  0102A8  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3659  0102AA  0E00               	movlw	0
  3660  0102AC  0100               	movlb	0	; () banked
  3661  0102AE  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3662  0102B0  0100               	movlb	0	; () banked
  3663  0102B2  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  3667  0102B4  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3668  0102B8  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3669  0102BC  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3670  0102C0  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3671  0102C4  0E05               	movlw	5
  3672  0102C6                     u5665:
  3673  0102C6  90D8               	bcf	status,0,c
  3674  0102C8  0100               	movlb	0	; () banked
  3675  0102CA  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3676  0102CC  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3677  0102CE  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3678  0102D0  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3679  0102D2  2EE8               	decfsz	wreg,f,c
  3680  0102D4  D7F8               	goto	u5665
  3681  0102D6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3682  0102DA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3683  0102DE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3684  0102E2  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3688  0102E6  C079  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3689  0102EA                     l4950:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;inc\CANlib.h: 802: }
  3693                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3694  0102EA  0E04               	movlw	4
  3695  0102EC  0100               	movlb	0	; () banked
  3696  0102EE  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3697  0102F0  A4D8               	btfss	status,2,c
  3698  0102F2  D058               	goto	l4968
  3699                           
  3700                           ; BSR set to: 0
  3701  0102F4  0100               	movlb	0	; () banked
  3702  0102F6  2973               	incf	CANSetFilter@type& (0+255),w,b
  3703  0102F8  A4D8               	btfss	status,2,c
  3704  0102FA  D054               	goto	l4968
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;inc\CANlib.h: 805: {
  3708                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3709  0102FC  010F               	movlb	15	; () banked
  3710  0102FE  9711               	bcf	17,3,b	;volatile
  3711                           
  3712                           ; BSR set to: 15
  3713                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  3714  010300  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3715  010304  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3716  010308  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3717  01030C  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3718  010310  0E04               	movlw	4
  3719  010312  D006               	goto	u5690
  3720  010314                     u5695:
  3721  010314  0100               	movlb	0	; () banked
  3722  010316  90D8               	bcf	status,0,c
  3723  010318  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3724  01031A  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3725  01031C  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3726  01031E  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3727  010320                     u5690:
  3728  010320  2EE8               	decfsz	wreg,f,c
  3729  010322  D7F8               	goto	u5695
  3730  010324  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3731  010328  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3732  01032C  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3733  010330  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  3737  010334  0100               	movlb	0	; () banked
  3738  010336  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3739  010338  0100               	movlb	0	; () banked
  3740  01033A  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3741  01033C  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3742  01033E  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3743  010340  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3747  010342  C079  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  3751  010346  0E07               	movlw	7
  3752  010348  0100               	movlb	0	; () banked
  3753  01034A  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3754  01034C  0100               	movlb	0	; () banked
  3755  01034E  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3756  010350  0E00               	movlw	0
  3757  010352  0100               	movlb	0	; () banked
  3758  010354  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3759  010356  0100               	movlb	0	; () banked
  3760  010358  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3761  01035A  0E00               	movlw	0
  3762  01035C  0100               	movlb	0	; () banked
  3763  01035E  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3764  010360  0100               	movlb	0	; () banked
  3765  010362  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3766  010364  0E00               	movlw	0
  3767  010366  0100               	movlb	0	; () banked
  3768  010368  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3769  01036A  0100               	movlb	0	; () banked
  3770  01036C  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  3774  01036E  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3775  010372  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3776  010376  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3777  01037A  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3778  01037E  0E05               	movlw	5
  3779  010380                     u5705:
  3780  010380  90D8               	bcf	status,0,c
  3781  010382  0100               	movlb	0	; () banked
  3782  010384  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3783  010386  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3784  010388  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3785  01038A  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3786  01038C  2EE8               	decfsz	wreg,f,c
  3787  01038E  D7F8               	goto	u5705
  3788  010390  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3789  010394  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3790  010398  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3791  01039C  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3795  0103A0  C079  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3796  0103A4                     l4968:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 815: }
  3800                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3801  0103A4  0E05               	movlw	5
  3802  0103A6  0100               	movlb	0	; () banked
  3803  0103A8  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3804  0103AA  A4D8               	btfss	status,2,c
  3805  0103AC  D058               	goto	l4986
  3806                           
  3807                           ; BSR set to: 0
  3808  0103AE  0100               	movlb	0	; () banked
  3809  0103B0  2973               	incf	CANSetFilter@type& (0+255),w,b
  3810  0103B2  A4D8               	btfss	status,2,c
  3811  0103B4  D054               	goto	l4986
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;inc\CANlib.h: 818: {
  3815                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3816  0103B6  010F               	movlb	15	; () banked
  3817  0103B8  9715               	bcf	21,3,b	;volatile
  3818                           
  3819                           ; BSR set to: 15
  3820                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  3821  0103BA  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3822  0103BE  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3823  0103C2  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3824  0103C6  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3825  0103CA  0E04               	movlw	4
  3826  0103CC  D006               	goto	u5730
  3827  0103CE                     u5735:
  3828  0103CE  0100               	movlb	0	; () banked
  3829  0103D0  90D8               	bcf	status,0,c
  3830  0103D2  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3831  0103D4  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3832  0103D6  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3833  0103D8  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3834  0103DA                     u5730:
  3835  0103DA  2EE8               	decfsz	wreg,f,c
  3836  0103DC  D7F8               	goto	u5735
  3837  0103DE  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3838  0103E2  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3839  0103E6  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3840  0103EA  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  3844  0103EE  0100               	movlb	0	; () banked
  3845  0103F0  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3846  0103F2  0100               	movlb	0	; () banked
  3847  0103F4  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3848  0103F6  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3849  0103F8  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3850  0103FA  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3854  0103FC  C079  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  3858  010400  0E07               	movlw	7
  3859  010402  0100               	movlb	0	; () banked
  3860  010404  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3861  010406  0100               	movlb	0	; () banked
  3862  010408  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3863  01040A  0E00               	movlw	0
  3864  01040C  0100               	movlb	0	; () banked
  3865  01040E  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3866  010410  0100               	movlb	0	; () banked
  3867  010412  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3868  010414  0E00               	movlw	0
  3869  010416  0100               	movlb	0	; () banked
  3870  010418  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3871  01041A  0100               	movlb	0	; () banked
  3872  01041C  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3873  01041E  0E00               	movlw	0
  3874  010420  0100               	movlb	0	; () banked
  3875  010422  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3876  010424  0100               	movlb	0	; () banked
  3877  010426  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  3881  010428  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3882  01042C  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3883  010430  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3884  010434  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3885  010438  0E05               	movlw	5
  3886  01043A                     u5745:
  3887  01043A  90D8               	bcf	status,0,c
  3888  01043C  0100               	movlb	0	; () banked
  3889  01043E  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3890  010440  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3891  010442  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3892  010444  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3893  010446  2EE8               	decfsz	wreg,f,c
  3894  010448  D7F8               	goto	u5745
  3895  01044A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3896  01044E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3897  010452  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3898  010456  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3902  01045A  C079  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3903  01045E                     l4986:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;inc\CANlib.h: 828: }
  3907                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3908  01045E  0100               	movlb	0	; () banked
  3909  010460  5178               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3910  010462  0100               	movlb	0	; () banked
  3911  010464  A4D8               	btfss	status,2,c
  3912  010466  D089               	goto	l5020
  3913                           
  3914                           ; BSR set to: 0
  3915  010468  0EF7               	movlw	247
  3916  01046A  0100               	movlb	0	; () banked
  3917  01046C  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  3918  01046E  A4D8               	btfss	status,2,c
  3919  010470  D084               	goto	l5020
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 832: {
  3923                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3924  010472  010F               	movlb	15	; () banked
  3925  010474  8701               	bsf	1,3,b	;volatile
  3926                           
  3927                           ; BSR set to: 15
  3928                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  3929  010476  0100               	movlb	0	; () banked
  3930  010478  516F               	movf	CANSetFilter@filter& (0+255),w,b
  3931  01047A  0100               	movlb	0	; () banked
  3932  01047C  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3933  01047E  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3934  010480  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3935  010482  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3939  010484  C079  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  3943  010488  0E00               	movlw	0
  3944  01048A  0100               	movlb	0	; () banked
  3945  01048C  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3946  01048E  0100               	movlb	0	; () banked
  3947  010490  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3948  010492  0EFF               	movlw	255
  3949  010494  0100               	movlb	0	; () banked
  3950  010496  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3951  010498  0100               	movlb	0	; () banked
  3952  01049A  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3953  01049C  0E00               	movlw	0
  3954  01049E  0100               	movlb	0	; () banked
  3955  0104A0  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3956  0104A2  0100               	movlb	0	; () banked
  3957  0104A4  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3958  0104A6  0E00               	movlw	0
  3959  0104A8  0100               	movlb	0	; () banked
  3960  0104AA  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3961  0104AC  0100               	movlb	0	; () banked
  3962  0104AE  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  3966  0104B0  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3967  0104B4  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3968  0104B8  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3969  0104BC  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3970  0104C0  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  3971  0104C4  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3972  0104C8  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3973  0104CC  0100               	movlb	0	; () banked
  3974  0104CE  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  3975  0104D0  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3976  0104D4  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3977  0104D8  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3978  0104DC  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3982  0104E0  C079  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  3986  0104E4  0100               	movlb	0	; () banked
  3987  0104E6  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3988  0104E8  D003               	goto	l471
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3992  0104EA  010F               	movlb	15	; () banked
  3993  0104EC  8101               	bsf	1,0,b	;volatile
  3994  0104EE  D002               	goto	l472
  3995  0104F0                     l471:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 844: else
  3999                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4000  0104F0  010F               	movlb	15	; () banked
  4001  0104F2  9101               	bcf	1,0,b	;volatile
  4002  0104F4                     l472:
  4003                           
  4004                           ; BSR set to: 15
  4005                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4006  0104F4  0100               	movlb	0	; () banked
  4007  0104F6  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4008  0104F8  D003               	goto	l473
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4012  0104FA  010F               	movlb	15	; () banked
  4013  0104FC  8301               	bsf	1,1,b	;volatile
  4014  0104FE  D002               	goto	l474
  4015  010500                     l473:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 849: else
  4019                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4020  010500  010F               	movlb	15	; () banked
  4021  010502  9301               	bcf	1,1,b	;volatile
  4022  010504                     l474:
  4023                           
  4024                           ; BSR set to: 15
  4025                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4026  010504  0100               	movlb	0	; () banked
  4027  010506  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4028  010508  D003               	goto	l475
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4032  01050A  010F               	movlb	15	; () banked
  4033  01050C  8B01               	bsf	1,5,b	;volatile
  4034  01050E  D002               	goto	l476
  4035  010510                     l475:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;inc\CANlib.h: 854: else
  4039                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4040  010510  010F               	movlb	15	; () banked
  4041  010512  9B01               	bcf	1,5,b	;volatile
  4042  010514                     l476:
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4046  010514  0100               	movlb	0	; () banked
  4047  010516  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4048  010518  D003               	goto	l477
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4052  01051A  010F               	movlb	15	; () banked
  4053  01051C  8D01               	bsf	1,6,b	;volatile
  4054  01051E  D002               	goto	l478
  4055  010520                     l477:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 859: else
  4059                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4060  010520  010F               	movlb	15	; () banked
  4061  010522  9D01               	bcf	1,6,b	;volatile
  4062  010524                     l478:
  4063                           
  4064                           ; BSR set to: 15
  4065                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4066  010524  0100               	movlb	0	; () banked
  4067  010526  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4068  010528  D003               	goto	l479
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4072  01052A  010F               	movlb	15	; () banked
  4073  01052C  8F01               	bsf	1,7,b	;volatile
  4074  01052E  D002               	goto	l5014
  4075  010530                     l479:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;inc\CANlib.h: 864: else
  4079                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4080  010530  010F               	movlb	15	; () banked
  4081  010532  9F01               	bcf	1,7,b	;volatile
  4082  010534                     l5014:
  4083                           
  4084                           ; BSR set to: 15
  4085                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4086  010534  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4087  010538  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4088  01053C  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4089  010540  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4090  010544  0E16               	movlw	22
  4091  010546  D006               	goto	u5820
  4092  010548                     u5825:
  4093  010548  0100               	movlb	0	; () banked
  4094  01054A  90D8               	bcf	status,0,c
  4095  01054C  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4096  01054E  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4097  010550  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4098  010552  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4099  010554                     u5820:
  4100  010554  2EE8               	decfsz	wreg,f,c
  4101  010556  D7F8               	goto	u5825
  4102  010558  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4103  01055C  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4104  010560  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4105  010564  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4109  010568  0100               	movlb	0	; () banked
  4110  01056A  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4111  01056C  0100               	movlb	0	; () banked
  4112  01056E  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4113  010570  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4114  010572  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4115  010574  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4119  010576  C079  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4120  01057A                     l5020:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;inc\CANlib.h: 870: }
  4124                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4125  01057A  0100               	movlb	0	; () banked
  4126  01057C  0578               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4127  01057E  A4D8               	btfss	status,2,c
  4128  010580  D089               	goto	l5054
  4129                           
  4130                           ; BSR set to: 0
  4131  010582  0EF7               	movlw	247
  4132  010584  0100               	movlb	0	; () banked
  4133  010586  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4134  010588  A4D8               	btfss	status,2,c
  4135  01058A  D084               	goto	l5054
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;inc\CANlib.h: 873: {
  4139                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4140  01058C  010F               	movlb	15	; () banked
  4141  01058E  8705               	bsf	5,3,b	;volatile
  4142                           
  4143                           ; BSR set to: 15
  4144                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4145  010590  0100               	movlb	0	; () banked
  4146  010592  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4147  010594  0100               	movlb	0	; () banked
  4148  010596  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4149  010598  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4150  01059A  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4151  01059C  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4155  01059E  C079  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4159  0105A2  0E00               	movlw	0
  4160  0105A4  0100               	movlb	0	; () banked
  4161  0105A6  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4162  0105A8  0100               	movlb	0	; () banked
  4163  0105AA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4164  0105AC  0EFF               	movlw	255
  4165  0105AE  0100               	movlb	0	; () banked
  4166  0105B0  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4167  0105B2  0100               	movlb	0	; () banked
  4168  0105B4  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4169  0105B6  0E00               	movlw	0
  4170  0105B8  0100               	movlb	0	; () banked
  4171  0105BA  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4172  0105BC  0100               	movlb	0	; () banked
  4173  0105BE  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4174  0105C0  0E00               	movlw	0
  4175  0105C2  0100               	movlb	0	; () banked
  4176  0105C4  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4177  0105C6  0100               	movlb	0	; () banked
  4178  0105C8  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4182  0105CA  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4183  0105CE  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4184  0105D2  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4185  0105D6  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4186  0105DA  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4187  0105DE  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4188  0105E2  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4189  0105E6  0100               	movlb	0	; () banked
  4190  0105E8  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4191  0105EA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4192  0105EE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4193  0105F2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4194  0105F6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4198  0105FA  C079  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4202  0105FE  0100               	movlb	0	; () banked
  4203  010600  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4204  010602  D003               	goto	l482
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4208  010604  010F               	movlb	15	; () banked
  4209  010606  8105               	bsf	5,0,b	;volatile
  4210  010608  D002               	goto	l483
  4211  01060A                     l482:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 885: else
  4215                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4216  01060A  010F               	movlb	15	; () banked
  4217  01060C  9105               	bcf	5,0,b	;volatile
  4218  01060E                     l483:
  4219                           
  4220                           ; BSR set to: 15
  4221                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4222  01060E  0100               	movlb	0	; () banked
  4223  010610  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4224  010612  D003               	goto	l484
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4228  010614  010F               	movlb	15	; () banked
  4229  010616  8305               	bsf	5,1,b	;volatile
  4230  010618  D002               	goto	l485
  4231  01061A                     l484:
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;inc\CANlib.h: 890: else
  4235                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4236  01061A  010F               	movlb	15	; () banked
  4237  01061C  9305               	bcf	5,1,b	;volatile
  4238  01061E                     l485:
  4239                           
  4240                           ; BSR set to: 15
  4241                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4242  01061E  0100               	movlb	0	; () banked
  4243  010620  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4244  010622  D003               	goto	l486
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4248  010624  010F               	movlb	15	; () banked
  4249  010626  8B05               	bsf	5,5,b	;volatile
  4250  010628  D002               	goto	l487
  4251  01062A                     l486:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;inc\CANlib.h: 895: else
  4255                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4256  01062A  010F               	movlb	15	; () banked
  4257  01062C  9B05               	bcf	5,5,b	;volatile
  4258  01062E                     l487:
  4259                           
  4260                           ; BSR set to: 15
  4261                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4262  01062E  0100               	movlb	0	; () banked
  4263  010630  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4264  010632  D003               	goto	l488
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4268  010634  010F               	movlb	15	; () banked
  4269  010636  8D05               	bsf	5,6,b	;volatile
  4270  010638  D002               	goto	l489
  4271  01063A                     l488:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 900: else
  4275                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4276  01063A  010F               	movlb	15	; () banked
  4277  01063C  9D05               	bcf	5,6,b	;volatile
  4278  01063E                     l489:
  4279                           
  4280                           ; BSR set to: 15
  4281                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4282  01063E  0100               	movlb	0	; () banked
  4283  010640  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4284  010642  D003               	goto	l490
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4288  010644  010F               	movlb	15	; () banked
  4289  010646  8F05               	bsf	5,7,b	;volatile
  4290  010648  D002               	goto	l5048
  4291  01064A                     l490:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;inc\CANlib.h: 905: else
  4295                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4296  01064A  010F               	movlb	15	; () banked
  4297  01064C  9F05               	bcf	5,7,b	;volatile
  4298  01064E                     l5048:
  4299                           
  4300                           ; BSR set to: 15
  4301                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4302  01064E  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4303  010652  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4304  010656  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4305  01065A  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4306  01065E  0E16               	movlw	22
  4307  010660  D006               	goto	u5900
  4308  010662                     u5905:
  4309  010662  0100               	movlb	0	; () banked
  4310  010664  90D8               	bcf	status,0,c
  4311  010666  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4312  010668  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4313  01066A  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4314  01066C  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4315  01066E                     u5900:
  4316  01066E  2EE8               	decfsz	wreg,f,c
  4317  010670  D7F8               	goto	u5905
  4318  010672  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4319  010676  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4320  01067A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4321  01067E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4325  010682  0100               	movlb	0	; () banked
  4326  010684  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4327  010686  0100               	movlb	0	; () banked
  4328  010688  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4329  01068A  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4330  01068C  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4331  01068E  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4335  010690  C079  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4336  010694                     l5054:
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;inc\CANlib.h: 911: }
  4340                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4341  010694  0E02               	movlw	2
  4342  010696  0100               	movlb	0	; () banked
  4343  010698  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4344  01069A  A4D8               	btfss	status,2,c
  4345  01069C  D089               	goto	l5088
  4346                           
  4347                           ; BSR set to: 0
  4348  01069E  0EF7               	movlw	247
  4349  0106A0  0100               	movlb	0	; () banked
  4350  0106A2  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4351  0106A4  A4D8               	btfss	status,2,c
  4352  0106A6  D084               	goto	l5088
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;inc\CANlib.h: 915: {
  4356                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4357  0106A8  010F               	movlb	15	; () banked
  4358  0106AA  8709               	bsf	9,3,b	;volatile
  4359                           
  4360                           ; BSR set to: 15
  4361                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4362  0106AC  0100               	movlb	0	; () banked
  4363  0106AE  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4364  0106B0  0100               	movlb	0	; () banked
  4365  0106B2  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4366  0106B4  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4367  0106B6  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4368  0106B8  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4372  0106BA  C079  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4376  0106BE  0E00               	movlw	0
  4377  0106C0  0100               	movlb	0	; () banked
  4378  0106C2  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4379  0106C4  0100               	movlb	0	; () banked
  4380  0106C6  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4381  0106C8  0EFF               	movlw	255
  4382  0106CA  0100               	movlb	0	; () banked
  4383  0106CC  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4384  0106CE  0100               	movlb	0	; () banked
  4385  0106D0  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4386  0106D2  0E00               	movlw	0
  4387  0106D4  0100               	movlb	0	; () banked
  4388  0106D6  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4389  0106D8  0100               	movlb	0	; () banked
  4390  0106DA  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4391  0106DC  0E00               	movlw	0
  4392  0106DE  0100               	movlb	0	; () banked
  4393  0106E0  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4394  0106E2  0100               	movlb	0	; () banked
  4395  0106E4  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4399  0106E6  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4400  0106EA  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4401  0106EE  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4402  0106F2  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4403  0106F6  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4404  0106FA  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4405  0106FE  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4406  010702  0100               	movlb	0	; () banked
  4407  010704  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4408  010706  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4409  01070A  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4410  01070E  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4411  010712  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4415  010716  C079  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4419  01071A  0100               	movlb	0	; () banked
  4420  01071C  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4421  01071E  D003               	goto	l493
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4425  010720  010F               	movlb	15	; () banked
  4426  010722  8109               	bsf	9,0,b	;volatile
  4427  010724  D002               	goto	l494
  4428  010726                     l493:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;inc\CANlib.h: 927: else
  4432                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4433  010726  010F               	movlb	15	; () banked
  4434  010728  9109               	bcf	9,0,b	;volatile
  4435  01072A                     l494:
  4436                           
  4437                           ; BSR set to: 15
  4438                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4439  01072A  0100               	movlb	0	; () banked
  4440  01072C  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4441  01072E  D003               	goto	l495
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4445  010730  010F               	movlb	15	; () banked
  4446  010732  8309               	bsf	9,1,b	;volatile
  4447  010734  D002               	goto	l496
  4448  010736                     l495:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;inc\CANlib.h: 932: else
  4452                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4453  010736  010F               	movlb	15	; () banked
  4454  010738  9309               	bcf	9,1,b	;volatile
  4455  01073A                     l496:
  4456                           
  4457                           ; BSR set to: 15
  4458                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4459  01073A  0100               	movlb	0	; () banked
  4460  01073C  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4461  01073E  D003               	goto	l497
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4465  010740  010F               	movlb	15	; () banked
  4466  010742  8B09               	bsf	9,5,b	;volatile
  4467  010744  D002               	goto	l498
  4468  010746                     l497:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;inc\CANlib.h: 937: else
  4472                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4473  010746  010F               	movlb	15	; () banked
  4474  010748  9B09               	bcf	9,5,b	;volatile
  4475  01074A                     l498:
  4476                           
  4477                           ; BSR set to: 15
  4478                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4479  01074A  0100               	movlb	0	; () banked
  4480  01074C  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4481  01074E  D003               	goto	l499
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4485  010750  010F               	movlb	15	; () banked
  4486  010752  8D09               	bsf	9,6,b	;volatile
  4487  010754  D002               	goto	l500
  4488  010756                     l499:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;inc\CANlib.h: 942: else
  4492                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4493  010756  010F               	movlb	15	; () banked
  4494  010758  9D09               	bcf	9,6,b	;volatile
  4495  01075A                     l500:
  4496                           
  4497                           ; BSR set to: 15
  4498                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4499  01075A  0100               	movlb	0	; () banked
  4500  01075C  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4501  01075E  D003               	goto	l501
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4505  010760  010F               	movlb	15	; () banked
  4506  010762  8F09               	bsf	9,7,b	;volatile
  4507  010764  D002               	goto	l5082
  4508  010766                     l501:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;inc\CANlib.h: 947: else
  4512                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4513  010766  010F               	movlb	15	; () banked
  4514  010768  9F09               	bcf	9,7,b	;volatile
  4515  01076A                     l5082:
  4516                           
  4517                           ; BSR set to: 15
  4518                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4519  01076A  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4520  01076E  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4521  010772  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4522  010776  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4523  01077A  0E16               	movlw	22
  4524  01077C  D006               	goto	u5980
  4525  01077E                     u5985:
  4526  01077E  0100               	movlb	0	; () banked
  4527  010780  90D8               	bcf	status,0,c
  4528  010782  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4529  010784  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4530  010786  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4531  010788  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4532  01078A                     u5980:
  4533  01078A  2EE8               	decfsz	wreg,f,c
  4534  01078C  D7F8               	goto	u5985
  4535  01078E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4536  010792  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4537  010796  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4538  01079A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  4542  01079E  0100               	movlb	0	; () banked
  4543  0107A0  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4544  0107A2  0100               	movlb	0	; () banked
  4545  0107A4  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4546  0107A6  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4547  0107A8  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4548  0107AA  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4552  0107AC  C079  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4553  0107B0                     l5088:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;inc\CANlib.h: 953: }
  4557                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4558  0107B0  0E03               	movlw	3
  4559  0107B2  0100               	movlb	0	; () banked
  4560  0107B4  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4561  0107B6  A4D8               	btfss	status,2,c
  4562  0107B8  D089               	goto	l5122
  4563                           
  4564                           ; BSR set to: 0
  4565  0107BA  0EF7               	movlw	247
  4566  0107BC  0100               	movlb	0	; () banked
  4567  0107BE  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4568  0107C0  A4D8               	btfss	status,2,c
  4569  0107C2  D084               	goto	l5122
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;inc\CANlib.h: 956: {
  4573                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4574  0107C4  010F               	movlb	15	; () banked
  4575  0107C6  870D               	bsf	13,3,b	;volatile
  4576                           
  4577                           ; BSR set to: 15
  4578                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  4579  0107C8  0100               	movlb	0	; () banked
  4580  0107CA  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4581  0107CC  0100               	movlb	0	; () banked
  4582  0107CE  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4583  0107D0  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4584  0107D2  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4585  0107D4  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4589  0107D6  C079  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  4593  0107DA  0E00               	movlw	0
  4594  0107DC  0100               	movlb	0	; () banked
  4595  0107DE  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4596  0107E0  0100               	movlb	0	; () banked
  4597  0107E2  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4598  0107E4  0EFF               	movlw	255
  4599  0107E6  0100               	movlb	0	; () banked
  4600  0107E8  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4601  0107EA  0100               	movlb	0	; () banked
  4602  0107EC  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4603  0107EE  0E00               	movlw	0
  4604  0107F0  0100               	movlb	0	; () banked
  4605  0107F2  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4606  0107F4  0100               	movlb	0	; () banked
  4607  0107F6  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4608  0107F8  0E00               	movlw	0
  4609  0107FA  0100               	movlb	0	; () banked
  4610  0107FC  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4611  0107FE  0100               	movlb	0	; () banked
  4612  010800  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  4616  010802  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4617  010806  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4618  01080A  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4619  01080E  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4620  010812  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4621  010816  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4622  01081A  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4623  01081E  0100               	movlb	0	; () banked
  4624  010820  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4625  010822  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4626  010826  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4627  01082A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4628  01082E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4632  010832  C079  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  4636  010836  0100               	movlb	0	; () banked
  4637  010838  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4638  01083A  D003               	goto	l504
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4642  01083C  010F               	movlb	15	; () banked
  4643  01083E  810D               	bsf	13,0,b	;volatile
  4644  010840  D002               	goto	l505
  4645  010842                     l504:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;inc\CANlib.h: 968: else
  4649                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4650  010842  010F               	movlb	15	; () banked
  4651  010844  910D               	bcf	13,0,b	;volatile
  4652  010846                     l505:
  4653                           
  4654                           ; BSR set to: 15
  4655                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  4656  010846  0100               	movlb	0	; () banked
  4657  010848  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4658  01084A  D003               	goto	l506
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4662  01084C  010F               	movlb	15	; () banked
  4663  01084E  830D               	bsf	13,1,b	;volatile
  4664  010850  D002               	goto	l507
  4665  010852                     l506:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;inc\CANlib.h: 973: else
  4669                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4670  010852  010F               	movlb	15	; () banked
  4671  010854  930D               	bcf	13,1,b	;volatile
  4672  010856                     l507:
  4673                           
  4674                           ; BSR set to: 15
  4675                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  4676  010856  0100               	movlb	0	; () banked
  4677  010858  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4678  01085A  D003               	goto	l508
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4682  01085C  010F               	movlb	15	; () banked
  4683  01085E  8B0D               	bsf	13,5,b	;volatile
  4684  010860  D002               	goto	l509
  4685  010862                     l508:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;inc\CANlib.h: 978: else
  4689                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4690  010862  010F               	movlb	15	; () banked
  4691  010864  9B0D               	bcf	13,5,b	;volatile
  4692  010866                     l509:
  4693                           
  4694                           ; BSR set to: 15
  4695                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  4696  010866  0100               	movlb	0	; () banked
  4697  010868  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4698  01086A  D003               	goto	l510
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4702  01086C  010F               	movlb	15	; () banked
  4703  01086E  8D0D               	bsf	13,6,b	;volatile
  4704  010870  D002               	goto	l511
  4705  010872                     l510:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;inc\CANlib.h: 983: else
  4709                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4710  010872  010F               	movlb	15	; () banked
  4711  010874  9D0D               	bcf	13,6,b	;volatile
  4712  010876                     l511:
  4713                           
  4714                           ; BSR set to: 15
  4715                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  4716  010876  0100               	movlb	0	; () banked
  4717  010878  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4718  01087A  D003               	goto	l512
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4722  01087C  010F               	movlb	15	; () banked
  4723  01087E  8F0D               	bsf	13,7,b	;volatile
  4724  010880  D002               	goto	l5116
  4725  010882                     l512:
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;inc\CANlib.h: 988: else
  4729                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4730  010882  010F               	movlb	15	; () banked
  4731  010884  9F0D               	bcf	13,7,b	;volatile
  4732  010886                     l5116:
  4733                           
  4734                           ; BSR set to: 15
  4735                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  4736  010886  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4737  01088A  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4738  01088E  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4739  010892  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4740  010896  0E16               	movlw	22
  4741  010898  D006               	goto	u6060
  4742  01089A                     u6065:
  4743  01089A  0100               	movlb	0	; () banked
  4744  01089C  90D8               	bcf	status,0,c
  4745  01089E  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4746  0108A0  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4747  0108A2  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4748  0108A4  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4749  0108A6                     u6060:
  4750  0108A6  2EE8               	decfsz	wreg,f,c
  4751  0108A8  D7F8               	goto	u6065
  4752  0108AA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4753  0108AE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4754  0108B2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4755  0108B6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  4759  0108BA  0100               	movlb	0	; () banked
  4760  0108BC  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4761  0108BE  0100               	movlb	0	; () banked
  4762  0108C0  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4763  0108C2  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4764  0108C4  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4765  0108C6  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4769  0108C8  C079  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4770  0108CC                     l5122:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;inc\CANlib.h: 994: }
  4774                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4775  0108CC  0E04               	movlw	4
  4776  0108CE  0100               	movlb	0	; () banked
  4777  0108D0  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4778  0108D2  A4D8               	btfss	status,2,c
  4779  0108D4  D089               	goto	l5156
  4780                           
  4781                           ; BSR set to: 0
  4782  0108D6  0EF7               	movlw	247
  4783  0108D8  0100               	movlb	0	; () banked
  4784  0108DA  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4785  0108DC  A4D8               	btfss	status,2,c
  4786  0108DE  D084               	goto	l5156
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;inc\CANlib.h: 997: {
  4790                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4791  0108E0  010F               	movlb	15	; () banked
  4792  0108E2  8711               	bsf	17,3,b	;volatile
  4793                           
  4794                           ; BSR set to: 15
  4795                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  4796  0108E4  0100               	movlb	0	; () banked
  4797  0108E6  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4798  0108E8  0100               	movlb	0	; () banked
  4799  0108EA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4800  0108EC  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4801  0108EE  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4802  0108F0  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4806  0108F2  C079  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4810  0108F6  0E00               	movlw	0
  4811  0108F8  0100               	movlb	0	; () banked
  4812  0108FA  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4813  0108FC  0100               	movlb	0	; () banked
  4814  0108FE  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4815  010900  0EFF               	movlw	255
  4816  010902  0100               	movlb	0	; () banked
  4817  010904  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4818  010906  0100               	movlb	0	; () banked
  4819  010908  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4820  01090A  0E00               	movlw	0
  4821  01090C  0100               	movlb	0	; () banked
  4822  01090E  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4823  010910  0100               	movlb	0	; () banked
  4824  010912  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4825  010914  0E00               	movlw	0
  4826  010916  0100               	movlb	0	; () banked
  4827  010918  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4828  01091A  0100               	movlb	0	; () banked
  4829  01091C  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  4833  01091E  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4834  010922  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4835  010926  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4836  01092A  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4837  01092E  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4838  010932  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4839  010936  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4840  01093A  0100               	movlb	0	; () banked
  4841  01093C  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4842  01093E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4843  010942  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4844  010946  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4845  01094A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4849  01094E  C079  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  4853  010952  0100               	movlb	0	; () banked
  4854  010954  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4855  010956  D003               	goto	l515
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4859  010958  010F               	movlb	15	; () banked
  4860  01095A  8111               	bsf	17,0,b	;volatile
  4861  01095C  D002               	goto	l516
  4862  01095E                     l515:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 1009: else
  4866                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4867  01095E  010F               	movlb	15	; () banked
  4868  010960  9111               	bcf	17,0,b	;volatile
  4869  010962                     l516:
  4870                           
  4871                           ; BSR set to: 15
  4872                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  4873  010962  0100               	movlb	0	; () banked
  4874  010964  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4875  010966  D003               	goto	l517
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4879  010968  010F               	movlb	15	; () banked
  4880  01096A  8311               	bsf	17,1,b	;volatile
  4881  01096C  D002               	goto	l518
  4882  01096E                     l517:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;inc\CANlib.h: 1014: else
  4886                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4887  01096E  010F               	movlb	15	; () banked
  4888  010970  9311               	bcf	17,1,b	;volatile
  4889  010972                     l518:
  4890                           
  4891                           ; BSR set to: 15
  4892                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  4893  010972  0100               	movlb	0	; () banked
  4894  010974  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4895  010976  D003               	goto	l519
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4899  010978  010F               	movlb	15	; () banked
  4900  01097A  8B11               	bsf	17,5,b	;volatile
  4901  01097C  D002               	goto	l520
  4902  01097E                     l519:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;inc\CANlib.h: 1019: else
  4906                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4907  01097E  010F               	movlb	15	; () banked
  4908  010980  9B11               	bcf	17,5,b	;volatile
  4909  010982                     l520:
  4910                           
  4911                           ; BSR set to: 15
  4912                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  4913  010982  0100               	movlb	0	; () banked
  4914  010984  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4915  010986  D003               	goto	l521
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4919  010988  010F               	movlb	15	; () banked
  4920  01098A  8D11               	bsf	17,6,b	;volatile
  4921  01098C  D002               	goto	l522
  4922  01098E                     l521:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;inc\CANlib.h: 1024: else
  4926                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4927  01098E  010F               	movlb	15	; () banked
  4928  010990  9D11               	bcf	17,6,b	;volatile
  4929  010992                     l522:
  4930                           
  4931                           ; BSR set to: 15
  4932                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  4933  010992  0100               	movlb	0	; () banked
  4934  010994  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4935  010996  D003               	goto	l523
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4939  010998  010F               	movlb	15	; () banked
  4940  01099A  8F11               	bsf	17,7,b	;volatile
  4941  01099C  D002               	goto	l5150
  4942  01099E                     l523:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;inc\CANlib.h: 1029: else
  4946                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4947  01099E  010F               	movlb	15	; () banked
  4948  0109A0  9F11               	bcf	17,7,b	;volatile
  4949  0109A2                     l5150:
  4950                           
  4951                           ; BSR set to: 15
  4952                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  4953  0109A2  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4954  0109A6  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4955  0109AA  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4956  0109AE  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4957  0109B2  0E16               	movlw	22
  4958  0109B4  D006               	goto	u6140
  4959  0109B6                     u6145:
  4960  0109B6  0100               	movlb	0	; () banked
  4961  0109B8  90D8               	bcf	status,0,c
  4962  0109BA  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4963  0109BC  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4964  0109BE  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4965  0109C0  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4966  0109C2                     u6140:
  4967  0109C2  2EE8               	decfsz	wreg,f,c
  4968  0109C4  D7F8               	goto	u6145
  4969  0109C6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4970  0109CA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4971  0109CE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4972  0109D2  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4976  0109D6  0100               	movlb	0	; () banked
  4977  0109D8  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4978  0109DA  0100               	movlb	0	; () banked
  4979  0109DC  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4980  0109DE  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4981  0109E0  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4982  0109E2  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4986  0109E4  C079  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4987  0109E8                     l5156:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;inc\CANlib.h: 1035: }
  4991                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4992  0109E8  0E05               	movlw	5
  4993  0109EA  0100               	movlb	0	; () banked
  4994  0109EC  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4995  0109EE  A4D8               	btfss	status,2,c
  4996  0109F0  0012               	return	
  4997                           
  4998                           ; BSR set to: 0
  4999  0109F2  0EF7               	movlw	247
  5000  0109F4  0100               	movlb	0	; () banked
  5001  0109F6  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  5002  0109F8  A4D8               	btfss	status,2,c
  5003  0109FA  0012               	return	
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;inc\CANlib.h: 1038: {
  5007                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5008  0109FC  010F               	movlb	15	; () banked
  5009  0109FE  8715               	bsf	21,3,b	;volatile
  5010                           
  5011                           ; BSR set to: 15
  5012                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5013  010A00  0100               	movlb	0	; () banked
  5014  010A02  516F               	movf	CANSetFilter@filter& (0+255),w,b
  5015  010A04  0100               	movlb	0	; () banked
  5016  010A06  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5017  010A08  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5018  010A0A  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5019  010A0C  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5023  010A0E  C079  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5027  010A12  0E00               	movlw	0
  5028  010A14  0100               	movlb	0	; () banked
  5029  010A16  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  5030  010A18  0100               	movlb	0	; () banked
  5031  010A1A  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5032  010A1C  0EFF               	movlw	255
  5033  010A1E  0100               	movlb	0	; () banked
  5034  010A20  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5035  010A22  0100               	movlb	0	; () banked
  5036  010A24  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5037  010A26  0E00               	movlw	0
  5038  010A28  0100               	movlb	0	; () banked
  5039  010A2A  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5040  010A2C  0100               	movlb	0	; () banked
  5041  010A2E  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5042  010A30  0E00               	movlw	0
  5043  010A32  0100               	movlb	0	; () banked
  5044  010A34  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5045  010A36  0100               	movlb	0	; () banked
  5046  010A38  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5050  010A3A  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  5051  010A3E  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5052  010A42  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5053  010A46  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5054  010A4A  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  5055  010A4E  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5056  010A52  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5057  010A56  0100               	movlb	0	; () banked
  5058  010A58  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  5059  010A5A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5060  010A5E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5061  010A62  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5062  010A66  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5066  010A6A  C079  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5070  010A6E  0100               	movlb	0	; () banked
  5071  010A70  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5072  010A72  D003               	goto	l526
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5076  010A74  010F               	movlb	15	; () banked
  5077  010A76  8115               	bsf	21,0,b	;volatile
  5078  010A78  D002               	goto	l527
  5079  010A7A                     l526:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;inc\CANlib.h: 1050: else
  5083                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5084  010A7A  010F               	movlb	15	; () banked
  5085  010A7C  9115               	bcf	21,0,b	;volatile
  5086  010A7E                     l527:
  5087                           
  5088                           ; BSR set to: 15
  5089                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5090  010A7E  0100               	movlb	0	; () banked
  5091  010A80  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5092  010A82  D003               	goto	l528
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5096  010A84  010F               	movlb	15	; () banked
  5097  010A86  8315               	bsf	21,1,b	;volatile
  5098  010A88  D002               	goto	l529
  5099  010A8A                     l528:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;inc\CANlib.h: 1055: else
  5103                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5104  010A8A  010F               	movlb	15	; () banked
  5105  010A8C  9315               	bcf	21,1,b	;volatile
  5106  010A8E                     l529:
  5107                           
  5108                           ; BSR set to: 15
  5109                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5110  010A8E  0100               	movlb	0	; () banked
  5111  010A90  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5112  010A92  D003               	goto	l530
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5116  010A94  010F               	movlb	15	; () banked
  5117  010A96  8B15               	bsf	21,5,b	;volatile
  5118  010A98  D002               	goto	l531
  5119  010A9A                     l530:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;inc\CANlib.h: 1060: else
  5123                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5124  010A9A  010F               	movlb	15	; () banked
  5125  010A9C  9B15               	bcf	21,5,b	;volatile
  5126  010A9E                     l531:
  5127                           
  5128                           ; BSR set to: 15
  5129                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5130  010A9E  0100               	movlb	0	; () banked
  5131  010AA0  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5132  010AA2  D003               	goto	l532
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5136  010AA4  010F               	movlb	15	; () banked
  5137  010AA6  8D15               	bsf	21,6,b	;volatile
  5138  010AA8  D002               	goto	l533
  5139  010AAA                     l532:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;inc\CANlib.h: 1065: else
  5143                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5144  010AAA  010F               	movlb	15	; () banked
  5145  010AAC  9D15               	bcf	21,6,b	;volatile
  5146  010AAE                     l533:
  5147                           
  5148                           ; BSR set to: 15
  5149                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5150  010AAE  0100               	movlb	0	; () banked
  5151  010AB0  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5152  010AB2  D003               	goto	l534
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5156  010AB4  010F               	movlb	15	; () banked
  5157  010AB6  8F15               	bsf	21,7,b	;volatile
  5158  010AB8  D002               	goto	l5184
  5159  010ABA                     l534:
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;inc\CANlib.h: 1070: else
  5163                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5164  010ABA  010F               	movlb	15	; () banked
  5165  010ABC  9F15               	bcf	21,7,b	;volatile
  5166  010ABE                     l5184:
  5167                           
  5168                           ; BSR set to: 15
  5169                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5170  010ABE  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5171  010AC2  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5172  010AC6  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5173  010ACA  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5174  010ACE  0E16               	movlw	22
  5175  010AD0  D006               	goto	u6220
  5176  010AD2                     u6225:
  5177  010AD2  0100               	movlb	0	; () banked
  5178  010AD4  90D8               	bcf	status,0,c
  5179  010AD6  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5180  010AD8  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5181  010ADA  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5182  010ADC  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5183  010ADE                     u6220:
  5184  010ADE  2EE8               	decfsz	wreg,f,c
  5185  010AE0  D7F8               	goto	u6225
  5186  010AE2  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5187  010AE6  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5188  010AEA  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5189  010AEE  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5193  010AF2  0100               	movlb	0	; () banked
  5194  010AF4  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5195  010AF6  0100               	movlb	0	; () banked
  5196  010AF8  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5197  010AFA  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5198  010AFC  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5199  010AFE  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5203  010B00  C079  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5204  010B04  0012               	return	
  5205  010B06                     __end_of_CANSetFilter:
  5206                           	opt stack 0
  5207                           tblptru	equ	0xFF8
  5208                           tblptrh	equ	0xFF7
  5209                           tblptrl	equ	0xFF6
  5210                           tablat	equ	0xFF5
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           status	equ	0xFD8
  5215                           
  5216 ;; *************** function _CANOperationMode *****************
  5217 ;; Defined at:
  5218 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  mode            1    wreg     enum E16881
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  mode            1   15[BANK0 ] enum E16881
  5223 ;; Return value:  Size  Location     Type
  5224 ;;		None               void
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;Total ram usage:        1 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    3
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_CANInitialize
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text5
  5247  015A5C                     __ptext5:
  5248                           	opt stack 0
  5249  015A5C                     _CANOperationMode:
  5250                           	opt stack 25
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;incstack = 0
  5254                           ;CANOperationMode@mode stored from wreg
  5255  015A5C  0100               	movlb	0	; () banked
  5256  015A5E  6F6F               	movwf	CANOperationMode@mode& (0+255),b
  5257                           
  5258                           ;inc\CANlib.h: 208: CANCON = mode;
  5259  015A60  C06F  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5260  015A64                     l4780:
  5261  015A64  506E               	movf	3950,w,c	;volatile
  5262  015A66  0BE0               	andlw	224
  5263  015A68  0100               	movlb	0	; () banked
  5264  015A6A  196F               	xorwf	CANOperationMode@mode& (0+255),w,b
  5265  015A6C  B4D8               	btfsc	status,2,c
  5266  015A6E  0012               	return	
  5267  015A70  D7F9               	goto	l4780
  5268  015A72                     __end_of_CANOperationMode:
  5269                           	opt stack 0
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           intcon	equ	0xFF2
  5275                           postinc0	equ	0xFEE
  5276                           wreg	equ	0xFE8
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function _PWR_Button_Polling *****************
  5280 ;; Defined at:
  5281 ;;		line 273 in file "RemoteCan.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		None
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    3
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_main
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text6
  5310  015A40                     __ptext6:
  5311                           	opt stack 0
  5312  015A40                     _PWR_Button_Polling:
  5313                           	opt stack 27
  5314                           
  5315                           ;RemoteCan.c: 274: if ((PORTBbits.RB5 == 0) || (wait_low == 0)) {
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;incstack = 0
  5319  015A40  AA81               	btfss	3969,5,c	;volatile
  5320  015A42  D002               	goto	l793
  5321  015A44  BC4D               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5322  015A46  0012               	return	
  5323  015A48                     l793:
  5324                           
  5325                           ;RemoteCan.c: 275: wait_low = 0;
  5326  015A48  9C4D               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5327                           
  5328                           ;RemoteCan.c: 276: if (PORTBbits.RB5 == 1) {
  5329  015A4A  AA81               	btfss	3969,5,c	;volatile
  5330  015A4C  0012               	return	
  5331                           
  5332                           ;RemoteCan.c: 277: power_switch = ~power_switch;
  5333  015A4E  BA4D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5334  015A50  D002               	goto	u8100
  5335  015A52  8A4D               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5336  015A54  D001               	goto	u8115
  5337  015A56                     u8100:
  5338  015A56  9A4D               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5339  015A58                     u8115:
  5340                           
  5341                           ;RemoteCan.c: 278: wait_low = 1;
  5342  015A58  8C4D               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  5343  015A5A  0012               	return	
  5344  015A5C                     __end_of_PWR_Button_Polling:
  5345                           	opt stack 0
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           intcon	equ	0xFF2
  5351                           postinc0	equ	0xFEE
  5352                           wreg	equ	0xFE8
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _LCD_Handler *****************
  5356 ;; Defined at:
  5357 ;;		line 203 in file "RemoteCan.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;		None               void
  5364 ;; Registers used:
  5365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    9
  5378 ;; This function calls:
  5379 ;;		_LCD_clear
  5380 ;;		_LCD_goto_line
  5381 ;;		_LCD_initialize
  5382 ;;		_LCD_write_message
  5383 ;;		_LCD_write_string
  5384 ;;		___fldiv
  5385 ;;		_delay_ms
  5386 ;;		_sprintf
  5387 ;; This function is called by:
  5388 ;;		_main
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text7
  5393  014E8A                     __ptext7:
  5394                           	opt stack 0
  5395  014E8A                     _LCD_Handler:
  5396                           	opt stack 21
  5397                           
  5398                           ;RemoteCan.c: 204: actual_speed_kmh = actual_speed / 278;
  5399                           
  5400                           ;incstack = 0
  5401  014E8A  C007  F06F         	movff	_actual_speed,___fldiv@b
  5402  014E8E  C008  F070         	movff	_actual_speed+1,___fldiv@b+1
  5403  014E92  C009  F071         	movff	_actual_speed+2,___fldiv@b+2
  5404  014E96  C00A  F072         	movff	_actual_speed+3,___fldiv@b+3
  5405  014E9A  0E00               	movlw	0
  5406  014E9C  0100               	movlb	0	; () banked
  5407  014E9E  6F73               	movwf	___fldiv@a& (0+255),b
  5408  014EA0  0E00               	movlw	0
  5409  014EA2  6F74               	movwf	(___fldiv@a+1)& (0+255),b
  5410  014EA4  0E8B               	movlw	139
  5411  014EA6  6F75               	movwf	(___fldiv@a+2)& (0+255),b
  5412  014EA8  0E43               	movlw	67
  5413  014EAA  6F76               	movwf	(___fldiv@a+3)& (0+255),b
  5414  014EAC  EC99  F09C         	call	___fldiv	;wreg free
  5415  014EB0  C06F  F00B         	movff	?___fldiv,_actual_speed_kmh
  5416  014EB4  C070  F00C         	movff	?___fldiv+1,_actual_speed_kmh+1
  5417  014EB8  C071  F00D         	movff	?___fldiv+2,_actual_speed_kmh+2
  5418  014EBC  C072  F00E         	movff	?___fldiv+3,_actual_speed_kmh+3
  5419                           
  5420                           ;RemoteCan.c: 206: LCD_clear();
  5421  014EC0  ECAD  F0AC         	call	_LCD_clear	;wreg free
  5422                           
  5423                           ;RemoteCan.c: 207: delay_ms(1);
  5424  014EC4  0E00               	movlw	0
  5425  014EC6  0100               	movlb	0	; () banked
  5426  014EC8  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  5427  014ECA  0E01               	movlw	1
  5428  014ECC  6F75               	movwf	delay_ms@value_ms& (0+255),b
  5429  014ECE  EC26  F0AC         	call	_delay_ms	;wreg free
  5430                           
  5431                           ;RemoteCan.c: 208: LCD_initialize (16);
  5432  014ED2  0E10               	movlw	16
  5433  014ED4  ECE8  F0A5         	call	_LCD_initialize
  5434                           
  5435                           ;RemoteCan.c: 209: LCD_goto_line(1);
  5436  014ED8  0E01               	movlw	1
  5437  014EDA  EC62  F0A8         	call	_LCD_goto_line
  5438                           
  5439                           ;RemoteCan.c: 210: LCD_write_message("=== VEHICLE DATA ===");
  5440  014EDE  0E97               	movlw	low STR_5
  5441  014EE0  0100               	movlb	0	; () banked
  5442  014EE2  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5443  014EE4  0EFF               	movlw	high STR_5
  5444  014EE6  0100               	movlb	0	; () banked
  5445  014EE8  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5446  014EEA  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  5447                           
  5448                           ;RemoteCan.c: 212: LCD_goto_line(2);
  5449  014EEE  0E02               	movlw	2
  5450  014EF0  EC62  F0A8         	call	_LCD_goto_line
  5451                           
  5452                           ;RemoteCan.c: 213: LCD_write_message("Direction: ");
  5453  014EF4  0ECF               	movlw	low STR_6
  5454  014EF6  0100               	movlb	0	; () banked
  5455  014EF8  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5456  014EFA  0EFF               	movlw	high STR_6
  5457  014EFC  0100               	movlb	0	; () banked
  5458  014EFE  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5459  014F00  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  5460                           
  5461                           ;RemoteCan.c: 214: if (switch_position != 0) {
  5462  014F04  0100               	movlb	0	; () banked
  5463  014F06  51EA               	movf	_switch_position& (0+255),w,b	;volatile
  5464  014F08  B4D8               	btfsc	status,2,c
  5465  014F0A  D016               	goto	l8418
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;RemoteCan.c: 215: if (dir == 0) {
  5469  014F0C  0100               	movlb	0	; () banked
  5470  014F0E  51E9               	movf	_dir& (0+255),w,b	;volatile
  5471  014F10  A4D8               	btfss	status,2,c
  5472  014F12  D009               	goto	l8416
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;RemoteCan.c: 216: LCD_write_message("FWD");
  5476  014F14  0EF9               	movlw	low STR_7
  5477  014F16  0100               	movlb	0	; () banked
  5478  014F18  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5479  014F1A  0EFF               	movlw	high STR_7
  5480  014F1C  0100               	movlb	0	; () banked
  5481  014F1E  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5482  014F20  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  5483                           
  5484                           ;RemoteCan.c: 217: } else {
  5485  014F24  D011               	goto	l8420
  5486  014F26                     l8416:
  5487                           
  5488                           ;RemoteCan.c: 218: LCD_write_message("BKWD");
  5489  014F26  0EEF               	movlw	low STR_8
  5490  014F28  0100               	movlb	0	; () banked
  5491  014F2A  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5492  014F2C  0EFF               	movlw	high STR_8
  5493  014F2E  0100               	movlb	0	; () banked
  5494  014F30  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5495  014F32  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  5496                           
  5497                           ;RemoteCan.c: 219: }
  5498                           ;RemoteCan.c: 220: } else {
  5499  014F36  D008               	goto	l8420
  5500  014F38                     l8418:
  5501                           
  5502                           ;RemoteCan.c: 222: LCD_write_message("P");
  5503  014F38  0EFD               	movlw	low STR_9
  5504  014F3A  0100               	movlb	0	; () banked
  5505  014F3C  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5506  014F3E  0EFF               	movlw	high STR_9
  5507  014F40  0100               	movlb	0	; () banked
  5508  014F42  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5509  014F44  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  5510  014F48                     l8420:
  5511                           
  5512                           ;RemoteCan.c: 223: }
  5513                           ;RemoteCan.c: 225: LCD_goto_line(3);
  5514  014F48  0E03               	movlw	3
  5515  014F4A  EC62  F0A8         	call	_LCD_goto_line
  5516                           
  5517                           ;RemoteCan.c: 226: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  5518  014F4E  0E21               	movlw	low _str
  5519  014F50  0100               	movlb	0	; () banked
  5520  014F52  6FBF               	movwf	sprintf@sp& (0+255),b
  5521  014F54  0E01               	movlw	high _str
  5522  014F56  0100               	movlb	0	; () banked
  5523  014F58  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  5524  014F5A  0EDB               	movlw	low STR_10
  5525  014F5C  0100               	movlb	0	; () banked
  5526  014F5E  6FC1               	movwf	sprintf@f& (0+255),b
  5527  014F60  0EFF               	movlw	high STR_10
  5528  014F62  0100               	movlb	0	; () banked
  5529  014F64  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  5530  014F66  C00B  F0C3         	movff	_actual_speed_kmh,?_sprintf+4
  5531  014F6A  C00C  F0C4         	movff	_actual_speed_kmh+1,?_sprintf+5
  5532  014F6E  C00D  F0C5         	movff	_actual_speed_kmh+2,?_sprintf+6
  5533  014F72  C00E  F0C6         	movff	_actual_speed_kmh+3,?_sprintf+7
  5534  014F76  EC83  F085         	call	_sprintf	;wreg free
  5535                           
  5536                           ;RemoteCan.c: 227: str[11] = '\0';
  5537  014F7A  0E00               	movlw	0
  5538  014F7C  0101               	movlb	1	; () banked
  5539  014F7E  6F2C               	movwf	(_str+11)& (0+255),b
  5540                           
  5541                           ; BSR set to: 1
  5542                           ;RemoteCan.c: 228: LCD_write_string(str);
  5543  014F80  0E21               	movlw	low _str
  5544  014F82  0100               	movlb	0	; () banked
  5545  014F84  6F80               	movwf	LCD_write_string@buffer& (0+255),b
  5546  014F86  0E01               	movlw	high _str
  5547  014F88  0100               	movlb	0	; () banked
  5548  014F8A  6F81               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  5549  014F8C  ECDB  F0AC         	call	_LCD_write_string	;wreg free
  5550                           
  5551                           ;RemoteCan.c: 229: LCD_write_message("Km/h");
  5552  014F90  0EF4               	movlw	low STR_11
  5553  014F92  0100               	movlb	0	; () banked
  5554  014F94  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5555  014F96  0EFF               	movlw	high STR_11
  5556  014F98  0100               	movlb	0	; () banked
  5557  014F9A  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5558  014F9C  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  5559                           
  5560                           ;RemoteCan.c: 230: LCD_goto_line(4);
  5561  014FA0  0E04               	movlw	4
  5562  014FA2  EC62  F0A8         	call	_LCD_goto_line
  5563                           
  5564                           ;RemoteCan.c: 231: LCD_write_message("====================");
  5565  014FA6  0EAC               	movlw	low STR_1
  5566  014FA8  0100               	movlb	0	; () banked
  5567  014FAA  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5568  014FAC  0EFF               	movlw	high STR_1
  5569  014FAE  0100               	movlb	0	; () banked
  5570  014FB0  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5571  014FB2  EC7A  F0AC         	call	_LCD_write_message	;wreg free
  5572  014FB6  0012               	return		;funcret
  5573  014FB8                     __end_of_LCD_Handler:
  5574                           	opt stack 0
  5575                           tblptru	equ	0xFF8
  5576                           tblptrh	equ	0xFF7
  5577                           tblptrl	equ	0xFF6
  5578                           tablat	equ	0xFF5
  5579                           intcon	equ	0xFF2
  5580                           postinc0	equ	0xFEE
  5581                           wreg	equ	0xFE8
  5582                           status	equ	0xFD8
  5583                           
  5584 ;; *************** function _sprintf *****************
  5585 ;; Defined at:
  5586 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  5589 ;;		 -> str(12), 
  5590 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  5591 ;;		 -> STR_10(12), 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  5594 ;;  tmpval          4   14[BANK1 ] struct .
  5595 ;;  val             4    8[BANK1 ] unsigned long 
  5596 ;;  cp              3    0        PTR const unsigned char 
  5597 ;;  prec            2   18[BANK1 ] int 
  5598 ;;  exp             2   12[BANK1 ] int 
  5599 ;;  flag            2    6[BANK1 ] unsigned short 
  5600 ;;  ap              2    4[BANK1 ] PTR void [1]
  5601 ;;		 -> ?_sprintf(2), 
  5602 ;;  len             2    0        unsigned int 
  5603 ;;  width           2    0        int 
  5604 ;;  c               1   24[BANK1 ] char 
  5605 ;;  d               1    0        unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2   95[BANK0 ] int 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5615 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;Total ram usage:       35 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    5
  5622 ;; This function calls:
  5623 ;;		___awdiv
  5624 ;;		___fladd
  5625 ;;		___flge
  5626 ;;		___flmul
  5627 ;;		___flneg
  5628 ;;		___flsub
  5629 ;;		___fltol
  5630 ;;		___lldiv
  5631 ;;		___llmod
  5632 ;;		___wmul
  5633 ;;		___xxtofl
  5634 ;;		__div_to_l_
  5635 ;;		__tdiv_to_l_
  5636 ;;		_fround
  5637 ;;		_isdigit
  5638 ;;		_scale
  5639 ;; This function is called by:
  5640 ;;		_LCD_Handler
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text8
  5645  010B06                     __ptext8:
  5646                           	opt stack 0
  5647  010B06                     _sprintf:
  5648                           	opt stack 24
  5649                           
  5650                           ;doprnt.c: 494: va_list ap;
  5651                           ;doprnt.c: 499: signed char c;
  5652                           ;doprnt.c: 501: int width;
  5653                           ;doprnt.c: 504: int prec;
  5654                           ;doprnt.c: 508: unsigned short flag;
  5655                           ;doprnt.c: 515: char d;
  5656                           ;doprnt.c: 516: double fval;
  5657                           ;doprnt.c: 517: int exp;
  5658                           ;doprnt.c: 523: union {
  5659                           ;doprnt.c: 524: unsigned long vd;
  5660                           ;doprnt.c: 525: double integ;
  5661                           ;doprnt.c: 526: } tmpval;
  5662                           ;doprnt.c: 528: unsigned long val;
  5663                           ;doprnt.c: 529: unsigned len;
  5664                           ;doprnt.c: 530: const char * cp;
  5665                           ;doprnt.c: 533: *ap = __va_start();
  5666                           
  5667                           ;incstack = 0
  5668  010B06  0EC3               	movlw	low (?_sprintf+4)
  5669  010B08  0101               	movlb	1	; () banked
  5670  010B0A  6F04               	movwf	sprintf@ap& (0+255),b
  5671  010B0C  0E00               	movlw	high (?_sprintf+4)
  5672  010B0E  0101               	movlb	1	; () banked
  5673  010B10  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  5674                           
  5675                           ;doprnt.c: 536: while(c = *f++) {
  5676  010B12  EFB5  F089         	goto	l8124
  5677  010B16                     l7926:
  5678                           
  5679                           ; BSR set to: 1
  5680                           ;doprnt.c: 538: if(c != '%')
  5681  010B16  0E25               	movlw	37
  5682  010B18  0101               	movlb	1	; () banked
  5683  010B1A  1918               	xorwf	sprintf@c& (0+255),w,b
  5684  010B1C  B4D8               	btfsc	status,2,c
  5685  010B1E  D008               	goto	l7932
  5686                           
  5687                           ; BSR set to: 1
  5688                           ;doprnt.c: 540: {
  5689                           ;doprnt.c: 541: ((*sp++ = (c)));
  5690  010B20  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  5691  010B24  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  5692  010B28  C118  FFDF         	movff	sprintf@c,indf2
  5693  010B2C  EFB2  F089         	goto	l8122
  5694  010B30                     l7932:
  5695                           
  5696                           ;doprnt.c: 543: }
  5697                           ;doprnt.c: 548: flag = 0;
  5698  010B30  0E00               	movlw	0
  5699  010B32  0101               	movlb	1	; () banked
  5700  010B34  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  5701  010B36  0E00               	movlw	0
  5702  010B38  6F06               	movwf	sprintf@flag& (0+255),b
  5703                           
  5704                           ; BSR set to: 1
  5705                           ;doprnt.c: 611: if(*f == '.') {
  5706  010B3A  C0C1  FFF6         	movff	sprintf@f,tblptrl
  5707  010B3E  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  5708  010B42                     	if	0	;tblptru may be non-zero
  5709  010B42                     	endif
  5710  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5711  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  5712  010B44  6EF8               	movwf	tblptru,c
  5713  010B46                     	endif
  5714  010B46  0008               	tblrd		*
  5715  010B48  50F5               	movf	tablat,w,c
  5716  010B4A  0A2E               	xorlw	46
  5717  010B4C  A4D8               	btfss	status,2,c
  5718  010B4E  D03D               	goto	l7946
  5719                           
  5720                           ; BSR set to: 1
  5721                           ;doprnt.c: 612: flag |= 0x4000;
  5722  010B50  0101               	movlb	1	; () banked
  5723  010B52  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  5724                           
  5725                           ;doprnt.c: 613: f++;
  5726  010B54  0100               	movlb	0	; () banked
  5727  010B56  4BC1               	infsnz	sprintf@f& (0+255),f,b
  5728  010B58  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;doprnt.c: 620: {
  5732                           ;doprnt.c: 621: prec = 0;
  5733  010B5A  0E00               	movlw	0
  5734  010B5C  0101               	movlb	1	; () banked
  5735  010B5E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5736  010B60  0E00               	movlw	0
  5737  010B62  6F12               	movwf	sprintf@prec& (0+255),b
  5738                           
  5739                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5740  010B64  D025               	goto	l7944
  5741  010B66                     l7940:
  5742                           
  5743                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5744  010B66  C112  F06F         	movff	sprintf@prec,___wmul@multiplier
  5745  010B6A  C113  F070         	movff	sprintf@prec+1,___wmul@multiplier+1
  5746  010B6E  0E00               	movlw	0
  5747  010B70  0100               	movlb	0	; () banked
  5748  010B72  6F72               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5749  010B74  0E0A               	movlw	10
  5750  010B76  6F71               	movwf	___wmul@multiplicand& (0+255),b
  5751  010B78  EC5F  F0AC         	call	___wmul	;wreg free
  5752  010B7C  C0C1  FFF6         	movff	sprintf@f,tblptrl
  5753  010B80  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  5754  010B84                     	if	0	;tblptru may be non-zero
  5755  010B84                     	endif
  5756  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5757  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  5758  010B86  6EF8               	movwf	tblptru,c
  5759  010B88                     	endif
  5760  010B88  0008               	tblrd		*
  5761  010B8A  50F5               	movf	tablat,w,c
  5762  010B8C  0100               	movlb	0	; () banked
  5763  010B8E  276F               	addwf	?___wmul& (0+255),f,b
  5764  010B90  0E00               	movlw	0
  5765  010B92  0100               	movlb	0	; () banked
  5766  010B94  2370               	addwfc	(?___wmul+1)& (0+255),f,b
  5767  010B96  0ED0               	movlw	208
  5768  010B98  0100               	movlb	0	; () banked
  5769  010B9A  256F               	addwf	?___wmul& (0+255),w,b
  5770  010B9C  0101               	movlb	1	; () banked
  5771  010B9E  6F12               	movwf	sprintf@prec& (0+255),b
  5772  010BA0  0EFF               	movlw	255
  5773  010BA2  0100               	movlb	0	; () banked
  5774  010BA4  2170               	addwfc	(?___wmul+1)& (0+255),w,b
  5775  010BA6  0101               	movlb	1	; () banked
  5776  010BA8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5777                           
  5778                           ; BSR set to: 1
  5779  010BAA  0100               	movlb	0	; () banked
  5780  010BAC  4BC1               	infsnz	sprintf@f& (0+255),f,b
  5781  010BAE  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  5782  010BB0                     l7944:
  5783  010BB0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  5784  010BB4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  5785  010BB8                     	if	0	;tblptru may be non-zero
  5786  010BB8                     	endif
  5787  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5788  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  5789  010BBA  6EF8               	movwf	tblptru,c
  5790  010BBC                     	endif
  5791  010BBC  0008               	tblrd		*
  5792  010BBE  50F5               	movf	tablat,w,c
  5793  010BC0  ECC6  F0AC         	call	_isdigit
  5794  010BC4  A0D8               	btfss	status,0,c
  5795  010BC6  D00C               	goto	l7954
  5796  010BC8  D7CE               	goto	l7940
  5797  010BCA                     l7946:
  5798                           
  5799                           ;doprnt.c: 626: prec = 0;
  5800  010BCA  0E00               	movlw	0
  5801  010BCC  0101               	movlb	1	; () banked
  5802  010BCE  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5803  010BD0  0E00               	movlw	0
  5804  010BD2  6F12               	movwf	sprintf@prec& (0+255),b
  5805                           
  5806                           ; BSR set to: 1
  5807                           ;doprnt.c: 628: flag |= 0x1000;
  5808  010BD4  0101               	movlb	1	; () banked
  5809  010BD6  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  5810                           
  5811                           ; BSR set to: 1
  5812                           ;doprnt.c: 630: }
  5813                           ;doprnt.c: 635: switch(c = *f++) {
  5814  010BD8  D003               	goto	l7954
  5815  010BDA                     l7950:
  5816                           
  5817                           ; BSR set to: 1
  5818                           ;doprnt.c: 663: flag |= 0x400;
  5819  010BDA  0101               	movlb	1	; () banked
  5820  010BDC  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  5821                           
  5822                           ;doprnt.c: 664: break;
  5823  010BDE  D015               	goto	l7956
  5824  010BE0                     l7954:
  5825  010BE0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  5826  010BE4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  5827  010BE8  0100               	movlb	0	; () banked
  5828  010BEA  4BC1               	infsnz	sprintf@f& (0+255),f,b
  5829  010BEC  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  5830  010BEE                     	if	0	;tblptru may be non-zero
  5831  010BEE                     	endif
  5832  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5833  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  5834  010BF0  6EF8               	movwf	tblptru,c
  5835  010BF2                     	endif
  5836  010BF2  0008               	tblrd		*
  5837  010BF4  CFF5 F118          	movff	tablat,sprintf@c
  5838  010BF8  0101               	movlb	1	; () banked
  5839  010BFA  5118               	movf	sprintf@c& (0+255),w,b
  5840                           
  5841                           ; Switch size 1, requested type "space"
  5842                           ; Number of cases is 2, Range of values is 0 to 102
  5843                           ; switch strategies available:
  5844                           ; Name         Instructions Cycles
  5845                           ; simple_byte            7     4 (average)
  5846                           ;	Chosen strategy is simple_byte
  5847  010BFC  0A00               	xorlw	0	; case 0
  5848  010BFE  B4D8               	btfsc	status,2,c
  5849  010C00  D3C5               	goto	l8126
  5850  010C02  0A66               	xorlw	102	; case 102
  5851  010C04  B4D8               	btfsc	status,2,c
  5852  010C06  D7E9               	goto	l7950
  5853  010C08  D3B0               	goto	l8124
  5854  010C0A                     l7956:
  5855                           
  5856                           ; BSR set to: 1
  5857                           ;doprnt.c: 825: if(flag & (0x700)) {
  5858  010C0A  0E07               	movlw	7
  5859  010C0C  0101               	movlb	1	; () banked
  5860  010C0E  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  5861  010C10  B4D8               	btfsc	status,2,c
  5862  010C12  D353               	goto	l8104
  5863                           
  5864                           ; BSR set to: 1
  5865                           ;doprnt.c: 827: if(flag & 0x1000)
  5866  010C14  0101               	movlb	1	; () banked
  5867  010C16  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  5868  010C18  D005               	goto	l7962
  5869                           
  5870                           ; BSR set to: 1
  5871                           ;doprnt.c: 829: prec = 6;
  5872  010C1A  0E00               	movlw	0
  5873  010C1C  0101               	movlb	1	; () banked
  5874  010C1E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  5875  010C20  0E06               	movlw	6
  5876  010C22  6F12               	movwf	sprintf@prec& (0+255),b
  5877  010C24                     l7962:
  5878                           
  5879                           ; BSR set to: 1
  5880                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5881  010C24  C104  FFD9         	movff	sprintf@ap,fsr2l
  5882  010C28  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  5883  010C2C  CFDE F114          	movff	postinc2,sprintf@fval
  5884  010C30  CFDE F115          	movff	postinc2,sprintf@fval+1
  5885  010C34  CFDE F116          	movff	postinc2,sprintf@fval+2
  5886  010C38  CFDE F117          	movff	postinc2,sprintf@fval+3
  5887                           
  5888                           ; BSR set to: 1
  5889  010C3C  0E04               	movlw	4
  5890  010C3E  0101               	movlb	1	; () banked
  5891  010C40  2704               	addwf	sprintf@ap& (0+255),f,b
  5892  010C42  0E00               	movlw	0
  5893  010C44  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5894                           
  5895                           ; BSR set to: 1
  5896                           ;doprnt.c: 831: if(fval < 0.0) {
  5897  010C46  0101               	movlb	1	; () banked
  5898  010C48  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  5899  010C4A  D015               	goto	l7972
  5900                           
  5901                           ; BSR set to: 1
  5902                           ;doprnt.c: 832: fval = -fval;
  5903  010C4C  C114  F06F         	movff	sprintf@fval,___flneg@f1
  5904  010C50  C115  F070         	movff	sprintf@fval+1,___flneg@f1+1
  5905  010C54  C116  F071         	movff	sprintf@fval+2,___flneg@f1+2
  5906  010C58  C117  F072         	movff	sprintf@fval+3,___flneg@f1+3
  5907  010C5C  EC43  F0AC         	call	___flneg	;wreg free
  5908  010C60  C06F  F114         	movff	?___flneg,sprintf@fval
  5909  010C64  C070  F115         	movff	?___flneg+1,sprintf@fval+1
  5910  010C68  C071  F116         	movff	?___flneg+2,sprintf@fval+2
  5911  010C6C  C072  F117         	movff	?___flneg+3,sprintf@fval+3
  5912                           
  5913                           ;doprnt.c: 833: flag |= 0x03;
  5914  010C70  0E03               	movlw	3
  5915  010C72  0101               	movlb	1	; () banked
  5916  010C74  1306               	iorwf	sprintf@flag& (0+255),f,b
  5917  010C76                     l7972:
  5918                           
  5919                           ; BSR set to: 1
  5920                           ;doprnt.c: 834: }
  5921                           ;doprnt.c: 835: exp = 0;
  5922  010C76  0E00               	movlw	0
  5923  010C78  0101               	movlb	1	; () banked
  5924  010C7A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  5925  010C7C  0E00               	movlw	0
  5926  010C7E  6F0C               	movwf	sprintf@exp& (0+255),b
  5927                           
  5928                           ; BSR set to: 1
  5929                           ;doprnt.c: 836: if( fval!=0) {
  5930  010C80  0101               	movlb	1	; () banked
  5931  010C82  5114               	movf	sprintf@fval& (0+255),w,b
  5932  010C84  0101               	movlb	1	; () banked
  5933  010C86  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  5934  010C88  0101               	movlb	1	; () banked
  5935  010C8A  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  5936  010C8C  0101               	movlb	1	; () banked
  5937  010C8E  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  5938  010C90  B4D8               	btfsc	status,2,c
  5939  010C92  D08E               	goto	l8000
  5940                           
  5941                           ; BSR set to: 1
  5942                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  5943  010C94  0101               	movlb	1	; () banked
  5944  010C96  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  5945  010C98  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  5946  010C9A  0F82               	addlw	130
  5947  010C9C  0101               	movlb	1	; () banked
  5948  010C9E  6F0C               	movwf	sprintf@exp& (0+255),b
  5949  010CA0  0101               	movlb	1	; () banked
  5950  010CA2  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  5951  010CA4  0EFF               	movlw	255
  5952  010CA6  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;doprnt.c: 838: exp--;
  5956  010CA8  0101               	movlb	1	; () banked
  5957  010CAA  070C               	decf	sprintf@exp& (0+255),f,b
  5958  010CAC  A0D8               	btfss	status,0,c
  5959  010CAE  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  5960                           
  5961                           ; BSR set to: 1
  5962                           ;doprnt.c: 839: exp *= 3;
  5963  010CB0  C10C  F06F         	movff	sprintf@exp,___wmul@multiplier
  5964  010CB4  C10D  F070         	movff	sprintf@exp+1,___wmul@multiplier+1
  5965  010CB8  0E00               	movlw	0
  5966  010CBA  0100               	movlb	0	; () banked
  5967  010CBC  6F72               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5968  010CBE  0E03               	movlw	3
  5969  010CC0  6F71               	movwf	___wmul@multiplicand& (0+255),b
  5970  010CC2  EC5F  F0AC         	call	___wmul	;wreg free
  5971  010CC6  C06F  F10C         	movff	?___wmul,sprintf@exp
  5972  010CCA  C070  F10D         	movff	?___wmul+1,sprintf@exp+1
  5973                           
  5974                           ;doprnt.c: 840: exp /= 10;
  5975  010CCE  C10C  F075         	movff	sprintf@exp,___awdiv@dividend
  5976  010CD2  C10D  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  5977  010CD6  0E00               	movlw	0
  5978  010CD8  0100               	movlb	0	; () banked
  5979  010CDA  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  5980  010CDC  0E0A               	movlw	10
  5981  010CDE  6F77               	movwf	___awdiv@divisor& (0+255),b
  5982  010CE0  ECB3  F0A9         	call	___awdiv	;wreg free
  5983  010CE4  C075  F10C         	movff	?___awdiv,sprintf@exp
  5984  010CE8  C076  F10D         	movff	?___awdiv+1,sprintf@exp+1
  5985                           
  5986                           ;doprnt.c: 841: if(exp < 0)
  5987  010CEC  0101               	movlb	1	; () banked
  5988  010CEE  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  5989  010CF0  D004               	goto	l7988
  5990                           
  5991                           ; BSR set to: 1
  5992                           ;doprnt.c: 842: exp--;
  5993  010CF2  0101               	movlb	1	; () banked
  5994  010CF4  070C               	decf	sprintf@exp& (0+255),f,b
  5995  010CF6  A0D8               	btfss	status,0,c
  5996  010CF8  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  5997  010CFA                     l7988:
  5998                           
  5999                           ; BSR set to: 1
  6000                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6001  010CFA  0101               	movlb	1	; () banked
  6002  010CFC  510C               	movf	sprintf@exp& (0+255),w,b
  6003  010CFE  0800               	sublw	0
  6004  010D00  ECDB  F090         	call	_scale
  6005  010D04  C096  F10E         	movff	?_scale,sprintf@tmpval
  6006  010D08  C097  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6007  010D0C  C098  F110         	movff	?_scale+2,sprintf@tmpval+2
  6008  010D10  C099  F111         	movff	?_scale+3,sprintf@tmpval+3
  6009                           
  6010                           ;doprnt.c: 847: tmpval.integ *= fval;
  6011  010D14  C10E  F07D         	movff	sprintf@tmpval,___flmul@b
  6012  010D18  C10F  F07E         	movff	sprintf@tmpval+1,___flmul@b+1
  6013  010D1C  C110  F07F         	movff	sprintf@tmpval+2,___flmul@b+2
  6014  010D20  C111  F080         	movff	sprintf@tmpval+3,___flmul@b+3
  6015  010D24  C114  F081         	movff	sprintf@fval,___flmul@a
  6016  010D28  C115  F082         	movff	sprintf@fval+1,___flmul@a+1
  6017  010D2C  C116  F083         	movff	sprintf@fval+2,___flmul@a+2
  6018  010D30  C117  F084         	movff	sprintf@fval+3,___flmul@a+3
  6019  010D34  EC42  F098         	call	___flmul	;wreg free
  6020  010D38  C07D  F10E         	movff	?___flmul,sprintf@tmpval
  6021  010D3C  C07E  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  6022  010D40  C07F  F110         	movff	?___flmul+2,sprintf@tmpval+2
  6023  010D44  C080  F111         	movff	?___flmul+3,sprintf@tmpval+3
  6024                           
  6025                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6026  010D48  C10E  F06F         	movff	sprintf@tmpval,___flge@ff1
  6027  010D4C  C10F  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6028  010D50  C110  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6029  010D54  C111  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6030  010D58  0E00               	movlw	0
  6031  010D5A  0100               	movlb	0	; () banked
  6032  010D5C  6F73               	movwf	___flge@ff2& (0+255),b
  6033  010D5E  0E00               	movlw	0
  6034  010D60  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6035  010D62  0E80               	movlw	128
  6036  010D64  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6037  010D66  0E3F               	movlw	63
  6038  010D68  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6039  010D6A  EC5C  F0A4         	call	___flge	;wreg free
  6040  010D6E  0100               	movlb	0	; () banked
  6041  010D70  B0D8               	btfsc	status,0,c
  6042  010D72  D005               	goto	l7996
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;doprnt.c: 849: exp--;
  6046  010D74  0101               	movlb	1	; () banked
  6047  010D76  070C               	decf	sprintf@exp& (0+255),f,b
  6048  010D78  A0D8               	btfss	status,0,c
  6049  010D7A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6050  010D7C  D019               	goto	l8000
  6051  010D7E                     l7996:
  6052                           
  6053                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6054  010D7E  C10E  F06F         	movff	sprintf@tmpval,___flge@ff1
  6055  010D82  C10F  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6056  010D86  C110  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6057  010D8A  C111  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6058  010D8E  0E00               	movlw	0
  6059  010D90  0100               	movlb	0	; () banked
  6060  010D92  6F73               	movwf	___flge@ff2& (0+255),b
  6061  010D94  0E00               	movlw	0
  6062  010D96  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6063  010D98  0E20               	movlw	32
  6064  010D9A  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6065  010D9C  0E41               	movlw	65
  6066  010D9E  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6067  010DA0  EC5C  F0A4         	call	___flge	;wreg free
  6068  010DA4  0100               	movlb	0	; () banked
  6069  010DA6  A0D8               	btfss	status,0,c
  6070  010DA8  D003               	goto	l8000
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;doprnt.c: 851: exp++;
  6074  010DAA  0101               	movlb	1	; () banked
  6075  010DAC  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  6076  010DAE  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  6077  010DB0                     l8000:
  6078                           
  6079                           ;doprnt.c: 852: }
  6080                           ;doprnt.c: 1112: if(prec <= 12)
  6081  010DB0  0101               	movlb	1	; () banked
  6082  010DB2  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6083  010DB4  D008               	goto	l8002
  6084  010DB6  0101               	movlb	1	; () banked
  6085  010DB8  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6086  010DBA  E123               	bnz	l8004
  6087  010DBC  0E0D               	movlw	13
  6088  010DBE  0101               	movlb	1	; () banked
  6089  010DC0  5D12               	subwf	sprintf@prec& (0+255),w,b
  6090  010DC2  B0D8               	btfsc	status,0,c
  6091  010DC4  D01E               	goto	l8004
  6092  010DC6                     l8002:
  6093                           
  6094                           ; BSR set to: 1
  6095                           ;doprnt.c: 1113: fval += fround(prec);
  6096  010DC6  C114  F0A3         	movff	sprintf@fval,___fladd@b
  6097  010DCA  C115  F0A4         	movff	sprintf@fval+1,___fladd@b+1
  6098  010DCE  C116  F0A5         	movff	sprintf@fval+2,___fladd@b+2
  6099  010DD2  C117  F0A6         	movff	sprintf@fval+3,___fladd@b+3
  6100  010DD6  0101               	movlb	1	; () banked
  6101  010DD8  5112               	movf	sprintf@prec& (0+255),w,b
  6102  010DDA  EC48  F0A0         	call	_fround
  6103  010DDE  C096  F0A7         	movff	?_fround,___fladd@a
  6104  010DE2  C097  F0A8         	movff	?_fround+1,___fladd@a+1
  6105  010DE6  C098  F0A9         	movff	?_fround+2,___fladd@a+2
  6106  010DEA  C099  F0AA         	movff	?_fround+3,___fladd@a+3
  6107  010DEE  ECEE  F095         	call	___fladd	;wreg free
  6108  010DF2  C0A3  F114         	movff	?___fladd,sprintf@fval
  6109  010DF6  C0A4  F115         	movff	?___fladd+1,sprintf@fval+1
  6110  010DFA  C0A5  F116         	movff	?___fladd+2,sprintf@fval+2
  6111  010DFE  C0A6  F117         	movff	?___fladd+3,sprintf@fval+3
  6112  010E02                     l8004:
  6113                           
  6114                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6115  010E02  0101               	movlb	1	; () banked
  6116  010E04  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6117  010E06  D008               	goto	l8006
  6118  010E08  0101               	movlb	1	; () banked
  6119  010E0A  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6120  010E0C  E12E               	bnz	l8012
  6121  010E0E  0E0A               	movlw	10
  6122  010E10  0101               	movlb	1	; () banked
  6123  010E12  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6124  010E14  B0D8               	btfsc	status,0,c
  6125  010E16  D029               	goto	l8012
  6126  010E18                     l8006:
  6127                           
  6128                           ; BSR set to: 1
  6129  010E18  0101               	movlb	1	; () banked
  6130  010E1A  5114               	movf	sprintf@fval& (0+255),w,b
  6131  010E1C  0101               	movlb	1	; () banked
  6132  010E1E  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6133  010E20  0101               	movlb	1	; () banked
  6134  010E22  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6135  010E24  0101               	movlb	1	; () banked
  6136  010E26  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6137  010E28  B4D8               	btfsc	status,2,c
  6138  010E2A  D06D               	goto	l8026
  6139                           
  6140                           ; BSR set to: 1
  6141  010E2C  C114  F09F         	movff	sprintf@fval,___fltol@f1
  6142  010E30  C115  F0A0         	movff	sprintf@fval+1,___fltol@f1+1
  6143  010E34  C116  F0A1         	movff	sprintf@fval+2,___fltol@f1+2
  6144  010E38  C117  F0A2         	movff	sprintf@fval+3,___fltol@f1+3
  6145  010E3C  ECDC  F0A7         	call	___fltol	;wreg free
  6146  010E40  0100               	movlb	0	; () banked
  6147  010E42  519F               	movf	?___fltol& (0+255),w,b
  6148  010E44  0100               	movlb	0	; () banked
  6149  010E46  11A0               	iorwf	(?___fltol+1)& (0+255),w,b
  6150  010E48  0100               	movlb	0	; () banked
  6151  010E4A  11A1               	iorwf	(?___fltol+2)& (0+255),w,b
  6152  010E4C  0100               	movlb	0	; () banked
  6153  010E4E  11A2               	iorwf	(?___fltol+3)& (0+255),w,b
  6154  010E50  A4D8               	btfss	status,2,c
  6155  010E52  D059               	goto	l8026
  6156                           
  6157                           ; BSR set to: 0
  6158  010E54  0101               	movlb	1	; () banked
  6159  010E56  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6160  010E58  D056               	goto	l8026
  6161  010E5A  0101               	movlb	1	; () banked
  6162  010E5C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6163  010E5E  E105               	bnz	l8012
  6164  010E60  0E02               	movlw	2
  6165  010E62  0101               	movlb	1	; () banked
  6166  010E64  5D0C               	subwf	sprintf@exp& (0+255),w,b
  6167  010E66  A0D8               	btfss	status,0,c
  6168  010E68  D04E               	goto	l8026
  6169  010E6A                     l8012:
  6170                           
  6171                           ; BSR set to: 1
  6172                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6173  010E6A  C10E  F06F         	movff	sprintf@tmpval,___flge@ff1
  6174  010E6E  C10F  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6175  010E72  C110  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6176  010E76  C111  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6177  010E7A  0E5F               	movlw	95
  6178  010E7C  0100               	movlb	0	; () banked
  6179  010E7E  6F73               	movwf	___flge@ff2& (0+255),b
  6180  010E80  0E70               	movlw	112
  6181  010E82  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6182  010E84  0E89               	movlw	137
  6183  010E86  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6184  010E88  0E40               	movlw	64
  6185  010E8A  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6186  010E8C  EC5C  F0A4         	call	___flge	;wreg free
  6187  010E90  0100               	movlb	0	; () banked
  6188  010E92  B0D8               	btfsc	status,0,c
  6189  010E94  D003               	goto	l8016
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6193  010E96  0101               	movlb	1	; () banked
  6194  010E98  0EF7               	movlw	247
  6195  010E9A  D002               	goto	L3
  6196  010E9C                     l8016:
  6197                           
  6198                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6199  010E9C  0101               	movlb	1	; () banked
  6200  010E9E  0EF8               	movlw	248
  6201  010EA0                     L3:
  6202  010EA0  270C               	addwf	sprintf@exp& (0+255),f,b
  6203  010EA2  0EFF               	movlw	255
  6204  010EA4  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6208                           
  6209                           ; BSR set to: 1
  6210  010EA6  0101               	movlb	1	; () banked
  6211  010EA8  510C               	movf	sprintf@exp& (0+255),w,b
  6212  010EAA  ECDB  F090         	call	_scale
  6213  010EAE  C096  F10E         	movff	?_scale,sprintf@tmpval
  6214  010EB2  C097  F10F         	movff	?_scale+1,sprintf@tmpval+1
  6215  010EB6  C098  F110         	movff	?_scale+2,sprintf@tmpval+2
  6216  010EBA  C099  F111         	movff	?_scale+3,sprintf@tmpval+3
  6217  010EBE  C114  F06F         	movff	sprintf@fval,__div_to_l_@f1
  6218  010EC2  C115  F070         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6219  010EC6  C116  F071         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6220  010ECA  C117  F072         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6221  010ECE  C10E  F073         	movff	sprintf@tmpval,__div_to_l_@f2
  6222  010ED2  C10F  F074         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6223  010ED6  C110  F075         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6224  010EDA  C111  F076         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6225  010EDE  EC24  F0A5         	call	__div_to_l_	;wreg free
  6226  010EE2  C06F  F108         	movff	?__div_to_l_,sprintf@val
  6227  010EE6  C070  F109         	movff	?__div_to_l_+1,sprintf@val+1
  6228  010EEA  C071  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  6229  010EEE  C072  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  6230                           
  6231                           ;doprnt.c: 1129: fval = 0.0;
  6232  010EF2  0E00               	movlw	0
  6233  010EF4  0101               	movlb	1	; () banked
  6234  010EF6  6F14               	movwf	sprintf@fval& (0+255),b
  6235  010EF8  0E00               	movlw	0
  6236  010EFA  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  6237  010EFC  0E00               	movlw	0
  6238  010EFE  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  6239  010F00  0E00               	movlw	0
  6240  010F02  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  6241                           
  6242                           ;doprnt.c: 1130: } else {
  6243  010F04  D03C               	goto	l8030
  6244  010F06                     l8026:
  6245                           
  6246                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6247  010F06  C114  F09F         	movff	sprintf@fval,___fltol@f1
  6248  010F0A  C115  F0A0         	movff	sprintf@fval+1,___fltol@f1+1
  6249  010F0E  C116  F0A1         	movff	sprintf@fval+2,___fltol@f1+2
  6250  010F12  C117  F0A2         	movff	sprintf@fval+3,___fltol@f1+3
  6251  010F16  ECDC  F0A7         	call	___fltol	;wreg free
  6252  010F1A  C09F  F108         	movff	?___fltol,sprintf@val
  6253  010F1E  C0A0  F109         	movff	?___fltol+1,sprintf@val+1
  6254  010F22  C0A1  F10A         	movff	?___fltol+2,sprintf@val+2
  6255  010F26  C0A2  F10B         	movff	?___fltol+3,sprintf@val+3
  6256                           
  6257                           ;doprnt.c: 1132: fval -= (double)val;
  6258  010F2A  C114  F0B7         	movff	sprintf@fval,___flsub@b
  6259  010F2E  C115  F0B8         	movff	sprintf@fval+1,___flsub@b+1
  6260  010F32  C116  F0B9         	movff	sprintf@fval+2,___flsub@b+2
  6261  010F36  C117  F0BA         	movff	sprintf@fval+3,___flsub@b+3
  6262  010F3A  C108  F06F         	movff	sprintf@val,___xxtofl@val
  6263  010F3E  C109  F070         	movff	sprintf@val+1,___xxtofl@val+1
  6264  010F42  C10A  F071         	movff	sprintf@val+2,___xxtofl@val+2
  6265  010F46  C10B  F072         	movff	sprintf@val+3,___xxtofl@val+3
  6266  010F4A  0E00               	movlw	0
  6267  010F4C  ECC3  F0A1         	call	___xxtofl
  6268  010F50  C06F  F0BB         	movff	?___xxtofl,___flsub@a
  6269  010F54  C070  F0BC         	movff	?___xxtofl+1,___flsub@a+1
  6270  010F58  C071  F0BD         	movff	?___xxtofl+2,___flsub@a+2
  6271  010F5C  C072  F0BE         	movff	?___xxtofl+3,___flsub@a+3
  6272  010F60  ECC4  F0AB         	call	___flsub	;wreg free
  6273  010F64  C0B7  F114         	movff	?___flsub,sprintf@fval
  6274  010F68  C0B8  F115         	movff	?___flsub+1,sprintf@fval+1
  6275  010F6C  C0B9  F116         	movff	?___flsub+2,sprintf@fval+2
  6276  010F70  C0BA  F117         	movff	?___flsub+3,sprintf@fval+3
  6277                           
  6278                           ;doprnt.c: 1133: exp = 0;
  6279  010F74  0E00               	movlw	0
  6280  010F76  0101               	movlb	1	; () banked
  6281  010F78  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  6282  010F7A  0E00               	movlw	0
  6283  010F7C  6F0C               	movwf	sprintf@exp& (0+255),b
  6284  010F7E                     l8030:
  6285                           
  6286                           ; BSR set to: 1
  6287                           ;doprnt.c: 1134: }
  6288                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6289  010F7E  0E01               	movlw	1
  6290  010F80  0101               	movlb	1	; () banked
  6291  010F82  6F18               	movwf	sprintf@c& (0+255),b
  6292  010F84                     l8032:
  6293                           
  6294                           ; BSR set to: 1
  6295  010F84  0E0A               	movlw	10
  6296  010F86  0101               	movlb	1	; () banked
  6297  010F88  1918               	xorwf	sprintf@c& (0+255),w,b
  6298  010F8A  B4D8               	btfsc	status,2,c
  6299  010F8C  D021               	goto	l8044
  6300                           
  6301                           ; BSR set to: 1
  6302                           ;doprnt.c: 1137: if(val < dpowers[c])
  6303                           
  6304                           ; BSR set to: 1
  6305                           
  6306                           ; BSR set to: 1
  6307  010F8E  0101               	movlb	1	; () banked
  6308  010F90  5118               	movf	sprintf@c& (0+255),w,b
  6309  010F92  0D04               	mullw	4
  6310  010F94  0E45               	movlw	low _dpowers
  6311  010F96  24F3               	addwf	prodl,w,c
  6312  010F98  6EF6               	movwf	tblptrl,c
  6313  010F9A  0EFF               	movlw	high _dpowers
  6314  010F9C  20F4               	addwfc	prodh,w,c
  6315  010F9E  6EF7               	movwf	tblptrh,c
  6316  010FA0                     	if	1	;There are 3 active tblptr bytes
  6317  010FA0  6AF8               	clrf	tblptru,c
  6318  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6319  010FA4  22F8               	addwfc	tblptru,f,c
  6320  010FA6                     	endif
  6321  010FA6  0009               	tblrd		*+
  6322  010FA8  50F5               	movf	tablat,w,c
  6323  010FAA  0101               	movlb	1	; () banked
  6324  010FAC  5D08               	subwf	sprintf@val& (0+255),w,b
  6325  010FAE  0009               	tblrd		*+
  6326  010FB0  50F5               	movf	tablat,w,c
  6327  010FB2  0101               	movlb	1	; () banked
  6328  010FB4  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  6329  010FB6  0009               	tblrd		*+
  6330  010FB8  50F5               	movf	tablat,w,c
  6331  010FBA  0101               	movlb	1	; () banked
  6332  010FBC  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  6333  010FBE  0009               	tblrd		*+
  6334  010FC0  50F5               	movf	tablat,w,c
  6335  010FC2  0101               	movlb	1	; () banked
  6336  010FC4  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  6337  010FC6  A0D8               	btfss	status,0,c
  6338  010FC8  D003               	goto	l8044
  6339                           
  6340                           ; BSR set to: 1
  6341                           
  6342                           ; BSR set to: 1
  6343                           
  6344                           ; BSR set to: 1
  6345                           ;doprnt.c: 1138: break;
  6346  010FCA  0101               	movlb	1	; () banked
  6347  010FCC  2B18               	incf	sprintf@c& (0+255),f,b
  6348  010FCE  D7DA               	goto	l8032
  6349  010FD0                     l8044:
  6350                           
  6351                           ; BSR set to: 1
  6352                           ;doprnt.c: 1175: {
  6353                           ;doprnt.c: 1188: if(flag & 0x03)
  6354  010FD0  0E03               	movlw	3
  6355  010FD2  0101               	movlb	1	; () banked
  6356  010FD4  1506               	andwf	sprintf@flag& (0+255),w,b
  6357  010FD6  0100               	movlb	0	; () banked
  6358  010FD8  6FC7               	movwf	??_sprintf& (0+255),b
  6359  010FDA  0E00               	movlw	0
  6360  010FDC  0101               	movlb	1	; () banked
  6361  010FDE  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6362  010FE0  0100               	movlb	0	; () banked
  6363  010FE2  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  6364  010FE4  0100               	movlb	0	; () banked
  6365  010FE6  51C7               	movf	??_sprintf& (0+255),w,b
  6366  010FE8  0100               	movlb	0	; () banked
  6367  010FEA  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  6368  010FEC  B4D8               	btfsc	status,2,c
  6369  010FEE  D058               	goto	l8058
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6373  010FF0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6374  010FF4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6375  010FF8  0E2D               	movlw	45
  6376  010FFA  D050               	goto	L4
  6377  010FFC                     l8048:
  6378                           
  6379                           ; BSR set to: 0
  6380  010FFC  0100               	movlb	0	; () banked
  6381  010FFE  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  6382  011000  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;doprnt.c: 1195: }
  6386                           ;doprnt.c: 1196: while(c--) {
  6387  011002  D04E               	goto	l8058
  6388  011004                     l8050:
  6389                           
  6390                           ;doprnt.c: 1200: {
  6391                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6392  011004  C108  F06F         	movff	sprintf@val,___lldiv@dividend
  6393  011008  C109  F070         	movff	sprintf@val+1,___lldiv@dividend+1
  6394  01100C  C10A  F071         	movff	sprintf@val+2,___lldiv@dividend+2
  6395  011010  C10B  F072         	movff	sprintf@val+3,___lldiv@dividend+3
  6396  011014  0101               	movlb	1	; () banked
  6397  011016  5118               	movf	sprintf@c& (0+255),w,b
  6398  011018  0D04               	mullw	4
  6399  01101A  0E45               	movlw	low _dpowers
  6400  01101C  24F3               	addwf	prodl,w,c
  6401  01101E  6EF6               	movwf	tblptrl,c
  6402  011020  0EFF               	movlw	high _dpowers
  6403  011022  20F4               	addwfc	prodh,w,c
  6404  011024  6EF7               	movwf	tblptrh,c
  6405  011026                     	if	1	;There are 3 active tblptr bytes
  6406  011026  6AF8               	clrf	tblptru,c
  6407  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6408  01102A  22F8               	addwfc	tblptru,f,c
  6409  01102C                     	endif
  6410  01102C  0009               	tblrd		*+
  6411  01102E  CFF5 F073          	movff	tablat,___lldiv@divisor
  6412  011032  0009               	tblrd		*+
  6413  011034  CFF5 F074          	movff	tablat,___lldiv@divisor+1
  6414  011038  0009               	tblrd		*+
  6415  01103A  CFF5 F075          	movff	tablat,___lldiv@divisor+2
  6416  01103E  000A               	tblrd		*-
  6417  011040  CFF5 F076          	movff	tablat,___lldiv@divisor+3
  6418  011044  EC12  F0AA         	call	___lldiv	;wreg free
  6419  011048  C06F  F10E         	movff	?___lldiv,sprintf@tmpval
  6420  01104C  C070  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  6421  011050  C071  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  6422  011054  C072  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  6423                           
  6424                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6425  011058  C10E  F06F         	movff	sprintf@tmpval,___llmod@dividend
  6426  01105C  C10F  F070         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6427  011060  C110  F071         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6428  011064  C111  F072         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6429  011068  0E0A               	movlw	10
  6430  01106A  0100               	movlb	0	; () banked
  6431  01106C  6F73               	movwf	___llmod@divisor& (0+255),b
  6432  01106E  0E00               	movlw	0
  6433  011070  6F74               	movwf	(___llmod@divisor+1)& (0+255),b
  6434  011072  0E00               	movlw	0
  6435  011074  6F75               	movwf	(___llmod@divisor+2)& (0+255),b
  6436  011076  0E00               	movlw	0
  6437  011078  6F76               	movwf	(___llmod@divisor+3)& (0+255),b
  6438  01107A  ECC1  F0AA         	call	___llmod	;wreg free
  6439  01107E  C06F  F10E         	movff	?___llmod,sprintf@tmpval
  6440  011082  C070  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  6441  011086  C071  F110         	movff	?___llmod+2,sprintf@tmpval+2
  6442  01108A  C072  F111         	movff	?___llmod+3,sprintf@tmpval+3
  6443                           
  6444                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6445  01108E  0101               	movlb	1	; () banked
  6446  011090  510E               	movf	sprintf@tmpval& (0+255),w,b
  6447  011092  0F30               	addlw	48
  6448  011094  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6449  011098  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6450  01109C                     L4:
  6451  01109C  6EDF               	movwf	indf2,c
  6452  01109E  D7AE               	goto	l8048
  6453  0110A0                     l8058:
  6454                           
  6455                           ; BSR set to: 0
  6456  0110A0  0101               	movlb	1	; () banked
  6457  0110A2  0718               	decf	sprintf@c& (0+255),f,b
  6458  0110A4  0101               	movlb	1	; () banked
  6459  0110A6  2918               	incf	sprintf@c& (0+255),w,b
  6460  0110A8  B4D8               	btfsc	status,2,c
  6461  0110AA  D00E               	goto	l8066
  6462  0110AC  D7AB               	goto	l8050
  6463  0110AE                     l8060:
  6464                           
  6465                           ; BSR set to: 1
  6466                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6467  0110AE  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6468  0110B2  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6469  0110B6  0E30               	movlw	48
  6470  0110B8  6EDF               	movwf	indf2,c
  6471                           
  6472                           ; BSR set to: 1
  6473  0110BA  0100               	movlb	0	; () banked
  6474  0110BC  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  6475  0110BE  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;doprnt.c: 1209: exp--;
  6479  0110C0  0101               	movlb	1	; () banked
  6480  0110C2  070C               	decf	sprintf@exp& (0+255),f,b
  6481  0110C4  A0D8               	btfss	status,0,c
  6482  0110C6  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  6483  0110C8                     l8066:
  6484                           
  6485                           ; BSR set to: 1
  6486  0110C8  0101               	movlb	1	; () banked
  6487  0110CA  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6488  0110CC  D007               	goto	l8068
  6489  0110CE  0101               	movlb	1	; () banked
  6490  0110D0  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  6491  0110D2  E1ED               	bnz	l8060
  6492  0110D4  0101               	movlb	1	; () banked
  6493  0110D6  050C               	decf	sprintf@exp& (0+255),w,b
  6494  0110D8  B0D8               	btfsc	status,0,c
  6495  0110DA  D7E9               	goto	l8060
  6496  0110DC                     l8068:
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;doprnt.c: 1210: }
  6500                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6501  0110DC  0101               	movlb	1	; () banked
  6502  0110DE  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6503  0110E0  D00C               	goto	l884
  6504  0110E2  0101               	movlb	1	; () banked
  6505  0110E4  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6506  0110E6  E105               	bnz	u10490
  6507  0110E8  0E09               	movlw	9
  6508  0110EA  0101               	movlb	1	; () banked
  6509  0110EC  5D12               	subwf	sprintf@prec& (0+255),w,b
  6510  0110EE  A0D8               	btfss	status,0,c
  6511  0110F0  D004               	goto	l884
  6512  0110F2                     u10490:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6516  0110F2  0E08               	movlw	8
  6517  0110F4  0101               	movlb	1	; () banked
  6518  0110F6  6F18               	movwf	sprintf@c& (0+255),b
  6519  0110F8  D002               	goto	l8072
  6520  0110FA                     l884:
  6521                           
  6522                           ; BSR set to: 1
  6523                           ;doprnt.c: 1213: else
  6524                           ;doprnt.c: 1214: c = prec;
  6525  0110FA  C112  F118         	movff	sprintf@prec,sprintf@c
  6526  0110FE                     l8072:
  6527                           
  6528                           ; BSR set to: 1
  6529                           ;doprnt.c: 1215: prec -= c;
  6530  0110FE  0101               	movlb	1	; () banked
  6531  011100  5118               	movf	sprintf@c& (0+255),w,b
  6532  011102  0101               	movlb	1	; () banked
  6533  011104  5F12               	subwf	sprintf@prec& (0+255),f,b
  6534  011106  0E00               	movlw	0
  6535  011108  0101               	movlb	1	; () banked
  6536  01110A  BF18               	btfsc	sprintf@c& (0+255),7,b
  6537  01110C  0EFF               	movlw	255
  6538  01110E  0101               	movlb	1	; () banked
  6539  011110  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6540                           
  6541                           ; BSR set to: 1
  6542                           ;doprnt.c: 1219: if(c)
  6543  011112  0101               	movlb	1	; () banked
  6544  011114  5118               	movf	sprintf@c& (0+255),w,b
  6545  011116  0101               	movlb	1	; () banked
  6546  011118  B4D8               	btfsc	status,2,c
  6547  01111A  D009               	goto	l8080
  6548                           
  6549                           ; BSR set to: 1
  6550                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  6551  01111C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6552  011120  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6553  011124  0E2E               	movlw	46
  6554  011126  6EDF               	movwf	indf2,c
  6555                           
  6556                           ; BSR set to: 1
  6557  011128  0100               	movlb	0	; () banked
  6558  01112A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  6559  01112C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  6560  01112E                     l8080:
  6561                           
  6562                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6563  01112E  0101               	movlb	1	; () banked
  6564  011130  5118               	movf	sprintf@c& (0+255),w,b
  6565  011132  ECDB  F090         	call	_scale
  6566  011136  C096  F100         	movff	?_scale,_sprintf$4193
  6567  01113A  C097  F101         	movff	?_scale+1,_sprintf$4193+1
  6568  01113E  C098  F102         	movff	?_scale+2,_sprintf$4193+2
  6569  011142  C099  F103         	movff	?_scale+3,_sprintf$4193+3
  6570                           
  6571                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6572  011146  C114  F081         	movff	sprintf@fval,___flmul@a
  6573  01114A  C115  F082         	movff	sprintf@fval+1,___flmul@a+1
  6574  01114E  C116  F083         	movff	sprintf@fval+2,___flmul@a+2
  6575  011152  C117  F084         	movff	sprintf@fval+3,___flmul@a+3
  6576  011156  C100  F07D         	movff	_sprintf$4193,___flmul@b
  6577  01115A  C101  F07E         	movff	_sprintf$4193+1,___flmul@b+1
  6578  01115E  C102  F07F         	movff	_sprintf$4193+2,___flmul@b+2
  6579  011162  C103  F080         	movff	_sprintf$4193+3,___flmul@b+3
  6580  011166  EC42  F098         	call	___flmul	;wreg free
  6581  01116A  C07D  F09F         	movff	?___flmul,___fltol@f1
  6582  01116E  C07E  F0A0         	movff	?___flmul+1,___fltol@f1+1
  6583  011172  C07F  F0A1         	movff	?___flmul+2,___fltol@f1+2
  6584  011176  C080  F0A2         	movff	?___flmul+3,___fltol@f1+3
  6585  01117A  ECDC  F0A7         	call	___fltol	;wreg free
  6586  01117E  C09F  F108         	movff	?___fltol,sprintf@val
  6587  011182  C0A0  F109         	movff	?___fltol+1,sprintf@val+1
  6588  011186  C0A1  F10A         	movff	?___fltol+2,sprintf@val+2
  6589  01118A  C0A2  F10B         	movff	?___fltol+3,sprintf@val+3
  6590                           
  6591                           ;doprnt.c: 1228: while(c--) {
  6592  01118E  D07A               	goto	l8094
  6593  011190                     l8084:
  6594                           
  6595                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6596  011190  C108  F06F         	movff	sprintf@val,___lldiv@dividend
  6597  011194  C109  F070         	movff	sprintf@val+1,___lldiv@dividend+1
  6598  011198  C10A  F071         	movff	sprintf@val+2,___lldiv@dividend+2
  6599  01119C  C10B  F072         	movff	sprintf@val+3,___lldiv@dividend+3
  6600  0111A0  0101               	movlb	1	; () banked
  6601  0111A2  5118               	movf	sprintf@c& (0+255),w,b
  6602  0111A4  0D04               	mullw	4
  6603  0111A6  0E45               	movlw	low _dpowers
  6604  0111A8  24F3               	addwf	prodl,w,c
  6605  0111AA  6EF6               	movwf	tblptrl,c
  6606  0111AC  0EFF               	movlw	high _dpowers
  6607  0111AE  20F4               	addwfc	prodh,w,c
  6608  0111B0  6EF7               	movwf	tblptrh,c
  6609  0111B2                     	if	1	;There are 3 active tblptr bytes
  6610  0111B2  6AF8               	clrf	tblptru,c
  6611  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  6612  0111B6  22F8               	addwfc	tblptru,f,c
  6613  0111B8                     	endif
  6614  0111B8  0009               	tblrd		*+
  6615  0111BA  CFF5 F073          	movff	tablat,___lldiv@divisor
  6616  0111BE  0009               	tblrd		*+
  6617  0111C0  CFF5 F074          	movff	tablat,___lldiv@divisor+1
  6618  0111C4  0009               	tblrd		*+
  6619  0111C6  CFF5 F075          	movff	tablat,___lldiv@divisor+2
  6620  0111CA  000A               	tblrd		*-
  6621  0111CC  CFF5 F076          	movff	tablat,___lldiv@divisor+3
  6622  0111D0  EC12  F0AA         	call	___lldiv	;wreg free
  6623  0111D4  C06F  F10E         	movff	?___lldiv,sprintf@tmpval
  6624  0111D8  C070  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  6625  0111DC  C071  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  6626  0111E0  C072  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  6627                           
  6628                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6629  0111E4  C10E  F06F         	movff	sprintf@tmpval,___llmod@dividend
  6630  0111E8  C10F  F070         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6631  0111EC  C110  F071         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6632  0111F0  C111  F072         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6633  0111F4  0E0A               	movlw	10
  6634  0111F6  0100               	movlb	0	; () banked
  6635  0111F8  6F73               	movwf	___llmod@divisor& (0+255),b
  6636  0111FA  0E00               	movlw	0
  6637  0111FC  6F74               	movwf	(___llmod@divisor+1)& (0+255),b
  6638  0111FE  0E00               	movlw	0
  6639  011200  6F75               	movwf	(___llmod@divisor+2)& (0+255),b
  6640  011202  0E00               	movlw	0
  6641  011204  6F76               	movwf	(___llmod@divisor+3)& (0+255),b
  6642  011206  ECC1  F0AA         	call	___llmod	;wreg free
  6643  01120A  C06F  F10E         	movff	?___llmod,sprintf@tmpval
  6644  01120E  C070  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  6645  011212  C071  F110         	movff	?___llmod+2,sprintf@tmpval+2
  6646  011216  C072  F111         	movff	?___llmod+3,sprintf@tmpval+3
  6647                           
  6648                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  6649  01121A  0101               	movlb	1	; () banked
  6650  01121C  510E               	movf	sprintf@tmpval& (0+255),w,b
  6651  01121E  0F30               	addlw	48
  6652  011220  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6653  011224  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6654  011228  6EDF               	movwf	indf2,c
  6655                           
  6656                           ; BSR set to: 1
  6657  01122A  0100               	movlb	0	; () banked
  6658  01122C  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  6659  01122E  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;doprnt.c: 1232: val %= dpowers[c];
  6663  011230  C108  F06F         	movff	sprintf@val,___llmod@dividend
  6664  011234  C109  F070         	movff	sprintf@val+1,___llmod@dividend+1
  6665  011238  C10A  F071         	movff	sprintf@val+2,___llmod@dividend+2
  6666  01123C  C10B  F072         	movff	sprintf@val+3,___llmod@dividend+3
  6667  011240  0101               	movlb	1	; () banked
  6668  011242  5118               	movf	sprintf@c& (0+255),w,b
  6669  011244  0D04               	mullw	4
  6670  011246  0E45               	movlw	low _dpowers
  6671  011248  24F3               	addwf	prodl,w,c
  6672  01124A  6EF6               	movwf	tblptrl,c
  6673  01124C  0EFF               	movlw	high _dpowers
  6674  01124E  20F4               	addwfc	prodh,w,c
  6675  011250  6EF7               	movwf	tblptrh,c
  6676  011252                     	if	1	;There are 3 active tblptr bytes
  6677  011252  6AF8               	clrf	tblptru,c
  6678  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  6679  011256  22F8               	addwfc	tblptru,f,c
  6680  011258                     	endif
  6681  011258  0009               	tblrd		*+
  6682  01125A  CFF5 F073          	movff	tablat,___llmod@divisor
  6683  01125E  0009               	tblrd		*+
  6684  011260  CFF5 F074          	movff	tablat,___llmod@divisor+1
  6685  011264  0009               	tblrd		*+
  6686  011266  CFF5 F075          	movff	tablat,___llmod@divisor+2
  6687  01126A  000A               	tblrd		*-
  6688  01126C  CFF5 F076          	movff	tablat,___llmod@divisor+3
  6689  011270  ECC1  F0AA         	call	___llmod	;wreg free
  6690  011274  C06F  F108         	movff	?___llmod,sprintf@val
  6691  011278  C070  F109         	movff	?___llmod+1,sprintf@val+1
  6692  01127C  C071  F10A         	movff	?___llmod+2,sprintf@val+2
  6693  011280  C072  F10B         	movff	?___llmod+3,sprintf@val+3
  6694  011284                     l8094:
  6695  011284  0101               	movlb	1	; () banked
  6696  011286  0718               	decf	sprintf@c& (0+255),f,b
  6697  011288  0101               	movlb	1	; () banked
  6698  01128A  2918               	incf	sprintf@c& (0+255),w,b
  6699  01128C  B4D8               	btfsc	status,2,c
  6700  01128E  D00E               	goto	l8102
  6701  011290  D77F               	goto	l8084
  6702  011292                     l8096:
  6703                           
  6704                           ; BSR set to: 1
  6705                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  6706  011292  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6707  011296  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6708  01129A  0E30               	movlw	48
  6709  01129C  6EDF               	movwf	indf2,c
  6710                           
  6711                           ; BSR set to: 1
  6712  01129E  0100               	movlb	0	; () banked
  6713  0112A0  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  6714  0112A2  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;doprnt.c: 1237: prec--;
  6718  0112A4  0101               	movlb	1	; () banked
  6719  0112A6  0712               	decf	sprintf@prec& (0+255),f,b
  6720  0112A8  A0D8               	btfss	status,0,c
  6721  0112AA  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  6722  0112AC                     l8102:
  6723                           
  6724                           ; BSR set to: 1
  6725  0112AC  0101               	movlb	1	; () banked
  6726  0112AE  5112               	movf	sprintf@prec& (0+255),w,b
  6727  0112B0  0101               	movlb	1	; () banked
  6728  0112B2  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6729  0112B4  B4D8               	btfsc	status,2,c
  6730  0112B6  D059               	goto	l8124
  6731  0112B8  D7EC               	goto	l8096
  6732  0112BA                     l8104:
  6733                           
  6734                           ; BSR set to: 1
  6735                           ;doprnt.c: 1246: }
  6736                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6737  0112BA  0101               	movlb	1	; () banked
  6738  0112BC  5112               	movf	sprintf@prec& (0+255),w,b
  6739  0112BE  0101               	movlb	1	; () banked
  6740  0112C0  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6741  0112C2  A4D8               	btfss	status,2,c
  6742  0112C4  D00D               	goto	l8110
  6743                           
  6744                           ; BSR set to: 1
  6745  0112C6  0101               	movlb	1	; () banked
  6746  0112C8  5108               	movf	sprintf@val& (0+255),w,b
  6747  0112CA  0101               	movlb	1	; () banked
  6748  0112CC  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  6749  0112CE  0101               	movlb	1	; () banked
  6750  0112D0  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  6751  0112D2  0101               	movlb	1	; () banked
  6752  0112D4  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  6753  0112D6  A4D8               	btfss	status,2,c
  6754  0112D8  D003               	goto	l8110
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;doprnt.c: 1291: prec++;
  6758  0112DA  0101               	movlb	1	; () banked
  6759  0112DC  4B12               	infsnz	sprintf@prec& (0+255),f,b
  6760  0112DE  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  6761  0112E0                     l8110:
  6762                           
  6763                           ; BSR set to: 1
  6764                           ;doprnt.c: 1339: if(c < prec)
  6765  0112E0  0E80               	movlw	128
  6766  0112E2  0101               	movlb	1	; () banked
  6767  0112E4  BF18               	btfsc	sprintf@c& (0+255),7,b
  6768  0112E6  0E7F               	movlw	127
  6769  0112E8  0100               	movlb	0	; () banked
  6770  0112EA  6FC7               	movwf	??_sprintf& (0+255),b
  6771  0112EC  0101               	movlb	1	; () banked
  6772  0112EE  5112               	movf	sprintf@prec& (0+255),w,b
  6773  0112F0  0101               	movlb	1	; () banked
  6774  0112F2  5D18               	subwf	sprintf@c& (0+255),w,b
  6775  0112F4  0101               	movlb	1	; () banked
  6776  0112F6  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6777  0112F8  0A80               	xorlw	128
  6778  0112FA  0100               	movlb	0	; () banked
  6779  0112FC  59C7               	subwfb	??_sprintf& (0+255),w,b
  6780  0112FE  B0D8               	btfsc	status,0,c
  6781  011300  D003               	goto	l8114
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;doprnt.c: 1340: c = prec;
  6785  011302  C112  F118         	movff	sprintf@prec,sprintf@c
  6786  011306  D018               	goto	l8118
  6787  011308                     l8114:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;doprnt.c: 1341: else if(prec < c)
  6791  011308  0101               	movlb	1	; () banked
  6792  01130A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  6793  01130C  0A80               	xorlw	128
  6794  01130E  0100               	movlb	0	; () banked
  6795  011310  6FC7               	movwf	??_sprintf& (0+255),b
  6796  011312  0101               	movlb	1	; () banked
  6797  011314  5118               	movf	sprintf@c& (0+255),w,b
  6798  011316  0101               	movlb	1	; () banked
  6799  011318  5D12               	subwf	sprintf@prec& (0+255),w,b
  6800  01131A  0E80               	movlw	128
  6801  01131C  0101               	movlb	1	; () banked
  6802  01131E  BF18               	btfsc	sprintf@c& (0+255),7,b
  6803  011320  0E7F               	movlw	127
  6804  011322  0100               	movlb	0	; () banked
  6805  011324  59C7               	subwfb	??_sprintf& (0+255),w,b
  6806  011326  B0D8               	btfsc	status,0,c
  6807  011328  D007               	goto	l8118
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;doprnt.c: 1342: prec = c;
  6811  01132A  0101               	movlb	1	; () banked
  6812  01132C  5118               	movf	sprintf@c& (0+255),w,b
  6813  01132E  0101               	movlb	1	; () banked
  6814  011330  6F12               	movwf	sprintf@prec& (0+255),b
  6815  011332  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  6816  011334  BF12               	btfsc	sprintf@prec& (0+255),7,b
  6817  011336  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  6818  011338                     l8118:
  6819                           
  6820                           ;doprnt.c: 1422: {
  6821                           ;doprnt.c: 1438: if(flag & 0x03)
  6822  011338  0E03               	movlw	3
  6823  01133A  0101               	movlb	1	; () banked
  6824  01133C  1506               	andwf	sprintf@flag& (0+255),w,b
  6825  01133E  0100               	movlb	0	; () banked
  6826  011340  6FC7               	movwf	??_sprintf& (0+255),b
  6827  011342  0E00               	movlw	0
  6828  011344  0101               	movlb	1	; () banked
  6829  011346  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  6830  011348  0100               	movlb	0	; () banked
  6831  01134A  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  6832  01134C  0100               	movlb	0	; () banked
  6833  01134E  51C7               	movf	??_sprintf& (0+255),w,b
  6834  011350  0100               	movlb	0	; () banked
  6835  011352  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  6836  011354  B4D8               	btfsc	status,2,c
  6837  011356  D009               	goto	l8124
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6841  011358  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6842  01135C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6843  011360  0E2D               	movlw	45
  6844  011362  6EDF               	movwf	indf2,c
  6845  011364                     l8122:
  6846                           
  6847                           ; BSR set to: 0
  6848  011364  0100               	movlb	0	; () banked
  6849  011366  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  6850  011368  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  6851  01136A                     l8124:
  6852  01136A  C0C1  FFF6         	movff	sprintf@f,tblptrl
  6853  01136E  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  6854  011372  0100               	movlb	0	; () banked
  6855  011374  4BC1               	infsnz	sprintf@f& (0+255),f,b
  6856  011376  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  6857  011378                     	if	0	;tblptru may be non-zero
  6858  011378                     	endif
  6859  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6860  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  6861  01137A  6EF8               	movwf	tblptru,c
  6862  01137C                     	endif
  6863  01137C  0008               	tblrd		*
  6864  01137E  CFF5 F118          	movff	tablat,sprintf@c
  6865  011382  0101               	movlb	1	; () banked
  6866  011384  5118               	movf	sprintf@c& (0+255),w,b
  6867  011386  A4D8               	btfss	status,2,c
  6868  011388  EF8B  F085         	goto	l7926
  6869  01138C                     l8126:
  6870                           
  6871                           ; BSR set to: 1
  6872                           ;doprnt.c: 1538: *sp = 0;
  6873  01138C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  6874  011390  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  6875  011394  0E00               	movlw	0
  6876  011396  6EDF               	movwf	indf2,c
  6877  011398  0012               	return	
  6878  01139A                     __end_of_sprintf:
  6879                           	opt stack 0
  6880                           tblptru	equ	0xFF8
  6881                           tblptrh	equ	0xFF7
  6882                           tblptrl	equ	0xFF6
  6883                           tablat	equ	0xFF5
  6884                           prodh	equ	0xFF4
  6885                           prodl	equ	0xFF3
  6886                           intcon	equ	0xFF2
  6887                           postinc0	equ	0xFEE
  6888                           wreg	equ	0xFE8
  6889                           indf2	equ	0xFDF
  6890                           postinc2	equ	0xFDE
  6891                           fsr2h	equ	0xFDA
  6892                           fsr2l	equ	0xFD9
  6893                           status	equ	0xFD8
  6894                           
  6895 ;; *************** function _scale *****************
  6896 ;; Defined at:
  6897 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  scl             1    wreg     char 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;  scl             1   62[BANK0 ] char 
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  4   54[BANK0 ] char 
  6904 ;; Registers used:
  6905 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;Total ram usage:        9 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    4
  6918 ;; This function calls:
  6919 ;;		___awdiv
  6920 ;;		___awmod
  6921 ;;		___flmul
  6922 ;; This function is called by:
  6923 ;;		_sprintf
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text9
  6928  0121B6                     __ptext9:
  6929                           	opt stack 0
  6930  0121B6                     _scale:
  6931                           	opt stack 24
  6932                           
  6933                           ; BSR set to: 1
  6934                           ;incstack = 0
  6935                           ;scale@scl stored from wreg
  6936  0121B6  0100               	movlb	0	; () banked
  6937  0121B8  6F9E               	movwf	scale@scl& (0+255),b
  6938                           
  6939                           ;doprnt.c: 428: if(scl < 0) {
  6940  0121BA  0100               	movlb	0	; () banked
  6941  0121BC  AF9E               	btfss	scale@scl& (0+255),7,b
  6942  0121BE  D145               	goto	l7548
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;doprnt.c: 429: scl = -scl;
  6946  0121C0  0100               	movlb	0	; () banked
  6947  0121C2  6D9E               	negf	scale@scl& (0+255),b
  6948                           
  6949                           ;doprnt.c: 430: if(scl>=110)
  6950  0121C4  0100               	movlb	0	; () banked
  6951  0121C6  519E               	movf	scale@scl& (0+255),w,b
  6952  0121C8  0A80               	xorlw	128
  6953  0121CA  0F12               	addlw	-238
  6954  0121CC  A0D8               	btfss	status,0,c
  6955  0121CE  D0BB               	goto	l7538
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6959  0121D0  0E00               	movlw	0
  6960  0121D2  0100               	movlb	0	; () banked
  6961  0121D4  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  6962  0121D6  0E0A               	movlw	10
  6963  0121D8  6F77               	movwf	___awdiv@divisor& (0+255),b
  6964  0121DA  0E00               	movlw	0
  6965  0121DC  0100               	movlb	0	; () banked
  6966  0121DE  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  6967  0121E0  0E64               	movlw	100
  6968  0121E2  6F71               	movwf	___awmod@divisor& (0+255),b
  6969  0121E4  0100               	movlb	0	; () banked
  6970  0121E6  519E               	movf	scale@scl& (0+255),w,b
  6971  0121E8  0100               	movlb	0	; () banked
  6972  0121EA  6F6F               	movwf	___awmod@dividend& (0+255),b
  6973  0121EC  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  6974  0121EE  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  6975  0121F0  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  6976  0121F2  EC70  F0AA         	call	___awmod	;wreg free
  6977  0121F6  C06F  F075         	movff	?___awmod,___awdiv@dividend
  6978  0121FA  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  6979  0121FE  ECB3  F0A9         	call	___awdiv	;wreg free
  6980  012202  0100               	movlb	0	; () banked
  6981  012204  90D8               	bcf	status,0,c
  6982  012206  3775               	rlcf	?___awdiv& (0+255),f,b
  6983  012208  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  6984  01220A  0100               	movlb	0	; () banked
  6985  01220C  90D8               	bcf	status,0,c
  6986  01220E  3775               	rlcf	?___awdiv& (0+255),f,b
  6987  012210  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  6988  012212  0E24               	movlw	36
  6989  012214  0100               	movlb	0	; () banked
  6990  012216  2775               	addwf	?___awdiv& (0+255),f,b
  6991  012218  0E00               	movlw	0
  6992  01221A  0100               	movlb	0	; () banked
  6993  01221C  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  6994  01221E  0EDD               	movlw	low __npowers_
  6995  012220  0100               	movlb	0	; () banked
  6996  012222  2575               	addwf	?___awdiv& (0+255),w,b
  6997  012224  6EF6               	movwf	tblptrl,c
  6998  012226  0EFE               	movlw	high __npowers_
  6999  012228  0100               	movlb	0	; () banked
  7000  01222A  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7001  01222C  6EF7               	movwf	tblptrh,c
  7002  01222E                     	if	1	;There are 3 active tblptr bytes
  7003  01222E  6AF8               	clrf	tblptru,c
  7004  012230  0E00               	movlw	low (__mediumconst shr (0+16))
  7005  012232  22F8               	addwfc	tblptru,f,c
  7006  012234                     	endif
  7007  012234  0009               	tblrd		*+
  7008  012236  CFF5 F081          	movff	tablat,___flmul@a
  7009  01223A  0009               	tblrd		*+
  7010  01223C  CFF5 F082          	movff	tablat,___flmul@a+1
  7011  012240  0009               	tblrd		*+
  7012  012242  CFF5 F083          	movff	tablat,___flmul@a+2
  7013  012246  000A               	tblrd		*-
  7014  012248  CFF5 F084          	movff	tablat,___flmul@a+3
  7015  01224C  0E00               	movlw	0
  7016  01224E  0100               	movlb	0	; () banked
  7017  012250  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7018  012252  0E64               	movlw	100
  7019  012254  6F77               	movwf	___awdiv@divisor& (0+255),b
  7020  012256  0100               	movlb	0	; () banked
  7021  012258  519E               	movf	scale@scl& (0+255),w,b
  7022  01225A  0100               	movlb	0	; () banked
  7023  01225C  6F75               	movwf	___awdiv@dividend& (0+255),b
  7024  01225E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7025  012260  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7026  012262  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7027  012264  ECB3  F0A9         	call	___awdiv	;wreg free
  7028  012268  0100               	movlb	0	; () banked
  7029  01226A  90D8               	bcf	status,0,c
  7030  01226C  3775               	rlcf	?___awdiv& (0+255),f,b
  7031  01226E  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7032  012270  0100               	movlb	0	; () banked
  7033  012272  90D8               	bcf	status,0,c
  7034  012274  3775               	rlcf	?___awdiv& (0+255),f,b
  7035  012276  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7036  012278  0E48               	movlw	72
  7037  01227A  0100               	movlb	0	; () banked
  7038  01227C  2775               	addwf	?___awdiv& (0+255),f,b
  7039  01227E  0E00               	movlw	0
  7040  012280  0100               	movlb	0	; () banked
  7041  012282  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7042  012284  0EDD               	movlw	low __npowers_
  7043  012286  0100               	movlb	0	; () banked
  7044  012288  2575               	addwf	?___awdiv& (0+255),w,b
  7045  01228A  6EF6               	movwf	tblptrl,c
  7046  01228C  0EFE               	movlw	high __npowers_
  7047  01228E  0100               	movlb	0	; () banked
  7048  012290  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7049  012292  6EF7               	movwf	tblptrh,c
  7050  012294                     	if	1	;There are 3 active tblptr bytes
  7051  012294  6AF8               	clrf	tblptru,c
  7052  012296  0E00               	movlw	low (__mediumconst shr (0+16))
  7053  012298  22F8               	addwfc	tblptru,f,c
  7054  01229A                     	endif
  7055  01229A  0009               	tblrd		*+
  7056  01229C  CFF5 F07D          	movff	tablat,___flmul@b
  7057  0122A0  0009               	tblrd		*+
  7058  0122A2  CFF5 F07E          	movff	tablat,___flmul@b+1
  7059  0122A6  0009               	tblrd		*+
  7060  0122A8  CFF5 F07F          	movff	tablat,___flmul@b+2
  7061  0122AC  000A               	tblrd		*-
  7062  0122AE  CFF5 F080          	movff	tablat,___flmul@b+3
  7063  0122B2  EC42  F098         	call	___flmul	;wreg free
  7064  0122B6  C07D  F09A         	movff	?___flmul,_scale$4192
  7065  0122BA  C07E  F09B         	movff	?___flmul+1,_scale$4192+1
  7066  0122BE  C07F  F09C         	movff	?___flmul+2,_scale$4192+2
  7067  0122C2  C080  F09D         	movff	?___flmul+3,_scale$4192+3
  7068                           
  7069                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7070  0122C6  C09A  F07D         	movff	_scale$4192,___flmul@b
  7071  0122CA  C09B  F07E         	movff	_scale$4192+1,___flmul@b+1
  7072  0122CE  C09C  F07F         	movff	_scale$4192+2,___flmul@b+2
  7073  0122D2  C09D  F080         	movff	_scale$4192+3,___flmul@b+3
  7074  0122D6  0E00               	movlw	0
  7075  0122D8  0100               	movlb	0	; () banked
  7076  0122DA  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7077  0122DC  0E0A               	movlw	10
  7078  0122DE  6F71               	movwf	___awmod@divisor& (0+255),b
  7079  0122E0  0100               	movlb	0	; () banked
  7080  0122E2  519E               	movf	scale@scl& (0+255),w,b
  7081  0122E4  0100               	movlb	0	; () banked
  7082  0122E6  6F6F               	movwf	___awmod@dividend& (0+255),b
  7083  0122E8  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7084  0122EA  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7085  0122EC  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7086  0122EE  EC70  F0AA         	call	___awmod	;wreg free
  7087  0122F2  0100               	movlb	0	; () banked
  7088  0122F4  90D8               	bcf	status,0,c
  7089  0122F6  376F               	rlcf	?___awmod& (0+255),f,b
  7090  0122F8  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7091  0122FA  0100               	movlb	0	; () banked
  7092  0122FC  90D8               	bcf	status,0,c
  7093  0122FE  376F               	rlcf	?___awmod& (0+255),f,b
  7094  012300  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7095  012302  0EDD               	movlw	low __npowers_
  7096  012304  0100               	movlb	0	; () banked
  7097  012306  256F               	addwf	?___awmod& (0+255),w,b
  7098  012308  6EF6               	movwf	tblptrl,c
  7099  01230A  0EFE               	movlw	high __npowers_
  7100  01230C  0100               	movlb	0	; () banked
  7101  01230E  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7102  012310  6EF7               	movwf	tblptrh,c
  7103  012312                     	if	1	;There are 3 active tblptr bytes
  7104  012312  6AF8               	clrf	tblptru,c
  7105  012314  0E00               	movlw	low (__mediumconst shr (0+16))
  7106  012316  22F8               	addwfc	tblptru,f,c
  7107  012318                     	endif
  7108  012318  0009               	tblrd		*+
  7109  01231A  CFF5 F081          	movff	tablat,___flmul@a
  7110  01231E  0009               	tblrd		*+
  7111  012320  CFF5 F082          	movff	tablat,___flmul@a+1
  7112  012324  0009               	tblrd		*+
  7113  012326  CFF5 F083          	movff	tablat,___flmul@a+2
  7114  01232A  000A               	tblrd		*-
  7115  01232C  CFF5 F084          	movff	tablat,___flmul@a+3
  7116  012330  EC42  F098         	call	___flmul	;wreg free
  7117  012334  C07D  F096         	movff	?___flmul,?_scale
  7118  012338  C07E  F097         	movff	?___flmul+1,?_scale+1
  7119  01233C  C07F  F098         	movff	?___flmul+2,?_scale+2
  7120  012340  C080  F099         	movff	?___flmul+3,?_scale+3
  7121  012344  0012               	return	
  7122  012346                     l7538:
  7123                           
  7124                           ;doprnt.c: 432: else if(scl > 10)
  7125  012346  0100               	movlb	0	; () banked
  7126  012348  519E               	movf	scale@scl& (0+255),w,b
  7127  01234A  0A80               	xorlw	128
  7128  01234C  0F75               	addlw	-139
  7129  01234E  A0D8               	btfss	status,0,c
  7130  012350  D063               	goto	l7544
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7134  012352  0E00               	movlw	0
  7135  012354  0100               	movlb	0	; () banked
  7136  012356  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7137  012358  0E0A               	movlw	10
  7138  01235A  6F77               	movwf	___awdiv@divisor& (0+255),b
  7139  01235C  0100               	movlb	0	; () banked
  7140  01235E  519E               	movf	scale@scl& (0+255),w,b
  7141  012360  0100               	movlb	0	; () banked
  7142  012362  6F75               	movwf	___awdiv@dividend& (0+255),b
  7143  012364  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7144  012366  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7145  012368  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7146  01236A  ECB3  F0A9         	call	___awdiv	;wreg free
  7147  01236E  0100               	movlb	0	; () banked
  7148  012370  90D8               	bcf	status,0,c
  7149  012372  3775               	rlcf	?___awdiv& (0+255),f,b
  7150  012374  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7151  012376  0100               	movlb	0	; () banked
  7152  012378  90D8               	bcf	status,0,c
  7153  01237A  3775               	rlcf	?___awdiv& (0+255),f,b
  7154  01237C  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7155  01237E  0E24               	movlw	36
  7156  012380  0100               	movlb	0	; () banked
  7157  012382  2775               	addwf	?___awdiv& (0+255),f,b
  7158  012384  0E00               	movlw	0
  7159  012386  0100               	movlb	0	; () banked
  7160  012388  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7161  01238A  0EDD               	movlw	low __npowers_
  7162  01238C  0100               	movlb	0	; () banked
  7163  01238E  2575               	addwf	?___awdiv& (0+255),w,b
  7164  012390  6EF6               	movwf	tblptrl,c
  7165  012392  0EFE               	movlw	high __npowers_
  7166  012394  0100               	movlb	0	; () banked
  7167  012396  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7168  012398  6EF7               	movwf	tblptrh,c
  7169  01239A                     	if	1	;There are 3 active tblptr bytes
  7170  01239A  6AF8               	clrf	tblptru,c
  7171  01239C  0E00               	movlw	low (__mediumconst shr (0+16))
  7172  01239E  22F8               	addwfc	tblptru,f,c
  7173  0123A0                     	endif
  7174  0123A0  0009               	tblrd		*+
  7175  0123A2  CFF5 F07D          	movff	tablat,___flmul@b
  7176  0123A6  0009               	tblrd		*+
  7177  0123A8  CFF5 F07E          	movff	tablat,___flmul@b+1
  7178  0123AC  0009               	tblrd		*+
  7179  0123AE  CFF5 F07F          	movff	tablat,___flmul@b+2
  7180  0123B2  000A               	tblrd		*-
  7181  0123B4  CFF5 F080          	movff	tablat,___flmul@b+3
  7182  0123B8  0E00               	movlw	0
  7183  0123BA  0100               	movlb	0	; () banked
  7184  0123BC  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7185  0123BE  0E0A               	movlw	10
  7186  0123C0  6F71               	movwf	___awmod@divisor& (0+255),b
  7187  0123C2  0100               	movlb	0	; () banked
  7188  0123C4  519E               	movf	scale@scl& (0+255),w,b
  7189  0123C6  0100               	movlb	0	; () banked
  7190  0123C8  6F6F               	movwf	___awmod@dividend& (0+255),b
  7191  0123CA  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7192  0123CC  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7193  0123CE  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7194  0123D0  EC70  F0AA         	call	___awmod	;wreg free
  7195  0123D4  0100               	movlb	0	; () banked
  7196  0123D6  90D8               	bcf	status,0,c
  7197  0123D8  376F               	rlcf	?___awmod& (0+255),f,b
  7198  0123DA  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7199  0123DC  0100               	movlb	0	; () banked
  7200  0123DE  90D8               	bcf	status,0,c
  7201  0123E0  376F               	rlcf	?___awmod& (0+255),f,b
  7202  0123E2  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7203  0123E4  0EDD               	movlw	low __npowers_
  7204  0123E6  0100               	movlb	0	; () banked
  7205  0123E8  256F               	addwf	?___awmod& (0+255),w,b
  7206  0123EA  6EF6               	movwf	tblptrl,c
  7207  0123EC  0EFE               	movlw	high __npowers_
  7208  0123EE  0100               	movlb	0	; () banked
  7209  0123F0  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7210  0123F2  6EF7               	movwf	tblptrh,c
  7211  0123F4                     	if	1	;There are 3 active tblptr bytes
  7212  0123F4  6AF8               	clrf	tblptru,c
  7213  0123F6  0E00               	movlw	low (__mediumconst shr (0+16))
  7214  0123F8  22F8               	addwfc	tblptru,f,c
  7215  0123FA                     	endif
  7216  0123FA  0009               	tblrd		*+
  7217  0123FC  CFF5 F081          	movff	tablat,___flmul@a
  7218  012400  0009               	tblrd		*+
  7219  012402  CFF5 F082          	movff	tablat,___flmul@a+1
  7220  012406  0009               	tblrd		*+
  7221  012408  CFF5 F083          	movff	tablat,___flmul@a+2
  7222  01240C  000A               	tblrd		*-
  7223  01240E  CFF5 F084          	movff	tablat,___flmul@a+3
  7224  012412  EC42  F098         	call	___flmul	;wreg free
  7225  012416  D78E               	goto	L5
  7226  012418                     l7544:
  7227                           
  7228                           ;doprnt.c: 434: return _npowers_[scl];
  7229  012418  0100               	movlb	0	; () banked
  7230  01241A  519E               	movf	scale@scl& (0+255),w,b
  7231  01241C  0D04               	mullw	4
  7232  01241E  0EDD               	movlw	low __npowers_
  7233  012420  24F3               	addwf	prodl,w,c
  7234  012422  6EF6               	movwf	tblptrl,c
  7235  012424  0EFE               	movlw	high __npowers_
  7236  012426  20F4               	addwfc	prodh,w,c
  7237  012428  6EF7               	movwf	tblptrh,c
  7238  01242A                     	if	1	;There are 3 active tblptr bytes
  7239  01242A  6AF8               	clrf	tblptru,c
  7240  01242C  0E00               	movlw	low (__mediumconst shr (0+16))
  7241  01242E  22F8               	addwfc	tblptru,f,c
  7242  012430                     	endif
  7243  012430  0009               	tblrd		*+
  7244  012432  CFF5 F096          	movff	tablat,?_scale
  7245  012436  0009               	tblrd		*+
  7246  012438  CFF5 F097          	movff	tablat,?_scale+1
  7247  01243C  0009               	tblrd		*+
  7248  01243E  CFF5 F098          	movff	tablat,?_scale+2
  7249  012442  000A               	tblrd		*-
  7250  012444  CFF5 F099          	movff	tablat,?_scale+3
  7251                           
  7252                           ; BSR set to: 0
  7253  012448  0012               	return	
  7254  01244A                     l7548:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;doprnt.c: 435: }
  7258                           ;doprnt.c: 436: if(scl>=110)
  7259  01244A  0100               	movlb	0	; () banked
  7260  01244C  519E               	movf	scale@scl& (0+255),w,b
  7261  01244E  0A80               	xorlw	128
  7262  012450  0F12               	addlw	-238
  7263  012452  A0D8               	btfss	status,0,c
  7264  012454  D0BB               	goto	l7556
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7268  012456  0E00               	movlw	0
  7269  012458  0100               	movlb	0	; () banked
  7270  01245A  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7271  01245C  0E0A               	movlw	10
  7272  01245E  6F77               	movwf	___awdiv@divisor& (0+255),b
  7273  012460  0E00               	movlw	0
  7274  012462  0100               	movlb	0	; () banked
  7275  012464  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7276  012466  0E64               	movlw	100
  7277  012468  6F71               	movwf	___awmod@divisor& (0+255),b
  7278  01246A  0100               	movlb	0	; () banked
  7279  01246C  519E               	movf	scale@scl& (0+255),w,b
  7280  01246E  0100               	movlb	0	; () banked
  7281  012470  6F6F               	movwf	___awmod@dividend& (0+255),b
  7282  012472  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7283  012474  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7284  012476  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7285  012478  EC70  F0AA         	call	___awmod	;wreg free
  7286  01247C  C06F  F075         	movff	?___awmod,___awdiv@dividend
  7287  012480  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  7288  012484  ECB3  F0A9         	call	___awdiv	;wreg free
  7289  012488  0100               	movlb	0	; () banked
  7290  01248A  90D8               	bcf	status,0,c
  7291  01248C  3775               	rlcf	?___awdiv& (0+255),f,b
  7292  01248E  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7293  012490  0100               	movlb	0	; () banked
  7294  012492  90D8               	bcf	status,0,c
  7295  012494  3775               	rlcf	?___awdiv& (0+255),f,b
  7296  012496  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7297  012498  0E24               	movlw	36
  7298  01249A  0100               	movlb	0	; () banked
  7299  01249C  2775               	addwf	?___awdiv& (0+255),f,b
  7300  01249E  0E00               	movlw	0
  7301  0124A0  0100               	movlb	0	; () banked
  7302  0124A2  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7303  0124A4  0E11               	movlw	low __powers_
  7304  0124A6  0100               	movlb	0	; () banked
  7305  0124A8  2575               	addwf	?___awdiv& (0+255),w,b
  7306  0124AA  6EF6               	movwf	tblptrl,c
  7307  0124AC  0EFF               	movlw	high __powers_
  7308  0124AE  0100               	movlb	0	; () banked
  7309  0124B0  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7310  0124B2  6EF7               	movwf	tblptrh,c
  7311  0124B4                     	if	1	;There are 3 active tblptr bytes
  7312  0124B4  6AF8               	clrf	tblptru,c
  7313  0124B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7314  0124B8  22F8               	addwfc	tblptru,f,c
  7315  0124BA                     	endif
  7316  0124BA  0009               	tblrd		*+
  7317  0124BC  CFF5 F081          	movff	tablat,___flmul@a
  7318  0124C0  0009               	tblrd		*+
  7319  0124C2  CFF5 F082          	movff	tablat,___flmul@a+1
  7320  0124C6  0009               	tblrd		*+
  7321  0124C8  CFF5 F083          	movff	tablat,___flmul@a+2
  7322  0124CC  000A               	tblrd		*-
  7323  0124CE  CFF5 F084          	movff	tablat,___flmul@a+3
  7324  0124D2  0E00               	movlw	0
  7325  0124D4  0100               	movlb	0	; () banked
  7326  0124D6  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7327  0124D8  0E64               	movlw	100
  7328  0124DA  6F77               	movwf	___awdiv@divisor& (0+255),b
  7329  0124DC  0100               	movlb	0	; () banked
  7330  0124DE  519E               	movf	scale@scl& (0+255),w,b
  7331  0124E0  0100               	movlb	0	; () banked
  7332  0124E2  6F75               	movwf	___awdiv@dividend& (0+255),b
  7333  0124E4  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7334  0124E6  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7335  0124E8  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7336  0124EA  ECB3  F0A9         	call	___awdiv	;wreg free
  7337  0124EE  0100               	movlb	0	; () banked
  7338  0124F0  90D8               	bcf	status,0,c
  7339  0124F2  3775               	rlcf	?___awdiv& (0+255),f,b
  7340  0124F4  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7341  0124F6  0100               	movlb	0	; () banked
  7342  0124F8  90D8               	bcf	status,0,c
  7343  0124FA  3775               	rlcf	?___awdiv& (0+255),f,b
  7344  0124FC  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7345  0124FE  0E48               	movlw	72
  7346  012500  0100               	movlb	0	; () banked
  7347  012502  2775               	addwf	?___awdiv& (0+255),f,b
  7348  012504  0E00               	movlw	0
  7349  012506  0100               	movlb	0	; () banked
  7350  012508  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7351  01250A  0E11               	movlw	low __powers_
  7352  01250C  0100               	movlb	0	; () banked
  7353  01250E  2575               	addwf	?___awdiv& (0+255),w,b
  7354  012510  6EF6               	movwf	tblptrl,c
  7355  012512  0EFF               	movlw	high __powers_
  7356  012514  0100               	movlb	0	; () banked
  7357  012516  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7358  012518  6EF7               	movwf	tblptrh,c
  7359  01251A                     	if	1	;There are 3 active tblptr bytes
  7360  01251A  6AF8               	clrf	tblptru,c
  7361  01251C  0E00               	movlw	low (__mediumconst shr (0+16))
  7362  01251E  22F8               	addwfc	tblptru,f,c
  7363  012520                     	endif
  7364  012520  0009               	tblrd		*+
  7365  012522  CFF5 F07D          	movff	tablat,___flmul@b
  7366  012526  0009               	tblrd		*+
  7367  012528  CFF5 F07E          	movff	tablat,___flmul@b+1
  7368  01252C  0009               	tblrd		*+
  7369  01252E  CFF5 F07F          	movff	tablat,___flmul@b+2
  7370  012532  000A               	tblrd		*-
  7371  012534  CFF5 F080          	movff	tablat,___flmul@b+3
  7372  012538  EC42  F098         	call	___flmul	;wreg free
  7373  01253C  C07D  F09A         	movff	?___flmul,_scale$4192
  7374  012540  C07E  F09B         	movff	?___flmul+1,_scale$4192+1
  7375  012544  C07F  F09C         	movff	?___flmul+2,_scale$4192+2
  7376  012548  C080  F09D         	movff	?___flmul+3,_scale$4192+3
  7377                           
  7378                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7379  01254C  C09A  F07D         	movff	_scale$4192,___flmul@b
  7380  012550  C09B  F07E         	movff	_scale$4192+1,___flmul@b+1
  7381  012554  C09C  F07F         	movff	_scale$4192+2,___flmul@b+2
  7382  012558  C09D  F080         	movff	_scale$4192+3,___flmul@b+3
  7383  01255C  0E00               	movlw	0
  7384  01255E  0100               	movlb	0	; () banked
  7385  012560  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7386  012562  0E0A               	movlw	10
  7387  012564  6F71               	movwf	___awmod@divisor& (0+255),b
  7388  012566  0100               	movlb	0	; () banked
  7389  012568  519E               	movf	scale@scl& (0+255),w,b
  7390  01256A  0100               	movlb	0	; () banked
  7391  01256C  6F6F               	movwf	___awmod@dividend& (0+255),b
  7392  01256E  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7393  012570  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7394  012572  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7395  012574  EC70  F0AA         	call	___awmod	;wreg free
  7396  012578  0100               	movlb	0	; () banked
  7397  01257A  90D8               	bcf	status,0,c
  7398  01257C  376F               	rlcf	?___awmod& (0+255),f,b
  7399  01257E  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7400  012580  0100               	movlb	0	; () banked
  7401  012582  90D8               	bcf	status,0,c
  7402  012584  376F               	rlcf	?___awmod& (0+255),f,b
  7403  012586  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7404  012588  0E11               	movlw	low __powers_
  7405  01258A  0100               	movlb	0	; () banked
  7406  01258C  256F               	addwf	?___awmod& (0+255),w,b
  7407  01258E  6EF6               	movwf	tblptrl,c
  7408  012590  0EFF               	movlw	high __powers_
  7409  012592  0100               	movlb	0	; () banked
  7410  012594  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7411  012596  6EF7               	movwf	tblptrh,c
  7412  012598                     	if	1	;There are 3 active tblptr bytes
  7413  012598  6AF8               	clrf	tblptru,c
  7414  01259A  0E00               	movlw	low (__mediumconst shr (0+16))
  7415  01259C  22F8               	addwfc	tblptru,f,c
  7416  01259E                     	endif
  7417  01259E  0009               	tblrd		*+
  7418  0125A0  CFF5 F081          	movff	tablat,___flmul@a
  7419  0125A4  0009               	tblrd		*+
  7420  0125A6  CFF5 F082          	movff	tablat,___flmul@a+1
  7421  0125AA  0009               	tblrd		*+
  7422  0125AC  CFF5 F083          	movff	tablat,___flmul@a+2
  7423  0125B0  000A               	tblrd		*-
  7424  0125B2  CFF5 F084          	movff	tablat,___flmul@a+3
  7425  0125B6  EC42  F098         	call	___flmul	;wreg free
  7426  0125BA  C07D  F096         	movff	?___flmul,?_scale
  7427  0125BE  C07E  F097         	movff	?___flmul+1,?_scale+1
  7428  0125C2  C07F  F098         	movff	?___flmul+2,?_scale+2
  7429  0125C6  C080  F099         	movff	?___flmul+3,?_scale+3
  7430  0125CA  0012               	return	
  7431  0125CC                     l7556:
  7432                           
  7433                           ;doprnt.c: 438: else if(scl > 10)
  7434  0125CC  0100               	movlb	0	; () banked
  7435  0125CE  519E               	movf	scale@scl& (0+255),w,b
  7436  0125D0  0A80               	xorlw	128
  7437  0125D2  0F75               	addlw	-139
  7438  0125D4  A0D8               	btfss	status,0,c
  7439  0125D6  D063               	goto	l7562
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7443  0125D8  0E00               	movlw	0
  7444  0125DA  0100               	movlb	0	; () banked
  7445  0125DC  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7446  0125DE  0E0A               	movlw	10
  7447  0125E0  6F77               	movwf	___awdiv@divisor& (0+255),b
  7448  0125E2  0100               	movlb	0	; () banked
  7449  0125E4  519E               	movf	scale@scl& (0+255),w,b
  7450  0125E6  0100               	movlb	0	; () banked
  7451  0125E8  6F75               	movwf	___awdiv@dividend& (0+255),b
  7452  0125EA  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7453  0125EC  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7454  0125EE  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7455  0125F0  ECB3  F0A9         	call	___awdiv	;wreg free
  7456  0125F4  0100               	movlb	0	; () banked
  7457  0125F6  90D8               	bcf	status,0,c
  7458  0125F8  3775               	rlcf	?___awdiv& (0+255),f,b
  7459  0125FA  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7460  0125FC  0100               	movlb	0	; () banked
  7461  0125FE  90D8               	bcf	status,0,c
  7462  012600  3775               	rlcf	?___awdiv& (0+255),f,b
  7463  012602  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7464  012604  0E24               	movlw	36
  7465  012606  0100               	movlb	0	; () banked
  7466  012608  2775               	addwf	?___awdiv& (0+255),f,b
  7467  01260A  0E00               	movlw	0
  7468  01260C  0100               	movlb	0	; () banked
  7469  01260E  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7470  012610  0E11               	movlw	low __powers_
  7471  012612  0100               	movlb	0	; () banked
  7472  012614  2575               	addwf	?___awdiv& (0+255),w,b
  7473  012616  6EF6               	movwf	tblptrl,c
  7474  012618  0EFF               	movlw	high __powers_
  7475  01261A  0100               	movlb	0	; () banked
  7476  01261C  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7477  01261E  6EF7               	movwf	tblptrh,c
  7478  012620                     	if	1	;There are 3 active tblptr bytes
  7479  012620  6AF8               	clrf	tblptru,c
  7480  012622  0E00               	movlw	low (__mediumconst shr (0+16))
  7481  012624  22F8               	addwfc	tblptru,f,c
  7482  012626                     	endif
  7483  012626  0009               	tblrd		*+
  7484  012628  CFF5 F07D          	movff	tablat,___flmul@b
  7485  01262C  0009               	tblrd		*+
  7486  01262E  CFF5 F07E          	movff	tablat,___flmul@b+1
  7487  012632  0009               	tblrd		*+
  7488  012634  CFF5 F07F          	movff	tablat,___flmul@b+2
  7489  012638  000A               	tblrd		*-
  7490  01263A  CFF5 F080          	movff	tablat,___flmul@b+3
  7491  01263E  0E00               	movlw	0
  7492  012640  0100               	movlb	0	; () banked
  7493  012642  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7494  012644  0E0A               	movlw	10
  7495  012646  6F71               	movwf	___awmod@divisor& (0+255),b
  7496  012648  0100               	movlb	0	; () banked
  7497  01264A  519E               	movf	scale@scl& (0+255),w,b
  7498  01264C  0100               	movlb	0	; () banked
  7499  01264E  6F6F               	movwf	___awmod@dividend& (0+255),b
  7500  012650  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7501  012652  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7502  012654  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7503  012656  EC70  F0AA         	call	___awmod	;wreg free
  7504  01265A  0100               	movlb	0	; () banked
  7505  01265C  90D8               	bcf	status,0,c
  7506  01265E  376F               	rlcf	?___awmod& (0+255),f,b
  7507  012660  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7508  012662  0100               	movlb	0	; () banked
  7509  012664  90D8               	bcf	status,0,c
  7510  012666  376F               	rlcf	?___awmod& (0+255),f,b
  7511  012668  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7512  01266A  0E11               	movlw	low __powers_
  7513  01266C  0100               	movlb	0	; () banked
  7514  01266E  256F               	addwf	?___awmod& (0+255),w,b
  7515  012670  6EF6               	movwf	tblptrl,c
  7516  012672  0EFF               	movlw	high __powers_
  7517  012674  0100               	movlb	0	; () banked
  7518  012676  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7519  012678  6EF7               	movwf	tblptrh,c
  7520  01267A                     	if	1	;There are 3 active tblptr bytes
  7521  01267A  6AF8               	clrf	tblptru,c
  7522  01267C  0E00               	movlw	low (__mediumconst shr (0+16))
  7523  01267E  22F8               	addwfc	tblptru,f,c
  7524  012680                     	endif
  7525  012680  0009               	tblrd		*+
  7526  012682  CFF5 F081          	movff	tablat,___flmul@a
  7527  012686  0009               	tblrd		*+
  7528  012688  CFF5 F082          	movff	tablat,___flmul@a+1
  7529  01268C  0009               	tblrd		*+
  7530  01268E  CFF5 F083          	movff	tablat,___flmul@a+2
  7531  012692  000A               	tblrd		*-
  7532  012694  CFF5 F084          	movff	tablat,___flmul@a+3
  7533  012698  EC42  F098         	call	___flmul	;wreg free
  7534  01269C  D78E               	goto	L6
  7535  01269E                     l7562:
  7536                           
  7537                           ;doprnt.c: 440: return _powers_[scl];
  7538  01269E  0100               	movlb	0	; () banked
  7539  0126A0  519E               	movf	scale@scl& (0+255),w,b
  7540  0126A2  0D04               	mullw	4
  7541  0126A4  0E11               	movlw	low __powers_
  7542  0126A6  24F3               	addwf	prodl,w,c
  7543  0126A8  6EF6               	movwf	tblptrl,c
  7544  0126AA  0EFF               	movlw	high __powers_
  7545  0126AC  20F4               	addwfc	prodh,w,c
  7546  0126AE  6EF7               	movwf	tblptrh,c
  7547  0126B0                     	if	1	;There are 3 active tblptr bytes
  7548  0126B0  6AF8               	clrf	tblptru,c
  7549  0126B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7550  0126B4  22F8               	addwfc	tblptru,f,c
  7551  0126B6                     	endif
  7552  0126B6  0009               	tblrd		*+
  7553  0126B8  CFF5 F096          	movff	tablat,?_scale
  7554  0126BC  0009               	tblrd		*+
  7555  0126BE  CFF5 F097          	movff	tablat,?_scale+1
  7556  0126C2  0009               	tblrd		*+
  7557  0126C4  CFF5 F098          	movff	tablat,?_scale+2
  7558  0126C8  000A               	tblrd		*-
  7559  0126CA  CFF5 F099          	movff	tablat,?_scale+3
  7560  0126CE  0012               	return	
  7561  0126D0                     __end_of_scale:
  7562                           	opt stack 0
  7563                           tblptru	equ	0xFF8
  7564                           tblptrh	equ	0xFF7
  7565                           tblptrl	equ	0xFF6
  7566                           tablat	equ	0xFF5
  7567                           prodh	equ	0xFF4
  7568                           prodl	equ	0xFF3
  7569                           intcon	equ	0xFF2
  7570                           postinc0	equ	0xFEE
  7571                           wreg	equ	0xFE8
  7572                           indf2	equ	0xFDF
  7573                           postinc2	equ	0xFDE
  7574                           fsr2h	equ	0xFDA
  7575                           fsr2l	equ	0xFD9
  7576                           status	equ	0xFD8
  7577                           
  7578 ;; *************** function _isdigit *****************
  7579 ;; Defined at:
  7580 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  c               1    wreg     unsigned char 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  c               1   17[BANK0 ] unsigned char 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;		None               void
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;Total ram usage:        3 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    3
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_sprintf
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text10
  7609  01598C                     __ptext10:
  7610                           	opt stack 0
  7611  01598C                     _isdigit:
  7612                           	opt stack 25
  7613                           
  7614                           ;incstack = 0
  7615                           ;isdigit@c stored from wreg
  7616  01598C  0100               	movlb	0	; () banked
  7617  01598E  6F71               	movwf	isdigit@c& (0+255),b
  7618  015990  0E00               	movlw	0
  7619  015992  0100               	movlb	0	; () banked
  7620  015994  6F70               	movwf	_isdigit$3771& (0+255),b
  7621                           
  7622                           ; BSR set to: 0
  7623  015996  0E3A               	movlw	58
  7624  015998  0100               	movlb	0	; () banked
  7625  01599A  6171               	cpfslt	isdigit@c& (0+255),b
  7626  01599C  D007               	goto	l7574
  7627                           
  7628                           ; BSR set to: 0
  7629  01599E  0E2F               	movlw	47
  7630  0159A0  0100               	movlb	0	; () banked
  7631  0159A2  6571               	cpfsgt	isdigit@c& (0+255),b
  7632  0159A4  D003               	goto	l7574
  7633                           
  7634                           ; BSR set to: 0
  7635  0159A6  0E01               	movlw	1
  7636  0159A8  0100               	movlb	0	; () banked
  7637  0159AA  6F70               	movwf	_isdigit$3771& (0+255),b
  7638  0159AC                     l7574:
  7639                           
  7640                           ; BSR set to: 0
  7641  0159AC  C070  F06F         	movff	_isdigit$3771,??_isdigit
  7642  0159B0  0100               	movlb	0	; () banked
  7643  0159B2  316F               	rrcf	??_isdigit& (0+255),w,b
  7644  0159B4  0012               	return	
  7645  0159B6                     __end_of_isdigit:
  7646                           	opt stack 0
  7647                           tblptru	equ	0xFF8
  7648                           tblptrh	equ	0xFF7
  7649                           tblptrl	equ	0xFF6
  7650                           tablat	equ	0xFF5
  7651                           prodh	equ	0xFF4
  7652                           prodl	equ	0xFF3
  7653                           intcon	equ	0xFF2
  7654                           postinc0	equ	0xFEE
  7655                           wreg	equ	0xFE8
  7656                           indf2	equ	0xFDF
  7657                           postinc2	equ	0xFDE
  7658                           fsr2h	equ	0xFDA
  7659                           fsr2l	equ	0xFD9
  7660                           status	equ	0xFD8
  7661                           
  7662 ;; *************** function _fround *****************
  7663 ;; Defined at:
  7664 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  prec            1    wreg     unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  prec            1   66[BANK0 ] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  4   54[BANK0 ] unsigned char 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;Total ram usage:       13 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    4
  7685 ;; This function calls:
  7686 ;;		___awdiv
  7687 ;;		___awmod
  7688 ;;		___flmul
  7689 ;; This function is called by:
  7690 ;;		_sprintf
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text11
  7695  014090                     __ptext11:
  7696                           	opt stack 0
  7697  014090                     _fround:
  7698                           	opt stack 24
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;incstack = 0
  7702                           ;fround@prec stored from wreg
  7703  014090  0100               	movlb	0	; () banked
  7704  014092  6FA2               	movwf	fround@prec& (0+255),b
  7705                           
  7706                           ;doprnt.c: 413: if(prec>=110)
  7707  014094  0E6D               	movlw	109
  7708  014096  0100               	movlb	0	; () banked
  7709  014098  65A2               	cpfsgt	fround@prec& (0+255),b
  7710  01409A  D0CD               	goto	l7516
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7714  01409C  0E00               	movlw	0
  7715  01409E  0100               	movlb	0	; () banked
  7716  0140A0  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7717  0140A2  0E0A               	movlw	10
  7718  0140A4  6F77               	movwf	___awdiv@divisor& (0+255),b
  7719  0140A6  0E00               	movlw	0
  7720  0140A8  0100               	movlb	0	; () banked
  7721  0140AA  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7722  0140AC  0E64               	movlw	100
  7723  0140AE  6F71               	movwf	___awmod@divisor& (0+255),b
  7724  0140B0  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  7725  0140B4  0100               	movlb	0	; () banked
  7726  0140B6  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7727  0140B8  EC70  F0AA         	call	___awmod	;wreg free
  7728  0140BC  C06F  F075         	movff	?___awmod,___awdiv@dividend
  7729  0140C0  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  7730  0140C4  ECB3  F0A9         	call	___awdiv	;wreg free
  7731  0140C8  0100               	movlb	0	; () banked
  7732  0140CA  90D8               	bcf	status,0,c
  7733  0140CC  3775               	rlcf	?___awdiv& (0+255),f,b
  7734  0140CE  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7735  0140D0  0100               	movlb	0	; () banked
  7736  0140D2  90D8               	bcf	status,0,c
  7737  0140D4  3775               	rlcf	?___awdiv& (0+255),f,b
  7738  0140D6  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7739  0140D8  0E24               	movlw	36
  7740  0140DA  0100               	movlb	0	; () banked
  7741  0140DC  2775               	addwf	?___awdiv& (0+255),f,b
  7742  0140DE  0E00               	movlw	0
  7743  0140E0  0100               	movlb	0	; () banked
  7744  0140E2  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7745  0140E4  0EDD               	movlw	low __npowers_
  7746  0140E6  0100               	movlb	0	; () banked
  7747  0140E8  2575               	addwf	?___awdiv& (0+255),w,b
  7748  0140EA  6EF6               	movwf	tblptrl,c
  7749  0140EC  0EFE               	movlw	high __npowers_
  7750  0140EE  0100               	movlb	0	; () banked
  7751  0140F0  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7752  0140F2  6EF7               	movwf	tblptrh,c
  7753  0140F4                     	if	1	;There are 3 active tblptr bytes
  7754  0140F4  6AF8               	clrf	tblptru,c
  7755  0140F6  0E00               	movlw	low (__mediumconst shr (0+16))
  7756  0140F8  22F8               	addwfc	tblptru,f,c
  7757  0140FA                     	endif
  7758  0140FA  0009               	tblrd		*+
  7759  0140FC  CFF5 F081          	movff	tablat,___flmul@a
  7760  014100  0009               	tblrd		*+
  7761  014102  CFF5 F082          	movff	tablat,___flmul@a+1
  7762  014106  0009               	tblrd		*+
  7763  014108  CFF5 F083          	movff	tablat,___flmul@a+2
  7764  01410C  000A               	tblrd		*-
  7765  01410E  CFF5 F084          	movff	tablat,___flmul@a+3
  7766  014112  0E00               	movlw	0
  7767  014114  0100               	movlb	0	; () banked
  7768  014116  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7769  014118  0E64               	movlw	100
  7770  01411A  6F77               	movwf	___awdiv@divisor& (0+255),b
  7771  01411C  C0A2  F075         	movff	fround@prec,___awdiv@dividend
  7772  014120  0100               	movlb	0	; () banked
  7773  014122  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7774  014124  ECB3  F0A9         	call	___awdiv	;wreg free
  7775  014128  0100               	movlb	0	; () banked
  7776  01412A  90D8               	bcf	status,0,c
  7777  01412C  3775               	rlcf	?___awdiv& (0+255),f,b
  7778  01412E  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7779  014130  0100               	movlb	0	; () banked
  7780  014132  90D8               	bcf	status,0,c
  7781  014134  3775               	rlcf	?___awdiv& (0+255),f,b
  7782  014136  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7783  014138  0E48               	movlw	72
  7784  01413A  0100               	movlb	0	; () banked
  7785  01413C  2775               	addwf	?___awdiv& (0+255),f,b
  7786  01413E  0E00               	movlw	0
  7787  014140  0100               	movlb	0	; () banked
  7788  014142  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7789  014144  0EDD               	movlw	low __npowers_
  7790  014146  0100               	movlb	0	; () banked
  7791  014148  2575               	addwf	?___awdiv& (0+255),w,b
  7792  01414A  6EF6               	movwf	tblptrl,c
  7793  01414C  0EFE               	movlw	high __npowers_
  7794  01414E  0100               	movlb	0	; () banked
  7795  014150  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7796  014152  6EF7               	movwf	tblptrh,c
  7797  014154                     	if	1	;There are 3 active tblptr bytes
  7798  014154  6AF8               	clrf	tblptru,c
  7799  014156  0E00               	movlw	low (__mediumconst shr (0+16))
  7800  014158  22F8               	addwfc	tblptru,f,c
  7801  01415A                     	endif
  7802  01415A  0009               	tblrd		*+
  7803  01415C  CFF5 F07D          	movff	tablat,___flmul@b
  7804  014160  0009               	tblrd		*+
  7805  014162  CFF5 F07E          	movff	tablat,___flmul@b+1
  7806  014166  0009               	tblrd		*+
  7807  014168  CFF5 F07F          	movff	tablat,___flmul@b+2
  7808  01416C  000A               	tblrd		*-
  7809  01416E  CFF5 F080          	movff	tablat,___flmul@b+3
  7810  014172  EC42  F098         	call	___flmul	;wreg free
  7811  014176  C07D  F09E         	movff	?___flmul,_fround$4190
  7812  01417A  C07E  F09F         	movff	?___flmul+1,_fround$4190+1
  7813  01417E  C07F  F0A0         	movff	?___flmul+2,_fround$4190+2
  7814  014182  C080  F0A1         	movff	?___flmul+3,_fround$4190+3
  7815                           
  7816                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7817  014186  0E00               	movlw	0
  7818  014188  0100               	movlb	0	; () banked
  7819  01418A  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7820  01418C  0E0A               	movlw	10
  7821  01418E  6F71               	movwf	___awmod@divisor& (0+255),b
  7822  014190  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  7823  014194  0100               	movlb	0	; () banked
  7824  014196  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7825  014198  EC70  F0AA         	call	___awmod	;wreg free
  7826  01419C  0100               	movlb	0	; () banked
  7827  01419E  90D8               	bcf	status,0,c
  7828  0141A0  376F               	rlcf	?___awmod& (0+255),f,b
  7829  0141A2  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7830  0141A4  0100               	movlb	0	; () banked
  7831  0141A6  90D8               	bcf	status,0,c
  7832  0141A8  376F               	rlcf	?___awmod& (0+255),f,b
  7833  0141AA  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7834  0141AC  0EDD               	movlw	low __npowers_
  7835  0141AE  0100               	movlb	0	; () banked
  7836  0141B0  256F               	addwf	?___awmod& (0+255),w,b
  7837  0141B2  6EF6               	movwf	tblptrl,c
  7838  0141B4  0EFE               	movlw	high __npowers_
  7839  0141B6  0100               	movlb	0	; () banked
  7840  0141B8  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7841  0141BA  6EF7               	movwf	tblptrh,c
  7842  0141BC                     	if	1	;There are 3 active tblptr bytes
  7843  0141BC  6AF8               	clrf	tblptru,c
  7844  0141BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7845  0141C0  22F8               	addwfc	tblptru,f,c
  7846  0141C2                     	endif
  7847  0141C2  0009               	tblrd		*+
  7848  0141C4  CFF5 F081          	movff	tablat,___flmul@a
  7849  0141C8  0009               	tblrd		*+
  7850  0141CA  CFF5 F082          	movff	tablat,___flmul@a+1
  7851  0141CE  0009               	tblrd		*+
  7852  0141D0  CFF5 F083          	movff	tablat,___flmul@a+2
  7853  0141D4  000A               	tblrd		*-
  7854  0141D6  CFF5 F084          	movff	tablat,___flmul@a+3
  7855  0141DA  C09E  F07D         	movff	_fround$4190,___flmul@b
  7856  0141DE  C09F  F07E         	movff	_fround$4190+1,___flmul@b+1
  7857  0141E2  C0A0  F07F         	movff	_fround$4190+2,___flmul@b+2
  7858  0141E6  C0A1  F080         	movff	_fround$4190+3,___flmul@b+3
  7859  0141EA  EC42  F098         	call	___flmul	;wreg free
  7860  0141EE  C07D  F09A         	movff	?___flmul,_fround$4191
  7861  0141F2  C07E  F09B         	movff	?___flmul+1,_fround$4191+1
  7862  0141F6  C07F  F09C         	movff	?___flmul+2,_fround$4191+2
  7863  0141FA  C080  F09D         	movff	?___flmul+3,_fround$4191+3
  7864                           
  7865                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7866  0141FE  C09A  F07D         	movff	_fround$4191,___flmul@b
  7867  014202  C09B  F07E         	movff	_fround$4191+1,___flmul@b+1
  7868  014206  C09C  F07F         	movff	_fround$4191+2,___flmul@b+2
  7869  01420A  C09D  F080         	movff	_fround$4191+3,___flmul@b+3
  7870  01420E  0E00               	movlw	0
  7871  014210  0100               	movlb	0	; () banked
  7872  014212  6F81               	movwf	___flmul@a& (0+255),b
  7873  014214  0E00               	movlw	0
  7874  014216  6F82               	movwf	(___flmul@a+1)& (0+255),b
  7875  014218  0E00               	movlw	0
  7876  01421A  6F83               	movwf	(___flmul@a+2)& (0+255),b
  7877  01421C  0E3F               	movlw	63
  7878  01421E  6F84               	movwf	(___flmul@a+3)& (0+255),b
  7879  014220  EC42  F098         	call	___flmul	;wreg free
  7880  014224  C07D  F096         	movff	?___flmul,?_fround
  7881  014228  C07E  F097         	movff	?___flmul+1,?_fround+1
  7882  01422C  C07F  F098         	movff	?___flmul+2,?_fround+2
  7883  014230  C080  F099         	movff	?___flmul+3,?_fround+3
  7884  014234  0012               	return	
  7885  014236                     l7516:
  7886                           
  7887                           ;doprnt.c: 415: else if(prec > 10)
  7888  014236  0E0A               	movlw	10
  7889  014238  0100               	movlb	0	; () banked
  7890  01423A  65A2               	cpfsgt	fround@prec& (0+255),b
  7891  01423C  D078               	goto	l7524
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7895  01423E  0E00               	movlw	0
  7896  014240  0100               	movlb	0	; () banked
  7897  014242  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7898  014244  0E0A               	movlw	10
  7899  014246  6F71               	movwf	___awmod@divisor& (0+255),b
  7900  014248  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  7901  01424C  0100               	movlb	0	; () banked
  7902  01424E  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7903  014250  EC70  F0AA         	call	___awmod	;wreg free
  7904  014254  0100               	movlb	0	; () banked
  7905  014256  90D8               	bcf	status,0,c
  7906  014258  376F               	rlcf	?___awmod& (0+255),f,b
  7907  01425A  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7908  01425C  0100               	movlb	0	; () banked
  7909  01425E  90D8               	bcf	status,0,c
  7910  014260  376F               	rlcf	?___awmod& (0+255),f,b
  7911  014262  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7912  014264  0EDD               	movlw	low __npowers_
  7913  014266  0100               	movlb	0	; () banked
  7914  014268  256F               	addwf	?___awmod& (0+255),w,b
  7915  01426A  6EF6               	movwf	tblptrl,c
  7916  01426C  0EFE               	movlw	high __npowers_
  7917  01426E  0100               	movlb	0	; () banked
  7918  014270  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7919  014272  6EF7               	movwf	tblptrh,c
  7920  014274                     	if	1	;There are 3 active tblptr bytes
  7921  014274  6AF8               	clrf	tblptru,c
  7922  014276  0E00               	movlw	low (__mediumconst shr (0+16))
  7923  014278  22F8               	addwfc	tblptru,f,c
  7924  01427A                     	endif
  7925  01427A  0009               	tblrd		*+
  7926  01427C  CFF5 F081          	movff	tablat,___flmul@a
  7927  014280  0009               	tblrd		*+
  7928  014282  CFF5 F082          	movff	tablat,___flmul@a+1
  7929  014286  0009               	tblrd		*+
  7930  014288  CFF5 F083          	movff	tablat,___flmul@a+2
  7931  01428C  000A               	tblrd		*-
  7932  01428E  CFF5 F084          	movff	tablat,___flmul@a+3
  7933  014292  0E00               	movlw	0
  7934  014294  0100               	movlb	0	; () banked
  7935  014296  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7936  014298  0E0A               	movlw	10
  7937  01429A  6F77               	movwf	___awdiv@divisor& (0+255),b
  7938  01429C  C0A2  F075         	movff	fround@prec,___awdiv@dividend
  7939  0142A0  0100               	movlb	0	; () banked
  7940  0142A2  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7941  0142A4  ECB3  F0A9         	call	___awdiv	;wreg free
  7942  0142A8  0100               	movlb	0	; () banked
  7943  0142AA  90D8               	bcf	status,0,c
  7944  0142AC  3775               	rlcf	?___awdiv& (0+255),f,b
  7945  0142AE  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7946  0142B0  0100               	movlb	0	; () banked
  7947  0142B2  90D8               	bcf	status,0,c
  7948  0142B4  3775               	rlcf	?___awdiv& (0+255),f,b
  7949  0142B6  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7950  0142B8  0E24               	movlw	36
  7951  0142BA  0100               	movlb	0	; () banked
  7952  0142BC  2775               	addwf	?___awdiv& (0+255),f,b
  7953  0142BE  0E00               	movlw	0
  7954  0142C0  0100               	movlb	0	; () banked
  7955  0142C2  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7956  0142C4  0EDD               	movlw	low __npowers_
  7957  0142C6  0100               	movlb	0	; () banked
  7958  0142C8  2575               	addwf	?___awdiv& (0+255),w,b
  7959  0142CA  6EF6               	movwf	tblptrl,c
  7960  0142CC  0EFE               	movlw	high __npowers_
  7961  0142CE  0100               	movlb	0	; () banked
  7962  0142D0  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7963  0142D2  6EF7               	movwf	tblptrh,c
  7964  0142D4                     	if	1	;There are 3 active tblptr bytes
  7965  0142D4  6AF8               	clrf	tblptru,c
  7966  0142D6  0E00               	movlw	low (__mediumconst shr (0+16))
  7967  0142D8  22F8               	addwfc	tblptru,f,c
  7968  0142DA                     	endif
  7969  0142DA  0009               	tblrd		*+
  7970  0142DC  CFF5 F07D          	movff	tablat,___flmul@b
  7971  0142E0  0009               	tblrd		*+
  7972  0142E2  CFF5 F07E          	movff	tablat,___flmul@b+1
  7973  0142E6  0009               	tblrd		*+
  7974  0142E8  CFF5 F07F          	movff	tablat,___flmul@b+2
  7975  0142EC  000A               	tblrd		*-
  7976  0142EE  CFF5 F080          	movff	tablat,___flmul@b+3
  7977  0142F2  EC42  F098         	call	___flmul	;wreg free
  7978  0142F6  C07D  F09E         	movff	?___flmul,_fround$4190
  7979  0142FA  C07E  F09F         	movff	?___flmul+1,_fround$4190+1
  7980  0142FE  C07F  F0A0         	movff	?___flmul+2,_fround$4190+2
  7981  014302  C080  F0A1         	movff	?___flmul+3,_fround$4190+3
  7982                           
  7983                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7984  014306  C09E  F07D         	movff	_fround$4190,___flmul@b
  7985  01430A  C09F  F07E         	movff	_fround$4190+1,___flmul@b+1
  7986  01430E  C0A0  F07F         	movff	_fround$4190+2,___flmul@b+2
  7987  014312  C0A1  F080         	movff	_fround$4190+3,___flmul@b+3
  7988  014316  0E00               	movlw	0
  7989  014318  0100               	movlb	0	; () banked
  7990  01431A  6F81               	movwf	___flmul@a& (0+255),b
  7991  01431C  0E00               	movlw	0
  7992  01431E  6F82               	movwf	(___flmul@a+1)& (0+255),b
  7993  014320  0E00               	movlw	0
  7994  014322  6F83               	movwf	(___flmul@a+2)& (0+255),b
  7995  014324  0E3F               	movlw	63
  7996  014326  6F84               	movwf	(___flmul@a+3)& (0+255),b
  7997  014328  EC42  F098         	call	___flmul	;wreg free
  7998  01432C  D77B               	goto	L7
  7999  01432E                     l7524:
  8000                           
  8001                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8002  01432E  0100               	movlb	0	; () banked
  8003  014330  51A2               	movf	fround@prec& (0+255),w,b
  8004  014332  0D04               	mullw	4
  8005  014334  0EDD               	movlw	low __npowers_
  8006  014336  24F3               	addwf	prodl,w,c
  8007  014338  6EF6               	movwf	tblptrl,c
  8008  01433A  0EFE               	movlw	high __npowers_
  8009  01433C  20F4               	addwfc	prodh,w,c
  8010  01433E  6EF7               	movwf	tblptrh,c
  8011  014340                     	if	1	;There are 3 active tblptr bytes
  8012  014340  6AF8               	clrf	tblptru,c
  8013  014342  0E00               	movlw	low (__mediumconst shr (0+16))
  8014  014344  22F8               	addwfc	tblptru,f,c
  8015  014346                     	endif
  8016  014346  0009               	tblrd		*+
  8017  014348  CFF5 F07D          	movff	tablat,___flmul@b
  8018  01434C  0009               	tblrd		*+
  8019  01434E  CFF5 F07E          	movff	tablat,___flmul@b+1
  8020  014352  0009               	tblrd		*+
  8021  014354  CFF5 F07F          	movff	tablat,___flmul@b+2
  8022  014358  000A               	tblrd		*-
  8023  01435A  CFF5 F080          	movff	tablat,___flmul@b+3
  8024  01435E  0E00               	movlw	0
  8025  014360  0100               	movlb	0	; () banked
  8026  014362  6F81               	movwf	___flmul@a& (0+255),b
  8027  014364  0E00               	movlw	0
  8028  014366  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8029  014368  0E00               	movlw	0
  8030  01436A  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8031  01436C  0E3F               	movlw	63
  8032  01436E  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8033  014370  EC42  F098         	call	___flmul	;wreg free
  8034  014374  C07D  F096         	movff	?___flmul,?_fround
  8035  014378  C07E  F097         	movff	?___flmul+1,?_fround+1
  8036  01437C  C07F  F098         	movff	?___flmul+2,?_fround+2
  8037  014380  C080  F099         	movff	?___flmul+3,?_fround+3
  8038  014384  0012               	return	
  8039  014386                     __end_of_fround:
  8040                           	opt stack 0
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           prodh	equ	0xFF4
  8046                           prodl	equ	0xFF3
  8047                           intcon	equ	0xFF2
  8048                           postinc0	equ	0xFEE
  8049                           wreg	equ	0xFE8
  8050                           indf2	equ	0xFDF
  8051                           postinc2	equ	0xFDE
  8052                           fsr2h	equ	0xFDA
  8053                           fsr2l	equ	0xFD9
  8054                           status	equ	0xFD8
  8055                           
  8056 ;; *************** function ___flmul *****************
  8057 ;; Defined at:
  8058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  b               4   29[BANK0 ] unsigned char 
  8061 ;;  a               4   33[BANK0 ] unsigned char 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  prod            4   48[BANK0 ] struct .
  8064 ;;  grs             4   43[BANK0 ] unsigned long 
  8065 ;;  temp            2   52[BANK0 ] struct .
  8066 ;;  bexp            1   47[BANK0 ] unsigned char 
  8067 ;;  aexp            1   42[BANK0 ] unsigned char 
  8068 ;;  sign            1   41[BANK0 ] unsigned char 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  4   29[BANK0 ] unsigned char 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0, prodl, prodh
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8078 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;Total ram usage:       25 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    3
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_main
  8089 ;;		_fround
  8090 ;;		_scale
  8091 ;;		_sprintf
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text12
  8096  013084                     __ptext12:
  8097                           	opt stack 0
  8098  013084                     ___flmul:
  8099                           	opt stack 27
  8100                           
  8101                           ;incstack = 0
  8102  013084  0100               	movlb	0	; () banked
  8103  013086  5180               	movf	(___flmul@b+3)& (0+255),w,b
  8104  013088  0B80               	andlw	128
  8105  01308A  0100               	movlb	0	; () banked
  8106  01308C  6F89               	movwf	___flmul@sign& (0+255),b
  8107  01308E  0100               	movlb	0	; () banked
  8108  013090  5180               	movf	(___flmul@b+3)& (0+255),w,b
  8109  013092  2580               	addwf	(___flmul@b+3)& (0+255),w,b
  8110  013094  0100               	movlb	0	; () banked
  8111  013096  6F8F               	movwf	___flmul@bexp& (0+255),b
  8112                           
  8113                           ; BSR set to: 0
  8114  013098  0100               	movlb	0	; () banked
  8115  01309A  AF7F               	btfss	(___flmul@b+2)& (0+255),7,b
  8116  01309C  D002               	goto	l7280
  8117                           
  8118                           ; BSR set to: 0
  8119  01309E  0100               	movlb	0	; () banked
  8120  0130A0  818F               	bsf	___flmul@bexp& (0+255),0,b
  8121  0130A2                     l7280:
  8122                           
  8123                           ; BSR set to: 0
  8124  0130A2  0100               	movlb	0	; () banked
  8125  0130A4  518F               	movf	___flmul@bexp& (0+255),w,b
  8126  0130A6  0100               	movlb	0	; () banked
  8127  0130A8  B4D8               	btfsc	status,2,c
  8128  0130AA  D010               	goto	l7288
  8129                           
  8130                           ; BSR set to: 0
  8131  0130AC  0100               	movlb	0	; () banked
  8132  0130AE  298F               	incf	___flmul@bexp& (0+255),w,b
  8133  0130B0  A4D8               	btfss	status,2,c
  8134  0130B2  D009               	goto	l7286
  8135                           
  8136                           ; BSR set to: 0
  8137  0130B4  0E00               	movlw	0
  8138  0130B6  0100               	movlb	0	; () banked
  8139  0130B8  6F7D               	movwf	___flmul@b& (0+255),b
  8140  0130BA  0E00               	movlw	0
  8141  0130BC  6F7E               	movwf	(___flmul@b+1)& (0+255),b
  8142  0130BE  0E00               	movlw	0
  8143  0130C0  6F7F               	movwf	(___flmul@b+2)& (0+255),b
  8144  0130C2  0E00               	movlw	0
  8145  0130C4  6F80               	movwf	(___flmul@b+3)& (0+255),b
  8146  0130C6                     l7286:
  8147                           
  8148                           ; BSR set to: 0
  8149  0130C6  0100               	movlb	0	; () banked
  8150  0130C8  8F7F               	bsf	(___flmul@b+2)& (0+255),7,b
  8151  0130CA  D009               	goto	l7290
  8152  0130CC                     l7288:
  8153                           
  8154                           ; BSR set to: 0
  8155  0130CC  0E00               	movlw	0
  8156  0130CE  0100               	movlb	0	; () banked
  8157  0130D0  6F7D               	movwf	___flmul@b& (0+255),b
  8158  0130D2  0E00               	movlw	0
  8159  0130D4  6F7E               	movwf	(___flmul@b+1)& (0+255),b
  8160  0130D6  0E00               	movlw	0
  8161  0130D8  6F7F               	movwf	(___flmul@b+2)& (0+255),b
  8162  0130DA  0E00               	movlw	0
  8163  0130DC  6F80               	movwf	(___flmul@b+3)& (0+255),b
  8164  0130DE                     l7290:
  8165                           
  8166                           ; BSR set to: 0
  8167  0130DE  0100               	movlb	0	; () banked
  8168  0130E0  5184               	movf	(___flmul@a+3)& (0+255),w,b
  8169  0130E2  0B80               	andlw	128
  8170  0130E4  0100               	movlb	0	; () banked
  8171  0130E6  1B89               	xorwf	___flmul@sign& (0+255),f,b
  8172                           
  8173                           ; BSR set to: 0
  8174  0130E8  0100               	movlb	0	; () banked
  8175  0130EA  5184               	movf	(___flmul@a+3)& (0+255),w,b
  8176  0130EC  2584               	addwf	(___flmul@a+3)& (0+255),w,b
  8177  0130EE  0100               	movlb	0	; () banked
  8178  0130F0  6F8A               	movwf	___flmul@aexp& (0+255),b
  8179                           
  8180                           ; BSR set to: 0
  8181  0130F2  0100               	movlb	0	; () banked
  8182  0130F4  AF83               	btfss	(___flmul@a+2)& (0+255),7,b
  8183  0130F6  D002               	goto	l7298
  8184                           
  8185                           ; BSR set to: 0
  8186  0130F8  0100               	movlb	0	; () banked
  8187  0130FA  818A               	bsf	___flmul@aexp& (0+255),0,b
  8188  0130FC                     l7298:
  8189                           
  8190                           ; BSR set to: 0
  8191  0130FC  0100               	movlb	0	; () banked
  8192  0130FE  518A               	movf	___flmul@aexp& (0+255),w,b
  8193  013100  0100               	movlb	0	; () banked
  8194  013102  B4D8               	btfsc	status,2,c
  8195  013104  D010               	goto	l7306
  8196                           
  8197                           ; BSR set to: 0
  8198  013106  0100               	movlb	0	; () banked
  8199  013108  298A               	incf	___flmul@aexp& (0+255),w,b
  8200  01310A  A4D8               	btfss	status,2,c
  8201  01310C  D009               	goto	l7304
  8202                           
  8203                           ; BSR set to: 0
  8204  01310E  0E00               	movlw	0
  8205  013110  0100               	movlb	0	; () banked
  8206  013112  6F81               	movwf	___flmul@a& (0+255),b
  8207  013114  0E00               	movlw	0
  8208  013116  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8209  013118  0E00               	movlw	0
  8210  01311A  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8211  01311C  0E00               	movlw	0
  8212  01311E  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8213  013120                     l7304:
  8214                           
  8215                           ; BSR set to: 0
  8216  013120  0100               	movlb	0	; () banked
  8217  013122  8F83               	bsf	(___flmul@a+2)& (0+255),7,b
  8218  013124  D009               	goto	l1482
  8219  013126                     l7306:
  8220                           
  8221                           ; BSR set to: 0
  8222  013126  0E00               	movlw	0
  8223  013128  0100               	movlb	0	; () banked
  8224  01312A  6F81               	movwf	___flmul@a& (0+255),b
  8225  01312C  0E00               	movlw	0
  8226  01312E  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8227  013130  0E00               	movlw	0
  8228  013132  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8229  013134  0E00               	movlw	0
  8230  013136  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8231  013138                     l1482:
  8232                           
  8233                           ; BSR set to: 0
  8234  013138  0100               	movlb	0	; () banked
  8235  01313A  518A               	movf	___flmul@aexp& (0+255),w,b
  8236  01313C  0100               	movlb	0	; () banked
  8237  01313E  B4D8               	btfsc	status,2,c
  8238  013140  D005               	goto	l7310
  8239                           
  8240                           ; BSR set to: 0
  8241  013142  0100               	movlb	0	; () banked
  8242  013144  518F               	movf	___flmul@bexp& (0+255),w,b
  8243  013146  0100               	movlb	0	; () banked
  8244  013148  A4D8               	btfss	status,2,c
  8245  01314A  D00A               	goto	l7314
  8246  01314C                     l7310:
  8247                           
  8248                           ; BSR set to: 0
  8249  01314C  0E00               	movlw	0
  8250  01314E  0100               	movlb	0	; () banked
  8251  013150  6F7D               	movwf	?___flmul& (0+255),b
  8252  013152  0E00               	movlw	0
  8253  013154  6F7E               	movwf	(?___flmul+1)& (0+255),b
  8254  013156  0E00               	movlw	0
  8255  013158  6F7F               	movwf	(?___flmul+2)& (0+255),b
  8256  01315A  0E00               	movlw	0
  8257  01315C  6F80               	movwf	(?___flmul+3)& (0+255),b
  8258                           
  8259                           ; BSR set to: 0
  8260  01315E  0012               	return	
  8261  013160                     l7314:
  8262                           
  8263                           ; BSR set to: 0
  8264  013160  0100               	movlb	0	; () banked
  8265  013162  5183               	movf	(___flmul@a+2)& (0+255),w,b
  8266  013164  0100               	movlb	0	; () banked
  8267  013166  037D               	mulwf	___flmul@b& (0+255),b
  8268  013168  CFF3 F094          	movff	prodl,___flmul@temp
  8269  01316C  CFF4 F095          	movff	prodh,___flmul@temp+1
  8270                           
  8271                           ; BSR set to: 0
  8272  013170  0100               	movlb	0	; () banked
  8273  013172  5194               	movf	___flmul@temp& (0+255),w,b
  8274  013174  0100               	movlb	0	; () banked
  8275  013176  6F8B               	movwf	___flmul@grs& (0+255),b
  8276  013178  6B8C               	clrf	(___flmul@grs+1)& (0+255),b
  8277  01317A  6B8D               	clrf	(___flmul@grs+2)& (0+255),b
  8278  01317C  6B8E               	clrf	(___flmul@grs+3)& (0+255),b
  8279                           
  8280                           ; BSR set to: 0
  8281  01317E  0100               	movlb	0	; () banked
  8282  013180  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8283  013182  0100               	movlb	0	; () banked
  8284  013184  6F90               	movwf	___flmul@prod& (0+255),b
  8285  013186  6B91               	clrf	(___flmul@prod+1)& (0+255),b
  8286  013188  6B92               	clrf	(___flmul@prod+2)& (0+255),b
  8287  01318A  6B93               	clrf	(___flmul@prod+3)& (0+255),b
  8288  01318C  0100               	movlb	0	; () banked
  8289  01318E  5182               	movf	(___flmul@a+1)& (0+255),w,b
  8290  013190  0100               	movlb	0	; () banked
  8291  013192  037E               	mulwf	(___flmul@b+1)& (0+255),b
  8292  013194  CFF3 F094          	movff	prodl,___flmul@temp
  8293  013198  CFF4 F095          	movff	prodh,___flmul@temp+1
  8294                           
  8295                           ; BSR set to: 0
  8296  01319C  0100               	movlb	0	; () banked
  8297  01319E  5194               	movf	___flmul@temp& (0+255),w,b
  8298  0131A0  0100               	movlb	0	; () banked
  8299  0131A2  278B               	addwf	___flmul@grs& (0+255),f,b
  8300  0131A4  0E00               	movlw	0
  8301  0131A6  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8302  0131A8  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8303  0131AA  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8304                           
  8305                           ; BSR set to: 0
  8306  0131AC  0100               	movlb	0	; () banked
  8307  0131AE  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8308  0131B0  0100               	movlb	0	; () banked
  8309  0131B2  2790               	addwf	___flmul@prod& (0+255),f,b
  8310  0131B4  0E00               	movlw	0
  8311  0131B6  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8312  0131B8  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8313  0131BA  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8314  0131BC  0100               	movlb	0	; () banked
  8315  0131BE  5181               	movf	___flmul@a& (0+255),w,b
  8316  0131C0  0100               	movlb	0	; () banked
  8317  0131C2  037F               	mulwf	(___flmul@b+2)& (0+255),b
  8318  0131C4  CFF3 F094          	movff	prodl,___flmul@temp
  8319  0131C8  CFF4 F095          	movff	prodh,___flmul@temp+1
  8320                           
  8321                           ; BSR set to: 0
  8322  0131CC  0100               	movlb	0	; () banked
  8323  0131CE  5194               	movf	___flmul@temp& (0+255),w,b
  8324  0131D0  0100               	movlb	0	; () banked
  8325  0131D2  278B               	addwf	___flmul@grs& (0+255),f,b
  8326  0131D4  0E00               	movlw	0
  8327  0131D6  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8328  0131D8  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8329  0131DA  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8330                           
  8331                           ; BSR set to: 0
  8332  0131DC  0100               	movlb	0	; () banked
  8333  0131DE  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8334  0131E0  0100               	movlb	0	; () banked
  8335  0131E2  2790               	addwf	___flmul@prod& (0+255),f,b
  8336  0131E4  0E00               	movlw	0
  8337  0131E6  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8338  0131E8  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8339  0131EA  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8340                           
  8341                           ; BSR set to: 0
  8342  0131EC  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  8343  0131F0  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  8344  0131F4  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  8345  0131F8  0100               	movlb	0	; () banked
  8346  0131FA  6B8B               	clrf	___flmul@grs& (0+255),b
  8347                           
  8348                           ; BSR set to: 0
  8349  0131FC  0100               	movlb	0	; () banked
  8350  0131FE  5181               	movf	___flmul@a& (0+255),w,b
  8351  013200  0100               	movlb	0	; () banked
  8352  013202  037E               	mulwf	(___flmul@b+1)& (0+255),b
  8353  013204  CFF3 F094          	movff	prodl,___flmul@temp
  8354  013208  CFF4 F095          	movff	prodh,___flmul@temp+1
  8355                           
  8356                           ; BSR set to: 0
  8357  01320C  0100               	movlb	0	; () banked
  8358  01320E  5194               	movf	___flmul@temp& (0+255),w,b
  8359  013210  0100               	movlb	0	; () banked
  8360  013212  278B               	addwf	___flmul@grs& (0+255),f,b
  8361  013214  0100               	movlb	0	; () banked
  8362  013216  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8363  013218  0100               	movlb	0	; () banked
  8364  01321A  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8365  01321C  0E00               	movlw	0
  8366  01321E  0100               	movlb	0	; () banked
  8367  013220  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8368  013222  0E00               	movlw	0
  8369  013224  0100               	movlb	0	; () banked
  8370  013226  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8371                           
  8372                           ; BSR set to: 0
  8373  013228  0100               	movlb	0	; () banked
  8374  01322A  5182               	movf	(___flmul@a+1)& (0+255),w,b
  8375  01322C  0100               	movlb	0	; () banked
  8376  01322E  037D               	mulwf	___flmul@b& (0+255),b
  8377  013230  CFF3 F094          	movff	prodl,___flmul@temp
  8378  013234  CFF4 F095          	movff	prodh,___flmul@temp+1
  8379                           
  8380                           ; BSR set to: 0
  8381  013238  0100               	movlb	0	; () banked
  8382  01323A  5194               	movf	___flmul@temp& (0+255),w,b
  8383  01323C  0100               	movlb	0	; () banked
  8384  01323E  278B               	addwf	___flmul@grs& (0+255),f,b
  8385  013240  0100               	movlb	0	; () banked
  8386  013242  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8387  013244  0100               	movlb	0	; () banked
  8388  013246  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8389  013248  0E00               	movlw	0
  8390  01324A  0100               	movlb	0	; () banked
  8391  01324C  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8392  01324E  0E00               	movlw	0
  8393  013250  0100               	movlb	0	; () banked
  8394  013252  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8395                           
  8396                           ; BSR set to: 0
  8397  013254  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  8398  013258  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  8399  01325C  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  8400  013260  0100               	movlb	0	; () banked
  8401  013262  6B8B               	clrf	___flmul@grs& (0+255),b
  8402  013264  0100               	movlb	0	; () banked
  8403  013266  5181               	movf	___flmul@a& (0+255),w,b
  8404  013268  0100               	movlb	0	; () banked
  8405  01326A  037D               	mulwf	___flmul@b& (0+255),b
  8406  01326C  CFF3 F094          	movff	prodl,___flmul@temp
  8407  013270  CFF4 F095          	movff	prodh,___flmul@temp+1
  8408                           
  8409                           ; BSR set to: 0
  8410  013274  0100               	movlb	0	; () banked
  8411  013276  5194               	movf	___flmul@temp& (0+255),w,b
  8412  013278  0100               	movlb	0	; () banked
  8413  01327A  278B               	addwf	___flmul@grs& (0+255),f,b
  8414  01327C  0100               	movlb	0	; () banked
  8415  01327E  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8416  013280  0100               	movlb	0	; () banked
  8417  013282  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8418  013284  0E00               	movlw	0
  8419  013286  0100               	movlb	0	; () banked
  8420  013288  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8421  01328A  0E00               	movlw	0
  8422  01328C  0100               	movlb	0	; () banked
  8423  01328E  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8424                           
  8425                           ; BSR set to: 0
  8426  013290  0100               	movlb	0	; () banked
  8427  013292  5183               	movf	(___flmul@a+2)& (0+255),w,b
  8428  013294  0100               	movlb	0	; () banked
  8429  013296  037E               	mulwf	(___flmul@b+1)& (0+255),b
  8430  013298  CFF3 F094          	movff	prodl,___flmul@temp
  8431  01329C  CFF4 F095          	movff	prodh,___flmul@temp+1
  8432  0132A0  0100               	movlb	0	; () banked
  8433  0132A2  5194               	movf	___flmul@temp& (0+255),w,b
  8434  0132A4  0100               	movlb	0	; () banked
  8435  0132A6  2790               	addwf	___flmul@prod& (0+255),f,b
  8436  0132A8  0100               	movlb	0	; () banked
  8437  0132AA  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8438  0132AC  0100               	movlb	0	; () banked
  8439  0132AE  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8440  0132B0  0E00               	movlw	0
  8441  0132B2  0100               	movlb	0	; () banked
  8442  0132B4  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8443  0132B6  0E00               	movlw	0
  8444  0132B8  0100               	movlb	0	; () banked
  8445  0132BA  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8446                           
  8447                           ; BSR set to: 0
  8448  0132BC  0100               	movlb	0	; () banked
  8449  0132BE  5182               	movf	(___flmul@a+1)& (0+255),w,b
  8450  0132C0  0100               	movlb	0	; () banked
  8451  0132C2  037F               	mulwf	(___flmul@b+2)& (0+255),b
  8452  0132C4  CFF3 F094          	movff	prodl,___flmul@temp
  8453  0132C8  CFF4 F095          	movff	prodh,___flmul@temp+1
  8454                           
  8455                           ; BSR set to: 0
  8456  0132CC  0100               	movlb	0	; () banked
  8457  0132CE  5194               	movf	___flmul@temp& (0+255),w,b
  8458  0132D0  0100               	movlb	0	; () banked
  8459  0132D2  2790               	addwf	___flmul@prod& (0+255),f,b
  8460  0132D4  0100               	movlb	0	; () banked
  8461  0132D6  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8462  0132D8  0100               	movlb	0	; () banked
  8463  0132DA  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8464  0132DC  0E00               	movlw	0
  8465  0132DE  0100               	movlb	0	; () banked
  8466  0132E0  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8467  0132E2  0E00               	movlw	0
  8468  0132E4  0100               	movlb	0	; () banked
  8469  0132E6  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8470  0132E8  0100               	movlb	0	; () banked
  8471  0132EA  5183               	movf	(___flmul@a+2)& (0+255),w,b
  8472  0132EC  0100               	movlb	0	; () banked
  8473  0132EE  037F               	mulwf	(___flmul@b+2)& (0+255),b
  8474  0132F0  CFF3 F094          	movff	prodl,___flmul@temp
  8475  0132F4  CFF4 F095          	movff	prodh,___flmul@temp+1
  8476                           
  8477                           ; BSR set to: 0
  8478  0132F8  0100               	movlb	0	; () banked
  8479  0132FA  5194               	movf	___flmul@temp& (0+255),w,b
  8480  0132FC  0100               	movlb	0	; () banked
  8481  0132FE  6F85               	movwf	??___flmul& (0+255),b
  8482  013300  0100               	movlb	0	; () banked
  8483  013302  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8484  013304  0100               	movlb	0	; () banked
  8485  013306  6F86               	movwf	(??___flmul+1)& (0+255),b
  8486  013308  0100               	movlb	0	; () banked
  8487  01330A  6B87               	clrf	(??___flmul+2)& (0+255),b
  8488  01330C  0100               	movlb	0	; () banked
  8489  01330E  6B88               	clrf	(??___flmul+3)& (0+255),b
  8490  013310  C087  F088         	movff	??___flmul+2,??___flmul+3
  8491  013314  C086  F087         	movff	??___flmul+1,??___flmul+2
  8492  013318  C085  F086         	movff	??___flmul,??___flmul+1
  8493  01331C  0100               	movlb	0	; () banked
  8494  01331E  6B85               	clrf	??___flmul& (0+255),b
  8495  013320  0100               	movlb	0	; () banked
  8496  013322  5185               	movf	??___flmul& (0+255),w,b
  8497  013324  0100               	movlb	0	; () banked
  8498  013326  2790               	addwf	___flmul@prod& (0+255),f,b
  8499  013328  0100               	movlb	0	; () banked
  8500  01332A  5186               	movf	(??___flmul+1)& (0+255),w,b
  8501  01332C  0100               	movlb	0	; () banked
  8502  01332E  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8503  013330  0100               	movlb	0	; () banked
  8504  013332  5187               	movf	(??___flmul+2)& (0+255),w,b
  8505  013334  0100               	movlb	0	; () banked
  8506  013336  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8507  013338  0100               	movlb	0	; () banked
  8508  01333A  5188               	movf	(??___flmul+3)& (0+255),w,b
  8509  01333C  0100               	movlb	0	; () banked
  8510  01333E  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8511                           
  8512                           ; BSR set to: 0
  8513  013340  C08B  F085         	movff	___flmul@grs,??___flmul
  8514  013344  C08C  F086         	movff	___flmul@grs+1,??___flmul+1
  8515  013348  C08D  F087         	movff	___flmul@grs+2,??___flmul+2
  8516  01334C  C08E  F088         	movff	___flmul@grs+3,??___flmul+3
  8517  013350  0E19               	movlw	25
  8518  013352  D006               	goto	u9480
  8519  013354                     u9485:
  8520  013354  0100               	movlb	0	; () banked
  8521  013356  90D8               	bcf	status,0,c
  8522  013358  3388               	rrcf	(??___flmul+3)& (0+255),f,b
  8523  01335A  3387               	rrcf	(??___flmul+2)& (0+255),f,b
  8524  01335C  3386               	rrcf	(??___flmul+1)& (0+255),f,b
  8525  01335E  3385               	rrcf	??___flmul& (0+255),f,b
  8526  013360                     u9480:
  8527  013360  2EE8               	decfsz	wreg,f,c
  8528  013362  D7F8               	goto	u9485
  8529  013364  0100               	movlb	0	; () banked
  8530  013366  5185               	movf	??___flmul& (0+255),w,b
  8531  013368  0100               	movlb	0	; () banked
  8532  01336A  2790               	addwf	___flmul@prod& (0+255),f,b
  8533  01336C  0100               	movlb	0	; () banked
  8534  01336E  5186               	movf	(??___flmul+1)& (0+255),w,b
  8535  013370  0100               	movlb	0	; () banked
  8536  013372  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8537  013374  0100               	movlb	0	; () banked
  8538  013376  5187               	movf	(??___flmul+2)& (0+255),w,b
  8539  013378  0100               	movlb	0	; () banked
  8540  01337A  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8541  01337C  0100               	movlb	0	; () banked
  8542  01337E  5188               	movf	(??___flmul+3)& (0+255),w,b
  8543  013380  0100               	movlb	0	; () banked
  8544  013382  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8545                           
  8546                           ; BSR set to: 0
  8547  013384  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  8548  013388  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  8549  01338C  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  8550  013390  0100               	movlb	0	; () banked
  8551  013392  6B8B               	clrf	___flmul@grs& (0+255),b
  8552                           
  8553                           ; BSR set to: 0
  8554  013394  0100               	movlb	0	; () banked
  8555  013396  518A               	movf	___flmul@aexp& (0+255),w,b
  8556  013398  C08F  F085         	movff	___flmul@bexp,??___flmul
  8557  01339C  0100               	movlb	0	; () banked
  8558  01339E  6B86               	clrf	(??___flmul+1)& (0+255),b
  8559  0133A0  0100               	movlb	0	; () banked
  8560  0133A2  2785               	addwf	??___flmul& (0+255),f,b
  8561  0133A4  0E00               	movlw	0
  8562  0133A6  2386               	addwfc	(??___flmul+1)& (0+255),f,b
  8563  0133A8  0E82               	movlw	130
  8564  0133AA  0100               	movlb	0	; () banked
  8565  0133AC  2585               	addwf	??___flmul& (0+255),w,b
  8566  0133AE  0100               	movlb	0	; () banked
  8567  0133B0  6F94               	movwf	___flmul@temp& (0+255),b
  8568  0133B2  0EFF               	movlw	255
  8569  0133B4  0100               	movlb	0	; () banked
  8570  0133B6  2186               	addwfc	(??___flmul+1)& (0+255),w,b
  8571  0133B8  0100               	movlb	0	; () banked
  8572  0133BA  6F95               	movwf	(___flmul@temp+1)& (0+255),b
  8573  0133BC  D015               	goto	l7362
  8574  0133BE                     l7356:
  8575                           
  8576                           ; BSR set to: 0
  8577  0133BE  0100               	movlb	0	; () banked
  8578  0133C0  90D8               	bcf	status,0,c
  8579  0133C2  3790               	rlcf	___flmul@prod& (0+255),f,b
  8580  0133C4  3791               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8581  0133C6  3792               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8582  0133C8  3793               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8583                           
  8584                           ; BSR set to: 0
  8585  0133CA  0100               	movlb	0	; () banked
  8586  0133CC  AF8E               	btfss	(___flmul@grs+3)& (0+255),7,b
  8587  0133CE  D002               	goto	l1489
  8588                           
  8589                           ; BSR set to: 0
  8590  0133D0  0100               	movlb	0	; () banked
  8591  0133D2  8190               	bsf	___flmul@prod& (0+255),0,b
  8592  0133D4                     l1489:
  8593                           
  8594                           ; BSR set to: 0
  8595  0133D4  0100               	movlb	0	; () banked
  8596  0133D6  90D8               	bcf	status,0,c
  8597  0133D8  378B               	rlcf	___flmul@grs& (0+255),f,b
  8598  0133DA  378C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8599  0133DC  378D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8600  0133DE  378E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8601  0133E0  0100               	movlb	0	; () banked
  8602  0133E2  0794               	decf	___flmul@temp& (0+255),f,b
  8603  0133E4  A0D8               	btfss	status,0,c
  8604  0133E6  0795               	decf	(___flmul@temp+1)& (0+255),f,b
  8605  0133E8                     l7362:
  8606                           
  8607                           ; BSR set to: 0
  8608  0133E8  0100               	movlb	0	; () banked
  8609  0133EA  AF92               	btfss	(___flmul@prod+2)& (0+255),7,b
  8610  0133EC  D7E8               	goto	l7356
  8611                           
  8612                           ; BSR set to: 0
  8613                           
  8614                           ; BSR set to: 0
  8615  0133EE  0E00               	movlw	0
  8616  0133F0  0100               	movlb	0	; () banked
  8617  0133F2  6F8A               	movwf	___flmul@aexp& (0+255),b
  8618                           
  8619                           ; BSR set to: 0
  8620  0133F4  0100               	movlb	0	; () banked
  8621  0133F6  AF8E               	btfss	(___flmul@grs+3)& (0+255),7,b
  8622  0133F8  D024               	goto	l1491
  8623                           
  8624                           ; BSR set to: 0
  8625  0133FA  0EFF               	movlw	255
  8626  0133FC  0100               	movlb	0	; () banked
  8627  0133FE  158B               	andwf	___flmul@grs& (0+255),w,b
  8628  013400  0100               	movlb	0	; () banked
  8629  013402  6F85               	movwf	??___flmul& (0+255),b
  8630  013404  0EFF               	movlw	255
  8631  013406  0100               	movlb	0	; () banked
  8632  013408  158C               	andwf	(___flmul@grs+1)& (0+255),w,b
  8633  01340A  0100               	movlb	0	; () banked
  8634  01340C  6F86               	movwf	(??___flmul+1)& (0+255),b
  8635  01340E  0EFF               	movlw	255
  8636  013410  0100               	movlb	0	; () banked
  8637  013412  158D               	andwf	(___flmul@grs+2)& (0+255),w,b
  8638  013414  0100               	movlb	0	; () banked
  8639  013416  6F87               	movwf	(??___flmul+2)& (0+255),b
  8640  013418  0E7F               	movlw	127
  8641  01341A  0100               	movlb	0	; () banked
  8642  01341C  158E               	andwf	(___flmul@grs+3)& (0+255),w,b
  8643  01341E  0100               	movlb	0	; () banked
  8644  013420  6F88               	movwf	(??___flmul+3)& (0+255),b
  8645  013422  0100               	movlb	0	; () banked
  8646  013424  5185               	movf	??___flmul& (0+255),w,b
  8647  013426  0100               	movlb	0	; () banked
  8648  013428  1186               	iorwf	(??___flmul+1)& (0+255),w,b
  8649  01342A  0100               	movlb	0	; () banked
  8650  01342C  1187               	iorwf	(??___flmul+2)& (0+255),w,b
  8651  01342E  0100               	movlb	0	; () banked
  8652  013430  1188               	iorwf	(??___flmul+3)& (0+255),w,b
  8653  013432  A4D8               	btfss	status,2,c
  8654  013434  D003               	goto	l7372
  8655                           
  8656                           ; BSR set to: 0
  8657                           
  8658                           ; BSR set to: 0
  8659  013436  0100               	movlb	0	; () banked
  8660  013438  A190               	btfss	___flmul@prod& (0+255),0,b
  8661  01343A  D003               	goto	l1491
  8662  01343C                     l7372:
  8663                           
  8664                           ; BSR set to: 0
  8665  01343C  0E01               	movlw	1
  8666  01343E  0100               	movlb	0	; () banked
  8667  013440  6F8A               	movwf	___flmul@aexp& (0+255),b
  8668  013442                     l1491:
  8669                           
  8670                           ; BSR set to: 0
  8671  013442  0100               	movlb	0	; () banked
  8672  013444  518A               	movf	___flmul@aexp& (0+255),w,b
  8673  013446  0100               	movlb	0	; () banked
  8674  013448  B4D8               	btfsc	status,2,c
  8675  01344A  D023               	goto	l7382
  8676                           
  8677                           ; BSR set to: 0
  8678  01344C  0E01               	movlw	1
  8679  01344E  0100               	movlb	0	; () banked
  8680  013450  2790               	addwf	___flmul@prod& (0+255),f,b
  8681  013452  0E00               	movlw	0
  8682  013454  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8683  013456  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8684  013458  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8685                           
  8686                           ; BSR set to: 0
  8687  01345A  0100               	movlb	0	; () banked
  8688  01345C  A193               	btfss	(___flmul@prod+3)& (0+255),0,b
  8689  01345E  D019               	goto	l7382
  8690                           
  8691                           ; BSR set to: 0
  8692  013460  C090  F085         	movff	___flmul@prod,??___flmul
  8693  013464  C091  F086         	movff	___flmul@prod+1,??___flmul+1
  8694  013468  C092  F087         	movff	___flmul@prod+2,??___flmul+2
  8695  01346C  C093  F088         	movff	___flmul@prod+3,??___flmul+3
  8696  013470  0100               	movlb	0	; () banked
  8697  013472  3588               	rlcf	(??___flmul+3)& (0+255),w,b
  8698  013474  3388               	rrcf	(??___flmul+3)& (0+255),f,b
  8699  013476  3387               	rrcf	(??___flmul+2)& (0+255),f,b
  8700  013478  3386               	rrcf	(??___flmul+1)& (0+255),f,b
  8701  01347A  3385               	rrcf	??___flmul& (0+255),f,b
  8702  01347C  C085  F090         	movff	??___flmul,___flmul@prod
  8703  013480  C086  F091         	movff	??___flmul+1,___flmul@prod+1
  8704  013484  C087  F092         	movff	??___flmul+2,___flmul@prod+2
  8705  013488  C088  F093         	movff	??___flmul+3,___flmul@prod+3
  8706                           
  8707                           ; BSR set to: 0
  8708  01348C  0100               	movlb	0	; () banked
  8709  01348E  4B94               	infsnz	___flmul@temp& (0+255),f,b
  8710  013490  2B95               	incf	(___flmul@temp+1)& (0+255),f,b
  8711  013492                     l7382:
  8712                           
  8713                           ; BSR set to: 0
  8714  013492  0100               	movlb	0	; () banked
  8715  013494  BF95               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8716  013496  D010               	goto	l7386
  8717  013498  0100               	movlb	0	; () banked
  8718  01349A  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8719  01349C  E104               	bnz	u9560
  8720  01349E  0100               	movlb	0	; () banked
  8721  0134A0  2994               	incf	___flmul@temp& (0+255),w,b
  8722  0134A2  A0D8               	btfss	status,0,c
  8723  0134A4  D009               	goto	l7386
  8724  0134A6                     u9560:
  8725                           
  8726                           ; BSR set to: 0
  8727  0134A6  0E00               	movlw	0
  8728  0134A8  0100               	movlb	0	; () banked
  8729  0134AA  6F90               	movwf	___flmul@prod& (0+255),b
  8730  0134AC  0E00               	movlw	0
  8731  0134AE  6F91               	movwf	(___flmul@prod+1)& (0+255),b
  8732  0134B0  0E80               	movlw	128
  8733  0134B2  6F92               	movwf	(___flmul@prod+2)& (0+255),b
  8734  0134B4  0E7F               	movlw	127
  8735  0134B6  D02B               	goto	L8
  8736  0134B8                     l7386:
  8737                           
  8738                           ; BSR set to: 0
  8739  0134B8  0100               	movlb	0	; () banked
  8740  0134BA  BF95               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8741  0134BC  D007               	goto	l7388
  8742  0134BE  0100               	movlb	0	; () banked
  8743  0134C0  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8744  0134C2  E111               	bnz	l1499
  8745  0134C4  0100               	movlb	0	; () banked
  8746  0134C6  0594               	decf	___flmul@temp& (0+255),w,b
  8747  0134C8  B0D8               	btfsc	status,0,c
  8748  0134CA  D00D               	goto	l1499
  8749  0134CC                     l7388:
  8750                           
  8751                           ; BSR set to: 0
  8752  0134CC  0E00               	movlw	0
  8753  0134CE  0100               	movlb	0	; () banked
  8754  0134D0  6F90               	movwf	___flmul@prod& (0+255),b
  8755  0134D2  0E00               	movlw	0
  8756  0134D4  6F91               	movwf	(___flmul@prod+1)& (0+255),b
  8757  0134D6  0E00               	movlw	0
  8758  0134D8  6F92               	movwf	(___flmul@prod+2)& (0+255),b
  8759  0134DA  0E00               	movlw	0
  8760  0134DC  6F93               	movwf	(___flmul@prod+3)& (0+255),b
  8761  0134DE  0E00               	movlw	0
  8762  0134E0  0100               	movlb	0	; () banked
  8763  0134E2  6F89               	movwf	___flmul@sign& (0+255),b
  8764  0134E4  D015               	goto	l7398
  8765  0134E6                     l1499:
  8766                           
  8767                           ; BSR set to: 0
  8768  0134E6  C094  F08F         	movff	___flmul@temp,___flmul@bexp
  8769                           
  8770                           ; BSR set to: 0
  8771  0134EA  0EFF               	movlw	255
  8772  0134EC  0100               	movlb	0	; () banked
  8773  0134EE  1790               	andwf	___flmul@prod& (0+255),f,b
  8774  0134F0  0EFF               	movlw	255
  8775  0134F2  1791               	andwf	(___flmul@prod+1)& (0+255),f,b
  8776  0134F4  0E7F               	movlw	127
  8777  0134F6  1792               	andwf	(___flmul@prod+2)& (0+255),f,b
  8778  0134F8  0E00               	movlw	0
  8779  0134FA  1793               	andwf	(___flmul@prod+3)& (0+255),f,b
  8780                           
  8781                           ; BSR set to: 0
  8782  0134FC  0100               	movlb	0	; () banked
  8783  0134FE  A18F               	btfss	___flmul@bexp& (0+255),0,b
  8784  013500  D002               	goto	l7396
  8785                           
  8786                           ; BSR set to: 0
  8787  013502  0100               	movlb	0	; () banked
  8788  013504  8F92               	bsf	(___flmul@prod+2)& (0+255),7,b
  8789  013506                     l7396:
  8790                           
  8791                           ; BSR set to: 0
  8792  013506  0100               	movlb	0	; () banked
  8793  013508  90D8               	bcf	status,0,c
  8794  01350A  318F               	rrcf	___flmul@bexp& (0+255),w,b
  8795  01350C  0100               	movlb	0	; () banked
  8796  01350E                     L8:
  8797  01350E  6F93               	movwf	(___flmul@prod+3)& (0+255),b
  8798  013510                     l7398:
  8799                           
  8800                           ; BSR set to: 0
  8801  013510  0100               	movlb	0	; () banked
  8802  013512  5189               	movf	___flmul@sign& (0+255),w,b
  8803  013514  0100               	movlb	0	; () banked
  8804  013516  1393               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8805                           
  8806                           ; BSR set to: 0
  8807  013518  C090  F07D         	movff	___flmul@prod,?___flmul
  8808  01351C  C091  F07E         	movff	___flmul@prod+1,?___flmul+1
  8809  013520  C092  F07F         	movff	___flmul@prod+2,?___flmul+2
  8810  013524  C093  F080         	movff	___flmul@prod+3,?___flmul+3
  8811  013528  0012               	return	
  8812  01352A                     __end_of___flmul:
  8813                           	opt stack 0
  8814                           tblptru	equ	0xFF8
  8815                           tblptrh	equ	0xFF7
  8816                           tblptrl	equ	0xFF6
  8817                           tablat	equ	0xFF5
  8818                           prodh	equ	0xFF4
  8819                           prodl	equ	0xFF3
  8820                           intcon	equ	0xFF2
  8821                           postinc0	equ	0xFEE
  8822                           wreg	equ	0xFE8
  8823                           indf2	equ	0xFDF
  8824                           postinc2	equ	0xFDE
  8825                           fsr2h	equ	0xFDA
  8826                           fsr2l	equ	0xFD9
  8827                           status	equ	0xFD8
  8828                           
  8829 ;; *************** function ___awmod *****************
  8830 ;; Defined at:
  8831 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  dividend        2   15[BANK0 ] int 
  8834 ;;  divisor         2   17[BANK0 ] int 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  sign            1   20[BANK0 ] unsigned char 
  8837 ;;  counter         1   19[BANK0 ] unsigned char 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  2   15[BANK0 ] int 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8847 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;Total ram usage:        6 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    3
  8854 ;; This function calls:
  8855 ;;		Nothing
  8856 ;; This function is called by:
  8857 ;;		_fround
  8858 ;;		_scale
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text13
  8863  0154E0                     __ptext13:
  8864                           	opt stack 0
  8865  0154E0                     ___awmod:
  8866                           	opt stack 24
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;incstack = 0
  8870  0154E0  0E00               	movlw	0
  8871  0154E2  0100               	movlb	0	; () banked
  8872  0154E4  6F74               	movwf	___awmod@sign& (0+255),b
  8873                           
  8874                           ; BSR set to: 0
  8875  0154E6  0100               	movlb	0	; () banked
  8876  0154E8  AF70               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8877  0154EA  D008               	goto	l7456
  8878                           
  8879                           ; BSR set to: 0
  8880  0154EC  0100               	movlb	0	; () banked
  8881  0154EE  6D6F               	negf	___awmod@dividend& (0+255),b
  8882  0154F0  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  8883  0154F2  B0D8               	btfsc	status,0,c
  8884  0154F4  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  8885                           
  8886                           ; BSR set to: 0
  8887  0154F6  0E01               	movlw	1
  8888  0154F8  0100               	movlb	0	; () banked
  8889  0154FA  6F74               	movwf	___awmod@sign& (0+255),b
  8890  0154FC                     l7456:
  8891                           
  8892                           ; BSR set to: 0
  8893  0154FC  0100               	movlb	0	; () banked
  8894  0154FE  AF72               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8895  015500  D005               	goto	l7460
  8896                           
  8897                           ; BSR set to: 0
  8898  015502  0100               	movlb	0	; () banked
  8899  015504  6D71               	negf	___awmod@divisor& (0+255),b
  8900  015506  1F72               	comf	(___awmod@divisor+1)& (0+255),f,b
  8901  015508  B0D8               	btfsc	status,0,c
  8902  01550A  2B72               	incf	(___awmod@divisor+1)& (0+255),f,b
  8903  01550C                     l7460:
  8904                           
  8905                           ; BSR set to: 0
  8906  01550C  0100               	movlb	0	; () banked
  8907  01550E  5171               	movf	___awmod@divisor& (0+255),w,b
  8908  015510  0100               	movlb	0	; () banked
  8909  015512  1172               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8910  015514  B4D8               	btfsc	status,2,c
  8911  015516  D026               	goto	l7476
  8912                           
  8913                           ; BSR set to: 0
  8914  015518  0E01               	movlw	1
  8915  01551A  0100               	movlb	0	; () banked
  8916  01551C  6F73               	movwf	___awmod@counter& (0+255),b
  8917  01551E  D006               	goto	l7466
  8918  015520                     l7464:
  8919                           
  8920                           ; BSR set to: 0
  8921  015520  0100               	movlb	0	; () banked
  8922  015522  90D8               	bcf	status,0,c
  8923  015524  3771               	rlcf	___awmod@divisor& (0+255),f,b
  8924  015526  3772               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8925  015528  0100               	movlb	0	; () banked
  8926  01552A  2B73               	incf	___awmod@counter& (0+255),f,b
  8927  01552C                     l7466:
  8928                           
  8929                           ; BSR set to: 0
  8930  01552C  0100               	movlb	0	; () banked
  8931  01552E  AF72               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8932  015530  D7F7               	goto	l7464
  8933  015532                     l7468:
  8934                           
  8935                           ; BSR set to: 0
  8936  015532  0100               	movlb	0	; () banked
  8937  015534  5171               	movf	___awmod@divisor& (0+255),w,b
  8938  015536  0100               	movlb	0	; () banked
  8939  015538  5D6F               	subwf	___awmod@dividend& (0+255),w,b
  8940  01553A  0100               	movlb	0	; () banked
  8941  01553C  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  8942  01553E  0100               	movlb	0	; () banked
  8943  015540  5970               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8944  015542  A0D8               	btfss	status,0,c
  8945  015544  D008               	goto	l7472
  8946                           
  8947                           ; BSR set to: 0
  8948  015546  0100               	movlb	0	; () banked
  8949  015548  5171               	movf	___awmod@divisor& (0+255),w,b
  8950  01554A  0100               	movlb	0	; () banked
  8951  01554C  5F6F               	subwf	___awmod@dividend& (0+255),f,b
  8952  01554E  0100               	movlb	0	; () banked
  8953  015550  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  8954  015552  0100               	movlb	0	; () banked
  8955  015554  5B70               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8956  015556                     l7472:
  8957                           
  8958                           ; BSR set to: 0
  8959  015556  0100               	movlb	0	; () banked
  8960  015558  90D8               	bcf	status,0,c
  8961  01555A  3372               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8962  01555C  3371               	rrcf	___awmod@divisor& (0+255),f,b
  8963                           
  8964                           ; BSR set to: 0
  8965  01555E  0100               	movlb	0	; () banked
  8966  015560  2F73               	decfsz	___awmod@counter& (0+255),f,b
  8967  015562  D7E7               	goto	l7468
  8968  015564                     l7476:
  8969                           
  8970                           ; BSR set to: 0
  8971  015564  0100               	movlb	0	; () banked
  8972  015566  5174               	movf	___awmod@sign& (0+255),w,b
  8973  015568  0100               	movlb	0	; () banked
  8974  01556A  B4D8               	btfsc	status,2,c
  8975  01556C  D005               	goto	l7480
  8976                           
  8977                           ; BSR set to: 0
  8978  01556E  0100               	movlb	0	; () banked
  8979  015570  6D6F               	negf	___awmod@dividend& (0+255),b
  8980  015572  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  8981  015574  B0D8               	btfsc	status,0,c
  8982  015576  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  8983  015578                     l7480:
  8984                           
  8985                           ; BSR set to: 0
  8986  015578  C06F  F06F         	movff	___awmod@dividend,?___awmod
  8987  01557C  C070  F070         	movff	___awmod@dividend+1,?___awmod+1
  8988  015580  0012               	return	
  8989  015582                     __end_of___awmod:
  8990                           	opt stack 0
  8991                           tblptru	equ	0xFF8
  8992                           tblptrh	equ	0xFF7
  8993                           tblptrl	equ	0xFF6
  8994                           tablat	equ	0xFF5
  8995                           prodh	equ	0xFF4
  8996                           prodl	equ	0xFF3
  8997                           intcon	equ	0xFF2
  8998                           postinc0	equ	0xFEE
  8999                           wreg	equ	0xFE8
  9000                           indf2	equ	0xFDF
  9001                           postinc2	equ	0xFDE
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function ___awdiv *****************
  9007 ;; Defined at:
  9008 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  dividend        2   21[BANK0 ] int 
  9011 ;;  divisor         2   23[BANK0 ] int 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  quotient        2   27[BANK0 ] int 
  9014 ;;  sign            1   26[BANK0 ] unsigned char 
  9015 ;;  counter         1   25[BANK0 ] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  2   21[BANK0 ] int 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;Total ram usage:        8 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    3
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_fround
  9036 ;;		_scale
  9037 ;;		_sprintf
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text14
  9042  015366                     __ptext14:
  9043                           	opt stack 0
  9044  015366                     ___awdiv:
  9045                           	opt stack 24
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;incstack = 0
  9049  015366  0E00               	movlw	0
  9050  015368  0100               	movlb	0	; () banked
  9051  01536A  6F7A               	movwf	___awdiv@sign& (0+255),b
  9052                           
  9053                           ; BSR set to: 0
  9054  01536C  0100               	movlb	0	; () banked
  9055  01536E  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9056  015370  D008               	goto	l7412
  9057                           
  9058                           ; BSR set to: 0
  9059  015372  0100               	movlb	0	; () banked
  9060  015374  6D77               	negf	___awdiv@divisor& (0+255),b
  9061  015376  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9062  015378  B0D8               	btfsc	status,0,c
  9063  01537A  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9064                           
  9065                           ; BSR set to: 0
  9066  01537C  0E01               	movlw	1
  9067  01537E  0100               	movlb	0	; () banked
  9068  015380  6F7A               	movwf	___awdiv@sign& (0+255),b
  9069  015382                     l7412:
  9070                           
  9071                           ; BSR set to: 0
  9072  015382  0100               	movlb	0	; () banked
  9073  015384  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9074  015386  D008               	goto	l7418
  9075                           
  9076                           ; BSR set to: 0
  9077  015388  0100               	movlb	0	; () banked
  9078  01538A  6D75               	negf	___awdiv@dividend& (0+255),b
  9079  01538C  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9080  01538E  B0D8               	btfsc	status,0,c
  9081  015390  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9082                           
  9083                           ; BSR set to: 0
  9084  015392  0E01               	movlw	1
  9085  015394  0100               	movlb	0	; () banked
  9086  015396  1B7A               	xorwf	___awdiv@sign& (0+255),f,b
  9087  015398                     l7418:
  9088                           
  9089                           ; BSR set to: 0
  9090  015398  0E00               	movlw	0
  9091  01539A  0100               	movlb	0	; () banked
  9092  01539C  6F7C               	movwf	(___awdiv@quotient+1)& (0+255),b
  9093  01539E  0E00               	movlw	0
  9094  0153A0  6F7B               	movwf	___awdiv@quotient& (0+255),b
  9095                           
  9096                           ; BSR set to: 0
  9097  0153A2  0100               	movlb	0	; () banked
  9098  0153A4  5177               	movf	___awdiv@divisor& (0+255),w,b
  9099  0153A6  0100               	movlb	0	; () banked
  9100  0153A8  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9101  0153AA  B4D8               	btfsc	status,2,c
  9102  0153AC  D02C               	goto	l7440
  9103                           
  9104                           ; BSR set to: 0
  9105  0153AE  0E01               	movlw	1
  9106  0153B0  0100               	movlb	0	; () banked
  9107  0153B2  6F79               	movwf	___awdiv@counter& (0+255),b
  9108  0153B4  D006               	goto	l7426
  9109  0153B6                     l7424:
  9110                           
  9111                           ; BSR set to: 0
  9112  0153B6  0100               	movlb	0	; () banked
  9113  0153B8  90D8               	bcf	status,0,c
  9114  0153BA  3777               	rlcf	___awdiv@divisor& (0+255),f,b
  9115  0153BC  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9116  0153BE  0100               	movlb	0	; () banked
  9117  0153C0  2B79               	incf	___awdiv@counter& (0+255),f,b
  9118  0153C2                     l7426:
  9119                           
  9120                           ; BSR set to: 0
  9121  0153C2  0100               	movlb	0	; () banked
  9122  0153C4  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9123  0153C6  D7F7               	goto	l7424
  9124  0153C8                     l7428:
  9125                           
  9126                           ; BSR set to: 0
  9127  0153C8  0100               	movlb	0	; () banked
  9128  0153CA  90D8               	bcf	status,0,c
  9129  0153CC  377B               	rlcf	___awdiv@quotient& (0+255),f,b
  9130  0153CE  377C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9131                           
  9132                           ; BSR set to: 0
  9133  0153D0  0100               	movlb	0	; () banked
  9134  0153D2  5177               	movf	___awdiv@divisor& (0+255),w,b
  9135  0153D4  0100               	movlb	0	; () banked
  9136  0153D6  5D75               	subwf	___awdiv@dividend& (0+255),w,b
  9137  0153D8  0100               	movlb	0	; () banked
  9138  0153DA  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9139  0153DC  0100               	movlb	0	; () banked
  9140  0153DE  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9141  0153E0  A0D8               	btfss	status,0,c
  9142  0153E2  D00A               	goto	l7436
  9143                           
  9144                           ; BSR set to: 0
  9145  0153E4  0100               	movlb	0	; () banked
  9146  0153E6  5177               	movf	___awdiv@divisor& (0+255),w,b
  9147  0153E8  0100               	movlb	0	; () banked
  9148  0153EA  5F75               	subwf	___awdiv@dividend& (0+255),f,b
  9149  0153EC  0100               	movlb	0	; () banked
  9150  0153EE  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9151  0153F0  0100               	movlb	0	; () banked
  9152  0153F2  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9153                           
  9154                           ; BSR set to: 0
  9155  0153F4  0100               	movlb	0	; () banked
  9156  0153F6  817B               	bsf	___awdiv@quotient& (0+255),0,b
  9157  0153F8                     l7436:
  9158                           
  9159                           ; BSR set to: 0
  9160  0153F8  0100               	movlb	0	; () banked
  9161  0153FA  90D8               	bcf	status,0,c
  9162  0153FC  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9163  0153FE  3377               	rrcf	___awdiv@divisor& (0+255),f,b
  9164                           
  9165                           ; BSR set to: 0
  9166  015400  0100               	movlb	0	; () banked
  9167  015402  2F79               	decfsz	___awdiv@counter& (0+255),f,b
  9168  015404  D7E1               	goto	l7428
  9169  015406                     l7440:
  9170                           
  9171                           ; BSR set to: 0
  9172  015406  0100               	movlb	0	; () banked
  9173  015408  517A               	movf	___awdiv@sign& (0+255),w,b
  9174  01540A  0100               	movlb	0	; () banked
  9175  01540C  B4D8               	btfsc	status,2,c
  9176  01540E  D005               	goto	l7444
  9177                           
  9178                           ; BSR set to: 0
  9179  015410  0100               	movlb	0	; () banked
  9180  015412  6D7B               	negf	___awdiv@quotient& (0+255),b
  9181  015414  1F7C               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9182  015416  B0D8               	btfsc	status,0,c
  9183  015418  2B7C               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9184  01541A                     l7444:
  9185                           
  9186                           ; BSR set to: 0
  9187  01541A  C07B  F075         	movff	___awdiv@quotient,?___awdiv
  9188  01541E  C07C  F076         	movff	___awdiv@quotient+1,?___awdiv+1
  9189  015422  0012               	return	
  9190  015424                     __end_of___awdiv:
  9191                           	opt stack 0
  9192                           tblptru	equ	0xFF8
  9193                           tblptrh	equ	0xFF7
  9194                           tblptrl	equ	0xFF6
  9195                           tablat	equ	0xFF5
  9196                           prodh	equ	0xFF4
  9197                           prodl	equ	0xFF3
  9198                           intcon	equ	0xFF2
  9199                           postinc0	equ	0xFEE
  9200                           wreg	equ	0xFE8
  9201                           indf2	equ	0xFDF
  9202                           postinc2	equ	0xFDE
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8
  9206                           
  9207 ;; *************** function __tdiv_to_l_ *****************
  9208 ;; Defined at:
  9209 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  f1              4   15[BANK0 ] float 
  9212 ;;  f2              4   19[BANK0 ] float 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  quot            4   26[BANK0 ] unsigned long 
  9215 ;;  exp1            1   31[BANK0 ] unsigned char 
  9216 ;;  cntr            1   30[BANK0 ] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  4   15[BANK0 ] unsigned long 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;Total ram usage:       17 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:    3
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_sprintf
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text15
  9241  01471A                     __ptext15:
  9242                           	opt stack 0
  9243  01471A                     __tdiv_to_l_:
  9244                           	opt stack 25
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;incstack = 0
  9248  01471A  C071  F077         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9249  01471E  0100               	movlb	0	; () banked
  9250  014720  6B78               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9251  014722  6B79               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9252  014724  0100               	movlb	0	; () banked
  9253  014726  3570               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9254  014728  0100               	movlb	0	; () banked
  9255  01472A  3777               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9256  01472C  E301               	bnc	u9801
  9257  01472E  8178               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9258  014730                     u9801:
  9259  014730  0100               	movlb	0	; () banked
  9260  014732  5177               	movf	??__tdiv_to_l_& (0+255),w,b
  9261  014734  0100               	movlb	0	; () banked
  9262  014736  6F7F               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9263  014738  0100               	movlb	0	; () banked
  9264  01473A  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9265  01473C  A4D8               	btfss	status,2,c
  9266  01473E  D00A               	goto	l7584
  9267                           
  9268                           ; BSR set to: 0
  9269  014740  0E00               	movlw	0
  9270  014742  0100               	movlb	0	; () banked
  9271  014744  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9272  014746  0E00               	movlw	0
  9273  014748  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9274  01474A  0E00               	movlw	0
  9275  01474C  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9276  01474E  0E00               	movlw	0
  9277  014750  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9278                           
  9279                           ; BSR set to: 0
  9280  014752  0012               	return	
  9281  014754                     l7584:
  9282                           
  9283                           ; BSR set to: 0
  9284  014754  C075  F077         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9285  014758  0100               	movlb	0	; () banked
  9286  01475A  6B78               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9287  01475C  6B79               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9288  01475E  0100               	movlb	0	; () banked
  9289  014760  3574               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9290  014762  0100               	movlb	0	; () banked
  9291  014764  3777               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9292  014766  E301               	bnc	u9821
  9293  014768  8178               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9294  01476A                     u9821:
  9295  01476A  0100               	movlb	0	; () banked
  9296  01476C  5177               	movf	??__tdiv_to_l_& (0+255),w,b
  9297  01476E  0100               	movlb	0	; () banked
  9298  014770  6F7E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9299  014772  0100               	movlb	0	; () banked
  9300  014774  517E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9301  014776  A4D8               	btfss	status,2,c
  9302  014778  D00A               	goto	l7590
  9303                           
  9304                           ; BSR set to: 0
  9305  01477A  0E00               	movlw	0
  9306  01477C  0100               	movlb	0	; () banked
  9307  01477E  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9308  014780  0E00               	movlw	0
  9309  014782  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9310  014784  0E00               	movlw	0
  9311  014786  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9312  014788  0E00               	movlw	0
  9313  01478A  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9314                           
  9315                           ; BSR set to: 0
  9316  01478C  0012               	return	
  9317  01478E                     l7590:
  9318                           
  9319                           ; BSR set to: 0
  9320  01478E  0100               	movlb	0	; () banked
  9321  014790  8F70               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9322                           
  9323                           ; BSR set to: 0
  9324  014792  0EFF               	movlw	255
  9325  014794  0100               	movlb	0	; () banked
  9326  014796  176F               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9327  014798  0EFF               	movlw	255
  9328  01479A  0100               	movlb	0	; () banked
  9329  01479C  1770               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9330  01479E  0E00               	movlw	0
  9331  0147A0  0100               	movlb	0	; () banked
  9332  0147A2  1771               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9333  0147A4  0100               	movlb	0	; () banked
  9334  0147A6  8F74               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9335                           
  9336                           ; BSR set to: 0
  9337  0147A8  0EFF               	movlw	255
  9338  0147AA  0100               	movlb	0	; () banked
  9339  0147AC  1773               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9340  0147AE  0EFF               	movlw	255
  9341  0147B0  0100               	movlb	0	; () banked
  9342  0147B2  1774               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9343  0147B4  0E00               	movlw	0
  9344  0147B6  0100               	movlb	0	; () banked
  9345  0147B8  1775               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9346                           
  9347                           ; BSR set to: 0
  9348  0147BA  0E00               	movlw	0
  9349  0147BC  0100               	movlb	0	; () banked
  9350  0147BE  6F7A               	movwf	__tdiv_to_l_@quot& (0+255),b
  9351  0147C0  0E00               	movlw	0
  9352  0147C2  6F7B               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9353  0147C4  0E00               	movlw	0
  9354  0147C6  6F7C               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9355  0147C8  0E00               	movlw	0
  9356  0147CA  6F7D               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9357                           
  9358                           ; BSR set to: 0
  9359  0147CC  0E7F               	movlw	127
  9360  0147CE  0100               	movlb	0	; () banked
  9361  0147D0  5F7F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9362                           
  9363                           ; BSR set to: 0
  9364  0147D2  0100               	movlb	0	; () banked
  9365  0147D4  517E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9366  0147D6  0F98               	addlw	152
  9367  0147D8  0100               	movlb	0	; () banked
  9368  0147DA  5F7F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9369                           
  9370                           ; BSR set to: 0
  9371  0147DC  0E18               	movlw	24
  9372  0147DE  0100               	movlb	0	; () banked
  9373  0147E0  6F7E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9374  0147E2                     l1206:
  9375                           
  9376                           ; BSR set to: 0
  9377  0147E2  0100               	movlb	0	; () banked
  9378  0147E4  90D8               	bcf	status,0,c
  9379  0147E6  377A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9380  0147E8  377B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9381  0147EA  377C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9382  0147EC  377D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9383                           
  9384                           ; BSR set to: 0
  9385  0147EE  0100               	movlb	0	; () banked
  9386  0147F0  5173               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9387  0147F2  0100               	movlb	0	; () banked
  9388  0147F4  5D6F               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9389  0147F6  0100               	movlb	0	; () banked
  9390  0147F8  5174               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9391  0147FA  0100               	movlb	0	; () banked
  9392  0147FC  5970               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9393  0147FE  0100               	movlb	0	; () banked
  9394  014800  5175               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9395  014802  0100               	movlb	0	; () banked
  9396  014804  5971               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9397  014806  A0D8               	btfss	status,0,c
  9398  014808  D00E               	goto	l1207
  9399                           
  9400                           ; BSR set to: 0
  9401  01480A  0100               	movlb	0	; () banked
  9402  01480C  5173               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9403  01480E  0100               	movlb	0	; () banked
  9404  014810  5F6F               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9405  014812  0100               	movlb	0	; () banked
  9406  014814  5174               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9407  014816  0100               	movlb	0	; () banked
  9408  014818  5B70               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9409  01481A  0100               	movlb	0	; () banked
  9410  01481C  5175               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9411  01481E  0100               	movlb	0	; () banked
  9412  014820  5B71               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9413                           
  9414                           ; BSR set to: 0
  9415  014822  0100               	movlb	0	; () banked
  9416  014824  817A               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9417  014826                     l1207:
  9418                           
  9419                           ; BSR set to: 0
  9420  014826  0100               	movlb	0	; () banked
  9421  014828  90D8               	bcf	status,0,c
  9422  01482A  376F               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9423  01482C  3770               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9424  01482E  3771               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9425                           
  9426                           ; BSR set to: 0
  9427  014830  0100               	movlb	0	; () banked
  9428  014832  2F7E               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9429  014834  D7D6               	goto	l1206
  9430                           
  9431                           ; BSR set to: 0
  9432                           
  9433                           ; BSR set to: 0
  9434  014836  0100               	movlb	0	; () banked
  9435  014838  AF7F               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9436  01483A  D01A               	goto	l7624
  9437                           
  9438                           ; BSR set to: 0
  9439  01483C  0100               	movlb	0	; () banked
  9440  01483E  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9441  014840  0A80               	xorlw	128
  9442  014842  0F97               	addlw	151
  9443  014844  B0D8               	btfsc	status,0,c
  9444  014846  D00A               	goto	l7620
  9445                           
  9446                           ; BSR set to: 0
  9447  014848  0E00               	movlw	0
  9448  01484A  0100               	movlb	0	; () banked
  9449  01484C  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9450  01484E  0E00               	movlw	0
  9451  014850  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9452  014852  0E00               	movlw	0
  9453  014854  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9454  014856  0E00               	movlw	0
  9455  014858  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9456                           
  9457                           ; BSR set to: 0
  9458  01485A  0012               	return	
  9459  01485C                     l7620:
  9460                           
  9461                           ; BSR set to: 0
  9462  01485C  0100               	movlb	0	; () banked
  9463  01485E  90D8               	bcf	status,0,c
  9464  014860  337D               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9465  014862  337C               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9466  014864  337B               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9467  014866  337A               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9468                           
  9469                           ; BSR set to: 0
  9470  014868  0100               	movlb	0	; () banked
  9471  01486A  3F7F               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9472  01486C  D7F7               	goto	l7620
  9473                           
  9474                           ; BSR set to: 0
  9475  01486E  D01B               	goto	l1213
  9476  014870                     l7624:
  9477                           
  9478                           ; BSR set to: 0
  9479  014870  0E17               	movlw	23
  9480  014872  0100               	movlb	0	; () banked
  9481  014874  657F               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9482  014876  D012               	goto	l7632
  9483                           
  9484                           ; BSR set to: 0
  9485  014878  0E00               	movlw	0
  9486  01487A  0100               	movlb	0	; () banked
  9487  01487C  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9488  01487E  0E00               	movlw	0
  9489  014880  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9490  014882  0E00               	movlw	0
  9491  014884  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9492  014886  0E00               	movlw	0
  9493  014888  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9494                           
  9495                           ; BSR set to: 0
  9496  01488A  0012               	return	
  9497  01488C                     l7630:
  9498                           
  9499                           ; BSR set to: 0
  9500  01488C  0100               	movlb	0	; () banked
  9501  01488E  90D8               	bcf	status,0,c
  9502  014890  377A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9503  014892  377B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9504  014894  377C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9505  014896  377D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9506  014898  0100               	movlb	0	; () banked
  9507  01489A  077F               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9508  01489C                     l7632:
  9509                           
  9510                           ; BSR set to: 0
  9511  01489C  0100               	movlb	0	; () banked
  9512  01489E  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9513  0148A0  0100               	movlb	0	; () banked
  9514  0148A2  A4D8               	btfss	status,2,c
  9515  0148A4  D7F3               	goto	l7630
  9516  0148A6                     l1213:
  9517                           
  9518                           ; BSR set to: 0
  9519  0148A6  C07A  F06F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9520  0148AA  C07B  F070         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9521  0148AE  C07C  F071         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9522  0148B2  C07D  F072         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9523                           
  9524                           ; BSR set to: 0
  9525  0148B6  0012               	return		;funcret
  9526  0148B8                     __end_of__tdiv_to_l_:
  9527                           	opt stack 0
  9528                           tblptru	equ	0xFF8
  9529                           tblptrh	equ	0xFF7
  9530                           tblptrl	equ	0xFF6
  9531                           tablat	equ	0xFF5
  9532                           prodh	equ	0xFF4
  9533                           prodl	equ	0xFF3
  9534                           intcon	equ	0xFF2
  9535                           postinc0	equ	0xFEE
  9536                           wreg	equ	0xFE8
  9537                           indf2	equ	0xFDF
  9538                           postinc2	equ	0xFDE
  9539                           fsr2h	equ	0xFDA
  9540                           fsr2l	equ	0xFD9
  9541                           status	equ	0xFD8
  9542                           
  9543 ;; *************** function __div_to_l_ *****************
  9544 ;; Defined at:
  9545 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  f1              4   15[BANK0 ] unsigned long 
  9548 ;;  f2              4   19[BANK0 ] unsigned long 
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;  quot            4   23[BANK0 ] unsigned long 
  9551 ;;  exp1            1   28[BANK0 ] unsigned char 
  9552 ;;  cntr            1   27[BANK0 ] unsigned char 
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  4   15[BANK0 ] unsigned long 
  9555 ;; Registers used:
  9556 ;;		wreg, status,2, status,0
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:       14 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    3
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_sprintf
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text16
  9577  014A48                     __ptext16:
  9578                           	opt stack 0
  9579  014A48                     __div_to_l_:
  9580                           	opt stack 25
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;incstack = 0
  9584  014A48  0100               	movlb	0	; () banked
  9585  014A4A  3571               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9586  014A4C  3572               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9587  014A4E  0100               	movlb	0	; () banked
  9588  014A50  6F7C               	movwf	__div_to_l_@exp1& (0+255),b
  9589  014A52  0100               	movlb	0	; () banked
  9590  014A54  517C               	movf	__div_to_l_@exp1& (0+255),w,b
  9591  014A56  A4D8               	btfss	status,2,c
  9592  014A58  D00A               	goto	l7640
  9593                           
  9594                           ; BSR set to: 0
  9595  014A5A  0E00               	movlw	0
  9596  014A5C  0100               	movlb	0	; () banked
  9597  014A5E  6F6F               	movwf	?__div_to_l_& (0+255),b
  9598  014A60  0E00               	movlw	0
  9599  014A62  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
  9600  014A64  0E00               	movlw	0
  9601  014A66  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
  9602  014A68  0E00               	movlw	0
  9603  014A6A  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
  9604                           
  9605                           ; BSR set to: 0
  9606  014A6C  0012               	return	
  9607  014A6E                     l7640:
  9608                           
  9609                           ; BSR set to: 0
  9610  014A6E  0100               	movlb	0	; () banked
  9611  014A70  3575               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9612  014A72  3576               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9613  014A74  0100               	movlb	0	; () banked
  9614  014A76  6F7B               	movwf	__div_to_l_@cntr& (0+255),b
  9615  014A78  0100               	movlb	0	; () banked
  9616  014A7A  517B               	movf	__div_to_l_@cntr& (0+255),w,b
  9617  014A7C  A4D8               	btfss	status,2,c
  9618  014A7E  D00A               	goto	l7646
  9619                           
  9620                           ; BSR set to: 0
  9621  014A80  0E00               	movlw	0
  9622  014A82  0100               	movlb	0	; () banked
  9623  014A84  6F6F               	movwf	?__div_to_l_& (0+255),b
  9624  014A86  0E00               	movlw	0
  9625  014A88  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
  9626  014A8A  0E00               	movlw	0
  9627  014A8C  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
  9628  014A8E  0E00               	movlw	0
  9629  014A90  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
  9630                           
  9631                           ; BSR set to: 0
  9632  014A92  0012               	return	
  9633  014A94                     l7646:
  9634                           
  9635                           ; BSR set to: 0
  9636  014A94  0100               	movlb	0	; () banked
  9637  014A96  8F71               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9638                           
  9639                           ; BSR set to: 0
  9640  014A98  0EFF               	movlw	255
  9641  014A9A  0100               	movlb	0	; () banked
  9642  014A9C  176F               	andwf	__div_to_l_@f1& (0+255),f,b
  9643  014A9E  0EFF               	movlw	255
  9644  014AA0  1770               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9645  014AA2  0EFF               	movlw	255
  9646  014AA4  1771               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9647  014AA6  0E00               	movlw	0
  9648  014AA8  1772               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9649                           
  9650                           ; BSR set to: 0
  9651  014AAA  0100               	movlb	0	; () banked
  9652  014AAC  8F75               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9653  014AAE  0EFF               	movlw	255
  9654  014AB0  0100               	movlb	0	; () banked
  9655  014AB2  1773               	andwf	__div_to_l_@f2& (0+255),f,b
  9656  014AB4  0EFF               	movlw	255
  9657  014AB6  1774               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9658  014AB8  0EFF               	movlw	255
  9659  014ABA  1775               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9660  014ABC  0E00               	movlw	0
  9661  014ABE  1776               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9662                           
  9663                           ; BSR set to: 0
  9664  014AC0  0E00               	movlw	0
  9665  014AC2  0100               	movlb	0	; () banked
  9666  014AC4  6F77               	movwf	__div_to_l_@quot& (0+255),b
  9667  014AC6  0E00               	movlw	0
  9668  014AC8  6F78               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9669  014ACA  0E00               	movlw	0
  9670  014ACC  6F79               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9671  014ACE  0E00               	movlw	0
  9672  014AD0  6F7A               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9673                           
  9674                           ; BSR set to: 0
  9675  014AD2  0E7F               	movlw	127
  9676  014AD4  0100               	movlb	0	; () banked
  9677  014AD6  5F7C               	subwf	__div_to_l_@exp1& (0+255),f,b
  9678                           
  9679                           ; BSR set to: 0
  9680  014AD8  0100               	movlb	0	; () banked
  9681  014ADA  517B               	movf	__div_to_l_@cntr& (0+255),w,b
  9682  014ADC  0FA0               	addlw	160
  9683  014ADE  0100               	movlb	0	; () banked
  9684  014AE0  5F7C               	subwf	__div_to_l_@exp1& (0+255),f,b
  9685                           
  9686                           ; BSR set to: 0
  9687  014AE2  0E20               	movlw	32
  9688  014AE4  0100               	movlb	0	; () banked
  9689  014AE6  6F7B               	movwf	__div_to_l_@cntr& (0+255),b
  9690  014AE8                     l7660:
  9691                           
  9692                           ; BSR set to: 0
  9693  014AE8  0100               	movlb	0	; () banked
  9694  014AEA  90D8               	bcf	status,0,c
  9695  014AEC  3777               	rlcf	__div_to_l_@quot& (0+255),f,b
  9696  014AEE  3778               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9697  014AF0  3779               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9698  014AF2  377A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9699                           
  9700                           ; BSR set to: 0
  9701  014AF4  0100               	movlb	0	; () banked
  9702  014AF6  5173               	movf	__div_to_l_@f2& (0+255),w,b
  9703  014AF8  0100               	movlb	0	; () banked
  9704  014AFA  5D6F               	subwf	__div_to_l_@f1& (0+255),w,b
  9705  014AFC  0100               	movlb	0	; () banked
  9706  014AFE  5174               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9707  014B00  0100               	movlb	0	; () banked
  9708  014B02  5970               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9709  014B04  0100               	movlb	0	; () banked
  9710  014B06  5175               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9711  014B08  0100               	movlb	0	; () banked
  9712  014B0A  5971               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9713  014B0C  0100               	movlb	0	; () banked
  9714  014B0E  5176               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9715  014B10  0100               	movlb	0	; () banked
  9716  014B12  5972               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9717  014B14  A0D8               	btfss	status,0,c
  9718  014B16  D012               	goto	l7668
  9719                           
  9720                           ; BSR set to: 0
  9721  014B18  0100               	movlb	0	; () banked
  9722  014B1A  5173               	movf	__div_to_l_@f2& (0+255),w,b
  9723  014B1C  0100               	movlb	0	; () banked
  9724  014B1E  5F6F               	subwf	__div_to_l_@f1& (0+255),f,b
  9725  014B20  0100               	movlb	0	; () banked
  9726  014B22  5174               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9727  014B24  0100               	movlb	0	; () banked
  9728  014B26  5B70               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9729  014B28  0100               	movlb	0	; () banked
  9730  014B2A  5175               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9731  014B2C  0100               	movlb	0	; () banked
  9732  014B2E  5B71               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9733  014B30  0100               	movlb	0	; () banked
  9734  014B32  5176               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9735  014B34  0100               	movlb	0	; () banked
  9736  014B36  5B72               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9737                           
  9738                           ; BSR set to: 0
  9739  014B38  0100               	movlb	0	; () banked
  9740  014B3A  8177               	bsf	__div_to_l_@quot& (0+255),0,b
  9741  014B3C                     l7668:
  9742                           
  9743                           ; BSR set to: 0
  9744  014B3C  0100               	movlb	0	; () banked
  9745  014B3E  90D8               	bcf	status,0,c
  9746  014B40  376F               	rlcf	__div_to_l_@f1& (0+255),f,b
  9747  014B42  3770               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9748  014B44  3771               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9749  014B46  3772               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9750                           
  9751                           ; BSR set to: 0
  9752  014B48  0100               	movlb	0	; () banked
  9753  014B4A  2F7B               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9754  014B4C  D7CD               	goto	l7660
  9755                           
  9756                           ; BSR set to: 0
  9757                           
  9758                           ; BSR set to: 0
  9759  014B4E  0100               	movlb	0	; () banked
  9760  014B50  AF7C               	btfss	__div_to_l_@exp1& (0+255),7,b
  9761  014B52  D01A               	goto	l7684
  9762                           
  9763                           ; BSR set to: 0
  9764  014B54  0100               	movlb	0	; () banked
  9765  014B56  517C               	movf	__div_to_l_@exp1& (0+255),w,b
  9766  014B58  0A80               	xorlw	128
  9767  014B5A  0F9F               	addlw	159
  9768  014B5C  B0D8               	btfsc	status,0,c
  9769  014B5E  D00A               	goto	l7680
  9770                           
  9771                           ; BSR set to: 0
  9772  014B60  0E00               	movlw	0
  9773  014B62  0100               	movlb	0	; () banked
  9774  014B64  6F6F               	movwf	?__div_to_l_& (0+255),b
  9775  014B66  0E00               	movlw	0
  9776  014B68  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
  9777  014B6A  0E00               	movlw	0
  9778  014B6C  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
  9779  014B6E  0E00               	movlw	0
  9780  014B70  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
  9781                           
  9782                           ; BSR set to: 0
  9783  014B72  0012               	return	
  9784  014B74                     l7680:
  9785                           
  9786                           ; BSR set to: 0
  9787  014B74  0100               	movlb	0	; () banked
  9788  014B76  90D8               	bcf	status,0,c
  9789  014B78  337A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9790  014B7A  3379               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9791  014B7C  3378               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9792  014B7E  3377               	rrcf	__div_to_l_@quot& (0+255),f,b
  9793                           
  9794                           ; BSR set to: 0
  9795  014B80  0100               	movlb	0	; () banked
  9796  014B82  3F7C               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9797  014B84  D7F7               	goto	l7680
  9798                           
  9799                           ; BSR set to: 0
  9800  014B86  D01B               	goto	l1109
  9801  014B88                     l7684:
  9802                           
  9803                           ; BSR set to: 0
  9804  014B88  0E1F               	movlw	31
  9805  014B8A  0100               	movlb	0	; () banked
  9806  014B8C  657C               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9807  014B8E  D012               	goto	l7692
  9808                           
  9809                           ; BSR set to: 0
  9810  014B90  0E00               	movlw	0
  9811  014B92  0100               	movlb	0	; () banked
  9812  014B94  6F6F               	movwf	?__div_to_l_& (0+255),b
  9813  014B96  0E00               	movlw	0
  9814  014B98  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
  9815  014B9A  0E00               	movlw	0
  9816  014B9C  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
  9817  014B9E  0E00               	movlw	0
  9818  014BA0  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
  9819                           
  9820                           ; BSR set to: 0
  9821  014BA2  0012               	return	
  9822  014BA4                     l7690:
  9823                           
  9824                           ; BSR set to: 0
  9825  014BA4  0100               	movlb	0	; () banked
  9826  014BA6  90D8               	bcf	status,0,c
  9827  014BA8  3777               	rlcf	__div_to_l_@quot& (0+255),f,b
  9828  014BAA  3778               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9829  014BAC  3779               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9830  014BAE  377A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9831  014BB0  0100               	movlb	0	; () banked
  9832  014BB2  077C               	decf	__div_to_l_@exp1& (0+255),f,b
  9833  014BB4                     l7692:
  9834                           
  9835                           ; BSR set to: 0
  9836  014BB4  0100               	movlb	0	; () banked
  9837  014BB6  517C               	movf	__div_to_l_@exp1& (0+255),w,b
  9838  014BB8  0100               	movlb	0	; () banked
  9839  014BBA  A4D8               	btfss	status,2,c
  9840  014BBC  D7F3               	goto	l7690
  9841  014BBE                     l1109:
  9842                           
  9843                           ; BSR set to: 0
  9844  014BBE  C077  F06F         	movff	__div_to_l_@quot,?__div_to_l_
  9845  014BC2  C078  F070         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9846  014BC6  C079  F071         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9847  014BCA  C07A  F072         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9848                           
  9849                           ; BSR set to: 0
  9850  014BCE  0012               	return		;funcret
  9851  014BD0                     __end_of__div_to_l_:
  9852                           	opt stack 0
  9853                           tblptru	equ	0xFF8
  9854                           tblptrh	equ	0xFF7
  9855                           tblptrl	equ	0xFF6
  9856                           tablat	equ	0xFF5
  9857                           prodh	equ	0xFF4
  9858                           prodl	equ	0xFF3
  9859                           intcon	equ	0xFF2
  9860                           postinc0	equ	0xFEE
  9861                           wreg	equ	0xFE8
  9862                           indf2	equ	0xFDF
  9863                           postinc2	equ	0xFDE
  9864                           fsr2h	equ	0xFDA
  9865                           fsr2l	equ	0xFD9
  9866                           status	equ	0xFD8
  9867                           
  9868 ;; *************** function ___llmod *****************
  9869 ;; Defined at:
  9870 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;  dividend        4   15[BANK0 ] unsigned long 
  9873 ;;  divisor         4   19[BANK0 ] unsigned long 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;  counter         1   23[BANK0 ] unsigned char 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  4   15[BANK0 ] unsigned long 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9885 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;Total ram usage:        9 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    3
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_sprintf
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	text17
  9900  015582                     __ptext17:
  9901                           	opt stack 0
  9902  015582                     ___llmod:
  9903                           	opt stack 25
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;incstack = 0
  9907  015582  0100               	movlb	0	; () banked
  9908  015584  5173               	movf	___llmod@divisor& (0+255),w,b
  9909  015586  0100               	movlb	0	; () banked
  9910  015588  1174               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9911  01558A  0100               	movlb	0	; () banked
  9912  01558C  1175               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9913  01558E  0100               	movlb	0	; () banked
  9914  015590  1176               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9915  015592  B4D8               	btfsc	status,2,c
  9916  015594  D03A               	goto	l1312
  9917                           
  9918                           ; BSR set to: 0
  9919  015596  0E01               	movlw	1
  9920  015598  0100               	movlb	0	; () banked
  9921  01559A  6F77               	movwf	___llmod@counter& (0+255),b
  9922  01559C  D008               	goto	l7802
  9923  01559E                     l7800:
  9924                           
  9925                           ; BSR set to: 0
  9926  01559E  0100               	movlb	0	; () banked
  9927  0155A0  90D8               	bcf	status,0,c
  9928  0155A2  3773               	rlcf	___llmod@divisor& (0+255),f,b
  9929  0155A4  3774               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9930  0155A6  3775               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9931  0155A8  3776               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9932  0155AA  0100               	movlb	0	; () banked
  9933  0155AC  2B77               	incf	___llmod@counter& (0+255),f,b
  9934  0155AE                     l7802:
  9935                           
  9936                           ; BSR set to: 0
  9937  0155AE  0100               	movlb	0	; () banked
  9938  0155B0  AF76               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9939  0155B2  D7F5               	goto	l7800
  9940  0155B4                     l7804:
  9941                           
  9942                           ; BSR set to: 0
  9943  0155B4  0100               	movlb	0	; () banked
  9944  0155B6  5173               	movf	___llmod@divisor& (0+255),w,b
  9945  0155B8  0100               	movlb	0	; () banked
  9946  0155BA  5D6F               	subwf	___llmod@dividend& (0+255),w,b
  9947  0155BC  0100               	movlb	0	; () banked
  9948  0155BE  5174               	movf	(___llmod@divisor+1)& (0+255),w,b
  9949  0155C0  0100               	movlb	0	; () banked
  9950  0155C2  5970               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9951  0155C4  0100               	movlb	0	; () banked
  9952  0155C6  5175               	movf	(___llmod@divisor+2)& (0+255),w,b
  9953  0155C8  0100               	movlb	0	; () banked
  9954  0155CA  5971               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9955  0155CC  0100               	movlb	0	; () banked
  9956  0155CE  5176               	movf	(___llmod@divisor+3)& (0+255),w,b
  9957  0155D0  0100               	movlb	0	; () banked
  9958  0155D2  5972               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9959  0155D4  A0D8               	btfss	status,0,c
  9960  0155D6  D010               	goto	l7808
  9961                           
  9962                           ; BSR set to: 0
  9963  0155D8  0100               	movlb	0	; () banked
  9964  0155DA  5173               	movf	___llmod@divisor& (0+255),w,b
  9965  0155DC  0100               	movlb	0	; () banked
  9966  0155DE  5F6F               	subwf	___llmod@dividend& (0+255),f,b
  9967  0155E0  0100               	movlb	0	; () banked
  9968  0155E2  5174               	movf	(___llmod@divisor+1)& (0+255),w,b
  9969  0155E4  0100               	movlb	0	; () banked
  9970  0155E6  5B70               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9971  0155E8  0100               	movlb	0	; () banked
  9972  0155EA  5175               	movf	(___llmod@divisor+2)& (0+255),w,b
  9973  0155EC  0100               	movlb	0	; () banked
  9974  0155EE  5B71               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9975  0155F0  0100               	movlb	0	; () banked
  9976  0155F2  5176               	movf	(___llmod@divisor+3)& (0+255),w,b
  9977  0155F4  0100               	movlb	0	; () banked
  9978  0155F6  5B72               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9979  0155F8                     l7808:
  9980                           
  9981                           ; BSR set to: 0
  9982  0155F8  0100               	movlb	0	; () banked
  9983  0155FA  90D8               	bcf	status,0,c
  9984  0155FC  3376               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9985  0155FE  3375               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9986  015600  3374               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9987  015602  3373               	rrcf	___llmod@divisor& (0+255),f,b
  9988                           
  9989                           ; BSR set to: 0
  9990  015604  0100               	movlb	0	; () banked
  9991  015606  2F77               	decfsz	___llmod@counter& (0+255),f,b
  9992  015608  D7D5               	goto	l7804
  9993  01560A                     l1312:
  9994                           
  9995                           ; BSR set to: 0
  9996  01560A  C06F  F06F         	movff	___llmod@dividend,?___llmod
  9997  01560E  C070  F070         	movff	___llmod@dividend+1,?___llmod+1
  9998  015612  C071  F071         	movff	___llmod@dividend+2,?___llmod+2
  9999  015616  C072  F072         	movff	___llmod@dividend+3,?___llmod+3
 10000                           
 10001                           ; BSR set to: 0
 10002  01561A  0012               	return		;funcret
 10003  01561C                     __end_of___llmod:
 10004                           	opt stack 0
 10005                           tblptru	equ	0xFF8
 10006                           tblptrh	equ	0xFF7
 10007                           tblptrl	equ	0xFF6
 10008                           tablat	equ	0xFF5
 10009                           prodh	equ	0xFF4
 10010                           prodl	equ	0xFF3
 10011                           intcon	equ	0xFF2
 10012                           postinc0	equ	0xFEE
 10013                           wreg	equ	0xFE8
 10014                           indf2	equ	0xFDF
 10015                           postinc2	equ	0xFDE
 10016                           fsr2h	equ	0xFDA
 10017                           fsr2l	equ	0xFD9
 10018                           status	equ	0xFD8
 10019                           
 10020 ;; *************** function ___lldiv *****************
 10021 ;; Defined at:
 10022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  dividend        4   15[BANK0 ] unsigned long 
 10025 ;;  divisor         4   19[BANK0 ] unsigned long 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  quotient        4   23[BANK0 ] unsigned long 
 10028 ;;  counter         1   27[BANK0 ] unsigned char 
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  4   15[BANK0 ] unsigned long 
 10031 ;; Registers used:
 10032 ;;		wreg, status,2, status,0
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10038 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;Total ram usage:       13 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:    3
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_sprintf
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text18
 10053  015424                     __ptext18:
 10054                           	opt stack 0
 10055  015424                     ___lldiv:
 10056                           	opt stack 25
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;incstack = 0
 10060  015424  0E00               	movlw	0
 10061  015426  0100               	movlb	0	; () banked
 10062  015428  6F77               	movwf	___lldiv@quotient& (0+255),b
 10063  01542A  0E00               	movlw	0
 10064  01542C  6F78               	movwf	(___lldiv@quotient+1)& (0+255),b
 10065  01542E  0E00               	movlw	0
 10066  015430  6F79               	movwf	(___lldiv@quotient+2)& (0+255),b
 10067  015432  0E00               	movlw	0
 10068  015434  6F7A               	movwf	(___lldiv@quotient+3)& (0+255),b
 10069                           
 10070                           ; BSR set to: 0
 10071  015436  0100               	movlb	0	; () banked
 10072  015438  5173               	movf	___lldiv@divisor& (0+255),w,b
 10073  01543A  0100               	movlb	0	; () banked
 10074  01543C  1174               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10075  01543E  0100               	movlb	0	; () banked
 10076  015440  1175               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10077  015442  0100               	movlb	0	; () banked
 10078  015444  1176               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10079  015446  B4D8               	btfsc	status,2,c
 10080  015448  D042               	goto	l1302
 10081                           
 10082                           ; BSR set to: 0
 10083  01544A  0E01               	movlw	1
 10084  01544C  0100               	movlb	0	; () banked
 10085  01544E  6F7B               	movwf	___lldiv@counter& (0+255),b
 10086  015450  D008               	goto	l7782
 10087  015452                     l7780:
 10088                           
 10089                           ; BSR set to: 0
 10090  015452  0100               	movlb	0	; () banked
 10091  015454  90D8               	bcf	status,0,c
 10092  015456  3773               	rlcf	___lldiv@divisor& (0+255),f,b
 10093  015458  3774               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10094  01545A  3775               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10095  01545C  3776               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10096  01545E  0100               	movlb	0	; () banked
 10097  015460  2B7B               	incf	___lldiv@counter& (0+255),f,b
 10098  015462                     l7782:
 10099                           
 10100                           ; BSR set to: 0
 10101  015462  0100               	movlb	0	; () banked
 10102  015464  AF76               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10103  015466  D7F5               	goto	l7780
 10104  015468                     l7784:
 10105                           
 10106                           ; BSR set to: 0
 10107  015468  0100               	movlb	0	; () banked
 10108  01546A  90D8               	bcf	status,0,c
 10109  01546C  3777               	rlcf	___lldiv@quotient& (0+255),f,b
 10110  01546E  3778               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10111  015470  3779               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10112  015472  377A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10113                           
 10114                           ; BSR set to: 0
 10115  015474  0100               	movlb	0	; () banked
 10116  015476  5173               	movf	___lldiv@divisor& (0+255),w,b
 10117  015478  0100               	movlb	0	; () banked
 10118  01547A  5D6F               	subwf	___lldiv@dividend& (0+255),w,b
 10119  01547C  0100               	movlb	0	; () banked
 10120  01547E  5174               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10121  015480  0100               	movlb	0	; () banked
 10122  015482  5970               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10123  015484  0100               	movlb	0	; () banked
 10124  015486  5175               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10125  015488  0100               	movlb	0	; () banked
 10126  01548A  5971               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10127  01548C  0100               	movlb	0	; () banked
 10128  01548E  5176               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10129  015490  0100               	movlb	0	; () banked
 10130  015492  5972               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10131  015494  A0D8               	btfss	status,0,c
 10132  015496  D012               	goto	l7792
 10133                           
 10134                           ; BSR set to: 0
 10135  015498  0100               	movlb	0	; () banked
 10136  01549A  5173               	movf	___lldiv@divisor& (0+255),w,b
 10137  01549C  0100               	movlb	0	; () banked
 10138  01549E  5F6F               	subwf	___lldiv@dividend& (0+255),f,b
 10139  0154A0  0100               	movlb	0	; () banked
 10140  0154A2  5174               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10141  0154A4  0100               	movlb	0	; () banked
 10142  0154A6  5B70               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10143  0154A8  0100               	movlb	0	; () banked
 10144  0154AA  5175               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10145  0154AC  0100               	movlb	0	; () banked
 10146  0154AE  5B71               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10147  0154B0  0100               	movlb	0	; () banked
 10148  0154B2  5176               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10149  0154B4  0100               	movlb	0	; () banked
 10150  0154B6  5B72               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10151                           
 10152                           ; BSR set to: 0
 10153  0154B8  0100               	movlb	0	; () banked
 10154  0154BA  8177               	bsf	___lldiv@quotient& (0+255),0,b
 10155  0154BC                     l7792:
 10156                           
 10157                           ; BSR set to: 0
 10158  0154BC  0100               	movlb	0	; () banked
 10159  0154BE  90D8               	bcf	status,0,c
 10160  0154C0  3376               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10161  0154C2  3375               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10162  0154C4  3374               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10163  0154C6  3373               	rrcf	___lldiv@divisor& (0+255),f,b
 10164                           
 10165                           ; BSR set to: 0
 10166  0154C8  0100               	movlb	0	; () banked
 10167  0154CA  2F7B               	decfsz	___lldiv@counter& (0+255),f,b
 10168  0154CC  D7CD               	goto	l7784
 10169  0154CE                     l1302:
 10170                           
 10171                           ; BSR set to: 0
 10172  0154CE  C077  F06F         	movff	___lldiv@quotient,?___lldiv
 10173  0154D2  C078  F070         	movff	___lldiv@quotient+1,?___lldiv+1
 10174  0154D6  C079  F071         	movff	___lldiv@quotient+2,?___lldiv+2
 10175  0154DA  C07A  F072         	movff	___lldiv@quotient+3,?___lldiv+3
 10176                           
 10177                           ; BSR set to: 0
 10178  0154DE  0012               	return		;funcret
 10179  0154E0                     __end_of___lldiv:
 10180                           	opt stack 0
 10181                           tblptru	equ	0xFF8
 10182                           tblptrh	equ	0xFF7
 10183                           tblptrl	equ	0xFF6
 10184                           tablat	equ	0xFF5
 10185                           prodh	equ	0xFF4
 10186                           prodl	equ	0xFF3
 10187                           intcon	equ	0xFF2
 10188                           postinc0	equ	0xFEE
 10189                           wreg	equ	0xFE8
 10190                           indf2	equ	0xFDF
 10191                           postinc2	equ	0xFDE
 10192                           fsr2h	equ	0xFDA
 10193                           fsr2l	equ	0xFD9
 10194                           status	equ	0xFD8
 10195                           
 10196 ;; *************** function ___fltol *****************
 10197 ;; Defined at:
 10198 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  f1              4   63[BANK0 ] unsigned long 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  exp1            1   72[BANK0 ] unsigned char 
 10203 ;;  sign1           1   71[BANK0 ] unsigned char 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  4   63[BANK0 ] long 
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, status,0
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;Total ram usage:       10 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:    3
 10220 ;; This function calls:
 10221 ;;		Nothing
 10222 ;; This function is called by:
 10223 ;;		_main
 10224 ;;		_sprintf
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text19
 10229  014FB8                     __ptext19:
 10230                           	opt stack 0
 10231  014FB8                     ___fltol:
 10232                           	opt stack 27
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;incstack = 0
 10236  014FB8  0100               	movlb	0	; () banked
 10237  014FBA  35A1               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10238  014FBC  35A2               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10239  014FBE  0100               	movlb	0	; () banked
 10240  014FC0  6FA8               	movwf	___fltol@exp1& (0+255),b
 10241  014FC2  0100               	movlb	0	; () banked
 10242  014FC4  51A8               	movf	___fltol@exp1& (0+255),w,b
 10243  014FC6  A4D8               	btfss	status,2,c
 10244  014FC8  D00A               	goto	l7736
 10245                           
 10246                           ; BSR set to: 0
 10247  014FCA  0E00               	movlw	0
 10248  014FCC  0100               	movlb	0	; () banked
 10249  014FCE  6F9F               	movwf	?___fltol& (0+255),b
 10250  014FD0  0E00               	movlw	0
 10251  014FD2  6FA0               	movwf	(?___fltol+1)& (0+255),b
 10252  014FD4  0E00               	movlw	0
 10253  014FD6  6FA1               	movwf	(?___fltol+2)& (0+255),b
 10254  014FD8  0E00               	movlw	0
 10255  014FDA  6FA2               	movwf	(?___fltol+3)& (0+255),b
 10256                           
 10257                           ; BSR set to: 0
 10258  014FDC  0012               	return	
 10259  014FDE                     l7736:
 10260                           
 10261                           ; BSR set to: 0
 10262  014FDE  C09F  F0A3         	movff	___fltol@f1,??___fltol
 10263  014FE2  C0A0  F0A4         	movff	___fltol@f1+1,??___fltol+1
 10264  014FE6  C0A1  F0A5         	movff	___fltol@f1+2,??___fltol+2
 10265  014FEA  C0A2  F0A6         	movff	___fltol@f1+3,??___fltol+3
 10266  014FEE  0E20               	movlw	32
 10267  014FF0  D006               	goto	u10030
 10268  014FF2                     u10035:
 10269  014FF2  0100               	movlb	0	; () banked
 10270  014FF4  90D8               	bcf	status,0,c
 10271  014FF6  33A6               	rrcf	(??___fltol+3)& (0+255),f,b
 10272  014FF8  33A5               	rrcf	(??___fltol+2)& (0+255),f,b
 10273  014FFA  33A4               	rrcf	(??___fltol+1)& (0+255),f,b
 10274  014FFC  33A3               	rrcf	??___fltol& (0+255),f,b
 10275  014FFE                     u10030:
 10276  014FFE  2EE8               	decfsz	wreg,f,c
 10277  015000  D7F8               	goto	u10035
 10278  015002  0100               	movlb	0	; () banked
 10279  015004  51A3               	movf	??___fltol& (0+255),w,b
 10280  015006  0100               	movlb	0	; () banked
 10281  015008  6FA7               	movwf	___fltol@sign1& (0+255),b
 10282                           
 10283                           ; BSR set to: 0
 10284  01500A  0100               	movlb	0	; () banked
 10285  01500C  8FA1               	bsf	(___fltol@f1+2)& (0+255),7,b
 10286                           
 10287                           ; BSR set to: 0
 10288  01500E  0EFF               	movlw	255
 10289  015010  0100               	movlb	0	; () banked
 10290  015012  179F               	andwf	___fltol@f1& (0+255),f,b
 10291  015014  0EFF               	movlw	255
 10292  015016  17A0               	andwf	(___fltol@f1+1)& (0+255),f,b
 10293  015018  0EFF               	movlw	255
 10294  01501A  17A1               	andwf	(___fltol@f1+2)& (0+255),f,b
 10295  01501C  0E00               	movlw	0
 10296  01501E  17A2               	andwf	(___fltol@f1+3)& (0+255),f,b
 10297                           
 10298                           ; BSR set to: 0
 10299  015020  0E96               	movlw	150
 10300  015022  0100               	movlb	0	; () banked
 10301  015024  5FA8               	subwf	___fltol@exp1& (0+255),f,b
 10302                           
 10303                           ; BSR set to: 0
 10304  015026  0100               	movlb	0	; () banked
 10305  015028  AFA8               	btfss	___fltol@exp1& (0+255),7,b
 10306  01502A  D01A               	goto	l7756
 10307                           
 10308                           ; BSR set to: 0
 10309  01502C  0100               	movlb	0	; () banked
 10310  01502E  51A8               	movf	___fltol@exp1& (0+255),w,b
 10311  015030  0A80               	xorlw	128
 10312  015032  0F97               	addlw	151
 10313  015034  B0D8               	btfsc	status,0,c
 10314  015036  D00A               	goto	l7752
 10315                           
 10316                           ; BSR set to: 0
 10317  015038  0E00               	movlw	0
 10318  01503A  0100               	movlb	0	; () banked
 10319  01503C  6F9F               	movwf	?___fltol& (0+255),b
 10320  01503E  0E00               	movlw	0
 10321  015040  6FA0               	movwf	(?___fltol+1)& (0+255),b
 10322  015042  0E00               	movlw	0
 10323  015044  6FA1               	movwf	(?___fltol+2)& (0+255),b
 10324  015046  0E00               	movlw	0
 10325  015048  6FA2               	movwf	(?___fltol+3)& (0+255),b
 10326                           
 10327                           ; BSR set to: 0
 10328  01504A  0012               	return	
 10329  01504C                     l7752:
 10330                           
 10331                           ; BSR set to: 0
 10332  01504C  0100               	movlb	0	; () banked
 10333  01504E  90D8               	bcf	status,0,c
 10334  015050  33A2               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10335  015052  33A1               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10336  015054  33A0               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10337  015056  339F               	rrcf	___fltol@f1& (0+255),f,b
 10338                           
 10339                           ; BSR set to: 0
 10340  015058  0100               	movlb	0	; () banked
 10341  01505A  3FA8               	incfsz	___fltol@exp1& (0+255),f,b
 10342  01505C  D7F7               	goto	l7752
 10343                           
 10344                           ; BSR set to: 0
 10345  01505E  D01B               	goto	l7766
 10346  015060                     l7756:
 10347                           
 10348                           ; BSR set to: 0
 10349  015060  0E1F               	movlw	31
 10350  015062  0100               	movlb	0	; () banked
 10351  015064  65A8               	cpfsgt	___fltol@exp1& (0+255),b
 10352  015066  D012               	goto	l7764
 10353                           
 10354                           ; BSR set to: 0
 10355  015068  0E00               	movlw	0
 10356  01506A  0100               	movlb	0	; () banked
 10357  01506C  6F9F               	movwf	?___fltol& (0+255),b
 10358  01506E  0E00               	movlw	0
 10359  015070  6FA0               	movwf	(?___fltol+1)& (0+255),b
 10360  015072  0E00               	movlw	0
 10361  015074  6FA1               	movwf	(?___fltol+2)& (0+255),b
 10362  015076  0E00               	movlw	0
 10363  015078  6FA2               	movwf	(?___fltol+3)& (0+255),b
 10364                           
 10365                           ; BSR set to: 0
 10366  01507A  0012               	return	
 10367  01507C                     l7762:
 10368                           
 10369                           ; BSR set to: 0
 10370  01507C  0100               	movlb	0	; () banked
 10371  01507E  90D8               	bcf	status,0,c
 10372  015080  379F               	rlcf	___fltol@f1& (0+255),f,b
 10373  015082  37A0               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10374  015084  37A1               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10375  015086  37A2               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10376  015088  0100               	movlb	0	; () banked
 10377  01508A  07A8               	decf	___fltol@exp1& (0+255),f,b
 10378  01508C                     l7764:
 10379                           
 10380                           ; BSR set to: 0
 10381  01508C  0100               	movlb	0	; () banked
 10382  01508E  51A8               	movf	___fltol@exp1& (0+255),w,b
 10383  015090  0100               	movlb	0	; () banked
 10384  015092  A4D8               	btfss	status,2,c
 10385  015094  D7F3               	goto	l7762
 10386  015096                     l7766:
 10387                           
 10388                           ; BSR set to: 0
 10389  015096  0100               	movlb	0	; () banked
 10390  015098  51A7               	movf	___fltol@sign1& (0+255),w,b
 10391  01509A  0100               	movlb	0	; () banked
 10392  01509C  B4D8               	btfsc	status,2,c
 10393  01509E  D009               	goto	l7770
 10394                           
 10395                           ; BSR set to: 0
 10396  0150A0  0100               	movlb	0	; () banked
 10397  0150A2  1FA2               	comf	(___fltol@f1+3)& (0+255),f,b
 10398  0150A4  1FA1               	comf	(___fltol@f1+2)& (0+255),f,b
 10399  0150A6  1FA0               	comf	(___fltol@f1+1)& (0+255),f,b
 10400  0150A8  6D9F               	negf	___fltol@f1& (0+255),b
 10401  0150AA  0E00               	movlw	0
 10402  0150AC  23A0               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10403  0150AE  23A1               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10404  0150B0  23A2               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10405  0150B2                     l7770:
 10406                           
 10407                           ; BSR set to: 0
 10408  0150B2  C09F  F09F         	movff	___fltol@f1,?___fltol
 10409  0150B6  C0A0  F0A0         	movff	___fltol@f1+1,?___fltol+1
 10410  0150BA  C0A1  F0A1         	movff	___fltol@f1+2,?___fltol+2
 10411  0150BE  C0A2  F0A2         	movff	___fltol@f1+3,?___fltol+3
 10412  0150C2  0012               	return	
 10413  0150C4                     __end_of___fltol:
 10414                           	opt stack 0
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           prodh	equ	0xFF4
 10420                           prodl	equ	0xFF3
 10421                           intcon	equ	0xFF2
 10422                           postinc0	equ	0xFEE
 10423                           wreg	equ	0xFE8
 10424                           indf2	equ	0xFDF
 10425                           postinc2	equ	0xFDE
 10426                           fsr2h	equ	0xFDA
 10427                           fsr2l	equ	0xFD9
 10428                           status	equ	0xFD8
 10429                           
 10430 ;; *************** function ___flsub *****************
 10431 ;; Defined at:
 10432 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  b               4   87[BANK0 ] long 
 10435 ;;  a               4   91[BANK0 ] long 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  4   87[BANK0 ] long 
 10440 ;; Registers used:
 10441 ;;		wreg, status,2, status,0, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10447 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;Total ram usage:        8 bytes
 10452 ;; Hardware stack levels used:    1
 10453 ;; Hardware stack levels required when called:    4
 10454 ;; This function calls:
 10455 ;;		___fladd
 10456 ;; This function is called by:
 10457 ;;		_sprintf
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           	psect	text20
 10462  015788                     __ptext20:
 10463                           	opt stack 0
 10464  015788                     ___flsub:
 10465                           	opt stack 24
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;incstack = 0
 10469  015788  0E00               	movlw	0
 10470  01578A  0100               	movlb	0	; () banked
 10471  01578C  1BBB               	xorwf	___flsub@a& (0+255),f,b
 10472  01578E  0E00               	movlw	0
 10473  015790  1BBC               	xorwf	(___flsub@a+1)& (0+255),f,b
 10474  015792  0E00               	movlw	0
 10475  015794  1BBD               	xorwf	(___flsub@a+2)& (0+255),f,b
 10476  015796  0E80               	movlw	128
 10477  015798  1BBE               	xorwf	(___flsub@a+3)& (0+255),f,b
 10478                           
 10479                           ; BSR set to: 0
 10480  01579A  C0B7  F0A3         	movff	___flsub@b,___fladd@b
 10481  01579E  C0B8  F0A4         	movff	___flsub@b+1,___fladd@b+1
 10482  0157A2  C0B9  F0A5         	movff	___flsub@b+2,___fladd@b+2
 10483  0157A6  C0BA  F0A6         	movff	___flsub@b+3,___fladd@b+3
 10484  0157AA  C0BB  F0A7         	movff	___flsub@a,___fladd@a
 10485  0157AE  C0BC  F0A8         	movff	___flsub@a+1,___fladd@a+1
 10486  0157B2  C0BD  F0A9         	movff	___flsub@a+2,___fladd@a+2
 10487  0157B6  C0BE  F0AA         	movff	___flsub@a+3,___fladd@a+3
 10488  0157BA  ECEE  F095         	call	___fladd	;wreg free
 10489  0157BE  C0A3  F0B7         	movff	?___fladd,?___flsub
 10490  0157C2  C0A4  F0B8         	movff	?___fladd+1,?___flsub+1
 10491  0157C6  C0A5  F0B9         	movff	?___fladd+2,?___flsub+2
 10492  0157CA  C0A6  F0BA         	movff	?___fladd+3,?___flsub+3
 10493  0157CE  0012               	return	
 10494  0157D0                     __end_of___flsub:
 10495                           	opt stack 0
 10496                           tblptru	equ	0xFF8
 10497                           tblptrh	equ	0xFF7
 10498                           tblptrl	equ	0xFF6
 10499                           tablat	equ	0xFF5
 10500                           prodh	equ	0xFF4
 10501                           prodl	equ	0xFF3
 10502                           intcon	equ	0xFF2
 10503                           postinc0	equ	0xFEE
 10504                           wreg	equ	0xFE8
 10505                           indf2	equ	0xFDF
 10506                           postinc2	equ	0xFDE
 10507                           fsr2h	equ	0xFDA
 10508                           fsr2l	equ	0xFD9
 10509                           status	equ	0xFD8
 10510                           
 10511 ;; *************** function ___fladd *****************
 10512 ;; Defined at:
 10513 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;  b               4   67[BANK0 ] long 
 10516 ;;  a               4   71[BANK0 ] long 
 10517 ;; Auto vars:     Size  Location     Type
 10518 ;;  grs             1   86[BANK0 ] unsigned char 
 10519 ;;  bexp            1   85[BANK0 ] unsigned char 
 10520 ;;  aexp            1   84[BANK0 ] unsigned char 
 10521 ;;  signs           1   83[BANK0 ] unsigned char 
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  4   67[BANK0 ] unsigned char 
 10524 ;; Registers used:
 10525 ;;		wreg, status,2, status,0
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10531 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;Total ram usage:       20 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    3
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_sprintf
 10542 ;;		___flsub
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text21
 10547  012BDC                     __ptext21:
 10548                           	opt stack 0
 10549  012BDC                     ___fladd:
 10550                           	opt stack 24
 10551                           
 10552                           ;incstack = 0
 10553  012BDC  0100               	movlb	0	; () banked
 10554  012BDE  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 10555  012BE0  0B80               	andlw	128
 10556  012BE2  0100               	movlb	0	; () banked
 10557  012BE4  6FB3               	movwf	___fladd@signs& (0+255),b
 10558  012BE6  0100               	movlb	0	; () banked
 10559  012BE8  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 10560  012BEA  25A6               	addwf	(___fladd@b+3)& (0+255),w,b
 10561  012BEC  0100               	movlb	0	; () banked
 10562  012BEE  6FB5               	movwf	___fladd@bexp& (0+255),b
 10563                           
 10564                           ; BSR set to: 0
 10565  012BF0  0100               	movlb	0	; () banked
 10566  012BF2  AFA5               	btfss	(___fladd@b+2)& (0+255),7,b
 10567  012BF4  D002               	goto	l7078
 10568                           
 10569                           ; BSR set to: 0
 10570  012BF6  0100               	movlb	0	; () banked
 10571  012BF8  81B5               	bsf	___fladd@bexp& (0+255),0,b
 10572  012BFA                     l7078:
 10573                           
 10574                           ; BSR set to: 0
 10575  012BFA  0100               	movlb	0	; () banked
 10576  012BFC  51B5               	movf	___fladd@bexp& (0+255),w,b
 10577  012BFE  0100               	movlb	0	; () banked
 10578  012C00  B4D8               	btfsc	status,2,c
 10579  012C02  D012               	goto	l7088
 10580                           
 10581                           ; BSR set to: 0
 10582  012C04  0100               	movlb	0	; () banked
 10583  012C06  29B5               	incf	___fladd@bexp& (0+255),w,b
 10584  012C08  A4D8               	btfss	status,2,c
 10585  012C0A  D009               	goto	l7084
 10586                           
 10587                           ; BSR set to: 0
 10588  012C0C  0E00               	movlw	0
 10589  012C0E  0100               	movlb	0	; () banked
 10590  012C10  6FA3               	movwf	___fladd@b& (0+255),b
 10591  012C12  0E00               	movlw	0
 10592  012C14  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 10593  012C16  0E00               	movlw	0
 10594  012C18  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 10595  012C1A  0E00               	movlw	0
 10596  012C1C  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 10597  012C1E                     l7084:
 10598                           
 10599                           ; BSR set to: 0
 10600  012C1E  0100               	movlb	0	; () banked
 10601  012C20  8FA5               	bsf	(___fladd@b+2)& (0+255),7,b
 10602                           
 10603                           ; BSR set to: 0
 10604  012C22  0E00               	movlw	0
 10605  012C24  0100               	movlb	0	; () banked
 10606  012C26  D008               	goto	L9
 10607  012C28                     l7088:
 10608                           
 10609                           ; BSR set to: 0
 10610  012C28  0E00               	movlw	0
 10611  012C2A  0100               	movlb	0	; () banked
 10612  012C2C  6FA3               	movwf	___fladd@b& (0+255),b
 10613  012C2E  0E00               	movlw	0
 10614  012C30  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 10615  012C32  0E00               	movlw	0
 10616  012C34  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 10617  012C36  0E00               	movlw	0
 10618  012C38                     L9:
 10619  012C38  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 10620                           
 10621                           ; BSR set to: 0
 10622                           
 10623                           ; BSR set to: 0
 10624  012C3A  0100               	movlb	0	; () banked
 10625  012C3C  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 10626  012C3E  0B80               	andlw	128
 10627  012C40  0100               	movlb	0	; () banked
 10628  012C42  6FB4               	movwf	___fladd@aexp& (0+255),b
 10629                           
 10630                           ; BSR set to: 0
 10631  012C44  0100               	movlb	0	; () banked
 10632  012C46  51B3               	movf	___fladd@signs& (0+255),w,b
 10633  012C48  0100               	movlb	0	; () banked
 10634  012C4A  19B4               	xorwf	___fladd@aexp& (0+255),w,b
 10635  012C4C  B4D8               	btfsc	status,2,c
 10636  012C4E  D002               	goto	l7096
 10637                           
 10638                           ; BSR set to: 0
 10639  012C50  0100               	movlb	0	; () banked
 10640  012C52  8DB3               	bsf	___fladd@signs& (0+255),6,b
 10641  012C54                     l7096:
 10642                           
 10643                           ; BSR set to: 0
 10644  012C54  0100               	movlb	0	; () banked
 10645  012C56  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 10646  012C58  25AA               	addwf	(___fladd@a+3)& (0+255),w,b
 10647  012C5A  0100               	movlb	0	; () banked
 10648  012C5C  6FB4               	movwf	___fladd@aexp& (0+255),b
 10649                           
 10650                           ; BSR set to: 0
 10651  012C5E  0100               	movlb	0	; () banked
 10652  012C60  AFA9               	btfss	(___fladd@a+2)& (0+255),7,b
 10653  012C62  D002               	goto	l7102
 10654                           
 10655                           ; BSR set to: 0
 10656  012C64  0100               	movlb	0	; () banked
 10657  012C66  81B4               	bsf	___fladd@aexp& (0+255),0,b
 10658  012C68                     l7102:
 10659                           
 10660                           ; BSR set to: 0
 10661  012C68  0100               	movlb	0	; () banked
 10662  012C6A  51B4               	movf	___fladd@aexp& (0+255),w,b
 10663  012C6C  0100               	movlb	0	; () banked
 10664  012C6E  B4D8               	btfsc	status,2,c
 10665  012C70  D012               	goto	l7112
 10666                           
 10667                           ; BSR set to: 0
 10668  012C72  0100               	movlb	0	; () banked
 10669  012C74  29B4               	incf	___fladd@aexp& (0+255),w,b
 10670  012C76  A4D8               	btfss	status,2,c
 10671  012C78  D009               	goto	l7108
 10672                           
 10673                           ; BSR set to: 0
 10674  012C7A  0E00               	movlw	0
 10675  012C7C  0100               	movlb	0	; () banked
 10676  012C7E  6FA7               	movwf	___fladd@a& (0+255),b
 10677  012C80  0E00               	movlw	0
 10678  012C82  6FA8               	movwf	(___fladd@a+1)& (0+255),b
 10679  012C84  0E00               	movlw	0
 10680  012C86  6FA9               	movwf	(___fladd@a+2)& (0+255),b
 10681  012C88  0E00               	movlw	0
 10682  012C8A  6FAA               	movwf	(___fladd@a+3)& (0+255),b
 10683  012C8C                     l7108:
 10684                           
 10685                           ; BSR set to: 0
 10686  012C8C  0100               	movlb	0	; () banked
 10687  012C8E  8FA9               	bsf	(___fladd@a+2)& (0+255),7,b
 10688                           
 10689                           ; BSR set to: 0
 10690  012C90  0E00               	movlw	0
 10691  012C92  0100               	movlb	0	; () banked
 10692  012C94  D008               	goto	L10
 10693  012C96                     l7112:
 10694                           
 10695                           ; BSR set to: 0
 10696  012C96  0E00               	movlw	0
 10697  012C98  0100               	movlb	0	; () banked
 10698  012C9A  6FA7               	movwf	___fladd@a& (0+255),b
 10699  012C9C  0E00               	movlw	0
 10700  012C9E  6FA8               	movwf	(___fladd@a+1)& (0+255),b
 10701  012CA0  0E00               	movlw	0
 10702  012CA2  6FA9               	movwf	(___fladd@a+2)& (0+255),b
 10703  012CA4  0E00               	movlw	0
 10704  012CA6                     L10:
 10705  012CA6  6FAA               	movwf	(___fladd@a+3)& (0+255),b
 10706                           
 10707                           ; BSR set to: 0
 10708                           
 10709                           ; BSR set to: 0
 10710  012CA8  0100               	movlb	0	; () banked
 10711  012CAA  51B5               	movf	___fladd@bexp& (0+255),w,b
 10712  012CAC  0100               	movlb	0	; () banked
 10713  012CAE  5DB4               	subwf	___fladd@aexp& (0+255),w,b
 10714  012CB0  B0D8               	btfsc	status,0,c
 10715  012CB2  D024               	goto	l7150
 10716                           
 10717                           ; BSR set to: 0
 10718  012CB4  0100               	movlb	0	; () banked
 10719  012CB6  ADB3               	btfss	___fladd@signs& (0+255),6,b
 10720  012CB8  D003               	goto	l7120
 10721                           
 10722                           ; BSR set to: 0
 10723  012CBA  0E80               	movlw	128
 10724  012CBC  0100               	movlb	0	; () banked
 10725  012CBE  1BB3               	xorwf	___fladd@signs& (0+255),f,b
 10726  012CC0                     l7120:
 10727                           
 10728                           ; BSR set to: 0
 10729  012CC0  C0B5  F0B6         	movff	___fladd@bexp,___fladd@grs
 10730                           
 10731                           ; BSR set to: 0
 10732  012CC4  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
 10733                           
 10734                           ; BSR set to: 0
 10735  012CC8  C0B6  F0B4         	movff	___fladd@grs,___fladd@aexp
 10736                           
 10737                           ; BSR set to: 0
 10738  012CCC  C0A3  F0B6         	movff	___fladd@b,___fladd@grs
 10739                           
 10740                           ; BSR set to: 0
 10741  012CD0  C0A7  F0A3         	movff	___fladd@a,___fladd@b
 10742                           
 10743                           ; BSR set to: 0
 10744  012CD4  C0B6  F0A7         	movff	___fladd@grs,___fladd@a
 10745                           
 10746                           ; BSR set to: 0
 10747  012CD8  C0A4  F0B6         	movff	___fladd@b+1,___fladd@grs
 10748                           
 10749                           ; BSR set to: 0
 10750  012CDC  C0A8  F0A4         	movff	___fladd@a+1,___fladd@b+1
 10751                           
 10752                           ; BSR set to: 0
 10753  012CE0  C0B6  F0A8         	movff	___fladd@grs,___fladd@a+1
 10754                           
 10755                           ; BSR set to: 0
 10756  012CE4  C0A5  F0B6         	movff	___fladd@b+2,___fladd@grs
 10757                           
 10758                           ; BSR set to: 0
 10759  012CE8  C0A9  F0A5         	movff	___fladd@a+2,___fladd@b+2
 10760                           
 10761                           ; BSR set to: 0
 10762  012CEC  C0B6  F0A9         	movff	___fladd@grs,___fladd@a+2
 10763                           
 10764                           ; BSR set to: 0
 10765  012CF0  C0A6  F0B6         	movff	___fladd@b+3,___fladd@grs
 10766                           
 10767                           ; BSR set to: 0
 10768  012CF4  C0AA  F0A6         	movff	___fladd@a+3,___fladd@b+3
 10769                           
 10770                           ; BSR set to: 0
 10771  012CF8  C0B6  F0AA         	movff	___fladd@grs,___fladd@a+3
 10772  012CFC                     l7150:
 10773                           
 10774                           ; BSR set to: 0
 10775  012CFC  0E00               	movlw	0
 10776  012CFE  0100               	movlb	0	; () banked
 10777  012D00  6FB6               	movwf	___fladd@grs& (0+255),b
 10778                           
 10779                           ; BSR set to: 0
 10780  012D02  0100               	movlb	0	; () banked
 10781  012D04  51B5               	movf	___fladd@bexp& (0+255),w,b
 10782  012D06  0100               	movlb	0	; () banked
 10783  012D08  6FAB               	movwf	??___fladd& (0+255),b
 10784  012D0A  6BAC               	clrf	(??___fladd+1)& (0+255),b
 10785  012D0C  0100               	movlb	0	; () banked
 10786  012D0E  1FAB               	comf	??___fladd& (0+255),f,b
 10787  012D10  1FAC               	comf	(??___fladd+1)& (0+255),f,b
 10788  012D12  4BAB               	infsnz	??___fladd& (0+255),f,b
 10789  012D14  2BAC               	incf	(??___fladd+1)& (0+255),f,b
 10790  012D16  0100               	movlb	0	; () banked
 10791  012D18  51B4               	movf	___fladd@aexp& (0+255),w,b
 10792  012D1A  0100               	movlb	0	; () banked
 10793  012D1C  6FAD               	movwf	(??___fladd+2)& (0+255),b
 10794  012D1E  6BAE               	clrf	(??___fladd+3)& (0+255),b
 10795  012D20  0100               	movlb	0	; () banked
 10796  012D22  51AB               	movf	??___fladd& (0+255),w,b
 10797  012D24  0100               	movlb	0	; () banked
 10798  012D26  27AD               	addwf	(??___fladd+2)& (0+255),f,b
 10799  012D28  0100               	movlb	0	; () banked
 10800  012D2A  51AC               	movf	(??___fladd+1)& (0+255),w,b
 10801  012D2C  0100               	movlb	0	; () banked
 10802  012D2E  23AE               	addwfc	(??___fladd+3)& (0+255),f,b
 10803  012D30  0100               	movlb	0	; () banked
 10804  012D32  BFAE               	btfsc	(??___fladd+3)& (0+255),7,b
 10805  012D34  D03D               	goto	l1397
 10806  012D36  0100               	movlb	0	; () banked
 10807  012D38  51AE               	movf	(??___fladd+3)& (0+255),w,b
 10808  012D3A  E105               	bnz	u9100
 10809  012D3C  0E1A               	movlw	26
 10810  012D3E  0100               	movlb	0	; () banked
 10811  012D40  5DAD               	subwf	(??___fladd+2)& (0+255),w,b
 10812  012D42  A0D8               	btfss	status,0,c
 10813  012D44  D035               	goto	l1397
 10814  012D46                     u9100:
 10815                           
 10816                           ; BSR set to: 0
 10817  012D46  0100               	movlb	0	; () banked
 10818  012D48  51A3               	movf	___fladd@b& (0+255),w,b
 10819  012D4A  0100               	movlb	0	; () banked
 10820  012D4C  11A4               	iorwf	(___fladd@b+1)& (0+255),w,b
 10821  012D4E  0100               	movlb	0	; () banked
 10822  012D50  11A5               	iorwf	(___fladd@b+2)& (0+255),w,b
 10823  012D52  0100               	movlb	0	; () banked
 10824  012D54  11A6               	iorwf	(___fladd@b+3)& (0+255),w,b
 10825  012D56  B4D8               	btfsc	status,2,c
 10826  012D58  D002               	goto	u9110
 10827  012D5A  0E01               	movlw	1
 10828  012D5C  D001               	goto	u9120
 10829  012D5E                     u9110:
 10830  012D5E  0E00               	movlw	0
 10831  012D60                     u9120:
 10832  012D60  0100               	movlb	0	; () banked
 10833  012D62  6FB6               	movwf	___fladd@grs& (0+255),b
 10834                           
 10835                           ; BSR set to: 0
 10836  012D64  0E00               	movlw	0
 10837  012D66  0100               	movlb	0	; () banked
 10838  012D68  6FA3               	movwf	___fladd@b& (0+255),b
 10839  012D6A  0E00               	movlw	0
 10840  012D6C  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 10841  012D6E  0E00               	movlw	0
 10842  012D70  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 10843  012D72  0E00               	movlw	0
 10844  012D74  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 10845                           
 10846                           ; BSR set to: 0
 10847  012D76  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
 10848  012D7A  D020               	goto	l1396
 10849  012D7C                     l1398:
 10850                           
 10851                           ; BSR set to: 0
 10852  012D7C  0100               	movlb	0	; () banked
 10853  012D7E  A1B6               	btfss	___fladd@grs& (0+255),0,b
 10854  012D80  D007               	goto	l7162
 10855                           
 10856                           ; BSR set to: 0
 10857  012D82  0100               	movlb	0	; () banked
 10858  012D84  90D8               	bcf	status,0,c
 10859  012D86  31B6               	rrcf	___fladd@grs& (0+255),w,b
 10860  012D88  0901               	iorlw	1
 10861  012D8A  0100               	movlb	0	; () banked
 10862  012D8C  6FB6               	movwf	___fladd@grs& (0+255),b
 10863  012D8E  D003               	goto	l7164
 10864  012D90                     l7162:
 10865                           
 10866                           ; BSR set to: 0
 10867  012D90  0100               	movlb	0	; () banked
 10868  012D92  90D8               	bcf	status,0,c
 10869  012D94  33B6               	rrcf	___fladd@grs& (0+255),f,b
 10870  012D96                     l7164:
 10871                           
 10872                           ; BSR set to: 0
 10873  012D96  0100               	movlb	0	; () banked
 10874  012D98  A1A3               	btfss	___fladd@b& (0+255),0,b
 10875  012D9A  D002               	goto	l7168
 10876                           
 10877                           ; BSR set to: 0
 10878  012D9C  0100               	movlb	0	; () banked
 10879  012D9E  8FB6               	bsf	___fladd@grs& (0+255),7,b
 10880  012DA0                     l7168:
 10881                           
 10882                           ; BSR set to: 0
 10883  012DA0  0100               	movlb	0	; () banked
 10884  012DA2  35A6               	rlcf	(___fladd@b+3)& (0+255),w,b
 10885  012DA4  33A6               	rrcf	(___fladd@b+3)& (0+255),f,b
 10886  012DA6  33A5               	rrcf	(___fladd@b+2)& (0+255),f,b
 10887  012DA8  33A4               	rrcf	(___fladd@b+1)& (0+255),f,b
 10888  012DAA  33A3               	rrcf	___fladd@b& (0+255),f,b
 10889                           
 10890                           ; BSR set to: 0
 10891  012DAC  0100               	movlb	0	; () banked
 10892  012DAE  2BB5               	incf	___fladd@bexp& (0+255),f,b
 10893  012DB0                     l1397:
 10894                           
 10895                           ; BSR set to: 0
 10896  012DB0  0100               	movlb	0	; () banked
 10897  012DB2  51B4               	movf	___fladd@aexp& (0+255),w,b
 10898  012DB4  0100               	movlb	0	; () banked
 10899  012DB6  5DB5               	subwf	___fladd@bexp& (0+255),w,b
 10900  012DB8  A0D8               	btfss	status,0,c
 10901  012DBA  D7E0               	goto	l1398
 10902  012DBC                     l1396:
 10903                           
 10904                           ; BSR set to: 0
 10905  012DBC  0100               	movlb	0	; () banked
 10906  012DBE  BDB3               	btfsc	___fladd@signs& (0+255),6,b
 10907  012DC0  D03F               	goto	l7196
 10908                           
 10909                           ; BSR set to: 0
 10910  012DC2  0100               	movlb	0	; () banked
 10911  012DC4  51B5               	movf	___fladd@bexp& (0+255),w,b
 10912  012DC6  0100               	movlb	0	; () banked
 10913  012DC8  A4D8               	btfss	status,2,c
 10914  012DCA  D00A               	goto	l7178
 10915                           
 10916                           ; BSR set to: 0
 10917  012DCC  0E00               	movlw	0
 10918  012DCE  0100               	movlb	0	; () banked
 10919  012DD0  6FA3               	movwf	?___fladd& (0+255),b
 10920  012DD2  0E00               	movlw	0
 10921  012DD4  6FA4               	movwf	(?___fladd+1)& (0+255),b
 10922  012DD6  0E00               	movlw	0
 10923  012DD8  6FA5               	movwf	(?___fladd+2)& (0+255),b
 10924  012DDA  0E00               	movlw	0
 10925  012DDC  6FA6               	movwf	(?___fladd+3)& (0+255),b
 10926                           
 10927                           ; BSR set to: 0
 10928  012DDE  0012               	return	
 10929  012DE0                     l7178:
 10930                           
 10931                           ; BSR set to: 0
 10932  012DE0  0100               	movlb	0	; () banked
 10933  012DE2  51A7               	movf	___fladd@a& (0+255),w,b
 10934  012DE4  0100               	movlb	0	; () banked
 10935  012DE6  27A3               	addwf	___fladd@b& (0+255),f,b
 10936  012DE8  0100               	movlb	0	; () banked
 10937  012DEA  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 10938  012DEC  0100               	movlb	0	; () banked
 10939  012DEE  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 10940  012DF0  0100               	movlb	0	; () banked
 10941  012DF2  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 10942  012DF4  0100               	movlb	0	; () banked
 10943  012DF6  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 10944  012DF8  0100               	movlb	0	; () banked
 10945  012DFA  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 10946  012DFC  0100               	movlb	0	; () banked
 10947  012DFE  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 10948                           
 10949                           ; BSR set to: 0
 10950  012E00  0100               	movlb	0	; () banked
 10951  012E02  A1A6               	btfss	(___fladd@b+3)& (0+255),0,b
 10952  012E04  D0CC               	goto	l7232
 10953                           
 10954                           ; BSR set to: 0
 10955  012E06  0100               	movlb	0	; () banked
 10956  012E08  A1B6               	btfss	___fladd@grs& (0+255),0,b
 10957  012E0A  D009               	goto	l7186
 10958                           
 10959                           ; BSR set to: 0
 10960  012E0C  0100               	movlb	0	; () banked
 10961  012E0E  90D8               	bcf	status,0,c
 10962  012E10  33B6               	rrcf	___fladd@grs& (0+255),f,b
 10963  012E12  0100               	movlb	0	; () banked
 10964  012E14  51B6               	movf	___fladd@grs& (0+255),w,b
 10965  012E16  0901               	iorlw	1
 10966  012E18  0100               	movlb	0	; () banked
 10967  012E1A  6FB6               	movwf	___fladd@grs& (0+255),b
 10968  012E1C  D003               	goto	l7188
 10969  012E1E                     l7186:
 10970                           
 10971                           ; BSR set to: 0
 10972  012E1E  0100               	movlb	0	; () banked
 10973  012E20  90D8               	bcf	status,0,c
 10974  012E22  33B6               	rrcf	___fladd@grs& (0+255),f,b
 10975  012E24                     l7188:
 10976                           
 10977                           ; BSR set to: 0
 10978  012E24  0100               	movlb	0	; () banked
 10979  012E26  A1A3               	btfss	___fladd@b& (0+255),0,b
 10980  012E28  D002               	goto	l7192
 10981                           
 10982                           ; BSR set to: 0
 10983  012E2A  0100               	movlb	0	; () banked
 10984  012E2C  8FB6               	bsf	___fladd@grs& (0+255),7,b
 10985  012E2E                     l7192:
 10986                           
 10987                           ; BSR set to: 0
 10988  012E2E  0100               	movlb	0	; () banked
 10989  012E30  35A6               	rlcf	(___fladd@b+3)& (0+255),w,b
 10990  012E32  33A6               	rrcf	(___fladd@b+3)& (0+255),f,b
 10991  012E34  33A5               	rrcf	(___fladd@b+2)& (0+255),f,b
 10992  012E36  33A4               	rrcf	(___fladd@b+1)& (0+255),f,b
 10993  012E38  33A3               	rrcf	___fladd@b& (0+255),f,b
 10994                           
 10995                           ; BSR set to: 0
 10996  012E3A  0100               	movlb	0	; () banked
 10997  012E3C  2BB5               	incf	___fladd@bexp& (0+255),f,b
 10998                           
 10999                           ; BSR set to: 0
 11000  012E3E  D0AF               	goto	l7232
 11001  012E40                     l7196:
 11002                           
 11003                           ; BSR set to: 0
 11004  012E40  0100               	movlb	0	; () banked
 11005  012E42  51A7               	movf	___fladd@a& (0+255),w,b
 11006  012E44  0100               	movlb	0	; () banked
 11007  012E46  5DA3               	subwf	___fladd@b& (0+255),w,b
 11008  012E48  0100               	movlb	0	; () banked
 11009  012E4A  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11010  012E4C  0100               	movlb	0	; () banked
 11011  012E4E  59A4               	subwfb	(___fladd@b+1)& (0+255),w,b
 11012  012E50  0100               	movlb	0	; () banked
 11013  012E52  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11014  012E54  0100               	movlb	0	; () banked
 11015  012E56  59A5               	subwfb	(___fladd@b+2)& (0+255),w,b
 11016  012E58  0100               	movlb	0	; () banked
 11017  012E5A  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 11018  012E5C  0A80               	xorlw	128
 11019  012E5E  0100               	movlb	0	; () banked
 11020  012E60  6FAB               	movwf	??___fladd& (0+255),b
 11021  012E62  0100               	movlb	0	; () banked
 11022  012E64  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11023  012E66  0A80               	xorlw	128
 11024  012E68  0100               	movlb	0	; () banked
 11025  012E6A  59AB               	subwfb	??___fladd& (0+255),w,b
 11026  012E6C  B0D8               	btfsc	status,0,c
 11027  012E6E  D050               	goto	l7206
 11028                           
 11029                           ; BSR set to: 0
 11030  012E70  C0A3  F0AB         	movff	___fladd@b,??___fladd
 11031  012E74  C0A4  F0AC         	movff	___fladd@b+1,??___fladd+1
 11032  012E78  C0A5  F0AD         	movff	___fladd@b+2,??___fladd+2
 11033  012E7C  C0A6  F0AE         	movff	___fladd@b+3,??___fladd+3
 11034  012E80  0100               	movlb	0	; () banked
 11035  012E82  1FAB               	comf	??___fladd& (0+255),f,b
 11036  012E84  1FAC               	comf	(??___fladd+1)& (0+255),f,b
 11037  012E86  1FAD               	comf	(??___fladd+2)& (0+255),f,b
 11038  012E88  1FAE               	comf	(??___fladd+3)& (0+255),f,b
 11039  012E8A  2BAB               	incf	??___fladd& (0+255),f,b
 11040  012E8C  0E00               	movlw	0
 11041  012E8E  23AC               	addwfc	(??___fladd+1)& (0+255),f,b
 11042  012E90  23AD               	addwfc	(??___fladd+2)& (0+255),f,b
 11043  012E92  23AE               	addwfc	(??___fladd+3)& (0+255),f,b
 11044  012E94  0100               	movlb	0	; () banked
 11045  012E96  51A7               	movf	___fladd@a& (0+255),w,b
 11046  012E98  0100               	movlb	0	; () banked
 11047  012E9A  25AB               	addwf	??___fladd& (0+255),w,b
 11048  012E9C  0100               	movlb	0	; () banked
 11049  012E9E  6FAF               	movwf	(??___fladd+4)& (0+255),b
 11050  012EA0  0100               	movlb	0	; () banked
 11051  012EA2  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11052  012EA4  0100               	movlb	0	; () banked
 11053  012EA6  21AC               	addwfc	(??___fladd+1)& (0+255),w,b
 11054  012EA8  0100               	movlb	0	; () banked
 11055  012EAA  6FB0               	movwf	(??___fladd+5)& (0+255),b
 11056  012EAC  0100               	movlb	0	; () banked
 11057  012EAE  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11058  012EB0  0100               	movlb	0	; () banked
 11059  012EB2  21AD               	addwfc	(??___fladd+2)& (0+255),w,b
 11060  012EB4  0100               	movlb	0	; () banked
 11061  012EB6  6FB1               	movwf	(??___fladd+6)& (0+255),b
 11062  012EB8  0100               	movlb	0	; () banked
 11063  012EBA  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11064  012EBC  0100               	movlb	0	; () banked
 11065  012EBE  21AE               	addwfc	(??___fladd+3)& (0+255),w,b
 11066  012EC0  0100               	movlb	0	; () banked
 11067  012EC2  6FB2               	movwf	(??___fladd+7)& (0+255),b
 11068  012EC4  0EFF               	movlw	255
 11069  012EC6  0100               	movlb	0	; () banked
 11070  012EC8  25AF               	addwf	(??___fladd+4)& (0+255),w,b
 11071  012ECA  0100               	movlb	0	; () banked
 11072  012ECC  6FA3               	movwf	___fladd@b& (0+255),b
 11073  012ECE  0EFF               	movlw	255
 11074  012ED0  0100               	movlb	0	; () banked
 11075  012ED2  21B0               	addwfc	(??___fladd+5)& (0+255),w,b
 11076  012ED4  0100               	movlb	0	; () banked
 11077  012ED6  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11078  012ED8  0EFF               	movlw	255
 11079  012EDA  0100               	movlb	0	; () banked
 11080  012EDC  21B1               	addwfc	(??___fladd+6)& (0+255),w,b
 11081  012EDE  0100               	movlb	0	; () banked
 11082  012EE0  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11083  012EE2  0EFF               	movlw	255
 11084  012EE4  0100               	movlb	0	; () banked
 11085  012EE6  21B2               	addwfc	(??___fladd+7)& (0+255),w,b
 11086  012EE8  0100               	movlb	0	; () banked
 11087  012EEA  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11088  012EEC  0E80               	movlw	128
 11089  012EEE  0100               	movlb	0	; () banked
 11090  012EF0  1BB3               	xorwf	___fladd@signs& (0+255),f,b
 11091                           
 11092                           ; BSR set to: 0
 11093  012EF2  0100               	movlb	0	; () banked
 11094  012EF4  6DB6               	negf	___fladd@grs& (0+255),b
 11095                           
 11096                           ; BSR set to: 0
 11097  012EF6  0100               	movlb	0	; () banked
 11098  012EF8  51B6               	movf	___fladd@grs& (0+255),w,b
 11099  012EFA  0100               	movlb	0	; () banked
 11100  012EFC  A4D8               	btfss	status,2,c
 11101  012EFE  D018               	goto	l1413
 11102                           
 11103                           ; BSR set to: 0
 11104  012F00  0E01               	movlw	1
 11105  012F02  0100               	movlb	0	; () banked
 11106  012F04  27A3               	addwf	___fladd@b& (0+255),f,b
 11107  012F06  0E00               	movlw	0
 11108  012F08  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 11109  012F0A  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 11110  012F0C  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 11111                           
 11112                           ; BSR set to: 0
 11113  012F0E  D010               	goto	l1413
 11114  012F10                     l7206:
 11115                           
 11116                           ; BSR set to: 0
 11117  012F10  0100               	movlb	0	; () banked
 11118  012F12  51A7               	movf	___fladd@a& (0+255),w,b
 11119  012F14  0100               	movlb	0	; () banked
 11120  012F16  5FA3               	subwf	___fladd@b& (0+255),f,b
 11121  012F18  0100               	movlb	0	; () banked
 11122  012F1A  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11123  012F1C  0100               	movlb	0	; () banked
 11124  012F1E  5BA4               	subwfb	(___fladd@b+1)& (0+255),f,b
 11125  012F20  0100               	movlb	0	; () banked
 11126  012F22  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11127  012F24  0100               	movlb	0	; () banked
 11128  012F26  5BA5               	subwfb	(___fladd@b+2)& (0+255),f,b
 11129  012F28  0100               	movlb	0	; () banked
 11130  012F2A  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11131  012F2C  0100               	movlb	0	; () banked
 11132  012F2E  5BA6               	subwfb	(___fladd@b+3)& (0+255),f,b
 11133  012F30                     l1413:
 11134                           
 11135                           ; BSR set to: 0
 11136  012F30  0100               	movlb	0	; () banked
 11137  012F32  51A3               	movf	___fladd@b& (0+255),w,b
 11138  012F34  0100               	movlb	0	; () banked
 11139  012F36  11A4               	iorwf	(___fladd@b+1)& (0+255),w,b
 11140  012F38  0100               	movlb	0	; () banked
 11141  012F3A  11A5               	iorwf	(___fladd@b+2)& (0+255),w,b
 11142  012F3C  0100               	movlb	0	; () banked
 11143  012F3E  11A6               	iorwf	(___fladd@b+3)& (0+255),w,b
 11144  012F40  A4D8               	btfss	status,2,c
 11145  012F42  D02A               	goto	l7230
 11146                           
 11147                           ; BSR set to: 0
 11148  012F44  0100               	movlb	0	; () banked
 11149  012F46  51B6               	movf	___fladd@grs& (0+255),w,b
 11150  012F48  0100               	movlb	0	; () banked
 11151  012F4A  A4D8               	btfss	status,2,c
 11152  012F4C  D025               	goto	l7230
 11153                           
 11154                           ; BSR set to: 0
 11155  012F4E  0E00               	movlw	0
 11156  012F50  0100               	movlb	0	; () banked
 11157  012F52  6FA3               	movwf	?___fladd& (0+255),b
 11158  012F54  0E00               	movlw	0
 11159  012F56  6FA4               	movwf	(?___fladd+1)& (0+255),b
 11160  012F58  0E00               	movlw	0
 11161  012F5A  6FA5               	movwf	(?___fladd+2)& (0+255),b
 11162  012F5C  0E00               	movlw	0
 11163  012F5E  6FA6               	movwf	(?___fladd+3)& (0+255),b
 11164                           
 11165                           ; BSR set to: 0
 11166  012F60  0012               	return	
 11167  012F62                     l7214:
 11168                           
 11169                           ; BSR set to: 0
 11170  012F62  0100               	movlb	0	; () banked
 11171  012F64  90D8               	bcf	status,0,c
 11172  012F66  37A3               	rlcf	___fladd@b& (0+255),f,b
 11173  012F68  37A4               	rlcf	(___fladd@b+1)& (0+255),f,b
 11174  012F6A  37A5               	rlcf	(___fladd@b+2)& (0+255),f,b
 11175  012F6C  37A6               	rlcf	(___fladd@b+3)& (0+255),f,b
 11176                           
 11177                           ; BSR set to: 0
 11178  012F6E  0100               	movlb	0	; () banked
 11179  012F70  AFB6               	btfss	___fladd@grs& (0+255),7,b
 11180  012F72  D002               	goto	l7220
 11181                           
 11182                           ; BSR set to: 0
 11183  012F74  0100               	movlb	0	; () banked
 11184  012F76  81A3               	bsf	___fladd@b& (0+255),0,b
 11185  012F78                     l7220:
 11186                           
 11187                           ; BSR set to: 0
 11188  012F78  0100               	movlb	0	; () banked
 11189  012F7A  A1B6               	btfss	___fladd@grs& (0+255),0,b
 11190  012F7C  D003               	goto	l7224
 11191                           
 11192                           ; BSR set to: 0
 11193  012F7E  80D8               	bsf	status,0,c
 11194  012F80  0100               	movlb	0	; () banked
 11195  012F82  D002               	goto	L11
 11196  012F84                     l7224:
 11197                           
 11198                           ; BSR set to: 0
 11199  012F84  0100               	movlb	0	; () banked
 11200  012F86  90D8               	bcf	status,0,c
 11201  012F88                     L11:
 11202  012F88  37B6               	rlcf	___fladd@grs& (0+255),f,b
 11203                           
 11204                           ; BSR set to: 0
 11205                           
 11206                           ; BSR set to: 0
 11207  012F8A  0100               	movlb	0	; () banked
 11208  012F8C  51B5               	movf	___fladd@bexp& (0+255),w,b
 11209  012F8E  0100               	movlb	0	; () banked
 11210  012F90  B4D8               	btfsc	status,2,c
 11211  012F92  D002               	goto	l7230
 11212                           
 11213                           ; BSR set to: 0
 11214  012F94  0100               	movlb	0	; () banked
 11215  012F96  07B5               	decf	___fladd@bexp& (0+255),f,b
 11216  012F98                     l7230:
 11217                           
 11218                           ; BSR set to: 0
 11219  012F98  0100               	movlb	0	; () banked
 11220  012F9A  AFA5               	btfss	(___fladd@b+2)& (0+255),7,b
 11221  012F9C  D7E2               	goto	l7214
 11222  012F9E                     l7232:
 11223                           
 11224                           ; BSR set to: 0
 11225  012F9E  0E00               	movlw	0
 11226  012FA0  0100               	movlb	0	; () banked
 11227  012FA2  6FB4               	movwf	___fladd@aexp& (0+255),b
 11228                           
 11229                           ; BSR set to: 0
 11230  012FA4  0100               	movlb	0	; () banked
 11231  012FA6  AFB6               	btfss	___fladd@grs& (0+255),7,b
 11232  012FA8  D00D               	goto	l1422
 11233                           
 11234                           ; BSR set to: 0
 11235  012FAA  C0B6  F0AB         	movff	___fladd@grs,??___fladd
 11236  012FAE  0E7F               	movlw	127
 11237  012FB0  0100               	movlb	0	; () banked
 11238  012FB2  17AB               	andwf	??___fladd& (0+255),f,b
 11239  012FB4  A4D8               	btfss	status,2,c
 11240  012FB6  D003               	goto	l7240
 11241                           
 11242                           ; BSR set to: 0
 11243                           
 11244                           ; BSR set to: 0
 11245  012FB8  0100               	movlb	0	; () banked
 11246  012FBA  A1A3               	btfss	___fladd@b& (0+255),0,b
 11247  012FBC  D003               	goto	l1422
 11248  012FBE                     l7240:
 11249                           
 11250                           ; BSR set to: 0
 11251  012FBE  0E01               	movlw	1
 11252  012FC0  0100               	movlb	0	; () banked
 11253  012FC2  6FB4               	movwf	___fladd@aexp& (0+255),b
 11254  012FC4                     l1422:
 11255                           
 11256                           ; BSR set to: 0
 11257  012FC4  0100               	movlb	0	; () banked
 11258  012FC6  51B4               	movf	___fladd@aexp& (0+255),w,b
 11259  012FC8  0100               	movlb	0	; () banked
 11260  012FCA  B4D8               	btfsc	status,2,c
 11261  012FCC  D026               	goto	l7250
 11262                           
 11263                           ; BSR set to: 0
 11264  012FCE  0E01               	movlw	1
 11265  012FD0  0100               	movlb	0	; () banked
 11266  012FD2  27A3               	addwf	___fladd@b& (0+255),f,b
 11267  012FD4  0E00               	movlw	0
 11268  012FD6  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 11269  012FD8  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 11270  012FDA  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 11271                           
 11272                           ; BSR set to: 0
 11273  012FDC  0100               	movlb	0	; () banked
 11274  012FDE  A1A6               	btfss	(___fladd@b+3)& (0+255),0,b
 11275  012FE0  D01C               	goto	l7250
 11276                           
 11277                           ; BSR set to: 0
 11278  012FE2  C0A3  F0AB         	movff	___fladd@b,??___fladd
 11279  012FE6  C0A4  F0AC         	movff	___fladd@b+1,??___fladd+1
 11280  012FEA  C0A5  F0AD         	movff	___fladd@b+2,??___fladd+2
 11281  012FEE  C0A6  F0AE         	movff	___fladd@b+3,??___fladd+3
 11282  012FF2  0100               	movlb	0	; () banked
 11283  012FF4  35AE               	rlcf	(??___fladd+3)& (0+255),w,b
 11284  012FF6  33AE               	rrcf	(??___fladd+3)& (0+255),f,b
 11285  012FF8  33AD               	rrcf	(??___fladd+2)& (0+255),f,b
 11286  012FFA  33AC               	rrcf	(??___fladd+1)& (0+255),f,b
 11287  012FFC  33AB               	rrcf	??___fladd& (0+255),f,b
 11288  012FFE  C0AB  F0A3         	movff	??___fladd,___fladd@b
 11289  013002  C0AC  F0A4         	movff	??___fladd+1,___fladd@b+1
 11290  013006  C0AD  F0A5         	movff	??___fladd+2,___fladd@b+2
 11291  01300A  C0AE  F0A6         	movff	??___fladd+3,___fladd@b+3
 11292  01300E  0100               	movlb	0	; () banked
 11293  013010  29B5               	incf	___fladd@bexp& (0+255),w,b
 11294  013012  B4D8               	btfsc	status,2,c
 11295  013014  D002               	goto	l7250
 11296                           
 11297                           ; BSR set to: 0
 11298  013016  0100               	movlb	0	; () banked
 11299  013018  2BB5               	incf	___fladd@bexp& (0+255),f,b
 11300  01301A                     l7250:
 11301                           
 11302                           ; BSR set to: 0
 11303  01301A  0100               	movlb	0	; () banked
 11304  01301C  29B5               	incf	___fladd@bexp& (0+255),w,b
 11305  01301E  B4D8               	btfsc	status,2,c
 11306  013020  D005               	goto	l7254
 11307                           
 11308                           ; BSR set to: 0
 11309  013022  0100               	movlb	0	; () banked
 11310  013024  51B5               	movf	___fladd@bexp& (0+255),w,b
 11311  013026  0100               	movlb	0	; () banked
 11312  013028  A4D8               	btfss	status,2,c
 11313  01302A  D011               	goto	l7258
 11314  01302C                     l7254:
 11315                           
 11316                           ; BSR set to: 0
 11317  01302C  0E00               	movlw	0
 11318  01302E  0100               	movlb	0	; () banked
 11319  013030  6FA3               	movwf	___fladd@b& (0+255),b
 11320  013032  0E00               	movlw	0
 11321  013034  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11322  013036  0E00               	movlw	0
 11323  013038  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11324  01303A  0E00               	movlw	0
 11325  01303C  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11326  01303E  0100               	movlb	0	; () banked
 11327  013040  51B5               	movf	___fladd@bexp& (0+255),w,b
 11328  013042  0100               	movlb	0	; () banked
 11329  013044  A4D8               	btfss	status,2,c
 11330  013046  D003               	goto	l7258
 11331                           
 11332                           ; BSR set to: 0
 11333  013048  0E00               	movlw	0
 11334  01304A  0100               	movlb	0	; () banked
 11335  01304C  6FB3               	movwf	___fladd@signs& (0+255),b
 11336  01304E                     l7258:
 11337                           
 11338                           ; BSR set to: 0
 11339  01304E  0100               	movlb	0	; () banked
 11340  013050  A1B5               	btfss	___fladd@bexp& (0+255),0,b
 11341  013052  D003               	goto	l7262
 11342                           
 11343                           ; BSR set to: 0
 11344  013054  0100               	movlb	0	; () banked
 11345  013056  8FA5               	bsf	(___fladd@b+2)& (0+255),7,b
 11346  013058  D002               	goto	l7264
 11347  01305A                     l7262:
 11348                           
 11349                           ; BSR set to: 0
 11350  01305A  0100               	movlb	0	; () banked
 11351  01305C  9FA5               	bcf	(___fladd@b+2)& (0+255),7,b
 11352  01305E                     l7264:
 11353                           
 11354                           ; BSR set to: 0
 11355  01305E  0100               	movlb	0	; () banked
 11356  013060  90D8               	bcf	status,0,c
 11357  013062  31B5               	rrcf	___fladd@bexp& (0+255),w,b
 11358  013064  0100               	movlb	0	; () banked
 11359  013066  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11360                           
 11361                           ; BSR set to: 0
 11362  013068  0100               	movlb	0	; () banked
 11363  01306A  AFB3               	btfss	___fladd@signs& (0+255),7,b
 11364  01306C  D002               	goto	l7270
 11365                           
 11366                           ; BSR set to: 0
 11367  01306E  0100               	movlb	0	; () banked
 11368  013070  8FA6               	bsf	(___fladd@b+3)& (0+255),7,b
 11369  013072                     l7270:
 11370                           
 11371                           ; BSR set to: 0
 11372  013072  C0A3  F0A3         	movff	___fladd@b,?___fladd
 11373  013076  C0A4  F0A4         	movff	___fladd@b+1,?___fladd+1
 11374  01307A  C0A5  F0A5         	movff	___fladd@b+2,?___fladd+2
 11375  01307E  C0A6  F0A6         	movff	___fladd@b+3,?___fladd+3
 11376  013082  0012               	return	
 11377  013084                     __end_of___fladd:
 11378                           	opt stack 0
 11379                           tblptru	equ	0xFF8
 11380                           tblptrh	equ	0xFF7
 11381                           tblptrl	equ	0xFF6
 11382                           tablat	equ	0xFF5
 11383                           prodh	equ	0xFF4
 11384                           prodl	equ	0xFF3
 11385                           intcon	equ	0xFF2
 11386                           postinc0	equ	0xFEE
 11387                           wreg	equ	0xFE8
 11388                           indf2	equ	0xFDF
 11389                           postinc2	equ	0xFDE
 11390                           fsr2h	equ	0xFDA
 11391                           fsr2l	equ	0xFD9
 11392                           status	equ	0xFD8
 11393                           
 11394 ;; *************** function ___flneg *****************
 11395 ;; Defined at:
 11396 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;  f1              4   15[BANK0 ] unsigned char 
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  4   15[BANK0 ] unsigned char 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;Total ram usage:        4 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    3
 11417 ;; This function calls:
 11418 ;;		Nothing
 11419 ;; This function is called by:
 11420 ;;		_sprintf
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	text22
 11425  015886                     __ptext22:
 11426                           	opt stack 0
 11427  015886                     ___flneg:
 11428                           	opt stack 25
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;incstack = 0
 11432  015886  0100               	movlb	0	; () banked
 11433  015888  516F               	movf	___flneg@f1& (0+255),w,b
 11434  01588A  0100               	movlb	0	; () banked
 11435  01588C  1170               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11436  01588E  0100               	movlb	0	; () banked
 11437  015890  1171               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11438  015892  0100               	movlb	0	; () banked
 11439  015894  1172               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11440  015896  B4D8               	btfsc	status,2,c
 11441  015898  D009               	goto	l7726
 11442                           
 11443                           ; BSR set to: 0
 11444  01589A  0E00               	movlw	0
 11445  01589C  0100               	movlb	0	; () banked
 11446  01589E  1B6F               	xorwf	___flneg@f1& (0+255),f,b
 11447  0158A0  0E00               	movlw	0
 11448  0158A2  1B70               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11449  0158A4  0E00               	movlw	0
 11450  0158A6  1B71               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11451  0158A8  0E80               	movlw	128
 11452  0158AA  1B72               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11453  0158AC                     l7726:
 11454                           
 11455                           ; BSR set to: 0
 11456  0158AC  C06F  F06F         	movff	___flneg@f1,?___flneg
 11457  0158B0  C070  F070         	movff	___flneg@f1+1,?___flneg+1
 11458  0158B4  C071  F071         	movff	___flneg@f1+2,?___flneg+2
 11459  0158B8  C072  F072         	movff	___flneg@f1+3,?___flneg+3
 11460  0158BC  0012               	return	
 11461  0158BE                     __end_of___flneg:
 11462                           	opt stack 0
 11463                           tblptru	equ	0xFF8
 11464                           tblptrh	equ	0xFF7
 11465                           tblptrl	equ	0xFF6
 11466                           tablat	equ	0xFF5
 11467                           prodh	equ	0xFF4
 11468                           prodl	equ	0xFF3
 11469                           intcon	equ	0xFF2
 11470                           postinc0	equ	0xFEE
 11471                           wreg	equ	0xFE8
 11472                           indf2	equ	0xFDF
 11473                           postinc2	equ	0xFDE
 11474                           fsr2h	equ	0xFDA
 11475                           fsr2l	equ	0xFD9
 11476                           status	equ	0xFD8
 11477                           
 11478 ;; *************** function ___flge *****************
 11479 ;; Defined at:
 11480 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;  ff1             4   15[BANK0 ] unsigned char 
 11483 ;;  ff2             4   19[BANK0 ] unsigned char 
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;		None
 11486 ;; Return value:  Size  Location     Type
 11487 ;;		None               void
 11488 ;; Registers used:
 11489 ;;		wreg, status,2, status,0
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:       12 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:    3
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_sprintf
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text23
 11510  0148B8                     __ptext23:
 11511                           	opt stack 0
 11512  0148B8                     ___flge:
 11513                           	opt stack 25
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;incstack = 0
 11517  0148B8  0E00               	movlw	0
 11518  0148BA  0100               	movlb	0	; () banked
 11519  0148BC  156F               	andwf	___flge@ff1& (0+255),w,b
 11520  0148BE  0100               	movlb	0	; () banked
 11521  0148C0  6F77               	movwf	??___flge& (0+255),b
 11522  0148C2  0E00               	movlw	0
 11523  0148C4  0100               	movlb	0	; () banked
 11524  0148C6  1570               	andwf	(___flge@ff1+1)& (0+255),w,b
 11525  0148C8  0100               	movlb	0	; () banked
 11526  0148CA  6F78               	movwf	(??___flge+1)& (0+255),b
 11527  0148CC  0E80               	movlw	128
 11528  0148CE  0100               	movlb	0	; () banked
 11529  0148D0  1571               	andwf	(___flge@ff1+2)& (0+255),w,b
 11530  0148D2  0100               	movlb	0	; () banked
 11531  0148D4  6F79               	movwf	(??___flge+2)& (0+255),b
 11532  0148D6  0E7F               	movlw	127
 11533  0148D8  0100               	movlb	0	; () banked
 11534  0148DA  1572               	andwf	(___flge@ff1+3)& (0+255),w,b
 11535  0148DC  0100               	movlb	0	; () banked
 11536  0148DE  6F7A               	movwf	(??___flge+3)& (0+255),b
 11537  0148E0  0100               	movlb	0	; () banked
 11538  0148E2  5177               	movf	??___flge& (0+255),w,b
 11539  0148E4  0100               	movlb	0	; () banked
 11540  0148E6  1178               	iorwf	(??___flge+1)& (0+255),w,b
 11541  0148E8  0100               	movlb	0	; () banked
 11542  0148EA  1179               	iorwf	(??___flge+2)& (0+255),w,b
 11543  0148EC  0100               	movlb	0	; () banked
 11544  0148EE  117A               	iorwf	(??___flge+3)& (0+255),w,b
 11545  0148F0  A4D8               	btfss	status,2,c
 11546  0148F2  D009               	goto	l7704
 11547                           
 11548                           ; BSR set to: 0
 11549  0148F4  0E00               	movlw	0
 11550  0148F6  0100               	movlb	0	; () banked
 11551  0148F8  6F6F               	movwf	___flge@ff1& (0+255),b
 11552  0148FA  0E00               	movlw	0
 11553  0148FC  6F70               	movwf	(___flge@ff1+1)& (0+255),b
 11554  0148FE  0E00               	movlw	0
 11555  014900  6F71               	movwf	(___flge@ff1+2)& (0+255),b
 11556  014902  0E00               	movlw	0
 11557  014904  6F72               	movwf	(___flge@ff1+3)& (0+255),b
 11558  014906                     l7704:
 11559                           
 11560                           ; BSR set to: 0
 11561  014906  0E00               	movlw	0
 11562  014908  0100               	movlb	0	; () banked
 11563  01490A  1573               	andwf	___flge@ff2& (0+255),w,b
 11564  01490C  0100               	movlb	0	; () banked
 11565  01490E  6F77               	movwf	??___flge& (0+255),b
 11566  014910  0E00               	movlw	0
 11567  014912  0100               	movlb	0	; () banked
 11568  014914  1574               	andwf	(___flge@ff2+1)& (0+255),w,b
 11569  014916  0100               	movlb	0	; () banked
 11570  014918  6F78               	movwf	(??___flge+1)& (0+255),b
 11571  01491A  0E80               	movlw	128
 11572  01491C  0100               	movlb	0	; () banked
 11573  01491E  1575               	andwf	(___flge@ff2+2)& (0+255),w,b
 11574  014920  0100               	movlb	0	; () banked
 11575  014922  6F79               	movwf	(??___flge+2)& (0+255),b
 11576  014924  0E7F               	movlw	127
 11577  014926  0100               	movlb	0	; () banked
 11578  014928  1576               	andwf	(___flge@ff2+3)& (0+255),w,b
 11579  01492A  0100               	movlb	0	; () banked
 11580  01492C  6F7A               	movwf	(??___flge+3)& (0+255),b
 11581  01492E  0100               	movlb	0	; () banked
 11582  014930  5177               	movf	??___flge& (0+255),w,b
 11583  014932  0100               	movlb	0	; () banked
 11584  014934  1178               	iorwf	(??___flge+1)& (0+255),w,b
 11585  014936  0100               	movlb	0	; () banked
 11586  014938  1179               	iorwf	(??___flge+2)& (0+255),w,b
 11587  01493A  0100               	movlb	0	; () banked
 11588  01493C  117A               	iorwf	(??___flge+3)& (0+255),w,b
 11589  01493E  A4D8               	btfss	status,2,c
 11590  014940  D009               	goto	l7708
 11591                           
 11592                           ; BSR set to: 0
 11593  014942  0E00               	movlw	0
 11594  014944  0100               	movlb	0	; () banked
 11595  014946  6F73               	movwf	___flge@ff2& (0+255),b
 11596  014948  0E00               	movlw	0
 11597  01494A  6F74               	movwf	(___flge@ff2+1)& (0+255),b
 11598  01494C  0E00               	movlw	0
 11599  01494E  6F75               	movwf	(___flge@ff2+2)& (0+255),b
 11600  014950  0E00               	movlw	0
 11601  014952  6F76               	movwf	(___flge@ff2+3)& (0+255),b
 11602  014954                     l7708:
 11603                           
 11604                           ; BSR set to: 0
 11605  014954  0100               	movlb	0	; () banked
 11606  014956  AF72               	btfss	(___flge@ff1+3)& (0+255),7,b
 11607  014958  D026               	goto	l7712
 11608                           
 11609                           ; BSR set to: 0
 11610  01495A  C06F  F077         	movff	___flge@ff1,??___flge
 11611  01495E  C070  F078         	movff	___flge@ff1+1,??___flge+1
 11612  014962  C071  F079         	movff	___flge@ff1+2,??___flge+2
 11613  014966  C072  F07A         	movff	___flge@ff1+3,??___flge+3
 11614  01496A  0100               	movlb	0	; () banked
 11615  01496C  1F77               	comf	??___flge& (0+255),f,b
 11616  01496E  1F78               	comf	(??___flge+1)& (0+255),f,b
 11617  014970  1F79               	comf	(??___flge+2)& (0+255),f,b
 11618  014972  1F7A               	comf	(??___flge+3)& (0+255),f,b
 11619  014974  2B77               	incf	??___flge& (0+255),f,b
 11620  014976  0E00               	movlw	0
 11621  014978  2378               	addwfc	(??___flge+1)& (0+255),f,b
 11622  01497A  2379               	addwfc	(??___flge+2)& (0+255),f,b
 11623  01497C  237A               	addwfc	(??___flge+3)& (0+255),f,b
 11624  01497E  0E00               	movlw	0
 11625  014980  0100               	movlb	0	; () banked
 11626  014982  2577               	addwf	??___flge& (0+255),w,b
 11627  014984  0100               	movlb	0	; () banked
 11628  014986  6F6F               	movwf	___flge@ff1& (0+255),b
 11629  014988  0E00               	movlw	0
 11630  01498A  0100               	movlb	0	; () banked
 11631  01498C  2178               	addwfc	(??___flge+1)& (0+255),w,b
 11632  01498E  0100               	movlb	0	; () banked
 11633  014990  6F70               	movwf	(___flge@ff1+1)& (0+255),b
 11634  014992  0E00               	movlw	0
 11635  014994  0100               	movlb	0	; () banked
 11636  014996  2179               	addwfc	(??___flge+2)& (0+255),w,b
 11637  014998  0100               	movlb	0	; () banked
 11638  01499A  6F71               	movwf	(___flge@ff1+2)& (0+255),b
 11639  01499C  0E80               	movlw	128
 11640  01499E  0100               	movlb	0	; () banked
 11641  0149A0  217A               	addwfc	(??___flge+3)& (0+255),w,b
 11642  0149A2  0100               	movlb	0	; () banked
 11643  0149A4  6F72               	movwf	(___flge@ff1+3)& (0+255),b
 11644  0149A6                     l7712:
 11645                           
 11646                           ; BSR set to: 0
 11647  0149A6  0100               	movlb	0	; () banked
 11648  0149A8  AF76               	btfss	(___flge@ff2+3)& (0+255),7,b
 11649  0149AA  D026               	goto	l1119
 11650                           
 11651                           ; BSR set to: 0
 11652  0149AC  C073  F077         	movff	___flge@ff2,??___flge
 11653  0149B0  C074  F078         	movff	___flge@ff2+1,??___flge+1
 11654  0149B4  C075  F079         	movff	___flge@ff2+2,??___flge+2
 11655  0149B8  C076  F07A         	movff	___flge@ff2+3,??___flge+3
 11656  0149BC  0100               	movlb	0	; () banked
 11657  0149BE  1F77               	comf	??___flge& (0+255),f,b
 11658  0149C0  1F78               	comf	(??___flge+1)& (0+255),f,b
 11659  0149C2  1F79               	comf	(??___flge+2)& (0+255),f,b
 11660  0149C4  1F7A               	comf	(??___flge+3)& (0+255),f,b
 11661  0149C6  2B77               	incf	??___flge& (0+255),f,b
 11662  0149C8  0E00               	movlw	0
 11663  0149CA  2378               	addwfc	(??___flge+1)& (0+255),f,b
 11664  0149CC  2379               	addwfc	(??___flge+2)& (0+255),f,b
 11665  0149CE  237A               	addwfc	(??___flge+3)& (0+255),f,b
 11666  0149D0  0E00               	movlw	0
 11667  0149D2  0100               	movlb	0	; () banked
 11668  0149D4  2577               	addwf	??___flge& (0+255),w,b
 11669  0149D6  0100               	movlb	0	; () banked
 11670  0149D8  6F73               	movwf	___flge@ff2& (0+255),b
 11671  0149DA  0E00               	movlw	0
 11672  0149DC  0100               	movlb	0	; () banked
 11673  0149DE  2178               	addwfc	(??___flge+1)& (0+255),w,b
 11674  0149E0  0100               	movlb	0	; () banked
 11675  0149E2  6F74               	movwf	(___flge@ff2+1)& (0+255),b
 11676  0149E4  0E00               	movlw	0
 11677  0149E6  0100               	movlb	0	; () banked
 11678  0149E8  2179               	addwfc	(??___flge+2)& (0+255),w,b
 11679  0149EA  0100               	movlb	0	; () banked
 11680  0149EC  6F75               	movwf	(___flge@ff2+2)& (0+255),b
 11681  0149EE  0E80               	movlw	128
 11682  0149F0  0100               	movlb	0	; () banked
 11683  0149F2  217A               	addwfc	(??___flge+3)& (0+255),w,b
 11684  0149F4  0100               	movlb	0	; () banked
 11685  0149F6  6F76               	movwf	(___flge@ff2+3)& (0+255),b
 11686  0149F8                     l1119:
 11687                           
 11688                           ; BSR set to: 0
 11689  0149F8  0E00               	movlw	0
 11690  0149FA  0100               	movlb	0	; () banked
 11691  0149FC  1B6F               	xorwf	___flge@ff1& (0+255),f,b
 11692  0149FE  0E00               	movlw	0
 11693  014A00  1B70               	xorwf	(___flge@ff1+1)& (0+255),f,b
 11694  014A02  0E00               	movlw	0
 11695  014A04  1B71               	xorwf	(___flge@ff1+2)& (0+255),f,b
 11696  014A06  0E80               	movlw	128
 11697  014A08  1B72               	xorwf	(___flge@ff1+3)& (0+255),f,b
 11698  014A0A  0E00               	movlw	0
 11699  014A0C  0100               	movlb	0	; () banked
 11700  014A0E  1B73               	xorwf	___flge@ff2& (0+255),f,b
 11701  014A10  0E00               	movlw	0
 11702  014A12  1B74               	xorwf	(___flge@ff2+1)& (0+255),f,b
 11703  014A14  0E00               	movlw	0
 11704  014A16  1B75               	xorwf	(___flge@ff2+2)& (0+255),f,b
 11705  014A18  0E80               	movlw	128
 11706  014A1A  1B76               	xorwf	(___flge@ff2+3)& (0+255),f,b
 11707  014A1C  0100               	movlb	0	; () banked
 11708  014A1E  5173               	movf	___flge@ff2& (0+255),w,b
 11709  014A20  0100               	movlb	0	; () banked
 11710  014A22  5D6F               	subwf	___flge@ff1& (0+255),w,b
 11711  014A24  0100               	movlb	0	; () banked
 11712  014A26  5174               	movf	(___flge@ff2+1)& (0+255),w,b
 11713  014A28  0100               	movlb	0	; () banked
 11714  014A2A  5970               	subwfb	(___flge@ff1+1)& (0+255),w,b
 11715  014A2C  0100               	movlb	0	; () banked
 11716  014A2E  5175               	movf	(___flge@ff2+2)& (0+255),w,b
 11717  014A30  0100               	movlb	0	; () banked
 11718  014A32  5971               	subwfb	(___flge@ff1+2)& (0+255),w,b
 11719  014A34  0100               	movlb	0	; () banked
 11720  014A36  5176               	movf	(___flge@ff2+3)& (0+255),w,b
 11721  014A38  0100               	movlb	0	; () banked
 11722  014A3A  5972               	subwfb	(___flge@ff1+3)& (0+255),w,b
 11723  014A3C  B0D8               	btfsc	status,0,c
 11724  014A3E  D002               	goto	l7718
 11725                           
 11726                           ; BSR set to: 0
 11727  014A40  90D8               	bcf	status,0,c
 11728  014A42  0012               	return	
 11729  014A44                     l7718:
 11730                           
 11731                           ; BSR set to: 0
 11732  014A44  80D8               	bsf	status,0,c
 11733                           
 11734                           ; BSR set to: 0
 11735  014A46  0012               	return	
 11736  014A48                     __end_of___flge:
 11737                           	opt stack 0
 11738                           tblptru	equ	0xFF8
 11739                           tblptrh	equ	0xFF7
 11740                           tblptrl	equ	0xFF6
 11741                           tablat	equ	0xFF5
 11742                           prodh	equ	0xFF4
 11743                           prodl	equ	0xFF3
 11744                           intcon	equ	0xFF2
 11745                           postinc0	equ	0xFEE
 11746                           wreg	equ	0xFE8
 11747                           indf2	equ	0xFDF
 11748                           postinc2	equ	0xFDE
 11749                           fsr2h	equ	0xFDA
 11750                           fsr2l	equ	0xFD9
 11751                           status	equ	0xFD8
 11752                           
 11753 ;; *************** function ___fldiv *****************
 11754 ;; Defined at:
 11755 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  b               4   15[BANK0 ] unsigned char 
 11758 ;;  a               4   19[BANK0 ] unsigned char 
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;  grs             4   34[BANK0 ] unsigned long 
 11761 ;;  rem             4   28[BANK0 ] unsigned long 
 11762 ;;  new_exp         2   32[BANK0 ] int 
 11763 ;;  aexp            1   39[BANK0 ] unsigned char 
 11764 ;;  bexp            1   38[BANK0 ] unsigned char 
 11765 ;;  sign            1   27[BANK0 ] unsigned char 
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  4   15[BANK0 ] unsigned char 
 11768 ;; Registers used:
 11769 ;;		wreg, status,2, status,0
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11775 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;Total ram usage:       25 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; Hardware stack levels required when called:    3
 11782 ;; This function calls:
 11783 ;;		Nothing
 11784 ;; This function is called by:
 11785 ;;		_LCD_Handler
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text24
 11790  013932                     __ptext24:
 11791                           	opt stack 0
 11792  013932                     ___fldiv:
 11793                           	opt stack 26
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;incstack = 0
 11797  013932  0100               	movlb	0	; () banked
 11798  013934  5172               	movf	(___fldiv@b+3)& (0+255),w,b
 11799  013936  0B80               	andlw	128
 11800  013938  0100               	movlb	0	; () banked
 11801  01393A  6F7B               	movwf	___fldiv@sign& (0+255),b
 11802  01393C  0100               	movlb	0	; () banked
 11803  01393E  5172               	movf	(___fldiv@b+3)& (0+255),w,b
 11804  013940  2572               	addwf	(___fldiv@b+3)& (0+255),w,b
 11805  013942  0100               	movlb	0	; () banked
 11806  013944  6F86               	movwf	___fldiv@bexp& (0+255),b
 11807                           
 11808                           ; BSR set to: 0
 11809  013946  0100               	movlb	0	; () banked
 11810  013948  AF71               	btfss	(___fldiv@b+2)& (0+255),7,b
 11811  01394A  D002               	goto	l6138
 11812                           
 11813                           ; BSR set to: 0
 11814  01394C  0100               	movlb	0	; () banked
 11815  01394E  8186               	bsf	___fldiv@bexp& (0+255),0,b
 11816  013950                     l6138:
 11817                           
 11818                           ; BSR set to: 0
 11819  013950  0100               	movlb	0	; () banked
 11820  013952  5186               	movf	___fldiv@bexp& (0+255),w,b
 11821  013954  0100               	movlb	0	; () banked
 11822  013956  B4D8               	btfsc	status,2,c
 11823  013958  D012               	goto	l6148
 11824                           
 11825                           ; BSR set to: 0
 11826  01395A  0100               	movlb	0	; () banked
 11827  01395C  2986               	incf	___fldiv@bexp& (0+255),w,b
 11828  01395E  A4D8               	btfss	status,2,c
 11829  013960  D009               	goto	l6144
 11830                           
 11831                           ; BSR set to: 0
 11832  013962  0E00               	movlw	0
 11833  013964  0100               	movlb	0	; () banked
 11834  013966  6F6F               	movwf	___fldiv@b& (0+255),b
 11835  013968  0E00               	movlw	0
 11836  01396A  6F70               	movwf	(___fldiv@b+1)& (0+255),b
 11837  01396C  0E00               	movlw	0
 11838  01396E  6F71               	movwf	(___fldiv@b+2)& (0+255),b
 11839  013970  0E00               	movlw	0
 11840  013972  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 11841  013974                     l6144:
 11842                           
 11843                           ; BSR set to: 0
 11844  013974  0100               	movlb	0	; () banked
 11845  013976  8F71               	bsf	(___fldiv@b+2)& (0+255),7,b
 11846                           
 11847                           ; BSR set to: 0
 11848  013978  0E00               	movlw	0
 11849  01397A  0100               	movlb	0	; () banked
 11850  01397C  D008               	goto	L12
 11851  01397E                     l6148:
 11852                           
 11853                           ; BSR set to: 0
 11854  01397E  0E00               	movlw	0
 11855  013980  0100               	movlb	0	; () banked
 11856  013982  6F6F               	movwf	___fldiv@b& (0+255),b
 11857  013984  0E00               	movlw	0
 11858  013986  6F70               	movwf	(___fldiv@b+1)& (0+255),b
 11859  013988  0E00               	movlw	0
 11860  01398A  6F71               	movwf	(___fldiv@b+2)& (0+255),b
 11861  01398C  0E00               	movlw	0
 11862  01398E                     L12:
 11863  01398E  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 11864                           
 11865                           ; BSR set to: 0
 11866                           
 11867                           ; BSR set to: 0
 11868  013990  0100               	movlb	0	; () banked
 11869  013992  5176               	movf	(___fldiv@a+3)& (0+255),w,b
 11870  013994  0B80               	andlw	128
 11871  013996  0100               	movlb	0	; () banked
 11872  013998  1B7B               	xorwf	___fldiv@sign& (0+255),f,b
 11873                           
 11874                           ; BSR set to: 0
 11875  01399A  0100               	movlb	0	; () banked
 11876  01399C  5176               	movf	(___fldiv@a+3)& (0+255),w,b
 11877  01399E  2576               	addwf	(___fldiv@a+3)& (0+255),w,b
 11878  0139A0  0100               	movlb	0	; () banked
 11879  0139A2  6F87               	movwf	___fldiv@aexp& (0+255),b
 11880                           
 11881                           ; BSR set to: 0
 11882  0139A4  0100               	movlb	0	; () banked
 11883  0139A6  AF75               	btfss	(___fldiv@a+2)& (0+255),7,b
 11884  0139A8  D002               	goto	l6158
 11885                           
 11886                           ; BSR set to: 0
 11887  0139AA  0100               	movlb	0	; () banked
 11888  0139AC  8187               	bsf	___fldiv@aexp& (0+255),0,b
 11889  0139AE                     l6158:
 11890                           
 11891                           ; BSR set to: 0
 11892  0139AE  0100               	movlb	0	; () banked
 11893  0139B0  5187               	movf	___fldiv@aexp& (0+255),w,b
 11894  0139B2  0100               	movlb	0	; () banked
 11895  0139B4  B4D8               	btfsc	status,2,c
 11896  0139B6  D012               	goto	l6168
 11897                           
 11898                           ; BSR set to: 0
 11899  0139B8  0100               	movlb	0	; () banked
 11900  0139BA  2987               	incf	___fldiv@aexp& (0+255),w,b
 11901  0139BC  A4D8               	btfss	status,2,c
 11902  0139BE  D009               	goto	l6164
 11903                           
 11904                           ; BSR set to: 0
 11905  0139C0  0E00               	movlw	0
 11906  0139C2  0100               	movlb	0	; () banked
 11907  0139C4  6F73               	movwf	___fldiv@a& (0+255),b
 11908  0139C6  0E00               	movlw	0
 11909  0139C8  6F74               	movwf	(___fldiv@a+1)& (0+255),b
 11910  0139CA  0E00               	movlw	0
 11911  0139CC  6F75               	movwf	(___fldiv@a+2)& (0+255),b
 11912  0139CE  0E00               	movlw	0
 11913  0139D0  6F76               	movwf	(___fldiv@a+3)& (0+255),b
 11914  0139D2                     l6164:
 11915                           
 11916                           ; BSR set to: 0
 11917  0139D2  0100               	movlb	0	; () banked
 11918  0139D4  8F75               	bsf	(___fldiv@a+2)& (0+255),7,b
 11919                           
 11920                           ; BSR set to: 0
 11921  0139D6  0E00               	movlw	0
 11922  0139D8  0100               	movlb	0	; () banked
 11923  0139DA  D008               	goto	L13
 11924  0139DC                     l6168:
 11925                           
 11926                           ; BSR set to: 0
 11927  0139DC  0E00               	movlw	0
 11928  0139DE  0100               	movlb	0	; () banked
 11929  0139E0  6F73               	movwf	___fldiv@a& (0+255),b
 11930  0139E2  0E00               	movlw	0
 11931  0139E4  6F74               	movwf	(___fldiv@a+1)& (0+255),b
 11932  0139E6  0E00               	movlw	0
 11933  0139E8  6F75               	movwf	(___fldiv@a+2)& (0+255),b
 11934  0139EA  0E00               	movlw	0
 11935  0139EC                     L13:
 11936  0139EC  6F76               	movwf	(___fldiv@a+3)& (0+255),b
 11937                           
 11938                           ; BSR set to: 0
 11939                           
 11940                           ; BSR set to: 0
 11941  0139EE  0100               	movlb	0	; () banked
 11942  0139F0  5173               	movf	___fldiv@a& (0+255),w,b
 11943  0139F2  0100               	movlb	0	; () banked
 11944  0139F4  1174               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11945  0139F6  0100               	movlb	0	; () banked
 11946  0139F8  1175               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11947  0139FA  0100               	movlb	0	; () banked
 11948  0139FC  1176               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11949  0139FE  A4D8               	btfss	status,2,c
 11950  013A00  D017               	goto	l6180
 11951                           
 11952                           ; BSR set to: 0
 11953  013A02  0E00               	movlw	0
 11954  013A04  0100               	movlb	0	; () banked
 11955  013A06  6F6F               	movwf	___fldiv@b& (0+255),b
 11956  013A08  0E00               	movlw	0
 11957  013A0A  6F70               	movwf	(___fldiv@b+1)& (0+255),b
 11958  013A0C  0E00               	movlw	0
 11959  013A0E  6F71               	movwf	(___fldiv@b+2)& (0+255),b
 11960  013A10  0E00               	movlw	0
 11961  013A12  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 11962                           
 11963                           ; BSR set to: 0
 11964  013A14  0100               	movlb	0	; () banked
 11965  013A16  0E80               	movlw	128
 11966  013A18  1371               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11967  013A1A  0E7F               	movlw	127
 11968  013A1C  1372               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11969                           
 11970                           ; BSR set to: 0
 11971  013A1E  C06F  F06F         	movff	___fldiv@b,?___fldiv
 11972  013A22  C070  F070         	movff	___fldiv@b+1,?___fldiv+1
 11973  013A26  C071  F071         	movff	___fldiv@b+2,?___fldiv+2
 11974  013A2A  C072  F072         	movff	___fldiv@b+3,?___fldiv+3
 11975                           
 11976                           ; BSR set to: 0
 11977  013A2E  0012               	return	
 11978  013A30                     l6180:
 11979                           
 11980                           ; BSR set to: 0
 11981  013A30  0100               	movlb	0	; () banked
 11982  013A32  5186               	movf	___fldiv@bexp& (0+255),w,b
 11983  013A34  0100               	movlb	0	; () banked
 11984  013A36  A4D8               	btfss	status,2,c
 11985  013A38  D012               	goto	l6188
 11986                           
 11987                           ; BSR set to: 0
 11988  013A3A  0E00               	movlw	0
 11989  013A3C  0100               	movlb	0	; () banked
 11990  013A3E  6F6F               	movwf	___fldiv@b& (0+255),b
 11991  013A40  0E00               	movlw	0
 11992  013A42  6F70               	movwf	(___fldiv@b+1)& (0+255),b
 11993  013A44  0E00               	movlw	0
 11994  013A46  6F71               	movwf	(___fldiv@b+2)& (0+255),b
 11995  013A48  0E00               	movlw	0
 11996  013A4A  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 11997                           
 11998                           ; BSR set to: 0
 11999  013A4C  C06F  F06F         	movff	___fldiv@b,?___fldiv
 12000  013A50  C070  F070         	movff	___fldiv@b+1,?___fldiv+1
 12001  013A54  C071  F071         	movff	___fldiv@b+2,?___fldiv+2
 12002  013A58  C072  F072         	movff	___fldiv@b+3,?___fldiv+3
 12003                           
 12004                           ; BSR set to: 0
 12005  013A5C  0012               	return	
 12006  013A5E                     l6188:
 12007                           
 12008                           ; BSR set to: 0
 12009  013A5E  0100               	movlb	0	; () banked
 12010  013A60  5187               	movf	___fldiv@aexp& (0+255),w,b
 12011  013A62  0100               	movlb	0	; () banked
 12012  013A64  6F77               	movwf	??___fldiv& (0+255),b
 12013  013A66  6B78               	clrf	(??___fldiv+1)& (0+255),b
 12014  013A68  0100               	movlb	0	; () banked
 12015  013A6A  1F77               	comf	??___fldiv& (0+255),f,b
 12016  013A6C  1F78               	comf	(??___fldiv+1)& (0+255),f,b
 12017  013A6E  4B77               	infsnz	??___fldiv& (0+255),f,b
 12018  013A70  2B78               	incf	(??___fldiv+1)& (0+255),f,b
 12019  013A72  0100               	movlb	0	; () banked
 12020  013A74  5186               	movf	___fldiv@bexp& (0+255),w,b
 12021  013A76  0100               	movlb	0	; () banked
 12022  013A78  6F79               	movwf	(??___fldiv+2)& (0+255),b
 12023  013A7A  6B7A               	clrf	(??___fldiv+3)& (0+255),b
 12024  013A7C  0100               	movlb	0	; () banked
 12025  013A7E  5177               	movf	??___fldiv& (0+255),w,b
 12026  013A80  0100               	movlb	0	; () banked
 12027  013A82  2779               	addwf	(??___fldiv+2)& (0+255),f,b
 12028  013A84  0100               	movlb	0	; () banked
 12029  013A86  5178               	movf	(??___fldiv+1)& (0+255),w,b
 12030  013A88  0100               	movlb	0	; () banked
 12031  013A8A  237A               	addwfc	(??___fldiv+3)& (0+255),f,b
 12032  013A8C  0E7F               	movlw	127
 12033  013A8E  0100               	movlb	0	; () banked
 12034  013A90  2579               	addwf	(??___fldiv+2)& (0+255),w,b
 12035  013A92  0100               	movlb	0	; () banked
 12036  013A94  6F80               	movwf	___fldiv@new_exp& (0+255),b
 12037  013A96  0E00               	movlw	0
 12038  013A98  0100               	movlb	0	; () banked
 12039  013A9A  217A               	addwfc	(??___fldiv+3)& (0+255),w,b
 12040  013A9C  0100               	movlb	0	; () banked
 12041  013A9E  6F81               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12042                           
 12043                           ; BSR set to: 0
 12044  013AA0  C06F  F07C         	movff	___fldiv@b,___fldiv@rem
 12045  013AA4  C070  F07D         	movff	___fldiv@b+1,___fldiv@rem+1
 12046  013AA8  C071  F07E         	movff	___fldiv@b+2,___fldiv@rem+2
 12047  013AAC  C072  F07F         	movff	___fldiv@b+3,___fldiv@rem+3
 12048                           
 12049                           ; BSR set to: 0
 12050  013AB0  0E00               	movlw	0
 12051  013AB2  0100               	movlb	0	; () banked
 12052  013AB4  6F6F               	movwf	___fldiv@b& (0+255),b
 12053  013AB6  0E00               	movlw	0
 12054  013AB8  6F70               	movwf	(___fldiv@b+1)& (0+255),b
 12055  013ABA  0E00               	movlw	0
 12056  013ABC  6F71               	movwf	(___fldiv@b+2)& (0+255),b
 12057  013ABE  0E00               	movlw	0
 12058  013AC0  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 12059                           
 12060                           ; BSR set to: 0
 12061  013AC2  0E00               	movlw	0
 12062  013AC4  0100               	movlb	0	; () banked
 12063  013AC6  6F82               	movwf	___fldiv@grs& (0+255),b
 12064  013AC8  0E00               	movlw	0
 12065  013ACA  6F83               	movwf	(___fldiv@grs+1)& (0+255),b
 12066  013ACC  0E00               	movlw	0
 12067  013ACE  6F84               	movwf	(___fldiv@grs+2)& (0+255),b
 12068  013AD0  0E00               	movlw	0
 12069  013AD2  6F85               	movwf	(___fldiv@grs+3)& (0+255),b
 12070                           
 12071                           ; BSR set to: 0
 12072  013AD4  0E00               	movlw	0
 12073  013AD6  0100               	movlb	0	; () banked
 12074  013AD8  6F87               	movwf	___fldiv@aexp& (0+255),b
 12075  013ADA  D042               	goto	l1452
 12076  013ADC                     l6198:
 12077                           
 12078                           ; BSR set to: 0
 12079  013ADC  0100               	movlb	0	; () banked
 12080  013ADE  5187               	movf	___fldiv@aexp& (0+255),w,b
 12081  013AE0  0100               	movlb	0	; () banked
 12082  013AE2  B4D8               	btfsc	status,2,c
 12083  013AE4  D017               	goto	l6206
 12084                           
 12085                           ; BSR set to: 0
 12086  013AE6  0100               	movlb	0	; () banked
 12087  013AE8  90D8               	bcf	status,0,c
 12088  013AEA  377C               	rlcf	___fldiv@rem& (0+255),f,b
 12089  013AEC  377D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12090  013AEE  377E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12091  013AF0  377F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12092  013AF2  0100               	movlb	0	; () banked
 12093  013AF4  90D8               	bcf	status,0,c
 12094  013AF6  376F               	rlcf	___fldiv@b& (0+255),f,b
 12095  013AF8  3770               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12096  013AFA  3771               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12097  013AFC  3772               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12098                           
 12099                           ; BSR set to: 0
 12100  013AFE  0100               	movlb	0	; () banked
 12101  013B00  AF85               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12102  013B02  D002               	goto	l1455
 12103                           
 12104                           ; BSR set to: 0
 12105  013B04  0100               	movlb	0	; () banked
 12106  013B06  816F               	bsf	___fldiv@b& (0+255),0,b
 12107  013B08                     l1455:
 12108                           
 12109                           ; BSR set to: 0
 12110  013B08  0100               	movlb	0	; () banked
 12111  013B0A  90D8               	bcf	status,0,c
 12112  013B0C  3782               	rlcf	___fldiv@grs& (0+255),f,b
 12113  013B0E  3783               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12114  013B10  3784               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12115  013B12  3785               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12116  013B14                     l6206:
 12117                           
 12118                           ; BSR set to: 0
 12119  013B14  0100               	movlb	0	; () banked
 12120  013B16  5173               	movf	___fldiv@a& (0+255),w,b
 12121  013B18  0100               	movlb	0	; () banked
 12122  013B1A  5D7C               	subwf	___fldiv@rem& (0+255),w,b
 12123  013B1C  0100               	movlb	0	; () banked
 12124  013B1E  5174               	movf	(___fldiv@a+1)& (0+255),w,b
 12125  013B20  0100               	movlb	0	; () banked
 12126  013B22  597D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12127  013B24  0100               	movlb	0	; () banked
 12128  013B26  5175               	movf	(___fldiv@a+2)& (0+255),w,b
 12129  013B28  0100               	movlb	0	; () banked
 12130  013B2A  597E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12131  013B2C  0100               	movlb	0	; () banked
 12132  013B2E  5176               	movf	(___fldiv@a+3)& (0+255),w,b
 12133  013B30  0100               	movlb	0	; () banked
 12134  013B32  597F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12135  013B34  A0D8               	btfss	status,0,c
 12136  013B36  D012               	goto	l6212
 12137                           
 12138                           ; BSR set to: 0
 12139  013B38  0100               	movlb	0	; () banked
 12140  013B3A  8D85               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12141                           
 12142                           ; BSR set to: 0
 12143  013B3C  0100               	movlb	0	; () banked
 12144  013B3E  5173               	movf	___fldiv@a& (0+255),w,b
 12145  013B40  0100               	movlb	0	; () banked
 12146  013B42  5F7C               	subwf	___fldiv@rem& (0+255),f,b
 12147  013B44  0100               	movlb	0	; () banked
 12148  013B46  5174               	movf	(___fldiv@a+1)& (0+255),w,b
 12149  013B48  0100               	movlb	0	; () banked
 12150  013B4A  5B7D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12151  013B4C  0100               	movlb	0	; () banked
 12152  013B4E  5175               	movf	(___fldiv@a+2)& (0+255),w,b
 12153  013B50  0100               	movlb	0	; () banked
 12154  013B52  5B7E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12155  013B54  0100               	movlb	0	; () banked
 12156  013B56  5176               	movf	(___fldiv@a+3)& (0+255),w,b
 12157  013B58  0100               	movlb	0	; () banked
 12158  013B5A  5B7F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12159  013B5C                     l6212:
 12160                           
 12161                           ; BSR set to: 0
 12162  013B5C  0100               	movlb	0	; () banked
 12163  013B5E  2B87               	incf	___fldiv@aexp& (0+255),f,b
 12164  013B60                     l1452:
 12165                           
 12166                           ; BSR set to: 0
 12167  013B60  0E19               	movlw	25
 12168  013B62  0100               	movlb	0	; () banked
 12169  013B64  6587               	cpfsgt	___fldiv@aexp& (0+255),b
 12170  013B66  D7BA               	goto	l6198
 12171                           
 12172                           ; BSR set to: 0
 12173                           
 12174                           ; BSR set to: 0
 12175  013B68  0100               	movlb	0	; () banked
 12176  013B6A  517C               	movf	___fldiv@rem& (0+255),w,b
 12177  013B6C  0100               	movlb	0	; () banked
 12178  013B6E  117D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12179  013B70  0100               	movlb	0	; () banked
 12180  013B72  117E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12181  013B74  0100               	movlb	0	; () banked
 12182  013B76  117F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12183  013B78  B4D8               	btfsc	status,2,c
 12184  013B7A  D018               	goto	l6224
 12185                           
 12186                           ; BSR set to: 0
 12187  013B7C  0100               	movlb	0	; () banked
 12188  013B7E  8182               	bsf	___fldiv@grs& (0+255),0,b
 12189                           
 12190                           ; BSR set to: 0
 12191  013B80  D015               	goto	l6224
 12192  013B82                     l6218:
 12193                           
 12194                           ; BSR set to: 0
 12195  013B82  0100               	movlb	0	; () banked
 12196  013B84  90D8               	bcf	status,0,c
 12197  013B86  376F               	rlcf	___fldiv@b& (0+255),f,b
 12198  013B88  3770               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12199  013B8A  3771               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12200  013B8C  3772               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12201                           
 12202                           ; BSR set to: 0
 12203  013B8E  0100               	movlb	0	; () banked
 12204  013B90  AF85               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12205  013B92  D002               	goto	l1461
 12206                           
 12207                           ; BSR set to: 0
 12208  013B94  0100               	movlb	0	; () banked
 12209  013B96  816F               	bsf	___fldiv@b& (0+255),0,b
 12210  013B98                     l1461:
 12211                           
 12212                           ; BSR set to: 0
 12213  013B98  0100               	movlb	0	; () banked
 12214  013B9A  90D8               	bcf	status,0,c
 12215  013B9C  3782               	rlcf	___fldiv@grs& (0+255),f,b
 12216  013B9E  3783               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12217  013BA0  3784               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12218  013BA2  3785               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12219  013BA4  0100               	movlb	0	; () banked
 12220  013BA6  0780               	decf	___fldiv@new_exp& (0+255),f,b
 12221  013BA8  A0D8               	btfss	status,0,c
 12222  013BAA  0781               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12223  013BAC                     l6224:
 12224                           
 12225                           ; BSR set to: 0
 12226  013BAC  0100               	movlb	0	; () banked
 12227  013BAE  AF71               	btfss	(___fldiv@b+2)& (0+255),7,b
 12228  013BB0  D7E8               	goto	l6218
 12229                           
 12230                           ; BSR set to: 0
 12231                           
 12232                           ; BSR set to: 0
 12233  013BB2  0E00               	movlw	0
 12234  013BB4  0100               	movlb	0	; () banked
 12235  013BB6  6F87               	movwf	___fldiv@aexp& (0+255),b
 12236                           
 12237                           ; BSR set to: 0
 12238  013BB8  0100               	movlb	0	; () banked
 12239  013BBA  AF85               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12240  013BBC  D024               	goto	l1463
 12241                           
 12242                           ; BSR set to: 0
 12243  013BBE  0EFF               	movlw	255
 12244  013BC0  0100               	movlb	0	; () banked
 12245  013BC2  1582               	andwf	___fldiv@grs& (0+255),w,b
 12246  013BC4  0100               	movlb	0	; () banked
 12247  013BC6  6F77               	movwf	??___fldiv& (0+255),b
 12248  013BC8  0EFF               	movlw	255
 12249  013BCA  0100               	movlb	0	; () banked
 12250  013BCC  1583               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12251  013BCE  0100               	movlb	0	; () banked
 12252  013BD0  6F78               	movwf	(??___fldiv+1)& (0+255),b
 12253  013BD2  0EFF               	movlw	255
 12254  013BD4  0100               	movlb	0	; () banked
 12255  013BD6  1584               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12256  013BD8  0100               	movlb	0	; () banked
 12257  013BDA  6F79               	movwf	(??___fldiv+2)& (0+255),b
 12258  013BDC  0E7F               	movlw	127
 12259  013BDE  0100               	movlb	0	; () banked
 12260  013BE0  1585               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12261  013BE2  0100               	movlb	0	; () banked
 12262  013BE4  6F7A               	movwf	(??___fldiv+3)& (0+255),b
 12263  013BE6  0100               	movlb	0	; () banked
 12264  013BE8  5177               	movf	??___fldiv& (0+255),w,b
 12265  013BEA  0100               	movlb	0	; () banked
 12266  013BEC  1178               	iorwf	(??___fldiv+1)& (0+255),w,b
 12267  013BEE  0100               	movlb	0	; () banked
 12268  013BF0  1179               	iorwf	(??___fldiv+2)& (0+255),w,b
 12269  013BF2  0100               	movlb	0	; () banked
 12270  013BF4  117A               	iorwf	(??___fldiv+3)& (0+255),w,b
 12271  013BF6  A4D8               	btfss	status,2,c
 12272  013BF8  D003               	goto	l6234
 12273                           
 12274                           ; BSR set to: 0
 12275                           
 12276                           ; BSR set to: 0
 12277  013BFA  0100               	movlb	0	; () banked
 12278  013BFC  A16F               	btfss	___fldiv@b& (0+255),0,b
 12279  013BFE  D003               	goto	l1463
 12280  013C00                     l6234:
 12281                           
 12282                           ; BSR set to: 0
 12283  013C00  0E01               	movlw	1
 12284  013C02  0100               	movlb	0	; () banked
 12285  013C04  6F87               	movwf	___fldiv@aexp& (0+255),b
 12286  013C06                     l1463:
 12287                           
 12288                           ; BSR set to: 0
 12289  013C06  0100               	movlb	0	; () banked
 12290  013C08  5187               	movf	___fldiv@aexp& (0+255),w,b
 12291  013C0A  0100               	movlb	0	; () banked
 12292  013C0C  B4D8               	btfsc	status,2,c
 12293  013C0E  D023               	goto	l6244
 12294                           
 12295                           ; BSR set to: 0
 12296  013C10  0E01               	movlw	1
 12297  013C12  0100               	movlb	0	; () banked
 12298  013C14  276F               	addwf	___fldiv@b& (0+255),f,b
 12299  013C16  0E00               	movlw	0
 12300  013C18  2370               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12301  013C1A  2371               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12302  013C1C  2372               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12303                           
 12304                           ; BSR set to: 0
 12305  013C1E  0100               	movlb	0	; () banked
 12306  013C20  A172               	btfss	(___fldiv@b+3)& (0+255),0,b
 12307  013C22  D019               	goto	l6244
 12308                           
 12309                           ; BSR set to: 0
 12310  013C24  C06F  F077         	movff	___fldiv@b,??___fldiv
 12311  013C28  C070  F078         	movff	___fldiv@b+1,??___fldiv+1
 12312  013C2C  C071  F079         	movff	___fldiv@b+2,??___fldiv+2
 12313  013C30  C072  F07A         	movff	___fldiv@b+3,??___fldiv+3
 12314  013C34  0100               	movlb	0	; () banked
 12315  013C36  357A               	rlcf	(??___fldiv+3)& (0+255),w,b
 12316  013C38  337A               	rrcf	(??___fldiv+3)& (0+255),f,b
 12317  013C3A  3379               	rrcf	(??___fldiv+2)& (0+255),f,b
 12318  013C3C  3378               	rrcf	(??___fldiv+1)& (0+255),f,b
 12319  013C3E  3377               	rrcf	??___fldiv& (0+255),f,b
 12320  013C40  C077  F06F         	movff	??___fldiv,___fldiv@b
 12321  013C44  C078  F070         	movff	??___fldiv+1,___fldiv@b+1
 12322  013C48  C079  F071         	movff	??___fldiv+2,___fldiv@b+2
 12323  013C4C  C07A  F072         	movff	??___fldiv+3,___fldiv@b+3
 12324                           
 12325                           ; BSR set to: 0
 12326  013C50  0100               	movlb	0	; () banked
 12327  013C52  4B80               	infsnz	___fldiv@new_exp& (0+255),f,b
 12328  013C54  2B81               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12329  013C56                     l6244:
 12330                           
 12331                           ; BSR set to: 0
 12332  013C56  0100               	movlb	0	; () banked
 12333  013C58  BF81               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12334  013C5A  D014               	goto	l6248
 12335  013C5C  0100               	movlb	0	; () banked
 12336  013C5E  5181               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12337  013C60  E104               	bnz	u7770
 12338  013C62  0100               	movlb	0	; () banked
 12339  013C64  2980               	incf	___fldiv@new_exp& (0+255),w,b
 12340  013C66  A0D8               	btfss	status,0,c
 12341  013C68  D00D               	goto	l6248
 12342  013C6A                     u7770:
 12343                           
 12344                           ; BSR set to: 0
 12345  013C6A  0E00               	movlw	0
 12346  013C6C  0100               	movlb	0	; () banked
 12347  013C6E  6F81               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12348  013C70  6980               	setf	___fldiv@new_exp& (0+255),b
 12349  013C72  0E00               	movlw	0
 12350  013C74  0100               	movlb	0	; () banked
 12351  013C76  6F6F               	movwf	___fldiv@b& (0+255),b
 12352  013C78  0E00               	movlw	0
 12353  013C7A  6F70               	movwf	(___fldiv@b+1)& (0+255),b
 12354  013C7C  0E00               	movlw	0
 12355  013C7E  6F71               	movwf	(___fldiv@b+2)& (0+255),b
 12356  013C80  0E00               	movlw	0
 12357  013C82  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 12358  013C84                     l6248:
 12359                           
 12360                           ; BSR set to: 0
 12361  013C84  0100               	movlb	0	; () banked
 12362  013C86  BF81               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12363  013C88  D007               	goto	l6250
 12364  013C8A  0100               	movlb	0	; () banked
 12365  013C8C  5181               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12366  013C8E  E115               	bnz	l6252
 12367  013C90  0100               	movlb	0	; () banked
 12368  013C92  0580               	decf	___fldiv@new_exp& (0+255),w,b
 12369  013C94  B0D8               	btfsc	status,0,c
 12370  013C96  D011               	goto	l6252
 12371  013C98                     l6250:
 12372                           
 12373                           ; BSR set to: 0
 12374  013C98  0E00               	movlw	0
 12375  013C9A  0100               	movlb	0	; () banked
 12376  013C9C  6F81               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12377  013C9E  0E00               	movlw	0
 12378  013CA0  6F80               	movwf	___fldiv@new_exp& (0+255),b
 12379  013CA2  0E00               	movlw	0
 12380  013CA4  0100               	movlb	0	; () banked
 12381  013CA6  6F6F               	movwf	___fldiv@b& (0+255),b
 12382  013CA8  0E00               	movlw	0
 12383  013CAA  6F70               	movwf	(___fldiv@b+1)& (0+255),b
 12384  013CAC  0E00               	movlw	0
 12385  013CAE  6F71               	movwf	(___fldiv@b+2)& (0+255),b
 12386  013CB0  0E00               	movlw	0
 12387  013CB2  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 12388  013CB4  0E00               	movlw	0
 12389  013CB6  0100               	movlb	0	; () banked
 12390  013CB8  6F7B               	movwf	___fldiv@sign& (0+255),b
 12391  013CBA                     l6252:
 12392                           
 12393                           ; BSR set to: 0
 12394  013CBA  C080  F086         	movff	___fldiv@new_exp,___fldiv@bexp
 12395                           
 12396                           ; BSR set to: 0
 12397  013CBE  0100               	movlb	0	; () banked
 12398  013CC0  A186               	btfss	___fldiv@bexp& (0+255),0,b
 12399  013CC2  D003               	goto	l6258
 12400                           
 12401                           ; BSR set to: 0
 12402  013CC4  0100               	movlb	0	; () banked
 12403  013CC6  8F71               	bsf	(___fldiv@b+2)& (0+255),7,b
 12404  013CC8  D002               	goto	l6260
 12405  013CCA                     l6258:
 12406                           
 12407                           ; BSR set to: 0
 12408  013CCA  0100               	movlb	0	; () banked
 12409  013CCC  9F71               	bcf	(___fldiv@b+2)& (0+255),7,b
 12410  013CCE                     l6260:
 12411                           
 12412                           ; BSR set to: 0
 12413  013CCE  0100               	movlb	0	; () banked
 12414  013CD0  90D8               	bcf	status,0,c
 12415  013CD2  3186               	rrcf	___fldiv@bexp& (0+255),w,b
 12416  013CD4  0100               	movlb	0	; () banked
 12417  013CD6  6F72               	movwf	(___fldiv@b+3)& (0+255),b
 12418                           
 12419                           ; BSR set to: 0
 12420  013CD8  0100               	movlb	0	; () banked
 12421  013CDA  517B               	movf	___fldiv@sign& (0+255),w,b
 12422  013CDC  0100               	movlb	0	; () banked
 12423  013CDE  1372               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12424                           
 12425                           ; BSR set to: 0
 12426  013CE0  C06F  F06F         	movff	___fldiv@b,?___fldiv
 12427  013CE4  C070  F070         	movff	___fldiv@b+1,?___fldiv+1
 12428  013CE8  C071  F071         	movff	___fldiv@b+2,?___fldiv+2
 12429  013CEC  C072  F072         	movff	___fldiv@b+3,?___fldiv+3
 12430  013CF0  0012               	return	
 12431  013CF2                     __end_of___fldiv:
 12432                           	opt stack 0
 12433                           tblptru	equ	0xFF8
 12434                           tblptrh	equ	0xFF7
 12435                           tblptrl	equ	0xFF6
 12436                           tablat	equ	0xFF5
 12437                           prodh	equ	0xFF4
 12438                           prodl	equ	0xFF3
 12439                           intcon	equ	0xFF2
 12440                           postinc0	equ	0xFEE
 12441                           wreg	equ	0xFE8
 12442                           indf2	equ	0xFDF
 12443                           postinc2	equ	0xFDE
 12444                           fsr2h	equ	0xFDA
 12445                           fsr2l	equ	0xFD9
 12446                           status	equ	0xFD8
 12447                           
 12448 ;; *************** function _LCD_write_string *****************
 12449 ;; Defined at:
 12450 ;;		line 194 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  buffer          2   32[BANK0 ] PTR unsigned char 
 12453 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;		None
 12456 ;; Return value:  Size  Location     Type
 12457 ;;		None               void
 12458 ;; Registers used:
 12459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;Total ram usage:        2 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:    8
 12472 ;; This function calls:
 12473 ;;		_LCD_write_char
 12474 ;; This function is called by:
 12475 ;;		_LCD_Handler
 12476 ;;		_LCD_write_integer
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	text25
 12481  0159B6                     __ptext25:
 12482                           	opt stack 0
 12483  0159B6                     _LCD_write_string:
 12484                           	opt stack 21
 12485                           
 12486                           ;src\LCD_44780.c: 197: while(*buffer){
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;incstack = 0
 12490  0159B6  D00A               	goto	l7880
 12491  0159B8                     l7876:
 12492                           
 12493                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 12494  0159B8  C080  FFD9         	movff	LCD_write_string@buffer,fsr2l
 12495  0159BC  C081  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 12496  0159C0  50DF               	movf	indf2,w,c
 12497  0159C2  EC0E  F0AB         	call	_LCD_write_char
 12498                           
 12499                           ;src\LCD_44780.c: 202: buffer++;
 12500  0159C6  0100               	movlb	0	; () banked
 12501  0159C8  4B80               	infsnz	LCD_write_string@buffer& (0+255),f,b
 12502  0159CA  2B81               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 12503  0159CC                     l7880:
 12504  0159CC  C080  FFD9         	movff	LCD_write_string@buffer,fsr2l
 12505  0159D0  C081  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 12506  0159D4  50DF               	movf	indf2,w,c
 12507  0159D6  B4D8               	btfsc	status,2,c
 12508  0159D8  0012               	return	
 12509  0159DA  D7EE               	goto	l7876
 12510  0159DC                     __end_of_LCD_write_string:
 12511                           	opt stack 0
 12512                           tblptru	equ	0xFF8
 12513                           tblptrh	equ	0xFF7
 12514                           tblptrl	equ	0xFF6
 12515                           tablat	equ	0xFF5
 12516                           prodh	equ	0xFF4
 12517                           prodl	equ	0xFF3
 12518                           intcon	equ	0xFF2
 12519                           postinc0	equ	0xFEE
 12520                           wreg	equ	0xFE8
 12521                           indf2	equ	0xFDF
 12522                           postinc2	equ	0xFDE
 12523                           fsr2h	equ	0xFDA
 12524                           fsr2l	equ	0xFD9
 12525                           status	equ	0xFD8
 12526                           
 12527 ;; *************** function _LCD_write_message *****************
 12528 ;; Defined at:
 12529 ;;		line 178 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;  buffer          2   32[BANK0 ] PTR const unsigned char 
 12532 ;;		 -> STR_14(14), STR_13(8), STR_12(21), STR_11(5), 
 12533 ;;		 -> STR_9(2), STR_8(5), STR_7(4), STR_6(12), 
 12534 ;;		 -> STR_5(21), STR_4(21), STR_3(21), STR_2(21), 
 12535 ;;		 -> STR_1(21), 
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;		None
 12538 ;; Return value:  Size  Location     Type
 12539 ;;		None               void
 12540 ;; Registers used:
 12541 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/0
 12544 ;;		On exit  : 0/0
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;Total ram usage:        2 bytes
 12552 ;; Hardware stack levels used:    1
 12553 ;; Hardware stack levels required when called:    8
 12554 ;; This function calls:
 12555 ;;		_LCD_write_char
 12556 ;; This function is called by:
 12557 ;;		_main
 12558 ;;		_LCD_Handler
 12559 ;;		_board_initialization
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text26
 12564  0158F4                     __ptext26:
 12565                           	opt stack 0
 12566  0158F4                     _LCD_write_message:
 12567                           	opt stack 21
 12568                           
 12569                           ;src\LCD_44780.c: 181: while(*buffer) {
 12570                           
 12571                           ;incstack = 0
 12572  0158F4  D00D               	goto	l7872
 12573  0158F6                     l7868:
 12574                           
 12575                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 12576  0158F6  C080  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12577  0158FA  C081  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12578  0158FE                     	if	0	;tblptru may be non-zero
 12579  0158FE                     	endif
 12580  0158FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12581  0158FE  0E00               	movlw	low (__mediumconst shr (0+16))
 12582  015900  6EF8               	movwf	tblptru,c
 12583  015902                     	endif
 12584  015902  0008               	tblrd		*
 12585  015904  50F5               	movf	tablat,w,c
 12586  015906  EC0E  F0AB         	call	_LCD_write_char
 12587                           
 12588                           ;src\LCD_44780.c: 186: buffer++;
 12589  01590A  0100               	movlb	0	; () banked
 12590  01590C  4B80               	infsnz	LCD_write_message@buffer& (0+255),f,b
 12591  01590E  2B81               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 12592  015910                     l7872:
 12593  015910  C080  FFF6         	movff	LCD_write_message@buffer,tblptrl
 12594  015914  C081  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 12595  015918                     	if	0	;tblptru may be non-zero
 12596  015918                     	endif
 12597  015918                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12598  015918  0E00               	movlw	low (__mediumconst shr (0+16))
 12599  01591A  6EF8               	movwf	tblptru,c
 12600  01591C                     	endif
 12601  01591C  0008               	tblrd		*
 12602  01591E  50F5               	movf	tablat,w,c
 12603  015920  0900               	iorlw	0
 12604  015922  B4D8               	btfsc	status,2,c
 12605  015924  0012               	return	
 12606  015926  D7E7               	goto	l7868
 12607  015928                     __end_of_LCD_write_message:
 12608                           	opt stack 0
 12609                           tblptru	equ	0xFF8
 12610                           tblptrh	equ	0xFF7
 12611                           tblptrl	equ	0xFF6
 12612                           tablat	equ	0xFF5
 12613                           prodh	equ	0xFF4
 12614                           prodl	equ	0xFF3
 12615                           intcon	equ	0xFF2
 12616                           postinc0	equ	0xFEE
 12617                           wreg	equ	0xFE8
 12618                           indf2	equ	0xFDF
 12619                           postinc2	equ	0xFDE
 12620                           fsr2h	equ	0xFDA
 12621                           fsr2l	equ	0xFD9
 12622                           status	equ	0xFD8
 12623                           
 12624 ;; *************** function _LCD_write_char *****************
 12625 ;; Defined at:
 12626 ;;		line 145 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;  value           1    wreg     unsigned char 
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;  value           1   31[BANK0 ] unsigned char 
 12631 ;;  D0              1   30[BANK0 ] unsigned char 
 12632 ;;  D1              1   29[BANK0 ] unsigned char 
 12633 ;;  D2              1   28[BANK0 ] unsigned char 
 12634 ;;  D3              1   27[BANK0 ] unsigned char 
 12635 ;; Return value:  Size  Location     Type
 12636 ;;		None               void
 12637 ;; Registers used:
 12638 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;Total ram usage:        5 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:    7
 12651 ;; This function calls:
 12652 ;;		_LCD_send_command
 12653 ;; This function is called by:
 12654 ;;		_LCD_write_message
 12655 ;;		_LCD_write_string
 12656 ;; This function uses a non-reentrant model
 12657 ;;
 12658                           
 12659                           	psect	text27
 12660  01561C                     __ptext27:
 12661                           	opt stack 0
 12662  01561C                     _LCD_write_char:
 12663                           	opt stack 21
 12664                           
 12665                           ;incstack = 0
 12666                           ;LCD_write_char@value stored from wreg
 12667  01561C  0100               	movlb	0	; () banked
 12668  01561E  6F7F               	movwf	LCD_write_char@value& (0+255),b
 12669                           
 12670                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 12671                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 12672  015620  848D               	bsf	3981,2,c	;volatile
 12673                           
 12674                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 12675  015622  0100               	movlb	0	; () banked
 12676  015624  457F               	rlncf	LCD_write_char@value& (0+255),w,b
 12677  015626  0B01               	andlw	1
 12678  015628  0100               	movlb	0	; () banked
 12679  01562A  6F7B               	movwf	LCD_write_char@D3& (0+255),b
 12680                           
 12681                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 12682  01562C  0100               	movlb	0	; () banked
 12683  01562E  457F               	rlncf	LCD_write_char@value& (0+255),w,b
 12684  015630  46E8               	rlncf	wreg,f,c
 12685  015632  0B03               	andlw	3
 12686  015634  0B01               	andlw	1
 12687  015636  0100               	movlb	0	; () banked
 12688  015638  6F7C               	movwf	LCD_write_char@D2& (0+255),b
 12689                           
 12690                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 12691  01563A  0100               	movlb	0	; () banked
 12692  01563C  397F               	swapf	LCD_write_char@value& (0+255),w,b
 12693  01563E  42E8               	rrncf	wreg,f,c
 12694  015640  0B07               	andlw	7
 12695  015642  0B01               	andlw	1
 12696  015644  0100               	movlb	0	; () banked
 12697  015646  6F7D               	movwf	LCD_write_char@D1& (0+255),b
 12698                           
 12699                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 12700  015648  0100               	movlb	0	; () banked
 12701  01564A  397F               	swapf	LCD_write_char@value& (0+255),w,b
 12702  01564C  0B0F               	andlw	15
 12703  01564E  0B01               	andlw	1
 12704  015650  0100               	movlb	0	; () banked
 12705  015652  6F7E               	movwf	LCD_write_char@D0& (0+255),b
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 12709  015654  C07C  F077         	movff	LCD_write_char@D2,LCD_send_command@D2
 12710  015658  C07D  F078         	movff	LCD_write_char@D1,LCD_send_command@D1
 12711  01565C  C07E  F079         	movff	LCD_write_char@D0,LCD_send_command@D0
 12712  015660  0100               	movlb	0	; () banked
 12713  015662  517B               	movf	LCD_write_char@D3& (0+255),w,b
 12714  015664  EC09  F0AC         	call	_LCD_send_command
 12715                           
 12716                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 12717  015668  0100               	movlb	0	; () banked
 12718  01566A  397F               	swapf	LCD_write_char@value& (0+255),w,b
 12719  01566C  46E8               	rlncf	wreg,f,c
 12720  01566E  0B1F               	andlw	31
 12721  015670  0B01               	andlw	1
 12722  015672  0100               	movlb	0	; () banked
 12723  015674  6F7B               	movwf	LCD_write_char@D3& (0+255),b
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 12727  015676  0100               	movlb	0	; () banked
 12728  015678  417F               	rrncf	LCD_write_char@value& (0+255),w,b
 12729  01567A  42E8               	rrncf	wreg,f,c
 12730  01567C  0B3F               	andlw	63
 12731  01567E  0B01               	andlw	1
 12732  015680  0100               	movlb	0	; () banked
 12733  015682  6F7C               	movwf	LCD_write_char@D2& (0+255),b
 12734                           
 12735                           ; BSR set to: 0
 12736                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 12737  015684  0100               	movlb	0	; () banked
 12738  015686  90D8               	bcf	status,0,c
 12739  015688  317F               	rrcf	LCD_write_char@value& (0+255),w,b
 12740  01568A  0B01               	andlw	1
 12741  01568C  0100               	movlb	0	; () banked
 12742  01568E  6F7D               	movwf	LCD_write_char@D1& (0+255),b
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 12746  015690  0100               	movlb	0	; () banked
 12747  015692  517F               	movf	LCD_write_char@value& (0+255),w,b
 12748  015694  0B01               	andlw	1
 12749  015696  0100               	movlb	0	; () banked
 12750  015698  6F7E               	movwf	LCD_write_char@D0& (0+255),b
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 12754  01569A  C07C  F077         	movff	LCD_write_char@D2,LCD_send_command@D2
 12755  01569E  C07D  F078         	movff	LCD_write_char@D1,LCD_send_command@D1
 12756  0156A2  C07E  F079         	movff	LCD_write_char@D0,LCD_send_command@D0
 12757  0156A6  0100               	movlb	0	; () banked
 12758  0156A8  517B               	movf	LCD_write_char@D3& (0+255),w,b
 12759  0156AA  EC09  F0AC         	call	_LCD_send_command
 12760                           
 12761                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 12762  0156AE  948D               	bcf	3981,2,c	;volatile
 12763  0156B0  0012               	return		;funcret
 12764  0156B2                     __end_of_LCD_write_char:
 12765                           	opt stack 0
 12766                           tblptru	equ	0xFF8
 12767                           tblptrh	equ	0xFF7
 12768                           tblptrl	equ	0xFF6
 12769                           tablat	equ	0xFF5
 12770                           prodh	equ	0xFF4
 12771                           prodl	equ	0xFF3
 12772                           intcon	equ	0xFF2
 12773                           postinc0	equ	0xFEE
 12774                           wreg	equ	0xFE8
 12775                           indf2	equ	0xFDF
 12776                           postinc2	equ	0xFDE
 12777                           fsr2h	equ	0xFDA
 12778                           fsr2l	equ	0xFD9
 12779                           status	equ	0xFD8
 12780                           
 12781 ;; *************** function _LCD_initialize *****************
 12782 ;; Defined at:
 12783 ;;		line 283 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 12784 ;; Parameters:    Size  Location     Type
 12785 ;;  quartz_frequ    1    wreg     unsigned char 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;  quartz_frequ    1   29[BANK0 ] unsigned char 
 12788 ;; Return value:  Size  Location     Type
 12789 ;;		None               void
 12790 ;; Registers used:
 12791 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12792 ;; Tracked objects:
 12793 ;;		On entry : 0/0
 12794 ;;		On exit  : 0/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12801 ;;Total ram usage:        1 bytes
 12802 ;; Hardware stack levels used:    1
 12803 ;; Hardware stack levels required when called:    8
 12804 ;; This function calls:
 12805 ;;		_LCD_clear
 12806 ;;		_LCD_cursor
 12807 ;;		_LCD_send_command
 12808 ;;		_delay_ms
 12809 ;;		_delay_set_quartz
 12810 ;; This function is called by:
 12811 ;;		_main
 12812 ;;		_LCD_Handler
 12813 ;;		_board_initialization
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text28
 12818  014BD0                     __ptext28:
 12819                           	opt stack 0
 12820  014BD0                     _LCD_initialize:
 12821                           	opt stack 21
 12822                           
 12823                           ;incstack = 0
 12824                           ;LCD_initialize@quartz_frequency stored from wreg
 12825  014BD0  0100               	movlb	0	; () banked
 12826  014BD2  6F7D               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 12827                           
 12828                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 12829  014BD4  0100               	movlb	0	; () banked
 12830  014BD6  517D               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 12831  014BD8  EC44  F0AD         	call	_delay_set_quartz
 12832                           
 12833                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 12834  014BDC  948D               	bcf	3981,2,c	;volatile
 12835                           
 12836                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 12837  014BDE  928B               	bcf	3979,1,c	;volatile
 12838                           
 12839                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 12840  014BE0  908B               	bcf	3979,0,c	;volatile
 12841                           
 12842                           ;src\LCD_44780.c: 291: delay_ms (100);
 12843  014BE2  0E00               	movlw	0
 12844  014BE4  0100               	movlb	0	; () banked
 12845  014BE6  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 12846  014BE8  0E64               	movlw	100
 12847  014BEA  6F75               	movwf	delay_ms@value_ms& (0+255),b
 12848  014BEC  EC26  F0AC         	call	_delay_ms	;wreg free
 12849                           
 12850                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 12851  014BF0  0E00               	movlw	0
 12852  014BF2  0100               	movlb	0	; () banked
 12853  014BF4  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12854  014BF6  0E01               	movlw	1
 12855  014BF8  0100               	movlb	0	; () banked
 12856  014BFA  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12857  014BFC  0E01               	movlw	1
 12858  014BFE  0100               	movlb	0	; () banked
 12859  014C00  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12860  014C02  0E00               	movlw	0
 12861  014C04  EC09  F0AC         	call	_LCD_send_command
 12862                           
 12863                           ;src\LCD_44780.c: 293: delay_ms (100);
 12864  014C08  0E00               	movlw	0
 12865  014C0A  0100               	movlb	0	; () banked
 12866  014C0C  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 12867  014C0E  0E64               	movlw	100
 12868  014C10  6F75               	movwf	delay_ms@value_ms& (0+255),b
 12869  014C12  EC26  F0AC         	call	_delay_ms	;wreg free
 12870                           
 12871                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 12872  014C16  0E00               	movlw	0
 12873  014C18  0100               	movlb	0	; () banked
 12874  014C1A  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12875  014C1C  0E01               	movlw	1
 12876  014C1E  0100               	movlb	0	; () banked
 12877  014C20  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12878  014C22  0E01               	movlw	1
 12879  014C24  0100               	movlb	0	; () banked
 12880  014C26  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12881  014C28  0E00               	movlw	0
 12882  014C2A  EC09  F0AC         	call	_LCD_send_command
 12883                           
 12884                           ;src\LCD_44780.c: 295: delay_ms (10);
 12885  014C2E  0E00               	movlw	0
 12886  014C30  0100               	movlb	0	; () banked
 12887  014C32  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 12888  014C34  0E0A               	movlw	10
 12889  014C36  6F75               	movwf	delay_ms@value_ms& (0+255),b
 12890  014C38  EC26  F0AC         	call	_delay_ms	;wreg free
 12891                           
 12892                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 12893  014C3C  0E00               	movlw	0
 12894  014C3E  0100               	movlb	0	; () banked
 12895  014C40  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12896  014C42  0E01               	movlw	1
 12897  014C44  0100               	movlb	0	; () banked
 12898  014C46  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12899  014C48  0E01               	movlw	1
 12900  014C4A  0100               	movlb	0	; () banked
 12901  014C4C  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12902  014C4E  0E00               	movlw	0
 12903  014C50  EC09  F0AC         	call	_LCD_send_command
 12904                           
 12905                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 12906  014C54  0E00               	movlw	0
 12907  014C56  0100               	movlb	0	; () banked
 12908  014C58  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12909  014C5A  0E01               	movlw	1
 12910  014C5C  0100               	movlb	0	; () banked
 12911  014C5E  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12912  014C60  0E00               	movlw	0
 12913  014C62  0100               	movlb	0	; () banked
 12914  014C64  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12915  014C66  0E00               	movlw	0
 12916  014C68  EC09  F0AC         	call	_LCD_send_command
 12917                           
 12918                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 12919  014C6C  0E00               	movlw	0
 12920  014C6E  0100               	movlb	0	; () banked
 12921  014C70  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12922  014C72  0E01               	movlw	1
 12923  014C74  0100               	movlb	0	; () banked
 12924  014C76  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12925  014C78  0E00               	movlw	0
 12926  014C7A  0100               	movlb	0	; () banked
 12927  014C7C  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12928  014C7E  0E00               	movlw	0
 12929  014C80  EC09  F0AC         	call	_LCD_send_command
 12930                           
 12931                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 12932  014C84  0E00               	movlw	0
 12933  014C86  0100               	movlb	0	; () banked
 12934  014C88  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12935  014C8A  0E00               	movlw	0
 12936  014C8C  0100               	movlb	0	; () banked
 12937  014C8E  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12938  014C90  0E00               	movlw	0
 12939  014C92  0100               	movlb	0	; () banked
 12940  014C94  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12941  014C96  0E01               	movlw	1
 12942  014C98  EC09  F0AC         	call	_LCD_send_command
 12943                           
 12944                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 12945  014C9C  0E00               	movlw	0
 12946  014C9E  0100               	movlb	0	; () banked
 12947  014CA0  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12948  014CA2  0E00               	movlw	0
 12949  014CA4  0100               	movlb	0	; () banked
 12950  014CA6  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12951  014CA8  0E00               	movlw	0
 12952  014CAA  0100               	movlb	0	; () banked
 12953  014CAC  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12954  014CAE  0E00               	movlw	0
 12955  014CB0  EC09  F0AC         	call	_LCD_send_command
 12956                           
 12957                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 12958  014CB4  0E00               	movlw	0
 12959  014CB6  0100               	movlb	0	; () banked
 12960  014CB8  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12961  014CBA  0E00               	movlw	0
 12962  014CBC  0100               	movlb	0	; () banked
 12963  014CBE  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12964  014CC0  0E00               	movlw	0
 12965  014CC2  0100               	movlb	0	; () banked
 12966  014CC4  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12967  014CC6  0E01               	movlw	1
 12968  014CC8  EC09  F0AC         	call	_LCD_send_command
 12969                           
 12970                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 12971  014CCC  0E00               	movlw	0
 12972  014CCE  0100               	movlb	0	; () banked
 12973  014CD0  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12974  014CD2  0E00               	movlw	0
 12975  014CD4  0100               	movlb	0	; () banked
 12976  014CD6  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12977  014CD8  0E00               	movlw	0
 12978  014CDA  0100               	movlb	0	; () banked
 12979  014CDC  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12980  014CDE  0E00               	movlw	0
 12981  014CE0  EC09  F0AC         	call	_LCD_send_command
 12982                           
 12983                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 12984  014CE4  0E00               	movlw	0
 12985  014CE6  0100               	movlb	0	; () banked
 12986  014CE8  6F77               	movwf	LCD_send_command@D2& (0+255),b
 12987  014CEA  0E00               	movlw	0
 12988  014CEC  0100               	movlb	0	; () banked
 12989  014CEE  6F78               	movwf	LCD_send_command@D1& (0+255),b
 12990  014CF0  0E01               	movlw	1
 12991  014CF2  0100               	movlb	0	; () banked
 12992  014CF4  6F79               	movwf	LCD_send_command@D0& (0+255),b
 12993  014CF6  0E00               	movlw	0
 12994  014CF8  EC09  F0AC         	call	_LCD_send_command
 12995                           
 12996                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 12997  014CFC  0E00               	movlw	0
 12998  014CFE  0100               	movlb	0	; () banked
 12999  014D00  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13000  014D02  0E00               	movlw	0
 13001  014D04  0100               	movlb	0	; () banked
 13002  014D06  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13003  014D08  0E00               	movlw	0
 13004  014D0A  0100               	movlb	0	; () banked
 13005  014D0C  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13006  014D0E  0E00               	movlw	0
 13007  014D10  EC09  F0AC         	call	_LCD_send_command
 13008                           
 13009                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 13010  014D14  0E01               	movlw	1
 13011  014D16  0100               	movlb	0	; () banked
 13012  014D18  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13013  014D1A  0E01               	movlw	1
 13014  014D1C  0100               	movlb	0	; () banked
 13015  014D1E  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13016  014D20  0E00               	movlw	0
 13017  014D22  0100               	movlb	0	; () banked
 13018  014D24  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13019  014D26  0E00               	movlw	0
 13020  014D28  EC09  F0AC         	call	_LCD_send_command
 13021                           
 13022                           ;src\LCD_44780.c: 312: LCD_clear ();
 13023  014D2C  ECAD  F0AC         	call	_LCD_clear	;wreg free
 13024                           
 13025                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 13026  014D30  0E00               	movlw	0
 13027  014D32  0100               	movlb	0	; () banked
 13028  014D34  6F7B               	movwf	LCD_cursor@blinking& (0+255),b
 13029  014D36  0E00               	movlw	0
 13030  014D38  EC94  F0AC         	call	_LCD_cursor
 13031  014D3C  0012               	return		;funcret
 13032  014D3E                     __end_of_LCD_initialize:
 13033                           	opt stack 0
 13034                           tblptru	equ	0xFF8
 13035                           tblptrh	equ	0xFF7
 13036                           tblptrl	equ	0xFF6
 13037                           tablat	equ	0xFF5
 13038                           prodh	equ	0xFF4
 13039                           prodl	equ	0xFF3
 13040                           intcon	equ	0xFF2
 13041                           postinc0	equ	0xFEE
 13042                           wreg	equ	0xFE8
 13043                           indf2	equ	0xFDF
 13044                           postinc2	equ	0xFDE
 13045                           fsr2h	equ	0xFDA
 13046                           fsr2l	equ	0xFD9
 13047                           status	equ	0xFD8
 13048                           
 13049 ;; *************** function _delay_set_quartz *****************
 13050 ;; Defined at:
 13051 ;;		line 115 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;  frequency       1    wreg     unsigned char 
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;  frequency       1   15[BANK0 ] unsigned char 
 13056 ;; Return value:  Size  Location     Type
 13057 ;;		None               void
 13058 ;; Registers used:
 13059 ;;		wreg
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;Total ram usage:        1 bytes
 13070 ;; Hardware stack levels used:    1
 13071 ;; Hardware stack levels required when called:    3
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_LCD_initialize
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text29
 13080  015A88                     __ptext29:
 13081                           	opt stack 0
 13082  015A88                     _delay_set_quartz:
 13083                           	opt stack 25
 13084                           
 13085                           ;incstack = 0
 13086                           ;delay_set_quartz@frequency stored from wreg
 13087  015A88  0100               	movlb	0	; () banked
 13088  015A8A  6F6F               	movwf	delay_set_quartz@frequency& (0+255),b
 13089                           
 13090                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 13091  015A8C  C06F  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 13092  015A90  0012               	return		;funcret
 13093  015A92                     __end_of_delay_set_quartz:
 13094                           	opt stack 0
 13095                           tblptru	equ	0xFF8
 13096                           tblptrh	equ	0xFF7
 13097                           tblptrl	equ	0xFF6
 13098                           tablat	equ	0xFF5
 13099                           prodh	equ	0xFF4
 13100                           prodl	equ	0xFF3
 13101                           intcon	equ	0xFF2
 13102                           postinc0	equ	0xFEE
 13103                           wreg	equ	0xFE8
 13104                           indf2	equ	0xFDF
 13105                           postinc2	equ	0xFDE
 13106                           fsr2h	equ	0xFDA
 13107                           fsr2l	equ	0xFD9
 13108                           status	equ	0xFD8
 13109                           
 13110 ;; *************** function _LCD_cursor *****************
 13111 ;; Defined at:
 13112 ;;		line 266 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  active          1    wreg     unsigned char 
 13115 ;;  blinking        1   27[BANK0 ] unsigned char 
 13116 ;; Auto vars:     Size  Location     Type
 13117 ;;  active          1   28[BANK0 ] unsigned char 
 13118 ;; Return value:  Size  Location     Type
 13119 ;;		None               void
 13120 ;; Registers used:
 13121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13127 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;Total ram usage:        2 bytes
 13132 ;; Hardware stack levels used:    1
 13133 ;; Hardware stack levels required when called:    7
 13134 ;; This function calls:
 13135 ;;		_LCD_send_command
 13136 ;; This function is called by:
 13137 ;;		_LCD_initialize
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text30
 13142  015928                     __ptext30:
 13143                           	opt stack 0
 13144  015928                     _LCD_cursor:
 13145                           	opt stack 21
 13146                           
 13147                           ;incstack = 0
 13148                           ;LCD_cursor@active stored from wreg
 13149  015928  0100               	movlb	0	; () banked
 13150  01592A  6F7C               	movwf	LCD_cursor@active& (0+255),b
 13151                           
 13152                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 13153  01592C  0E00               	movlw	0
 13154  01592E  0100               	movlb	0	; () banked
 13155  015930  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13156  015932  0E00               	movlw	0
 13157  015934  0100               	movlb	0	; () banked
 13158  015936  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13159  015938  0E00               	movlw	0
 13160  01593A  0100               	movlb	0	; () banked
 13161  01593C  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13162  01593E  0E00               	movlw	0
 13163  015940  EC09  F0AC         	call	_LCD_send_command
 13164                           
 13165                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 13166  015944  0E01               	movlw	1
 13167  015946  0100               	movlb	0	; () banked
 13168  015948  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13169  01594A  C07C  F078         	movff	LCD_cursor@active,LCD_send_command@D1
 13170  01594E  C07B  F079         	movff	LCD_cursor@blinking,LCD_send_command@D0
 13171  015952  0E01               	movlw	1
 13172  015954  EC09  F0AC         	call	_LCD_send_command
 13173  015958  0012               	return		;funcret
 13174  01595A                     __end_of_LCD_cursor:
 13175                           	opt stack 0
 13176                           tblptru	equ	0xFF8
 13177                           tblptrh	equ	0xFF7
 13178                           tblptrl	equ	0xFF6
 13179                           tablat	equ	0xFF5
 13180                           prodh	equ	0xFF4
 13181                           prodl	equ	0xFF3
 13182                           intcon	equ	0xFF2
 13183                           postinc0	equ	0xFEE
 13184                           wreg	equ	0xFE8
 13185                           indf2	equ	0xFDF
 13186                           postinc2	equ	0xFDE
 13187                           fsr2h	equ	0xFDA
 13188                           fsr2l	equ	0xFD9
 13189                           status	equ	0xFD8
 13190                           
 13191 ;; *************** function _LCD_clear *****************
 13192 ;; Defined at:
 13193 ;;		line 257 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;		None
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;		None               void
 13200 ;; Registers used:
 13201 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13202 ;; Tracked objects:
 13203 ;;		On entry : 0/0
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13211 ;;Total ram usage:        0 bytes
 13212 ;; Hardware stack levels used:    1
 13213 ;; Hardware stack levels required when called:    7
 13214 ;; This function calls:
 13215 ;;		_LCD_send_command
 13216 ;; This function is called by:
 13217 ;;		_LCD_initialize
 13218 ;;		_main
 13219 ;;		_LCD_Handler
 13220 ;;		_board_initialization
 13221 ;; This function uses a non-reentrant model
 13222 ;;
 13223                           
 13224                           	psect	text31
 13225  01595A                     __ptext31:
 13226                           	opt stack 0
 13227  01595A                     _LCD_clear:
 13228                           	opt stack 21
 13229                           
 13230                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 13231                           
 13232                           ;incstack = 0
 13233  01595A  0E00               	movlw	0
 13234  01595C  0100               	movlb	0	; () banked
 13235  01595E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13236  015960  0E00               	movlw	0
 13237  015962  0100               	movlb	0	; () banked
 13238  015964  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13239  015966  0E00               	movlw	0
 13240  015968  0100               	movlb	0	; () banked
 13241  01596A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13242  01596C  0E00               	movlw	0
 13243  01596E  EC09  F0AC         	call	_LCD_send_command
 13244                           
 13245                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 13246  015972  0E00               	movlw	0
 13247  015974  0100               	movlb	0	; () banked
 13248  015976  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13249  015978  0E00               	movlw	0
 13250  01597A  0100               	movlb	0	; () banked
 13251  01597C  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13252  01597E  0E01               	movlw	1
 13253  015980  0100               	movlb	0	; () banked
 13254  015982  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13255  015984  0E00               	movlw	0
 13256  015986  EC09  F0AC         	call	_LCD_send_command
 13257  01598A  0012               	return		;funcret
 13258  01598C                     __end_of_LCD_clear:
 13259                           	opt stack 0
 13260                           tblptru	equ	0xFF8
 13261                           tblptrh	equ	0xFF7
 13262                           tblptrl	equ	0xFF6
 13263                           tablat	equ	0xFF5
 13264                           prodh	equ	0xFF4
 13265                           prodl	equ	0xFF3
 13266                           intcon	equ	0xFF2
 13267                           postinc0	equ	0xFEE
 13268                           wreg	equ	0xFE8
 13269                           indf2	equ	0xFDF
 13270                           postinc2	equ	0xFDE
 13271                           fsr2h	equ	0xFDA
 13272                           fsr2l	equ	0xFD9
 13273                           status	equ	0xFD8
 13274                           
 13275 ;; *************** function _LCD_goto_line *****************
 13276 ;; Defined at:
 13277 ;;		line 111 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;  line            1    wreg     unsigned char 
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;  line            1   27[BANK0 ] unsigned char 
 13282 ;; Return value:  Size  Location     Type
 13283 ;;		None               void
 13284 ;; Registers used:
 13285 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13295 ;;Total ram usage:        1 bytes
 13296 ;; Hardware stack levels used:    1
 13297 ;; Hardware stack levels required when called:    7
 13298 ;; This function calls:
 13299 ;;		_LCD_send_command
 13300 ;; This function is called by:
 13301 ;;		_main
 13302 ;;		_LCD_Handler
 13303 ;;		_board_initialization
 13304 ;;		_LCD_goto_xy
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text32
 13309  0150C4                     __ptext32:
 13310                           	opt stack 0
 13311  0150C4                     _LCD_goto_line:
 13312                           	opt stack 22
 13313                           
 13314                           ;incstack = 0
 13315                           ;LCD_goto_line@line stored from wreg
 13316  0150C4  0100               	movlb	0	; () banked
 13317  0150C6  6F7B               	movwf	LCD_goto_line@line& (0+255),b
 13318                           
 13319                           ;src\LCD_44780.c: 113: switch(line) {
 13320  0150C8  D064               	goto	l7864
 13321  0150CA                     l7856:
 13322  0150CA  0E00               	movlw	0
 13323  0150CC  0100               	movlb	0	; () banked
 13324  0150CE  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13325  0150D0  0E00               	movlw	0
 13326  0150D2  0100               	movlb	0	; () banked
 13327  0150D4  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13328  0150D6  0E00               	movlw	0
 13329  0150D8  0100               	movlb	0	; () banked
 13330  0150DA  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13331  0150DC  0E01               	movlw	1
 13332  0150DE  EC09  F0AC         	call	_LCD_send_command
 13333                           
 13334                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 13335  0150E2  0E00               	movlw	0
 13336  0150E4  0100               	movlb	0	; () banked
 13337  0150E6  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13338  0150E8  0E00               	movlw	0
 13339  0150EA  0100               	movlb	0	; () banked
 13340  0150EC  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13341  0150EE  0E00               	movlw	0
 13342  0150F0  0100               	movlb	0	; () banked
 13343  0150F2  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13344  0150F4  0E00               	movlw	0
 13345  0150F6  EC09  F0AC         	call	_LCD_send_command
 13346                           
 13347                           ;src\LCD_44780.c: 117: break;
 13348  0150FA  0012               	return	
 13349  0150FC                     l7858:
 13350  0150FC  0E01               	movlw	1
 13351  0150FE  0100               	movlb	0	; () banked
 13352  015100  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13353  015102  0E00               	movlw	0
 13354  015104  0100               	movlb	0	; () banked
 13355  015106  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13356  015108  0E00               	movlw	0
 13357  01510A  0100               	movlb	0	; () banked
 13358  01510C  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13359  01510E  0E01               	movlw	1
 13360  015110  EC09  F0AC         	call	_LCD_send_command
 13361                           
 13362                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 13363  015114  0E00               	movlw	0
 13364  015116  0100               	movlb	0	; () banked
 13365  015118  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13366  01511A  0E00               	movlw	0
 13367  01511C  0100               	movlb	0	; () banked
 13368  01511E  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13369  015120  0E00               	movlw	0
 13370  015122  0100               	movlb	0	; () banked
 13371  015124  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13372  015126  0E00               	movlw	0
 13373  015128  EC09  F0AC         	call	_LCD_send_command
 13374                           
 13375                           ;src\LCD_44780.c: 121: break;
 13376  01512C  0012               	return	
 13377  01512E                     l7860:
 13378  01512E  0E00               	movlw	0
 13379  015130  0100               	movlb	0	; () banked
 13380  015132  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13381  015134  0E00               	movlw	0
 13382  015136  0100               	movlb	0	; () banked
 13383  015138  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13384  01513A  0E01               	movlw	1
 13385  01513C  0100               	movlb	0	; () banked
 13386  01513E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13387  015140  0E01               	movlw	1
 13388  015142  EC09  F0AC         	call	_LCD_send_command
 13389                           
 13390                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 13391  015146  0E01               	movlw	1
 13392  015148  0100               	movlb	0	; () banked
 13393  01514A  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13394  01514C  0E00               	movlw	0
 13395  01514E  0100               	movlb	0	; () banked
 13396  015150  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13397  015152  0E00               	movlw	0
 13398  015154  0100               	movlb	0	; () banked
 13399  015156  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13400  015158  0E00               	movlw	0
 13401  01515A  EC09  F0AC         	call	_LCD_send_command
 13402                           
 13403                           ;src\LCD_44780.c: 125: break;
 13404  01515E  0012               	return	
 13405  015160                     l7862:
 13406  015160  0E01               	movlw	1
 13407  015162  0100               	movlb	0	; () banked
 13408  015164  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13409  015166  0E00               	movlw	0
 13410  015168  0100               	movlb	0	; () banked
 13411  01516A  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13412  01516C  0E01               	movlw	1
 13413  01516E  0100               	movlb	0	; () banked
 13414  015170  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13415  015172  0E01               	movlw	1
 13416  015174  EC09  F0AC         	call	_LCD_send_command
 13417                           
 13418                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 13419  015178  0E01               	movlw	1
 13420  01517A  0100               	movlb	0	; () banked
 13421  01517C  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13422  01517E  0E00               	movlw	0
 13423  015180  0100               	movlb	0	; () banked
 13424  015182  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13425  015184  0E00               	movlw	0
 13426  015186  0100               	movlb	0	; () banked
 13427  015188  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13428  01518A  0E00               	movlw	0
 13429  01518C  EC09  F0AC         	call	_LCD_send_command
 13430                           
 13431                           ;src\LCD_44780.c: 129: }
 13432  015190  0012               	return	
 13433  015192                     l7864:
 13434  015192  0100               	movlb	0	; () banked
 13435  015194  517B               	movf	LCD_goto_line@line& (0+255),w,b
 13436                           
 13437                           ; Switch size 1, requested type "space"
 13438                           ; Number of cases is 4, Range of values is 1 to 4
 13439                           ; switch strategies available:
 13440                           ; Name         Instructions Cycles
 13441                           ; simple_byte           13     7 (average)
 13442                           ;	Chosen strategy is simple_byte
 13443  015196  0A01               	xorlw	1	; case 1
 13444  015198  B4D8               	btfsc	status,2,c
 13445  01519A  D797               	goto	l7856
 13446  01519C  0A03               	xorlw	3	; case 2
 13447  01519E  B4D8               	btfsc	status,2,c
 13448  0151A0  D7AD               	goto	l7858
 13449  0151A2  0A01               	xorlw	1	; case 3
 13450  0151A4  B4D8               	btfsc	status,2,c
 13451  0151A6  D7C3               	goto	l7860
 13452  0151A8  0A07               	xorlw	7	; case 4
 13453  0151AA  A4D8               	btfss	status,2,c
 13454  0151AC  0012               	return	
 13455  0151AE  D7D8               	goto	l7862
 13456  0151B0                     __end_of_LCD_goto_line:
 13457                           	opt stack 0
 13458                           tblptru	equ	0xFF8
 13459                           tblptrh	equ	0xFF7
 13460                           tblptrl	equ	0xFF6
 13461                           tablat	equ	0xFF5
 13462                           prodh	equ	0xFF4
 13463                           prodl	equ	0xFF3
 13464                           intcon	equ	0xFF2
 13465                           postinc0	equ	0xFEE
 13466                           wreg	equ	0xFE8
 13467                           indf2	equ	0xFDF
 13468                           postinc2	equ	0xFDE
 13469                           fsr2h	equ	0xFDA
 13470                           fsr2l	equ	0xFD9
 13471                           status	equ	0xFD8
 13472                           
 13473 ;; *************** function _LCD_send_command *****************
 13474 ;; Defined at:
 13475 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;  D3              1    wreg     unsigned char 
 13478 ;;  D2              1   23[BANK0 ] unsigned char 
 13479 ;;  D1              1   24[BANK0 ] unsigned char 
 13480 ;;  D0              1   25[BANK0 ] unsigned char 
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;  D3              1   26[BANK0 ] unsigned char 
 13483 ;; Return value:  Size  Location     Type
 13484 ;;		None               void
 13485 ;; Registers used:
 13486 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13487 ;; Tracked objects:
 13488 ;;		On entry : 0/0
 13489 ;;		On exit  : 0/0
 13490 ;;		Unchanged: 0/0
 13491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13492 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13496 ;;Total ram usage:        4 bytes
 13497 ;; Hardware stack levels used:    1
 13498 ;; Hardware stack levels required when called:    6
 13499 ;; This function calls:
 13500 ;;		_LCD_enable_pulse
 13501 ;; This function is called by:
 13502 ;;		_LCD_goto_line
 13503 ;;		_LCD_write_char
 13504 ;;		_LCD_clear
 13505 ;;		_LCD_cursor
 13506 ;;		_LCD_initialize
 13507 ;;		_LCD_home
 13508 ;;		_LCD_shift
 13509 ;;		_LCD_shift_cursor
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           	psect	text33
 13514  015812                     __ptext33:
 13515                           	opt stack 0
 13516  015812                     _LCD_send_command:
 13517                           	opt stack 21
 13518                           
 13519                           ;incstack = 0
 13520                           ;LCD_send_command@D3 stored from wreg
 13521  015812  0100               	movlb	0	; () banked
 13522  015814  6F7A               	movwf	LCD_send_command@D3& (0+255),b
 13523                           
 13524                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 13525  015816  0100               	movlb	0	; () banked
 13526  015818  B179               	btfsc	LCD_send_command@D0& (0+255),0,b
 13527  01581A  D002               	bra	u8975
 13528  01581C  948B               	bcf	3979,2,c	;volatile
 13529  01581E  D001               	bra	u8976
 13530  015820                     u8975:
 13531  015820  848B               	bsf	3979,2,c	;volatile
 13532  015822                     u8976:
 13533                           
 13534                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 13535  015822  0100               	movlb	0	; () banked
 13536  015824  B178               	btfsc	LCD_send_command@D1& (0+255),0,b
 13537  015826  D002               	bra	u8985
 13538  015828  968B               	bcf	3979,3,c	;volatile
 13539  01582A  D001               	bra	u8986
 13540  01582C                     u8985:
 13541  01582C  868B               	bsf	3979,3,c	;volatile
 13542  01582E                     u8986:
 13543                           
 13544                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 13545  01582E  0100               	movlb	0	; () banked
 13546  015830  B177               	btfsc	LCD_send_command@D2& (0+255),0,b
 13547  015832  D002               	bra	u8995
 13548  015834  908C               	bcf	3980,0,c	;volatile
 13549  015836  D001               	bra	u8996
 13550  015838                     u8995:
 13551  015838  808C               	bsf	3980,0,c	;volatile
 13552  01583A                     u8996:
 13553                           
 13554                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 13555  01583A  0100               	movlb	0	; () banked
 13556  01583C  B17A               	btfsc	LCD_send_command@D3& (0+255),0,b
 13557  01583E  D002               	bra	u9005
 13558  015840  928C               	bcf	3980,1,c	;volatile
 13559  015842  D001               	bra	u9006
 13560  015844                     u9005:
 13561  015844  828C               	bsf	3980,1,c	;volatile
 13562  015846                     u9006:
 13563                           
 13564                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 13565  015846  EC00  F0AD         	call	_LCD_enable_pulse	;wreg free
 13566  01584A  0012               	return		;funcret
 13567  01584C                     __end_of_LCD_send_command:
 13568                           	opt stack 0
 13569                           tblptru	equ	0xFF8
 13570                           tblptrh	equ	0xFF7
 13571                           tblptrl	equ	0xFF6
 13572                           tablat	equ	0xFF5
 13573                           prodh	equ	0xFF4
 13574                           prodl	equ	0xFF3
 13575                           intcon	equ	0xFF2
 13576                           postinc0	equ	0xFEE
 13577                           wreg	equ	0xFE8
 13578                           indf2	equ	0xFDF
 13579                           postinc2	equ	0xFDE
 13580                           fsr2h	equ	0xFDA
 13581                           fsr2l	equ	0xFD9
 13582                           status	equ	0xFD8
 13583                           
 13584 ;; *************** function _LCD_enable_pulse *****************
 13585 ;; Defined at:
 13586 ;;		line 49 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13587 ;; Parameters:    Size  Location     Type
 13588 ;;		None
 13589 ;; Auto vars:     Size  Location     Type
 13590 ;;		None
 13591 ;; Return value:  Size  Location     Type
 13592 ;;		None               void
 13593 ;; Registers used:
 13594 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13604 ;;Total ram usage:        0 bytes
 13605 ;; Hardware stack levels used:    1
 13606 ;; Hardware stack levels required when called:    5
 13607 ;; This function calls:
 13608 ;;		_delay_ms
 13609 ;; This function is called by:
 13610 ;;		_LCD_send_command
 13611 ;; This function uses a non-reentrant model
 13612 ;;
 13613                           
 13614                           	psect	text34
 13615  015A00                     __ptext34:
 13616                           	opt stack 0
 13617  015A00                     _LCD_enable_pulse:
 13618                           	opt stack 21
 13619                           
 13620                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 13621                           
 13622                           ;incstack = 0
 13623  015A00  828B               	bsf	3979,1,c	;volatile
 13624                           
 13625                           ;src\LCD_44780.c: 52: delay_ms (1);
 13626  015A02  0E00               	movlw	0
 13627  015A04  0100               	movlb	0	; () banked
 13628  015A06  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13629  015A08  0E01               	movlw	1
 13630  015A0A  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13631  015A0C  EC26  F0AC         	call	_delay_ms	;wreg free
 13632                           
 13633                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 13634  015A10  928B               	bcf	3979,1,c	;volatile
 13635                           
 13636                           ;src\LCD_44780.c: 54: delay_ms (1);
 13637  015A12  0E00               	movlw	0
 13638  015A14  0100               	movlb	0	; () banked
 13639  015A16  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13640  015A18  0E01               	movlw	1
 13641  015A1A  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13642  015A1C  EC26  F0AC         	call	_delay_ms	;wreg free
 13643  015A20  0012               	return		;funcret
 13644  015A22                     __end_of_LCD_enable_pulse:
 13645                           	opt stack 0
 13646                           tblptru	equ	0xFF8
 13647                           tblptrh	equ	0xFF7
 13648                           tblptrl	equ	0xFF6
 13649                           tablat	equ	0xFF5
 13650                           prodh	equ	0xFF4
 13651                           prodl	equ	0xFF3
 13652                           intcon	equ	0xFF2
 13653                           postinc0	equ	0xFEE
 13654                           wreg	equ	0xFE8
 13655                           indf2	equ	0xFDF
 13656                           postinc2	equ	0xFDE
 13657                           fsr2h	equ	0xFDA
 13658                           fsr2l	equ	0xFD9
 13659                           status	equ	0xFD8
 13660                           
 13661 ;; *************** function _delay_ms *****************
 13662 ;; Defined at:
 13663 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;  value_ms        2   21[BANK0 ] unsigned int 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;		None
 13668 ;; Return value:  Size  Location     Type
 13669 ;;		None               void
 13670 ;; Registers used:
 13671 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;Total ram usage:        2 bytes
 13682 ;; Hardware stack levels used:    1
 13683 ;; Hardware stack levels required when called:    4
 13684 ;; This function calls:
 13685 ;;		___wmul
 13686 ;; This function is called by:
 13687 ;;		_LCD_enable_pulse
 13688 ;;		_LCD_initialize
 13689 ;;		_main
 13690 ;;		_LCD_Handler
 13691 ;;		_board_initialization
 13692 ;;		_delay_s
 13693 ;; This function uses a non-reentrant model
 13694 ;;
 13695                           
 13696                           	psect	text35
 13697  01584C                     __ptext35:
 13698                           	opt stack 0
 13699  01584C                     _delay_ms:
 13700                           	opt stack 26
 13701                           
 13702                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 13703                           
 13704                           ;incstack = 0
 13705  01584C  C0ED  F06F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 13706  015850  0100               	movlb	0	; () banked
 13707  015852  6B70               	clrf	(___wmul@multiplier+1)& (0+255),b
 13708  015854  C075  F071         	movff	delay_ms@value_ms,___wmul@multiplicand
 13709  015858  C076  F072         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 13710  01585C  EC5F  F0AC         	call	___wmul	;wreg free
 13711  015860  C06F  F0DF         	movff	?___wmul,_clock_counter_reference	;volatile
 13712  015864  C070  F0E0         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 13713                           
 13714                           ;src\delay.c: 75: while (clock_counter_reference) {
 13715  015868  D007               	goto	l577
 13716  01586A                     l7056:
 13717                           
 13718                           ;src\delay.c: 85: _delay(240);
 13719  01586A  0E50               	movlw	80
 13720  01586C                     u11677:
 13721  01586C  2EE8               	decfsz	wreg,f,c
 13722  01586E  D7FE               	goto	u11677
 13723                           
 13724                           ;src\delay.c: 88: clock_counter_reference--;
 13725  015870  0100               	movlb	0	; () banked
 13726  015872  07DF               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 13727  015874  A0D8               	btfss	status,0,c
 13728  015876  07E0               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 13729  015878                     l577:
 13730  015878  0100               	movlb	0	; () banked
 13731  01587A  51DF               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 13732  01587C  0100               	movlb	0	; () banked
 13733  01587E  11E0               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 13734  015880  B4D8               	btfsc	status,2,c
 13735  015882  0012               	return	
 13736  015884  D7F2               	goto	l7056
 13737  015886                     __end_of_delay_ms:
 13738                           	opt stack 0
 13739                           tblptru	equ	0xFF8
 13740                           tblptrh	equ	0xFF7
 13741                           tblptrl	equ	0xFF6
 13742                           tablat	equ	0xFF5
 13743                           prodh	equ	0xFF4
 13744                           prodl	equ	0xFF3
 13745                           intcon	equ	0xFF2
 13746                           postinc0	equ	0xFEE
 13747                           wreg	equ	0xFE8
 13748                           indf2	equ	0xFDF
 13749                           postinc2	equ	0xFDE
 13750                           fsr2h	equ	0xFDA
 13751                           fsr2l	equ	0xFD9
 13752                           status	equ	0xFD8
 13753                           
 13754 ;; *************** function ___wmul *****************
 13755 ;; Defined at:
 13756 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;  multiplier      2   15[BANK0 ] unsigned int 
 13759 ;;  multiplicand    2   17[BANK0 ] unsigned int 
 13760 ;; Auto vars:     Size  Location     Type
 13761 ;;  product         2   19[BANK0 ] unsigned int 
 13762 ;; Return value:  Size  Location     Type
 13763 ;;                  2   15[BANK0 ] unsigned int 
 13764 ;; Registers used:
 13765 ;;		wreg, status,2, status,0, prodl, prodh
 13766 ;; Tracked objects:
 13767 ;;		On entry : 0/0
 13768 ;;		On exit  : 0/0
 13769 ;;		Unchanged: 0/0
 13770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13774 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13775 ;;Total ram usage:        6 bytes
 13776 ;; Hardware stack levels used:    1
 13777 ;; Hardware stack levels required when called:    3
 13778 ;; This function calls:
 13779 ;;		Nothing
 13780 ;; This function is called by:
 13781 ;;		_delay_ms
 13782 ;;		_sprintf
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text36
 13787  0158BE                     __ptext36:
 13788                           	opt stack 0
 13789  0158BE                     ___wmul:
 13790                           	opt stack 26
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;incstack = 0
 13794  0158BE  0100               	movlb	0	; () banked
 13795  0158C0  516F               	movf	___wmul@multiplier& (0+255),w,b
 13796  0158C2  0100               	movlb	0	; () banked
 13797  0158C4  0371               	mulwf	___wmul@multiplicand& (0+255),b
 13798  0158C6  CFF3 F073          	movff	prodl,___wmul@product
 13799  0158CA  CFF4 F074          	movff	prodh,___wmul@product+1
 13800  0158CE  0100               	movlb	0	; () banked
 13801  0158D0  516F               	movf	___wmul@multiplier& (0+255),w,b
 13802  0158D2  0100               	movlb	0	; () banked
 13803  0158D4  0372               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13804  0158D6  50F3               	movf	prodl,w,c
 13805  0158D8  0100               	movlb	0	; () banked
 13806  0158DA  2774               	addwf	(___wmul@product+1)& (0+255),f,b
 13807  0158DC  0100               	movlb	0	; () banked
 13808  0158DE  5170               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13809  0158E0  0100               	movlb	0	; () banked
 13810  0158E2  0371               	mulwf	___wmul@multiplicand& (0+255),b
 13811  0158E4  50F3               	movf	prodl,w,c
 13812  0158E6  0100               	movlb	0	; () banked
 13813  0158E8  2774               	addwf	(___wmul@product+1)& (0+255),f,b
 13814                           
 13815                           ; BSR set to: 0
 13816  0158EA  C073  F06F         	movff	___wmul@product,?___wmul
 13817  0158EE  C074  F070         	movff	___wmul@product+1,?___wmul+1
 13818  0158F2  0012               	return	
 13819  0158F4                     __end_of___wmul:
 13820                           	opt stack 0
 13821                           tblptru	equ	0xFF8
 13822                           tblptrh	equ	0xFF7
 13823                           tblptrl	equ	0xFF6
 13824                           tablat	equ	0xFF5
 13825                           prodh	equ	0xFF4
 13826                           prodl	equ	0xFF3
 13827                           intcon	equ	0xFF2
 13828                           postinc0	equ	0xFEE
 13829                           wreg	equ	0xFE8
 13830                           indf2	equ	0xFDF
 13831                           postinc2	equ	0xFDE
 13832                           fsr2h	equ	0xFDA
 13833                           fsr2l	equ	0xFD9
 13834                           status	equ	0xFD8
 13835                           
 13836 ;; *************** function _Joystick_Polling *****************
 13837 ;; Defined at:
 13838 ;;		line 283 in file "RemoteCan.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;		None
 13841 ;; Auto vars:     Size  Location     Type
 13842 ;;  i               1   16[BANK0 ] unsigned char 
 13843 ;; Return value:  Size  Location     Type
 13844 ;;		None               void
 13845 ;; Registers used:
 13846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13847 ;; Tracked objects:
 13848 ;;		On entry : 0/0
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13855 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;Total ram usage:        2 bytes
 13857 ;; Hardware stack levels used:    1
 13858 ;; Hardware stack levels required when called:    3
 13859 ;; This function calls:
 13860 ;;		Nothing
 13861 ;; This function is called by:
 13862 ;;		_main
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           	psect	text37
 13867  015734                     __ptext37:
 13868                           	opt stack 0
 13869  015734                     _Joystick_Polling:
 13870                           	opt stack 27
 13871                           
 13872                           ;RemoteCan.c: 284: for (unsigned char i = 0; i < 2; i++) {
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;incstack = 0
 13876  015734  0E00               	movlw	0
 13877  015736  0100               	movlb	0	; () banked
 13878  015738  6F70               	movwf	Joystick_Polling@i& (0+255),b
 13879  01573A                     l6524:
 13880                           
 13881                           ; BSR set to: 0
 13882  01573A  0E01               	movlw	1
 13883  01573C  0100               	movlb	0	; () banked
 13884  01573E  6570               	cpfsgt	Joystick_Polling@i& (0+255),b
 13885  015740  D001               	goto	l798
 13886  015742  0012               	return	
 13887  015744                     l798:
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;RemoteCan.c: 285: ADCON0bits.GO = 1;
 13891  015744  82C2               	bsf	4034,1,c	;volatile
 13892  015746                     l800:
 13893  015746  B2C2               	btfsc	4034,1,c	;volatile
 13894  015748  D7FE               	goto	l800
 13895                           
 13896                           ;RemoteCan.c: 287: JoystickValues[i] = ADRESH;
 13897  01574A  0100               	movlb	0	; () banked
 13898  01574C  5170               	movf	Joystick_Polling@i& (0+255),w,b
 13899  01574E  0D01               	mullw	1
 13900  015750  0EDD               	movlw	low _JoystickValues
 13901  015752  24F3               	addwf	prodl,w,c
 13902  015754  6ED9               	movwf	fsr2l,c
 13903  015756  0E00               	movlw	high _JoystickValues
 13904  015758  20F4               	addwfc	prodh,w,c
 13905  01575A  6EDA               	movwf	fsr2h,c
 13906  01575C  CFC4 FFDF          	movff	4036,indf2	;volatile
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;RemoteCan.c: 288: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 13910  015760  A4C2               	btfss	4034,2,c	;volatile
 13911  015762  D002               	goto	u8160
 13912  015764  0E01               	movlw	1
 13913  015766  D001               	goto	u8166
 13914  015768                     u8160:
 13915  015768  0E00               	movlw	0
 13916  01576A                     u8166:
 13917  01576A  0AFF               	xorlw	255
 13918  01576C  0100               	movlb	0	; () banked
 13919  01576E  6F6F               	movwf	??_Joystick_Polling& (0+255),b
 13920  015770  0100               	movlb	0	; () banked
 13921  015772  476F               	rlncf	??_Joystick_Polling& (0+255),f,b
 13922  015774  476F               	rlncf	??_Joystick_Polling& (0+255),f,b
 13923  015776  50C2               	movf	4034,w,c	;volatile
 13924  015778  0100               	movlb	0	; () banked
 13925  01577A  196F               	xorwf	??_Joystick_Polling& (0+255),w,b
 13926  01577C  0BFB               	andlw	-5
 13927  01577E  196F               	xorwf	??_Joystick_Polling& (0+255),w,b
 13928  015780  6EC2               	movwf	4034,c	;volatile
 13929                           
 13930                           ; BSR set to: 0
 13931  015782  0100               	movlb	0	; () banked
 13932  015784  2B70               	incf	Joystick_Polling@i& (0+255),f,b
 13933  015786  D7D9               	goto	l6524
 13934  015788                     __end_of_Joystick_Polling:
 13935                           	opt stack 0
 13936                           tblptru	equ	0xFF8
 13937                           tblptrh	equ	0xFF7
 13938                           tblptrl	equ	0xFF6
 13939                           tablat	equ	0xFF5
 13940                           prodh	equ	0xFF4
 13941                           prodl	equ	0xFF3
 13942                           intcon	equ	0xFF2
 13943                           postinc0	equ	0xFEE
 13944                           wreg	equ	0xFE8
 13945                           indf2	equ	0xFDF
 13946                           postinc2	equ	0xFDE
 13947                           fsr2h	equ	0xFDA
 13948                           fsr2l	equ	0xFD9
 13949                           status	equ	0xFD8
 13950                           
 13951 ;; *************** function _CAN_interpreter *****************
 13952 ;; Defined at:
 13953 ;;		line 234 in file "RemoteCan.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;		None
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;		None
 13958 ;; Return value:  Size  Location     Type
 13959 ;;		None               void
 13960 ;; Registers used:
 13961 ;;		wreg, status,2, status,0, cstack
 13962 ;; Tracked objects:
 13963 ;;		On entry : 0/0
 13964 ;;		On exit  : 0/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;Total ram usage:        4 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:    4
 13974 ;; This function calls:
 13975 ;;		___xxtofl
 13976 ;; This function is called by:
 13977 ;;		_main
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           	psect	text38
 13982  0151B0                     __ptext38:
 13983                           	opt stack 0
 13984  0151B0                     _CAN_interpreter:
 13985                           	opt stack 26
 13986                           
 13987                           ;RemoteCan.c: 236: if (id == 0b00000000010) {
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;incstack = 0
 13991  0151B0  0E02               	movlw	2
 13992  0151B2  180F               	xorwf	_id,w,c	;volatile
 13993  0151B4  1010               	iorwf	_id+1,w,c	;volatile
 13994  0151B6  1011               	iorwf	_id+2,w,c	;volatile
 13995  0151B8  1012               	iorwf	_id+3,w,c	;volatile
 13996  0151BA  A4D8               	btfss	status,2,c
 13997  0151BC  D015               	goto	l8378
 13998                           
 13999                           ;RemoteCan.c: 237: if (RTR_Flag == 1) {
 14000  0151BE  A44D               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 14001  0151C0  D00C               	goto	l8368
 14002                           
 14003                           ;RemoteCan.c: 238: pr_time_4 = time_counter;
 14004  0151C2  C017  F013         	movff	_time_counter,_pr_time_4	;volatile
 14005  0151C6  C018  F014         	movff	_time_counter+1,_pr_time_4+1	;volatile
 14006  0151CA  C019  F015         	movff	_time_counter+2,_pr_time_4+2	;volatile
 14007  0151CE  C01A  F016         	movff	_time_counter+3,_pr_time_4+3	;volatile
 14008                           
 14009                           ;RemoteCan.c: 242: MotoreFlag = 1;
 14010  0151D2  824D               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 14011                           
 14012                           ;RemoteCan.c: 243: AbsFlag = 0;
 14013  0151D4  904D               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 14014                           
 14015                           ;RemoteCan.c: 244: SterzoFlag = 0;
 14016  0151D6  964D               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 14017                           
 14018                           ;RemoteCan.c: 245: } else {
 14019  0151D8  D007               	goto	l8378
 14020  0151DA                     l8368:
 14021                           
 14022                           ;RemoteCan.c: 246: if (data[0] == 0x01) {
 14023  0151DA  042B               	decf	_data,w,c
 14024  0151DC  B4D8               	btfsc	status,2,c
 14025                           
 14026                           ;RemoteCan.c: 247: AbsFlag = 1;
 14027  0151DE  804D               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 14028                           
 14029                           ;RemoteCan.c: 249: }
 14030                           ;RemoteCan.c: 250: if (data[0] == 0x02) {
 14031  0151E0  0E02               	movlw	2
 14032  0151E2  182B               	xorwf	_data,w,c
 14033  0151E4  B4D8               	btfsc	status,2,c
 14034                           
 14035                           ;RemoteCan.c: 251: SterzoFlag = 1;
 14036  0151E6  864D               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 14037  0151E8                     l8378:
 14038                           
 14039                           ;RemoteCan.c: 257: }
 14040                           ;RemoteCan.c: 258: }
 14041                           ;RemoteCan.c: 260: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 14042  0151E8  0E06               	movlw	6
 14043  0151EA  180F               	xorwf	_id,w,c	;volatile
 14044  0151EC  1010               	iorwf	_id+1,w,c	;volatile
 14045  0151EE  1011               	iorwf	_id+2,w,c	;volatile
 14046  0151F0  1012               	iorwf	_id+3,w,c	;volatile
 14047  0151F2  B4D8               	btfsc	status,2,c
 14048  0151F4  B44D               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 14049  0151F6  D041               	goto	l8390
 14050                           
 14051                           ;RemoteCan.c: 261: left_speed = data[1];
 14052  0151F8  C02C  F0E1         	movff	_data+1,_left_speed
 14053  0151FC  0100               	movlb	0	; () banked
 14054  0151FE  6BE2               	clrf	(_left_speed+1)& (0+255),b
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;RemoteCan.c: 262: left_speed = ((left_speed << 8) | (data[0]));
 14058  015200  0100               	movlb	0	; () banked
 14059  015202  51E1               	movf	_left_speed& (0+255),w,b
 14060  015204  0100               	movlb	0	; () banked
 14061  015206  6F7D               	movwf	??_CAN_interpreter& (0+255),b
 14062  015208  502B               	movf	_data,w,c
 14063  01520A  0100               	movlb	0	; () banked
 14064  01520C  6FE1               	movwf	_left_speed& (0+255),b
 14065  01520E  C07D  F0E2         	movff	??_CAN_interpreter,_left_speed+1
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;RemoteCan.c: 263: right_speed = data[3];
 14069  015212  C02E  F0E3         	movff	_data+3,_right_speed
 14070  015216  0100               	movlb	0	; () banked
 14071  015218  6BE4               	clrf	(_right_speed+1)& (0+255),b
 14072                           
 14073                           ;RemoteCan.c: 264: right_speed = ((right_speed << 8) | (data[2]));
 14074  01521A  0100               	movlb	0	; () banked
 14075  01521C  51E3               	movf	_right_speed& (0+255),w,b
 14076  01521E  0100               	movlb	0	; () banked
 14077  015220  6F7D               	movwf	??_CAN_interpreter& (0+255),b
 14078  015222  502D               	movf	_data+2,w,c
 14079  015224  0100               	movlb	0	; () banked
 14080  015226  6FE3               	movwf	_right_speed& (0+255),b
 14081  015228  C07D  F0E4         	movff	??_CAN_interpreter,_right_speed+1
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;RemoteCan.c: 265: actual_speed = (right_speed + left_speed) / 2;
 14085  01522C  0100               	movlb	0	; () banked
 14086  01522E  51E1               	movf	_left_speed& (0+255),w,b
 14087  015230  0100               	movlb	0	; () banked
 14088  015232  25E3               	addwf	_right_speed& (0+255),w,b
 14089  015234  0100               	movlb	0	; () banked
 14090  015236  6F7D               	movwf	??_CAN_interpreter& (0+255),b
 14091  015238  0100               	movlb	0	; () banked
 14092  01523A  51E2               	movf	(_left_speed+1)& (0+255),w,b
 14093  01523C  0100               	movlb	0	; () banked
 14094  01523E  21E4               	addwfc	(_right_speed+1)& (0+255),w,b
 14095  015240  0100               	movlb	0	; () banked
 14096  015242  6F7E               	movwf	(??_CAN_interpreter+1)& (0+255),b
 14097  015244  90D8               	bcf	status,0,c
 14098  015246  0100               	movlb	0	; () banked
 14099  015248  317E               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 14100  01524A  0100               	movlb	0	; () banked
 14101  01524C  6F80               	movwf	(??_CAN_interpreter+3)& (0+255),b
 14102  01524E  0100               	movlb	0	; () banked
 14103  015250  317D               	rrcf	??_CAN_interpreter& (0+255),w,b
 14104  015252  0100               	movlb	0	; () banked
 14105  015254  6F7F               	movwf	(??_CAN_interpreter+2)& (0+255),b
 14106  015256  C07F  F06F         	movff	??_CAN_interpreter+2,___xxtofl@val
 14107  01525A  C080  F070         	movff	??_CAN_interpreter+3,___xxtofl@val+1
 14108  01525E  0100               	movlb	0	; () banked
 14109  015260  6B71               	clrf	(___xxtofl@val+2)& (0+255),b
 14110  015262  6B72               	clrf	(___xxtofl@val+3)& (0+255),b
 14111  015264  0E00               	movlw	0
 14112  015266  ECC3  F0A1         	call	___xxtofl
 14113  01526A  C06F  F007         	movff	?___xxtofl,_actual_speed
 14114  01526E  C070  F008         	movff	?___xxtofl+1,_actual_speed+1
 14115  015272  C071  F009         	movff	?___xxtofl+2,_actual_speed+2
 14116  015276  C072  F00A         	movff	?___xxtofl+3,_actual_speed+3
 14117  01527A                     l8390:
 14118                           
 14119                           ;RemoteCan.c: 266: }
 14120                           ;RemoteCan.c: 268: if (id == 0b00000001001) {
 14121  01527A  0E09               	movlw	9
 14122  01527C  180F               	xorwf	_id,w,c	;volatile
 14123  01527E  1010               	iorwf	_id+1,w,c	;volatile
 14124  015280  1011               	iorwf	_id+2,w,c	;volatile
 14125  015282  1012               	iorwf	_id+3,w,c	;volatile
 14126  015284  A4D8               	btfss	status,2,c
 14127  015286  0012               	return	
 14128                           
 14129                           ;RemoteCan.c: 269: battery = data[0];
 14130  015288  C02B  F0E7         	movff	_data,_battery	;volatile
 14131  01528C  0012               	return	
 14132  01528E                     __end_of_CAN_interpreter:
 14133                           	opt stack 0
 14134                           tblptru	equ	0xFF8
 14135                           tblptrh	equ	0xFF7
 14136                           tblptrl	equ	0xFF6
 14137                           tablat	equ	0xFF5
 14138                           prodh	equ	0xFF4
 14139                           prodl	equ	0xFF3
 14140                           intcon	equ	0xFF2
 14141                           postinc0	equ	0xFEE
 14142                           wreg	equ	0xFE8
 14143                           indf2	equ	0xFDF
 14144                           postinc2	equ	0xFDE
 14145                           fsr2h	equ	0xFDA
 14146                           fsr2l	equ	0xFD9
 14147                           status	equ	0xFD8
 14148                           
 14149 ;; *************** function ___xxtofl *****************
 14150 ;; Defined at:
 14151 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 14152 ;; Parameters:    Size  Location     Type
 14153 ;;  sign            1    wreg     unsigned char 
 14154 ;;  val             4   15[BANK0 ] long 
 14155 ;; Auto vars:     Size  Location     Type
 14156 ;;  sign            1   23[BANK0 ] unsigned char 
 14157 ;;  arg             4   25[BANK0 ] unsigned long 
 14158 ;;  exp             1   24[BANK0 ] unsigned char 
 14159 ;; Return value:  Size  Location     Type
 14160 ;;                  4   15[BANK0 ] unsigned char 
 14161 ;; Registers used:
 14162 ;;		wreg, status,2, status,0
 14163 ;; Tracked objects:
 14164 ;;		On entry : 0/0
 14165 ;;		On exit  : 0/0
 14166 ;;		Unchanged: 0/0
 14167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14168 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14169 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14170 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;Total ram usage:       14 bytes
 14173 ;; Hardware stack levels used:    1
 14174 ;; Hardware stack levels required when called:    3
 14175 ;; This function calls:
 14176 ;;		Nothing
 14177 ;; This function is called by:
 14178 ;;		_main
 14179 ;;		_CAN_interpreter
 14180 ;;		_sprintf
 14181 ;; This function uses a non-reentrant model
 14182 ;;
 14183                           
 14184                           	psect	text39
 14185  014386                     __ptext39:
 14186                           	opt stack 0
 14187  014386                     ___xxtofl:
 14188                           	opt stack 27
 14189                           
 14190                           ;incstack = 0
 14191                           ;___xxtofl@sign stored from wreg
 14192  014386  0100               	movlb	0	; () banked
 14193  014388  6F77               	movwf	___xxtofl@sign& (0+255),b
 14194  01438A  0100               	movlb	0	; () banked
 14195  01438C  5177               	movf	___xxtofl@sign& (0+255),w,b
 14196  01438E  0100               	movlb	0	; () banked
 14197  014390  B4D8               	btfsc	status,2,c
 14198  014392  D01E               	goto	l1504
 14199                           
 14200                           ; BSR set to: 0
 14201  014394  0100               	movlb	0	; () banked
 14202  014396  AF72               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14203  014398  D01B               	goto	l1504
 14204                           
 14205                           ; BSR set to: 0
 14206  01439A  C06F  F073         	movff	___xxtofl@val,??___xxtofl
 14207  01439E  C070  F074         	movff	___xxtofl@val+1,??___xxtofl+1
 14208  0143A2  C071  F075         	movff	___xxtofl@val+2,??___xxtofl+2
 14209  0143A6  C072  F076         	movff	___xxtofl@val+3,??___xxtofl+3
 14210  0143AA  0100               	movlb	0	; () banked
 14211  0143AC  1F73               	comf	??___xxtofl& (0+255),f,b
 14212  0143AE  1F74               	comf	(??___xxtofl+1)& (0+255),f,b
 14213  0143B0  1F75               	comf	(??___xxtofl+2)& (0+255),f,b
 14214  0143B2  1F76               	comf	(??___xxtofl+3)& (0+255),f,b
 14215  0143B4  2B73               	incf	??___xxtofl& (0+255),f,b
 14216  0143B6  0E00               	movlw	0
 14217  0143B8  2374               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14218  0143BA  2375               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14219  0143BC  2376               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14220  0143BE  C073  F079         	movff	??___xxtofl,___xxtofl@arg
 14221  0143C2  C074  F07A         	movff	??___xxtofl+1,___xxtofl@arg+1
 14222  0143C6  C075  F07B         	movff	??___xxtofl+2,___xxtofl@arg+2
 14223  0143CA  C076  F07C         	movff	??___xxtofl+3,___xxtofl@arg+3
 14224  0143CE  D008               	goto	l7818
 14225  0143D0                     l1504:
 14226                           
 14227                           ; BSR set to: 0
 14228  0143D0  C06F  F079         	movff	___xxtofl@val,___xxtofl@arg
 14229  0143D4  C070  F07A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14230  0143D8  C071  F07B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14231  0143DC  C072  F07C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14232  0143E0                     l7818:
 14233                           
 14234                           ; BSR set to: 0
 14235  0143E0  0100               	movlb	0	; () banked
 14236  0143E2  516F               	movf	___xxtofl@val& (0+255),w,b
 14237  0143E4  0100               	movlb	0	; () banked
 14238  0143E6  1170               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14239  0143E8  0100               	movlb	0	; () banked
 14240  0143EA  1171               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14241  0143EC  0100               	movlb	0	; () banked
 14242  0143EE  1172               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14243  0143F0  A4D8               	btfss	status,2,c
 14244  0143F2  D00A               	goto	l7824
 14245                           
 14246                           ; BSR set to: 0
 14247  0143F4  0E00               	movlw	0
 14248  0143F6  0100               	movlb	0	; () banked
 14249  0143F8  6F6F               	movwf	?___xxtofl& (0+255),b
 14250  0143FA  0E00               	movlw	0
 14251  0143FC  6F70               	movwf	(?___xxtofl+1)& (0+255),b
 14252  0143FE  0E00               	movlw	0
 14253  014400  6F71               	movwf	(?___xxtofl+2)& (0+255),b
 14254  014402  0E00               	movlw	0
 14255  014404  6F72               	movwf	(?___xxtofl+3)& (0+255),b
 14256                           
 14257                           ; BSR set to: 0
 14258  014406  0012               	return	
 14259  014408                     l7824:
 14260                           
 14261                           ; BSR set to: 0
 14262  014408  0E96               	movlw	150
 14263  01440A  0100               	movlb	0	; () banked
 14264  01440C  6F78               	movwf	___xxtofl@exp& (0+255),b
 14265  01440E  D008               	goto	l7828
 14266  014410                     l7826:
 14267                           
 14268                           ; BSR set to: 0
 14269  014410  0100               	movlb	0	; () banked
 14270  014412  2B78               	incf	___xxtofl@exp& (0+255),f,b
 14271  014414  0100               	movlb	0	; () banked
 14272  014416  90D8               	bcf	status,0,c
 14273  014418  337C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14274  01441A  337B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14275  01441C  337A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14276  01441E  3379               	rrcf	___xxtofl@arg& (0+255),f,b
 14277  014420                     l7828:
 14278                           
 14279                           ; BSR set to: 0
 14280  014420  0E00               	movlw	0
 14281  014422  0100               	movlb	0	; () banked
 14282  014424  1579               	andwf	___xxtofl@arg& (0+255),w,b
 14283  014426  0100               	movlb	0	; () banked
 14284  014428  6F73               	movwf	??___xxtofl& (0+255),b
 14285  01442A  0E00               	movlw	0
 14286  01442C  0100               	movlb	0	; () banked
 14287  01442E  157A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14288  014430  0100               	movlb	0	; () banked
 14289  014432  6F74               	movwf	(??___xxtofl+1)& (0+255),b
 14290  014434  0E00               	movlw	0
 14291  014436  0100               	movlb	0	; () banked
 14292  014438  157B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14293  01443A  0100               	movlb	0	; () banked
 14294  01443C  6F75               	movwf	(??___xxtofl+2)& (0+255),b
 14295  01443E  0EFE               	movlw	254
 14296  014440  0100               	movlb	0	; () banked
 14297  014442  157C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14298  014444  0100               	movlb	0	; () banked
 14299  014446  6F76               	movwf	(??___xxtofl+3)& (0+255),b
 14300  014448  0100               	movlb	0	; () banked
 14301  01444A  5173               	movf	??___xxtofl& (0+255),w,b
 14302  01444C  0100               	movlb	0	; () banked
 14303  01444E  1174               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14304  014450  0100               	movlb	0	; () banked
 14305  014452  1175               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14306  014454  0100               	movlb	0	; () banked
 14307  014456  1176               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14308  014458  B4D8               	btfsc	status,2,c
 14309  01445A  D010               	goto	l1511
 14310  01445C  D7D9               	goto	l7826
 14311  01445E                     l7830:
 14312                           
 14313                           ; BSR set to: 0
 14314  01445E  0100               	movlb	0	; () banked
 14315  014460  2B78               	incf	___xxtofl@exp& (0+255),f,b
 14316                           
 14317                           ; BSR set to: 0
 14318  014462  0E01               	movlw	1
 14319  014464  0100               	movlb	0	; () banked
 14320  014466  2779               	addwf	___xxtofl@arg& (0+255),f,b
 14321  014468  0E00               	movlw	0
 14322  01446A  237A               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14323  01446C  237B               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14324  01446E  237C               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14325                           
 14326                           ; BSR set to: 0
 14327  014470  0100               	movlb	0	; () banked
 14328  014472  90D8               	bcf	status,0,c
 14329  014474  337C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14330  014476  337B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14331  014478  337A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14332  01447A  3379               	rrcf	___xxtofl@arg& (0+255),f,b
 14333  01447C                     l1511:
 14334                           
 14335                           ; BSR set to: 0
 14336  01447C  0E00               	movlw	0
 14337  01447E  0100               	movlb	0	; () banked
 14338  014480  1579               	andwf	___xxtofl@arg& (0+255),w,b
 14339  014482  0100               	movlb	0	; () banked
 14340  014484  6F73               	movwf	??___xxtofl& (0+255),b
 14341  014486  0E00               	movlw	0
 14342  014488  0100               	movlb	0	; () banked
 14343  01448A  157A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14344  01448C  0100               	movlb	0	; () banked
 14345  01448E  6F74               	movwf	(??___xxtofl+1)& (0+255),b
 14346  014490  0E00               	movlw	0
 14347  014492  0100               	movlb	0	; () banked
 14348  014494  157B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14349  014496  0100               	movlb	0	; () banked
 14350  014498  6F75               	movwf	(??___xxtofl+2)& (0+255),b
 14351  01449A  0EFF               	movlw	255
 14352  01449C  0100               	movlb	0	; () banked
 14353  01449E  157C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14354  0144A0  0100               	movlb	0	; () banked
 14355  0144A2  6F76               	movwf	(??___xxtofl+3)& (0+255),b
 14356  0144A4  0100               	movlb	0	; () banked
 14357  0144A6  5173               	movf	??___xxtofl& (0+255),w,b
 14358  0144A8  0100               	movlb	0	; () banked
 14359  0144AA  1174               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14360  0144AC  0100               	movlb	0	; () banked
 14361  0144AE  1175               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14362  0144B0  0100               	movlb	0	; () banked
 14363  0144B2  1176               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14364  0144B4  B4D8               	btfsc	status,2,c
 14365  0144B6  D009               	goto	l7838
 14366  0144B8  D7D2               	goto	l7830
 14367  0144BA                     l7836:
 14368                           
 14369                           ; BSR set to: 0
 14370  0144BA  0100               	movlb	0	; () banked
 14371  0144BC  0778               	decf	___xxtofl@exp& (0+255),f,b
 14372  0144BE  0100               	movlb	0	; () banked
 14373  0144C0  90D8               	bcf	status,0,c
 14374  0144C2  3779               	rlcf	___xxtofl@arg& (0+255),f,b
 14375  0144C4  377A               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14376  0144C6  377B               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14377  0144C8  377C               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14378  0144CA                     l7838:
 14379                           
 14380                           ; BSR set to: 0
 14381  0144CA  0100               	movlb	0	; () banked
 14382  0144CC  BF7B               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14383  0144CE  D004               	goto	l1518
 14384                           
 14385                           ; BSR set to: 0
 14386  0144D0  0E02               	movlw	2
 14387  0144D2  0100               	movlb	0	; () banked
 14388  0144D4  6178               	cpfslt	___xxtofl@exp& (0+255),b
 14389  0144D6  D7F1               	goto	l7836
 14390  0144D8                     l1518:
 14391                           
 14392                           ; BSR set to: 0
 14393  0144D8  0100               	movlb	0	; () banked
 14394  0144DA  B178               	btfsc	___xxtofl@exp& (0+255),0,b
 14395  0144DC  D009               	goto	l1519
 14396                           
 14397                           ; BSR set to: 0
 14398  0144DE  0EFF               	movlw	255
 14399  0144E0  0100               	movlb	0	; () banked
 14400  0144E2  1779               	andwf	___xxtofl@arg& (0+255),f,b
 14401  0144E4  0EFF               	movlw	255
 14402  0144E6  177A               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14403  0144E8  0E7F               	movlw	127
 14404  0144EA  177B               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14405  0144EC  0EFF               	movlw	255
 14406  0144EE  177C               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14407  0144F0                     l1519:
 14408                           
 14409                           ; BSR set to: 0
 14410  0144F0  0100               	movlb	0	; () banked
 14411  0144F2  90D8               	bcf	status,0,c
 14412  0144F4  3378               	rrcf	___xxtofl@exp& (0+255),f,b
 14413  0144F6  C078  F073         	movff	___xxtofl@exp,??___xxtofl
 14414  0144FA  0100               	movlb	0	; () banked
 14415  0144FC  6B74               	clrf	(??___xxtofl+1)& (0+255),b
 14416  0144FE  6B75               	clrf	(??___xxtofl+2)& (0+255),b
 14417  014500  6B76               	clrf	(??___xxtofl+3)& (0+255),b
 14418  014502  C073  F076         	movff	??___xxtofl,??___xxtofl+3
 14419  014506  0100               	movlb	0	; () banked
 14420  014508  6B75               	clrf	(??___xxtofl+2)& (0+255),b
 14421  01450A  6B74               	clrf	(??___xxtofl+1)& (0+255),b
 14422  01450C  6B73               	clrf	??___xxtofl& (0+255),b
 14423  01450E  0100               	movlb	0	; () banked
 14424  014510  5173               	movf	??___xxtofl& (0+255),w,b
 14425  014512  0100               	movlb	0	; () banked
 14426  014514  1379               	iorwf	___xxtofl@arg& (0+255),f,b
 14427  014516  0100               	movlb	0	; () banked
 14428  014518  5174               	movf	(??___xxtofl+1)& (0+255),w,b
 14429  01451A  0100               	movlb	0	; () banked
 14430  01451C  137A               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14431  01451E  0100               	movlb	0	; () banked
 14432  014520  5175               	movf	(??___xxtofl+2)& (0+255),w,b
 14433  014522  0100               	movlb	0	; () banked
 14434  014524  137B               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14435  014526  0100               	movlb	0	; () banked
 14436  014528  5176               	movf	(??___xxtofl+3)& (0+255),w,b
 14437  01452A  0100               	movlb	0	; () banked
 14438  01452C  137C               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14439                           
 14440                           ; BSR set to: 0
 14441  01452E  0100               	movlb	0	; () banked
 14442  014530  5177               	movf	___xxtofl@sign& (0+255),w,b
 14443  014532  0100               	movlb	0	; () banked
 14444  014534  B4D8               	btfsc	status,2,c
 14445  014536  D005               	goto	l7850
 14446                           
 14447                           ; BSR set to: 0
 14448  014538  0100               	movlb	0	; () banked
 14449  01453A  AF72               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14450  01453C  D002               	goto	l7850
 14451                           
 14452                           ; BSR set to: 0
 14453  01453E  0100               	movlb	0	; () banked
 14454  014540  8F7C               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14455  014542                     l7850:
 14456                           
 14457                           ; BSR set to: 0
 14458  014542  C079  F06F         	movff	___xxtofl@arg,?___xxtofl
 14459  014546  C07A  F070         	movff	___xxtofl@arg+1,?___xxtofl+1
 14460  01454A  C07B  F071         	movff	___xxtofl@arg+2,?___xxtofl+2
 14461  01454E  C07C  F072         	movff	___xxtofl@arg+3,?___xxtofl+3
 14462  014552  0012               	return	
 14463  014554                     __end_of___xxtofl:
 14464                           	opt stack 0
 14465                           tblptru	equ	0xFF8
 14466                           tblptrh	equ	0xFF7
 14467                           tblptrl	equ	0xFF6
 14468                           tablat	equ	0xFF5
 14469                           prodh	equ	0xFF4
 14470                           prodl	equ	0xFF3
 14471                           intcon	equ	0xFF2
 14472                           postinc0	equ	0xFEE
 14473                           wreg	equ	0xFE8
 14474                           indf2	equ	0xFDF
 14475                           postinc2	equ	0xFDE
 14476                           fsr2h	equ	0xFDA
 14477                           fsr2l	equ	0xFD9
 14478                           status	equ	0xFD8
 14479                           
 14480 ;; *************** function _CAN_Send *****************
 14481 ;; Defined at:
 14482 ;;		line 190 in file "RemoteCan.c"
 14483 ;; Parameters:    Size  Location     Type
 14484 ;;		None
 14485 ;; Auto vars:     Size  Location     Type
 14486 ;;		None
 14487 ;; Return value:  Size  Location     Type
 14488 ;;		None               void
 14489 ;; Registers used:
 14490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14491 ;; Tracked objects:
 14492 ;;		On entry : 0/0
 14493 ;;		On exit  : 0/0
 14494 ;;		Unchanged: 0/0
 14495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;Total ram usage:        0 bytes
 14501 ;; Hardware stack levels used:    1
 14502 ;; Hardware stack levels required when called:    4
 14503 ;; This function calls:
 14504 ;;		_CANisTxReady
 14505 ;;		_CANsendMessage
 14506 ;; This function is called by:
 14507 ;;		_main
 14508 ;; This function uses a non-reentrant model
 14509 ;;
 14510                           
 14511                           	psect	text40
 14512  0156B2                     __ptext40:
 14513                           	opt stack 0
 14514  0156B2                     _CAN_Send:
 14515                           	opt stack 26
 14516  0156B2                     l6508:
 14517  0156B2  ECEE  F0AC         	call	_CANisTxReady	;wreg free
 14518  0156B6  06E8               	decf	wreg,f,c
 14519  0156B8  A4D8               	btfss	status,2,c
 14520  0156BA  D7FB               	goto	l6508
 14521                           
 14522                           ;RemoteCan.c: 192: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14523  0156BC  0E05               	movlw	5
 14524  0156BE  0100               	movlb	0	; () banked
 14525  0156C0  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 14526  0156C2  0E00               	movlw	0
 14527  0156C4  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14528  0156C6  0E00               	movlw	0
 14529  0156C8  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14530  0156CA  0E00               	movlw	0
 14531  0156CC  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14532  0156CE  0EEC               	movlw	low _data_steering
 14533  0156D0  0100               	movlb	0	; () banked
 14534  0156D2  6F73               	movwf	CANsendMessage@data& (0+255),b
 14535  0156D4  0E00               	movlw	high _data_steering
 14536  0156D6  0100               	movlb	0	; () banked
 14537  0156D8  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 14538  0156DA  0E08               	movlw	8
 14539  0156DC  0100               	movlb	0	; () banked
 14540  0156DE  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 14541  0156E0  0EBC               	movlw	188
 14542  0156E2  0100               	movlb	0	; () banked
 14543  0156E4  6F76               	movwf	CANsendMessage@flags& (0+255),b
 14544  0156E6  ECCD  F089         	call	_CANsendMessage	;wreg free
 14545                           
 14546                           ;RemoteCan.c: 193: data_speed[0] = set_speed;
 14547  0156EA  C0E5  F0EB         	movff	_set_speed,_data_speed	;volatile
 14548                           
 14549                           ;RemoteCan.c: 194: data_speed[1] = (set_speed >> 8);
 14550  0156EE  0100               	movlb	0	; () banked
 14551  0156F0  51E6               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 14552  0156F2  0100               	movlb	0	; () banked
 14553  0156F4  6FEC               	movwf	(_data_speed+1)& (0+255),b
 14554                           
 14555                           ; BSR set to: 0
 14556                           ;RemoteCan.c: 195: data_speed[2] = dir;
 14557  0156F6  C0E9  F0ED         	movff	_dir,_data_speed+2	;volatile
 14558  0156FA                     l6518:
 14559  0156FA  ECEE  F0AC         	call	_CANisTxReady	;wreg free
 14560  0156FE  06E8               	decf	wreg,f,c
 14561  015700  A4D8               	btfss	status,2,c
 14562  015702  D7FB               	goto	l6518
 14563                           
 14564                           ;RemoteCan.c: 197: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 14565  015704  0E03               	movlw	3
 14566  015706  0100               	movlb	0	; () banked
 14567  015708  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 14568  01570A  0E00               	movlw	0
 14569  01570C  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 14570  01570E  0E00               	movlw	0
 14571  015710  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 14572  015712  0E00               	movlw	0
 14573  015714  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 14574  015716  0EEB               	movlw	low _data_speed
 14575  015718  0100               	movlb	0	; () banked
 14576  01571A  6F73               	movwf	CANsendMessage@data& (0+255),b
 14577  01571C  0E00               	movlw	high _data_speed
 14578  01571E  0100               	movlb	0	; () banked
 14579  015720  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 14580  015722  0E08               	movlw	8
 14581  015724  0100               	movlb	0	; () banked
 14582  015726  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 14583  015728  0EBC               	movlw	188
 14584  01572A  0100               	movlb	0	; () banked
 14585  01572C  6F76               	movwf	CANsendMessage@flags& (0+255),b
 14586  01572E  ECCD  F089         	call	_CANsendMessage	;wreg free
 14587  015732  0012               	return		;funcret
 14588  015734                     __end_of_CAN_Send:
 14589                           	opt stack 0
 14590                           tblptru	equ	0xFF8
 14591                           tblptrh	equ	0xFF7
 14592                           tblptrl	equ	0xFF6
 14593                           tablat	equ	0xFF5
 14594                           prodh	equ	0xFF4
 14595                           prodl	equ	0xFF3
 14596                           intcon	equ	0xFF2
 14597                           postinc0	equ	0xFEE
 14598                           wreg	equ	0xFE8
 14599                           indf2	equ	0xFDF
 14600                           postinc2	equ	0xFDE
 14601                           fsr2h	equ	0xFDA
 14602                           fsr2l	equ	0xFD9
 14603                           status	equ	0xFD8
 14604                           
 14605 ;; *************** function _CANsendMessage *****************
 14606 ;; Defined at:
 14607 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14608 ;; Parameters:    Size  Location     Type
 14609 ;;  identifier      4   15[BANK0 ] unsigned long 
 14610 ;;  data            2   19[BANK0 ] PTR unsigned char 
 14611 ;;		 -> data_speed(1), data_steering(1), data(1), 
 14612 ;;  dataLength      1   21[BANK0 ] unsigned char 
 14613 ;;  flags           1   22[BANK0 ] enum E16909
 14614 ;; Auto vars:     Size  Location     Type
 14615 ;;  tamp            4   27[BANK0 ] unsigned long 
 14616 ;; Return value:  Size  Location     Type
 14617 ;;		None               void
 14618 ;; Registers used:
 14619 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14620 ;; Tracked objects:
 14621 ;;		On entry : 0/0
 14622 ;;		On exit  : 0/0
 14623 ;;		Unchanged: 0/0
 14624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14625 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14626 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14628 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14629 ;;Total ram usage:       16 bytes
 14630 ;; Hardware stack levels used:    1
 14631 ;; Hardware stack levels required when called:    3
 14632 ;; This function calls:
 14633 ;;		Nothing
 14634 ;; This function is called by:
 14635 ;;		_CAN_Send
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           	psect	text41
 14640  01139A                     __ptext41:
 14641                           	opt stack 0
 14642  01139A                     _CANsendMessage:
 14643                           	opt stack 26
 14644                           
 14645                           ;inc\CANlib.h: 296: unsigned long tamp;
 14646                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 14647                           
 14648                           ;incstack = 0
 14649  01139A  010F               	movlb	15	; () banked
 14650  01139C  B740               	btfsc	64,3,b	;volatile
 14651  01139E  D13F               	goto	l371
 14652                           
 14653                           ; BSR set to: 15
 14654                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 14655  0113A0  C075  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 14656                           
 14657                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 14658  0113A4  0100               	movlb	0	; () banked
 14659  0113A6  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 14660  0113A8  D003               	goto	l372
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 14664  0113AA  010F               	movlb	15	; () banked
 14665  0113AC  8D45               	bsf	69,6,b	;volatile
 14666  0113AE  D002               	goto	l373
 14667  0113B0                     l372:
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;inc\CANlib.h: 302: else
 14671                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 14672  0113B0  010F               	movlb	15	; () banked
 14673  0113B2  9D45               	bcf	69,6,b	;volatile
 14674  0113B4                     l373:
 14675                           
 14676                           ; BSR set to: 15
 14677                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 14678  0113B4  0100               	movlb	0	; () banked
 14679  0113B6  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 14680  0113B8  D079               	goto	l374
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;inc\CANlib.h: 306: {
 14684                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 14685  0113BA  0100               	movlb	0	; () banked
 14686  0113BC  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 14687  0113BE  0100               	movlb	0	; () banked
 14688  0113C0  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 14689  0113C2  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14690  0113C4  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14691  0113C6  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14692                           
 14693                           ; BSR set to: 0
 14694                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 14695  0113C8  C07B  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 14696                           
 14697                           ; BSR set to: 0
 14698                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 14699  0113CC  0E00               	movlw	0
 14700  0113CE  0100               	movlb	0	; () banked
 14701  0113D0  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 14702  0113D2  0100               	movlb	0	; () banked
 14703  0113D4  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 14704  0113D6  0EFF               	movlw	255
 14705  0113D8  0100               	movlb	0	; () banked
 14706  0113DA  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 14707  0113DC  0100               	movlb	0	; () banked
 14708  0113DE  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 14709  0113E0  0E00               	movlw	0
 14710  0113E2  0100               	movlb	0	; () banked
 14711  0113E4  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 14712  0113E6  0100               	movlb	0	; () banked
 14713  0113E8  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 14714  0113EA  0E00               	movlw	0
 14715  0113EC  0100               	movlb	0	; () banked
 14716  0113EE  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 14717  0113F0  0100               	movlb	0	; () banked
 14718  0113F2  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 14722  0113F4  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 14723  0113F8  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 14724  0113FC  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 14725  011400  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 14726  011404  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 14727  011408  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 14728  01140C  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 14729  011410  0100               	movlb	0	; () banked
 14730  011412  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 14731  011414  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 14732  011418  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14733  01141C  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14734  011420  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14735                           
 14736                           ; BSR set to: 0
 14737                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 14738  011424  C07B  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 14739                           
 14740                           ; BSR set to: 0
 14741                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 14742  011428  0E00               	movlw	0
 14743  01142A  010F               	movlb	15	; () banked
 14744  01142C  6F42               	movwf	66,b	;volatile
 14745                           
 14746                           ; BSR set to: 15
 14747                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 14748  01142E  010F               	movlb	15	; () banked
 14749  011430  8742               	bsf	66,3,b	;volatile
 14750                           
 14751                           ; BSR set to: 15
 14752                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 14753  011432  0100               	movlb	0	; () banked
 14754  011434  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 14755  011436  D002               	goto	l375
 14756                           
 14757                           ; BSR set to: 0
 14758                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 14759  011438  010F               	movlb	15	; () banked
 14760  01143A  8142               	bsf	66,0,b	;volatile
 14761  01143C                     l375:
 14762                           
 14763                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 14764  01143C  0100               	movlb	0	; () banked
 14765  01143E  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 14766  011440  D002               	goto	l376
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 14770  011442  010F               	movlb	15	; () banked
 14771  011444  8342               	bsf	66,1,b	;volatile
 14772  011446                     l376:
 14773                           
 14774                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 14775  011446  0100               	movlb	0	; () banked
 14776  011448  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 14777  01144A  D002               	goto	l377
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 14781  01144C  010F               	movlb	15	; () banked
 14782  01144E  8B42               	bsf	66,5,b	;volatile
 14783  011450                     l377:
 14784                           
 14785                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 14786  011450  0100               	movlb	0	; () banked
 14787  011452  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 14788  011454  D002               	goto	l378
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 14792  011456  010F               	movlb	15	; () banked
 14793  011458  8D42               	bsf	66,6,b	;volatile
 14794  01145A                     l378:
 14795                           
 14796                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 14797  01145A  0100               	movlb	0	; () banked
 14798  01145C  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 14799  01145E  D002               	goto	l5646
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 14803  011460  010F               	movlb	15	; () banked
 14804  011462  8F42               	bsf	66,7,b	;volatile
 14805  011464                     l5646:
 14806                           
 14807                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 14808  011464  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 14809  011468  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 14810  01146C  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 14811  011470  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 14812  011474  0E16               	movlw	22
 14813  011476  D006               	goto	u6890
 14814  011478                     u6895:
 14815  011478  0100               	movlb	0	; () banked
 14816  01147A  90D8               	bcf	status,0,c
 14817  01147C  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 14818  01147E  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 14819  011480  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 14820  011482  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 14821  011484                     u6890:
 14822  011484  2EE8               	decfsz	wreg,f,c
 14823  011486  D7F8               	goto	u6895
 14824  011488  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 14825  01148C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14826  011490  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14827  011494  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14828                           
 14829                           ; BSR set to: 0
 14830                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 14831  011498  0100               	movlb	0	; () banked
 14832  01149A  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 14833  01149C  0100               	movlb	0	; () banked
 14834  01149E  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 14835  0114A0  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14836  0114A2  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14837  0114A4  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14838                           
 14839                           ; BSR set to: 0
 14840                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 14841  0114A6  C07B  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 14842                           
 14843                           ;inc\CANlib.h: 332: }
 14844  0114AA  D059               	goto	l5666
 14845  0114AC                     l374:
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;inc\CANlib.h: 334: else
 14849                           ;inc\CANlib.h: 336: {
 14850                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 14851  0114AC  010F               	movlb	15	; () banked
 14852  0114AE  9742               	bcf	66,3,b	;volatile
 14853                           
 14854                           ; BSR set to: 15
 14855                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 14856  0114B0  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 14857  0114B4  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 14858  0114B8  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 14859  0114BC  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 14860  0114C0  0E04               	movlw	4
 14861  0114C2  D006               	goto	u6900
 14862  0114C4                     u6905:
 14863  0114C4  0100               	movlb	0	; () banked
 14864  0114C6  90D8               	bcf	status,0,c
 14865  0114C8  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 14866  0114CA  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 14867  0114CC  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 14868  0114CE  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 14869  0114D0                     u6900:
 14870  0114D0  2EE8               	decfsz	wreg,f,c
 14871  0114D2  D7F8               	goto	u6905
 14872  0114D4  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 14873  0114D8  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14874  0114DC  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14875  0114E0  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14876                           
 14877                           ; BSR set to: 0
 14878                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 14879  0114E4  0100               	movlb	0	; () banked
 14880  0114E6  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 14881  0114E8  0100               	movlb	0	; () banked
 14882  0114EA  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 14883  0114EC  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 14884  0114EE  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 14885  0114F0  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 14886                           
 14887                           ; BSR set to: 0
 14888                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 14889  0114F2  C07B  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 14893  0114F6  0E07               	movlw	7
 14894  0114F8  0100               	movlb	0	; () banked
 14895  0114FA  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 14896  0114FC  0100               	movlb	0	; () banked
 14897  0114FE  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 14898  011500  0E00               	movlw	0
 14899  011502  0100               	movlb	0	; () banked
 14900  011504  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 14901  011506  0100               	movlb	0	; () banked
 14902  011508  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 14903  01150A  0E00               	movlw	0
 14904  01150C  0100               	movlb	0	; () banked
 14905  01150E  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 14906  011510  0100               	movlb	0	; () banked
 14907  011512  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 14908  011514  0E00               	movlw	0
 14909  011516  0100               	movlb	0	; () banked
 14910  011518  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 14911  01151A  0100               	movlb	0	; () banked
 14912  01151C  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 14916  01151E  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 14917  011522  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 14918  011526  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 14919  01152A  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 14920  01152E  0E05               	movlw	5
 14921  011530                     u6915:
 14922  011530  90D8               	bcf	status,0,c
 14923  011532  0100               	movlb	0	; () banked
 14924  011534  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 14925  011536  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 14926  011538  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 14927  01153A  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 14928  01153C  2EE8               	decfsz	wreg,f,c
 14929  01153E  D7F8               	goto	u6915
 14930  011540  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 14931  011544  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 14932  011548  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 14933  01154C  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 14934                           
 14935                           ; BSR set to: 0
 14936                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 14937  011550  010F               	movlb	15	; () banked
 14938  011552  5142               	movf	66,w,b	;volatile
 14939  011554  0B1F               	andlw	31
 14940  011556  010F               	movlb	15	; () banked
 14941  011558  6F42               	movwf	66,b	;volatile
 14942                           
 14943                           ; BSR set to: 15
 14944                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 14945  01155A  C07B  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 14946  01155E                     l5666:
 14947                           
 14948                           ;inc\CANlib.h: 347: }
 14949                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 14950  01155E  0100               	movlb	0	; () banked
 14951  011560  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 14952  011562  D003               	goto	l381
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 14956  011564  010F               	movlb	15	; () banked
 14957  011566  8140               	bsf	64,0,b	;volatile
 14958  011568  D002               	goto	l382
 14959  01156A                     l381:
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;inc\CANlib.h: 351: else
 14963                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 14964  01156A  010F               	movlb	15	; () banked
 14965  01156C  9140               	bcf	64,0,b	;volatile
 14966  01156E                     l382:
 14967                           
 14968                           ; BSR set to: 15
 14969                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 14970  01156E  0100               	movlb	0	; () banked
 14971  011570  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 14972  011572  D003               	goto	l383
 14973                           
 14974                           ; BSR set to: 0
 14975                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 14976  011574  010F               	movlb	15	; () banked
 14977  011576  8340               	bsf	64,1,b	;volatile
 14978  011578  D002               	goto	l5672
 14979  01157A                     l383:
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;inc\CANlib.h: 355: else
 14983                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 14984  01157A  010F               	movlb	15	; () banked
 14985  01157C  9340               	bcf	64,1,b	;volatile
 14986  01157E                     l5672:
 14987                           
 14988                           ; BSR set to: 15
 14989                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 14990  01157E  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 14991  011582  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 14992  011586  50DF               	movf	indf2,w,c
 14993  011588  010F               	movlb	15	; () banked
 14994  01158A  6F46               	movwf	70,b	;volatile
 14995                           
 14996                           ; BSR set to: 15
 14997                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 14998  01158C  0100               	movlb	0	; () banked
 14999  01158E  EE20 F001          	lfsr	2,1
 15000  011592  5173               	movf	CANsendMessage@data& (0+255),w,b
 15001  011594  26D9               	addwf	fsr2l,f,c
 15002  011596  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15003  011598  22DA               	addwfc	fsr2h,f,c
 15004  01159A  50DF               	movf	indf2,w,c
 15005  01159C  010F               	movlb	15	; () banked
 15006  01159E  6F47               	movwf	71,b	;volatile
 15007                           
 15008                           ; BSR set to: 15
 15009                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15010  0115A0  0100               	movlb	0	; () banked
 15011  0115A2  EE20 F002          	lfsr	2,2
 15012  0115A6  5173               	movf	CANsendMessage@data& (0+255),w,b
 15013  0115A8  26D9               	addwf	fsr2l,f,c
 15014  0115AA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15015  0115AC  22DA               	addwfc	fsr2h,f,c
 15016  0115AE  50DF               	movf	indf2,w,c
 15017  0115B0  010F               	movlb	15	; () banked
 15018  0115B2  6F48               	movwf	72,b	;volatile
 15019                           
 15020                           ; BSR set to: 15
 15021                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15022  0115B4  0100               	movlb	0	; () banked
 15023  0115B6  EE20 F003          	lfsr	2,3
 15024  0115BA  5173               	movf	CANsendMessage@data& (0+255),w,b
 15025  0115BC  26D9               	addwf	fsr2l,f,c
 15026  0115BE  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15027  0115C0  22DA               	addwfc	fsr2h,f,c
 15028  0115C2  50DF               	movf	indf2,w,c
 15029  0115C4  010F               	movlb	15	; () banked
 15030  0115C6  6F49               	movwf	73,b	;volatile
 15031                           
 15032                           ; BSR set to: 15
 15033                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15034  0115C8  0100               	movlb	0	; () banked
 15035  0115CA  EE20 F004          	lfsr	2,4
 15036  0115CE  5173               	movf	CANsendMessage@data& (0+255),w,b
 15037  0115D0  26D9               	addwf	fsr2l,f,c
 15038  0115D2  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15039  0115D4  22DA               	addwfc	fsr2h,f,c
 15040  0115D6  50DF               	movf	indf2,w,c
 15041  0115D8  010F               	movlb	15	; () banked
 15042  0115DA  6F4A               	movwf	74,b	;volatile
 15043                           
 15044                           ; BSR set to: 15
 15045                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15046  0115DC  0100               	movlb	0	; () banked
 15047  0115DE  EE20 F005          	lfsr	2,5
 15048  0115E2  5173               	movf	CANsendMessage@data& (0+255),w,b
 15049  0115E4  26D9               	addwf	fsr2l,f,c
 15050  0115E6  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15051  0115E8  22DA               	addwfc	fsr2h,f,c
 15052  0115EA  50DF               	movf	indf2,w,c
 15053  0115EC  010F               	movlb	15	; () banked
 15054  0115EE  6F4B               	movwf	75,b	;volatile
 15055                           
 15056                           ; BSR set to: 15
 15057                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15058  0115F0  0100               	movlb	0	; () banked
 15059  0115F2  EE20 F006          	lfsr	2,6
 15060  0115F6  5173               	movf	CANsendMessage@data& (0+255),w,b
 15061  0115F8  26D9               	addwf	fsr2l,f,c
 15062  0115FA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15063  0115FC  22DA               	addwfc	fsr2h,f,c
 15064  0115FE  50DF               	movf	indf2,w,c
 15065  011600  010F               	movlb	15	; () banked
 15066  011602  6F4C               	movwf	76,b	;volatile
 15067                           
 15068                           ; BSR set to: 15
 15069                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15070  011604  0100               	movlb	0	; () banked
 15071  011606  EE20 F007          	lfsr	2,7
 15072  01160A  5173               	movf	CANsendMessage@data& (0+255),w,b
 15073  01160C  26D9               	addwf	fsr2l,f,c
 15074  01160E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15075  011610  22DA               	addwfc	fsr2h,f,c
 15076  011612  50DF               	movf	indf2,w,c
 15077  011614  010F               	movlb	15	; () banked
 15078  011616  6F4D               	movwf	77,b	;volatile
 15079                           
 15080                           ; BSR set to: 15
 15081                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15082  011618  010F               	movlb	15	; () banked
 15083  01161A  8740               	bsf	64,3,b	;volatile
 15084                           
 15085                           ; BSR set to: 15
 15086                           ;inc\CANlib.h: 368: return;
 15087  01161C  0012               	return	
 15088  01161E                     l371:
 15089                           
 15090                           ; BSR set to: 15
 15091                           ;inc\CANlib.h: 369: }
 15092                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15093  01161E  010F               	movlb	15	; () banked
 15094  011620  B730               	btfsc	48,3,b	;volatile
 15095  011622  D13F               	goto	l386
 15096                           
 15097                           ; BSR set to: 15
 15098                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15099  011624  C075  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 15100                           
 15101                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15102  011628  0100               	movlb	0	; () banked
 15103  01162A  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 15104  01162C  D003               	goto	l387
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 15108  01162E  010F               	movlb	15	; () banked
 15109  011630  8D35               	bsf	53,6,b	;volatile
 15110  011632  D002               	goto	l388
 15111  011634                     l387:
 15112                           
 15113                           ; BSR set to: 0
 15114                           ;inc\CANlib.h: 378: else
 15115                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 15116  011634  010F               	movlb	15	; () banked
 15117  011636  9D35               	bcf	53,6,b	;volatile
 15118  011638                     l388:
 15119                           
 15120                           ; BSR set to: 15
 15121                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 15122  011638  0100               	movlb	0	; () banked
 15123  01163A  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 15124  01163C  D079               	goto	l389
 15125                           
 15126                           ; BSR set to: 0
 15127                           ;inc\CANlib.h: 382: {
 15128                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 15129  01163E  0100               	movlb	0	; () banked
 15130  011640  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 15131  011642  0100               	movlb	0	; () banked
 15132  011644  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15133  011646  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15134  011648  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15135  01164A  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 15139  01164C  C07B  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 15143  011650  0E00               	movlw	0
 15144  011652  0100               	movlb	0	; () banked
 15145  011654  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15146  011656  0100               	movlb	0	; () banked
 15147  011658  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15148  01165A  0EFF               	movlw	255
 15149  01165C  0100               	movlb	0	; () banked
 15150  01165E  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15151  011660  0100               	movlb	0	; () banked
 15152  011662  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15153  011664  0E00               	movlw	0
 15154  011666  0100               	movlb	0	; () banked
 15155  011668  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15156  01166A  0100               	movlb	0	; () banked
 15157  01166C  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15158  01166E  0E00               	movlw	0
 15159  011670  0100               	movlb	0	; () banked
 15160  011672  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15161  011674  0100               	movlb	0	; () banked
 15162  011676  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15163                           
 15164                           ; BSR set to: 0
 15165                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 15166  011678  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15167  01167C  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15168  011680  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15169  011684  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15170  011688  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 15171  01168C  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15172  011690  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15173  011694  0100               	movlb	0	; () banked
 15174  011696  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 15175  011698  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15176  01169C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15177  0116A0  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15178  0116A4  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 15182  0116A8  C07B  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 15183                           
 15184                           ; BSR set to: 0
 15185                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 15186  0116AC  0E00               	movlw	0
 15187  0116AE  010F               	movlb	15	; () banked
 15188  0116B0  6F32               	movwf	50,b	;volatile
 15189                           
 15190                           ; BSR set to: 15
 15191                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 15192  0116B2  010F               	movlb	15	; () banked
 15193  0116B4  8732               	bsf	50,3,b	;volatile
 15194                           
 15195                           ; BSR set to: 15
 15196                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 15197  0116B6  0100               	movlb	0	; () banked
 15198  0116B8  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15199  0116BA  D002               	goto	l390
 15200                           
 15201                           ; BSR set to: 0
 15202                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 15203  0116BC  010F               	movlb	15	; () banked
 15204  0116BE  8132               	bsf	50,0,b	;volatile
 15205  0116C0                     l390:
 15206                           
 15207                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 15208  0116C0  0100               	movlb	0	; () banked
 15209  0116C2  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15210  0116C4  D002               	goto	l391
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 15214  0116C6  010F               	movlb	15	; () banked
 15215  0116C8  8332               	bsf	50,1,b	;volatile
 15216  0116CA                     l391:
 15217                           
 15218                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 15219  0116CA  0100               	movlb	0	; () banked
 15220  0116CC  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15221  0116CE  D002               	goto	l392
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 15225  0116D0  010F               	movlb	15	; () banked
 15226  0116D2  8B32               	bsf	50,5,b	;volatile
 15227  0116D4                     l392:
 15228                           
 15229                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 15230  0116D4  0100               	movlb	0	; () banked
 15231  0116D6  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15232  0116D8  D002               	goto	l393
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 15236  0116DA  010F               	movlb	15	; () banked
 15237  0116DC  8D32               	bsf	50,6,b	;volatile
 15238  0116DE                     l393:
 15239                           
 15240                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 15241  0116DE  0100               	movlb	0	; () banked
 15242  0116E0  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15243  0116E2  D002               	goto	l5722
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 15247  0116E4  010F               	movlb	15	; () banked
 15248  0116E6  8F32               	bsf	50,7,b	;volatile
 15249  0116E8                     l5722:
 15250                           
 15251                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 15252  0116E8  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15253  0116EC  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15254  0116F0  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15255  0116F4  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15256  0116F8  0E16               	movlw	22
 15257  0116FA  D006               	goto	u7020
 15258  0116FC                     u7025:
 15259  0116FC  0100               	movlb	0	; () banked
 15260  0116FE  90D8               	bcf	status,0,c
 15261  011700  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15262  011702  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15263  011704  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15264  011706  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15265  011708                     u7020:
 15266  011708  2EE8               	decfsz	wreg,f,c
 15267  01170A  D7F8               	goto	u7025
 15268  01170C  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15269  011710  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15270  011714  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15271  011718  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 15275  01171C  0100               	movlb	0	; () banked
 15276  01171E  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15277  011720  0100               	movlb	0	; () banked
 15278  011722  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15279  011724  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15280  011726  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15281  011728  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15282                           
 15283                           ; BSR set to: 0
 15284                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 15285  01172A  C07B  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 15286                           
 15287                           ;inc\CANlib.h: 407: }
 15288  01172E  D059               	goto	l5742
 15289  011730                     l389:
 15290                           
 15291                           ; BSR set to: 0
 15292                           ;inc\CANlib.h: 409: else
 15293                           ;inc\CANlib.h: 411: {
 15294                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 15295  011730  010F               	movlb	15	; () banked
 15296  011732  9732               	bcf	50,3,b	;volatile
 15297                           
 15298                           ; BSR set to: 15
 15299                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 15300  011734  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15301  011738  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15302  01173C  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15303  011740  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15304  011744  0E04               	movlw	4
 15305  011746  D006               	goto	u7030
 15306  011748                     u7035:
 15307  011748  0100               	movlb	0	; () banked
 15308  01174A  90D8               	bcf	status,0,c
 15309  01174C  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15310  01174E  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15311  011750  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15312  011752  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15313  011754                     u7030:
 15314  011754  2EE8               	decfsz	wreg,f,c
 15315  011756  D7F8               	goto	u7035
 15316  011758  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15317  01175C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15318  011760  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15319  011764  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 15323  011768  0100               	movlb	0	; () banked
 15324  01176A  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15325  01176C  0100               	movlb	0	; () banked
 15326  01176E  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15327  011770  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15328  011772  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15329  011774  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15330                           
 15331                           ; BSR set to: 0
 15332                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 15333  011776  C07B  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 15334                           
 15335                           ; BSR set to: 0
 15336                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 15337  01177A  0E07               	movlw	7
 15338  01177C  0100               	movlb	0	; () banked
 15339  01177E  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15340  011780  0100               	movlb	0	; () banked
 15341  011782  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15342  011784  0E00               	movlw	0
 15343  011786  0100               	movlb	0	; () banked
 15344  011788  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15345  01178A  0100               	movlb	0	; () banked
 15346  01178C  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15347  01178E  0E00               	movlw	0
 15348  011790  0100               	movlb	0	; () banked
 15349  011792  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15350  011794  0100               	movlb	0	; () banked
 15351  011796  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15352  011798  0E00               	movlw	0
 15353  01179A  0100               	movlb	0	; () banked
 15354  01179C  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15355  01179E  0100               	movlb	0	; () banked
 15356  0117A0  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 15360  0117A2  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15361  0117A6  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15362  0117AA  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15363  0117AE  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15364  0117B2  0E05               	movlw	5
 15365  0117B4                     u7045:
 15366  0117B4  90D8               	bcf	status,0,c
 15367  0117B6  0100               	movlb	0	; () banked
 15368  0117B8  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 15369  0117BA  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15370  0117BC  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15371  0117BE  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15372  0117C0  2EE8               	decfsz	wreg,f,c
 15373  0117C2  D7F8               	goto	u7045
 15374  0117C4  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15375  0117C8  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15376  0117CC  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15377  0117D0  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15378                           
 15379                           ; BSR set to: 0
 15380                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 15381  0117D4  010F               	movlb	15	; () banked
 15382  0117D6  5132               	movf	50,w,b	;volatile
 15383  0117D8  0B1F               	andlw	31
 15384  0117DA  010F               	movlb	15	; () banked
 15385  0117DC  6F32               	movwf	50,b	;volatile
 15386                           
 15387                           ; BSR set to: 15
 15388                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 15389  0117DE  C07B  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 15390  0117E2                     l5742:
 15391                           
 15392                           ;inc\CANlib.h: 422: }
 15393                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 15394  0117E2  0100               	movlb	0	; () banked
 15395  0117E4  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 15396  0117E6  D003               	goto	l396
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 15400  0117E8  010F               	movlb	15	; () banked
 15401  0117EA  8130               	bsf	48,0,b	;volatile
 15402  0117EC  D002               	goto	l397
 15403  0117EE                     l396:
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;inc\CANlib.h: 426: else
 15407                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 15408  0117EE  010F               	movlb	15	; () banked
 15409  0117F0  9130               	bcf	48,0,b	;volatile
 15410  0117F2                     l397:
 15411                           
 15412                           ; BSR set to: 15
 15413                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 15414  0117F2  0100               	movlb	0	; () banked
 15415  0117F4  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 15416  0117F6  D003               	goto	l398
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 15420  0117F8  010F               	movlb	15	; () banked
 15421  0117FA  8330               	bsf	48,1,b	;volatile
 15422  0117FC  D002               	goto	l5748
 15423  0117FE                     l398:
 15424                           
 15425                           ; BSR set to: 0
 15426                           ;inc\CANlib.h: 430: else
 15427                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 15428  0117FE  010F               	movlb	15	; () banked
 15429  011800  9330               	bcf	48,1,b	;volatile
 15430  011802                     l5748:
 15431                           
 15432                           ; BSR set to: 15
 15433                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 15434  011802  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 15435  011806  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15436  01180A  50DF               	movf	indf2,w,c
 15437  01180C  010F               	movlb	15	; () banked
 15438  01180E  6F36               	movwf	54,b	;volatile
 15439                           
 15440                           ; BSR set to: 15
 15441                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 15442  011810  0100               	movlb	0	; () banked
 15443  011812  EE20 F001          	lfsr	2,1
 15444  011816  5173               	movf	CANsendMessage@data& (0+255),w,b
 15445  011818  26D9               	addwf	fsr2l,f,c
 15446  01181A  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15447  01181C  22DA               	addwfc	fsr2h,f,c
 15448  01181E  50DF               	movf	indf2,w,c
 15449  011820  010F               	movlb	15	; () banked
 15450  011822  6F37               	movwf	55,b	;volatile
 15451                           
 15452                           ; BSR set to: 15
 15453                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 15454  011824  0100               	movlb	0	; () banked
 15455  011826  EE20 F002          	lfsr	2,2
 15456  01182A  5173               	movf	CANsendMessage@data& (0+255),w,b
 15457  01182C  26D9               	addwf	fsr2l,f,c
 15458  01182E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15459  011830  22DA               	addwfc	fsr2h,f,c
 15460  011832  50DF               	movf	indf2,w,c
 15461  011834  010F               	movlb	15	; () banked
 15462  011836  6F38               	movwf	56,b	;volatile
 15463                           
 15464                           ; BSR set to: 15
 15465                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 15466  011838  0100               	movlb	0	; () banked
 15467  01183A  EE20 F003          	lfsr	2,3
 15468  01183E  5173               	movf	CANsendMessage@data& (0+255),w,b
 15469  011840  26D9               	addwf	fsr2l,f,c
 15470  011842  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15471  011844  22DA               	addwfc	fsr2h,f,c
 15472  011846  50DF               	movf	indf2,w,c
 15473  011848  010F               	movlb	15	; () banked
 15474  01184A  6F39               	movwf	57,b	;volatile
 15475                           
 15476                           ; BSR set to: 15
 15477                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 15478  01184C  0100               	movlb	0	; () banked
 15479  01184E  EE20 F004          	lfsr	2,4
 15480  011852  5173               	movf	CANsendMessage@data& (0+255),w,b
 15481  011854  26D9               	addwf	fsr2l,f,c
 15482  011856  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15483  011858  22DA               	addwfc	fsr2h,f,c
 15484  01185A  50DF               	movf	indf2,w,c
 15485  01185C  010F               	movlb	15	; () banked
 15486  01185E  6F3A               	movwf	58,b	;volatile
 15487                           
 15488                           ; BSR set to: 15
 15489                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 15490  011860  0100               	movlb	0	; () banked
 15491  011862  EE20 F005          	lfsr	2,5
 15492  011866  5173               	movf	CANsendMessage@data& (0+255),w,b
 15493  011868  26D9               	addwf	fsr2l,f,c
 15494  01186A  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15495  01186C  22DA               	addwfc	fsr2h,f,c
 15496  01186E  50DF               	movf	indf2,w,c
 15497  011870  010F               	movlb	15	; () banked
 15498  011872  6F3B               	movwf	59,b	;volatile
 15499                           
 15500                           ; BSR set to: 15
 15501                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 15502  011874  0100               	movlb	0	; () banked
 15503  011876  EE20 F006          	lfsr	2,6
 15504  01187A  5173               	movf	CANsendMessage@data& (0+255),w,b
 15505  01187C  26D9               	addwf	fsr2l,f,c
 15506  01187E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15507  011880  22DA               	addwfc	fsr2h,f,c
 15508  011882  50DF               	movf	indf2,w,c
 15509  011884  010F               	movlb	15	; () banked
 15510  011886  6F3C               	movwf	60,b	;volatile
 15511                           
 15512                           ; BSR set to: 15
 15513                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 15514  011888  0100               	movlb	0	; () banked
 15515  01188A  EE20 F007          	lfsr	2,7
 15516  01188E  5173               	movf	CANsendMessage@data& (0+255),w,b
 15517  011890  26D9               	addwf	fsr2l,f,c
 15518  011892  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15519  011894  22DA               	addwfc	fsr2h,f,c
 15520  011896  50DF               	movf	indf2,w,c
 15521  011898  010F               	movlb	15	; () banked
 15522  01189A  6F3D               	movwf	61,b	;volatile
 15523                           
 15524                           ; BSR set to: 15
 15525                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 15526  01189C  010F               	movlb	15	; () banked
 15527  01189E  8730               	bsf	48,3,b	;volatile
 15528                           
 15529                           ; BSR set to: 15
 15530                           ;inc\CANlib.h: 444: return;
 15531  0118A0  0012               	return	
 15532  0118A2                     l386:
 15533                           
 15534                           ; BSR set to: 15
 15535                           ;inc\CANlib.h: 445: }
 15536                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 15537  0118A2  010F               	movlb	15	; () banked
 15538  0118A4  B720               	btfsc	32,3,b	;volatile
 15539  0118A6  0012               	return	
 15540                           
 15541                           ; BSR set to: 15
 15542                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 15543  0118A8  C075  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 15544                           
 15545                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 15546  0118AC  0100               	movlb	0	; () banked
 15547  0118AE  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 15548  0118B0  D003               	goto	l401
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 15552  0118B2  010F               	movlb	15	; () banked
 15553  0118B4  8D25               	bsf	37,6,b	;volatile
 15554  0118B6  D002               	goto	l402
 15555  0118B8                     l401:
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;inc\CANlib.h: 454: else
 15559                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 15560  0118B8  010F               	movlb	15	; () banked
 15561  0118BA  9D25               	bcf	37,6,b	;volatile
 15562  0118BC                     l402:
 15563                           
 15564                           ; BSR set to: 15
 15565                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 15566  0118BC  0100               	movlb	0	; () banked
 15567  0118BE  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 15568  0118C0  D079               	goto	l403
 15569                           
 15570                           ; BSR set to: 0
 15571                           ;inc\CANlib.h: 458: {
 15572                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 15573  0118C2  0100               	movlb	0	; () banked
 15574  0118C4  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 15575  0118C6  0100               	movlb	0	; () banked
 15576  0118C8  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15577  0118CA  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15578  0118CC  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15579  0118CE  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15580                           
 15581                           ; BSR set to: 0
 15582                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 15583  0118D0  C07B  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 15584                           
 15585                           ; BSR set to: 0
 15586                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 15587  0118D4  0E00               	movlw	0
 15588  0118D6  0100               	movlb	0	; () banked
 15589  0118D8  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15590  0118DA  0100               	movlb	0	; () banked
 15591  0118DC  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15592  0118DE  0EFF               	movlw	255
 15593  0118E0  0100               	movlb	0	; () banked
 15594  0118E2  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15595  0118E4  0100               	movlb	0	; () banked
 15596  0118E6  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15597  0118E8  0E00               	movlw	0
 15598  0118EA  0100               	movlb	0	; () banked
 15599  0118EC  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15600  0118EE  0100               	movlb	0	; () banked
 15601  0118F0  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15602  0118F2  0E00               	movlw	0
 15603  0118F4  0100               	movlb	0	; () banked
 15604  0118F6  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15605  0118F8  0100               	movlb	0	; () banked
 15606  0118FA  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 15610  0118FC  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15611  011900  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15612  011904  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15613  011908  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15614  01190C  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 15615  011910  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15616  011914  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15617  011918  0100               	movlb	0	; () banked
 15618  01191A  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 15619  01191C  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15620  011920  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15621  011924  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15622  011928  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 15626  01192C  C07B  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 15630  011930  0E00               	movlw	0
 15631  011932  010F               	movlb	15	; () banked
 15632  011934  6F22               	movwf	34,b	;volatile
 15633                           
 15634                           ; BSR set to: 15
 15635                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 15636  011936  010F               	movlb	15	; () banked
 15637  011938  8722               	bsf	34,3,b	;volatile
 15638                           
 15639                           ; BSR set to: 15
 15640                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 15641  01193A  0100               	movlb	0	; () banked
 15642  01193C  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15643  01193E  D002               	goto	l404
 15644                           
 15645                           ; BSR set to: 0
 15646                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 15647  011940  010F               	movlb	15	; () banked
 15648  011942  8122               	bsf	34,0,b	;volatile
 15649  011944                     l404:
 15650                           
 15651                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 15652  011944  0100               	movlb	0	; () banked
 15653  011946  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15654  011948  D002               	goto	l405
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 15658  01194A  010F               	movlb	15	; () banked
 15659  01194C  8322               	bsf	34,1,b	;volatile
 15660  01194E                     l405:
 15661                           
 15662                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 15663  01194E  0100               	movlb	0	; () banked
 15664  011950  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15665  011952  D002               	goto	l406
 15666                           
 15667                           ; BSR set to: 0
 15668                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 15669  011954  010F               	movlb	15	; () banked
 15670  011956  8B22               	bsf	34,5,b	;volatile
 15671  011958                     l406:
 15672                           
 15673                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 15674  011958  0100               	movlb	0	; () banked
 15675  01195A  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15676  01195C  D002               	goto	l407
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 15680  01195E  010F               	movlb	15	; () banked
 15681  011960  8D22               	bsf	34,6,b	;volatile
 15682  011962                     l407:
 15683                           
 15684                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 15685  011962  0100               	movlb	0	; () banked
 15686  011964  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15687  011966  D002               	goto	l5798
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 15691  011968  010F               	movlb	15	; () banked
 15692  01196A  8F22               	bsf	34,7,b	;volatile
 15693  01196C                     l5798:
 15694                           
 15695                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 15696  01196C  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15697  011970  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15698  011974  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15699  011978  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15700  01197C  0E16               	movlw	22
 15701  01197E  D006               	goto	u7150
 15702  011980                     u7155:
 15703  011980  0100               	movlb	0	; () banked
 15704  011982  90D8               	bcf	status,0,c
 15705  011984  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15706  011986  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15707  011988  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15708  01198A  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15709  01198C                     u7150:
 15710  01198C  2EE8               	decfsz	wreg,f,c
 15711  01198E  D7F8               	goto	u7155
 15712  011990  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15713  011994  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15714  011998  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15715  01199C  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15716                           
 15717                           ; BSR set to: 0
 15718                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 15719  0119A0  0100               	movlb	0	; () banked
 15720  0119A2  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15721  0119A4  0100               	movlb	0	; () banked
 15722  0119A6  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15723  0119A8  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15724  0119AA  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15725  0119AC  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15726                           
 15727                           ; BSR set to: 0
 15728                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 15729  0119AE  C07B  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 15730                           
 15731                           ;inc\CANlib.h: 483: }
 15732  0119B2  D059               	goto	l5818
 15733  0119B4                     l403:
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;inc\CANlib.h: 485: else
 15737                           ;inc\CANlib.h: 487: {
 15738                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 15739  0119B4  010F               	movlb	15	; () banked
 15740  0119B6  9722               	bcf	34,3,b	;volatile
 15741                           
 15742                           ; BSR set to: 15
 15743                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 15744  0119B8  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15745  0119BC  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15746  0119C0  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15747  0119C4  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15748  0119C8  0E04               	movlw	4
 15749  0119CA  D006               	goto	u7160
 15750  0119CC                     u7165:
 15751  0119CC  0100               	movlb	0	; () banked
 15752  0119CE  90D8               	bcf	status,0,c
 15753  0119D0  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15754  0119D2  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15755  0119D4  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15756  0119D6  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15757  0119D8                     u7160:
 15758  0119D8  2EE8               	decfsz	wreg,f,c
 15759  0119DA  D7F8               	goto	u7165
 15760  0119DC  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15761  0119E0  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15762  0119E4  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15763  0119E8  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15764                           
 15765                           ; BSR set to: 0
 15766                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 15767  0119EC  0100               	movlb	0	; () banked
 15768  0119EE  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15769  0119F0  0100               	movlb	0	; () banked
 15770  0119F2  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15771  0119F4  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15772  0119F6  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15773  0119F8  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15774                           
 15775                           ; BSR set to: 0
 15776                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 15777  0119FA  C07B  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 15781  0119FE  0E07               	movlw	7
 15782  011A00  0100               	movlb	0	; () banked
 15783  011A02  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15784  011A04  0100               	movlb	0	; () banked
 15785  011A06  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15786  011A08  0E00               	movlw	0
 15787  011A0A  0100               	movlb	0	; () banked
 15788  011A0C  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15789  011A0E  0100               	movlb	0	; () banked
 15790  011A10  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15791  011A12  0E00               	movlw	0
 15792  011A14  0100               	movlb	0	; () banked
 15793  011A16  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15794  011A18  0100               	movlb	0	; () banked
 15795  011A1A  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15796  011A1C  0E00               	movlw	0
 15797  011A1E  0100               	movlb	0	; () banked
 15798  011A20  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15799  011A22  0100               	movlb	0	; () banked
 15800  011A24  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 15804  011A26  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15805  011A2A  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15806  011A2E  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15807  011A32  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15808  011A36  0E05               	movlw	5
 15809  011A38                     u7175:
 15810  011A38  90D8               	bcf	status,0,c
 15811  011A3A  0100               	movlb	0	; () banked
 15812  011A3C  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 15813  011A3E  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15814  011A40  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15815  011A42  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15816  011A44  2EE8               	decfsz	wreg,f,c
 15817  011A46  D7F8               	goto	u7175
 15818  011A48  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15819  011A4C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15820  011A50  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15821  011A54  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 15825  011A58  010F               	movlb	15	; () banked
 15826  011A5A  5122               	movf	34,w,b	;volatile
 15827  011A5C  0B1F               	andlw	31
 15828  011A5E  010F               	movlb	15	; () banked
 15829  011A60  6F22               	movwf	34,b	;volatile
 15830                           
 15831                           ; BSR set to: 15
 15832                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 15833  011A62  C07B  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 15834  011A66                     l5818:
 15835                           
 15836                           ;inc\CANlib.h: 498: }
 15837                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 15838  011A66  0100               	movlb	0	; () banked
 15839  011A68  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 15840  011A6A  D003               	goto	l410
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 15844  011A6C  010F               	movlb	15	; () banked
 15845  011A6E  8120               	bsf	32,0,b	;volatile
 15846  011A70  D002               	goto	l411
 15847  011A72                     l410:
 15848                           
 15849                           ; BSR set to: 0
 15850                           ;inc\CANlib.h: 502: else
 15851                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 15852  011A72  010F               	movlb	15	; () banked
 15853  011A74  9120               	bcf	32,0,b	;volatile
 15854  011A76                     l411:
 15855                           
 15856                           ; BSR set to: 15
 15857                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 15858  011A76  0100               	movlb	0	; () banked
 15859  011A78  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 15860  011A7A  D003               	goto	l412
 15861                           
 15862                           ; BSR set to: 0
 15863                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 15864  011A7C  010F               	movlb	15	; () banked
 15865  011A7E  8320               	bsf	32,1,b	;volatile
 15866  011A80  D002               	goto	l5824
 15867  011A82                     l412:
 15868                           
 15869                           ; BSR set to: 0
 15870                           ;inc\CANlib.h: 506: else
 15871                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 15872  011A82  010F               	movlb	15	; () banked
 15873  011A84  9320               	bcf	32,1,b	;volatile
 15874  011A86                     l5824:
 15875                           
 15876                           ; BSR set to: 15
 15877                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 15878  011A86  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 15879  011A8A  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15880  011A8E  50DF               	movf	indf2,w,c
 15881  011A90  010F               	movlb	15	; () banked
 15882  011A92  6F26               	movwf	38,b	;volatile
 15883                           
 15884                           ; BSR set to: 15
 15885                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 15886  011A94  0100               	movlb	0	; () banked
 15887  011A96  EE20 F001          	lfsr	2,1
 15888  011A9A  5173               	movf	CANsendMessage@data& (0+255),w,b
 15889  011A9C  26D9               	addwf	fsr2l,f,c
 15890  011A9E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15891  011AA0  22DA               	addwfc	fsr2h,f,c
 15892  011AA2  50DF               	movf	indf2,w,c
 15893  011AA4  010F               	movlb	15	; () banked
 15894  011AA6  6F27               	movwf	39,b	;volatile
 15895                           
 15896                           ; BSR set to: 15
 15897                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 15898  011AA8  0100               	movlb	0	; () banked
 15899  011AAA  EE20 F002          	lfsr	2,2
 15900  011AAE  5173               	movf	CANsendMessage@data& (0+255),w,b
 15901  011AB0  26D9               	addwf	fsr2l,f,c
 15902  011AB2  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15903  011AB4  22DA               	addwfc	fsr2h,f,c
 15904  011AB6  50DF               	movf	indf2,w,c
 15905  011AB8  010F               	movlb	15	; () banked
 15906  011ABA  6F28               	movwf	40,b	;volatile
 15907                           
 15908                           ; BSR set to: 15
 15909                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 15910  011ABC  0100               	movlb	0	; () banked
 15911  011ABE  EE20 F003          	lfsr	2,3
 15912  011AC2  5173               	movf	CANsendMessage@data& (0+255),w,b
 15913  011AC4  26D9               	addwf	fsr2l,f,c
 15914  011AC6  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15915  011AC8  22DA               	addwfc	fsr2h,f,c
 15916  011ACA  50DF               	movf	indf2,w,c
 15917  011ACC  010F               	movlb	15	; () banked
 15918  011ACE  6F29               	movwf	41,b	;volatile
 15919                           
 15920                           ; BSR set to: 15
 15921                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 15922  011AD0  0100               	movlb	0	; () banked
 15923  011AD2  EE20 F004          	lfsr	2,4
 15924  011AD6  5173               	movf	CANsendMessage@data& (0+255),w,b
 15925  011AD8  26D9               	addwf	fsr2l,f,c
 15926  011ADA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15927  011ADC  22DA               	addwfc	fsr2h,f,c
 15928  011ADE  50DF               	movf	indf2,w,c
 15929  011AE0  010F               	movlb	15	; () banked
 15930  011AE2  6F2A               	movwf	42,b	;volatile
 15931                           
 15932                           ; BSR set to: 15
 15933                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 15934  011AE4  0100               	movlb	0	; () banked
 15935  011AE6  EE20 F005          	lfsr	2,5
 15936  011AEA  5173               	movf	CANsendMessage@data& (0+255),w,b
 15937  011AEC  26D9               	addwf	fsr2l,f,c
 15938  011AEE  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15939  011AF0  22DA               	addwfc	fsr2h,f,c
 15940  011AF2  50DF               	movf	indf2,w,c
 15941  011AF4  010F               	movlb	15	; () banked
 15942  011AF6  6F2B               	movwf	43,b	;volatile
 15943                           
 15944                           ; BSR set to: 15
 15945                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 15946  011AF8  0100               	movlb	0	; () banked
 15947  011AFA  EE20 F006          	lfsr	2,6
 15948  011AFE  5173               	movf	CANsendMessage@data& (0+255),w,b
 15949  011B00  26D9               	addwf	fsr2l,f,c
 15950  011B02  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15951  011B04  22DA               	addwfc	fsr2h,f,c
 15952  011B06  50DF               	movf	indf2,w,c
 15953  011B08  010F               	movlb	15	; () banked
 15954  011B0A  6F2C               	movwf	44,b	;volatile
 15955                           
 15956                           ; BSR set to: 15
 15957                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 15958  011B0C  0100               	movlb	0	; () banked
 15959  011B0E  EE20 F007          	lfsr	2,7
 15960  011B12  5173               	movf	CANsendMessage@data& (0+255),w,b
 15961  011B14  26D9               	addwf	fsr2l,f,c
 15962  011B16  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15963  011B18  22DA               	addwfc	fsr2h,f,c
 15964  011B1A  50DF               	movf	indf2,w,c
 15965  011B1C  010F               	movlb	15	; () banked
 15966  011B1E  6F2D               	movwf	45,b	;volatile
 15967                           
 15968                           ; BSR set to: 15
 15969                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 15970  011B20  010F               	movlb	15	; () banked
 15971  011B22  8720               	bsf	32,3,b	;volatile
 15972                           
 15973                           ; BSR set to: 15
 15974                           ;inc\CANlib.h: 520: return;
 15975  011B24  0012               	return	
 15976  011B26                     __end_of_CANsendMessage:
 15977                           	opt stack 0
 15978                           tblptru	equ	0xFF8
 15979                           tblptrh	equ	0xFF7
 15980                           tblptrl	equ	0xFF6
 15981                           tablat	equ	0xFF5
 15982                           prodh	equ	0xFF4
 15983                           prodl	equ	0xFF3
 15984                           intcon	equ	0xFF2
 15985                           postinc0	equ	0xFEE
 15986                           wreg	equ	0xFE8
 15987                           indf2	equ	0xFDF
 15988                           postinc2	equ	0xFDE
 15989                           fsr2h	equ	0xFDA
 15990                           fsr2l	equ	0xFD9
 15991                           status	equ	0xFD8
 15992                           
 15993 ;; *************** function _CANisTxReady *****************
 15994 ;; Defined at:
 15995 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;		None
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;		None
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      unsigned char 
 16002 ;; Registers used:
 16003 ;;		wreg, status,2
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16012 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;Total ram usage:        1 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; Hardware stack levels required when called:    3
 16016 ;; This function calls:
 16017 ;;		Nothing
 16018 ;; This function is called by:
 16019 ;;		_CAN_Send
 16020 ;; This function uses a non-reentrant model
 16021 ;;
 16022                           
 16023                           	psect	text42
 16024  0159DC                     __ptext42:
 16025                           	opt stack 0
 16026  0159DC                     _CANisTxReady:
 16027                           	opt stack 26
 16028                           
 16029                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16030                           
 16031                           ; BSR set to: 15
 16032                           ;incstack = 0
 16033  0159DC  0E01               	movlw	1
 16034  0159DE  0100               	movlb	0	; () banked
 16035  0159E0  6F6F               	movwf	_CANisTxReady$3227& (0+255),b
 16036                           
 16037                           ; BSR set to: 0
 16038  0159E2  010F               	movlb	15	; () banked
 16039  0159E4  A740               	btfss	64,3,b	;volatile
 16040  0159E6  D009               	goto	l564
 16041                           
 16042                           ; BSR set to: 15
 16043  0159E8  010F               	movlb	15	; () banked
 16044  0159EA  A730               	btfss	48,3,b	;volatile
 16045  0159EC  D006               	goto	l564
 16046                           
 16047                           ; BSR set to: 15
 16048  0159EE  010F               	movlb	15	; () banked
 16049  0159F0  A720               	btfss	32,3,b	;volatile
 16050  0159F2  D003               	goto	l564
 16051                           
 16052                           ; BSR set to: 15
 16053  0159F4  0E00               	movlw	0
 16054  0159F6  0100               	movlb	0	; () banked
 16055  0159F8  6F6F               	movwf	_CANisTxReady$3227& (0+255),b
 16056  0159FA                     l564:
 16057  0159FA  0100               	movlb	0	; () banked
 16058  0159FC  516F               	movf	_CANisTxReady$3227& (0+255),w,b
 16059  0159FE  0012               	return	
 16060  015A00                     __end_of_CANisTxReady:
 16061                           	opt stack 0
 16062                           tblptru	equ	0xFF8
 16063                           tblptrh	equ	0xFF7
 16064                           tblptrl	equ	0xFF6
 16065                           tablat	equ	0xFF5
 16066                           prodh	equ	0xFF4
 16067                           prodl	equ	0xFF3
 16068                           intcon	equ	0xFF2
 16069                           postinc0	equ	0xFEE
 16070                           wreg	equ	0xFE8
 16071                           indf2	equ	0xFDF
 16072                           postinc2	equ	0xFDE
 16073                           fsr2h	equ	0xFDA
 16074                           fsr2l	equ	0xFD9
 16075                           status	equ	0xFD8
 16076                           
 16077 ;; *************** function _ISR_bassa *****************
 16078 ;; Defined at:
 16079 ;;		line 102 in file "RemoteCan.c"
 16080 ;; Parameters:    Size  Location     Type
 16081 ;;		None
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;		None
 16084 ;; Return value:  Size  Location     Type
 16085 ;;		None               void
 16086 ;; Registers used:
 16087 ;;		wreg, status,2, status,0
 16088 ;; Tracked objects:
 16089 ;;		On entry : 0/0
 16090 ;;		On exit  : 0/0
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;Total ram usage:       17 bytes
 16098 ;; Hardware stack levels used:    1
 16099 ;; Hardware stack levels required when called:    2
 16100 ;; This function calls:
 16101 ;;		Nothing
 16102 ;; This function is called by:
 16103 ;;		Interrupt level 1
 16104 ;; This function uses a non-reentrant model
 16105 ;;
 16106                           
 16107                           	psect	intcodelo
 16108  000018                     __pintcodelo:
 16109                           	opt stack 0
 16110  000018                     _ISR_bassa:
 16111                           	opt stack 21
 16112                           
 16113                           ; BSR set to: 0
 16114                           ;incstack = 0
 16115  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16116  00001A  CFD8 F02C          	movff	status,??_ISR_bassa
 16117  00001E  CFE8 F02D          	movff	wreg,??_ISR_bassa+1
 16118  000022  CFE0 F02E          	movff	bsr,??_ISR_bassa+2
 16119  000026  CFFA F02F          	movff	pclath,??_ISR_bassa+3
 16120  00002A  CFFB F030          	movff	pclatu,??_ISR_bassa+4
 16121  00002E  CFE9 F031          	movff	fsr0l,??_ISR_bassa+5
 16122  000032  CFEA F032          	movff	fsr0h,??_ISR_bassa+6
 16123  000036  CFE1 F033          	movff	fsr1l,??_ISR_bassa+7
 16124  00003A  CFE2 F034          	movff	fsr1h,??_ISR_bassa+8
 16125  00003E  CFD9 F035          	movff	fsr2l,??_ISR_bassa+9
 16126  000042  CFDA F036          	movff	fsr2h,??_ISR_bassa+10
 16127  000046  CFF3 F037          	movff	prodl,??_ISR_bassa+11
 16128  00004A  CFF4 F038          	movff	prodh,??_ISR_bassa+12
 16129  00004E  CFF6 F039          	movff	tblptrl,??_ISR_bassa+13
 16130  000052  CFF7 F03A          	movff	tblptrh,??_ISR_bassa+14
 16131  000056  CFF8 F03B          	movff	tblptru,??_ISR_bassa+15
 16132  00005A  CFF5 F03C          	movff	tablat,??_ISR_bassa+16
 16133                           
 16134                           ;RemoteCan.c: 103: if (PIR2bits.TMR3IF == 1) {
 16135  00005E  A2A1               	btfss	4001,1,c	;volatile
 16136  000060  D00B               	goto	i1l740
 16137                           
 16138                           ;RemoteCan.c: 104: time_counter++;
 16139  000062  0E01               	movlw	1
 16140  000064  2617               	addwf	_time_counter,f,c	;volatile
 16141  000066  0E00               	movlw	0
 16142  000068  2218               	addwfc	_time_counter+1,f,c	;volatile
 16143  00006A  2219               	addwfc	_time_counter+2,f,c	;volatile
 16144  00006C  221A               	addwfc	_time_counter+3,f,c	;volatile
 16145                           
 16146                           ;RemoteCan.c: 105: TMR3H = 0x63;
 16147  00006E  0E63               	movlw	99
 16148  000070  6EB3               	movwf	4019,c	;volatile
 16149                           
 16150                           ;RemoteCan.c: 106: TMR3L = 0xC0;
 16151  000072  0EC0               	movlw	192
 16152  000074  6EB2               	movwf	4018,c	;volatile
 16153                           
 16154                           ;RemoteCan.c: 107: PIR2bits.TMR3IF = 0;
 16155  000076  92A1               	bcf	4001,1,c	;volatile
 16156  000078                     i1l740:
 16157  000078  C03C  FFF5         	movff	??_ISR_bassa+16,tablat
 16158  00007C  C03B  FFF8         	movff	??_ISR_bassa+15,tblptru
 16159  000080  C03A  FFF7         	movff	??_ISR_bassa+14,tblptrh
 16160  000084  C039  FFF6         	movff	??_ISR_bassa+13,tblptrl
 16161  000088  C038  FFF4         	movff	??_ISR_bassa+12,prodh
 16162  00008C  C037  FFF3         	movff	??_ISR_bassa+11,prodl
 16163  000090  C036  FFDA         	movff	??_ISR_bassa+10,fsr2h
 16164  000094  C035  FFD9         	movff	??_ISR_bassa+9,fsr2l
 16165  000098  C034  FFE2         	movff	??_ISR_bassa+8,fsr1h
 16166  00009C  C033  FFE1         	movff	??_ISR_bassa+7,fsr1l
 16167  0000A0  C032  FFEA         	movff	??_ISR_bassa+6,fsr0h
 16168  0000A4  C031  FFE9         	movff	??_ISR_bassa+5,fsr0l
 16169  0000A8  C030  FFFB         	movff	??_ISR_bassa+4,pclatu
 16170  0000AC  C02F  FFFA         	movff	??_ISR_bassa+3,pclath
 16171  0000B0  C02E  FFE0         	movff	??_ISR_bassa+2,bsr
 16172  0000B4  C02D  FFE8         	movff	??_ISR_bassa+1,wreg
 16173  0000B8  C02C  FFD8         	movff	??_ISR_bassa,status
 16174  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16175  0000BE  0010               	retfie	
 16176  0000C0                     __end_of_ISR_bassa:
 16177                           	opt stack 0
 16178                           pclatu	equ	0xFFB
 16179                           pclath	equ	0xFFA
 16180                           tblptru	equ	0xFF8
 16181                           tblptrh	equ	0xFF7
 16182                           tblptrl	equ	0xFF6
 16183                           tablat	equ	0xFF5
 16184                           prodh	equ	0xFF4
 16185                           prodl	equ	0xFF3
 16186                           intcon	equ	0xFF2
 16187                           postinc0	equ	0xFEE
 16188                           fsr0h	equ	0xFEA
 16189                           fsr0l	equ	0xFE9
 16190                           wreg	equ	0xFE8
 16191                           fsr1h	equ	0xFE2
 16192                           fsr1l	equ	0xFE1
 16193                           bsr	equ	0xFE0
 16194                           indf2	equ	0xFDF
 16195                           postinc2	equ	0xFDE
 16196                           fsr2h	equ	0xFDA
 16197                           fsr2l	equ	0xFD9
 16198                           status	equ	0xFD8
 16199                           
 16200 ;; *************** function _ISR_alta *****************
 16201 ;; Defined at:
 16202 ;;		line 71 in file "RemoteCan.c"
 16203 ;; Parameters:    Size  Location     Type
 16204 ;;		None
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;  i               1   14[BANK0 ] unsigned char 
 16207 ;; Return value:  Size  Location     Type
 16208 ;;		None               void
 16209 ;; Registers used:
 16210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16211 ;; Tracked objects:
 16212 ;;		On entry : 0/0
 16213 ;;		On exit  : 0/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;Total ram usage:       15 bytes
 16221 ;; Hardware stack levels used:    1
 16222 ;; Hardware stack levels required when called:    1
 16223 ;; This function calls:
 16224 ;;		_CANisRxReady
 16225 ;;		_CANreceiveMessage
 16226 ;;		i2_CANisTxReady
 16227 ;;		i2_CANsendMessage
 16228 ;; This function is called by:
 16229 ;;		Interrupt level 2
 16230 ;; This function uses a non-reentrant model
 16231 ;;
 16232                           
 16233                           	psect	intcode
 16234  000008                     __pintcode:
 16235                           	opt stack 0
 16236  000008                     _ISR_alta:
 16237                           	opt stack 21
 16238                           
 16239                           ;incstack = 0
 16240  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16241  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 16242  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 16243  000012  EF9F  F0A6         	goto	int_func
 16244                           pclatu	equ	0xFFB
 16245                           pclath	equ	0xFFA
 16246                           tblptru	equ	0xFF8
 16247                           tblptrh	equ	0xFF7
 16248                           tblptrl	equ	0xFF6
 16249                           tablat	equ	0xFF5
 16250                           prodh	equ	0xFF4
 16251                           prodl	equ	0xFF3
 16252                           intcon	equ	0xFF2
 16253                           postinc0	equ	0xFEE
 16254                           fsr0h	equ	0xFEA
 16255                           fsr0l	equ	0xFE9
 16256                           wreg	equ	0xFE8
 16257                           fsr1h	equ	0xFE2
 16258                           fsr1l	equ	0xFE1
 16259                           bsr	equ	0xFE0
 16260                           indf2	equ	0xFDF
 16261                           postinc2	equ	0xFDE
 16262                           fsr2h	equ	0xFDA
 16263                           fsr2l	equ	0xFD9
 16264                           status	equ	0xFD8
 16265                           
 16266                           	psect	intcode_body
 16267  014D3E                     __pintcode_body:
 16268                           	opt stack 21
 16269  014D3E                     int_func:
 16270                           	opt stack 21
 16271  014D3E  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 16272  014D42  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 16273  014D46  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 16274  014D4A  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 16275  014D4E  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 16276  014D52  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 16277  014D56  CFF3 F068          	movff	prodl,??_ISR_alta+8
 16278  014D5A  CFF4 F069          	movff	prodh,??_ISR_alta+9
 16279  014D5E  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 16280  014D62  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 16281  014D66  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 16282  014D6A  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 16283                           
 16284                           ;RemoteCan.c: 72: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 16285  014D6E  A2A4               	btfss	4004,1,c	;volatile
 16286  014D70  B0A4               	btfsc	4004,0,c	;volatile
 16287  014D72  D001               	goto	i2l8732
 16288  014D74  D06C               	goto	i2l736
 16289  014D76                     i2l8732:
 16290                           
 16291                           ;RemoteCan.c: 73: if (CANisRxReady()) {
 16292  014D76  EC39  F0AD         	call	_CANisRxReady	;wreg free
 16293  014D7A  0900               	iorlw	0
 16294  014D7C  B4D8               	btfsc	status,2,c
 16295  014D7E  D063               	goto	i2l8774
 16296                           
 16297                           ;RemoteCan.c: 74: CANreceiveMessage(&msg);
 16298  014D80  0E1C               	movlw	low _msg
 16299  014D82  6E3D               	movwf	CANreceiveMessage@msg,c
 16300  014D84  0E00               	movlw	high _msg
 16301  014D86  6E3E               	movwf	CANreceiveMessage@msg+1,c
 16302  014D88  EC68  F093         	call	_CANreceiveMessage	;wreg free
 16303                           
 16304                           ;RemoteCan.c: 75: RTR_Flag = msg.RTR;
 16305  014D8C  A02A               	btfss	_msg+14,0,c
 16306  014D8E  D002               	goto	i2u1149_40
 16307  014D90  844D               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16308  014D92  D001               	goto	i2l8738
 16309  014D94                     i2u1149_40:
 16310  014D94  944D               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16311  014D96                     i2l8738:
 16312                           
 16313                           ;RemoteCan.c: 76: id = msg.identifier;
 16314  014D96  C01C  F00F         	movff	_msg,_id	;volatile
 16315  014D9A  C01D  F010         	movff	_msg+1,_id+1	;volatile
 16316  014D9E  C01E  F011         	movff	_msg+2,_id+2	;volatile
 16317  014DA2  C01F  F012         	movff	_msg+3,_id+3	;volatile
 16318                           
 16319                           ;RemoteCan.c: 77: newMessageCan = 1;
 16320  014DA6  884D               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 16321                           
 16322                           ;RemoteCan.c: 78: for (unsigned char i = 0; i < 8; i++) {
 16323  014DA8  0E00               	movlw	0
 16324  014DAA  0100               	movlb	0	; () banked
 16325  014DAC  6F6E               	movwf	ISR_alta@i& (0+255),b
 16326  014DAE                     i2l8744:
 16327                           
 16328                           ; BSR set to: 0
 16329  014DAE  0E07               	movlw	7
 16330  014DB0  0100               	movlb	0	; () banked
 16331  014DB2  656E               	cpfsgt	ISR_alta@i& (0+255),b
 16332  014DB4  D001               	goto	i2l8748
 16333  014DB6  D017               	goto	i2l8754
 16334  014DB8                     i2l8748:
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;RemoteCan.c: 79: data[i] = msg.data[i];
 16338  014DB8  0100               	movlb	0	; () banked
 16339  014DBA  516E               	movf	ISR_alta@i& (0+255),w,b
 16340  014DBC  0D01               	mullw	1
 16341  014DBE  0E20               	movlw	low (_msg+4)
 16342  014DC0  24F3               	addwf	prodl,w,c
 16343  014DC2  6ED9               	movwf	fsr2l,c
 16344  014DC4  0E00               	movlw	high (_msg+4)
 16345  014DC6  20F4               	addwfc	prodh,w,c
 16346  014DC8  6EDA               	movwf	fsr2h,c
 16347  014DCA  0100               	movlb	0	; () banked
 16348  014DCC  516E               	movf	ISR_alta@i& (0+255),w,b
 16349  014DCE  0D01               	mullw	1
 16350  014DD0  0E2B               	movlw	low _data
 16351  014DD2  24F3               	addwf	prodl,w,c
 16352  014DD4  6EE1               	movwf	fsr1l,c
 16353  014DD6  0E00               	movlw	high _data
 16354  014DD8  20F4               	addwfc	prodh,w,c
 16355  014DDA  6EE2               	movwf	fsr1h,c
 16356  014DDC  CFDF FFE7          	movff	indf2,indf1
 16357                           
 16358                           ; BSR set to: 0
 16359  014DE0  0100               	movlb	0	; () banked
 16360  014DE2  2B6E               	incf	ISR_alta@i& (0+255),f,b
 16361  014DE4  D7E4               	goto	i2l8744
 16362  014DE6                     i2l8754:
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;RemoteCan.c: 80: }
 16366                           ;RemoteCan.c: 81: if (id == 0b00000000010) {
 16367  014DE6  0E02               	movlw	2
 16368  014DE8  180F               	xorwf	_id,w,c	;volatile
 16369  014DEA  1010               	iorwf	_id+1,w,c	;volatile
 16370  014DEC  1011               	iorwf	_id+2,w,c	;volatile
 16371  014DEE  1012               	iorwf	_id+3,w,c	;volatile
 16372  014DF0  B4D8               	btfsc	status,2,c
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;RemoteCan.c: 82: if (RTR_Flag == 1) {
 16376  014DF2  A44D               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16377  014DF4  D028               	goto	i2l8774
 16378                           
 16379                           ; BSR set to: 0
 16380                           ;RemoteCan.c: 83: pr_time_4 = time_counter;
 16381  014DF6  C017  F013         	movff	_time_counter,_pr_time_4	;volatile
 16382  014DFA  C018  F014         	movff	_time_counter+1,_pr_time_4+1	;volatile
 16383  014DFE  C019  F015         	movff	_time_counter+2,_pr_time_4+2	;volatile
 16384  014E02  C01A  F016         	movff	_time_counter+3,_pr_time_4+3	;volatile
 16385                           
 16386                           ; BSR set to: 0
 16387                           ;RemoteCan.c: 84: data[0] = 0x03;
 16388  014E06  0E03               	movlw	3
 16389  014E08  6E2B               	movwf	_data,c
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;RemoteCan.c: 85: _delay((unsigned long)((10)*(16000000/4000000.0)));
 16393  014E0A  0E0D               	movlw	13
 16394  014E0C                     i2u1168_47:
 16395  014E0C  2EE8               	decfsz	wreg,f,c
 16396  014E0E  D7FE               	goto	i2u1168_47
 16397  014E10  F000               	nop	
 16398  014E12                     i2l8764:
 16399  014E12  EC11  F0AD         	call	i2_CANisTxReady	;wreg free
 16400  014E16  06E8               	decf	wreg,f,c
 16401  014E18  A4D8               	btfss	status,2,c
 16402  014E1A  D7FB               	goto	i2l8764
 16403                           
 16404                           ;RemoteCan.c: 87: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL
      +                          _TX_FRAME & CAN_TX_PRIORITY_0);
 16405  014E1C  0E02               	movlw	2
 16406  014E1E  6E3D               	movwf	i2CANsendMessage@identifier,c
 16407  014E20  0E00               	movlw	0
 16408  014E22  6E3E               	movwf	i2CANsendMessage@identifier+1,c
 16409  014E24  0E00               	movlw	0
 16410  014E26  6E3F               	movwf	i2CANsendMessage@identifier+2,c
 16411  014E28  0E00               	movlw	0
 16412  014E2A  6E40               	movwf	i2CANsendMessage@identifier+3,c
 16413  014E2C  0E2B               	movlw	low _data
 16414  014E2E  6E41               	movwf	i2CANsendMessage@data,c
 16415  014E30  0E00               	movlw	high _data
 16416  014E32  6E42               	movwf	i2CANsendMessage@data+1,c
 16417  014E34  0E08               	movlw	8
 16418  014E36  6E43               	movwf	i2CANsendMessage@dataLength,c
 16419  014E38  0EBC               	movlw	188
 16420  014E3A  6E44               	movwf	i2CANsendMessage@flags,c
 16421  014E3C  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 16422                           
 16423                           ;RemoteCan.c: 88: MotoreFlag = 1;
 16424  014E40  824D               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 16425                           
 16426                           ;RemoteCan.c: 89: AbsFlag = 0;
 16427  014E42  904D               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 16428                           
 16429                           ;RemoteCan.c: 90: SterzoFlag = 0;
 16430  014E44  964D               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 16431  014E46                     i2l8774:
 16432                           
 16433                           ;RemoteCan.c: 91: }
 16434                           ;RemoteCan.c: 93: }
 16435                           ;RemoteCan.c: 94: }
 16436                           ;RemoteCan.c: 95: PIR3bits.RXB1IF = 0;
 16437  014E46  92A4               	bcf	4004,1,c	;volatile
 16438                           
 16439                           ;RemoteCan.c: 96: PIR3bits.RXB0IF = 0;
 16440  014E48  90A4               	bcf	4004,0,c	;volatile
 16441                           
 16442                           ;RemoteCan.c: 97: LATDbits.LATD2 = 1;
 16443  014E4A  848C               	bsf	3980,2,c	;volatile
 16444                           
 16445                           ;RemoteCan.c: 98: LATDbits.LATD3 = 1;
 16446  014E4C  868C               	bsf	3980,3,c	;volatile
 16447  014E4E                     i2l736:
 16448  014E4E  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 16449  014E52  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 16450  014E56  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 16451  014E5A  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 16452  014E5E  C069  FFF4         	movff	??_ISR_alta+9,prodh
 16453  014E62  C068  FFF3         	movff	??_ISR_alta+8,prodl
 16454  014E66  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 16455  014E6A  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 16456  014E6E  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 16457  014E72  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 16458  014E76  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 16459  014E7A  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 16460  014E7E  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 16461  014E82  C060  FFFA         	movff	??_ISR_alta,pclath
 16462  014E86  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16463  014E88  0011               	retfie		f
 16464  014E8A                     __end_of_ISR_alta:
 16465                           	opt stack 0
 16466                           pclatu	equ	0xFFB
 16467                           pclath	equ	0xFFA
 16468                           tblptru	equ	0xFF8
 16469                           tblptrh	equ	0xFF7
 16470                           tblptrl	equ	0xFF6
 16471                           tablat	equ	0xFF5
 16472                           prodh	equ	0xFF4
 16473                           prodl	equ	0xFF3
 16474                           intcon	equ	0xFF2
 16475                           postinc0	equ	0xFEE
 16476                           fsr0h	equ	0xFEA
 16477                           fsr0l	equ	0xFE9
 16478                           wreg	equ	0xFE8
 16479                           indf1	equ	0xFE7
 16480                           fsr1h	equ	0xFE2
 16481                           fsr1l	equ	0xFE1
 16482                           bsr	equ	0xFE0
 16483                           indf2	equ	0xFDF
 16484                           postinc2	equ	0xFDE
 16485                           fsr2h	equ	0xFDA
 16486                           fsr2l	equ	0xFD9
 16487                           status	equ	0xFD8
 16488                           
 16489 ;; *************** function i2_CANsendMessage *****************
 16490 ;; Defined at:
 16491 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16492 ;; Parameters:    Size  Location     Type
 16493 ;;  identifier      4   17[COMRAM] unsigned long 
 16494 ;;  data            2   21[COMRAM] PTR unsigned char 
 16495 ;;		 -> data_speed(1), data_steering(1), data(1), 
 16496 ;;  dataLength      1   23[COMRAM] unsigned char 
 16497 ;;  flags           1   24[COMRAM] enum E16909
 16498 ;; Auto vars:     Size  Location     Type
 16499 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 16500 ;; Return value:  Size  Location     Type
 16501 ;;		None               void
 16502 ;; Registers used:
 16503 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16504 ;; Tracked objects:
 16505 ;;		On entry : 0/0
 16506 ;;		On exit  : 0/0
 16507 ;;		Unchanged: 0/0
 16508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16509 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16512 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16513 ;;Total ram usage:       16 bytes
 16514 ;; Hardware stack levels used:    1
 16515 ;; This function calls:
 16516 ;;		Nothing
 16517 ;; This function is called by:
 16518 ;;		_ISR_alta
 16519 ;; This function uses a non-reentrant model
 16520 ;;
 16521                           
 16522                           	psect	text45
 16523  011B26                     __ptext45:
 16524                           	opt stack 0
 16525  011B26                     i2_CANsendMessage:
 16526                           	opt stack 21
 16527                           
 16528                           ;inc\CANlib.h: 296: unsigned long tamp;
 16529                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 16530                           
 16531                           ;incstack = 0
 16532  011B26  010F               	movlb	15	; () banked
 16533  011B28  B740               	btfsc	64,3,b	;volatile
 16534  011B2A  D115               	goto	i2l371
 16535                           
 16536                           ; BSR set to: 15
 16537                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 16538  011B2C  C043  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 16539                           
 16540                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 16541  011B30  AC44               	btfss	i2CANsendMessage@flags,6,c
 16542  011B32  D003               	goto	i2l372
 16543                           
 16544                           ; BSR set to: 15
 16545                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 16546  011B34  010F               	movlb	15	; () banked
 16547  011B36  8D45               	bsf	69,6,b	;volatile
 16548  011B38  D002               	goto	i2l373
 16549  011B3A                     i2l372:
 16550                           
 16551                           ; BSR set to: 15
 16552                           ;inc\CANlib.h: 302: else
 16553                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 16554  011B3A  010F               	movlb	15	; () banked
 16555  011B3C  9D45               	bcf	69,6,b	;volatile
 16556  011B3E                     i2l373:
 16557                           
 16558                           ; BSR set to: 15
 16559                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 16560  011B3E  A644               	btfss	i2CANsendMessage@flags,3,c
 16561  011B40  D066               	goto	i2l374
 16562                           
 16563                           ; BSR set to: 15
 16564                           ;inc\CANlib.h: 306: {
 16565                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 16566  011B42  503D               	movf	i2CANsendMessage@identifier,w,c
 16567  011B44  6E49               	movwf	i2CANsendMessage@tamp,c
 16568  011B46  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 16569  011B48  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 16570  011B4A  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 16571                           
 16572                           ; BSR set to: 15
 16573                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 16574  011B4C  C049  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 16575                           
 16576                           ; BSR set to: 15
 16577                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 16578  011B50  0E00               	movlw	0
 16579  011B52  143D               	andwf	i2CANsendMessage@identifier,w,c
 16580  011B54  6E49               	movwf	i2CANsendMessage@tamp,c
 16581  011B56  0EFF               	movlw	255
 16582  011B58  143E               	andwf	i2CANsendMessage@identifier+1,w,c
 16583  011B5A  6E4A               	movwf	i2CANsendMessage@tamp+1,c
 16584  011B5C  0E00               	movlw	0
 16585  011B5E  143F               	andwf	i2CANsendMessage@identifier+2,w,c
 16586  011B60  6E4B               	movwf	i2CANsendMessage@tamp+2,c
 16587  011B62  0E00               	movlw	0
 16588  011B64  1440               	andwf	i2CANsendMessage@identifier+3,w,c
 16589  011B66  6E4C               	movwf	i2CANsendMessage@tamp+3,c
 16590                           
 16591                           ; BSR set to: 15
 16592                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 16593  011B68  C049  F045         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 16594  011B6C  C04A  F046         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 16595  011B70  C04B  F047         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 16596  011B74  C04C  F048         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 16597  011B78  C046  F045         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 16598  011B7C  C047  F046         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 16599  011B80  C048  F047         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 16600  011B84  6A48               	clrf	??i2_CANsendMessage+3,c
 16601  011B86  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 16602  011B8A  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 16603  011B8E  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 16604  011B92  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 16605                           
 16606                           ; BSR set to: 15
 16607                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 16608  011B96  C049  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 16609                           
 16610                           ; BSR set to: 15
 16611                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 16612  011B9A  0E00               	movlw	0
 16613  011B9C  010F               	movlb	15	; () banked
 16614  011B9E  6F42               	movwf	66,b	;volatile
 16615                           
 16616                           ; BSR set to: 15
 16617                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 16618  011BA0  010F               	movlb	15	; () banked
 16619  011BA2  8742               	bsf	66,3,b	;volatile
 16620                           
 16621                           ; BSR set to: 15
 16622                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 16623  011BA4  A03F               	btfss	i2CANsendMessage@identifier+2,0,c
 16624  011BA6  D002               	goto	i2l375
 16625                           
 16626                           ; BSR set to: 15
 16627                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 16628  011BA8  010F               	movlb	15	; () banked
 16629  011BAA  8142               	bsf	66,0,b	;volatile
 16630  011BAC                     i2l375:
 16631                           
 16632                           ; BSR set to: 15
 16633                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 16634  011BAC  A23F               	btfss	i2CANsendMessage@identifier+2,1,c
 16635  011BAE  D002               	goto	i2l376
 16636                           
 16637                           ; BSR set to: 15
 16638                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 16639  011BB0  010F               	movlb	15	; () banked
 16640  011BB2  8342               	bsf	66,1,b	;volatile
 16641  011BB4                     i2l376:
 16642                           
 16643                           ; BSR set to: 15
 16644                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 16645  011BB4  A43F               	btfss	i2CANsendMessage@identifier+2,2,c
 16646  011BB6  D002               	goto	i2l377
 16647                           
 16648                           ; BSR set to: 15
 16649                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 16650  011BB8  010F               	movlb	15	; () banked
 16651  011BBA  8B42               	bsf	66,5,b	;volatile
 16652  011BBC                     i2l377:
 16653                           
 16654                           ; BSR set to: 15
 16655                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 16656  011BBC  A63F               	btfss	i2CANsendMessage@identifier+2,3,c
 16657  011BBE  D002               	goto	i2l378
 16658                           
 16659                           ; BSR set to: 15
 16660                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 16661  011BC0  010F               	movlb	15	; () banked
 16662  011BC2  8D42               	bsf	66,6,b	;volatile
 16663  011BC4                     i2l378:
 16664                           
 16665                           ; BSR set to: 15
 16666                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 16667  011BC4  A83F               	btfss	i2CANsendMessage@identifier+2,4,c
 16668  011BC6  D002               	goto	i2l8466
 16669                           
 16670                           ; BSR set to: 15
 16671                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 16672  011BC8  010F               	movlb	15	; () banked
 16673  011BCA  8F42               	bsf	66,7,b	;volatile
 16674  011BCC                     i2l8466:
 16675                           
 16676                           ; BSR set to: 15
 16677                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 16678  011BCC  C03D  F045         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 16679  011BD0  C03E  F046         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 16680  011BD4  C03F  F047         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 16681  011BD8  C040  F048         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 16682  011BDC  0E16               	movlw	22
 16683  011BDE  D005               	goto	i2u1103_40
 16684  011BE0                     i2u1103_45:
 16685  011BE0  90D8               	bcf	status,0,c
 16686  011BE2  3248               	rrcf	??i2_CANsendMessage+3,f,c
 16687  011BE4  3247               	rrcf	??i2_CANsendMessage+2,f,c
 16688  011BE6  3246               	rrcf	??i2_CANsendMessage+1,f,c
 16689  011BE8  3245               	rrcf	??i2_CANsendMessage,f,c
 16690  011BEA                     i2u1103_40:
 16691  011BEA  2EE8               	decfsz	wreg,f,c
 16692  011BEC  D7F9               	goto	i2u1103_45
 16693  011BEE  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 16694  011BF2  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 16695  011BF6  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 16696  011BFA  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 16697                           
 16698                           ; BSR set to: 15
 16699                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 16700  011BFE  5049               	movf	i2CANsendMessage@tamp,w,c
 16701  011C00  6E49               	movwf	i2CANsendMessage@tamp,c
 16702  011C02  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 16703  011C04  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 16704  011C06  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 16705                           
 16706                           ; BSR set to: 15
 16707                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 16708  011C08  C049  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 16709                           
 16710                           ;inc\CANlib.h: 332: }
 16711  011C0C  D04D               	goto	i2l8486
 16712  011C0E                     i2l374:
 16713                           
 16714                           ; BSR set to: 15
 16715                           ;inc\CANlib.h: 334: else
 16716                           ;inc\CANlib.h: 336: {
 16717                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 16718  011C0E  010F               	movlb	15	; () banked
 16719  011C10  9742               	bcf	66,3,b	;volatile
 16720                           
 16721                           ; BSR set to: 15
 16722                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 16723  011C12  C03D  F045         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 16724  011C16  C03E  F046         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 16725  011C1A  C03F  F047         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 16726  011C1E  C040  F048         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 16727  011C22  0E04               	movlw	4
 16728  011C24  D005               	goto	i2u1104_40
 16729  011C26                     i2u1104_45:
 16730  011C26  90D8               	bcf	status,0,c
 16731  011C28  3248               	rrcf	??i2_CANsendMessage+3,f,c
 16732  011C2A  3247               	rrcf	??i2_CANsendMessage+2,f,c
 16733  011C2C  3246               	rrcf	??i2_CANsendMessage+1,f,c
 16734  011C2E  3245               	rrcf	??i2_CANsendMessage,f,c
 16735  011C30                     i2u1104_40:
 16736  011C30  2EE8               	decfsz	wreg,f,c
 16737  011C32  D7F9               	goto	i2u1104_45
 16738  011C34  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 16739  011C38  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 16740  011C3C  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 16741  011C40  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 16742                           
 16743                           ; BSR set to: 15
 16744                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 16745  011C44  5049               	movf	i2CANsendMessage@tamp,w,c
 16746  011C46  6E49               	movwf	i2CANsendMessage@tamp,c
 16747  011C48  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 16748  011C4A  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 16749  011C4C  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 16750                           
 16751                           ; BSR set to: 15
 16752                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 16753  011C4E  C049  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 16754                           
 16755                           ; BSR set to: 15
 16756                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 16757  011C52  0E07               	movlw	7
 16758  011C54  143D               	andwf	i2CANsendMessage@identifier,w,c
 16759  011C56  6E49               	movwf	i2CANsendMessage@tamp,c
 16760  011C58  0E00               	movlw	0
 16761  011C5A  143E               	andwf	i2CANsendMessage@identifier+1,w,c
 16762  011C5C  6E4A               	movwf	i2CANsendMessage@tamp+1,c
 16763  011C5E  0E00               	movlw	0
 16764  011C60  143F               	andwf	i2CANsendMessage@identifier+2,w,c
 16765  011C62  6E4B               	movwf	i2CANsendMessage@tamp+2,c
 16766  011C64  0E00               	movlw	0
 16767  011C66  1440               	andwf	i2CANsendMessage@identifier+3,w,c
 16768  011C68  6E4C               	movwf	i2CANsendMessage@tamp+3,c
 16769                           
 16770                           ; BSR set to: 15
 16771                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 16772  011C6A  C049  F045         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 16773  011C6E  C04A  F046         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 16774  011C72  C04B  F047         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 16775  011C76  C04C  F048         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 16776  011C7A  0E05               	movlw	5
 16777  011C7C                     i2u1105_45:
 16778  011C7C  90D8               	bcf	status,0,c
 16779  011C7E  3645               	rlcf	??i2_CANsendMessage,f,c
 16780  011C80  3646               	rlcf	??i2_CANsendMessage+1,f,c
 16781  011C82  3647               	rlcf	??i2_CANsendMessage+2,f,c
 16782  011C84  3648               	rlcf	??i2_CANsendMessage+3,f,c
 16783  011C86  2EE8               	decfsz	wreg,f,c
 16784  011C88  D7F9               	goto	i2u1105_45
 16785  011C8A  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 16786  011C8E  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 16787  011C92  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 16788  011C96  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 16789                           
 16790                           ; BSR set to: 15
 16791                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 16792  011C9A  010F               	movlb	15	; () banked
 16793  011C9C  5142               	movf	66,w,b	;volatile
 16794  011C9E  0B1F               	andlw	31
 16795  011CA0  010F               	movlb	15	; () banked
 16796  011CA2  6F42               	movwf	66,b	;volatile
 16797                           
 16798                           ; BSR set to: 15
 16799                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 16800  011CA4  C049  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 16801  011CA8                     i2l8486:
 16802                           
 16803                           ; BSR set to: 15
 16804                           ;inc\CANlib.h: 347: }
 16805                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 16806  011CA8  A044               	btfss	i2CANsendMessage@flags,0,c
 16807  011CAA  D003               	goto	i2l381
 16808                           
 16809                           ; BSR set to: 15
 16810                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 16811  011CAC  010F               	movlb	15	; () banked
 16812  011CAE  8140               	bsf	64,0,b	;volatile
 16813  011CB0  D002               	goto	i2l382
 16814  011CB2                     i2l381:
 16815                           
 16816                           ; BSR set to: 15
 16817                           ;inc\CANlib.h: 351: else
 16818                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 16819  011CB2  010F               	movlb	15	; () banked
 16820  011CB4  9140               	bcf	64,0,b	;volatile
 16821  011CB6                     i2l382:
 16822                           
 16823                           ; BSR set to: 15
 16824                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 16825  011CB6  A244               	btfss	i2CANsendMessage@flags,1,c
 16826  011CB8  D003               	goto	i2l383
 16827                           
 16828                           ; BSR set to: 15
 16829                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 16830  011CBA  010F               	movlb	15	; () banked
 16831  011CBC  8340               	bsf	64,1,b	;volatile
 16832  011CBE  D002               	goto	i2l8492
 16833  011CC0                     i2l383:
 16834                           
 16835                           ; BSR set to: 15
 16836                           ;inc\CANlib.h: 355: else
 16837                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 16838  011CC0  010F               	movlb	15	; () banked
 16839  011CC2  9340               	bcf	64,1,b	;volatile
 16840  011CC4                     i2l8492:
 16841                           
 16842                           ; BSR set to: 15
 16843                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 16844  011CC4  C041  FFD9         	movff	i2CANsendMessage@data,fsr2l
 16845  011CC8  C042  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 16846  011CCC  50DF               	movf	indf2,w,c
 16847  011CCE  010F               	movlb	15	; () banked
 16848  011CD0  6F46               	movwf	70,b	;volatile
 16849                           
 16850                           ; BSR set to: 15
 16851                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 16852  011CD2  EE20 F001          	lfsr	2,1
 16853  011CD6  5041               	movf	i2CANsendMessage@data,w,c
 16854  011CD8  26D9               	addwf	fsr2l,f,c
 16855  011CDA  5042               	movf	i2CANsendMessage@data+1,w,c
 16856  011CDC  22DA               	addwfc	fsr2h,f,c
 16857  011CDE  50DF               	movf	indf2,w,c
 16858  011CE0  010F               	movlb	15	; () banked
 16859  011CE2  6F47               	movwf	71,b	;volatile
 16860                           
 16861                           ; BSR set to: 15
 16862                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 16863  011CE4  EE20 F002          	lfsr	2,2
 16864  011CE8  5041               	movf	i2CANsendMessage@data,w,c
 16865  011CEA  26D9               	addwf	fsr2l,f,c
 16866  011CEC  5042               	movf	i2CANsendMessage@data+1,w,c
 16867  011CEE  22DA               	addwfc	fsr2h,f,c
 16868  011CF0  50DF               	movf	indf2,w,c
 16869  011CF2  010F               	movlb	15	; () banked
 16870  011CF4  6F48               	movwf	72,b	;volatile
 16871                           
 16872                           ; BSR set to: 15
 16873                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 16874  011CF6  EE20 F003          	lfsr	2,3
 16875  011CFA  5041               	movf	i2CANsendMessage@data,w,c
 16876  011CFC  26D9               	addwf	fsr2l,f,c
 16877  011CFE  5042               	movf	i2CANsendMessage@data+1,w,c
 16878  011D00  22DA               	addwfc	fsr2h,f,c
 16879  011D02  50DF               	movf	indf2,w,c
 16880  011D04  010F               	movlb	15	; () banked
 16881  011D06  6F49               	movwf	73,b	;volatile
 16882                           
 16883                           ; BSR set to: 15
 16884                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 16885  011D08  EE20 F004          	lfsr	2,4
 16886  011D0C  5041               	movf	i2CANsendMessage@data,w,c
 16887  011D0E  26D9               	addwf	fsr2l,f,c
 16888  011D10  5042               	movf	i2CANsendMessage@data+1,w,c
 16889  011D12  22DA               	addwfc	fsr2h,f,c
 16890  011D14  50DF               	movf	indf2,w,c
 16891  011D16  010F               	movlb	15	; () banked
 16892  011D18  6F4A               	movwf	74,b	;volatile
 16893                           
 16894                           ; BSR set to: 15
 16895                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 16896  011D1A  EE20 F005          	lfsr	2,5
 16897  011D1E  5041               	movf	i2CANsendMessage@data,w,c
 16898  011D20  26D9               	addwf	fsr2l,f,c
 16899  011D22  5042               	movf	i2CANsendMessage@data+1,w,c
 16900  011D24  22DA               	addwfc	fsr2h,f,c
 16901  011D26  50DF               	movf	indf2,w,c
 16902  011D28  010F               	movlb	15	; () banked
 16903  011D2A  6F4B               	movwf	75,b	;volatile
 16904                           
 16905                           ; BSR set to: 15
 16906                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 16907  011D2C  EE20 F006          	lfsr	2,6
 16908  011D30  5041               	movf	i2CANsendMessage@data,w,c
 16909  011D32  26D9               	addwf	fsr2l,f,c
 16910  011D34  5042               	movf	i2CANsendMessage@data+1,w,c
 16911  011D36  22DA               	addwfc	fsr2h,f,c
 16912  011D38  50DF               	movf	indf2,w,c
 16913  011D3A  010F               	movlb	15	; () banked
 16914  011D3C  6F4C               	movwf	76,b	;volatile
 16915                           
 16916                           ; BSR set to: 15
 16917                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 16918  011D3E  EE20 F007          	lfsr	2,7
 16919  011D42  5041               	movf	i2CANsendMessage@data,w,c
 16920  011D44  26D9               	addwf	fsr2l,f,c
 16921  011D46  5042               	movf	i2CANsendMessage@data+1,w,c
 16922  011D48  22DA               	addwfc	fsr2h,f,c
 16923  011D4A  50DF               	movf	indf2,w,c
 16924  011D4C  010F               	movlb	15	; () banked
 16925  011D4E  6F4D               	movwf	77,b	;volatile
 16926                           
 16927                           ; BSR set to: 15
 16928                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 16929  011D50  010F               	movlb	15	; () banked
 16930  011D52  8740               	bsf	64,3,b	;volatile
 16931                           
 16932                           ; BSR set to: 15
 16933                           ;inc\CANlib.h: 368: return;
 16934  011D54  0012               	return	
 16935  011D56                     i2l371:
 16936                           
 16937                           ; BSR set to: 15
 16938                           ;inc\CANlib.h: 369: }
 16939                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 16940  011D56  010F               	movlb	15	; () banked
 16941  011D58  B730               	btfsc	48,3,b	;volatile
 16942  011D5A  D115               	goto	i2l386
 16943                           
 16944                           ; BSR set to: 15
 16945                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 16946  011D5C  C043  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 16947                           
 16948                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 16949  011D60  AC44               	btfss	i2CANsendMessage@flags,6,c
 16950  011D62  D003               	goto	i2l387
 16951                           
 16952                           ; BSR set to: 15
 16953                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 16954  011D64  010F               	movlb	15	; () banked
 16955  011D66  8D35               	bsf	53,6,b	;volatile
 16956  011D68  D002               	goto	i2l388
 16957  011D6A                     i2l387:
 16958                           
 16959                           ; BSR set to: 15
 16960                           ;inc\CANlib.h: 378: else
 16961                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16962  011D6A  010F               	movlb	15	; () banked
 16963  011D6C  9D35               	bcf	53,6,b	;volatile
 16964  011D6E                     i2l388:
 16965                           
 16966                           ; BSR set to: 15
 16967                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16968  011D6E  A644               	btfss	i2CANsendMessage@flags,3,c
 16969  011D70  D066               	goto	i2l389
 16970                           
 16971                           ; BSR set to: 15
 16972                           ;inc\CANlib.h: 382: {
 16973                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16974  011D72  503D               	movf	i2CANsendMessage@identifier,w,c
 16975  011D74  6E49               	movwf	i2CANsendMessage@tamp,c
 16976  011D76  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 16977  011D78  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 16978  011D7A  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 16979                           
 16980                           ; BSR set to: 15
 16981                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16982  011D7C  C049  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 16983                           
 16984                           ; BSR set to: 15
 16985                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16986  011D80  0E00               	movlw	0
 16987  011D82  143D               	andwf	i2CANsendMessage@identifier,w,c
 16988  011D84  6E49               	movwf	i2CANsendMessage@tamp,c
 16989  011D86  0EFF               	movlw	255
 16990  011D88  143E               	andwf	i2CANsendMessage@identifier+1,w,c
 16991  011D8A  6E4A               	movwf	i2CANsendMessage@tamp+1,c
 16992  011D8C  0E00               	movlw	0
 16993  011D8E  143F               	andwf	i2CANsendMessage@identifier+2,w,c
 16994  011D90  6E4B               	movwf	i2CANsendMessage@tamp+2,c
 16995  011D92  0E00               	movlw	0
 16996  011D94  1440               	andwf	i2CANsendMessage@identifier+3,w,c
 16997  011D96  6E4C               	movwf	i2CANsendMessage@tamp+3,c
 16998                           
 16999                           ; BSR set to: 15
 17000                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17001  011D98  C049  F045         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17002  011D9C  C04A  F046         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17003  011DA0  C04B  F047         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17004  011DA4  C04C  F048         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17005  011DA8  C046  F045         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17006  011DAC  C047  F046         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17007  011DB0  C048  F047         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17008  011DB4  6A48               	clrf	??i2_CANsendMessage+3,c
 17009  011DB6  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17010  011DBA  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17011  011DBE  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17012  011DC2  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17013                           
 17014                           ; BSR set to: 15
 17015                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17016  011DC6  C049  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 17017                           
 17018                           ; BSR set to: 15
 17019                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17020  011DCA  0E00               	movlw	0
 17021  011DCC  010F               	movlb	15	; () banked
 17022  011DCE  6F32               	movwf	50,b	;volatile
 17023                           
 17024                           ; BSR set to: 15
 17025                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17026  011DD0  010F               	movlb	15	; () banked
 17027  011DD2  8732               	bsf	50,3,b	;volatile
 17028                           
 17029                           ; BSR set to: 15
 17030                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17031  011DD4  A03F               	btfss	i2CANsendMessage@identifier+2,0,c
 17032  011DD6  D002               	goto	i2l390
 17033                           
 17034                           ; BSR set to: 15
 17035                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17036  011DD8  010F               	movlb	15	; () banked
 17037  011DDA  8132               	bsf	50,0,b	;volatile
 17038  011DDC                     i2l390:
 17039                           
 17040                           ; BSR set to: 15
 17041                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17042  011DDC  A23F               	btfss	i2CANsendMessage@identifier+2,1,c
 17043  011DDE  D002               	goto	i2l391
 17044                           
 17045                           ; BSR set to: 15
 17046                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17047  011DE0  010F               	movlb	15	; () banked
 17048  011DE2  8332               	bsf	50,1,b	;volatile
 17049  011DE4                     i2l391:
 17050                           
 17051                           ; BSR set to: 15
 17052                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17053  011DE4  A43F               	btfss	i2CANsendMessage@identifier+2,2,c
 17054  011DE6  D002               	goto	i2l392
 17055                           
 17056                           ; BSR set to: 15
 17057                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17058  011DE8  010F               	movlb	15	; () banked
 17059  011DEA  8B32               	bsf	50,5,b	;volatile
 17060  011DEC                     i2l392:
 17061                           
 17062                           ; BSR set to: 15
 17063                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17064  011DEC  A63F               	btfss	i2CANsendMessage@identifier+2,3,c
 17065  011DEE  D002               	goto	i2l393
 17066                           
 17067                           ; BSR set to: 15
 17068                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17069  011DF0  010F               	movlb	15	; () banked
 17070  011DF2  8D32               	bsf	50,6,b	;volatile
 17071  011DF4                     i2l393:
 17072                           
 17073                           ; BSR set to: 15
 17074                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17075  011DF4  A83F               	btfss	i2CANsendMessage@identifier+2,4,c
 17076  011DF6  D002               	goto	i2l8542
 17077                           
 17078                           ; BSR set to: 15
 17079                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17080  011DF8  010F               	movlb	15	; () banked
 17081  011DFA  8F32               	bsf	50,7,b	;volatile
 17082  011DFC                     i2l8542:
 17083                           
 17084                           ; BSR set to: 15
 17085                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17086  011DFC  C03D  F045         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17087  011E00  C03E  F046         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17088  011E04  C03F  F047         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17089  011E08  C040  F048         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17090  011E0C  0E16               	movlw	22
 17091  011E0E  D005               	goto	i2u1116_40
 17092  011E10                     i2u1116_45:
 17093  011E10  90D8               	bcf	status,0,c
 17094  011E12  3248               	rrcf	??i2_CANsendMessage+3,f,c
 17095  011E14  3247               	rrcf	??i2_CANsendMessage+2,f,c
 17096  011E16  3246               	rrcf	??i2_CANsendMessage+1,f,c
 17097  011E18  3245               	rrcf	??i2_CANsendMessage,f,c
 17098  011E1A                     i2u1116_40:
 17099  011E1A  2EE8               	decfsz	wreg,f,c
 17100  011E1C  D7F9               	goto	i2u1116_45
 17101  011E1E  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17102  011E22  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17103  011E26  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17104  011E2A  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17105                           
 17106                           ; BSR set to: 15
 17107                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17108  011E2E  5049               	movf	i2CANsendMessage@tamp,w,c
 17109  011E30  6E49               	movwf	i2CANsendMessage@tamp,c
 17110  011E32  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 17111  011E34  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 17112  011E36  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 17113                           
 17114                           ; BSR set to: 15
 17115                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17116  011E38  C049  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 17117                           
 17118                           ;inc\CANlib.h: 407: }
 17119  011E3C  D04D               	goto	i2l8562
 17120  011E3E                     i2l389:
 17121                           
 17122                           ; BSR set to: 15
 17123                           ;inc\CANlib.h: 409: else
 17124                           ;inc\CANlib.h: 411: {
 17125                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17126  011E3E  010F               	movlb	15	; () banked
 17127  011E40  9732               	bcf	50,3,b	;volatile
 17128                           
 17129                           ; BSR set to: 15
 17130                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17131  011E42  C03D  F045         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17132  011E46  C03E  F046         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17133  011E4A  C03F  F047         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17134  011E4E  C040  F048         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17135  011E52  0E04               	movlw	4
 17136  011E54  D005               	goto	i2u1117_40
 17137  011E56                     i2u1117_45:
 17138  011E56  90D8               	bcf	status,0,c
 17139  011E58  3248               	rrcf	??i2_CANsendMessage+3,f,c
 17140  011E5A  3247               	rrcf	??i2_CANsendMessage+2,f,c
 17141  011E5C  3246               	rrcf	??i2_CANsendMessage+1,f,c
 17142  011E5E  3245               	rrcf	??i2_CANsendMessage,f,c
 17143  011E60                     i2u1117_40:
 17144  011E60  2EE8               	decfsz	wreg,f,c
 17145  011E62  D7F9               	goto	i2u1117_45
 17146  011E64  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17147  011E68  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17148  011E6C  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17149  011E70  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17150                           
 17151                           ; BSR set to: 15
 17152                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17153  011E74  5049               	movf	i2CANsendMessage@tamp,w,c
 17154  011E76  6E49               	movwf	i2CANsendMessage@tamp,c
 17155  011E78  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 17156  011E7A  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 17157  011E7C  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 17158                           
 17159                           ; BSR set to: 15
 17160                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17161  011E7E  C049  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 17162                           
 17163                           ; BSR set to: 15
 17164                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17165  011E82  0E07               	movlw	7
 17166  011E84  143D               	andwf	i2CANsendMessage@identifier,w,c
 17167  011E86  6E49               	movwf	i2CANsendMessage@tamp,c
 17168  011E88  0E00               	movlw	0
 17169  011E8A  143E               	andwf	i2CANsendMessage@identifier+1,w,c
 17170  011E8C  6E4A               	movwf	i2CANsendMessage@tamp+1,c
 17171  011E8E  0E00               	movlw	0
 17172  011E90  143F               	andwf	i2CANsendMessage@identifier+2,w,c
 17173  011E92  6E4B               	movwf	i2CANsendMessage@tamp+2,c
 17174  011E94  0E00               	movlw	0
 17175  011E96  1440               	andwf	i2CANsendMessage@identifier+3,w,c
 17176  011E98  6E4C               	movwf	i2CANsendMessage@tamp+3,c
 17177                           
 17178                           ; BSR set to: 15
 17179                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17180  011E9A  C049  F045         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17181  011E9E  C04A  F046         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17182  011EA2  C04B  F047         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17183  011EA6  C04C  F048         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17184  011EAA  0E05               	movlw	5
 17185  011EAC                     i2u1118_45:
 17186  011EAC  90D8               	bcf	status,0,c
 17187  011EAE  3645               	rlcf	??i2_CANsendMessage,f,c
 17188  011EB0  3646               	rlcf	??i2_CANsendMessage+1,f,c
 17189  011EB2  3647               	rlcf	??i2_CANsendMessage+2,f,c
 17190  011EB4  3648               	rlcf	??i2_CANsendMessage+3,f,c
 17191  011EB6  2EE8               	decfsz	wreg,f,c
 17192  011EB8  D7F9               	goto	i2u1118_45
 17193  011EBA  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17194  011EBE  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17195  011EC2  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17196  011EC6  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17197                           
 17198                           ; BSR set to: 15
 17199                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17200  011ECA  010F               	movlb	15	; () banked
 17201  011ECC  5132               	movf	50,w,b	;volatile
 17202  011ECE  0B1F               	andlw	31
 17203  011ED0  010F               	movlb	15	; () banked
 17204  011ED2  6F32               	movwf	50,b	;volatile
 17205                           
 17206                           ; BSR set to: 15
 17207                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17208  011ED4  C049  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 17209  011ED8                     i2l8562:
 17210                           
 17211                           ; BSR set to: 15
 17212                           ;inc\CANlib.h: 422: }
 17213                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17214  011ED8  A044               	btfss	i2CANsendMessage@flags,0,c
 17215  011EDA  D003               	goto	i2l396
 17216                           
 17217                           ; BSR set to: 15
 17218                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17219  011EDC  010F               	movlb	15	; () banked
 17220  011EDE  8130               	bsf	48,0,b	;volatile
 17221  011EE0  D002               	goto	i2l397
 17222  011EE2                     i2l396:
 17223                           
 17224                           ; BSR set to: 15
 17225                           ;inc\CANlib.h: 426: else
 17226                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17227  011EE2  010F               	movlb	15	; () banked
 17228  011EE4  9130               	bcf	48,0,b	;volatile
 17229  011EE6                     i2l397:
 17230                           
 17231                           ; BSR set to: 15
 17232                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17233  011EE6  A244               	btfss	i2CANsendMessage@flags,1,c
 17234  011EE8  D003               	goto	i2l398
 17235                           
 17236                           ; BSR set to: 15
 17237                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17238  011EEA  010F               	movlb	15	; () banked
 17239  011EEC  8330               	bsf	48,1,b	;volatile
 17240  011EEE  D002               	goto	i2l8568
 17241  011EF0                     i2l398:
 17242                           
 17243                           ; BSR set to: 15
 17244                           ;inc\CANlib.h: 430: else
 17245                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17246  011EF0  010F               	movlb	15	; () banked
 17247  011EF2  9330               	bcf	48,1,b	;volatile
 17248  011EF4                     i2l8568:
 17249                           
 17250                           ; BSR set to: 15
 17251                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17252  011EF4  C041  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17253  011EF8  C042  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17254  011EFC  50DF               	movf	indf2,w,c
 17255  011EFE  010F               	movlb	15	; () banked
 17256  011F00  6F36               	movwf	54,b	;volatile
 17257                           
 17258                           ; BSR set to: 15
 17259                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17260  011F02  EE20 F001          	lfsr	2,1
 17261  011F06  5041               	movf	i2CANsendMessage@data,w,c
 17262  011F08  26D9               	addwf	fsr2l,f,c
 17263  011F0A  5042               	movf	i2CANsendMessage@data+1,w,c
 17264  011F0C  22DA               	addwfc	fsr2h,f,c
 17265  011F0E  50DF               	movf	indf2,w,c
 17266  011F10  010F               	movlb	15	; () banked
 17267  011F12  6F37               	movwf	55,b	;volatile
 17268                           
 17269                           ; BSR set to: 15
 17270                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17271  011F14  EE20 F002          	lfsr	2,2
 17272  011F18  5041               	movf	i2CANsendMessage@data,w,c
 17273  011F1A  26D9               	addwf	fsr2l,f,c
 17274  011F1C  5042               	movf	i2CANsendMessage@data+1,w,c
 17275  011F1E  22DA               	addwfc	fsr2h,f,c
 17276  011F20  50DF               	movf	indf2,w,c
 17277  011F22  010F               	movlb	15	; () banked
 17278  011F24  6F38               	movwf	56,b	;volatile
 17279                           
 17280                           ; BSR set to: 15
 17281                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17282  011F26  EE20 F003          	lfsr	2,3
 17283  011F2A  5041               	movf	i2CANsendMessage@data,w,c
 17284  011F2C  26D9               	addwf	fsr2l,f,c
 17285  011F2E  5042               	movf	i2CANsendMessage@data+1,w,c
 17286  011F30  22DA               	addwfc	fsr2h,f,c
 17287  011F32  50DF               	movf	indf2,w,c
 17288  011F34  010F               	movlb	15	; () banked
 17289  011F36  6F39               	movwf	57,b	;volatile
 17290                           
 17291                           ; BSR set to: 15
 17292                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17293  011F38  EE20 F004          	lfsr	2,4
 17294  011F3C  5041               	movf	i2CANsendMessage@data,w,c
 17295  011F3E  26D9               	addwf	fsr2l,f,c
 17296  011F40  5042               	movf	i2CANsendMessage@data+1,w,c
 17297  011F42  22DA               	addwfc	fsr2h,f,c
 17298  011F44  50DF               	movf	indf2,w,c
 17299  011F46  010F               	movlb	15	; () banked
 17300  011F48  6F3A               	movwf	58,b	;volatile
 17301                           
 17302                           ; BSR set to: 15
 17303                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17304  011F4A  EE20 F005          	lfsr	2,5
 17305  011F4E  5041               	movf	i2CANsendMessage@data,w,c
 17306  011F50  26D9               	addwf	fsr2l,f,c
 17307  011F52  5042               	movf	i2CANsendMessage@data+1,w,c
 17308  011F54  22DA               	addwfc	fsr2h,f,c
 17309  011F56  50DF               	movf	indf2,w,c
 17310  011F58  010F               	movlb	15	; () banked
 17311  011F5A  6F3B               	movwf	59,b	;volatile
 17312                           
 17313                           ; BSR set to: 15
 17314                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17315  011F5C  EE20 F006          	lfsr	2,6
 17316  011F60  5041               	movf	i2CANsendMessage@data,w,c
 17317  011F62  26D9               	addwf	fsr2l,f,c
 17318  011F64  5042               	movf	i2CANsendMessage@data+1,w,c
 17319  011F66  22DA               	addwfc	fsr2h,f,c
 17320  011F68  50DF               	movf	indf2,w,c
 17321  011F6A  010F               	movlb	15	; () banked
 17322  011F6C  6F3C               	movwf	60,b	;volatile
 17323                           
 17324                           ; BSR set to: 15
 17325                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17326  011F6E  EE20 F007          	lfsr	2,7
 17327  011F72  5041               	movf	i2CANsendMessage@data,w,c
 17328  011F74  26D9               	addwf	fsr2l,f,c
 17329  011F76  5042               	movf	i2CANsendMessage@data+1,w,c
 17330  011F78  22DA               	addwfc	fsr2h,f,c
 17331  011F7A  50DF               	movf	indf2,w,c
 17332  011F7C  010F               	movlb	15	; () banked
 17333  011F7E  6F3D               	movwf	61,b	;volatile
 17334                           
 17335                           ; BSR set to: 15
 17336                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17337  011F80  010F               	movlb	15	; () banked
 17338  011F82  8730               	bsf	48,3,b	;volatile
 17339                           
 17340                           ; BSR set to: 15
 17341                           ;inc\CANlib.h: 444: return;
 17342  011F84  0012               	return	
 17343  011F86                     i2l386:
 17344                           
 17345                           ; BSR set to: 15
 17346                           ;inc\CANlib.h: 445: }
 17347                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17348  011F86  010F               	movlb	15	; () banked
 17349  011F88  B720               	btfsc	32,3,b	;volatile
 17350  011F8A  0012               	return	
 17351                           
 17352                           ; BSR set to: 15
 17353                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17354  011F8C  C043  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 17355                           
 17356                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17357  011F90  AC44               	btfss	i2CANsendMessage@flags,6,c
 17358  011F92  D003               	goto	i2l401
 17359                           
 17360                           ; BSR set to: 15
 17361                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17362  011F94  010F               	movlb	15	; () banked
 17363  011F96  8D25               	bsf	37,6,b	;volatile
 17364  011F98  D002               	goto	i2l402
 17365  011F9A                     i2l401:
 17366                           
 17367                           ; BSR set to: 15
 17368                           ;inc\CANlib.h: 454: else
 17369                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17370  011F9A  010F               	movlb	15	; () banked
 17371  011F9C  9D25               	bcf	37,6,b	;volatile
 17372  011F9E                     i2l402:
 17373                           
 17374                           ; BSR set to: 15
 17375                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17376  011F9E  A644               	btfss	i2CANsendMessage@flags,3,c
 17377  011FA0  D066               	goto	i2l403
 17378                           
 17379                           ; BSR set to: 15
 17380                           ;inc\CANlib.h: 458: {
 17381                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17382  011FA2  503D               	movf	i2CANsendMessage@identifier,w,c
 17383  011FA4  6E49               	movwf	i2CANsendMessage@tamp,c
 17384  011FA6  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 17385  011FA8  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 17386  011FAA  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 17387                           
 17388                           ; BSR set to: 15
 17389                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17390  011FAC  C049  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 17391                           
 17392                           ; BSR set to: 15
 17393                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17394  011FB0  0E00               	movlw	0
 17395  011FB2  143D               	andwf	i2CANsendMessage@identifier,w,c
 17396  011FB4  6E49               	movwf	i2CANsendMessage@tamp,c
 17397  011FB6  0EFF               	movlw	255
 17398  011FB8  143E               	andwf	i2CANsendMessage@identifier+1,w,c
 17399  011FBA  6E4A               	movwf	i2CANsendMessage@tamp+1,c
 17400  011FBC  0E00               	movlw	0
 17401  011FBE  143F               	andwf	i2CANsendMessage@identifier+2,w,c
 17402  011FC0  6E4B               	movwf	i2CANsendMessage@tamp+2,c
 17403  011FC2  0E00               	movlw	0
 17404  011FC4  1440               	andwf	i2CANsendMessage@identifier+3,w,c
 17405  011FC6  6E4C               	movwf	i2CANsendMessage@tamp+3,c
 17406                           
 17407                           ; BSR set to: 15
 17408                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 17409  011FC8  C049  F045         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17410  011FCC  C04A  F046         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17411  011FD0  C04B  F047         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17412  011FD4  C04C  F048         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17413  011FD8  C046  F045         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17414  011FDC  C047  F046         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17415  011FE0  C048  F047         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17416  011FE4  6A48               	clrf	??i2_CANsendMessage+3,c
 17417  011FE6  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17418  011FEA  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17419  011FEE  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17420  011FF2  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17421                           
 17422                           ; BSR set to: 15
 17423                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 17424  011FF6  C049  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 17425                           
 17426                           ; BSR set to: 15
 17427                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 17428  011FFA  0E00               	movlw	0
 17429  011FFC  010F               	movlb	15	; () banked
 17430  011FFE  6F22               	movwf	34,b	;volatile
 17431                           
 17432                           ; BSR set to: 15
 17433                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 17434  012000  010F               	movlb	15	; () banked
 17435  012002  8722               	bsf	34,3,b	;volatile
 17436                           
 17437                           ; BSR set to: 15
 17438                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 17439  012004  A03F               	btfss	i2CANsendMessage@identifier+2,0,c
 17440  012006  D002               	goto	i2l404
 17441                           
 17442                           ; BSR set to: 15
 17443                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 17444  012008  010F               	movlb	15	; () banked
 17445  01200A  8122               	bsf	34,0,b	;volatile
 17446  01200C                     i2l404:
 17447                           
 17448                           ; BSR set to: 15
 17449                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 17450  01200C  A23F               	btfss	i2CANsendMessage@identifier+2,1,c
 17451  01200E  D002               	goto	i2l405
 17452                           
 17453                           ; BSR set to: 15
 17454                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 17455  012010  010F               	movlb	15	; () banked
 17456  012012  8322               	bsf	34,1,b	;volatile
 17457  012014                     i2l405:
 17458                           
 17459                           ; BSR set to: 15
 17460                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 17461  012014  A43F               	btfss	i2CANsendMessage@identifier+2,2,c
 17462  012016  D002               	goto	i2l406
 17463                           
 17464                           ; BSR set to: 15
 17465                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 17466  012018  010F               	movlb	15	; () banked
 17467  01201A  8B22               	bsf	34,5,b	;volatile
 17468  01201C                     i2l406:
 17469                           
 17470                           ; BSR set to: 15
 17471                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 17472  01201C  A63F               	btfss	i2CANsendMessage@identifier+2,3,c
 17473  01201E  D002               	goto	i2l407
 17474                           
 17475                           ; BSR set to: 15
 17476                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 17477  012020  010F               	movlb	15	; () banked
 17478  012022  8D22               	bsf	34,6,b	;volatile
 17479  012024                     i2l407:
 17480                           
 17481                           ; BSR set to: 15
 17482                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 17483  012024  A83F               	btfss	i2CANsendMessage@identifier+2,4,c
 17484  012026  D002               	goto	i2l8618
 17485                           
 17486                           ; BSR set to: 15
 17487                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 17488  012028  010F               	movlb	15	; () banked
 17489  01202A  8F22               	bsf	34,7,b	;volatile
 17490  01202C                     i2l8618:
 17491                           
 17492                           ; BSR set to: 15
 17493                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 17494  01202C  C03D  F045         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17495  012030  C03E  F046         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17496  012034  C03F  F047         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17497  012038  C040  F048         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17498  01203C  0E16               	movlw	22
 17499  01203E  D005               	goto	i2u1129_40
 17500  012040                     i2u1129_45:
 17501  012040  90D8               	bcf	status,0,c
 17502  012042  3248               	rrcf	??i2_CANsendMessage+3,f,c
 17503  012044  3247               	rrcf	??i2_CANsendMessage+2,f,c
 17504  012046  3246               	rrcf	??i2_CANsendMessage+1,f,c
 17505  012048  3245               	rrcf	??i2_CANsendMessage,f,c
 17506  01204A                     i2u1129_40:
 17507  01204A  2EE8               	decfsz	wreg,f,c
 17508  01204C  D7F9               	goto	i2u1129_45
 17509  01204E  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17510  012052  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17511  012056  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17512  01205A  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17513                           
 17514                           ; BSR set to: 15
 17515                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 17516  01205E  5049               	movf	i2CANsendMessage@tamp,w,c
 17517  012060  6E49               	movwf	i2CANsendMessage@tamp,c
 17518  012062  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 17519  012064  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 17520  012066  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 17521                           
 17522                           ; BSR set to: 15
 17523                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 17524  012068  C049  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 17525                           
 17526                           ;inc\CANlib.h: 483: }
 17527  01206C  D04D               	goto	i2l8638
 17528  01206E                     i2l403:
 17529                           
 17530                           ; BSR set to: 15
 17531                           ;inc\CANlib.h: 485: else
 17532                           ;inc\CANlib.h: 487: {
 17533                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 17534  01206E  010F               	movlb	15	; () banked
 17535  012070  9722               	bcf	34,3,b	;volatile
 17536                           
 17537                           ; BSR set to: 15
 17538                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 17539  012072  C03D  F045         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17540  012076  C03E  F046         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17541  01207A  C03F  F047         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17542  01207E  C040  F048         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17543  012082  0E04               	movlw	4
 17544  012084  D005               	goto	i2u1130_40
 17545  012086                     i2u1130_45:
 17546  012086  90D8               	bcf	status,0,c
 17547  012088  3248               	rrcf	??i2_CANsendMessage+3,f,c
 17548  01208A  3247               	rrcf	??i2_CANsendMessage+2,f,c
 17549  01208C  3246               	rrcf	??i2_CANsendMessage+1,f,c
 17550  01208E  3245               	rrcf	??i2_CANsendMessage,f,c
 17551  012090                     i2u1130_40:
 17552  012090  2EE8               	decfsz	wreg,f,c
 17553  012092  D7F9               	goto	i2u1130_45
 17554  012094  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17555  012098  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17556  01209C  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17557  0120A0  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17558                           
 17559                           ; BSR set to: 15
 17560                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 17561  0120A4  5049               	movf	i2CANsendMessage@tamp,w,c
 17562  0120A6  6E49               	movwf	i2CANsendMessage@tamp,c
 17563  0120A8  6A4A               	clrf	i2CANsendMessage@tamp+1,c
 17564  0120AA  6A4B               	clrf	i2CANsendMessage@tamp+2,c
 17565  0120AC  6A4C               	clrf	i2CANsendMessage@tamp+3,c
 17566                           
 17567                           ; BSR set to: 15
 17568                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 17569  0120AE  C049  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 17570                           
 17571                           ; BSR set to: 15
 17572                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 17573  0120B2  0E07               	movlw	7
 17574  0120B4  143D               	andwf	i2CANsendMessage@identifier,w,c
 17575  0120B6  6E49               	movwf	i2CANsendMessage@tamp,c
 17576  0120B8  0E00               	movlw	0
 17577  0120BA  143E               	andwf	i2CANsendMessage@identifier+1,w,c
 17578  0120BC  6E4A               	movwf	i2CANsendMessage@tamp+1,c
 17579  0120BE  0E00               	movlw	0
 17580  0120C0  143F               	andwf	i2CANsendMessage@identifier+2,w,c
 17581  0120C2  6E4B               	movwf	i2CANsendMessage@tamp+2,c
 17582  0120C4  0E00               	movlw	0
 17583  0120C6  1440               	andwf	i2CANsendMessage@identifier+3,w,c
 17584  0120C8  6E4C               	movwf	i2CANsendMessage@tamp+3,c
 17585                           
 17586                           ; BSR set to: 15
 17587                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 17588  0120CA  C049  F045         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17589  0120CE  C04A  F046         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17590  0120D2  C04B  F047         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17591  0120D6  C04C  F048         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17592  0120DA  0E05               	movlw	5
 17593  0120DC                     i2u1131_45:
 17594  0120DC  90D8               	bcf	status,0,c
 17595  0120DE  3645               	rlcf	??i2_CANsendMessage,f,c
 17596  0120E0  3646               	rlcf	??i2_CANsendMessage+1,f,c
 17597  0120E2  3647               	rlcf	??i2_CANsendMessage+2,f,c
 17598  0120E4  3648               	rlcf	??i2_CANsendMessage+3,f,c
 17599  0120E6  2EE8               	decfsz	wreg,f,c
 17600  0120E8  D7F9               	goto	i2u1131_45
 17601  0120EA  C045  F049         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17602  0120EE  C046  F04A         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17603  0120F2  C047  F04B         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17604  0120F6  C048  F04C         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17605                           
 17606                           ; BSR set to: 15
 17607                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 17608  0120FA  010F               	movlb	15	; () banked
 17609  0120FC  5122               	movf	34,w,b	;volatile
 17610  0120FE  0B1F               	andlw	31
 17611  012100  010F               	movlb	15	; () banked
 17612  012102  6F22               	movwf	34,b	;volatile
 17613                           
 17614                           ; BSR set to: 15
 17615                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 17616  012104  C049  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 17617  012108                     i2l8638:
 17618                           
 17619                           ; BSR set to: 15
 17620                           ;inc\CANlib.h: 498: }
 17621                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 17622  012108  A044               	btfss	i2CANsendMessage@flags,0,c
 17623  01210A  D003               	goto	i2l410
 17624                           
 17625                           ; BSR set to: 15
 17626                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 17627  01210C  010F               	movlb	15	; () banked
 17628  01210E  8120               	bsf	32,0,b	;volatile
 17629  012110  D002               	goto	i2l411
 17630  012112                     i2l410:
 17631                           
 17632                           ; BSR set to: 15
 17633                           ;inc\CANlib.h: 502: else
 17634                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 17635  012112  010F               	movlb	15	; () banked
 17636  012114  9120               	bcf	32,0,b	;volatile
 17637  012116                     i2l411:
 17638                           
 17639                           ; BSR set to: 15
 17640                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 17641  012116  A244               	btfss	i2CANsendMessage@flags,1,c
 17642  012118  D003               	goto	i2l412
 17643                           
 17644                           ; BSR set to: 15
 17645                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 17646  01211A  010F               	movlb	15	; () banked
 17647  01211C  8320               	bsf	32,1,b	;volatile
 17648  01211E  D002               	goto	i2l8644
 17649  012120                     i2l412:
 17650                           
 17651                           ; BSR set to: 15
 17652                           ;inc\CANlib.h: 506: else
 17653                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 17654  012120  010F               	movlb	15	; () banked
 17655  012122  9320               	bcf	32,1,b	;volatile
 17656  012124                     i2l8644:
 17657                           
 17658                           ; BSR set to: 15
 17659                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 17660  012124  C041  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17661  012128  C042  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17662  01212C  50DF               	movf	indf2,w,c
 17663  01212E  010F               	movlb	15	; () banked
 17664  012130  6F26               	movwf	38,b	;volatile
 17665                           
 17666                           ; BSR set to: 15
 17667                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 17668  012132  EE20 F001          	lfsr	2,1
 17669  012136  5041               	movf	i2CANsendMessage@data,w,c
 17670  012138  26D9               	addwf	fsr2l,f,c
 17671  01213A  5042               	movf	i2CANsendMessage@data+1,w,c
 17672  01213C  22DA               	addwfc	fsr2h,f,c
 17673  01213E  50DF               	movf	indf2,w,c
 17674  012140  010F               	movlb	15	; () banked
 17675  012142  6F27               	movwf	39,b	;volatile
 17676                           
 17677                           ; BSR set to: 15
 17678                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 17679  012144  EE20 F002          	lfsr	2,2
 17680  012148  5041               	movf	i2CANsendMessage@data,w,c
 17681  01214A  26D9               	addwf	fsr2l,f,c
 17682  01214C  5042               	movf	i2CANsendMessage@data+1,w,c
 17683  01214E  22DA               	addwfc	fsr2h,f,c
 17684  012150  50DF               	movf	indf2,w,c
 17685  012152  010F               	movlb	15	; () banked
 17686  012154  6F28               	movwf	40,b	;volatile
 17687                           
 17688                           ; BSR set to: 15
 17689                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 17690  012156  EE20 F003          	lfsr	2,3
 17691  01215A  5041               	movf	i2CANsendMessage@data,w,c
 17692  01215C  26D9               	addwf	fsr2l,f,c
 17693  01215E  5042               	movf	i2CANsendMessage@data+1,w,c
 17694  012160  22DA               	addwfc	fsr2h,f,c
 17695  012162  50DF               	movf	indf2,w,c
 17696  012164  010F               	movlb	15	; () banked
 17697  012166  6F29               	movwf	41,b	;volatile
 17698                           
 17699                           ; BSR set to: 15
 17700                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 17701  012168  EE20 F004          	lfsr	2,4
 17702  01216C  5041               	movf	i2CANsendMessage@data,w,c
 17703  01216E  26D9               	addwf	fsr2l,f,c
 17704  012170  5042               	movf	i2CANsendMessage@data+1,w,c
 17705  012172  22DA               	addwfc	fsr2h,f,c
 17706  012174  50DF               	movf	indf2,w,c
 17707  012176  010F               	movlb	15	; () banked
 17708  012178  6F2A               	movwf	42,b	;volatile
 17709                           
 17710                           ; BSR set to: 15
 17711                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 17712  01217A  EE20 F005          	lfsr	2,5
 17713  01217E  5041               	movf	i2CANsendMessage@data,w,c
 17714  012180  26D9               	addwf	fsr2l,f,c
 17715  012182  5042               	movf	i2CANsendMessage@data+1,w,c
 17716  012184  22DA               	addwfc	fsr2h,f,c
 17717  012186  50DF               	movf	indf2,w,c
 17718  012188  010F               	movlb	15	; () banked
 17719  01218A  6F2B               	movwf	43,b	;volatile
 17720                           
 17721                           ; BSR set to: 15
 17722                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 17723  01218C  EE20 F006          	lfsr	2,6
 17724  012190  5041               	movf	i2CANsendMessage@data,w,c
 17725  012192  26D9               	addwf	fsr2l,f,c
 17726  012194  5042               	movf	i2CANsendMessage@data+1,w,c
 17727  012196  22DA               	addwfc	fsr2h,f,c
 17728  012198  50DF               	movf	indf2,w,c
 17729  01219A  010F               	movlb	15	; () banked
 17730  01219C  6F2C               	movwf	44,b	;volatile
 17731                           
 17732                           ; BSR set to: 15
 17733                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 17734  01219E  EE20 F007          	lfsr	2,7
 17735  0121A2  5041               	movf	i2CANsendMessage@data,w,c
 17736  0121A4  26D9               	addwf	fsr2l,f,c
 17737  0121A6  5042               	movf	i2CANsendMessage@data+1,w,c
 17738  0121A8  22DA               	addwfc	fsr2h,f,c
 17739  0121AA  50DF               	movf	indf2,w,c
 17740  0121AC  010F               	movlb	15	; () banked
 17741  0121AE  6F2D               	movwf	45,b	;volatile
 17742                           
 17743                           ; BSR set to: 15
 17744                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 17745  0121B0  010F               	movlb	15	; () banked
 17746  0121B2  8720               	bsf	32,3,b	;volatile
 17747                           
 17748                           ; BSR set to: 15
 17749                           ;inc\CANlib.h: 520: return;
 17750  0121B4  0012               	return	
 17751  0121B6                     __end_ofi2_CANsendMessage:
 17752                           	opt stack 0
 17753                           pclatu	equ	0xFFB
 17754                           pclath	equ	0xFFA
 17755                           tblptru	equ	0xFF8
 17756                           tblptrh	equ	0xFF7
 17757                           tblptrl	equ	0xFF6
 17758                           tablat	equ	0xFF5
 17759                           prodh	equ	0xFF4
 17760                           prodl	equ	0xFF3
 17761                           intcon	equ	0xFF2
 17762                           postinc0	equ	0xFEE
 17763                           fsr0h	equ	0xFEA
 17764                           fsr0l	equ	0xFE9
 17765                           wreg	equ	0xFE8
 17766                           indf1	equ	0xFE7
 17767                           fsr1h	equ	0xFE2
 17768                           fsr1l	equ	0xFE1
 17769                           bsr	equ	0xFE0
 17770                           indf2	equ	0xFDF
 17771                           postinc2	equ	0xFDE
 17772                           fsr2h	equ	0xFDA
 17773                           fsr2l	equ	0xFD9
 17774                           status	equ	0xFD8
 17775                           
 17776 ;; *************** function i2_CANisTxReady *****************
 17777 ;; Defined at:
 17778 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17779 ;; Parameters:    Size  Location     Type
 17780 ;;		None
 17781 ;; Auto vars:     Size  Location     Type
 17782 ;;		None
 17783 ;; Return value:  Size  Location     Type
 17784 ;;                  1    wreg      unsigned char 
 17785 ;; Registers used:
 17786 ;;		wreg, status,2
 17787 ;; Tracked objects:
 17788 ;;		On entry : 0/0
 17789 ;;		On exit  : 0/0
 17790 ;;		Unchanged: 0/0
 17791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;Total ram usage:        1 bytes
 17797 ;; Hardware stack levels used:    1
 17798 ;; This function calls:
 17799 ;;		Nothing
 17800 ;; This function is called by:
 17801 ;;		_ISR_alta
 17802 ;; This function uses a non-reentrant model
 17803 ;;
 17804                           
 17805                           	psect	text46
 17806  015A22                     __ptext46:
 17807                           	opt stack 0
 17808  015A22                     i2_CANisTxReady:
 17809                           	opt stack 21
 17810                           
 17811                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 17812                           
 17813                           ; BSR set to: 15
 17814                           ;incstack = 0
 17815  015A22  0E01               	movlw	1
 17816  015A24  6E3D               	movwf	i2_CANisTxReady$3227,c
 17817  015A26  010F               	movlb	15	; () banked
 17818  015A28  A740               	btfss	64,3,b	;volatile
 17819  015A2A  D008               	goto	i2l564
 17820                           
 17821                           ; BSR set to: 15
 17822  015A2C  010F               	movlb	15	; () banked
 17823  015A2E  A730               	btfss	48,3,b	;volatile
 17824  015A30  D005               	goto	i2l564
 17825                           
 17826                           ; BSR set to: 15
 17827  015A32  010F               	movlb	15	; () banked
 17828  015A34  A720               	btfss	32,3,b	;volatile
 17829  015A36  D002               	goto	i2l564
 17830                           
 17831                           ; BSR set to: 15
 17832  015A38  0E00               	movlw	0
 17833  015A3A  6E3D               	movwf	i2_CANisTxReady$3227,c
 17834  015A3C                     i2l564:
 17835                           
 17836                           ; BSR set to: 15
 17837  015A3C  503D               	movf	i2_CANisTxReady$3227,w,c
 17838  015A3E  0012               	return	
 17839  015A40                     __end_ofi2_CANisTxReady:
 17840                           	opt stack 0
 17841                           pclatu	equ	0xFFB
 17842                           pclath	equ	0xFFA
 17843                           tblptru	equ	0xFF8
 17844                           tblptrh	equ	0xFF7
 17845                           tblptrl	equ	0xFF6
 17846                           tablat	equ	0xFF5
 17847                           prodh	equ	0xFF4
 17848                           prodl	equ	0xFF3
 17849                           intcon	equ	0xFF2
 17850                           postinc0	equ	0xFEE
 17851                           fsr0h	equ	0xFEA
 17852                           fsr0l	equ	0xFE9
 17853                           wreg	equ	0xFE8
 17854                           indf1	equ	0xFE7
 17855                           fsr1h	equ	0xFE2
 17856                           fsr1l	equ	0xFE1
 17857                           bsr	equ	0xFE0
 17858                           indf2	equ	0xFDF
 17859                           postinc2	equ	0xFDE
 17860                           fsr2h	equ	0xFDA
 17861                           fsr2l	equ	0xFD9
 17862                           status	equ	0xFD8
 17863                           
 17864 ;; *************** function _CANreceiveMessage *****************
 17865 ;; Defined at:
 17866 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17867 ;; Parameters:    Size  Location     Type
 17868 ;;  msg             2   17[COMRAM] PTR struct .
 17869 ;;		 -> msg(15), 
 17870 ;; Auto vars:     Size  Location     Type
 17871 ;;  tamp            1   28[COMRAM] unsigned char 
 17872 ;;  error           1   27[COMRAM] unsigned char 
 17873 ;; Return value:  Size  Location     Type
 17874 ;;                  1    wreg      unsigned char 
 17875 ;; Registers used:
 17876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17877 ;; Tracked objects:
 17878 ;;		On entry : 0/0
 17879 ;;		On exit  : 0/0
 17880 ;;		Unchanged: 0/0
 17881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17884 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17885 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;Total ram usage:       12 bytes
 17887 ;; Hardware stack levels used:    1
 17888 ;; This function calls:
 17889 ;;		Nothing
 17890 ;; This function is called by:
 17891 ;;		_ISR_alta
 17892 ;; This function uses a non-reentrant model
 17893 ;;
 17894                           
 17895                           	psect	text47
 17896  0126D0                     __ptext47:
 17897                           	opt stack 0
 17898  0126D0                     _CANreceiveMessage:
 17899                           	opt stack 21
 17900                           
 17901                           ;inc\CANlib.h: 530: BYTE tamp;
 17902                           ;inc\CANlib.h: 531: BYTE error = 0;
 17903                           
 17904                           ; BSR set to: 15
 17905                           ;incstack = 0
 17906  0126D0  0E00               	movlw	0
 17907  0126D2  6E47               	movwf	CANreceiveMessage@error,c
 17908                           
 17909                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 17910  0126D4  BE74               	btfsc	3956,7,c	;volatile
 17911                           
 17912                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 17913  0126D6  8047               	bsf	CANreceiveMessage@error,0,c
 17914                           
 17915                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 17916  0126D8  BC74               	btfsc	3956,6,c	;volatile
 17917                           
 17918                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 17919  0126DA  8247               	bsf	CANreceiveMessage@error,1,c
 17920                           
 17921                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 17922  0126DC  010F               	movlb	15	; () banked
 17923  0126DE  AF50               	btfss	80,7,b	;volatile
 17924  0126E0  D143               	goto	i2l418
 17925                           
 17926                           ; BSR set to: 15
 17927                           ;inc\CANlib.h: 541: {
 17928                           ;inc\CANlib.h: 542: msg->identifier = 0;
 17929  0126E2  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17930  0126E6  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17931  0126EA  6ADE               	clrf	postinc2,c
 17932  0126EC  6ADE               	clrf	postinc2,c
 17933  0126EE  6ADE               	clrf	postinc2,c
 17934  0126F0  6ADD               	clrf	postdec2,c
 17935                           
 17936                           ; BSR set to: 15
 17937                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 17938  0126F2  EE20 F004          	lfsr	2,4
 17939  0126F6  503D               	movf	CANreceiveMessage@msg,w,c
 17940  0126F8  26D9               	addwf	fsr2l,f,c
 17941  0126FA  503E               	movf	CANreceiveMessage@msg+1,w,c
 17942  0126FC  22DA               	addwfc	fsr2h,f,c
 17943  0126FE  CF56 FFDF          	movff	3926,indf2	;volatile
 17944                           
 17945                           ; BSR set to: 15
 17946                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 17947  012702  EE20 F005          	lfsr	2,5
 17948  012706  503D               	movf	CANreceiveMessage@msg,w,c
 17949  012708  26D9               	addwf	fsr2l,f,c
 17950  01270A  503E               	movf	CANreceiveMessage@msg+1,w,c
 17951  01270C  22DA               	addwfc	fsr2h,f,c
 17952  01270E  CF57 FFDF          	movff	3927,indf2	;volatile
 17953                           
 17954                           ; BSR set to: 15
 17955                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 17956  012712  EE20 F006          	lfsr	2,6
 17957  012716  503D               	movf	CANreceiveMessage@msg,w,c
 17958  012718  26D9               	addwf	fsr2l,f,c
 17959  01271A  503E               	movf	CANreceiveMessage@msg+1,w,c
 17960  01271C  22DA               	addwfc	fsr2h,f,c
 17961  01271E  CF58 FFDF          	movff	3928,indf2	;volatile
 17962                           
 17963                           ; BSR set to: 15
 17964                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 17965  012722  EE20 F007          	lfsr	2,7
 17966  012726  503D               	movf	CANreceiveMessage@msg,w,c
 17967  012728  26D9               	addwf	fsr2l,f,c
 17968  01272A  503E               	movf	CANreceiveMessage@msg+1,w,c
 17969  01272C  22DA               	addwfc	fsr2h,f,c
 17970  01272E  CF59 FFDF          	movff	3929,indf2	;volatile
 17971                           
 17972                           ; BSR set to: 15
 17973                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 17974  012732  EE20 F008          	lfsr	2,8
 17975  012736  503D               	movf	CANreceiveMessage@msg,w,c
 17976  012738  26D9               	addwf	fsr2l,f,c
 17977  01273A  503E               	movf	CANreceiveMessage@msg+1,w,c
 17978  01273C  22DA               	addwfc	fsr2h,f,c
 17979  01273E  CF5A FFDF          	movff	3930,indf2	;volatile
 17980                           
 17981                           ; BSR set to: 15
 17982                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 17983  012742  EE20 F009          	lfsr	2,9
 17984  012746  503D               	movf	CANreceiveMessage@msg,w,c
 17985  012748  26D9               	addwf	fsr2l,f,c
 17986  01274A  503E               	movf	CANreceiveMessage@msg+1,w,c
 17987  01274C  22DA               	addwfc	fsr2h,f,c
 17988  01274E  CF5B FFDF          	movff	3931,indf2	;volatile
 17989                           
 17990                           ; BSR set to: 15
 17991                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 17992  012752  EE20 F00A          	lfsr	2,10
 17993  012756  503D               	movf	CANreceiveMessage@msg,w,c
 17994  012758  26D9               	addwf	fsr2l,f,c
 17995  01275A  503E               	movf	CANreceiveMessage@msg+1,w,c
 17996  01275C  22DA               	addwfc	fsr2h,f,c
 17997  01275E  CF5C FFDF          	movff	3932,indf2	;volatile
 17998                           
 17999                           ; BSR set to: 15
 18000                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 18001  012762  EE20 F00B          	lfsr	2,11
 18002  012766  503D               	movf	CANreceiveMessage@msg,w,c
 18003  012768  26D9               	addwf	fsr2l,f,c
 18004  01276A  503E               	movf	CANreceiveMessage@msg+1,w,c
 18005  01276C  22DA               	addwfc	fsr2h,f,c
 18006  01276E  CF5D FFDF          	movff	3933,indf2	;volatile
 18007                           
 18008                           ; BSR set to: 15
 18009                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 18010  012772  EE20 F00E          	lfsr	2,14
 18011  012776  503D               	movf	CANreceiveMessage@msg,w,c
 18012  012778  26D9               	addwf	fsr2l,f,c
 18013  01277A  503E               	movf	CANreceiveMessage@msg+1,w,c
 18014  01277C  22DA               	addwfc	fsr2h,f,c
 18015  01277E  010F               	movlb	15	; () banked
 18016  012780  AD55               	btfss	85,6,b	;volatile
 18017  012782  D002               	goto	i2u1062_40
 18018  012784  0E01               	movlw	1
 18019  012786  D001               	goto	i2u1062_46
 18020  012788                     i2u1062_40:
 18021  012788  0E00               	movlw	0
 18022  01278A                     i2u1062_46:
 18023  01278A  6EDF               	movwf	indf2,c
 18024                           
 18025                           ; BSR set to: 15
 18026                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 18027  01278C  EE20 F00D          	lfsr	2,13
 18028  012790  503D               	movf	CANreceiveMessage@msg,w,c
 18029  012792  26D9               	addwf	fsr2l,f,c
 18030  012794  503E               	movf	CANreceiveMessage@msg+1,w,c
 18031  012796  22DA               	addwfc	fsr2h,f,c
 18032  012798  010F               	movlb	15	; () banked
 18033  01279A  5155               	movf	85,w,b	;volatile
 18034  01279C  0B0F               	andlw	15
 18035  01279E  6EDF               	movwf	indf2,c
 18036                           
 18037                           ; BSR set to: 15
 18038                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 18039  0127A0  EE20 F00C          	lfsr	2,12
 18040  0127A4  503D               	movf	CANreceiveMessage@msg,w,c
 18041  0127A6  26D9               	addwf	fsr2l,f,c
 18042  0127A8  503E               	movf	CANreceiveMessage@msg+1,w,c
 18043  0127AA  22DA               	addwfc	fsr2h,f,c
 18044  0127AC  010F               	movlb	15	; () banked
 18045  0127AE  A752               	btfss	82,3,b	;volatile
 18046  0127B0  D002               	goto	i2u1063_40
 18047  0127B2  0E01               	movlw	1
 18048  0127B4  D001               	goto	i2u1063_46
 18049  0127B6                     i2u1063_40:
 18050  0127B6  0E00               	movlw	0
 18051  0127B8                     i2u1063_46:
 18052  0127B8  6EDF               	movwf	indf2,c
 18053                           
 18054                           ; BSR set to: 15
 18055                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 18056  0127BA  010F               	movlb	15	; () banked
 18057  0127BC  B752               	btfsc	82,3,b	;volatile
 18058  0127BE  D044               	goto	i2l8174
 18059                           
 18060                           ; BSR set to: 15
 18061                           ;inc\CANlib.h: 559: {
 18062                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 18063  0127C0  CF51 F03F          	movff	3921,??_CANreceiveMessage	;volatile
 18064  0127C4  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18065  0127C6  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18066  0127C8  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18067  0127CA  0E03               	movlw	3
 18068  0127CC                     i2u1065_45:
 18069  0127CC  90D8               	bcf	status,0,c
 18070  0127CE  363F               	rlcf	??_CANreceiveMessage,f,c
 18071  0127D0  3640               	rlcf	??_CANreceiveMessage+1,f,c
 18072  0127D2  3641               	rlcf	??_CANreceiveMessage+2,f,c
 18073  0127D4  3642               	rlcf	??_CANreceiveMessage+3,f,c
 18074  0127D6  2EE8               	decfsz	wreg,f,c
 18075  0127D8  D7F9               	goto	i2u1065_45
 18076  0127DA  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18077  0127DE  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18078  0127E2  C03F  FFDE         	movff	??_CANreceiveMessage,postinc2
 18079  0127E6  C040  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 18080  0127EA  C041  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 18081  0127EE  C042  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 18082                           
 18083                           ; BSR set to: 15
 18084                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 18085  0127F2  010F               	movlb	15	; () banked
 18086  0127F4  3952               	swapf	82,w,b	;volatile
 18087  0127F6  42E8               	rrncf	wreg,f,c
 18088  0127F8  0B07               	andlw	7
 18089  0127FA  0B07               	andlw	7
 18090  0127FC  6E48               	movwf	CANreceiveMessage@tamp,c
 18091                           
 18092                           ; BSR set to: 15
 18093                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 18094  0127FE  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18095  012802  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18096  012806  CFDE F03F          	movff	postinc2,??_CANreceiveMessage
 18097  01280A  CFDE F040          	movff	postinc2,??_CANreceiveMessage+1
 18098  01280E  CFDE F041          	movff	postinc2,??_CANreceiveMessage+2
 18099  012812  CFDE F042          	movff	postinc2,??_CANreceiveMessage+3
 18100  012816  5048               	movf	CANreceiveMessage@tamp,w,c
 18101  012818  243F               	addwf	??_CANreceiveMessage,w,c
 18102  01281A  6E43               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 18103  01281C  0E00               	movlw	0
 18104  01281E  2040               	addwfc	??_CANreceiveMessage+1,w,c
 18105  012820  6E44               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 18106  012822  0E00               	movlw	0
 18107  012824  2041               	addwfc	??_CANreceiveMessage+2,w,c
 18108  012826  6E45               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 18109  012828  0E00               	movlw	0
 18110  01282A  2042               	addwfc	??_CANreceiveMessage+3,w,c
 18111  01282C  6E46               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 18112  01282E  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18113  012832  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18114  012836  C043  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 18115  01283A  C044  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 18116  01283E  C045  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 18117  012842  C046  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 18118                           
 18119                           ;inc\CANlib.h: 563: }
 18120  012846  D08D               	goto	i2l8200
 18121  012848                     i2l8174:
 18122                           
 18123                           ; BSR set to: 15
 18124                           ;inc\CANlib.h: 564: else
 18125                           ;inc\CANlib.h: 565: {
 18126                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 18127  012848  CF54 F03F          	movff	3924,??_CANreceiveMessage	;volatile
 18128  01284C  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18129  01284E  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18130  012850  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18131  012852  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18132  012856  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18133  01285A  C03F  FFDE         	movff	??_CANreceiveMessage,postinc2
 18134  01285E  C040  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 18135  012862  C041  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 18136  012866  C042  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 18137                           
 18138                           ; BSR set to: 15
 18139                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 18140  01286A  CF53 F03F          	movff	3923,??_CANreceiveMessage	;volatile
 18141  01286E  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18142  012870  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18143  012872  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18144  012874  C041  F042         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 18145  012878  C040  F041         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 18146  01287C  C03F  F040         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 18147  012880  6A3F               	clrf	??_CANreceiveMessage,c
 18148  012882  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18149  012886  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18150  01288A  503F               	movf	??_CANreceiveMessage,w,c
 18151  01288C  26DE               	addwf	postinc2,f,c
 18152  01288E  5040               	movf	??_CANreceiveMessage+1,w,c
 18153  012890  22DE               	addwfc	postinc2,f,c
 18154  012892  5041               	movf	??_CANreceiveMessage+2,w,c
 18155  012894  22DE               	addwfc	postinc2,f,c
 18156  012896  5042               	movf	??_CANreceiveMessage+3,w,c
 18157  012898  22DE               	addwfc	postinc2,f,c
 18158                           
 18159                           ; BSR set to: 15
 18160                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 18161  01289A  010F               	movlb	15	; () banked
 18162  01289C  A152               	btfss	82,0,b	;volatile
 18163  01289E  D00C               	goto	i2l8182
 18164                           
 18165                           ; BSR set to: 15
 18166                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 18167  0128A0  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18168  0128A4  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18169  0128A8  0E00               	movlw	0
 18170  0128AA  12DE               	iorwf	postinc2,f,c
 18171  0128AC  0E00               	movlw	0
 18172  0128AE  12DE               	iorwf	postinc2,f,c
 18173  0128B0  0E01               	movlw	1
 18174  0128B2  12DE               	iorwf	postinc2,f,c
 18175  0128B4  0E00               	movlw	0
 18176  0128B6  12DE               	iorwf	postinc2,f,c
 18177  0128B8                     i2l8182:
 18178                           
 18179                           ; BSR set to: 15
 18180                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 18181  0128B8  010F               	movlb	15	; () banked
 18182  0128BA  A352               	btfss	82,1,b	;volatile
 18183  0128BC  D00C               	goto	i2l8186
 18184                           
 18185                           ; BSR set to: 15
 18186                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 18187  0128BE  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18188  0128C2  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18189  0128C6  0E00               	movlw	0
 18190  0128C8  12DE               	iorwf	postinc2,f,c
 18191  0128CA  0E00               	movlw	0
 18192  0128CC  12DE               	iorwf	postinc2,f,c
 18193  0128CE  0E02               	movlw	2
 18194  0128D0  12DE               	iorwf	postinc2,f,c
 18195  0128D2  0E00               	movlw	0
 18196  0128D4  12DE               	iorwf	postinc2,f,c
 18197  0128D6                     i2l8186:
 18198                           
 18199                           ; BSR set to: 15
 18200                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 18201  0128D6  010F               	movlb	15	; () banked
 18202  0128D8  AB52               	btfss	82,5,b	;volatile
 18203  0128DA  D00C               	goto	i2l8190
 18204                           
 18205                           ; BSR set to: 15
 18206                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 18207  0128DC  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18208  0128E0  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18209  0128E4  0E00               	movlw	0
 18210  0128E6  12DE               	iorwf	postinc2,f,c
 18211  0128E8  0E00               	movlw	0
 18212  0128EA  12DE               	iorwf	postinc2,f,c
 18213  0128EC  0E04               	movlw	4
 18214  0128EE  12DE               	iorwf	postinc2,f,c
 18215  0128F0  0E00               	movlw	0
 18216  0128F2  12DE               	iorwf	postinc2,f,c
 18217  0128F4                     i2l8190:
 18218                           
 18219                           ; BSR set to: 15
 18220                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 18221  0128F4  010F               	movlb	15	; () banked
 18222  0128F6  AD52               	btfss	82,6,b	;volatile
 18223  0128F8  D00C               	goto	i2l8194
 18224                           
 18225                           ; BSR set to: 15
 18226                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 18227  0128FA  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18228  0128FE  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18229  012902  0E00               	movlw	0
 18230  012904  12DE               	iorwf	postinc2,f,c
 18231  012906  0E00               	movlw	0
 18232  012908  12DE               	iorwf	postinc2,f,c
 18233  01290A  0E08               	movlw	8
 18234  01290C  12DE               	iorwf	postinc2,f,c
 18235  01290E  0E00               	movlw	0
 18236  012910  12DE               	iorwf	postinc2,f,c
 18237  012912                     i2l8194:
 18238                           
 18239                           ; BSR set to: 15
 18240                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 18241  012912  010F               	movlb	15	; () banked
 18242  012914  AF52               	btfss	82,7,b	;volatile
 18243  012916  D00C               	goto	i2l8198
 18244                           
 18245                           ; BSR set to: 15
 18246                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 18247  012918  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18248  01291C  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18249  012920  0E00               	movlw	0
 18250  012922  12DE               	iorwf	postinc2,f,c
 18251  012924  0E00               	movlw	0
 18252  012926  12DE               	iorwf	postinc2,f,c
 18253  012928  0E10               	movlw	16
 18254  01292A  12DE               	iorwf	postinc2,f,c
 18255  01292C  0E00               	movlw	0
 18256  01292E  12DE               	iorwf	postinc2,f,c
 18257  012930                     i2l8198:
 18258                           
 18259                           ; BSR set to: 15
 18260                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 18261  012930  CF51 F03F          	movff	3921,??_CANreceiveMessage	;volatile
 18262  012934  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18263  012936  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18264  012938  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18265  01293A  0E15               	movlw	21
 18266  01293C                     i2u1071_45:
 18267  01293C  90D8               	bcf	status,0,c
 18268  01293E  363F               	rlcf	??_CANreceiveMessage,f,c
 18269  012940  3640               	rlcf	??_CANreceiveMessage+1,f,c
 18270  012942  3641               	rlcf	??_CANreceiveMessage+2,f,c
 18271  012944  3642               	rlcf	??_CANreceiveMessage+3,f,c
 18272  012946  2EE8               	decfsz	wreg,f,c
 18273  012948  D7F9               	goto	i2u1071_45
 18274  01294A  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18275  01294E  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18276  012952  503F               	movf	??_CANreceiveMessage,w,c
 18277  012954  12DE               	iorwf	postinc2,f,c
 18278  012956  5040               	movf	??_CANreceiveMessage+1,w,c
 18279  012958  12DE               	iorwf	postinc2,f,c
 18280  01295A  5041               	movf	??_CANreceiveMessage+2,w,c
 18281  01295C  12DE               	iorwf	postinc2,f,c
 18282  01295E  5042               	movf	??_CANreceiveMessage+3,w,c
 18283  012960  12DE               	iorwf	postinc2,f,c
 18284  012962                     i2l8200:
 18285                           
 18286                           ; BSR set to: 15
 18287                           ;inc\CANlib.h: 581: }
 18288                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 18289  012962  010F               	movlb	15	; () banked
 18290  012964  9F50               	bcf	80,7,b	;volatile
 18291                           
 18292                           ; BSR set to: 15
 18293                           ;inc\CANlib.h: 584: return (error);
 18294                           ;	Return value of _CANreceiveMessage is never used
 18295  012966  0012               	return	
 18296  012968                     i2l418:
 18297                           
 18298                           ; BSR set to: 15
 18299                           ;inc\CANlib.h: 585: }
 18300                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 18301  012968  AE60               	btfss	3936,7,c	;volatile
 18302  01296A  0012               	return	
 18303                           
 18304                           ; BSR set to: 15
 18305                           ;inc\CANlib.h: 588: {
 18306                           ;inc\CANlib.h: 589: msg->identifier = 0;
 18307  01296C  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18308  012970  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18309  012974  6ADE               	clrf	postinc2,c
 18310  012976  6ADE               	clrf	postinc2,c
 18311  012978  6ADE               	clrf	postinc2,c
 18312  01297A  6ADD               	clrf	postdec2,c
 18313                           
 18314                           ; BSR set to: 15
 18315                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 18316  01297C  EE20 F004          	lfsr	2,4
 18317  012980  503D               	movf	CANreceiveMessage@msg,w,c
 18318  012982  26D9               	addwf	fsr2l,f,c
 18319  012984  503E               	movf	CANreceiveMessage@msg+1,w,c
 18320  012986  22DA               	addwfc	fsr2h,f,c
 18321  012988  CF66 FFDF          	movff	3942,indf2	;volatile
 18322                           
 18323                           ; BSR set to: 15
 18324                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 18325  01298C  EE20 F005          	lfsr	2,5
 18326  012990  503D               	movf	CANreceiveMessage@msg,w,c
 18327  012992  26D9               	addwf	fsr2l,f,c
 18328  012994  503E               	movf	CANreceiveMessage@msg+1,w,c
 18329  012996  22DA               	addwfc	fsr2h,f,c
 18330  012998  CF67 FFDF          	movff	3943,indf2	;volatile
 18331                           
 18332                           ; BSR set to: 15
 18333                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 18334  01299C  EE20 F006          	lfsr	2,6
 18335  0129A0  503D               	movf	CANreceiveMessage@msg,w,c
 18336  0129A2  26D9               	addwf	fsr2l,f,c
 18337  0129A4  503E               	movf	CANreceiveMessage@msg+1,w,c
 18338  0129A6  22DA               	addwfc	fsr2h,f,c
 18339  0129A8  CF68 FFDF          	movff	3944,indf2	;volatile
 18340                           
 18341                           ; BSR set to: 15
 18342                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 18343  0129AC  EE20 F007          	lfsr	2,7
 18344  0129B0  503D               	movf	CANreceiveMessage@msg,w,c
 18345  0129B2  26D9               	addwf	fsr2l,f,c
 18346  0129B4  503E               	movf	CANreceiveMessage@msg+1,w,c
 18347  0129B6  22DA               	addwfc	fsr2h,f,c
 18348  0129B8  CF69 FFDF          	movff	3945,indf2	;volatile
 18349                           
 18350                           ; BSR set to: 15
 18351                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 18352  0129BC  EE20 F008          	lfsr	2,8
 18353  0129C0  503D               	movf	CANreceiveMessage@msg,w,c
 18354  0129C2  26D9               	addwf	fsr2l,f,c
 18355  0129C4  503E               	movf	CANreceiveMessage@msg+1,w,c
 18356  0129C6  22DA               	addwfc	fsr2h,f,c
 18357  0129C8  CF6A FFDF          	movff	3946,indf2	;volatile
 18358                           
 18359                           ; BSR set to: 15
 18360                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 18361  0129CC  EE20 F009          	lfsr	2,9
 18362  0129D0  503D               	movf	CANreceiveMessage@msg,w,c
 18363  0129D2  26D9               	addwf	fsr2l,f,c
 18364  0129D4  503E               	movf	CANreceiveMessage@msg+1,w,c
 18365  0129D6  22DA               	addwfc	fsr2h,f,c
 18366  0129D8  CF6B FFDF          	movff	3947,indf2	;volatile
 18367                           
 18368                           ; BSR set to: 15
 18369                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 18370  0129DC  EE20 F00A          	lfsr	2,10
 18371  0129E0  503D               	movf	CANreceiveMessage@msg,w,c
 18372  0129E2  26D9               	addwf	fsr2l,f,c
 18373  0129E4  503E               	movf	CANreceiveMessage@msg+1,w,c
 18374  0129E6  22DA               	addwfc	fsr2h,f,c
 18375  0129E8  CF6C FFDF          	movff	3948,indf2	;volatile
 18376                           
 18377                           ; BSR set to: 15
 18378                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 18379  0129EC  EE20 F00B          	lfsr	2,11
 18380  0129F0  503D               	movf	CANreceiveMessage@msg,w,c
 18381  0129F2  26D9               	addwf	fsr2l,f,c
 18382  0129F4  503E               	movf	CANreceiveMessage@msg+1,w,c
 18383  0129F6  22DA               	addwfc	fsr2h,f,c
 18384  0129F8  CF6D FFDF          	movff	3949,indf2	;volatile
 18385                           
 18386                           ; BSR set to: 15
 18387                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 18388  0129FC  EE20 F00E          	lfsr	2,14
 18389  012A00  503D               	movf	CANreceiveMessage@msg,w,c
 18390  012A02  26D9               	addwf	fsr2l,f,c
 18391  012A04  503E               	movf	CANreceiveMessage@msg+1,w,c
 18392  012A06  22DA               	addwfc	fsr2h,f,c
 18393  012A08  AC65               	btfss	3941,6,c	;volatile
 18394  012A0A  D002               	goto	i2u1073_40
 18395  012A0C  0E01               	movlw	1
 18396  012A0E  D001               	goto	i2u1073_46
 18397  012A10                     i2u1073_40:
 18398  012A10  0E00               	movlw	0
 18399  012A12                     i2u1073_46:
 18400  012A12  6EDF               	movwf	indf2,c
 18401                           
 18402                           ; BSR set to: 15
 18403                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 18404  012A14  EE20 F00D          	lfsr	2,13
 18405  012A18  503D               	movf	CANreceiveMessage@msg,w,c
 18406  012A1A  26D9               	addwf	fsr2l,f,c
 18407  012A1C  503E               	movf	CANreceiveMessage@msg+1,w,c
 18408  012A1E  22DA               	addwfc	fsr2h,f,c
 18409  012A20  5065               	movf	3941,w,c	;volatile
 18410  012A22  0B0F               	andlw	15
 18411  012A24  6EDF               	movwf	indf2,c
 18412                           
 18413                           ; BSR set to: 15
 18414                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 18415  012A26  EE20 F00C          	lfsr	2,12
 18416  012A2A  503D               	movf	CANreceiveMessage@msg,w,c
 18417  012A2C  26D9               	addwf	fsr2l,f,c
 18418  012A2E  503E               	movf	CANreceiveMessage@msg+1,w,c
 18419  012A30  22DA               	addwfc	fsr2h,f,c
 18420  012A32  A662               	btfss	3938,3,c	;volatile
 18421  012A34  D002               	goto	i2u1074_40
 18422  012A36  0E01               	movlw	1
 18423  012A38  D001               	goto	i2u1074_46
 18424  012A3A                     i2u1074_40:
 18425  012A3A  0E00               	movlw	0
 18426  012A3C                     i2u1074_46:
 18427  012A3C  6EDF               	movwf	indf2,c
 18428                           
 18429                           ; BSR set to: 15
 18430                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 18431  012A3E  B662               	btfsc	3938,3,c	;volatile
 18432  012A40  D043               	goto	i2l8236
 18433                           
 18434                           ; BSR set to: 15
 18435                           ;inc\CANlib.h: 606: {
 18436                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 18437  012A42  CF61 F03F          	movff	3937,??_CANreceiveMessage	;volatile
 18438  012A46  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18439  012A48  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18440  012A4A  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18441  012A4C  0E03               	movlw	3
 18442  012A4E                     i2u1076_45:
 18443  012A4E  90D8               	bcf	status,0,c
 18444  012A50  363F               	rlcf	??_CANreceiveMessage,f,c
 18445  012A52  3640               	rlcf	??_CANreceiveMessage+1,f,c
 18446  012A54  3641               	rlcf	??_CANreceiveMessage+2,f,c
 18447  012A56  3642               	rlcf	??_CANreceiveMessage+3,f,c
 18448  012A58  2EE8               	decfsz	wreg,f,c
 18449  012A5A  D7F9               	goto	i2u1076_45
 18450  012A5C  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18451  012A60  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18452  012A64  C03F  FFDE         	movff	??_CANreceiveMessage,postinc2
 18453  012A68  C040  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 18454  012A6C  C041  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 18455  012A70  C042  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 18456                           
 18457                           ; BSR set to: 15
 18458                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 18459  012A74  3862               	swapf	3938,w,c	;volatile
 18460  012A76  42E8               	rrncf	wreg,f,c
 18461  012A78  0B07               	andlw	7
 18462  012A7A  0B07               	andlw	7
 18463  012A7C  6E48               	movwf	CANreceiveMessage@tamp,c
 18464                           
 18465                           ; BSR set to: 15
 18466                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 18467  012A7E  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18468  012A82  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18469  012A86  CFDE F03F          	movff	postinc2,??_CANreceiveMessage
 18470  012A8A  CFDE F040          	movff	postinc2,??_CANreceiveMessage+1
 18471  012A8E  CFDE F041          	movff	postinc2,??_CANreceiveMessage+2
 18472  012A92  CFDE F042          	movff	postinc2,??_CANreceiveMessage+3
 18473  012A96  5048               	movf	CANreceiveMessage@tamp,w,c
 18474  012A98  243F               	addwf	??_CANreceiveMessage,w,c
 18475  012A9A  6E43               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 18476  012A9C  0E00               	movlw	0
 18477  012A9E  2040               	addwfc	??_CANreceiveMessage+1,w,c
 18478  012AA0  6E44               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 18479  012AA2  0E00               	movlw	0
 18480  012AA4  2041               	addwfc	??_CANreceiveMessage+2,w,c
 18481  012AA6  6E45               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 18482  012AA8  0E00               	movlw	0
 18483  012AAA  2042               	addwfc	??_CANreceiveMessage+3,w,c
 18484  012AAC  6E46               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 18485  012AAE  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18486  012AB2  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18487  012AB6  C043  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 18488  012ABA  C044  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 18489  012ABE  C045  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 18490  012AC2  C046  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 18491                           
 18492                           ;inc\CANlib.h: 610: }
 18493  012AC6  D088               	goto	i2l8262
 18494  012AC8                     i2l8236:
 18495                           
 18496                           ; BSR set to: 15
 18497                           ;inc\CANlib.h: 611: else
 18498                           ;inc\CANlib.h: 612: {
 18499                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 18500  012AC8  CF64 F03F          	movff	3940,??_CANreceiveMessage	;volatile
 18501  012ACC  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18502  012ACE  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18503  012AD0  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18504  012AD2  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18505  012AD6  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18506  012ADA  C03F  FFDE         	movff	??_CANreceiveMessage,postinc2
 18507  012ADE  C040  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 18508  012AE2  C041  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 18509  012AE6  C042  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 18510                           
 18511                           ; BSR set to: 15
 18512                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 18513  012AEA  CF63 F03F          	movff	3939,??_CANreceiveMessage	;volatile
 18514  012AEE  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18515  012AF0  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18516  012AF2  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18517  012AF4  C041  F042         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 18518  012AF8  C040  F041         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 18519  012AFC  C03F  F040         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 18520  012B00  6A3F               	clrf	??_CANreceiveMessage,c
 18521  012B02  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18522  012B06  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18523  012B0A  503F               	movf	??_CANreceiveMessage,w,c
 18524  012B0C  26DE               	addwf	postinc2,f,c
 18525  012B0E  5040               	movf	??_CANreceiveMessage+1,w,c
 18526  012B10  22DE               	addwfc	postinc2,f,c
 18527  012B12  5041               	movf	??_CANreceiveMessage+2,w,c
 18528  012B14  22DE               	addwfc	postinc2,f,c
 18529  012B16  5042               	movf	??_CANreceiveMessage+3,w,c
 18530  012B18  22DE               	addwfc	postinc2,f,c
 18531                           
 18532                           ; BSR set to: 15
 18533                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 18534  012B1A  A062               	btfss	3938,0,c	;volatile
 18535  012B1C  D00C               	goto	i2l8244
 18536                           
 18537                           ; BSR set to: 15
 18538                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 18539  012B1E  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18540  012B22  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18541  012B26  0E00               	movlw	0
 18542  012B28  12DE               	iorwf	postinc2,f,c
 18543  012B2A  0E00               	movlw	0
 18544  012B2C  12DE               	iorwf	postinc2,f,c
 18545  012B2E  0E01               	movlw	1
 18546  012B30  12DE               	iorwf	postinc2,f,c
 18547  012B32  0E00               	movlw	0
 18548  012B34  12DE               	iorwf	postinc2,f,c
 18549  012B36                     i2l8244:
 18550                           
 18551                           ; BSR set to: 15
 18552                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 18553  012B36  A262               	btfss	3938,1,c	;volatile
 18554  012B38  D00C               	goto	i2l8248
 18555                           
 18556                           ; BSR set to: 15
 18557                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 18558  012B3A  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18559  012B3E  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18560  012B42  0E00               	movlw	0
 18561  012B44  12DE               	iorwf	postinc2,f,c
 18562  012B46  0E00               	movlw	0
 18563  012B48  12DE               	iorwf	postinc2,f,c
 18564  012B4A  0E02               	movlw	2
 18565  012B4C  12DE               	iorwf	postinc2,f,c
 18566  012B4E  0E00               	movlw	0
 18567  012B50  12DE               	iorwf	postinc2,f,c
 18568  012B52                     i2l8248:
 18569                           
 18570                           ; BSR set to: 15
 18571                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 18572  012B52  AA62               	btfss	3938,5,c	;volatile
 18573  012B54  D00C               	goto	i2l8252
 18574                           
 18575                           ; BSR set to: 15
 18576                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 18577  012B56  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18578  012B5A  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18579  012B5E  0E00               	movlw	0
 18580  012B60  12DE               	iorwf	postinc2,f,c
 18581  012B62  0E00               	movlw	0
 18582  012B64  12DE               	iorwf	postinc2,f,c
 18583  012B66  0E04               	movlw	4
 18584  012B68  12DE               	iorwf	postinc2,f,c
 18585  012B6A  0E00               	movlw	0
 18586  012B6C  12DE               	iorwf	postinc2,f,c
 18587  012B6E                     i2l8252:
 18588                           
 18589                           ; BSR set to: 15
 18590                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 18591  012B6E  AC62               	btfss	3938,6,c	;volatile
 18592  012B70  D00C               	goto	i2l8256
 18593                           
 18594                           ; BSR set to: 15
 18595                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 18596  012B72  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18597  012B76  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18598  012B7A  0E00               	movlw	0
 18599  012B7C  12DE               	iorwf	postinc2,f,c
 18600  012B7E  0E00               	movlw	0
 18601  012B80  12DE               	iorwf	postinc2,f,c
 18602  012B82  0E08               	movlw	8
 18603  012B84  12DE               	iorwf	postinc2,f,c
 18604  012B86  0E00               	movlw	0
 18605  012B88  12DE               	iorwf	postinc2,f,c
 18606  012B8A                     i2l8256:
 18607                           
 18608                           ; BSR set to: 15
 18609                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 18610  012B8A  AE62               	btfss	3938,7,c	;volatile
 18611  012B8C  D00C               	goto	i2l8260
 18612                           
 18613                           ; BSR set to: 15
 18614                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 18615  012B8E  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18616  012B92  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18617  012B96  0E00               	movlw	0
 18618  012B98  12DE               	iorwf	postinc2,f,c
 18619  012B9A  0E00               	movlw	0
 18620  012B9C  12DE               	iorwf	postinc2,f,c
 18621  012B9E  0E10               	movlw	16
 18622  012BA0  12DE               	iorwf	postinc2,f,c
 18623  012BA2  0E00               	movlw	0
 18624  012BA4  12DE               	iorwf	postinc2,f,c
 18625  012BA6                     i2l8260:
 18626                           
 18627                           ; BSR set to: 15
 18628                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 18629  012BA6  CF61 F03F          	movff	3937,??_CANreceiveMessage	;volatile
 18630  012BAA  6A40               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18631  012BAC  6A41               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18632  012BAE  6A42               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18633  012BB0  0E15               	movlw	21
 18634  012BB2                     i2u1082_45:
 18635  012BB2  90D8               	bcf	status,0,c
 18636  012BB4  363F               	rlcf	??_CANreceiveMessage,f,c
 18637  012BB6  3640               	rlcf	??_CANreceiveMessage+1,f,c
 18638  012BB8  3641               	rlcf	??_CANreceiveMessage+2,f,c
 18639  012BBA  3642               	rlcf	??_CANreceiveMessage+3,f,c
 18640  012BBC  2EE8               	decfsz	wreg,f,c
 18641  012BBE  D7F9               	goto	i2u1082_45
 18642  012BC0  C03D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18643  012BC4  C03E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18644  012BC8  503F               	movf	??_CANreceiveMessage,w,c
 18645  012BCA  12DE               	iorwf	postinc2,f,c
 18646  012BCC  5040               	movf	??_CANreceiveMessage+1,w,c
 18647  012BCE  12DE               	iorwf	postinc2,f,c
 18648  012BD0  5041               	movf	??_CANreceiveMessage+2,w,c
 18649  012BD2  12DE               	iorwf	postinc2,f,c
 18650  012BD4  5042               	movf	??_CANreceiveMessage+3,w,c
 18651  012BD6  12DE               	iorwf	postinc2,f,c
 18652  012BD8                     i2l8262:
 18653                           
 18654                           ; BSR set to: 15
 18655                           ;inc\CANlib.h: 629: }
 18656                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 18657  012BD8  9E60               	bcf	3936,7,c	;volatile
 18658                           
 18659                           ; BSR set to: 15
 18660                           ;inc\CANlib.h: 632: return (error);
 18661                           ;	Return value of _CANreceiveMessage is never used
 18662  012BDA  0012               	return	
 18663  012BDC                     __end_of_CANreceiveMessage:
 18664                           	opt stack 0
 18665                           pclatu	equ	0xFFB
 18666                           pclath	equ	0xFFA
 18667                           tblptru	equ	0xFF8
 18668                           tblptrh	equ	0xFF7
 18669                           tblptrl	equ	0xFF6
 18670                           tablat	equ	0xFF5
 18671                           prodh	equ	0xFF4
 18672                           prodl	equ	0xFF3
 18673                           intcon	equ	0xFF2
 18674                           postinc0	equ	0xFEE
 18675                           fsr0h	equ	0xFEA
 18676                           fsr0l	equ	0xFE9
 18677                           wreg	equ	0xFE8
 18678                           indf1	equ	0xFE7
 18679                           fsr1h	equ	0xFE2
 18680                           fsr1l	equ	0xFE1
 18681                           bsr	equ	0xFE0
 18682                           indf2	equ	0xFDF
 18683                           postinc2	equ	0xFDE
 18684                           postdec2	equ	0xFDD
 18685                           fsr2h	equ	0xFDA
 18686                           fsr2l	equ	0xFD9
 18687                           status	equ	0xFD8
 18688                           
 18689 ;; *************** function _CANisRxReady *****************
 18690 ;; Defined at:
 18691 ;;		line 1163 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;		None
 18694 ;; Auto vars:     Size  Location     Type
 18695 ;;		None
 18696 ;; Return value:  Size  Location     Type
 18697 ;;                  1    wreg      unsigned char 
 18698 ;; Registers used:
 18699 ;;		wreg, status,2
 18700 ;; Tracked objects:
 18701 ;;		On entry : 0/0
 18702 ;;		On exit  : 0/0
 18703 ;;		Unchanged: 0/0
 18704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18709 ;;Total ram usage:        1 bytes
 18710 ;; Hardware stack levels used:    1
 18711 ;; This function calls:
 18712 ;;		Nothing
 18713 ;; This function is called by:
 18714 ;;		_ISR_alta
 18715 ;; This function uses a non-reentrant model
 18716 ;;
 18717                           
 18718                           	psect	text48
 18719  015A72                     __ptext48:
 18720                           	opt stack 0
 18721  015A72                     _CANisRxReady:
 18722                           	opt stack 21
 18723                           
 18724                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 18725                           
 18726                           ; BSR set to: 15
 18727                           ;incstack = 0
 18728  015A72  0E01               	movlw	1
 18729  015A74  6E3D               	movwf	_CANisRxReady$3229,c
 18730  015A76  BE60               	btfsc	3936,7,c	;volatile
 18731  015A78  D005               	goto	i2l569
 18732  015A7A  010F               	movlb	15	; () banked
 18733  015A7C  BF50               	btfsc	80,7,b	;volatile
 18734  015A7E  D002               	goto	i2l569
 18735                           
 18736                           ; BSR set to: 15
 18737  015A80  0E00               	movlw	0
 18738  015A82  6E3D               	movwf	_CANisRxReady$3229,c
 18739  015A84                     i2l569:
 18740  015A84  503D               	movf	_CANisRxReady$3229,w,c
 18741  015A86  0012               	return	
 18742  015A88                     __end_of_CANisRxReady:
 18743                           	opt stack 0
 18744                           pclatu	equ	0xFFB
 18745                           pclath	equ	0xFFA
 18746                           tblptru	equ	0xFF8
 18747                           tblptrh	equ	0xFF7
 18748                           tblptrl	equ	0xFF6
 18749                           tablat	equ	0xFF5
 18750                           prodh	equ	0xFF4
 18751                           prodl	equ	0xFF3
 18752                           intcon	equ	0xFF2
 18753                           postinc0	equ	0xFEE
 18754                           fsr0h	equ	0xFEA
 18755                           fsr0l	equ	0xFE9
 18756                           wreg	equ	0xFE8
 18757                           indf1	equ	0xFE7
 18758                           fsr1h	equ	0xFE2
 18759                           fsr1l	equ	0xFE1
 18760                           bsr	equ	0xFE0
 18761                           indf2	equ	0xFDF
 18762                           postinc2	equ	0xFDE
 18763                           postdec2	equ	0xFDD
 18764                           fsr2h	equ	0xFDA
 18765                           fsr2l	equ	0xFD9
 18766                           status	equ	0xFD8
 18767                           pclatu	equ	0xFFB
 18768                           pclath	equ	0xFFA
 18769                           tblptru	equ	0xFF8
 18770                           tblptrh	equ	0xFF7
 18771                           tblptrl	equ	0xFF6
 18772                           tablat	equ	0xFF5
 18773                           prodh	equ	0xFF4
 18774                           prodl	equ	0xFF3
 18775                           intcon	equ	0xFF2
 18776                           postinc0	equ	0xFEE
 18777                           fsr0h	equ	0xFEA
 18778                           fsr0l	equ	0xFE9
 18779                           wreg	equ	0xFE8
 18780                           indf1	equ	0xFE7
 18781                           fsr1h	equ	0xFE2
 18782                           fsr1l	equ	0xFE1
 18783                           bsr	equ	0xFE0
 18784                           indf2	equ	0xFDF
 18785                           postinc2	equ	0xFDE
 18786                           postdec2	equ	0xFDD
 18787                           fsr2h	equ	0xFDA
 18788                           fsr2l	equ	0xFD9
 18789                           status	equ	0xFD8
 18790                           
 18791                           	psect	rparam
 18792  0000                     pclatu	equ	0xFFB
 18793                           pclath	equ	0xFFA
 18794                           tblptru	equ	0xFF8
 18795                           tblptrh	equ	0xFF7
 18796                           tblptrl	equ	0xFF6
 18797                           tablat	equ	0xFF5
 18798                           prodh	equ	0xFF4
 18799                           prodl	equ	0xFF3
 18800                           intcon	equ	0xFF2
 18801                           postinc0	equ	0xFEE
 18802                           fsr0h	equ	0xFEA
 18803                           fsr0l	equ	0xFE9
 18804                           wreg	equ	0xFE8
 18805                           indf1	equ	0xFE7
 18806                           fsr1h	equ	0xFE2
 18807                           fsr1l	equ	0xFE1
 18808                           bsr	equ	0xFE0
 18809                           indf2	equ	0xFDF
 18810                           postinc2	equ	0xFDE
 18811                           postdec2	equ	0xFDD
 18812                           fsr2h	equ	0xFDA
 18813                           fsr2l	equ	0xFD9
 18814                           status	equ	0xFD8
 18815                           
 18816                           	psect	temp
 18817  00004E                     btemp:
 18818                           	opt stack 0
 18819  00004E                     	ds	1
 18820  0000                     int$flags	set	btemp
 18821                           pclatu	equ	0xFFB
 18822                           pclath	equ	0xFFA
 18823                           tblptru	equ	0xFF8
 18824                           tblptrh	equ	0xFF7
 18825                           tblptrl	equ	0xFF6
 18826                           tablat	equ	0xFF5
 18827                           prodh	equ	0xFF4
 18828                           prodl	equ	0xFF3
 18829                           intcon	equ	0xFF2
 18830                           postinc0	equ	0xFEE
 18831                           fsr0h	equ	0xFEA
 18832                           fsr0l	equ	0xFE9
 18833                           wreg	equ	0xFE8
 18834                           indf1	equ	0xFE7
 18835                           fsr1h	equ	0xFE2
 18836                           fsr1l	equ	0xFE1
 18837                           bsr	equ	0xFE0
 18838                           indf2	equ	0xFDF
 18839                           postinc2	equ	0xFDE
 18840                           postdec2	equ	0xFDD
 18841                           fsr2h	equ	0xFDA
 18842                           fsr2l	equ	0xFD9
 18843                           status	equ	0xFD8


Data Sizes:
    Strings     146
    Constant    144
    Data        1
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      77
    BANK0           160    105     142
    BANK1           256     33      45
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_14(CODE[14]), STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), 
		 -> STR_9(CODE[2]), STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 1
		 -> data_speed(BANK0[1]), data_steering(BANK0[1]), data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_interpreter->___xxtofl
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  245164
                                             25 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   64799
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             29 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             15 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             15 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  111159
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           _delay_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41239
                                             95 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             54 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             54 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             29 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             21 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             15 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             15 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             15 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             15 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             63 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             87 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             67 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             15 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             15 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             15 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9750
                                             32 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                             32 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9531
                                             27 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28720
                                             29 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9150
                                             27 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9011
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9042
                                             27 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9011
                                             23 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1495
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1495
                                             21 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             15 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0     861
                                             29 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             15 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    2827
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2803
                                             15 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    4982
                                              0 BANK0     15    15      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (10) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (10) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1594
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
     ___xxtofl
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
     _delay_ms
       ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      2D       7       17.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      8E       5       88.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     21      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     108      20        0.0%
DATA                 0      0     108       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Mar 26 21:30:15 2016

                  ___fldiv@aexp 0087                    ___fldiv@bexp 0086       __size_of_delay_set_quartz 000A  
          __end_of_CANSetFilter 0B06                    ?_LCD_Handler 002C                    ___fldiv@sign 007B  
                  ___awdiv@sign 007A                              _id 000F                              bsr 000FE0  
           ___wmul@multiplicand 0071                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000                    __CFG_CP4$OFF 000000                    __CFG_CP5$OFF 000000  
                           l401 18B8                             l410 1A72                             l402 18BC  
                           l411 1A76                             l403 19B4                             l412 1A82  
                           l404 1944                             l500 075A                             l405 194E  
                           l501 0766                             l406 1958                             l510 0872  
                           l407 1962                             l511 0876                             l520 0982  
                           l512 0882                             l504 0842                             l440 3EEC  
                           l521 098E                             l505 0846                             l441 3EF0  
                           l530 0A9A                             l522 0992                             l506 0852  
                           l442 3EFC                             l371 161E                             l531 0A9E  
                           l523 099E                             l515 095E                             l507 0856  
                           l451 4004                             l443 3F00                             l372 13B0  
                           l532 0AAA                             l516 0962                             l508 0862  
                           l452 4008                             l444 3F0C                             l381 156A  
                           l373 13B4                             l533 0AAE                             l517 096E  
                           l509 0866                             l453 4014                             l445 3F10  
                           l390 16C0                             l382 156E                             l374 14AC  
                           l534 0ABA                             l526 0A7A                             l518 0972  
                           l454 4018                             l446 3F1C                             l366 4610  
                           l391 16CA                             l383 157A                             l375 143C  
                           l527 0A7E                             l519 097E                             l471 04F0  
                           l455 4024                             l447 3F20                             l367 461A  
                           l392 16D4                             l376 1446                             l800 5746  
                           l528 0A8A                             l472 04F4                             l456 4028  
                           l448 3F2C                             l393 16DE                             l377 1450  
                           l529 0A8E                             l473 0500                             l457 4034  
                           l386 18A2                             l378 145A                             l490 064A  
                           l482 060A                             l474 0504                             l458 4038  
                           l387 1634                             l483 060E                             l475 0510  
                           l459 4044                             l564 59FA                             l396 17EE  
                           l388 1638                             l484 061A                             l476 0514  
                           l397 17F2                             l389 1730                             l493 0726  
                           l485 061E                             l477 0520                             l398 17FE  
                           l494 072A                             l486 062A                             l478 0524  
                           l495 0736                             l487 062E                             l479 0530  
                           l496 073A                             l488 063A                             l577 5878  
                           l497 0746                             l489 063E                             l498 074A  
                           l499 0756                             l749 36B0                             l793 5A48  
                           l884 10FA                             l798 5744            ??_PWR_Button_Polling 006F  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 007B  
                           _dir 00E9                             _msg 001C                             _str 0121  
                  ___awmod@sign 0074                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 008A                    ___flmul@bexp 008F                    ___flmul@sign 0089  
                  ___flmul@temp 0094                    ___flmul@prod 0090                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A8                    __CFG_WDT$OFF 000000  
                          l1109 4BBE                            l1213 48A6                            l1302 54CE  
                          l1206 47E2                            l1119 49F8                            l1207 4826  
                          l1312 560A                            l1413 2F30                            l1422 2FC4  
                          l1511 447C                            l1504 43D0                            l1452 3B60  
                          l1461 3B98                            l1518 44D8                            l1519 44F0  
                          l1463 3C06                            l1455 3B08                            l1482 3138  
                          l1491 3442                            l1396 2DBC                            l5020 057A  
                          l1397 2DB0                            l1398 2D7C                            l5014 0534  
                          l1489 33D4                            l5122 08CC                            l1499 34E6  
                          l5116 0886                            l5150 09A2                            l5054 0694  
                          l5048 064E                            l5082 076A                            l6212 3B5C  
                          l5156 09E8                            l6206 3B14                            l7102 2C68  
                          l6224 3BAC                            l6144 3974                            l7120 2CC0  
                          l7112 2C96                            l8000 0DB0                            l5184 0ABE  
                          l5088 07B0                            l5600 4608                            l6250 3C98  
                          l6234 3C00                            l6218 3B82                            l6138 3950  
                          l8002 0DC6                            l5602 461E                            l6260 3CCE  
                          l6252 3CBA                            l6244 3C56                            l6180 3A30  
                          l6164 39D2                            l6148 397E                            l7220 2F78  
                          l7108 2C8C                            l8012 0E6A                            l8004 0E02  
                          l6158 39AE                            l7214 2F62                            l7230 2F98  
                          l7206 2F10                            l7150 2CFC                            l7310 314C  
                          l8110 12E0                            l8102 12AC                            l8030 0F7E  
                          l8006 0E18                            l4814 3E60                            l5606 4626  
                          l7056 586A                            l6248 3C84                            l6168 39DC  
                          l7240 2FBE                            l7224 2F84                            l7232 2F9E  
                          l7304 3120                            l8032 0F84                            l8016 0E9C  
                          l8104 12BA                            l4840 3F30                            l5608 466A  
                          l5722 16E8                            l6258 3CCA                            l7250 301A  
                          l7162 2D90                            l7314 3160                            l7306 3126  
                          l8122 1364                            l8114 1308                            l8050 1004  
                          l8026 0F06                            l4914 0176                            l6508 56B2  
                          l6524 573A                            l6188 3A5E                            l7164 2D96  
                          l7084 2C1E                            l7412 5382                            l8060 10AE  
                          l8044 0FD0                            l8124 136A                            l4780 5A64  
                          l4932 0230                            l5742 17E2                            l5646 1464  
                          l6518 56FA                            l6198 3ADC                            l7270 3072  
                          l7262 305A                            l7254 302C                            l7078 2BFA  
                          l8118 1338                            l8126 138C                            l4950 02EA  
                          l4846 3F76                            l5824 1A86                            l5672 157E  
                          l7264 305E                            l7192 2E2E                            l7168 2DA0  
                          l7096 2C54                            l7088 2C28                            l7424 53B6  
                          l7440 5406                            l7280 30A2                            l8080 112E  
                          l8072 10FE                            l8048 0FFC                            l4872 4048  
                          l5818 1A66                            l5666 155E                            l7258 304E  
                          l7186 2E1E                            l7178 2DE0                            l7426 53C2  
                          l7418 5398                            l7362 33E8                            l7290 30DE  
                          l8066 10C8                            l8058 10A0                            l5748 1802  
                          l7188 2E24                            l7196 2E40                            l7620 485C  
                          l7444 541A                            l7436 53F8                            l7428 53C8  
                          l7460 550C                            l7372 343C                            l7356 33BE  
                          l7524 432E                            l7516 4236                            l8084 1190  
                          l8068 10DC                            l8420 4F48                            l7630 488C  
                          l7382 3492                            l7286 30C6                            l8094 1284  
                          l4798 3DAA                            l7712 49A6                            l7704 4906  
                          l7800 559E                            l7640 4A6E                            l7632 489C  
                          l7624 4870                            l7480 5578                            l7472 5556  
                          l7464 5520                            l7456 54FC                            l7288 30CC  
                          l7544 2418                            l8096 1292                            l8416 4F26  
                          l4968 03A4                            l4896 00BE                            l7802 55AE  
                          l7466 552C                            l7386 34B8                            l7298 30FC  
                          l7562 269E                            l7538 2346                            l8418 4F38  
                          l4986 045E                            l7708 4954                            l7804 55B4  
                          l7660 4AE8                            l7468 5532                            l7476 5564  
                          l7396 3506                            l7388 34CC                            l7556 25CC  
                          l7548 244A                            l5798 196C                            l7830 445E  
                          l8390 527A                            l7718 4A44                            l7726 58AC  
                          l7646 4A94                            l7590 478E                            l7398 3510  
                          l7574 59AC                            l7824 4408                            l8368 51DA  
                          l7752 504C                            l7736 4FDE                            l7808 55F8  
                          l7680 4B74                            l7584 4754                            l7850 4542  
                          l7826 4410                            l7818 43E0                            l8378 51E8  
                          l7770 50B2                            l7762 507C                            l7690 4BA4  
                          l7836 44BA                            l7828 4420                            l7860 512E  
                          l7764 508C                            l7756 5060                            l7780 5452  
                          l7692 4BB4                            l7684 4B88                            l7668 4B3C  
                          l7940 0B66                            l7932 0B30                            l8820 36A0  
                          l7838 44CA                            l7862 5160                            l7766 5096  
                          l7782 5462                            l7950 0BDA                            l7926 0B16  
                          l8830 36CA                            l8814 3688                            l7856 50CA  
                          l7864 5192                            l7872 5910                            l7880 59CC  
                          l7792 54BC                            l7784 5468                            l7944 0BB0  
                          l8840 37B2                            l7858 50FC                            l7962 0C24  
                          l7954 0BE0                            l7946 0BCA                            l8850 3840  
                          l8818 369A                            l7868 58F6                            l7876 59B8  
                          l7972 0C76                            l7956 0C0A                            l8844 3836  
                          l8828 36BE                            l8856 38B8                            l7996 0D7E  
                          l7988 0CFA                            l8796 3582                            l8788 3552  
                          STR_1 FFAC                            STR_2 FF82                            STR_3 FF6D  
                          STR_4 FFAC                            STR_5 FF97                            STR_6 FFCF  
                          STR_7 FFF9                            STR_8 FFEF                            STR_9 FFFD  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u5305 3D86  
                          u5330 3DDC                            u7020 1708                            u6220 0ADE  
                          u6140 09C2                            u6060 08A6                            u5500 4068  
                          u5420 3F50                            u7030 1754                            u5335 3DD0  
                          u7025 16FC                            u6225 0AD2                            u6145 09B6  
                          u6065 089A                            u5505 405C                            u5425 3F44  
                          u5345 3E3C                            u5610 01AC                            u5530 003A  
                          u5290 3D26                            u7035 1748                            u8100 5A56  
                          u7045 17B4                            u7150 198C                            u5615 01A0  
                          u5535 002E                            u5295 3D1A                            u7160 19D8  
                          u5705 0380                            u5625 020C                            u5545 009A  
                          u5730 03DA                            u5650 0266                            u5570 00F2  
                          u7155 1980                            u8115 5A58                            u9100 2D46  
                          u5900 066E                            u5820 0554                            u7165 19CC  
                          u9005 5844                            u9006 5846                            u9110 2D5E  
                          u7175 1A38                            u5735 03CE                            u5655 025A  
                          u5575 00E6                            u8160 5768                            u9120 2D60  
                          u5905 0662                            u5825 0548                            u5745 043A  
                          u5665 02C6                            u5585 0152                            u5690 0320  
                          u6900 14D0                            u8166 576A                            u5695 0314  
                          u6905 14C4                            u6915 1530                            u5980 078A  
                          u5985 077E                            u6890 1484                            u7770 3C6A  
                          u6895 1478                            u9560 34A6                            u9480 3360  
                          u9801 4730                            u9821 476A                            u9485 3354  
                          u8975 5820                            u8976 5822                            u8985 582C  
                          u8986 582E                            u8995 5838                            u8996 583A  
           __size_of_CANSetMask 039E                            _data 002B                            _main 352A  
     __size_of_LCD_send_command 003A                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 004E                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00C0                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0080              __size_of_LCD_clear 0032                __end_of_CAN_Send 5734  
                  _sprintf$4193 0100                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 5A22                _CANOperationMode 5A5C         __size_of_LCD_initialize 016E  
    __size_of_CANreceiveMessage 050C                   ___fltol@sign1 00A7                 __end_of___fladd 3084  
                         ?_main 002C                 __end_of___fldiv 3CF2                 __end_of___awdiv 5424  
               __end_of___flneg 58BE                           STR_10 FFDB                           STR_11 FFF4  
                         STR_12 FFAC                           STR_13 FFE7                           STR_14 FFC1  
               __end_of___awmod 5582                 __end_of___flmul 352A                 __end_of___flsub 57D0  
               __end_of___fltol 50C4                 __end_of___lldiv 54E0                           u10030 4FFE  
                         u10035 4FF2                 ___awdiv@divisor 0077                 __end_of___llmod 561C  
                         u10490 10F2                           u11650 38A4                           u11570 3656  
                         u11660 391C                           u11580 366E                           _T3CON 000FB1  
                         u11586 3670                           u11677 586C                           i2l401 1F9A  
                         i2l410 2112                           i2l402 1F9E                           i2l411 2116  
                         i2l403 206E                           i2l412 2120                           i2l404 200C  
                         i1l740 0078                           i2l405 2014                           i2l406 201C  
                         i2l407 2024                           i2l418 2968                           i2l371 1D56  
                         i2l372 1B3A                           i2l381 1CB2                           i2l373 1B3E  
                         i2l390 1DDC                           i2l382 1CB6                           i2l374 1C0E  
                         i2l391 1DE4                           i2l383 1CC0                           i2l375 1BAC  
                         i2l392 1DEC                           i2l376 1BB4                           i2l393 1DF4  
                         i2l377 1BBC                           i2l386 1F86                           i2l378 1BC4  
                         i2l387 1D6A                           i2l564 5A3C                           i2l396 1EE2  
                         i2l388 1D6E                           i2l397 1EE6                           i2l389 1E3E  
                         i2l398 1EF0                           i2l736 4E4E                           i2l569 5A84  
               ___awdiv@counter 0079                           _TMR3H 000FB3                           _TMR3L 000FB2  
             _CANisRxReady$3229 003D                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                   __CFG_WRT4$OFF 000000  
            __size_of_ISR_bassa 00A8                   __CFG_WRT5$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000              CANInitialize@flags 0081  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                  __CFG_EBTR4$OFF 000000  
              __end_of_ISR_alta 4E8A                  __CFG_EBTR5$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers FF6D                           _scale 21B6                 __end_of_isdigit 59B6  
                __pbitbssCOMRAM 0268            __end_of_CANisRxReady 5A88                           tablat 000FF5  
          __end_of_CANisTxReady 5A00                           status 000FD8                 __end_of_sprintf 139A  
           __size_of_LCD_cursor 0032                 __initialization 57D0                    __end_of_main 3932  
 __size_of_board_initialization 00D8                   _LCD_goto_line 50C4               ?_Joystick_Polling 002C  
            ??_Joystick_Polling 006F               ?_LCD_write_string 0080                          ??_main 0119  
     __size_ofi2_CANsendMessage 0690                   __activetblptr 000003                  _JoystickValues 00DD  
            ??_LCD_write_string 0082            __size_of__tdiv_to_l_ 019E               _CANisTxReady$3227 006F  
      __size_of_CAN_interpreter 00DE               __end_of_LCD_clear 598C           i2CANsendMessage@flags 0044  
        LCD_write_string@buffer 0080                          _ADCON1 000FC1                          _CANCON 000F6F  
              ___llmod@dividend 006F                          ?_scale 0096                          _ADRESH 000FC4  
              ___awdiv@dividend 0075                 __CFG_BBSIZ$1024 000000                          i2l8200 2962  
                        i2l8260 2BA6                          i2l8252 2B6E                          i2l8244 2B36  
                        i2l8236 2AC8                          i2l8262 2BD8                          i2l8190 28F4  
                        i2l8182 28B8                          i2l8174 2848                          i2l8256 2B8A  
                        i2l8248 2B52                          i2l8194 2912                          i2l8186 28D6  
                        i2l8198 2930                          i2l8542 1DFC                          i2l8618 202C  
                        i2l8562 1ED8                          i2l8466 1BCC                          i2l8644 2124  
                        i2l8492 1CC4                          i2l8732 4D76                          i2l8638 2108  
                        i2l8486 1CA8                          i2l8568 1EF4                          i2l8744 4DAE  
                        i2l8754 4DE6                          i2l8738 4D96                          i2l8764 4E12  
                        i2l8748 4DB8                          i2l8774 4E46                          _RXB0D0 000F66  
                        _RXB0D1 000F67                          _RXB0D2 000F68                          _RXB0D3 000F69  
                        _RXB0D4 000F6A                          _RXB1D0 000F56                          _RXB0D5 000F6B  
                        _RXB1D1 000F57                          _RXB0D6 000F6C                          _RXB1D2 000F58  
                        _RXB0D7 000F6D                          _RXB1D3 000F59                          _RXB1D4 000F5A  
                        _RXB1D5 000F5B                          _RXB1D6 000F5C                          _RXB1D7 000F5D  
                        _TXB0D0 000F46                          _TXB0D1 000F47                          _TXB0D2 000F48  
                        _TXB0D3 000F49                          _TXB1D0 000F36                          _TXB0D4 000F4A  
                        _TXB1D1 000F37                          _TXB0D5 000F4B                          _TXB1D2 000F38  
                        _TXB0D6 000F4C                          _TXB1D3 000F39                          _TXB0D7 000F4D  
                        _TXB2D0 000F26                          _TXB1D4 000F3A                          _TXB2D1 000F27  
                        _TXB1D5 000F3B                          _TXB2D2 000F28                          _TXB1D6 000F3C  
                        _TXB2D3 000F29                          _TXB1D7 000F3D                          _TXB2D4 000F2A  
                        _TXB2D5 000F2B                          _TXB2D6 000F2C                          _TXB2D7 000F2D  
            CANsendMessage@data 0073              CANsendMessage@tamp 007B                __end_of___xxtofl 4554  
               _switch_position 00EA                __end_of_delay_ms 5886           __size_of_CANSetFilter 0B06  
                __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0                __end_of__powers_ FF45  
                    _MotoreFlag 0269                  ?_LCD_goto_line 002C                          ___flge 48B8  
                     ??___fladd 00AB                _delay_set_quartz 5A88                          ___wmul 58BE  
                     ??___fldiv 0077                       ??___awdiv 0079                       ??___flneg 0073  
                __CFG_STVREN$ON 000000                       ??___awmod 0073                       ??___flmul 0085  
                     ??___flsub 00BF                       ??___fltol 00A3                       ??___lldiv 0077  
                     ??___llmod 0077                    ??_CANSetMask 0074         __size_of_LCD_write_char 0096  
                        _fround 4090  LCD_initialize@quartz_frequency 007D                          clear_0 57D6  
                        clear_1 57E2                          clear_2 57F0                ___awdiv@quotient 007B  
               ___awmod@divisor 0071            __size_of_LCD_Handler 012E                 ___awmod@counter 0073  
               __CFG_BOREN$BOHW 000000               _JoystickConstants 00C9                       ??_isdigit 006F  
                  __mediumconst FEDC                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ?_CAN_Send 002C                       ??_sprintf 00C7  
                  _CANSetFilter 0000                      ___flge@ff1 006F                      ___flge@ff2 0073  
                  ___xxtofl@arg 0079                    ___xxtofl@exp 0078                    ___xxtofl@val 006F  
                    __accesstop 0060         __end_of__initialization 5808              __end_of_CANSetMask 4090  
               __CFG_PBADEN$OFF 000000                      _SterzoFlag 026B                      ___flneg@f1 006F  
              _LCD_send_command 5812                   ___rparam_used 000001                      ___fltol@f1 009F  
                __pcstackCOMRAM 002C                    __pidataBANK0 5A92                       ?_ISR_alta 002C  
                 __end_of_scale 26D0                  _LCD_initialize 4BD0               _LCD_write_message 58F4  
         CANSetFilter@numBuffer 0078              ?_LCD_write_message 0080                      __div_to_l_ 4A48  
                  ??_LCD_cursor 007C                   _newMessageCan 026C                    _actual_speed 0007  
         __size_of_CANisRxReady 0016           __size_of_CANisTxReady 0024                      ??_CAN_Send 007F  
               __div_to_l_@exp1 007C             ??_LCD_write_message 0082                 __div_to_l_@cntr 007B  
                       ??_scale 009A                 __div_to_l_@quot 0077        __end_of_CANOperationMode 5A72  
                    __pbssBANK0 00C9                      __pbssBANK1 0121               ??_CAN_interpreter 007D  
                    _data_brake 00E8         __size_of_CANsendMessage 078C                      _data_speed 00EB  
                 __div_to_l_@f1 006F                   __div_to_l_@f2 0073                 ??_LCD_goto_line 007B  
            __end_of_LCD_cursor 595A          __end_of_LCD_initialize 4D3E                         ?___flge 006F  
                       ?___wmul 006F                      ??_ISR_alta 0060       __end_of_LCD_write_message 5928  
             ?_LCD_enable_pulse 002C                         ?_fround 0096                    _CANisRxReady 5A72  
                       _CANSTAT 000F6E              ??_LCD_enable_pulse 0077                    _CANisTxReady 59DC  
                     ISR_alta@i 006E                         _BRGCON1 000F70                         _BRGCON2 000F71  
                       _BRGCON3 000F72                i2_CANsendMessage 1B26     __size_of_PWR_Button_Polling 001C  
                     ?___xxtofl 006F         __size_ofi2_CANisTxReady 001E          __size_of_CANInitialize 01C6  
              LCD_cursor@active 007C                       ?_delay_ms 0075                         _RXB0DLC 000F65  
                       _RXB1DLC 000F55                         _RXB0CON 000F60                         _RXB1CON 000F50  
                       _TXB0DLC 000F45                         _TXB1DLC 000F35                         _TXB2DLC 000F25  
           CANsendMessage@flags 0076                         _AbsFlag 0268               __end_of__npowers_ FF11  
                       __Hparam 0000                      _left_speed 00E1                      _scale$4192 009A  
                       __Lparam 0000                delay_ms@value_ms 0075                 ?_LCD_initialize 002C  
               __size_of___flge 0190                         ___fladd 2BDC                         ___fldiv 3932  
                       ___awdiv 5366                         ___flneg 5886                         ___awmod 54E0  
                       ___flmul 3084                         ___flsub 5788                         ___fltol 4FB8  
                       ___lldiv 5424                 __size_of___wmul 0036                  _LCD_write_char 561C  
                       ___llmod 5582            CANInitialize@propSeg 0086                         __pcinit 57D0  
                       _battery 00E7                 __size_of_fround 02F6                         __ramtop 0D00  
           LCD_write_char@value 007F                         __ptext0 352A                         __ptext1 528E  
                       __ptext2 4554                         __ptext3 3CF2                         __ptext4 0000  
                       __ptext5 5A5C                         __ptext6 5A40                         __ptext7 4E8A  
                       __ptext8 0B06                         __ptext9 21B6                     ?__div_to_l_ 006F  
              LCD_write_char@D0 007E                LCD_write_char@D1 007D                LCD_write_char@D2 007C  
              LCD_write_char@D3 007B                         _dpowers FF45                         _isdigit 598C  
                    ??___xxtofl 0073                ___awmod@dividend 006F                      ??_delay_ms 0077  
        CANreceiveMessage@error 0047    __end_of_board_initialization 5366       __size_of_Joystick_Polling 0054  
      __end_of_delay_set_quartz 5A92                         _sprintf 0B06                  __pintcode_body 4D3E  
                     _LCD_clear 595A            end_of_initialization 5808       __size_of_LCD_write_string 0026  
                       int_func 4D3E                       i2u1103_40 1BEA                       i2u1103_45 1BE0  
                     i2u1104_40 1C30                       i2u1104_45 1C26                       i2u1105_45 1C7C  
                     i2u1130_40 2090                       i2u1130_45 2086                       i2u1131_45 20DC  
                     i2u1116_40 1E1A                       i2u1116_45 1E10                       i2u1117_40 1E60  
                     i2u1117_45 1E56                       i2u1062_40 2788                       i2u1118_45 1EAC  
                     i2u1062_46 278A                       i2u1063_40 27B6                       i2u1071_45 293C  
                     i2u1063_46 27B8                       i2u1073_40 2A10                       i2u1129_40 204A  
                     i2u1065_45 27CC                       i2u1129_45 2040                       i2u1073_46 2A12  
                     i2u1074_40 2A3A                       i2u1082_45 2BB2                       i2u1074_46 2A3C  
                     i2u1076_45 2A4E                       i2u1149_40 4D94                       i2u1168_47 4E0C  
                 _CANInitialize 4554                 ___lldiv@divisor 0073              LCD_cursor@blinking 007B  
               ___lldiv@counter 007B          __end_of_LCD_write_char 56B2                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE      __size_of_LCD_write_message 0034  
                __tdiv_to_l_@f1 006F                  __tdiv_to_l_@f2 0073                       _ISR_bassa 0018  
                 ??__tdiv_to_l_ 0077                       _PORTAbits 000F80                       _PORTBbits 000F81  
                CANSetMask@mask 006F                       _PORTDbits 000F83                  CANSetMask@tamp 0079  
      __end_of_LCD_send_command 584C                  CANSetMask@type 0073                     ___fladd@grs 00B6  
                 ___xxtofl@sign 0077                     ___fldiv@grs 0082                     ___fldiv@rem 007C  
                    ?_LCD_clear 002C               __size_of_CAN_Send 0082         _clock_counter_reference 00DF  
                   ___flmul@grs 008B                  _CANsendMessage 139A                CANInitialize@BRP 0080  
              CANInitialize@SJW 007F                  ?_CANInitialize 007D             __size_of__div_to_l_ 0188  
       LCD_write_integer@F17272 0001                 ?_LCD_write_char 002C                   ??_LCD_Handler 00C9  
                __end_of___flge 4A48                      ?_ISR_bassa 002C                  __end_of___wmul 58F4  
             __size_of_ISR_alta 4E82                  __end_of_fround 4386                 _CAN_interpreter 51B0  
                i2_CANisTxReady 5A22             start_initialization 57D0             __end_of__tdiv_to_l_ 48B8  
           CANSetMask@numBuffer 0078          __end_of_CANsendMessage 1B26               ?_CANOperationMode 002C  
                 _data_steering 00EC      i2CANsendMessage@dataLength 0043            i2CANsendMessage@data 0041  
            ??_CANOperationMode 006F            i2CANsendMessage@tamp 0049                 ___llmod@divisor 0073  
      __end_ofi2_CANsendMessage 21B6      CANInitialize@FilterConfig1 0087      CANInitialize@FilterConfig2 0088  
               ___llmod@counter 0077                        ??___flge 0077            _board_initialization 528E  
                      ??___wmul 0073                     __pdataBANK0 00ED                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 009A          __end_ofi2_CANisTxReady 5A40                   sprintf@tmpval 010E  
                     ___fladd@a 00A7                       ___fladd@b 00A3          CANInitialize@phaseSeg1 007D  
        CANInitialize@phaseSeg2 007E                      fround@prec 00A2             __end_of_LCD_Handler 4FB8  
                     ___fldiv@a 0073                       ___fldiv@b 006F                       ___flmul@a 0081  
                     ___flmul@b 007D                     __pbssCOMRAM 0001                       ___flsub@a 00BB  
                     ___flsub@b 00B7                   __pcstackBANK0 0060                   __pcstackBANK1 0100  
                   _BRGCON2bits 000F71                     _BRGCON3bits 000F72                _Joystick_Polling 5734  
             __size_of___xxtofl 01CE       __size_of_LCD_enable_pulse 0022                    _isdigit$3771 0070  
    i2CANsendMessage@identifier 003D               __size_of_delay_ms 003A                     ??_LCD_clear 007B  
               ?_CANsendMessage 006F         LCD_write_message@buffer 0080                _LCD_write_string 59B6  
               ??_CANInitialize 0082                     sprintf@flag 0106                     sprintf@fval 0114  
                   sprintf@prec 0112                ??_LCD_initialize 007D              CANSetFilter@filter 006F  
     delay_set_quartz@frequency 006F              LCD_send_command@D0 0079              LCD_send_command@D1 0078  
            LCD_send_command@D2 0077              LCD_send_command@D3 007A           __end_of_LCD_goto_line 51B0  
         ?_board_initialization 002C                       __pintcode 0008                   __pmediumconst FEDC  
                      ?___fladd 00A3                        ?___fldiv 006F                        ?___awdiv 0075  
                      ?___flneg 006F                        ?___awmod 006F                        ?___flmul 007D  
       __end_of_CAN_interpreter 528E                        ?___flsub 00B7                        ?___fltol 009F  
                      ?___lldiv 006F                        ?___llmod 006F                       __npowers_ FEDD  
                   ??_ISR_bassa 002C                     __pintcodelo 0018      __end_of_PWR_Button_Polling 5A5C  
               ?i2_CANisTxReady 002C                     __tdiv_to_l_ 471A                    ??__div_to_l_ 0077  
                   _COMSTATbits 000F74                        ?_isdigit 002C                        _CAN_Send 56B2  
                      ?_sprintf 00BF                  __size_of_scale 051A               ?_delay_set_quartz 002C  
         CANreceiveMessage@tamp 0048              ??_delay_set_quartz 006F                  ___wmul@product 0073  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      _IPR2bits 000FA2    _delay_quartz_frequency_value 00ED                        _IPR3bits 000FA5  
                      _PIE2bits 000FA0                        _PIE3bits 000FA3              __end_of__div_to_l_ 4BD0  
                      _PIR2bits 000FA1                        _PIR3bits 000FA4                        _RXB0EIDH 000F63  
                      _RXB0EIDL 000F64                        _RXB1EIDH 000F53                       _pr_time_1 00D1  
                     _pr_time_2 00D5                        _RXB1EIDL 000F54                       _pr_time_3 00D9  
                     _pr_time_4 0013                       _set_speed 00E5                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _RXB0SIDH 000F61                        _RXB0SIDL 000F62  
                      _RXF0EIDH 000F02                        _RXB1SIDH 000F51                        _RXF0EIDL 000F03  
                      _RXB1SIDL 000F52                        _RXF1EIDH 000F06                        _RXF1EIDL 000F07  
                      _RXF2EIDH 000F0A                        _RXF2EIDL 000F0B                        _RXF3EIDH 000F0E  
                      _RXF3EIDL 000F0F                        _RXF4EIDH 000F12                        _RXF4EIDL 000F13  
                      _RXF5EIDH 000F16                        _RXF5EIDL 000F17                        _RXF0SIDH 000F00  
                      _RXF0SIDL 000F01                        _TXB0EIDH 000F43                        _RXF1SIDH 000F04  
                      _TXB0EIDL 000F44                        _RXF1SIDL 000F05                        _TXB1EIDH 000F33  
                      _RXF2SIDH 000F08                        _TXB1EIDL 000F34                        _RXF2SIDL 000F09  
                      _ISR_alta 0008                        _TXB2EIDH 000F23                        _RXF3SIDH 000F0C  
                      _TXB2EIDL 000F24                        _RXF3SIDL 000F0D                        _RXF4SIDH 000F10  
                      _RXF4SIDL 000F11                        _RXF5SIDH 000F14                        _RXF5SIDL 000F15  
                      _RXM0EIDH 000F1A                        _RXM0EIDL 000F1B                        _TXB0SIDH 000F41  
                      _RXM1EIDH 000F1E                        _TXB0SIDL 000F42                        _RXM1EIDL 000F1F  
                      _TXB1SIDH 000F31                        _TXB1SIDL 000F32                        _TXB2SIDH 000F21  
                      _TXB2SIDL 000F22                     _LCD_Handler 4E8A                        _RXM0SIDH 000F18  
                      _RXM0SIDL 000F19                        _RXM1SIDH 000F1C                        _RXM1SIDL 000F1D  
                      _RXERRCNT 000F75                        _TXERRCNT 000F76                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0               ___wmul@multiplier 006F                        _RTR_Flag 026A  
             ?_LCD_send_command 0077                _actual_speed_kmh 000B              ??_LCD_send_command 007A  
                 ?_CANSetFilter 006F                      _CANCONbits 000F6F                ??_LCD_write_char 007B  
             LCD_goto_line@line 007B                        __Hrparam 0000                    _RXB0SIDLbits 000F62  
        ??_board_initialization 0089                        __Lrparam 0000                    _RXB1SIDLbits 000F52  
              ?_CAN_interpreter 002C                __size_of___fladd 04A8                      _CANSetMask 3CF2  
              __size_of___fldiv 03C0                __size_of___awdiv 00BE                __size_of___flneg 0038  
              __size_of___awmod 00A2                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00BC                __size_of___llmod 009A  
                   _fround$4190 009E                     _fround$4191 009A                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 4386                    _RXF0SIDLbits 000F01  
              __size_of_isdigit 002A                        _delay_ms 584C                    _RXF1SIDLbits 000F05  
                ??_CANSetFilter 0074                _LCD_enable_pulse 5A00                        __ptext10 598C  
                      __ptext11 4090                        __ptext20 5788                        __ptext12 3084  
                      __ptext21 2BDC                        __ptext13 54E0                        __ptext30 5928  
                      __ptext22 5886                        __ptext14 5366                        __ptext31 595A  
                      __ptext23 48B8                        __ptext15 471A                        __ptext40 56B2  
                      __ptext32 50C4                        __ptext24 3932                        __ptext16 4A48  
                      __ptext41 139A                        __ptext33 5812                        __ptext25 59B6  
                      __ptext17 5582                        __ptext42 59DC                        __ptext34 5A00  
                      __ptext26 58F4                        __ptext18 5424                        __ptext35 584C  
                      __ptext27 561C                        __ptext19 4FB8                        __ptext36 58BE  
                      __ptext28 4BD0                        __ptext45 1B26                        __ptext37 5734  
                      __ptext29 5A88                        __ptext46 5A22                        __ptext38 51B0  
                      __ptext47 26D0                        __ptext39 4386                        __ptext48 5A72  
                  _RXF2SIDLbits 000F09                        __powers_ FF11                    _RXF3SIDLbits 000F0D  
              __size_of_sprintf 0894                    _RXF4SIDLbits 000F11                    _RXF5SIDLbits 000F15  
      CANsendMessage@dataLength 0075                   __size_of_main 0408               ?i2_CANsendMessage 003D  
          CANreceiveMessage@msg 003D             i2_CANisTxReady$3227 003D                    _TXB0SIDLbits 000F42  
             Joystick_Polling@i 0070              ??i2_CANsendMessage 0045                    _TXB1SIDLbits 000F32  
                      _wait_low 026E        __end_of_Joystick_Polling 5788                    _TXB2SIDLbits 000F22  
                      int$flags 004E       __size_of_CANOperationMode 0016                   ?_CANisRxReady 002C  
                 ?_CANisTxReady 002C        __end_of_LCD_write_string 59DC                     _RXB0DLCbits 000F65  
                   _RXB1DLCbits 000F55                    _RXM0SIDLbits 000F19                     _RXB0CONbits 000F60  
                    _LCD_cursor 5928                     _RXB1CONbits 000F50               _CANreceiveMessage 26D0  
                  _RXM1SIDLbits 000F1D                      _INTCONbits 000FF2                    _set_steering 001B  
              ??_CANsendMessage 0077              ?_CANreceiveMessage 003D                        isdigit@c 0071  
                      scale@scl 009E        CANsendMessage@identifier 006F                    _time_counter 0017  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 007F                       sprintf@sp 00BF                __tdiv_to_l_@cntr 007E  
              CANSetFilter@tamp 0079                __tdiv_to_l_@quot 007A                CANSetFilter@type 0073  
           ??_CANreceiveMessage 003F                ___lldiv@dividend 006F                     _TXB0DLCbits 000F45  
                   _right_speed 00E3                     _TXB1DLCbits 000F35                     _TXB0CONbits 000F40  
                   _TXB2DLCbits 000F25                     _TXB1CONbits 000F30                     _TXB2CONbits 000F20  
              ??i2_CANisTxReady 003D            CANOperationMode@mode 006F                  ??_CANisRxReady 003D  
                   ?_CANSetMask 006F                  ??_CANisTxReady 006F                    ?__tdiv_to_l_ 006F  
     __end_of_CANreceiveMessage 2BDC                        sprintf@c 0118                        sprintf@f 00C1  
              ___lldiv@quotient 0077                   ___fladd@signs 00B3              _PWR_Button_Polling 5A40  
                  ___fladd@aexp 00B4                    ___fladd@bexp 00B5           __end_of_CANInitialize 471A  
           ?_PWR_Button_Polling 002C                    _power_switch 026D  
