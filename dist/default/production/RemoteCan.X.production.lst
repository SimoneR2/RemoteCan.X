

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 07 21:45:07 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           	psect	idataBANK0
    84  0164BA                     __pidataBANK0:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _delay_quartz_frequency_value
    88  0164BA  10                 	db	16
    89                           
    90                           	psect	mediumconst
    91  00FDC8                     __pmediumconst:
    92                           	opt stack 0
    93  00FDC8  00                 	db	0
    94  00FDC9                     __npowers_:
    95                           	opt stack 0
    96  00FDC9  0000               	dw	0
    97  00FDCB  3F80               	dw	16256
    98  00FDCD  CCCD               	dw	52429
    99  00FDCF  3DCC               	dw	15820
   100  00FDD1  D70A               	dw	55050
   101  00FDD3  3C23               	dw	15395
   102  00FDD5  126F               	dw	4719
   103  00FDD7  3A83               	dw	14979
   104  00FDD9  B717               	dw	46871
   105  00FDDB  38D1               	dw	14545
   106  00FDDD  C5AC               	dw	50604
   107  00FDDF  3727               	dw	14119
   108  00FDE1  37BD               	dw	14269
   109  00FDE3  3586               	dw	13702
   110  00FDE5  BF95               	dw	49045
   111  00FDE7  33D6               	dw	13270
   112  00FDE9  CC77               	dw	52343
   113  00FDEB  322B               	dw	12843
   114  00FDED  705F               	dw	28767
   115  00FDEF  3089               	dw	12425
   116  00FDF1  E6FF               	dw	59135
   117  00FDF3  2EDB               	dw	11995
   118  00FDF5  E508               	dw	58632
   119  00FDF7  1E3C               	dw	7740
   120  00FDF9  4260               	dw	16992
   121  00FDFB  0DA2               	dw	3490
   122  00FDFD                     __end_of__npowers_:
   123                           	opt stack 0
   124  00FDFD                     __powers_:
   125                           	opt stack 0
   126  00FDFD  0000               	dw	0
   127  00FDFF  3F80               	dw	16256
   128  00FE01  0000               	dw	0
   129  00FE03  4120               	dw	16672
   130  00FE05  0000               	dw	0
   131  00FE07  42C8               	dw	17096
   132  00FE09  0000               	dw	0
   133  00FE0B  447A               	dw	17530
   134  00FE0D  4000               	dw	16384
   135  00FE0F  461C               	dw	17948
   136  00FE11  5000               	dw	20480
   137  00FE13  47C3               	dw	18371
   138  00FE15  2400               	dw	9216
   139  00FE17  4974               	dw	18804
   140  00FE19  9680               	dw	38528
   141  00FE1B  4B18               	dw	19224
   142  00FE1D  BC20               	dw	48160
   143  00FE1F  4CBE               	dw	19646
   144  00FE21  6B28               	dw	27432
   145  00FE23  4E6E               	dw	20078
   146  00FE25  02F9               	dw	761
   147  00FE27  5015               	dw	20501
   148  00FE29  78EC               	dw	30956
   149  00FE2B  60AD               	dw	24749
   150  00FE2D  F2CA               	dw	62154
   151  00FE2F  7149               	dw	29001
   152  00FE31                     __end_of__powers_:
   153                           	opt stack 0
   154  00FE31                     _dpowers:
   155                           	opt stack 0
   156  00FE31  0001               	dw	1
   157  00FE33  0000               	dw	0
   158  00FE35  000A               	dw	10
   159  00FE37  0000               	dw	0
   160  00FE39  0064               	dw	100
   161  00FE3B  0000               	dw	0
   162  00FE3D  03E8               	dw	1000
   163  00FE3F  0000               	dw	0
   164  00FE41  2710               	dw	10000
   165  00FE43  0000               	dw	0
   166  00FE45  86A0               	dw	34464
   167  00FE47  0001               	dw	1
   168  00FE49  4240               	dw	16960
   169  00FE4B  000F               	dw	15
   170  00FE4D  9680               	dw	38528
   171  00FE4F  0098               	dw	152
   172  00FE51  E100               	dw	57600
   173  00FE53  05F5               	dw	1525
   174  00FE55  CA00               	dw	51712
   175  00FE57  3B9A               	dw	15258
   176  00FE59                     __end_of_dpowers:
   177                           	opt stack 0
   178  0000                     _RXB1CON	set	3920
   179  0000                     _RXB1CONbits	set	3920
   180  0000                     _RXB1D0	set	3926
   181  0000                     _RXB1D1	set	3927
   182  0000                     _RXB1D2	set	3928
   183  0000                     _RXB1D3	set	3929
   184  0000                     _RXB1D4	set	3930
   185  0000                     _RXB1D5	set	3931
   186  0000                     _RXB1D6	set	3932
   187  0000                     _RXB1D7	set	3933
   188  0000                     _RXB1DLC	set	3925
   189  0000                     _RXB1DLCbits	set	3925
   190  0000                     _RXB1EIDH	set	3923
   191  0000                     _RXB1EIDL	set	3924
   192  0000                     _RXB1SIDH	set	3921
   193  0000                     _RXB1SIDL	set	3922
   194  0000                     _RXB1SIDLbits	set	3922
   195  0000                     _RXF0EIDH	set	3842
   196  0000                     _RXF0EIDL	set	3843
   197  0000                     _RXF0SIDH	set	3840
   198  0000                     _RXF0SIDL	set	3841
   199  0000                     _RXF0SIDLbits	set	3841
   200  0000                     _RXF1EIDH	set	3846
   201  0000                     _RXF1EIDL	set	3847
   202  0000                     _RXF1SIDH	set	3844
   203  0000                     _RXF1SIDL	set	3845
   204  0000                     _RXF1SIDLbits	set	3845
   205  0000                     _RXF2EIDH	set	3850
   206  0000                     _RXF2EIDL	set	3851
   207  0000                     _RXF2SIDH	set	3848
   208  0000                     _RXF2SIDL	set	3849
   209  0000                     _RXF2SIDLbits	set	3849
   210  0000                     _RXF3EIDH	set	3854
   211  0000                     _RXF3EIDL	set	3855
   212  0000                     _RXF3SIDH	set	3852
   213  0000                     _RXF3SIDL	set	3853
   214  0000                     _RXF3SIDLbits	set	3853
   215  0000                     _RXF4EIDH	set	3858
   216  0000                     _RXF4EIDL	set	3859
   217  0000                     _RXF4SIDH	set	3856
   218  0000                     _RXF4SIDL	set	3857
   219  0000                     _RXF4SIDLbits	set	3857
   220  0000                     _RXF5EIDH	set	3862
   221  0000                     _RXF5EIDL	set	3863
   222  0000                     _RXF5SIDH	set	3860
   223  0000                     _RXF5SIDL	set	3861
   224  0000                     _RXF5SIDLbits	set	3861
   225  0000                     _RXM0EIDH	set	3866
   226  0000                     _RXM0EIDL	set	3867
   227  0000                     _RXM0SIDH	set	3864
   228  0000                     _RXM0SIDL	set	3865
   229  0000                     _RXM0SIDLbits	set	3865
   230  0000                     _RXM1EIDH	set	3870
   231  0000                     _RXM1EIDL	set	3871
   232  0000                     _RXM1SIDH	set	3868
   233  0000                     _RXM1SIDL	set	3869
   234  0000                     _RXM1SIDLbits	set	3869
   235  0000                     _TXB0CONbits	set	3904
   236  0000                     _TXB0D0	set	3910
   237  0000                     _TXB0D1	set	3911
   238  0000                     _TXB0D2	set	3912
   239  0000                     _TXB0D3	set	3913
   240  0000                     _TXB0D4	set	3914
   241  0000                     _TXB0D5	set	3915
   242  0000                     _TXB0D6	set	3916
   243  0000                     _TXB0D7	set	3917
   244  0000                     _TXB0DLC	set	3909
   245  0000                     _TXB0DLCbits	set	3909
   246  0000                     _TXB0EIDH	set	3907
   247  0000                     _TXB0EIDL	set	3908
   248  0000                     _TXB0SIDH	set	3905
   249  0000                     _TXB0SIDL	set	3906
   250  0000                     _TXB0SIDLbits	set	3906
   251  0000                     _TXB1CONbits	set	3888
   252  0000                     _TXB1D0	set	3894
   253  0000                     _TXB1D1	set	3895
   254  0000                     _TXB1D2	set	3896
   255  0000                     _TXB1D3	set	3897
   256  0000                     _TXB1D4	set	3898
   257  0000                     _TXB1D5	set	3899
   258  0000                     _TXB1D6	set	3900
   259  0000                     _TXB1D7	set	3901
   260  0000                     _TXB1DLC	set	3893
   261  0000                     _TXB1DLCbits	set	3893
   262  0000                     _TXB1EIDH	set	3891
   263  0000                     _TXB1EIDL	set	3892
   264  0000                     _TXB1SIDH	set	3889
   265  0000                     _TXB1SIDL	set	3890
   266  0000                     _TXB1SIDLbits	set	3890
   267  0000                     _TXB2CONbits	set	3872
   268  0000                     _TXB2D0	set	3878
   269  0000                     _TXB2D1	set	3879
   270  0000                     _TXB2D2	set	3880
   271  0000                     _TXB2D3	set	3881
   272  0000                     _TXB2D4	set	3882
   273  0000                     _TXB2D5	set	3883
   274  0000                     _TXB2D6	set	3884
   275  0000                     _TXB2D7	set	3885
   276  0000                     _TXB2DLC	set	3877
   277  0000                     _TXB2DLCbits	set	3877
   278  0000                     _TXB2EIDH	set	3875
   279  0000                     _TXB2EIDL	set	3876
   280  0000                     _TXB2SIDH	set	3873
   281  0000                     _TXB2SIDL	set	3874
   282  0000                     _TXB2SIDLbits	set	3874
   283  0000                     _ADCON0bits	set	4034
   284  0000                     _ADCON1	set	4033
   285  0000                     _ADCON2bits	set	4032
   286  0000                     _ADRESH	set	4036
   287  0000                     _BRGCON1	set	3952
   288  0000                     _BRGCON2	set	3953
   289  0000                     _BRGCON2bits	set	3953
   290  0000                     _BRGCON3	set	3954
   291  0000                     _BRGCON3bits	set	3954
   292  0000                     _CANCON	set	3951
   293  0000                     _CANCONbits	set	3951
   294  0000                     _CANSTAT	set	3950
   295  0000                     _COMSTATbits	set	3956
   296  0000                     _INTCONbits	set	4082
   297  0000                     _IPR2bits	set	4002
   298  0000                     _IPR3bits	set	4005
   299  0000                     _LATA	set	3977
   300  0000                     _LATB	set	3978
   301  0000                     _LATC	set	3979
   302  0000                     _LATCbits	set	3979
   303  0000                     _LATD	set	3980
   304  0000                     _LATDbits	set	3980
   305  0000                     _LATE	set	3981
   306  0000                     _LATEbits	set	3981
   307  0000                     _PIE2bits	set	4000
   308  0000                     _PIE3bits	set	4003
   309  0000                     _PIR2bits	set	4001
   310  0000                     _PIR3bits	set	4004
   311  0000                     _PORTAbits	set	3968
   312  0000                     _PORTBbits	set	3969
   313  0000                     _PORTDbits	set	3971
   314  0000                     _RCONbits	set	4048
   315  0000                     _RXB0CON	set	3936
   316  0000                     _RXB0CONbits	set	3936
   317  0000                     _RXB0D0	set	3942
   318  0000                     _RXB0D1	set	3943
   319  0000                     _RXB0D2	set	3944
   320  0000                     _RXB0D3	set	3945
   321  0000                     _RXB0D4	set	3946
   322  0000                     _RXB0D5	set	3947
   323  0000                     _RXB0D6	set	3948
   324  0000                     _RXB0D7	set	3949
   325  0000                     _RXB0DLC	set	3941
   326  0000                     _RXB0DLCbits	set	3941
   327  0000                     _RXB0EIDH	set	3939
   328  0000                     _RXB0EIDL	set	3940
   329  0000                     _RXB0SIDH	set	3937
   330  0000                     _RXB0SIDL	set	3938
   331  0000                     _RXB0SIDLbits	set	3938
   332  0000                     _RXERRCNT	set	3957
   333  0000                     _T3CON	set	4017
   334  0000                     _TMR3H	set	4019
   335  0000                     _TMR3L	set	4018
   336  0000                     _TRISA	set	3986
   337  0000                     _TRISB	set	3987
   338  0000                     _TRISC	set	3988
   339  0000                     _TRISD	set	3989
   340  0000                     _TRISE	set	3990
   341  0000                     _TXERRCNT	set	3958
   342  00FE59                     STR_31:
   343  00FE59  20                 	db	32
   344  00FE5A  20                 	db	32
   345  00FE5B  20                 	db	32
   346  00FE5C  20                 	db	32
   347  00FE5D  20                 	db	32
   348  00FE5E  43                 	db	67	;'C'
   349  00FE5F  4F                 	db	79	;'O'
   350  00FE60  4D                 	db	77	;'M'
   351  00FE61  50                 	db	80	;'P'
   352  00FE62  4C                 	db	76	;'L'
   353  00FE63  45                 	db	69	;'E'
   354  00FE64  54                 	db	84	;'T'
   355  00FE65  45                 	db	69	;'E'
   356  00FE66  44                 	db	68	;'D'
   357  00FE67  21                 	db	33
   358  00FE68  20                 	db	32
   359  00FE69  20                 	db	32
   360  00FE6A  20                 	db	32
   361  00FE6B  20                 	db	32
   362  00FE6C  20                 	db	32
   363  00FE6D  00                 	db	0
   364  00FE6E                     STR_30:
   365  00FE6E  20                 	db	32
   366  00FE6F  20                 	db	32
   367  00FE70  20                 	db	32
   368  00FE71  20                 	db	32
   369  00FE72  53                 	db	83	;'S'
   370  00FE73  55                 	db	85	;'U'
   371  00FE74  43                 	db	67	;'C'
   372  00FE75  43                 	db	67	;'C'
   373  00FE76  45                 	db	69	;'E'
   374  00FE77  53                 	db	83	;'S'
   375  00FE78  53                 	db	83	;'S'
   376  00FE79  46                 	db	70	;'F'
   377  00FE7A  55                 	db	85	;'U'
   378  00FE7B  4C                 	db	76	;'L'
   379  00FE7C  4C                 	db	76	;'L'
   380  00FE7D  59                 	db	89	;'Y'
   381  00FE7E  20                 	db	32
   382  00FE7F  20                 	db	32
   383  00FE80  20                 	db	32
   384  00FE81  20                 	db	32
   385  00FE82  00                 	db	0
   386  00FE83                     STR_23:
   387  00FE83  20                 	db	32
   388  00FE84  20                 	db	32
   389  00FE85  20                 	db	32
   390  00FE86  73                 	db	115	;'s'
   391  00FE87  74                 	db	116	;'t'
   392  00FE88  61                 	db	97	;'a'
   393  00FE89  72                 	db	114	;'r'
   394  00FE8A  74                 	db	116	;'t'
   395  00FE8B  20                 	db	32
   396  00FE8C  70                 	db	112	;'p'
   397  00FE8D  61                 	db	97	;'a'
   398  00FE8E  72                 	db	114	;'r'
   399  00FE8F  6B                 	db	107	;'k'
   400  00FE90  69                 	db	105	;'i'
   401  00FE91  6E                 	db	110	;'n'
   402  00FE92  67                 	db	103	;'g'
   403  00FE93  20                 	db	32
   404  00FE94  20                 	db	32
   405  00FE95  20                 	db	32
   406  00FE96  20                 	db	32
   407  00FE97  00                 	db	0
   408  00FE98                     STR_3:
   409  00FE98  20                 	db	32
   410  00FE99  20                 	db	32
   411  00FE9A  50                 	db	80	;'P'
   412  00FE9B  72                 	db	114	;'r'
   413  00FE9C  65                 	db	101	;'e'
   414  00FE9D  73                 	db	115	;'s'
   415  00FE9E  73                 	db	115	;'s'
   416  00FE9F  20                 	db	32
   417  00FEA0  74                 	db	116	;'t'
   418  00FEA1  68                 	db	104	;'h'
   419  00FEA2  65                 	db	101	;'e'
   420  00FEA3  20                 	db	32
   421  00FEA4  62                 	db	98	;'b'
   422  00FEA5  75                 	db	117	;'u'
   423  00FEA6  74                 	db	116	;'t'
   424  00FEA7  74                 	db	116	;'t'
   425  00FEA8  6F                 	db	111	;'o'
   426  00FEA9  6E                 	db	110	;'n'
   427  00FEAA  20                 	db	32
   428  00FEAB  20                 	db	32
   429  00FEAC  00                 	db	0
   430  00FEAD                     STR_19:
   431  00FEAD  20                 	db	32
   432  00FEAE  75                 	db	117	;'u'
   433  00FEAF  6E                 	db	110	;'n'
   434  00FEB0  74                 	db	116	;'t'
   435  00FEB1  69                 	db	105	;'i'
   436  00FEB2  6C                 	db	108	;'l'
   437  00FEB3  20                 	db	32
   438  00FEB4  6E                 	db	110	;'n'
   439  00FEB5  65                 	db	101	;'e'
   440  00FEB6  78                 	db	120	;'x'
   441  00FEB7  74                 	db	116	;'t'
   442  00FEB8  20                 	db	32
   443  00FEB9  6D                 	db	109	;'m'
   444  00FEBA  65                 	db	101	;'e'
   445  00FEBB  73                 	db	115	;'s'
   446  00FEBC  73                 	db	115	;'s'
   447  00FEBD  61                 	db	97	;'a'
   448  00FEBE  67                 	db	103	;'g'
   449  00FEBF  65                 	db	101	;'e'
   450  00FEC0  20                 	db	32
   451  00FEC1  00                 	db	0
   452  00FEC2                     STR_22:
   453  00FEC2  50                 	db	80	;'P'
   454  00FEC3  72                 	db	114	;'r'
   455  00FEC4  65                 	db	101	;'e'
   456  00FEC5  73                 	db	115	;'s'
   457  00FEC6  73                 	db	115	;'s'
   458  00FEC7  20                 	db	32
   459  00FEC8  74                 	db	116	;'t'
   460  00FEC9  68                 	db	104	;'h'
   461  00FECA  65                 	db	101	;'e'
   462  00FECB  20                 	db	32
   463  00FECC  42                 	db	66	;'B'
   464  00FECD  55                 	db	85	;'U'
   465  00FECE  54                 	db	84	;'T'
   466  00FECF  54                 	db	84	;'T'
   467  00FED0  4F                 	db	79	;'O'
   468  00FED1  4E                 	db	78	;'N'
   469  00FED2  20                 	db	32
   470  00FED3  74                 	db	116	;'t'
   471  00FED4  6F                 	db	111	;'o'
   472  00FED5  20                 	db	32
   473  00FED6  00                 	db	0
   474  00FED7                     STR_29:
   475  00FED7  20                 	db	32
   476  00FED8  50                 	db	80	;'P'
   477  00FED9  61                 	db	97	;'a'
   478  00FEDA  72                 	db	114	;'r'
   479  00FEDB  6B                 	db	107	;'k'
   480  00FEDC  69                 	db	105	;'i'
   481  00FEDD  6E                 	db	110	;'n'
   482  00FEDE  67                 	db	103	;'g'
   483  00FEDF  20                 	db	32
   484  00FEE0  70                 	db	112	;'p'
   485  00FEE1  72                 	db	114	;'r'
   486  00FEE2  6F                 	db	111	;'o'
   487  00FEE3  63                 	db	99	;'c'
   488  00FEE4  65                 	db	101	;'e'
   489  00FEE5  64                 	db	100	;'d'
   490  00FEE6  75                 	db	117	;'u'
   491  00FEE7  72                 	db	114	;'r'
   492  00FEE8  65                 	db	101	;'e'
   493  00FEE9  73                 	db	115	;'s'
   494  00FEEA  20                 	db	32
   495  00FEEB  00                 	db	0
   496  00FEEC                     STR_21:
   497  00FEEC  2D                 	db	45
   498  00FEED  20                 	db	32
   499  00FEEE  44                 	db	68	;'D'
   500  00FEEF  69                 	db	105	;'i'
   501  00FEF0  73                 	db	115	;'s'
   502  00FEF1  74                 	db	116	;'t'
   503  00FEF2  61                 	db	97	;'a'
   504  00FEF3  6E                 	db	110	;'n'
   505  00FEF4  63                 	db	99	;'c'
   506  00FEF5  65                 	db	101	;'e'
   507  00FEF6  20                 	db	32
   508  00FEF7  52                 	db	82	;'R'
   509  00FEF8  45                 	db	69	;'E'
   510  00FEF9  41                 	db	65	;'A'
   511  00FEFA  43                 	db	67	;'C'
   512  00FEFB  48                 	db	72	;'H'
   513  00FEFC  45                 	db	69	;'E'
   514  00FEFD  44                 	db	68	;'D'
   515  00FEFE  20                 	db	32
   516  00FEFF  2D                 	db	45
   517  00FF00  00                 	db	0
   518  00FF01                     STR_18:
   519  00FF01  2D                 	db	45
   520  00FF02  3E                 	db	62	;'>'
   521  00FF03  20                 	db	32
   522  00FF04  20                 	db	32
   523  00FF05  4B                 	db	75	;'K'
   524  00FF06  45                 	db	69	;'E'
   525  00FF07  45                 	db	69	;'E'
   526  00FF08  50                 	db	80	;'P'
   527  00FF09  20                 	db	32
   528  00FF0A  4D                 	db	77	;'M'
   529  00FF0B  4F                 	db	79	;'O'
   530  00FF0C  56                 	db	86	;'V'
   531  00FF0D  49                 	db	73	;'I'
   532  00FF0E  4E                 	db	78	;'N'
   533  00FF0F  47                 	db	71	;'G'
   534  00FF10  20                 	db	32
   535  00FF11  20                 	db	32
   536  00FF12  20                 	db	32
   537  00FF13  3C                 	db	60	;'<'
   538  00FF14  2D                 	db	45
   539  00FF15  00                 	db	0
   540  00FF16                     STR_25:
   541  00FF16  3D                 	db	61	;'='
   542  00FF17  20                 	db	32
   543  00FF18  20                 	db	32
   544  00FF19  20                 	db	32
   545  00FF1A  20                 	db	32
   546  00FF1B  50                 	db	80	;'P'
   547  00FF1C  61                 	db	97	;'a'
   548  00FF1D  72                 	db	114	;'r'
   549  00FF1E  6B                 	db	107	;'k'
   550  00FF1F  69                 	db	105	;'i'
   551  00FF20  6E                 	db	110	;'n'
   552  00FF21  67                 	db	103	;'g'
   553  00FF22  20                 	db	32
   554  00FF23  69                 	db	105	;'i'
   555  00FF24  6E                 	db	110	;'n'
   556  00FF25  20                 	db	32
   557  00FF26  20                 	db	32
   558  00FF27  20                 	db	32
   559  00FF28  20                 	db	32
   560  00FF29  3D                 	db	61	;'='
   561  00FF2A  00                 	db	0
   562  00FF2B                     STR_26:
   563  00FF2B  3D                 	db	61	;'='
   564  00FF2C  20                 	db	32
   565  00FF2D  20                 	db	32
   566  00FF2E  20                 	db	32
   567  00FF2F  20                 	db	32
   568  00FF30  70                 	db	112	;'p'
   569  00FF31  72                 	db	114	;'r'
   570  00FF32  6F                 	db	111	;'o'
   571  00FF33  67                 	db	103	;'g'
   572  00FF34  72                 	db	114	;'r'
   573  00FF35  65                 	db	101	;'e'
   574  00FF36  73                 	db	115	;'s'
   575  00FF37  73                 	db	115	;'s'
   576  00FF38  2E                 	db	46
   577  00FF39  2E                 	db	46
   578  00FF3A  2E                 	db	46
   579  00FF3B  20                 	db	32
   580  00FF3C  20                 	db	32
   581  00FF3D  20                 	db	32
   582  00FF3E  3D                 	db	61	;'='
   583  00FF3F  00                 	db	0
   584  00FF40                     STR_16:
   585  00FF40  3D                 	db	61	;'='
   586  00FF41  20                 	db	32
   587  00FF42  50                 	db	80	;'P'
   588  00FF43  41                 	db	65	;'A'
   589  00FF44  52                 	db	82	;'R'
   590  00FF45  4B                 	db	75	;'K'
   591  00FF46  49                 	db	73	;'I'
   592  00FF47  4E                 	db	78	;'N'
   593  00FF48  47                 	db	71	;'G'
   594  00FF49  20                 	db	32
   595  00FF4A  4D                 	db	77	;'M'
   596  00FF4B  45                 	db	69	;'E'
   597  00FF4C  53                 	db	83	;'S'
   598  00FF4D  53                 	db	83	;'S'
   599  00FF4E  41                 	db	65	;'A'
   600  00FF4F  47                 	db	71	;'G'
   601  00FF50  45                 	db	69	;'E'
   602  00FF51  53                 	db	83	;'S'
   603  00FF52  20                 	db	32
   604  00FF53  3D                 	db	61	;'='
   605  00FF54  00                 	db	0
   606  00FF55                     STR_2:
   607  00FF55  3D                 	db	61	;'='
   608  00FF56  3D                 	db	61	;'='
   609  00FF57  3E                 	db	62	;'>'
   610  00FF58  20                 	db	32
   611  00FF59  56                 	db	86	;'V'
   612  00FF5A  45                 	db	69	;'E'
   613  00FF5B  48                 	db	72	;'H'
   614  00FF5C  49                 	db	73	;'I'
   615  00FF5D  43                 	db	67	;'C'
   616  00FF5E  4C                 	db	76	;'L'
   617  00FF5F  45                 	db	69	;'E'
   618  00FF60  20                 	db	32
   619  00FF61  20                 	db	32
   620  00FF62  4F                 	db	79	;'O'
   621  00FF63  46                 	db	70	;'F'
   622  00FF64  46                 	db	70	;'F'
   623  00FF65  20                 	db	32
   624  00FF66  3C                 	db	60	;'<'
   625  00FF67  3D                 	db	61	;'='
   626  00FF68  3D                 	db	61	;'='
   627  00FF69  00                 	db	0
   628  00FF6A                     STR_6:
   629  00FF6A  3D                 	db	61	;'='
   630  00FF6B  3D                 	db	61	;'='
   631  00FF6C  3D                 	db	61	;'='
   632  00FF6D  20                 	db	32
   633  00FF6E  56                 	db	86	;'V'
   634  00FF6F  45                 	db	69	;'E'
   635  00FF70  48                 	db	72	;'H'
   636  00FF71  49                 	db	73	;'I'
   637  00FF72  43                 	db	67	;'C'
   638  00FF73  4C                 	db	76	;'L'
   639  00FF74  45                 	db	69	;'E'
   640  00FF75  20                 	db	32
   641  00FF76  44                 	db	68	;'D'
   642  00FF77  41                 	db	65	;'A'
   643  00FF78  54                 	db	84	;'T'
   644  00FF79  41                 	db	65	;'A'
   645  00FF7A  20                 	db	32
   646  00FF7B  3D                 	db	61	;'='
   647  00FF7C  3D                 	db	61	;'='
   648  00FF7D  3D                 	db	61	;'='
   649  00FF7E  00                 	db	0
   650  00FF7F                     STR_1:
   651  00FF7F  3D                 	db	61	;'='
   652  00FF80  3D                 	db	61	;'='
   653  00FF81  3D                 	db	61	;'='
   654  00FF82  3D                 	db	61	;'='
   655  00FF83  3D                 	db	61	;'='
   656  00FF84  3D                 	db	61	;'='
   657  00FF85  3D                 	db	61	;'='
   658  00FF86  3D                 	db	61	;'='
   659  00FF87  3D                 	db	61	;'='
   660  00FF88  3D                 	db	61	;'='
   661  00FF89  3D                 	db	61	;'='
   662  00FF8A  3D                 	db	61	;'='
   663  00FF8B  3D                 	db	61	;'='
   664  00FF8C  3D                 	db	61	;'='
   665  00FF8D  3D                 	db	61	;'='
   666  00FF8E  3D                 	db	61	;'='
   667  00FF8F  3D                 	db	61	;'='
   668  00FF90  3D                 	db	61	;'='
   669  00FF91  3D                 	db	61	;'='
   670  00FF92  3D                 	db	61	;'='
   671  00FF93  00                 	db	0
   672  00FF94                     STR_17:
   673  00FF94  20                 	db	32
   674  00FF95  50                 	db	80	;'P'
   675  00FF96  61                 	db	97	;'a'
   676  00FF97  72                 	db	114	;'r'
   677  00FF98  6B                 	db	107	;'k'
   678  00FF99  69                 	db	105	;'i'
   679  00FF9A  6E                 	db	110	;'n'
   680  00FF9B  67                 	db	103	;'g'
   681  00FF9C  20                 	db	32
   682  00FF9D  73                 	db	115	;'s'
   683  00FF9E  70                 	db	112	;'p'
   684  00FF9F  61                 	db	97	;'a'
   685  00FFA0  63                 	db	99	;'c'
   686  00FFA1  65                 	db	101	;'e'
   687  00FFA2  20                 	db	32
   688  00FFA3  46                 	db	70	;'F'
   689  00FFA4  4F                 	db	79	;'O'
   690  00FFA5  55                 	db	85	;'U'
   691  00FFA6  4E                 	db	78	;'N'
   692  00FFA7  44                 	db	68	;'D'
   693  00FFA8  00                 	db	0
   694  00FFA9                     STR_8:
   695  00FFA9  53                 	db	83	;'S'
   696  00FFAA  70                 	db	112	;'p'
   697  00FFAB  65                 	db	101	;'e'
   698  00FFAC  65                 	db	101	;'e'
   699  00FFAD  64                 	db	100	;'d'
   700  00FFAE  3A                 	db	58	;':'
   701  00FFAF  20                 	db	32
   702  00FFB0  30                 	db	48	;'0'
   703  00FFB1  2E                 	db	46
   704  00FFB2  30                 	db	48	;'0'
   705  00FFB3  30                 	db	48	;'0'
   706  00FFB4  20                 	db	32
   707  00FFB5  4B                 	db	75	;'K'
   708  00FFB6  6D                 	db	109	;'m'
   709  00FFB7  2F                 	db	47
   710  00FFB8  68                 	db	104	;'h'
   711  00FFB9  00                 	db	0
   712  00FFBA                     STR_9:
   713  00FFBA  50                 	db	80	;'P'
   714  00FFBB  61                 	db	97	;'a'
   715  00FFBC  72                 	db	114	;'r'
   716  00FFBD  6B                 	db	107	;'k'
   717  00FFBE  20                 	db	32
   718  00FFBF  61                 	db	97	;'a'
   719  00FFC0  73                 	db	115	;'s'
   720  00FFC1  73                 	db	115	;'s'
   721  00FFC2  69                 	db	105	;'i'
   722  00FFC3  73                 	db	115	;'s'
   723  00FFC4  74                 	db	116	;'t'
   724  00FFC5  3A                 	db	58	;':'
   725  00FFC6  20                 	db	32
   726  00FFC7  00                 	db	0
   727  00FFC8                     STR_7:
   728  00FFC8  44                 	db	68	;'D'
   729  00FFC9  69                 	db	105	;'i'
   730  00FFCA  72                 	db	114	;'r'
   731  00FFCB  65                 	db	101	;'e'
   732  00FFCC  63                 	db	99	;'c'
   733  00FFCD  74                 	db	116	;'t'
   734  00FFCE  69                 	db	105	;'i'
   735  00FFCF  6F                 	db	111	;'o'
   736  00FFD0  6E                 	db	110	;'n'
   737  00FFD1  3A                 	db	58	;':'
   738  00FFD2  20                 	db	32
   739  00FFD3  00                 	db	0
   740  00FFD4                     STR_14:
   741  00FFD4  4F                 	db	79	;'O'
   742  00FFD5  46                 	db	70	;'F'
   743  00FFD6  46                 	db	70	;'F'
   744  00FFD7  20                 	db	32
   745  00FFD8  20                 	db	32
   746  00FFD9  20                 	db	32
   747  00FFDA  20                 	db	32
   748  00FFDB  00                 	db	0
   749  00FFDC                     STR_15:
   750  00FFDC  53                 	db	83	;'S'
   751  00FFDD  45                 	db	69	;'E'
   752  00FFDE  41                 	db	65	;'A'
   753  00FFDF  52                 	db	82	;'R'
   754  00FFE0  43                 	db	67	;'C'
   755  00FFE1  48                 	db	72	;'H'
   756  00FFE2  20                 	db	32
   757  00FFE3  00                 	db	0
   758  00FFE4                     STR_10:
   759  00FFE4  44                 	db	68	;'D'
   760  00FFE5  61                 	db	97	;'a'
   761  00FFE6  74                 	db	116	;'t'
   762  00FFE7  61                 	db	97	;'a'
   763  00FFE8  3A                 	db	58	;':'
   764  00FFE9  20                 	db	32
   765  00FFEA  00                 	db	0
   766  00FFEB                     STR_13:
   767  00FFEB  50                 	db	80	;'P'
   768  00FFEC  20                 	db	32
   769  00FFED  20                 	db	32
   770  00FFEE  20                 	db	32
   771  00FFEF  00                 	db	0
   772  00FFF0                     STR_11:
   773  00FFF0  46                 	db	70	;'F'
   774  00FFF1  57                 	db	87	;'W'
   775  00FFF2  44                 	db	68	;'D'
   776  00FFF3  20                 	db	32
   777  00FFF4  00                 	db	0
   778  00FFF5                     STR_12:
   779  00FFF5  42                 	db	66	;'B'
   780  00FFF6  4B                 	db	75	;'K'
   781  00FFF7  57                 	db	87	;'W'
   782  00FFF8  44                 	db	68	;'D'
   783  00FFF9  00                 	db	0
   784  00FFFA                     STR_5:
   785  00FFFA  25                 	db	37
   786  00FFFB  2E                 	db	46
   787  00FFFC  32                 	db	50	;'2'
   788  00FFFD  66                 	db	102	;'f'
   789  00FFFE  00                 	db	0
   790  0000                     
   791                           ; #config settings
   792  00FFFF  00                 	db	0	; dummy byte at the end
   793  0000                     
   794                           	psect	cinit
   795  0161A0                     __pcinit:
   796                           	opt stack 0
   797  0161A0                     start_initialization:
   798                           	opt stack 0
   799  0161A0                     __initialization:
   800                           	opt stack 0
   801                           
   802                           ; Clear objects allocated to BANK1 (48 bytes)
   803  0161A0  EE01  F000         	lfsr	0,__pbssBANK1
   804  0161A4  0E30               	movlw	48
   805  0161A6                     clear_0:
   806  0161A6  6AEE               	clrf	postinc0,c
   807  0161A8  06E8               	decf	wreg,f,c
   808  0161AA  E1FD               	bnz	clear_0
   809                           
   810                           ; Clear objects allocated to BANK0 (32 bytes)
   811  0161AC  EE00  F0CD         	lfsr	0,__pbssBANK0
   812  0161B0  0E20               	movlw	32
   813  0161B2                     clear_1:
   814  0161B2  6AEE               	clrf	postinc0,c
   815  0161B4  06E8               	decf	wreg,f,c
   816  0161B6  E1FD               	bnz	clear_1
   817                           
   818                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   819  0161B8  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   820  0161BA  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   821  0161BC  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   822                           
   823                           ; Clear objects allocated to COMRAM (41 bytes)
   824  0161BE  EE00  F001         	lfsr	0,__pbssCOMRAM
   825  0161C2  0E29               	movlw	41
   826  0161C4                     clear_2:
   827  0161C4  6AEE               	clrf	postinc0,c
   828  0161C6  06E8               	decf	wreg,f,c
   829  0161C8  E1FD               	bnz	clear_2
   830                           
   831                           ; Initialize objects allocated to BANK0 (1 bytes)
   832                           ; load TBLPTR registers with __pidataBANK0
   833  0161CA  0EBA               	movlw	low __pidataBANK0
   834  0161CC  6EF6               	movwf	tblptrl,c
   835  0161CE  0E64               	movlw	high __pidataBANK0
   836  0161D0  6EF7               	movwf	tblptrh,c
   837  0161D2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   838  0161D4  6EF8               	movwf	tblptru,c
   839  0161D6  0009               	tblrd		*+	;fetch initializer
   840  0161D8  CFF5 F0ED          	movff	tablat,__pdataBANK0
   841  0161DC                     end_of_initialization:
   842                           	opt stack 0
   843  0161DC                     __end_of__initialization:
   844                           	opt stack 0
   845  0161DC  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   846  0161DE  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   847  0161E0  0100               	movlb	0
   848  0161E2  EF93  F08D         	goto	_main	;jump to C main() function
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           
   856                           	psect	bitbssCOMRAM
   857  000258                     __pbitbssCOMRAM:
   858                           	opt stack 0
   859  000258                     _AbsFlag:
   860                           	opt stack 0
   861  000258                     	ds	1
   862  000259                     _Can_Tx_Force:
   863                           	opt stack 0
   864  000259                     	ds	1
   865  00025A                     _F1_switch:
   866                           	opt stack 0
   867  00025A                     	ds	1
   868  00025B                     _F2_switch:
   869                           	opt stack 0
   870  00025B                     	ds	1
   871  00025C                     _MotoreFlag:
   872                           	opt stack 0
   873  00025C                     	ds	1
   874  00025D                     _RTR_Flag:
   875                           	opt stack 0
   876  00025D                     	ds	1
   877  00025E                     _SterzoFlag:
   878                           	opt stack 0
   879  00025E                     	ds	1
   880  00025F                     _display_refresh:
   881                           	opt stack 0
   882  00025F                     	ds	1
   883  000260                     _newMessageCan:
   884                           	opt stack 0
   885  000260                     	ds	1
   886  000261                     _parking_message_E:
   887                           	opt stack 0
   888  000261                     	ds	1
   889  000262                     _power_switch:
   890                           	opt stack 0
   891  000262                     	ds	1
   892  000263                     _space_available:
   893                           	opt stack 0
   894  000263                     	ds	1
   895  000264                     _space_gap_reached:
   896                           	opt stack 0
   897  000264                     	ds	1
   898  000265                     _steering_correction_dir:
   899                           	opt stack 0
   900  000265                     	ds	1
   901  000266                     _wait_low_1:
   902                           	opt stack 0
   903  000266                     	ds	1
   904  000267                     _wait_low_2:
   905                           	opt stack 0
   906  000267                     	ds	1
   907  000268                     _wait_low_3:
   908                           	opt stack 0
   909  000268                     	ds	1
   910  000269                     _x:
   911                           	opt stack 0
   912  000269                     	ds	1
   913  00026A                     _y:
   914                           	opt stack 0
   915  00026A                     	ds	1
   916  00026B                     _z:
   917                           	opt stack 0
   918  00026B                     	ds	1
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           
   926                           	psect	bssCOMRAM
   927  000001                     __pbssCOMRAM:
   928                           	opt stack 0
   929  000001                     _actual_speed_kmh:
   930                           	opt stack 0
   931  000001                     	ds	4
   932  000005                     _id:
   933                           	opt stack 0
   934  000005                     	ds	4
   935  000009                     _pr_time_2:
   936                           	opt stack 0
   937  000009                     	ds	4
   938  00000D                     _pr_time_3:
   939                           	opt stack 0
   940  00000D                     	ds	4
   941  000011                     _pr_time_4:
   942                           	opt stack 0
   943  000011                     	ds	4
   944  000015                     _pr_time_5:
   945                           	opt stack 0
   946  000015                     	ds	4
   947  000019                     _pr_time_6:
   948                           	opt stack 0
   949  000019                     	ds	4
   950  00001D                     _time_counter:
   951                           	opt stack 0
   952  00001D                     	ds	4
   953  000021                     _left_speed:
   954                           	opt stack 0
   955  000021                     	ds	2
   956  000023                     _right_speed:
   957                           	opt stack 0
   958  000023                     	ds	2
   959  000025                     _user_data:
   960                           	opt stack 0
   961  000025                     	ds	2
   962  000027                     _battery:
   963                           	opt stack 0
   964  000027                     	ds	1
   965  000028                     _set_steering:
   966                           	opt stack 0
   967  000028                     	ds	1
   968  000029                     _data:
   969                           	opt stack 0
   970  000029                     	ds	1
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           
   978                           	psect	bssBANK0
   979  0000CD                     __pbssBANK0:
   980                           	opt stack 0
   981  0000CD                     _JoystickConstants:
   982                           	opt stack 0
   983  0000CD                     	ds	8
   984  0000D5                     _check:
   985                           	opt stack 0
   986  0000D5                     	ds	4
   987  0000D9                     _pr_time_1:
   988                           	opt stack 0
   989  0000D9                     	ds	4
   990  0000DD                     _JoystickValues:
   991                           	opt stack 0
   992  0000DD                     	ds	2
   993  0000DF                     _actual_speed:
   994                           	opt stack 0
   995  0000DF                     	ds	2
   996  0000E1                     _clock_counter_reference:
   997                           	opt stack 0
   998  0000E1                     	ds	2
   999  0000E3                     _set_speed:
  1000                           	opt stack 0
  1001  0000E3                     	ds	2
  1002  0000E5                     _dir:
  1003                           	opt stack 0
  1004  0000E5                     	ds	1
  1005  0000E6                     _parking_message_ID:
  1006                           	opt stack 0
  1007  0000E6                     	ds	1
  1008  0000E7                     _parking_state:
  1009                           	opt stack 0
  1010  0000E7                     	ds	1
  1011  0000E8                     _steering_correction:
  1012                           	opt stack 0
  1013  0000E8                     	ds	1
  1014  0000E9                     _switch_position:
  1015                           	opt stack 0
  1016  0000E9                     	ds	1
  1017  0000EA                     _data_brake:
  1018                           	opt stack 0
  1019  0000EA                     	ds	1
  1020  0000EB                     _data_speed:
  1021                           	opt stack 0
  1022  0000EB                     	ds	1
  1023  0000EC                     _data_steering:
  1024                           	opt stack 0
  1025  0000EC                     	ds	1
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           
  1033                           	psect	dataBANK0
  1034  0000ED                     __pdataBANK0:
  1035                           	opt stack 0
  1036  0000ED                     _delay_quartz_frequency_value:
  1037                           	opt stack 0
  1038  0000ED                     	ds	1
  1039                           tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           
  1046                           	psect	bssBANK1
  1047  000100                     __pbssBANK1:
  1048                           	opt stack 0
  1049  000100                     _data_speed_rx:
  1050                           	opt stack 0
  1051  000100                     	ds	7
  1052  000107                     LCD_write_integer@F17272:
  1053                           	opt stack 0
  1054  000107                     	ds	6
  1055  00010D                     _msg:
  1056                           	opt stack 0
  1057  00010D                     	ds	15
  1058  00011C                     _str:
  1059                           	opt stack 0
  1060  00011C                     	ds	12
  1061  000128                     _park_assist_state:
  1062                           	opt stack 0
  1063  000128                     	ds	8
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           
  1071                           	psect	cstackBANK1
  1072  000130                     __pcstackBANK1:
  1073                           	opt stack 0
  1074  000130                     _sprintf$4257:
  1075                           	opt stack 0
  1076                           
  1077                           ; 4 bytes @ 0x0
  1078  000130                     	ds	4
  1079  000134                     sprintf@ap:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x4
  1083  000134                     	ds	2
  1084  000136                     sprintf@flag:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x6
  1088  000136                     	ds	2
  1089  000138                     sprintf@val:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x8
  1093  000138                     	ds	4
  1094  00013C                     sprintf@exp:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0xC
  1098  00013C                     	ds	2
  1099  00013E                     sprintf@tmpval:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0xE
  1103  00013E                     	ds	4
  1104  000142                     sprintf@prec:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x12
  1108  000142                     	ds	2
  1109  000144                     sprintf@fval:
  1110                           	opt stack 0
  1111                           
  1112                           ; 4 bytes @ 0x14
  1113  000144                     	ds	4
  1114  000148                     sprintf@c:
  1115                           	opt stack 0
  1116                           
  1117                           ; 1 bytes @ 0x18
  1118  000148                     	ds	1
  1119  000149                     ??_main:
  1120                           
  1121                           ; 0 bytes @ 0x19
  1122  000149                     	ds	8
  1123                           tblptru	equ	0xFF8
  1124                           tblptrh	equ	0xFF7
  1125                           tblptrl	equ	0xFF6
  1126                           tablat	equ	0xFF5
  1127                           postinc0	equ	0xFEE
  1128                           wreg	equ	0xFE8
  1129                           
  1130                           	psect	cstackBANK0
  1131  000060                     __pcstackBANK0:
  1132                           	opt stack 0
  1133  000060                     ??_ISR_alta:
  1134                           
  1135                           ; 0 bytes @ 0x0
  1136  000060                     	ds	16
  1137  000070                     ISR_alta@i:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x10
  1141  000070                     	ds	1
  1142  000071                     ??_Joystick_Polling:
  1143  000071                     ??_CAN_Rx:
  1144  000071                     ??_isdigit:
  1145  000071                     ?___wmul:
  1146                           	opt stack 0
  1147  000071                     ?___awmod:
  1148                           	opt stack 0
  1149  000071                     ?___lwdiv:
  1150                           	opt stack 0
  1151  000071                     ?___lwmod:
  1152                           	opt stack 0
  1153  000071                     ?__tdiv_to_l_:
  1154                           	opt stack 0
  1155  000071                     ?__div_to_l_:
  1156                           	opt stack 0
  1157  000071                     ?___lldiv:
  1158                           	opt stack 0
  1159  000071                     ?___llmod:
  1160                           	opt stack 0
  1161  000071                     ?___xxtofl:
  1162                           	opt stack 0
  1163  000071                     CANOperationMode@mode:
  1164                           	opt stack 0
  1165  000071                     _CANisTxReady$3251:
  1166                           	opt stack 0
  1167  000071                     delay_set_quartz@frequency:
  1168                           	opt stack 0
  1169  000071                     ___wmul@multiplier:
  1170                           	opt stack 0
  1171  000071                     ___awmod@dividend:
  1172                           	opt stack 0
  1173  000071                     ___lwdiv@dividend:
  1174                           	opt stack 0
  1175  000071                     ___lwmod@dividend:
  1176                           	opt stack 0
  1177  000071                     CANsendMessage@identifier:
  1178                           	opt stack 0
  1179  000071                     CANSetMask@mask:
  1180                           	opt stack 0
  1181  000071                     CANSetFilter@filter:
  1182                           	opt stack 0
  1183  000071                     __div_to_l_@f1:
  1184                           	opt stack 0
  1185  000071                     ___flge@ff1:
  1186                           	opt stack 0
  1187  000071                     __tdiv_to_l_@f1:
  1188                           	opt stack 0
  1189  000071                     ___lldiv@dividend:
  1190                           	opt stack 0
  1191  000071                     ___llmod@dividend:
  1192                           	opt stack 0
  1193  000071                     ___xxtofl@val:
  1194                           	opt stack 0
  1195                           
  1196                           ; 4 bytes @ 0x11
  1197  000071                     	ds	1
  1198  000072                     Joystick_Polling@i:
  1199                           	opt stack 0
  1200  000072                     _isdigit$3840:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x12
  1204  000072                     	ds	1
  1205  000073                     isdigit@c:
  1206                           	opt stack 0
  1207  000073                     ___wmul@multiplicand:
  1208                           	opt stack 0
  1209  000073                     ___awmod@divisor:
  1210                           	opt stack 0
  1211  000073                     ___lwdiv@divisor:
  1212                           	opt stack 0
  1213  000073                     ___lwmod@divisor:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x13
  1217  000073                     	ds	2
  1218  000075                     ??___xxtofl:
  1219  000075                     CANSetMask@type:
  1220                           	opt stack 0
  1221  000075                     CANSetFilter@type:
  1222                           	opt stack 0
  1223  000075                     ___awmod@counter:
  1224                           	opt stack 0
  1225  000075                     ___lwmod@counter:
  1226                           	opt stack 0
  1227  000075                     CANsendMessage@data:
  1228                           	opt stack 0
  1229  000075                     ___wmul@product:
  1230                           	opt stack 0
  1231  000075                     ___lwdiv@quotient:
  1232                           	opt stack 0
  1233  000075                     __div_to_l_@f2:
  1234                           	opt stack 0
  1235  000075                     ___flge@ff2:
  1236                           	opt stack 0
  1237  000075                     __tdiv_to_l_@f2:
  1238                           	opt stack 0
  1239  000075                     ___lldiv@divisor:
  1240                           	opt stack 0
  1241  000075                     ___llmod@divisor:
  1242                           	opt stack 0
  1243                           
  1244                           ; 4 bytes @ 0x15
  1245  000075                     	ds	1
  1246  000076                     ??_CANSetMask:
  1247  000076                     ??_CANSetFilter:
  1248  000076                     ___awmod@sign:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x16
  1252  000076                     	ds	1
  1253  000077                     ?___awdiv:
  1254                           	opt stack 0
  1255  000077                     CANsendMessage@dataLength:
  1256                           	opt stack 0
  1257  000077                     ___lwdiv@counter:
  1258                           	opt stack 0
  1259  000077                     delay_ms@value_ms:
  1260                           	opt stack 0
  1261  000077                     ___awdiv@dividend:
  1262                           	opt stack 0
  1263                           
  1264                           ; 2 bytes @ 0x17
  1265  000077                     	ds	1
  1266  000078                     CANsendMessage@flags:
  1267                           	opt stack 0
  1268  000078                     utoa@buf:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0x18
  1272  000078                     	ds	1
  1273  000079                     ??__tdiv_to_l_:
  1274  000079                     ??_CANsendMessage:
  1275  000079                     ??___flge:
  1276  000079                     LCD_send_command@D2:
  1277                           	opt stack 0
  1278  000079                     ___llmod@counter:
  1279                           	opt stack 0
  1280  000079                     ___xxtofl@sign:
  1281                           	opt stack 0
  1282  000079                     ___awdiv@divisor:
  1283                           	opt stack 0
  1284  000079                     __div_to_l_@quot:
  1285                           	opt stack 0
  1286  000079                     ___lldiv@quotient:
  1287                           	opt stack 0
  1288                           
  1289                           ; 4 bytes @ 0x19
  1290  000079                     	ds	1
  1291  00007A                     CANSetMask@numBuffer:
  1292                           	opt stack 0
  1293  00007A                     CANSetFilter@numBuffer:
  1294                           	opt stack 0
  1295  00007A                     LCD_send_command@D1:
  1296                           	opt stack 0
  1297  00007A                     ___xxtofl@exp:
  1298                           	opt stack 0
  1299  00007A                     utoa@val:
  1300                           	opt stack 0
  1301                           
  1302                           ; 2 bytes @ 0x1A
  1303  00007A                     	ds	1
  1304  00007B                     LCD_send_command@D0:
  1305                           	opt stack 0
  1306  00007B                     ___awdiv@counter:
  1307                           	opt stack 0
  1308  00007B                     CANSetMask@tamp:
  1309                           	opt stack 0
  1310  00007B                     CANSetFilter@tamp:
  1311                           	opt stack 0
  1312  00007B                     ___xxtofl@arg:
  1313                           	opt stack 0
  1314                           
  1315                           ; 4 bytes @ 0x1B
  1316  00007B                     	ds	1
  1317  00007C                     LCD_send_command@D3:
  1318                           	opt stack 0
  1319  00007C                     ___awdiv@sign:
  1320                           	opt stack 0
  1321  00007C                     utoa@base:
  1322                           	opt stack 0
  1323  00007C                     __tdiv_to_l_@quot:
  1324                           	opt stack 0
  1325                           
  1326                           ; 4 bytes @ 0x1C
  1327  00007C                     	ds	1
  1328  00007D                     LCD_shift_cursor@number_of_shift:
  1329                           	opt stack 0
  1330  00007D                     LCD_goto_line@line:
  1331                           	opt stack 0
  1332  00007D                     LCD_write_char@D3:
  1333                           	opt stack 0
  1334  00007D                     LCD_cursor@blinking:
  1335                           	opt stack 0
  1336  00007D                     __div_to_l_@cntr:
  1337                           	opt stack 0
  1338  00007D                     ___lldiv@counter:
  1339                           	opt stack 0
  1340  00007D                     ___awdiv@quotient:
  1341                           	opt stack 0
  1342  00007D                     CANsendMessage@tamp:
  1343                           	opt stack 0
  1344                           
  1345                           ; 4 bytes @ 0x1D
  1346  00007D                     	ds	1
  1347  00007E                     LCD_shift_cursor@shift:
  1348                           	opt stack 0
  1349  00007E                     LCD_write_char@D2:
  1350                           	opt stack 0
  1351  00007E                     LCD_cursor@active:
  1352                           	opt stack 0
  1353  00007E                     __div_to_l_@exp1:
  1354                           	opt stack 0
  1355  00007E                     utoa@v:
  1356                           	opt stack 0
  1357                           
  1358                           ; 2 bytes @ 0x1E
  1359  00007E                     	ds	1
  1360  00007F                     ?___fldiv:
  1361                           	opt stack 0
  1362  00007F                     ?___flmul:
  1363                           	opt stack 0
  1364  00007F                     CANInitialize@phaseSeg1:
  1365                           	opt stack 0
  1366  00007F                     LCD_shift_cursor@i:
  1367                           	opt stack 0
  1368  00007F                     LCD_write_char@D1:
  1369                           	opt stack 0
  1370  00007F                     LCD_initialize@quartz_frequency:
  1371                           	opt stack 0
  1372  00007F                     ___fldiv@b:
  1373                           	opt stack 0
  1374  00007F                     ___flmul@b:
  1375                           	opt stack 0
  1376                           
  1377                           ; 4 bytes @ 0x1F
  1378  00007F                     	ds	1
  1379  000080                     CANInitialize@phaseSeg2:
  1380                           	opt stack 0
  1381  000080                     LCD_goto_xy@y:
  1382                           	opt stack 0
  1383  000080                     LCD_write_char@D0:
  1384                           	opt stack 0
  1385  000080                     __tdiv_to_l_@cntr:
  1386                           	opt stack 0
  1387  000080                     utoa@c:
  1388                           	opt stack 0
  1389                           
  1390                           ; 1 bytes @ 0x20
  1391  000080                     	ds	1
  1392  000081                     CANInitialize@SJW:
  1393                           	opt stack 0
  1394  000081                     LCD_goto_xy@x:
  1395                           	opt stack 0
  1396  000081                     LCD_write_char@value:
  1397                           	opt stack 0
  1398  000081                     __tdiv_to_l_@exp1:
  1399                           	opt stack 0
  1400  000081                     itoa@buf:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x21
  1404  000081                     	ds	1
  1405  000082                     CANInitialize@BRP:
  1406                           	opt stack 0
  1407  000082                     LCD_write_message@buffer:
  1408                           	opt stack 0
  1409  000082                     LCD_write_string@buffer:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x22
  1413  000082                     	ds	1
  1414  000083                     CANInitialize@flags:
  1415                           	opt stack 0
  1416  000083                     itoa@val:
  1417                           	opt stack 0
  1418  000083                     ___fldiv@a:
  1419                           	opt stack 0
  1420  000083                     ___flmul@a:
  1421                           	opt stack 0
  1422                           
  1423                           ; 4 bytes @ 0x23
  1424  000083                     	ds	1
  1425  000084                     ??_CANInitialize:
  1426  000084                     
  1427                           ; 0 bytes @ 0x24
  1428  000084                     	ds	1
  1429  000085                     itoa@base:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x25
  1433  000085                     	ds	2
  1434  000087                     ??___fldiv:
  1435  000087                     ??___flmul:
  1436  000087                     itoa@cp:
  1437                           	opt stack 0
  1438                           
  1439                           ; 2 bytes @ 0x27
  1440  000087                     	ds	1
  1441  000088                     CANInitialize@propSeg:
  1442                           	opt stack 0
  1443                           
  1444                           ; 1 bytes @ 0x28
  1445  000088                     	ds	1
  1446  000089                     CANInitialize@FilterConfig1:
  1447                           	opt stack 0
  1448  000089                     LCD_write_integer@value:
  1449                           	opt stack 0
  1450                           
  1451                           ; 2 bytes @ 0x29
  1452  000089                     	ds	1
  1453  00008A                     CANInitialize@FilterConfig2:
  1454                           	opt stack 0
  1455                           
  1456                           ; 1 bytes @ 0x2A
  1457  00008A                     	ds	1
  1458  00008B                     LCD_write_integer@number_of_digits:
  1459                           	opt stack 0
  1460  00008B                     ___fldiv@sign:
  1461                           	opt stack 0
  1462  00008B                     ___flmul@sign:
  1463                           	opt stack 0
  1464                           
  1465                           ; 1 bytes @ 0x2B
  1466  00008B                     	ds	1
  1467  00008C                     LCD_write_integer@zero_cleaning:
  1468                           	opt stack 0
  1469  00008C                     ___flmul@aexp:
  1470                           	opt stack 0
  1471  00008C                     ___fldiv@rem:
  1472                           	opt stack 0
  1473                           
  1474                           ; 4 bytes @ 0x2C
  1475  00008C                     	ds	1
  1476  00008D                     ??_LCD_write_integer:
  1477  00008D                     ___flmul@grs:
  1478                           	opt stack 0
  1479                           
  1480                           ; 4 bytes @ 0x2D
  1481  00008D                     	ds	3
  1482  000090                     ___fldiv@new_exp:
  1483                           	opt stack 0
  1484                           
  1485                           ; 2 bytes @ 0x30
  1486  000090                     	ds	1
  1487  000091                     ___flmul@bexp:
  1488                           	opt stack 0
  1489                           
  1490                           ; 1 bytes @ 0x31
  1491  000091                     	ds	1
  1492  000092                     ___fldiv@grs:
  1493                           	opt stack 0
  1494  000092                     ___flmul@prod:
  1495                           	opt stack 0
  1496  000092                     LCD_write_integer@convertedInt:
  1497                           	opt stack 0
  1498                           
  1499                           ; 6 bytes @ 0x32
  1500  000092                     	ds	4
  1501  000096                     ___fldiv@bexp:
  1502                           	opt stack 0
  1503  000096                     ___flmul@temp:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x36
  1507  000096                     	ds	1
  1508  000097                     ___fldiv@aexp:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x37
  1512  000097                     	ds	1
  1513  000098                     ?_fround:
  1514                           	opt stack 0
  1515  000098                     ?_scale:
  1516                           	opt stack 0
  1517  000098                     ?___flneg:
  1518                           	opt stack 0
  1519  000098                     LCD_write_integer@index:
  1520                           	opt stack 0
  1521  000098                     ___flneg@f1:
  1522                           	opt stack 0
  1523                           
  1524                           ; 4 bytes @ 0x38
  1525  000098                     	ds	4
  1526  00009C                     _fround$4255:
  1527                           	opt stack 0
  1528  00009C                     _scale$4256:
  1529                           	opt stack 0
  1530                           
  1531                           ; 4 bytes @ 0x3C
  1532  00009C                     	ds	4
  1533  0000A0                     scale@scl:
  1534                           	opt stack 0
  1535  0000A0                     _fround$4254:
  1536                           	opt stack 0
  1537                           
  1538                           ; 4 bytes @ 0x40
  1539  0000A0                     	ds	4
  1540  0000A4                     fround@prec:
  1541                           	opt stack 0
  1542                           
  1543                           ; 1 bytes @ 0x44
  1544  0000A4                     	ds	1
  1545  0000A5                     ?___fladd:
  1546                           	opt stack 0
  1547  0000A5                     ___fladd@b:
  1548                           	opt stack 0
  1549                           
  1550                           ; 4 bytes @ 0x45
  1551  0000A5                     	ds	4
  1552  0000A9                     ___fladd@a:
  1553                           	opt stack 0
  1554                           
  1555                           ; 4 bytes @ 0x49
  1556  0000A9                     	ds	4
  1557  0000AD                     ??___fladd:
  1558                           
  1559                           ; 0 bytes @ 0x4D
  1560  0000AD                     	ds	8
  1561  0000B5                     ___fladd@signs:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x55
  1565  0000B5                     	ds	1
  1566  0000B6                     ___fladd@aexp:
  1567                           	opt stack 0
  1568                           
  1569                           ; 1 bytes @ 0x56
  1570  0000B6                     	ds	1
  1571  0000B7                     ___fladd@bexp:
  1572                           	opt stack 0
  1573                           
  1574                           ; 1 bytes @ 0x57
  1575  0000B7                     	ds	1
  1576  0000B8                     ___fladd@grs:
  1577                           	opt stack 0
  1578                           
  1579                           ; 1 bytes @ 0x58
  1580  0000B8                     	ds	1
  1581  0000B9                     ?___flsub:
  1582                           	opt stack 0
  1583  0000B9                     ?___fltol:
  1584                           	opt stack 0
  1585  0000B9                     ___fltol@f1:
  1586                           	opt stack 0
  1587  0000B9                     ___flsub@b:
  1588                           	opt stack 0
  1589                           
  1590                           ; 4 bytes @ 0x59
  1591  0000B9                     	ds	4
  1592  0000BD                     ??___fltol:
  1593  0000BD                     ___flsub@a:
  1594                           	opt stack 0
  1595                           
  1596                           ; 4 bytes @ 0x5D
  1597  0000BD                     	ds	4
  1598  0000C1                     ___fltol@sign1:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x61
  1602  0000C1                     	ds	1
  1603  0000C2                     ___fltol@exp1:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0x62
  1607  0000C2                     	ds	1
  1608  0000C3                     ?_sprintf:
  1609                           	opt stack 0
  1610  0000C3                     sprintf@sp:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x63
  1614  0000C3                     	ds	2
  1615  0000C5                     sprintf@f:
  1616                           	opt stack 0
  1617                           
  1618                           ; 2 bytes @ 0x65
  1619  0000C5                     	ds	6
  1620  0000CB                     ??_sprintf:
  1621                           
  1622                           ; 0 bytes @ 0x6B
  1623  0000CB                     	ds	2
  1624  0000CD                     tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           
  1631                           ; 0 bytes @ 0x6D
  1632                           
  1633                           	psect	cstackCOMRAM
  1634  00002A                     __pcstackCOMRAM:
  1635                           	opt stack 0
  1636  00002A                     ??_ISR_bassa:
  1637  00002A                     
  1638                           ; 1 bytes @ 0x0
  1639  00002A                     	ds	17
  1640  00003B                     _CANisRxReady$3253:
  1641                           	opt stack 0
  1642  00003B                     i2_CANisTxReady$3251:
  1643                           	opt stack 0
  1644  00003B                     CANreceiveMessage@msg:
  1645                           	opt stack 0
  1646  00003B                     i2CANsendMessage@identifier:
  1647                           	opt stack 0
  1648                           
  1649                           ; 4 bytes @ 0x11
  1650  00003B                     	ds	2
  1651  00003D                     ??_CANreceiveMessage:
  1652                           
  1653                           ; 0 bytes @ 0x13
  1654  00003D                     	ds	2
  1655  00003F                     i2CANsendMessage@data:
  1656                           	opt stack 0
  1657                           
  1658                           ; 2 bytes @ 0x15
  1659  00003F                     	ds	2
  1660  000041                     i2CANsendMessage@dataLength:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x17
  1664  000041                     	ds	1
  1665  000042                     i2CANsendMessage@flags:
  1666                           	opt stack 0
  1667                           
  1668                           ; 1 bytes @ 0x18
  1669  000042                     	ds	1
  1670  000043                     ??i2_CANsendMessage:
  1671                           
  1672                           ; 0 bytes @ 0x19
  1673  000043                     	ds	2
  1674  000045                     CANreceiveMessage@error:
  1675                           	opt stack 0
  1676                           
  1677                           ; 1 bytes @ 0x1B
  1678  000045                     	ds	1
  1679  000046                     CANreceiveMessage@tamp:
  1680                           	opt stack 0
  1681                           
  1682                           ; 1 bytes @ 0x1C
  1683  000046                     	ds	1
  1684  000047                     i2CANsendMessage@tamp:
  1685                           	opt stack 0
  1686                           
  1687                           ; 4 bytes @ 0x1D
  1688  000047                     	ds	4
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 196 in file "RemoteCan.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;Total ram usage:        8 bytes
  1720 ;; Hardware stack levels required when called:   11
  1721 ;; This function calls:
  1722 ;;		_CAN_Rx
  1723 ;;		_CAN_Tx
  1724 ;;		_CANisTxReady
  1725 ;;		_CANsendMessage
  1726 ;;		_F1_Button_Polling
  1727 ;;		_F2_Button_Polling
  1728 ;;		_Joystick_Polling
  1729 ;;		_LCD_End
  1730 ;;		_LCD_Gap
  1731 ;;		_LCD_Handler
  1732 ;;		_LCD_Park
  1733 ;;		_LCD_Parking
  1734 ;;		_LCD_goto_line
  1735 ;;		_LCD_initialize
  1736 ;;		_LCD_write_message
  1737 ;;		_PWR_Button_Polling
  1738 ;;		___fladd
  1739 ;;		___flmul
  1740 ;;		___flneg
  1741 ;;		___fltol
  1742 ;;		___xxtofl
  1743 ;;		_board_initialization
  1744 ;;		_delay_ms
  1745 ;; This function is called by:
  1746 ;;		Startup code after reset
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text0
  1751  011B26                     __ptext0:
  1752                           	opt stack 0
  1753  011B26                     _main:
  1754                           	opt stack 20
  1755                           
  1756                           ;RemoteCan.c: 197: board_initialization();
  1757                           
  1758                           ;incstack = 0
  1759  011B26  ECC8  F0AD         	call	_board_initialization	;wreg free
  1760                           
  1761                           ;RemoteCan.c: 205: JoystickConstants[0] = 0.703;
  1762  011B2A  0ECF               	movlw	207
  1763  011B2C  0100               	movlb	0	; () banked
  1764  011B2E  6FCD               	movwf	_JoystickConstants& (0+255),b	;volatile
  1765  011B30  0EF7               	movlw	247
  1766  011B32  6FCE               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1767  011B34  0E33               	movlw	51
  1768  011B36  6FCF               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1769  011B38  0E3F               	movlw	63
  1770  011B3A  6FD0               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;RemoteCan.c: 206: JoystickConstants[1] = 15;
  1774  011B3C  0E00               	movlw	0
  1775  011B3E  0100               	movlb	0	; () banked
  1776  011B40  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1777  011B42  0E00               	movlw	0
  1778  011B44  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1779  011B46  0E70               	movlw	112
  1780  011B48  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1781  011B4A  0E41               	movlw	65
  1782  011B4C  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;RemoteCan.c: 208: data_brake [1] = 0b00000000;
  1786  011B4E  0E00               	movlw	0
  1787  011B50  0100               	movlb	0	; () banked
  1788  011B52  6FEB               	movwf	(_data_brake+1)& (0+255),b
  1789  011B54                     l9631:
  1790                           
  1791                           ;RemoteCan.c: 213: PWR_Button_Polling();
  1792  011B54  EC0A  F0B2         	call	_PWR_Button_Polling	;wreg free
  1793                           
  1794                           ;RemoteCan.c: 214: F1_Button_Polling();
  1795  011B58  EC34  F0B2         	call	_F1_Button_Polling	;wreg free
  1796                           
  1797                           ;RemoteCan.c: 215: F2_Button_Polling();
  1798  011B5C  EC26  F0B2         	call	_F2_Button_Polling	;wreg free
  1799                           
  1800                           ;RemoteCan.c: 218: if (power_switch == 0) {
  1801  011B60  B44C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1802  011B62  D09A               	goto	l804
  1803                           
  1804                           ;RemoteCan.c: 219: dir = 1;
  1805  011B64  0E01               	movlw	1
  1806  011B66  0100               	movlb	0	; () banked
  1807  011B68  6FE5               	movwf	_dir& (0+255),b	;volatile
  1808                           
  1809                           ;RemoteCan.c: 220: set_speed = 0;
  1810  011B6A  0E00               	movlw	0
  1811  011B6C  0100               	movlb	0	; () banked
  1812  011B6E  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1813  011B70  0E00               	movlw	0
  1814  011B72  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  1815                           
  1816                           ;RemoteCan.c: 221: data_steering [0] = 90;
  1817  011B74  0E5A               	movlw	90
  1818  011B76  0100               	movlb	0	; () banked
  1819  011B78  6FEC               	movwf	_data_steering& (0+255),b
  1820                           
  1821                           ;RemoteCan.c: 222: data_brake [0] = 0b00000011;
  1822  011B7A  0E03               	movlw	3
  1823  011B7C  0100               	movlb	0	; () banked
  1824  011B7E  6FEA               	movwf	_data_brake& (0+255),b
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;RemoteCan.c: 223: CAN_Tx();
  1828  011B80  EC14  F0AD         	call	_CAN_Tx	;wreg free
  1829                           
  1830                           ;RemoteCan.c: 224: PORTDbits.RD6 = 0;
  1831  011B84  9C83               	bcf	3971,6,c	;volatile
  1832                           
  1833                           ;RemoteCan.c: 225: PORTDbits.RD5 = 0;
  1834  011B86  9A83               	bcf	3971,5,c	;volatile
  1835                           
  1836                           ;RemoteCan.c: 226: LCD_initialize(16);
  1837  011B88  0E10               	movlw	16
  1838  011B8A  EC45  F0AA         	call	_LCD_initialize
  1839                           
  1840                           ;RemoteCan.c: 227: LCD_goto_line(1);
  1841  011B8E  0E01               	movlw	1
  1842  011B90  EC82  F0AB         	call	_LCD_goto_line
  1843                           
  1844                           ;RemoteCan.c: 228: LCD_write_message("====================");
  1845  011B94  0E7F               	movlw	low STR_1
  1846  011B96  0100               	movlb	0	; () banked
  1847  011B98  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1848  011B9A  0EFF               	movlw	high STR_1
  1849  011B9C  0100               	movlb	0	; () banked
  1850  011B9E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1851  011BA0  EC64  F0B1         	call	_LCD_write_message	;wreg free
  1852                           
  1853                           ;RemoteCan.c: 229: LCD_goto_line(2);
  1854  011BA4  0E02               	movlw	2
  1855  011BA6  EC82  F0AB         	call	_LCD_goto_line
  1856                           
  1857                           ;RemoteCan.c: 230: LCD_write_message("==> VEHICLE  OFF <==");
  1858  011BAA  0E55               	movlw	low STR_2
  1859  011BAC  0100               	movlb	0	; () banked
  1860  011BAE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1861  011BB0  0EFF               	movlw	high STR_2
  1862  011BB2  0100               	movlb	0	; () banked
  1863  011BB4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1864  011BB6  EC64  F0B1         	call	_LCD_write_message	;wreg free
  1865                           
  1866                           ;RemoteCan.c: 231: LCD_goto_line(3);
  1867  011BBA  0E03               	movlw	3
  1868  011BBC  EC82  F0AB         	call	_LCD_goto_line
  1869                           
  1870                           ;RemoteCan.c: 232: LCD_write_message("  Press the button  ");
  1871  011BC0  0E98               	movlw	low STR_3
  1872  011BC2  0100               	movlb	0	; () banked
  1873  011BC4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1874  011BC6  0EFE               	movlw	high STR_3
  1875  011BC8  0100               	movlb	0	; () banked
  1876  011BCA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1877  011BCC  EC64  F0B1         	call	_LCD_write_message	;wreg free
  1878                           
  1879                           ;RemoteCan.c: 233: LCD_goto_line(4);
  1880  011BD0  0E04               	movlw	4
  1881  011BD2  EC82  F0AB         	call	_LCD_goto_line
  1882                           
  1883                           ;RemoteCan.c: 234: LCD_write_message("====================");
  1884  011BD6  0E7F               	movlw	low STR_1
  1885  011BD8  0100               	movlb	0	; () banked
  1886  011BDA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1887  011BDC  0EFF               	movlw	high STR_1
  1888  011BDE  0100               	movlb	0	; () banked
  1889  011BE0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1890  011BE2  EC64  F0B1         	call	_LCD_write_message	;wreg free
  1891                           
  1892                           ;RemoteCan.c: 235: while (power_switch == 0) {
  1893  011BE6  D054               	goto	l9675
  1894  011BE8                     l9665:
  1895                           
  1896                           ;RemoteCan.c: 236: if ((time_counter - pr_time_1) >= 30) {
  1897  011BE8  C0D9  F149         	movff	_pr_time_1,??_main	;volatile
  1898  011BEC  C0DA  F14A         	movff	_pr_time_1+1,??_main+1	;volatile
  1899  011BF0  C0DB  F14B         	movff	_pr_time_1+2,??_main+2	;volatile
  1900  011BF4  C0DC  F14C         	movff	_pr_time_1+3,??_main+3	;volatile
  1901  011BF8  0101               	movlb	1	; () banked
  1902  011BFA  1F49               	comf	??_main& (0+255),f,b
  1903  011BFC  1F4A               	comf	(??_main+1)& (0+255),f,b
  1904  011BFE  1F4B               	comf	(??_main+2)& (0+255),f,b
  1905  011C00  1F4C               	comf	(??_main+3)& (0+255),f,b
  1906  011C02  2B49               	incf	??_main& (0+255),f,b
  1907  011C04  0E00               	movlw	0
  1908  011C06  234A               	addwfc	(??_main+1)& (0+255),f,b
  1909  011C08  234B               	addwfc	(??_main+2)& (0+255),f,b
  1910  011C0A  234C               	addwfc	(??_main+3)& (0+255),f,b
  1911  011C0C  501D               	movf	_time_counter,w,c	;volatile
  1912  011C0E  0101               	movlb	1	; () banked
  1913  011C10  2549               	addwf	??_main& (0+255),w,b
  1914  011C12  0101               	movlb	1	; () banked
  1915  011C14  6F4D               	movwf	(??_main+4)& (0+255),b
  1916  011C16  501E               	movf	_time_counter+1,w,c	;volatile
  1917  011C18  0101               	movlb	1	; () banked
  1918  011C1A  214A               	addwfc	(??_main+1)& (0+255),w,b
  1919  011C1C  0101               	movlb	1	; () banked
  1920  011C1E  6F4E               	movwf	(??_main+5)& (0+255),b
  1921  011C20  501F               	movf	_time_counter+2,w,c	;volatile
  1922  011C22  0101               	movlb	1	; () banked
  1923  011C24  214B               	addwfc	(??_main+2)& (0+255),w,b
  1924  011C26  0101               	movlb	1	; () banked
  1925  011C28  6F4F               	movwf	(??_main+6)& (0+255),b
  1926  011C2A  5020               	movf	_time_counter+3,w,c	;volatile
  1927  011C2C  0101               	movlb	1	; () banked
  1928  011C2E  214C               	addwfc	(??_main+3)& (0+255),w,b
  1929  011C30  0101               	movlb	1	; () banked
  1930  011C32  6F50               	movwf	(??_main+7)& (0+255),b
  1931  011C34  0101               	movlb	1	; () banked
  1932  011C36  5150               	movf	(??_main+7)& (0+255),w,b
  1933  011C38  0101               	movlb	1	; () banked
  1934  011C3A  114F               	iorwf	(??_main+6)& (0+255),w,b
  1935  011C3C  0101               	movlb	1	; () banked
  1936  011C3E  114E               	iorwf	(??_main+5)& (0+255),w,b
  1937  011C40  E105               	bnz	u12960
  1938  011C42  0E1E               	movlw	30
  1939  011C44  0101               	movlb	1	; () banked
  1940  011C46  5D4D               	subwf	(??_main+4)& (0+255),w,b
  1941  011C48  A0D8               	btfss	status,0,c
  1942  011C4A  D019               	goto	l9671
  1943  011C4C                     u12960:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;RemoteCan.c: 237: pr_time_1 = time_counter;
  1947  011C4C  C01D  F0D9         	movff	_time_counter,_pr_time_1	;volatile
  1948  011C50  C01E  F0DA         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1949  011C54  C01F  F0DB         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1950  011C58  C020  F0DC         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;RemoteCan.c: 238: PORTDbits.RD7 = ~PORTDbits.RD7;
  1954  011C5C  AE83               	btfss	3971,7,c	;volatile
  1955  011C5E  D002               	goto	u12970
  1956  011C60  0E01               	movlw	1
  1957  011C62  D001               	goto	u12976
  1958  011C64                     u12970:
  1959  011C64  0E00               	movlw	0
  1960  011C66                     u12976:
  1961  011C66  0AFF               	xorlw	255
  1962  011C68  0101               	movlb	1	; () banked
  1963  011C6A  6F49               	movwf	??_main& (0+255),b
  1964  011C6C  0101               	movlb	1	; () banked
  1965  011C6E  3349               	rrcf	??_main& (0+255),f,b
  1966  011C70  3349               	rrcf	??_main& (0+255),f,b
  1967  011C72  5083               	movf	3971,w,c	;volatile
  1968  011C74  0101               	movlb	1	; () banked
  1969  011C76  1949               	xorwf	??_main& (0+255),w,b
  1970  011C78  0B7F               	andlw	-129
  1971  011C7A  1949               	xorwf	??_main& (0+255),w,b
  1972  011C7C  6E83               	movwf	3971,c	;volatile
  1973  011C7E                     l9671:
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;RemoteCan.c: 239: }
  1977                           ;RemoteCan.c: 240: PWR_Button_Polling();
  1978  011C7E  EC0A  F0B2         	call	_PWR_Button_Polling	;wreg free
  1979                           
  1980                           ;RemoteCan.c: 241: delay_ms(10);
  1981  011C82  0E00               	movlw	0
  1982  011C84  0100               	movlb	0	; () banked
  1983  011C86  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1984  011C88  0E0A               	movlw	10
  1985  011C8A  6F77               	movwf	delay_ms@value_ms& (0+255),b
  1986  011C8C  EC10  F0B1         	call	_delay_ms	;wreg free
  1987  011C90                     l9675:
  1988  011C90  A44C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1989  011C92  D7AA               	goto	l9665
  1990                           
  1991                           ;RemoteCan.c: 242: }
  1992                           ;RemoteCan.c: 243: PORTDbits.RD7 = 0;
  1993  011C94  9E83               	bcf	3971,7,c	;volatile
  1994                           
  1995                           ;RemoteCan.c: 244: display_refresh = 1;
  1996  011C96  8E4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1997  011C98                     l804:
  1998                           
  1999                           ;RemoteCan.c: 245: }
  2000                           ;RemoteCan.c: 248: if (PORTAbits.RA2 == 1) {
  2001  011C98  A480               	btfss	3968,2,c	;volatile
  2002  011C9A  D004               	goto	l809
  2003                           
  2004                           ;RemoteCan.c: 249: switch_position = 0;
  2005  011C9C  0E00               	movlw	0
  2006  011C9E  0100               	movlb	0	; () banked
  2007  011CA0  6FE9               	movwf	_switch_position& (0+255),b	;volatile
  2008                           
  2009                           ;RemoteCan.c: 250: } else {
  2010  011CA2  D00D               	goto	l9683
  2011  011CA4                     l809:
  2012                           
  2013                           ;RemoteCan.c: 251: if (PORTAbits.RA3 == 0) {
  2014  011CA4  B680               	btfsc	3968,3,c	;volatile
  2015  011CA6  D005               	goto	l9681
  2016                           
  2017                           ;RemoteCan.c: 252: switch_position = 1;
  2018  011CA8  0E01               	movlw	1
  2019  011CAA  0100               	movlb	0	; () banked
  2020  011CAC  6FE9               	movwf	_switch_position& (0+255),b	;volatile
  2021                           
  2022                           ;RemoteCan.c: 253: dir = 1;
  2023  011CAE  0E01               	movlw	1
  2024  011CB0  D004               	goto	L1
  2025  011CB2                     l9681:
  2026                           
  2027                           ;RemoteCan.c: 255: switch_position = 2;
  2028  011CB2  0E02               	movlw	2
  2029  011CB4  0100               	movlb	0	; () banked
  2030  011CB6  6FE9               	movwf	_switch_position& (0+255),b	;volatile
  2031                           
  2032                           ;RemoteCan.c: 256: dir = 0;
  2033  011CB8  0E00               	movlw	0
  2034  011CBA                     L1:
  2035  011CBA  0100               	movlb	0	; () banked
  2036  011CBC  6FE5               	movwf	_dir& (0+255),b	;volatile
  2037  011CBE                     l9683:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;RemoteCan.c: 257: }
  2041                           ;RemoteCan.c: 258: }
  2042                           ;RemoteCan.c: 261: if (F1_switch == 1) {
  2043  011CBE  A44B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2044  011CC0  D0C4               	goto	l813
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;RemoteCan.c: 262: y = 0;
  2048  011CC2  944D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2049                           
  2050                           ;RemoteCan.c: 263: if ((x == 0)&&(F2_switch == 0)) {
  2051  011CC4  A24D               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054  011CC6  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2055  011CC8  D02D               	goto	l9701
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;RemoteCan.c: 264: space_available = 0;
  2059  011CCA  964C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;RemoteCan.c: 265: parking_state = 1;
  2063  011CCC  0E01               	movlw	1
  2064  011CCE  0100               	movlb	0	; () banked
  2065  011CD0  6FE7               	movwf	_parking_state& (0+255),b	;volatile
  2066                           
  2067                           ;RemoteCan.c: 266: JoystickConstants[1] = 1;
  2068  011CD2  0E00               	movlw	0
  2069  011CD4  0100               	movlb	0	; () banked
  2070  011CD6  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2071  011CD8  0E00               	movlw	0
  2072  011CDA  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2073  011CDC  0E80               	movlw	128
  2074  011CDE  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2075  011CE0  0E3F               	movlw	63
  2076  011CE2  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2077  011CE4                     l9693:
  2078  011CE4  ECD8  F0B1         	call	_CANisTxReady	;wreg free
  2079  011CE8  0900               	iorlw	0
  2080  011CEA  B4D8               	btfsc	status,2,c
  2081  011CEC  D7FB               	goto	l9693
  2082                           
  2083                           ;RemoteCan.c: 268: park_assist_state[0] = 0b00000001;
  2084  011CEE  0E01               	movlw	1
  2085  011CF0  0101               	movlb	1	; () banked
  2086  011CF2  6F28               	movwf	_park_assist_state& (0+255),b
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;RemoteCan.c: 269: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2090  011CF4  0E0A               	movlw	10
  2091  011CF6  0100               	movlb	0	; () banked
  2092  011CF8  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2093  011CFA  0E00               	movlw	0
  2094  011CFC  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2095  011CFE  0E00               	movlw	0
  2096  011D00  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2097  011D02  0E00               	movlw	0
  2098  011D04  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2099  011D06  0E28               	movlw	low _park_assist_state
  2100  011D08  0100               	movlb	0	; () banked
  2101  011D0A  6F75               	movwf	CANsendMessage@data& (0+255),b
  2102  011D0C  0E01               	movlw	high _park_assist_state
  2103  011D0E  0100               	movlb	0	; () banked
  2104  011D10  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2105  011D12  0E08               	movlw	8
  2106  011D14  0100               	movlb	0	; () banked
  2107  011D16  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2108  011D18  0EBC               	movlw	188
  2109  011D1A  0100               	movlb	0	; () banked
  2110  011D1C  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2111  011D1E  ECCD  F089         	call	_CANsendMessage	;wreg free
  2112                           
  2113                           ;RemoteCan.c: 270: x = 1;
  2114  011D22  824D               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2115  011D24                     l9701:
  2116                           
  2117                           ;RemoteCan.c: 271: }
  2118                           ;RemoteCan.c: 273: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2119  011D24  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2120  011D26  A64C               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2121  011D28  D029               	goto	l818
  2122  011D2A  A84C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2123  011D2C  D027               	goto	l818
  2124                           
  2125                           ;RemoteCan.c: 274: if (z == 0) {
  2126  011D2E  B64D               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2127  011D30  D026               	goto	l9719
  2128                           
  2129                           ;RemoteCan.c: 275: parking_message_ID = 4;
  2130  011D32  0E04               	movlw	4
  2131  011D34  0100               	movlb	0	; () banked
  2132  011D36  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
  2133                           
  2134                           ;RemoteCan.c: 276: parking_state = 2;
  2135  011D38  0E02               	movlw	2
  2136  011D3A  0100               	movlb	0	; () banked
  2137  011D3C  6FE7               	movwf	_parking_state& (0+255),b	;volatile
  2138  011D3E                     l9711:
  2139  011D3E  ECD8  F0B1         	call	_CANisTxReady	;wreg free
  2140  011D42  0900               	iorlw	0
  2141  011D44  B4D8               	btfsc	status,2,c
  2142  011D46  D7FB               	goto	l9711
  2143                           
  2144                           ;RemoteCan.c: 278: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2145  011D48  0E0C               	movlw	12
  2146  011D4A  0100               	movlb	0	; () banked
  2147  011D4C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2148  011D4E  0E00               	movlw	0
  2149  011D50  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2150  011D52  0E00               	movlw	0
  2151  011D54  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2152  011D56  0E00               	movlw	0
  2153  011D58  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2154  011D5A  0E29               	movlw	low _data
  2155  011D5C  0100               	movlb	0	; () banked
  2156  011D5E  6F75               	movwf	CANsendMessage@data& (0+255),b
  2157  011D60  0E00               	movlw	high _data
  2158  011D62  0100               	movlb	0	; () banked
  2159  011D64  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2160  011D66  0E08               	movlw	8
  2161  011D68  0100               	movlb	0	; () banked
  2162  011D6A  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2163  011D6C  0EBC               	movlw	188
  2164  011D6E  0100               	movlb	0	; () banked
  2165  011D70  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2166  011D72  ECCD  F089         	call	_CANsendMessage	;wreg free
  2167                           
  2168                           ;RemoteCan.c: 279: x = 0;
  2169  011D76  924D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2170                           
  2171                           ;RemoteCan.c: 280: z = 1;
  2172  011D78  864D               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2173                           
  2174                           ;RemoteCan.c: 281: }
  2175                           ;RemoteCan.c: 282: } else {
  2176  011D7A  D001               	goto	l9719
  2177  011D7C                     l818:
  2178                           
  2179                           ;RemoteCan.c: 283: z = 0;
  2180  011D7C  964D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2181  011D7E                     l9719:
  2182                           
  2183                           ;RemoteCan.c: 284: }
  2184                           ;RemoteCan.c: 286: if ((time_counter - pr_time_5) >= 30) {
  2185  011D7E  C015  F149         	movff	_pr_time_5,??_main	;volatile
  2186  011D82  C016  F14A         	movff	_pr_time_5+1,??_main+1	;volatile
  2187  011D86  C017  F14B         	movff	_pr_time_5+2,??_main+2	;volatile
  2188  011D8A  C018  F14C         	movff	_pr_time_5+3,??_main+3	;volatile
  2189  011D8E  0101               	movlb	1	; () banked
  2190  011D90  1F49               	comf	??_main& (0+255),f,b
  2191  011D92  1F4A               	comf	(??_main+1)& (0+255),f,b
  2192  011D94  1F4B               	comf	(??_main+2)& (0+255),f,b
  2193  011D96  1F4C               	comf	(??_main+3)& (0+255),f,b
  2194  011D98  2B49               	incf	??_main& (0+255),f,b
  2195  011D9A  0E00               	movlw	0
  2196  011D9C  234A               	addwfc	(??_main+1)& (0+255),f,b
  2197  011D9E  234B               	addwfc	(??_main+2)& (0+255),f,b
  2198  011DA0  234C               	addwfc	(??_main+3)& (0+255),f,b
  2199  011DA2  501D               	movf	_time_counter,w,c	;volatile
  2200  011DA4  0101               	movlb	1	; () banked
  2201  011DA6  2549               	addwf	??_main& (0+255),w,b
  2202  011DA8  0101               	movlb	1	; () banked
  2203  011DAA  6F4D               	movwf	(??_main+4)& (0+255),b
  2204  011DAC  501E               	movf	_time_counter+1,w,c	;volatile
  2205  011DAE  0101               	movlb	1	; () banked
  2206  011DB0  214A               	addwfc	(??_main+1)& (0+255),w,b
  2207  011DB2  0101               	movlb	1	; () banked
  2208  011DB4  6F4E               	movwf	(??_main+5)& (0+255),b
  2209  011DB6  501F               	movf	_time_counter+2,w,c	;volatile
  2210  011DB8  0101               	movlb	1	; () banked
  2211  011DBA  214B               	addwfc	(??_main+2)& (0+255),w,b
  2212  011DBC  0101               	movlb	1	; () banked
  2213  011DBE  6F4F               	movwf	(??_main+6)& (0+255),b
  2214  011DC0  5020               	movf	_time_counter+3,w,c	;volatile
  2215  011DC2  0101               	movlb	1	; () banked
  2216  011DC4  214C               	addwfc	(??_main+3)& (0+255),w,b
  2217  011DC6  0101               	movlb	1	; () banked
  2218  011DC8  6F50               	movwf	(??_main+7)& (0+255),b
  2219  011DCA  0101               	movlb	1	; () banked
  2220  011DCC  5150               	movf	(??_main+7)& (0+255),w,b
  2221  011DCE  0101               	movlb	1	; () banked
  2222  011DD0  114F               	iorwf	(??_main+6)& (0+255),w,b
  2223  011DD2  0101               	movlb	1	; () banked
  2224  011DD4  114E               	iorwf	(??_main+5)& (0+255),w,b
  2225  011DD6  E105               	bnz	u13100
  2226  011DD8  0E1E               	movlw	30
  2227  011DDA  0101               	movlb	1	; () banked
  2228  011DDC  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2229  011DDE  A0D8               	btfss	status,0,c
  2230  011DE0  D06C               	goto	l9743
  2231  011DE2                     u13100:
  2232                           
  2233                           ; BSR set to: 1
  2234                           ;RemoteCan.c: 287: pr_time_5 = time_counter;
  2235  011DE2  C01D  F015         	movff	_time_counter,_pr_time_5	;volatile
  2236  011DE6  C01E  F016         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2237  011DEA  C01F  F017         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2238  011DEE  C020  F018         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2239                           
  2240                           ;RemoteCan.c: 288: if (space_available == 0) {
  2241  011DF2  B64C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2242  011DF4  D013               	goto	l825
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;RemoteCan.c: 289: PORTDbits.RD6 = ~PORTDbits.RD6;
  2246  011DF6  AC83               	btfss	3971,6,c	;volatile
  2247  011DF8  D002               	goto	u13120
  2248  011DFA  0E01               	movlw	1
  2249  011DFC  D001               	goto	u13126
  2250  011DFE                     u13120:
  2251  011DFE  0E00               	movlw	0
  2252  011E00                     u13126:
  2253  011E00  0AFF               	xorlw	255
  2254  011E02  0101               	movlb	1	; () banked
  2255  011E04  6F49               	movwf	??_main& (0+255),b
  2256  011E06  0101               	movlb	1	; () banked
  2257  011E08  3B49               	swapf	??_main& (0+255),f,b
  2258  011E0A  4749               	rlncf	??_main& (0+255),f,b
  2259  011E0C  4749               	rlncf	??_main& (0+255),f,b
  2260  011E0E  5083               	movf	3971,w,c	;volatile
  2261  011E10  0101               	movlb	1	; () banked
  2262  011E12  1949               	xorwf	??_main& (0+255),w,b
  2263  011E14  0BBF               	andlw	-65
  2264  011E16  1949               	xorwf	??_main& (0+255),w,b
  2265  011E18  6E83               	movwf	3971,c	;volatile
  2266  011E1A  D04E               	goto	l9741
  2267  011E1C                     l825:
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;RemoteCan.c: 292: PORTDbits.RD6 = 1;
  2271  011E1C  8C83               	bsf	3971,6,c	;volatile
  2272                           
  2273                           ;RemoteCan.c: 293: if (F2_switch == 0) {
  2274  011E1E  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2275  011E20  D012               	goto	l827
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;RemoteCan.c: 294: PORTDbits.RD5 = ~PORTDbits.RD5;
  2279  011E22  AA83               	btfss	3971,5,c	;volatile
  2280  011E24  D002               	goto	u13140
  2281  011E26  0E01               	movlw	1
  2282  011E28  D001               	goto	u13146
  2283  011E2A                     u13140:
  2284  011E2A  0E00               	movlw	0
  2285  011E2C                     u13146:
  2286  011E2C  0AFF               	xorlw	255
  2287  011E2E  0101               	movlb	1	; () banked
  2288  011E30  6F49               	movwf	??_main& (0+255),b
  2289  011E32  0101               	movlb	1	; () banked
  2290  011E34  3B49               	swapf	??_main& (0+255),f,b
  2291  011E36  4749               	rlncf	??_main& (0+255),f,b
  2292  011E38  5083               	movf	3971,w,c	;volatile
  2293  011E3A  0101               	movlb	1	; () banked
  2294  011E3C  1949               	xorwf	??_main& (0+255),w,b
  2295  011E3E  0BDF               	andlw	-33
  2296  011E40  1949               	xorwf	??_main& (0+255),w,b
  2297  011E42  6E83               	movwf	3971,c	;volatile
  2298                           
  2299                           ;RemoteCan.c: 295: } else {
  2300  011E44  D03A               	goto	l9743
  2301  011E46                     l827:
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;RemoteCan.c: 296: PORTDbits.RD5 = 1;
  2305  011E46  8A83               	bsf	3971,5,c	;volatile
  2306                           
  2307                           ; BSR set to: 1
  2308                           ;RemoteCan.c: 298: }
  2309                           ;RemoteCan.c: 299: }
  2310                           ;RemoteCan.c: 300: }
  2311                           ;RemoteCan.c: 301: } else {
  2312                           
  2313                           ; BSR set to: 1
  2314                           
  2315                           ; BSR set to: 1
  2316  011E48  D038               	goto	l9743
  2317  011E4A                     l813:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;RemoteCan.c: 302: x = 0;
  2321  011E4A  924D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2322                           
  2323                           ;RemoteCan.c: 303: z = 0;
  2324  011E4C  964D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2325                           
  2326                           ;RemoteCan.c: 304: parking_message_E = 0;
  2327  011E4E  924C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2328                           
  2329                           ;RemoteCan.c: 305: F2_switch = 0;
  2330  011E50  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2331                           
  2332                           ;RemoteCan.c: 306: space_available = 0;
  2333  011E52  964C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2334                           
  2335                           ;RemoteCan.c: 307: space_gap_reached = 0;
  2336  011E54  984C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2337                           
  2338                           ;RemoteCan.c: 308: PORTDbits.RD5 = 0;
  2339  011E56  9A83               	bcf	3971,5,c	;volatile
  2340                           
  2341                           ;RemoteCan.c: 309: PORTDbits.RD6 = 0;
  2342  011E58  9C83               	bcf	3971,6,c	;volatile
  2343                           
  2344                           ;RemoteCan.c: 310: if (y == 0) {
  2345  011E5A  B44D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2346  011E5C  D02C               	goto	l9739
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;RemoteCan.c: 311: parking_state = 0;
  2350  011E5E  0E00               	movlw	0
  2351  011E60  0100               	movlb	0	; () banked
  2352  011E62  6FE7               	movwf	_parking_state& (0+255),b	;volatile
  2353                           
  2354                           ;RemoteCan.c: 312: JoystickConstants[1] = 15;
  2355  011E64  0E00               	movlw	0
  2356  011E66  0100               	movlb	0	; () banked
  2357  011E68  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2358  011E6A  0E00               	movlw	0
  2359  011E6C  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2360  011E6E  0E70               	movlw	112
  2361  011E70  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2362  011E72  0E41               	movlw	65
  2363  011E74  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2364  011E76                     l9731:
  2365  011E76  ECD8  F0B1         	call	_CANisTxReady	;wreg free
  2366  011E7A  0900               	iorlw	0
  2367  011E7C  B4D8               	btfsc	status,2,c
  2368  011E7E  D7FB               	goto	l9731
  2369                           
  2370                           ;RemoteCan.c: 314: park_assist_state[0] = 0b00000000;
  2371  011E80  0E00               	movlw	0
  2372  011E82  0101               	movlb	1	; () banked
  2373  011E84  6F28               	movwf	_park_assist_state& (0+255),b
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;RemoteCan.c: 315: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2377  011E86  0E0A               	movlw	10
  2378  011E88  0100               	movlb	0	; () banked
  2379  011E8A  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2380  011E8C  0E00               	movlw	0
  2381  011E8E  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2382  011E90  0E00               	movlw	0
  2383  011E92  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2384  011E94  0E00               	movlw	0
  2385  011E96  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2386  011E98  0E28               	movlw	low _park_assist_state
  2387  011E9A  0100               	movlb	0	; () banked
  2388  011E9C  6F75               	movwf	CANsendMessage@data& (0+255),b
  2389  011E9E  0E01               	movlw	high _park_assist_state
  2390  011EA0  0100               	movlb	0	; () banked
  2391  011EA2  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2392  011EA4  0E08               	movlw	8
  2393  011EA6  0100               	movlb	0	; () banked
  2394  011EA8  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2395  011EAA  0EBC               	movlw	188
  2396  011EAC  0100               	movlb	0	; () banked
  2397  011EAE  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2398  011EB0  ECCD  F089         	call	_CANsendMessage	;wreg free
  2399                           
  2400                           ;RemoteCan.c: 316: y = 1;
  2401  011EB4  844D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2402  011EB6                     l9739:
  2403                           
  2404                           ;RemoteCan.c: 317: }
  2405                           ;RemoteCan.c: 318: PORTDbits.RD6 = 0;
  2406  011EB6  9C83               	bcf	3971,6,c	;volatile
  2407  011EB8                     l9741:
  2408                           
  2409                           ;RemoteCan.c: 319: PORTDbits.RD5 = 0;
  2410  011EB8  9A83               	bcf	3971,5,c	;volatile
  2411  011EBA                     l9743:
  2412                           
  2413                           ;RemoteCan.c: 320: }
  2414                           ;RemoteCan.c: 322: Joystick_Polling();
  2415  011EBA  EC38  F0B0         	call	_Joystick_Polling	;wreg free
  2416                           
  2417                           ;RemoteCan.c: 325: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2418  011EBE  0E00               	movlw	0
  2419  011EC0  0100               	movlb	0	; () banked
  2420  011EC2  6FA9               	movwf	___fladd@a& (0+255),b
  2421  011EC4  0E00               	movlw	0
  2422  011EC6  6FAA               	movwf	(___fladd@a+1)& (0+255),b
  2423  011EC8  0E34               	movlw	52
  2424  011ECA  6FAB               	movwf	(___fladd@a+2)& (0+255),b
  2425  011ECC  0E43               	movlw	67
  2426  011ECE  6FAC               	movwf	(___fladd@a+3)& (0+255),b
  2427  011ED0  C0CD  F083         	movff	_JoystickConstants,___flmul@a	;volatile
  2428  011ED4  C0CE  F084         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2429  011ED8  C0CF  F085         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2430  011EDC  C0D0  F086         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2431  011EE0  0100               	movlb	0	; () banked
  2432  011EE2  51DD               	movf	_JoystickValues& (0+255),w,b	;volatile
  2433  011EE4  0100               	movlb	0	; () banked
  2434  011EE6  6F71               	movwf	___xxtofl@val& (0+255),b
  2435  011EE8  6B72               	clrf	(___xxtofl@val+1)& (0+255),b
  2436  011EEA  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  2437  011EEC  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  2438  011EEE  0E00               	movlw	0
  2439  011EF0  EC69  F0A4         	call	___xxtofl
  2440  011EF4  C071  F07F         	movff	?___xxtofl,___flmul@b
  2441  011EF8  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2442  011EFC  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2443  011F00  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2444  011F04  ECEE  F09B         	call	___flmul	;wreg free
  2445  011F08  C07F  F098         	movff	?___flmul,___flneg@f1
  2446  011F0C  C080  F099         	movff	?___flmul+1,___flneg@f1+1
  2447  011F10  C081  F09A         	movff	?___flmul+2,___flneg@f1+2
  2448  011F14  C082  F09B         	movff	?___flmul+3,___flneg@f1+3
  2449  011F18  EC2D  F0B1         	call	___flneg	;wreg free
  2450  011F1C  C098  F0A5         	movff	?___flneg,___fladd@b
  2451  011F20  C099  F0A6         	movff	?___flneg+1,___fladd@b+1
  2452  011F24  C09A  F0A7         	movff	?___flneg+2,___fladd@b+2
  2453  011F28  C09B  F0A8         	movff	?___flneg+3,___fladd@b+3
  2454  011F2C  EC9A  F099         	call	___fladd	;wreg free
  2455  011F30  C0A5  F0B9         	movff	?___fladd,___fltol@f1
  2456  011F34  C0A6  F0BA         	movff	?___fladd+1,___fltol@f1+1
  2457  011F38  C0A7  F0BB         	movff	?___fladd+2,___fltol@f1+2
  2458  011F3C  C0A8  F0BC         	movff	?___fladd+3,___fltol@f1+3
  2459  011F40  ECFC  F0AA         	call	___fltol	;wreg free
  2460  011F44  0100               	movlb	0	; () banked
  2461  011F46  51B9               	movf	?___fltol& (0+255),w,b
  2462  011F48  0100               	movlb	0	; () banked
  2463  011F4A  6FEC               	movwf	_data_steering& (0+255),b
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;RemoteCan.c: 326: if (parking_state == 1) {
  2467  011F4C  0100               	movlb	0	; () banked
  2468  011F4E  05E7               	decf	_parking_state& (0+255),w,b	;volatile
  2469  011F50  A4D8               	btfss	status,2,c
  2470  011F52  D05C               	goto	l834
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;RemoteCan.c: 327: if (steering_correction_dir == 1) {
  2474  011F54  AA4C               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2475  011F56  D00F               	goto	l9753
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;RemoteCan.c: 328: check = data_steering[0] + steering_correction;
  2479  011F58  0100               	movlb	0	; () banked
  2480  011F5A  51E8               	movf	_steering_correction& (0+255),w,b	;volatile
  2481  011F5C  C0EC  F149         	movff	_data_steering,??_main
  2482  011F60  0101               	movlb	1	; () banked
  2483  011F62  6B4A               	clrf	(??_main+1)& (0+255),b
  2484  011F64  0101               	movlb	1	; () banked
  2485  011F66  2749               	addwf	??_main& (0+255),f,b
  2486  011F68  0E00               	movlw	0
  2487  011F6A  234A               	addwfc	(??_main+1)& (0+255),f,b
  2488  011F6C  C149  F0D5         	movff	??_main,_check	;volatile
  2489  011F70  C14A  F0D6         	movff	??_main+1,_check+1	;volatile
  2490  011F74  D01B               	goto	L2
  2491  011F76                     l9753:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;RemoteCan.c: 330: check = data_steering[0] - steering_correction;
  2495  011F76  0100               	movlb	0	; () banked
  2496  011F78  51E8               	movf	_steering_correction& (0+255),w,b	;volatile
  2497  011F7A  0101               	movlb	1	; () banked
  2498  011F7C  6F49               	movwf	??_main& (0+255),b
  2499  011F7E  6B4A               	clrf	(??_main+1)& (0+255),b
  2500  011F80  0101               	movlb	1	; () banked
  2501  011F82  1F49               	comf	??_main& (0+255),f,b
  2502  011F84  1F4A               	comf	(??_main+1)& (0+255),f,b
  2503  011F86  4B49               	infsnz	??_main& (0+255),f,b
  2504  011F88  2B4A               	incf	(??_main+1)& (0+255),f,b
  2505  011F8A  0100               	movlb	0	; () banked
  2506  011F8C  51EC               	movf	_data_steering& (0+255),w,b
  2507  011F8E  0101               	movlb	1	; () banked
  2508  011F90  6F4B               	movwf	(??_main+2)& (0+255),b
  2509  011F92  6B4C               	clrf	(??_main+3)& (0+255),b
  2510  011F94  0101               	movlb	1	; () banked
  2511  011F96  5149               	movf	??_main& (0+255),w,b
  2512  011F98  0101               	movlb	1	; () banked
  2513  011F9A  274B               	addwf	(??_main+2)& (0+255),f,b
  2514  011F9C  0101               	movlb	1	; () banked
  2515  011F9E  514A               	movf	(??_main+1)& (0+255),w,b
  2516  011FA0  0101               	movlb	1	; () banked
  2517  011FA2  234C               	addwfc	(??_main+3)& (0+255),f,b
  2518  011FA4  C14B  F0D5         	movff	??_main+2,_check	;volatile
  2519  011FA8  C14C  F0D6         	movff	??_main+3,_check+1	;volatile
  2520  011FAC                     L2:
  2521  011FAC  0100               	movlb	0	; () banked
  2522  011FAE  0E00               	movlw	0
  2523  011FB0  BFD6               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2524  011FB2  0EFF               	movlw	-1
  2525  011FB4  6FD7               	movwf	(_check+2)& (0+255),b	;volatile
  2526  011FB6  6FD8               	movwf	(_check+3)& (0+255),b	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;RemoteCan.c: 331: }
  2530                           ;RemoteCan.c: 332: if ((check >= 0)&&(check <= 180)) {
  2531  011FB8  0100               	movlb	0	; () banked
  2532  011FBA  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2533  011FBC  D012               	goto	l9759
  2534                           
  2535                           ; BSR set to: 0
  2536  011FBE  0100               	movlb	0	; () banked
  2537  011FC0  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2538  011FC2  D00C               	goto	l9757
  2539  011FC4  0100               	movlb	0	; () banked
  2540  011FC6  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  2541  011FC8  0100               	movlb	0	; () banked
  2542  011FCA  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2543  011FCC  0100               	movlb	0	; () banked
  2544  011FCE  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2545  011FD0  E108               	bnz	l9759
  2546  011FD2  0EB5               	movlw	181
  2547  011FD4  0100               	movlb	0	; () banked
  2548  011FD6  5DD5               	subwf	_check& (0+255),w,b	;volatile
  2549  011FD8  B0D8               	btfsc	status,0,c
  2550  011FDA  D003               	goto	l9759
  2551  011FDC                     l9757:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;RemoteCan.c: 333: data_steering[0] = check;
  2555  011FDC  C0D5  F0EC         	movff	_check,_data_steering	;volatile
  2556                           
  2557                           ;RemoteCan.c: 334: } else {
  2558  011FE0  D019               	goto	l841
  2559  011FE2                     l9759:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;RemoteCan.c: 335: if (check > 180) {
  2563  011FE2  0100               	movlb	0	; () banked
  2564  011FE4  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2565  011FE6  D00E               	goto	l9763
  2566  011FE8  0100               	movlb	0	; () banked
  2567  011FEA  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  2568  011FEC  0100               	movlb	0	; () banked
  2569  011FEE  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2570  011FF0  0100               	movlb	0	; () banked
  2571  011FF2  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2572  011FF4  E105               	bnz	u13210
  2573  011FF6  0EB5               	movlw	181
  2574  011FF8  0100               	movlb	0	; () banked
  2575  011FFA  5DD5               	subwf	_check& (0+255),w,b	;volatile
  2576  011FFC  A0D8               	btfss	status,0,c
  2577  011FFE  D002               	goto	l9763
  2578  012000                     u13210:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;RemoteCan.c: 336: data_steering[0] = 180;
  2582  012000  0EB4               	movlw	180
  2583  012002  D001               	goto	L3
  2584  012004                     l9763:
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;RemoteCan.c: 338: data_steering[0] = 0;
  2588  012004  0E00               	movlw	0
  2589  012006                     L3:
  2590  012006  0100               	movlb	0	; () banked
  2591  012008  6FEC               	movwf	_data_steering& (0+255),b
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;RemoteCan.c: 339: }
  2595                           ;RemoteCan.c: 340: }
  2596                           ;RemoteCan.c: 341: } else {
  2597                           
  2598                           ; BSR set to: 0
  2599  01200A  D004               	goto	l841
  2600  01200C                     l834:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;RemoteCan.c: 342: steering_correction_dir = 0;
  2604  01200C  9A4C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;RemoteCan.c: 343: steering_correction = 0;
  2608  01200E  0E00               	movlw	0
  2609  012010  0100               	movlb	0	; () banked
  2610  012012  6FE8               	movwf	_steering_correction& (0+255),b	;volatile
  2611  012014                     l841:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;RemoteCan.c: 344: }
  2615                           ;RemoteCan.c: 347: if (switch_position != 0) {
  2616  012014  0100               	movlb	0	; () banked
  2617  012016  51E9               	movf	_switch_position& (0+255),w,b	;volatile
  2618  012018  B4D8               	btfsc	status,2,c
  2619  01201A  D061               	goto	l9787
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;RemoteCan.c: 348: if (JoystickValues[1] > 132) {
  2623  01201C  0E84               	movlw	132
  2624  01201E  0100               	movlb	0	; () banked
  2625  012020  65DE               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2626  012022  D042               	goto	l9773
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;RemoteCan.c: 349: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2630  012024  C0D1  F083         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2631  012028  C0D2  F084         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2632  01202C  C0D3  F085         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2633  012030  C0D4  F086         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2634  012034  0E7E               	movlw	126
  2635  012036  0101               	movlb	1	; () banked
  2636  012038  6F49               	movwf	??_main& (0+255),b
  2637  01203A  0EFF               	movlw	255
  2638  01203C  0101               	movlb	1	; () banked
  2639  01203E  6F4A               	movwf	(??_main+1)& (0+255),b
  2640  012040  0100               	movlb	0	; () banked
  2641  012042  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2642  012044  0101               	movlb	1	; () banked
  2643  012046  6F4B               	movwf	(??_main+2)& (0+255),b
  2644  012048  6B4C               	clrf	(??_main+3)& (0+255),b
  2645  01204A  0101               	movlb	1	; () banked
  2646  01204C  5149               	movf	??_main& (0+255),w,b
  2647  01204E  0101               	movlb	1	; () banked
  2648  012050  274B               	addwf	(??_main+2)& (0+255),f,b
  2649  012052  0101               	movlb	1	; () banked
  2650  012054  514A               	movf	(??_main+1)& (0+255),w,b
  2651  012056  0101               	movlb	1	; () banked
  2652  012058  234C               	addwfc	(??_main+3)& (0+255),f,b
  2653  01205A  C14B  F071         	movff	??_main+2,___xxtofl@val
  2654  01205E  C14C  F072         	movff	??_main+3,___xxtofl@val+1
  2655  012062  0100               	movlb	0	; () banked
  2656  012064  0E00               	movlw	0
  2657  012066  BF72               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2658  012068  0EFF               	movlw	-1
  2659  01206A  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
  2660  01206C  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
  2661  01206E  0E01               	movlw	1
  2662  012070  EC69  F0A4         	call	___xxtofl
  2663  012074  C071  F07F         	movff	?___xxtofl,___flmul@b
  2664  012078  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2665  01207C  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2666  012080  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2667  012084  ECEE  F09B         	call	___flmul	;wreg free
  2668  012088  C07F  F0B9         	movff	?___flmul,___fltol@f1
  2669  01208C  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  2670  012090  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  2671  012094  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  2672  012098  ECFC  F0AA         	call	___fltol	;wreg free
  2673  01209C  C0B9  F0E3         	movff	?___fltol,_set_speed	;volatile
  2674  0120A0  C0BA  F0E4         	movff	?___fltol+1,_set_speed+1	;volatile
  2675                           
  2676                           ;RemoteCan.c: 350: data_brake [0] = 0b00000011;
  2677  0120A4  0E03               	movlw	3
  2678  0120A6  D018               	goto	L4
  2679  0120A8                     l9773:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;RemoteCan.c: 352: set_speed = 0;
  2683  0120A8  0E00               	movlw	0
  2684  0120AA  0100               	movlb	0	; () banked
  2685  0120AC  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2686  0120AE  0E00               	movlw	0
  2687  0120B0  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;RemoteCan.c: 353: if (JoystickValues[1] <= 65) {
  2691  0120B2  0E42               	movlw	66
  2692  0120B4  0100               	movlb	0	; () banked
  2693  0120B6  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2694  0120B8  D003               	goto	l9779
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;RemoteCan.c: 354: data_brake [0] = 0b00000010;
  2698  0120BA  0E02               	movlw	2
  2699  0120BC  0100               	movlb	0	; () banked
  2700  0120BE  6FEA               	movwf	_data_brake& (0+255),b
  2701  0120C0                     l9779:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;RemoteCan.c: 355: }
  2705                           ;RemoteCan.c: 356: if (JoystickValues[1] <= 20) {
  2706  0120C0  0E15               	movlw	21
  2707  0120C2  0100               	movlb	0	; () banked
  2708  0120C4  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2709  0120C6  D003               	goto	l9783
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;RemoteCan.c: 357: data_brake [0] = 0b00000001;
  2713  0120C8  0E01               	movlw	1
  2714  0120CA  0100               	movlb	0	; () banked
  2715  0120CC  6FEA               	movwf	_data_brake& (0+255),b
  2716  0120CE                     l9783:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;RemoteCan.c: 358: }
  2720                           ;RemoteCan.c: 359: if (JoystickValues[1] <= 5) {
  2721  0120CE  0E06               	movlw	6
  2722  0120D0  0100               	movlb	0	; () banked
  2723  0120D2  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2724  0120D4  D00B               	goto	l9789
  2725  0120D6  D008               	goto	L5
  2726  0120D8                     L4:
  2727  0120D8  0100               	movlb	0	; () banked
  2728  0120DA  6FEA               	movwf	_data_brake& (0+255),b
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;RemoteCan.c: 361: }
  2732                           ;RemoteCan.c: 362: }
  2733                           ;RemoteCan.c: 363: } else {
  2734                           
  2735                           ; BSR set to: 0
  2736  0120DC  D007               	goto	l9789
  2737  0120DE                     l9787:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;RemoteCan.c: 364: set_speed = 0;
  2741  0120DE  0E00               	movlw	0
  2742  0120E0  0100               	movlb	0	; () banked
  2743  0120E2  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2744  0120E4  0E00               	movlw	0
  2745  0120E6  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2746  0120E8                     L5:
  2747                           
  2748                           ;RemoteCan.c: 365: data_brake [0] = 0b00000000;
  2749  0120E8  0E00               	movlw	0
  2750  0120EA  D7F6               	goto	L4
  2751  0120EC                     l9789:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;RemoteCan.c: 366: }
  2755                           ;RemoteCan.c: 368: if (newMessageCan == 1) {
  2756  0120EC  A04C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2757  0120EE  D003               	goto	l9795
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;RemoteCan.c: 369: CAN_Rx();
  2761  0120F0  EC71  F0AD         	call	_CAN_Rx	;wreg free
  2762                           
  2763                           ;RemoteCan.c: 370: newMessageCan = 0;
  2764  0120F4  904C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2765  0120F6                     l9795:
  2766                           
  2767                           ;RemoteCan.c: 371: }
  2768                           ;RemoteCan.c: 373: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2769  0120F6  C009  F149         	movff	_pr_time_2,??_main	;volatile
  2770  0120FA  C00A  F14A         	movff	_pr_time_2+1,??_main+1	;volatile
  2771  0120FE  C00B  F14B         	movff	_pr_time_2+2,??_main+2	;volatile
  2772  012102  C00C  F14C         	movff	_pr_time_2+3,??_main+3	;volatile
  2773  012106  0101               	movlb	1	; () banked
  2774  012108  1F49               	comf	??_main& (0+255),f,b
  2775  01210A  1F4A               	comf	(??_main+1)& (0+255),f,b
  2776  01210C  1F4B               	comf	(??_main+2)& (0+255),f,b
  2777  01210E  1F4C               	comf	(??_main+3)& (0+255),f,b
  2778  012110  2B49               	incf	??_main& (0+255),f,b
  2779  012112  0E00               	movlw	0
  2780  012114  234A               	addwfc	(??_main+1)& (0+255),f,b
  2781  012116  234B               	addwfc	(??_main+2)& (0+255),f,b
  2782  012118  234C               	addwfc	(??_main+3)& (0+255),f,b
  2783  01211A  501D               	movf	_time_counter,w,c	;volatile
  2784  01211C  0101               	movlb	1	; () banked
  2785  01211E  2549               	addwf	??_main& (0+255),w,b
  2786  012120  0101               	movlb	1	; () banked
  2787  012122  6F4D               	movwf	(??_main+4)& (0+255),b
  2788  012124  501E               	movf	_time_counter+1,w,c	;volatile
  2789  012126  0101               	movlb	1	; () banked
  2790  012128  214A               	addwfc	(??_main+1)& (0+255),w,b
  2791  01212A  0101               	movlb	1	; () banked
  2792  01212C  6F4E               	movwf	(??_main+5)& (0+255),b
  2793  01212E  501F               	movf	_time_counter+2,w,c	;volatile
  2794  012130  0101               	movlb	1	; () banked
  2795  012132  214B               	addwfc	(??_main+2)& (0+255),w,b
  2796  012134  0101               	movlb	1	; () banked
  2797  012136  6F4F               	movwf	(??_main+6)& (0+255),b
  2798  012138  5020               	movf	_time_counter+3,w,c	;volatile
  2799  01213A  0101               	movlb	1	; () banked
  2800  01213C  214C               	addwfc	(??_main+3)& (0+255),w,b
  2801  01213E  0101               	movlb	1	; () banked
  2802  012140  6F50               	movwf	(??_main+7)& (0+255),b
  2803  012142  0101               	movlb	1	; () banked
  2804  012144  5150               	movf	(??_main+7)& (0+255),w,b
  2805  012146  0101               	movlb	1	; () banked
  2806  012148  114F               	iorwf	(??_main+6)& (0+255),w,b
  2807  01214A  0101               	movlb	1	; () banked
  2808  01214C  114E               	iorwf	(??_main+5)& (0+255),w,b
  2809  01214E  E105               	bnz	u13280
  2810  012150  0E02               	movlw	2
  2811  012152  0101               	movlb	1	; () banked
  2812  012154  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2813  012156  A0D8               	btfss	status,0,c
  2814  012158  D004               	goto	l854
  2815  01215A                     u13280:
  2816                           
  2817                           ; BSR set to: 1
  2818  01215A  0E01               	movlw	1
  2819  01215C  0100               	movlb	0	; () banked
  2820  01215E  65E6               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  2821  012160  D002               	goto	l852
  2822  012162                     l854:
  2823  012162  A24B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2824  012164  D01B               	goto	l9807
  2825  012166                     l852:
  2826                           
  2827                           ;RemoteCan.c: 374: if (Can_Tx_Force == 1) {
  2828  012166  A24B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2829  012168  D00F               	goto	l9803
  2830                           
  2831                           ;RemoteCan.c: 375: dir = 1;
  2832  01216A  0E01               	movlw	1
  2833  01216C  0100               	movlb	0	; () banked
  2834  01216E  6FE5               	movwf	_dir& (0+255),b	;volatile
  2835                           
  2836                           ;RemoteCan.c: 376: set_speed = 0;
  2837  012170  0E00               	movlw	0
  2838  012172  0100               	movlb	0	; () banked
  2839  012174  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2840  012176  0E00               	movlw	0
  2841  012178  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2842                           
  2843                           ;RemoteCan.c: 377: data_steering [0] = 90;
  2844  01217A  0E5A               	movlw	90
  2845  01217C  0100               	movlb	0	; () banked
  2846  01217E  6FEC               	movwf	_data_steering& (0+255),b
  2847                           
  2848                           ;RemoteCan.c: 378: data_brake [0] = 0b00000000;
  2849  012180  0E00               	movlw	0
  2850  012182  0100               	movlb	0	; () banked
  2851  012184  6FEA               	movwf	_data_brake& (0+255),b
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;RemoteCan.c: 379: Can_Tx_Force = 0;
  2855  012186  924B               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2856  012188                     l9803:
  2857                           
  2858                           ;RemoteCan.c: 380: }
  2859                           ;RemoteCan.c: 381: pr_time_2 = time_counter;
  2860  012188  C01D  F009         	movff	_time_counter,_pr_time_2	;volatile
  2861  01218C  C01E  F00A         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2862  012190  C01F  F00B         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2863  012194  C020  F00C         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2864                           
  2865                           ;RemoteCan.c: 382: CAN_Tx();
  2866  012198  EC14  F0AD         	call	_CAN_Tx	;wreg free
  2867  01219C                     l9807:
  2868                           
  2869                           ;RemoteCan.c: 383: }
  2870                           ;RemoteCan.c: 386: if (time_counter >= pr_time_6) {
  2871  01219C  5019               	movf	_pr_time_6,w,c	;volatile
  2872  01219E  5C1D               	subwf	_time_counter,w,c	;volatile
  2873  0121A0  501A               	movf	_pr_time_6+1,w,c	;volatile
  2874  0121A2  581E               	subwfb	_time_counter+1,w,c	;volatile
  2875  0121A4  501B               	movf	_pr_time_6+2,w,c	;volatile
  2876  0121A6  581F               	subwfb	_time_counter+2,w,c	;volatile
  2877  0121A8  501C               	movf	_pr_time_6+3,w,c	;volatile
  2878  0121AA  5820               	subwfb	_time_counter+3,w,c	;volatile
  2879  0121AC  A0D8               	btfss	status,0,c
  2880  0121AE  D05B               	goto	l9835
  2881                           
  2882                           ;RemoteCan.c: 387: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2883  0121B0  C00D  F149         	movff	_pr_time_3,??_main	;volatile
  2884  0121B4  C00E  F14A         	movff	_pr_time_3+1,??_main+1	;volatile
  2885  0121B8  C00F  F14B         	movff	_pr_time_3+2,??_main+2	;volatile
  2886  0121BC  C010  F14C         	movff	_pr_time_3+3,??_main+3	;volatile
  2887  0121C0  0101               	movlb	1	; () banked
  2888  0121C2  1F49               	comf	??_main& (0+255),f,b
  2889  0121C4  1F4A               	comf	(??_main+1)& (0+255),f,b
  2890  0121C6  1F4B               	comf	(??_main+2)& (0+255),f,b
  2891  0121C8  1F4C               	comf	(??_main+3)& (0+255),f,b
  2892  0121CA  2B49               	incf	??_main& (0+255),f,b
  2893  0121CC  0E00               	movlw	0
  2894  0121CE  234A               	addwfc	(??_main+1)& (0+255),f,b
  2895  0121D0  234B               	addwfc	(??_main+2)& (0+255),f,b
  2896  0121D2  234C               	addwfc	(??_main+3)& (0+255),f,b
  2897  0121D4  501D               	movf	_time_counter,w,c	;volatile
  2898  0121D6  0101               	movlb	1	; () banked
  2899  0121D8  2549               	addwf	??_main& (0+255),w,b
  2900  0121DA  0101               	movlb	1	; () banked
  2901  0121DC  6F4D               	movwf	(??_main+4)& (0+255),b
  2902  0121DE  501E               	movf	_time_counter+1,w,c	;volatile
  2903  0121E0  0101               	movlb	1	; () banked
  2904  0121E2  214A               	addwfc	(??_main+1)& (0+255),w,b
  2905  0121E4  0101               	movlb	1	; () banked
  2906  0121E6  6F4E               	movwf	(??_main+5)& (0+255),b
  2907  0121E8  501F               	movf	_time_counter+2,w,c	;volatile
  2908  0121EA  0101               	movlb	1	; () banked
  2909  0121EC  214B               	addwfc	(??_main+2)& (0+255),w,b
  2910  0121EE  0101               	movlb	1	; () banked
  2911  0121F0  6F4F               	movwf	(??_main+6)& (0+255),b
  2912  0121F2  5020               	movf	_time_counter+3,w,c	;volatile
  2913  0121F4  0101               	movlb	1	; () banked
  2914  0121F6  214C               	addwfc	(??_main+3)& (0+255),w,b
  2915  0121F8  0101               	movlb	1	; () banked
  2916  0121FA  6F50               	movwf	(??_main+7)& (0+255),b
  2917  0121FC  0101               	movlb	1	; () banked
  2918  0121FE  5150               	movf	(??_main+7)& (0+255),w,b
  2919  012200  0101               	movlb	1	; () banked
  2920  012202  114F               	iorwf	(??_main+6)& (0+255),w,b
  2921  012204  0101               	movlb	1	; () banked
  2922  012206  114E               	iorwf	(??_main+5)& (0+255),w,b
  2923  012208  E105               	bnz	u13330
  2924  01220A  0E0A               	movlw	10
  2925  01220C  0101               	movlb	1	; () banked
  2926  01220E  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2927  012210  A0D8               	btfss	status,0,c
  2928  012212  D4A0               	goto	l9631
  2929  012214                     u13330:
  2930                           
  2931                           ; BSR set to: 1
  2932                           ;RemoteCan.c: 388: pr_time_3 = time_counter;
  2933  012214  C01D  F00D         	movff	_time_counter,_pr_time_3	;volatile
  2934  012218  C01E  F00E         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2935  01221C  C01F  F00F         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2936  012220  C020  F010         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2937                           
  2938                           ;RemoteCan.c: 389: if (parking_message_E == 1) {
  2939  012224  A24C               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2940  012226  D01C               	goto	l9833
  2941                           
  2942                           ; BSR set to: 1
  2943                           ;RemoteCan.c: 390: display_refresh = 1;
  2944  012228  8E4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2945                           
  2946                           ; BSR set to: 1
  2947                           ;RemoteCan.c: 391: if (parking_message_ID == 0) {
  2948  01222A  0100               	movlb	0	; () banked
  2949  01222C  51E6               	movf	_parking_message_ID& (0+255),w,b	;volatile
  2950  01222E  A4D8               	btfss	status,2,c
  2951  012230  D004               	goto	l9821
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;RemoteCan.c: 392: LCD_Gap();
  2955  012232  ECA3  F0AF         	call	_LCD_Gap	;wreg free
  2956                           
  2957                           ;RemoteCan.c: 393: parking_message_ID++;
  2958  012236  0100               	movlb	0	; () banked
  2959  012238  2BE6               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2960  01223A                     l9821:
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;RemoteCan.c: 394: }
  2964                           ;RemoteCan.c: 395: if (parking_message_ID == 2) {
  2965  01223A  0E02               	movlw	2
  2966  01223C  0100               	movlb	0	; () banked
  2967  01223E  19E6               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  2968  012240  A4D8               	btfss	status,2,c
  2969  012242  D004               	goto	l9827
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;RemoteCan.c: 396: LCD_Park();
  2973  012244  EC71  F0AF         	call	_LCD_Park	;wreg free
  2974                           
  2975                           ;RemoteCan.c: 397: parking_message_ID++;
  2976  012248  0100               	movlb	0	; () banked
  2977  01224A  2BE6               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2978  01224C                     l9827:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;RemoteCan.c: 398: }
  2982                           ;RemoteCan.c: 399: if (parking_message_ID == 4) {
  2983  01224C  0E04               	movlw	4
  2984  01224E  0100               	movlb	0	; () banked
  2985  012250  19E6               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  2986  012252  A4D8               	btfss	status,2,c
  2987  012254  D47F               	goto	l9631
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;RemoteCan.c: 400: LCD_Parking();
  2991  012256  EC3F  F0AF         	call	_LCD_Parking	;wreg free
  2992                           
  2993                           ;RemoteCan.c: 401: parking_message_ID++;
  2994  01225A  0100               	movlb	0	; () banked
  2995  01225C  2BE6               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;RemoteCan.c: 402: }
  2999                           ;RemoteCan.c: 403: } else {
  3000  01225E  D47A               	goto	l9631
  3001  012260                     l9833:
  3002                           
  3003                           ;RemoteCan.c: 404: LCD_Handler();
  3004  012260  EC13  F0A7         	call	_LCD_Handler	;wreg free
  3005                           
  3006                           ;RemoteCan.c: 405: }
  3007                           ;RemoteCan.c: 406: }
  3008                           ;RemoteCan.c: 407: } else {
  3009  012264  D477               	goto	l9631
  3010  012266                     l9835:
  3011                           
  3012                           ;RemoteCan.c: 408: if (parking_message_ID == 6) {
  3013  012266  0E06               	movlw	6
  3014  012268  0100               	movlb	0	; () banked
  3015  01226A  19E6               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3016  01226C  A4D8               	btfss	status,2,c
  3017  01226E  D472               	goto	l9631
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;RemoteCan.c: 409: LCD_End();
  3021  012270  ECD5  F0AF         	call	_LCD_End	;wreg free
  3022                           
  3023                           ;RemoteCan.c: 410: parking_message_ID = 0;
  3024  012274  0E00               	movlw	0
  3025  012276  0100               	movlb	0	; () banked
  3026  012278  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;RemoteCan.c: 411: parking_message_E = 0;
  3030  01227A  924C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3031                           
  3032                           ; BSR set to: 0
  3033                           
  3034                           ; BSR set to: 0
  3035                           
  3036                           ; BSR set to: 0
  3037  01227C  D46B               	goto	l9631
  3038  01227E                     __end_of_main:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           postinc0	equ	0xFEE
  3045                           wreg	equ	0xFE8
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function _board_initialization *****************
  3049 ;; Defined at:
  3050 ;;		line 618 in file "RemoteCan.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    9
  3071 ;; This function calls:
  3072 ;;		_CANInitialize
  3073 ;;		_LCD_clear
  3074 ;;		_LCD_goto_line
  3075 ;;		_LCD_initialize
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text1
  3082  015B90                     __ptext1:
  3083                           	opt stack 0
  3084  015B90                     _board_initialization:
  3085                           	opt stack 21
  3086                           
  3087                           ;RemoteCan.c: 620: LATA = 0x00;
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;incstack = 0
  3091  015B90  0E00               	movlw	0
  3092  015B92  6E89               	movwf	3977,c	;volatile
  3093                           
  3094                           ;RemoteCan.c: 621: TRISA = 0b00011111;
  3095  015B94  0E1F               	movlw	31
  3096  015B96  6E92               	movwf	3986,c	;volatile
  3097                           
  3098                           ;RemoteCan.c: 622: LATB = 0x00;
  3099  015B98  0E00               	movlw	0
  3100  015B9A  6E8A               	movwf	3978,c	;volatile
  3101                           
  3102                           ;RemoteCan.c: 623: TRISB = 0b11111011;
  3103  015B9C  0EFB               	movlw	251
  3104  015B9E  6E93               	movwf	3987,c	;volatile
  3105                           
  3106                           ;RemoteCan.c: 624: LATC = 0x00;
  3107  015BA0  0E00               	movlw	0
  3108  015BA2  6E8B               	movwf	3979,c	;volatile
  3109                           
  3110                           ;RemoteCan.c: 625: TRISC = 0b11110000;
  3111  015BA4  0EF0               	movlw	240
  3112  015BA6  6E94               	movwf	3988,c	;volatile
  3113                           
  3114                           ;RemoteCan.c: 626: LATD = 0x00;
  3115  015BA8  0E00               	movlw	0
  3116  015BAA  6E8C               	movwf	3980,c	;volatile
  3117                           
  3118                           ;RemoteCan.c: 627: TRISD = 0x00;
  3119  015BAC  0E00               	movlw	0
  3120  015BAE  6E95               	movwf	3989,c	;volatile
  3121                           
  3122                           ;RemoteCan.c: 628: LATE = 0x00;
  3123  015BB0  0E00               	movlw	0
  3124  015BB2  6E8D               	movwf	3981,c	;volatile
  3125                           
  3126                           ;RemoteCan.c: 629: TRISE = 0x00;
  3127  015BB4  0E00               	movlw	0
  3128  015BB6  6E96               	movwf	3990,c	;volatile
  3129                           
  3130                           ;RemoteCan.c: 631: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3131  015BB8  0E06               	movlw	6
  3132  015BBA  0100               	movlb	0	; () banked
  3133  015BBC  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3134  015BBE  0E05               	movlw	5
  3135  015BC0  0100               	movlb	0	; () banked
  3136  015BC2  6F80               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3137  015BC4  0E01               	movlw	1
  3138  015BC6  0100               	movlb	0	; () banked
  3139  015BC8  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3140  015BCA  0E03               	movlw	3
  3141  015BCC  0100               	movlb	0	; () banked
  3142  015BCE  6F82               	movwf	CANInitialize@BRP& (0+255),b
  3143  015BD0  0E9D               	movlw	157
  3144  015BD2  0100               	movlb	0	; () banked
  3145  015BD4  6F83               	movwf	CANInitialize@flags& (0+255),b
  3146  015BD6  0E04               	movlw	4
  3147  015BD8  EC50  F0A5         	call	_CANInitialize
  3148                           
  3149                           ;RemoteCan.c: 635: PIR2bits.TMR3IF = 0;
  3150  015BDC  92A1               	bcf	4001,1,c	;volatile
  3151                           
  3152                           ;RemoteCan.c: 636: PIR3bits.RXB1IF = 0;
  3153  015BDE  92A4               	bcf	4004,1,c	;volatile
  3154                           
  3155                           ;RemoteCan.c: 637: PIR3bits.RXB0IF = 0;
  3156  015BE0  90A4               	bcf	4004,0,c	;volatile
  3157                           
  3158                           ;RemoteCan.c: 640: RCONbits.IPEN = 1;
  3159  015BE2  8ED0               	bsf	4048,7,c	;volatile
  3160                           
  3161                           ;RemoteCan.c: 641: IPR3bits.RXB1IP = 1;
  3162  015BE4  82A5               	bsf	4005,1,c	;volatile
  3163                           
  3164                           ;RemoteCan.c: 642: IPR3bits.RXB0IP = 1;
  3165  015BE6  80A5               	bsf	4005,0,c	;volatile
  3166                           
  3167                           ;RemoteCan.c: 643: IPR2bits.TMR3IP = 0;
  3168  015BE8  92A2               	bcf	4002,1,c	;volatile
  3169                           
  3170                           ;RemoteCan.c: 646: ADCON1 = 0b00001101;
  3171  015BEA  0E0D               	movlw	13
  3172  015BEC  6EC1               	movwf	4033,c	;volatile
  3173                           
  3174                           ;RemoteCan.c: 647: ADCON0bits.CHS2 = 0;
  3175  015BEE  98C2               	bcf	4034,4,c	;volatile
  3176                           
  3177                           ;RemoteCan.c: 648: ADCON0bits.CHS1 = 0;
  3178  015BF0  96C2               	bcf	4034,3,c	;volatile
  3179                           
  3180                           ;RemoteCan.c: 649: ADCON0bits.CHS0 = 0;
  3181  015BF2  94C2               	bcf	4034,2,c	;volatile
  3182                           
  3183                           ;RemoteCan.c: 650: ADCON2bits.ACQT2 = 1;
  3184  015BF4  8AC0               	bsf	4032,5,c	;volatile
  3185                           
  3186                           ;RemoteCan.c: 651: ADCON2bits.ACQT1 = 1;
  3187  015BF6  88C0               	bsf	4032,4,c	;volatile
  3188                           
  3189                           ;RemoteCan.c: 652: ADCON2bits.ACQT0 = 0;
  3190  015BF8  96C0               	bcf	4032,3,c	;volatile
  3191                           
  3192                           ;RemoteCan.c: 653: ADCON2bits.ADCS2 = 1;
  3193  015BFA  84C0               	bsf	4032,2,c	;volatile
  3194                           
  3195                           ;RemoteCan.c: 654: ADCON2bits.ADCS1 = 0;
  3196  015BFC  92C0               	bcf	4032,1,c	;volatile
  3197                           
  3198                           ;RemoteCan.c: 655: ADCON2bits.ADCS0 = 1;
  3199  015BFE  80C0               	bsf	4032,0,c	;volatile
  3200                           
  3201                           ;RemoteCan.c: 656: ADCON2bits.ADFM = 0;
  3202  015C00  9EC0               	bcf	4032,7,c	;volatile
  3203                           
  3204                           ;RemoteCan.c: 657: ADCON0bits.ADON = 1;
  3205  015C02  80C2               	bsf	4034,0,c	;volatile
  3206                           
  3207                           ;RemoteCan.c: 660: LCD_initialize(16);
  3208  015C04  0E10               	movlw	16
  3209  015C06  EC45  F0AA         	call	_LCD_initialize
  3210                           
  3211                           ;RemoteCan.c: 662: LCD_clear();
  3212  015C0A  EC97  F0B1         	call	_LCD_clear	;wreg free
  3213                           
  3214                           ;RemoteCan.c: 663: LCD_goto_line(1);
  3215  015C0E  0E01               	movlw	1
  3216  015C10  EC82  F0AB         	call	_LCD_goto_line
  3217                           
  3218                           ;RemoteCan.c: 667: PORTDbits.RD2 = 0;
  3219  015C14  9483               	bcf	3971,2,c	;volatile
  3220                           
  3221                           ;RemoteCan.c: 668: PORTDbits.RD3 = 0;
  3222  015C16  9683               	bcf	3971,3,c	;volatile
  3223                           
  3224                           ;RemoteCan.c: 671: TMR3H = 0x63;
  3225  015C18  0E63               	movlw	99
  3226  015C1A  6EB3               	movwf	4019,c	;volatile
  3227                           
  3228                           ;RemoteCan.c: 672: TMR3L = 0xC0;
  3229  015C1C  0EC0               	movlw	192
  3230  015C1E  6EB2               	movwf	4018,c	;volatile
  3231                           
  3232                           ;RemoteCan.c: 675: PIE3bits.RXB1IE = 1;
  3233  015C20  82A3               	bsf	4003,1,c	;volatile
  3234                           
  3235                           ;RemoteCan.c: 676: PIE3bits.RXB0IE = 1;
  3236  015C22  80A3               	bsf	4003,0,c	;volatile
  3237                           
  3238                           ;RemoteCan.c: 677: PIE2bits.TMR3IE = 1;
  3239  015C24  82A0               	bsf	4000,1,c	;volatile
  3240                           
  3241                           ;RemoteCan.c: 680: T3CON = 0x01;
  3242  015C26  0E01               	movlw	1
  3243  015C28  6EB1               	movwf	4017,c	;volatile
  3244                           
  3245                           ;RemoteCan.c: 681: LCD_clear();
  3246  015C2A  EC97  F0B1         	call	_LCD_clear	;wreg free
  3247                           
  3248                           ;RemoteCan.c: 682: INTCONbits.GIEH = 1;
  3249  015C2E  8EF2               	bsf	intcon,7,c	;volatile
  3250                           
  3251                           ;RemoteCan.c: 683: INTCONbits.GIEL = 1;
  3252  015C30  8CF2               	bsf	intcon,6,c	;volatile
  3253  015C32  0012               	return		;funcret
  3254  015C34                     __end_of_board_initialization:
  3255                           	opt stack 0
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           intcon	equ	0xFF2
  3261                           postinc0	equ	0xFEE
  3262                           wreg	equ	0xFE8
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _CANInitialize *****************
  3266 ;; Defined at:
  3267 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  propSeg         1    wreg     unsigned char 
  3270 ;;  phaseSeg1       1   31[BANK0 ] unsigned char 
  3271 ;;  phaseSeg2       1   32[BANK0 ] unsigned char 
  3272 ;;  SJW             1   33[BANK0 ] unsigned char 
  3273 ;;  BRP             1   34[BANK0 ] unsigned char 
  3274 ;;  flags           1   35[BANK0 ] enum E16887
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  propSeg         1   40[BANK0 ] unsigned char 
  3277 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3278 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3288 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3290 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3291 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;Total ram usage:       12 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    4
  3295 ;; This function calls:
  3296 ;;		_CANOperationMode
  3297 ;;		_CANSetFilter
  3298 ;;		_CANSetMask
  3299 ;; This function is called by:
  3300 ;;		_board_initialization
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text2
  3305  014AA0                     __ptext2:
  3306                           	opt stack 0
  3307  014AA0                     _CANInitialize:
  3308                           	opt stack 25
  3309                           
  3310                           ;incstack = 0
  3311                           ;CANInitialize@propSeg stored from wreg
  3312  014AA0  0100               	movlb	0	; () banked
  3313  014AA2  6F88               	movwf	CANInitialize@propSeg& (0+255),b
  3314                           
  3315                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3316                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3317                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3318  014AA4  0E80               	movlw	128
  3319  014AA6  EC42  F0B2         	call	_CANOperationMode
  3320                           
  3321                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3322  014AAA  0E00               	movlw	0
  3323  014AAC  6E70               	movwf	3952,c	;volatile
  3324                           
  3325                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3326  014AAE  0E00               	movlw	0
  3327  014AB0  6E71               	movwf	3953,c	;volatile
  3328                           
  3329                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3330  014AB2  0E00               	movlw	0
  3331  014AB4  6E72               	movwf	3954,c	;volatile
  3332                           
  3333                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3334  014AB6  0100               	movlb	0	; () banked
  3335  014AB8  4181               	rrncf	CANInitialize@SJW& (0+255),w,b
  3336  014ABA  42E8               	rrncf	wreg,f,c
  3337  014ABC  0BC0               	andlw	192
  3338  014ABE  0100               	movlb	0	; () banked
  3339  014AC0  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3343  014AC2  0100               	movlb	0	; () banked
  3344  014AC4  5181               	movf	CANInitialize@SJW& (0+255),w,b
  3345  014AC6  1270               	iorwf	3952,f,c	;volatile
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3349  014AC8  0100               	movlb	0	; () banked
  3350  014ACA  5182               	movf	CANInitialize@BRP& (0+255),w,b
  3351  014ACC  1270               	iorwf	3952,f,c	;volatile
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3355  014ACE  0100               	movlb	0	; () banked
  3356  014AD0  5188               	movf	CANInitialize@propSeg& (0+255),w,b
  3357  014AD2  1271               	iorwf	3953,f,c	;volatile
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3361  014AD4  0100               	movlb	0	; () banked
  3362  014AD6  397F               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3363  014AD8  42E8               	rrncf	wreg,f,c
  3364  014ADA  0BF8               	andlw	248
  3365  014ADC  0100               	movlb	0	; () banked
  3366  014ADE  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3370  014AE0  0100               	movlb	0	; () banked
  3371  014AE2  517F               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3372  014AE4  1271               	iorwf	3953,f,c	;volatile
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3376  014AE6  0100               	movlb	0	; () banked
  3377  014AE8  A583               	btfss	CANInitialize@flags& (0+255),2,b
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3381  014AEA  8C71               	bsf	3953,6,c	;volatile
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3385  014AEC  0100               	movlb	0	; () banked
  3386  014AEE  B183               	btfsc	CANInitialize@flags& (0+255),0,b
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3390  014AF0  8E71               	bsf	3953,7,c	;volatile
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3394                           
  3395                           ; BSR set to: 0
  3396  014AF2  0100               	movlb	0	; () banked
  3397  014AF4  5180               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3398  014AF6  1272               	iorwf	3954,f,c	;volatile
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3402  014AF8  0100               	movlb	0	; () banked
  3403  014AFA  B383               	btfsc	CANInitialize@flags& (0+255),1,b
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3407  014AFC  8C72               	bsf	3954,6,c	;volatile
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3411                           
  3412                           ; BSR set to: 0
  3413  014AFE  0100               	movlb	0	; () banked
  3414  014B00  5183               	movf	CANInitialize@flags& (0+255),w,b
  3415  014B02  0B60               	andlw	96
  3416  014B04  6E60               	movwf	3936,c	;volatile
  3417                           
  3418                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3419  014B06  0100               	movlb	0	; () banked
  3420  014B08  5183               	movf	CANInitialize@flags& (0+255),w,b
  3421  014B0A  0B10               	andlw	16
  3422  014B0C  0AFF               	xorlw	255
  3423  014B0E  B4D8               	btfsc	status,2,c
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3427  014B10  8460               	bsf	3936,2,c	;volatile
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3431  014B12  CF60 FF50          	movff	3936,3920	;volatile
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3435  014B16  0E00               	movlw	0
  3436  014B18  0100               	movlb	0	; () banked
  3437  014B1A  6F71               	movwf	CANSetMask@mask& (0+255),b
  3438  014B1C  0E00               	movlw	0
  3439  014B1E  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3440  014B20  0E00               	movlw	0
  3441  014B22  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3442  014B24  0E00               	movlw	0
  3443  014B26  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3444  014B28  0EF7               	movlw	247
  3445  014B2A  0100               	movlb	0	; () banked
  3446  014B2C  6F75               	movwf	CANSetMask@type& (0+255),b
  3447  014B2E  0E01               	movlw	1
  3448  014B30  EC21  F0A0         	call	_CANSetMask
  3449                           
  3450                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3451  014B34  0E00               	movlw	0
  3452  014B36  0100               	movlb	0	; () banked
  3453  014B38  6F71               	movwf	CANSetMask@mask& (0+255),b
  3454  014B3A  0E00               	movlw	0
  3455  014B3C  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3456  014B3E  0E00               	movlw	0
  3457  014B40  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3458  014B42  0E00               	movlw	0
  3459  014B44  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3460  014B46  0EF7               	movlw	247
  3461  014B48  0100               	movlb	0	; () banked
  3462  014B4A  6F75               	movwf	CANSetMask@type& (0+255),b
  3463  014B4C  0E02               	movlw	2
  3464  014B4E  EC21  F0A0         	call	_CANSetMask
  3465                           
  3466                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3467  014B52  D00F               	goto	l6175
  3468  014B54                     l6169:
  3469                           
  3470                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3471  014B54  0EF7               	movlw	247
  3472  014B56  0100               	movlb	0	; () banked
  3473  014B58  6F89               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3474  014B5A  D007               	goto	l6171
  3475  014B5C                     l378:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3479  014B5C  0100               	movlb	0	; () banked
  3480  014B5E  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3481                           
  3482                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3483  014B60  0100               	movlb	0	; () banked
  3484  014B62  698A               	setf	CANInitialize@FilterConfig2& (0+255),b
  3485                           
  3486                           ;inc\CANlib.h: 273: break;
  3487  014B64  D028               	goto	l6177
  3488  014B66                     l379:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3492  014B66  0100               	movlb	0	; () banked
  3493  014B68  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3494  014B6A                     l6171:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3498  014B6A  0EF7               	movlw	247
  3499  014B6C  0100               	movlb	0	; () banked
  3500  014B6E  6F8A               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;inc\CANlib.h: 278: }
  3504                           
  3505                           ;inc\CANlib.h: 277: break;
  3506  014B70  D022               	goto	l6177
  3507  014B72                     l6175:
  3508  014B72  0E9F               	movlw	159
  3509  014B74  0100               	movlb	0	; () banked
  3510  014B76  6F84               	movwf	??_CANInitialize& (0+255),b
  3511  014B78  0EFF               	movlw	255
  3512  014B7A  0100               	movlb	0	; () banked
  3513  014B7C  6F85               	movwf	(??_CANInitialize+1)& (0+255),b
  3514  014B7E  0100               	movlb	0	; () banked
  3515  014B80  5183               	movf	CANInitialize@flags& (0+255),w,b
  3516  014B82  0B60               	andlw	96
  3517  014B84  0100               	movlb	0	; () banked
  3518  014B86  6F86               	movwf	(??_CANInitialize+2)& (0+255),b
  3519  014B88  6B87               	clrf	(??_CANInitialize+3)& (0+255),b
  3520  014B8A  0100               	movlb	0	; () banked
  3521  014B8C  5184               	movf	??_CANInitialize& (0+255),w,b
  3522  014B8E  0100               	movlb	0	; () banked
  3523  014B90  1386               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3524  014B92  0100               	movlb	0	; () banked
  3525  014B94  5185               	movf	(??_CANInitialize+1)& (0+255),w,b
  3526  014B96  0100               	movlb	0	; () banked
  3527  014B98  1387               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3528                           
  3529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3530                           ; Switch size 1, requested type "space"
  3531                           ; Number of cases is 1, Range of values is 0 to 0
  3532                           ; switch strategies available:
  3533                           ; Name         Instructions Cycles
  3534                           ; simple_byte            4     3 (average)
  3535                           ;	Chosen strategy is simple_byte
  3536  014B9A  0100               	movlb	0	; () banked
  3537  014B9C  5187               	movf	(??_CANInitialize+3)& (0+255),w,b
  3538  014B9E  0A00               	xorlw	0	; case 0
  3539  014BA0  A4D8               	btfss	status,2,c
  3540  014BA2  D7E1               	goto	l379
  3541                           
  3542                           ; BSR set to: 0
  3543                           ; Switch size 1, requested type "space"
  3544                           ; Number of cases is 2, Range of values is 191 to 223
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; simple_byte            7     4 (average)
  3548                           ;	Chosen strategy is simple_byte
  3549  014BA4  0100               	movlb	0	; () banked
  3550  014BA6  5186               	movf	(??_CANInitialize+2)& (0+255),w,b
  3551  014BA8  0ABF               	xorlw	191	; case 191
  3552  014BAA  B4D8               	btfsc	status,2,c
  3553  014BAC  D7D7               	goto	l378
  3554  014BAE  0A60               	xorlw	96	; case 223
  3555  014BB0  B4D8               	btfsc	status,2,c
  3556  014BB2  D7D0               	goto	l6169
  3557  014BB4  D7D8               	goto	l379
  3558  014BB6                     l6177:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3562  014BB6  0E00               	movlw	0
  3563  014BB8  0100               	movlb	0	; () banked
  3564  014BBA  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3565  014BBC  0E00               	movlw	0
  3566  014BBE  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3567  014BC0  0E00               	movlw	0
  3568  014BC2  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3569  014BC4  0E00               	movlw	0
  3570  014BC6  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3571  014BC8  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3572  014BCC  0E00               	movlw	0
  3573  014BCE  EC00  F080         	call	_CANSetFilter
  3574                           
  3575                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3576  014BD2  0E00               	movlw	0
  3577  014BD4  0100               	movlb	0	; () banked
  3578  014BD6  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3579  014BD8  0E00               	movlw	0
  3580  014BDA  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3581  014BDC  0E00               	movlw	0
  3582  014BDE  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3583  014BE0  0E00               	movlw	0
  3584  014BE2  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3585  014BE4  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3586  014BE8  0E01               	movlw	1
  3587  014BEA  EC00  F080         	call	_CANSetFilter
  3588                           
  3589                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3590  014BEE  0E00               	movlw	0
  3591  014BF0  0100               	movlb	0	; () banked
  3592  014BF2  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3593  014BF4  0E00               	movlw	0
  3594  014BF6  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3595  014BF8  0E00               	movlw	0
  3596  014BFA  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3597  014BFC  0E00               	movlw	0
  3598  014BFE  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3599  014C00  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3600  014C04  0E02               	movlw	2
  3601  014C06  EC00  F080         	call	_CANSetFilter
  3602                           
  3603                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3604  014C0A  0E00               	movlw	0
  3605  014C0C  0100               	movlb	0	; () banked
  3606  014C0E  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3607  014C10  0E00               	movlw	0
  3608  014C12  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3609  014C14  0E00               	movlw	0
  3610  014C16  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3611  014C18  0E00               	movlw	0
  3612  014C1A  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3613  014C1C  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3614  014C20  0E03               	movlw	3
  3615  014C22  EC00  F080         	call	_CANSetFilter
  3616                           
  3617                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3618  014C26  0E00               	movlw	0
  3619  014C28  0100               	movlb	0	; () banked
  3620  014C2A  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3621  014C2C  0E00               	movlw	0
  3622  014C2E  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3623  014C30  0E00               	movlw	0
  3624  014C32  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3625  014C34  0E00               	movlw	0
  3626  014C36  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3627  014C38  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3628  014C3C  0E04               	movlw	4
  3629  014C3E  EC00  F080         	call	_CANSetFilter
  3630                           
  3631                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3632  014C42  0E00               	movlw	0
  3633  014C44  0100               	movlb	0	; () banked
  3634  014C46  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3635  014C48  0E00               	movlw	0
  3636  014C4A  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3637  014C4C  0E00               	movlw	0
  3638  014C4E  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3639  014C50  0E00               	movlw	0
  3640  014C52  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3641  014C54  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3642  014C58  0E05               	movlw	5
  3643  014C5A  EC00  F080         	call	_CANSetFilter
  3644                           
  3645                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3646  014C5E  0E00               	movlw	0
  3647  014C60  EC42  F0B2         	call	_CANOperationMode
  3648  014C64  0012               	return		;funcret
  3649  014C66                     __end_of_CANInitialize:
  3650                           	opt stack 0
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           intcon	equ	0xFF2
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _CANSetMask *****************
  3661 ;; Defined at:
  3662 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  numBuffer       1    wreg     enum E16921
  3665 ;;  mask            4   17[BANK0 ] unsigned long 
  3666 ;;  type            1   21[BANK0 ] enum E16887
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  numBuffer       1   26[BANK0 ] enum E16921
  3669 ;;  tamp            4   27[BANK0 ] unsigned long 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3679 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;Total ram usage:       14 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    3
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_CANInitialize
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text3
  3694  014042                     __ptext3:
  3695                           	opt stack 0
  3696  014042                     _CANSetMask:
  3697                           	opt stack 25
  3698                           
  3699                           ;incstack = 0
  3700                           ;CANSetMask@numBuffer stored from wreg
  3701  014042  0100               	movlb	0	; () banked
  3702  014044  6F7A               	movwf	CANSetMask@numBuffer& (0+255),b
  3703                           
  3704                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3705  014046  0100               	movlb	0	; () banked
  3706  014048  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  3707  01404A  A4D8               	btfss	status,2,c
  3708  01404C  D056               	goto	l5345
  3709                           
  3710                           ; BSR set to: 0
  3711  01404E  0100               	movlb	0	; () banked
  3712  014050  2975               	incf	CANSetMask@type& (0+255),w,b
  3713  014052  A4D8               	btfss	status,2,c
  3714  014054  D052               	goto	l5345
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;inc\CANlib.h: 644: {
  3718                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3719  014056  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3720  01405A  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3721  01405E  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3722  014062  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3723  014066  0E04               	movlw	4
  3724  014068  D006               	goto	u6030
  3725  01406A                     u6035:
  3726  01406A  0100               	movlb	0	; () banked
  3727  01406C  90D8               	bcf	status,0,c
  3728  01406E  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3729  014070  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3730  014072  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3731  014074  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3732  014076                     u6030:
  3733  014076  2EE8               	decfsz	wreg,f,c
  3734  014078  D7F8               	goto	u6035
  3735  01407A  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3736  01407E  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3737  014082  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3738  014086  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3742  01408A  0100               	movlb	0	; () banked
  3743  01408C  517B               	movf	CANSetMask@tamp& (0+255),w,b
  3744  01408E  0100               	movlb	0	; () banked
  3745  014090  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3746  014092  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3747  014094  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3748  014096  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3752  014098  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3756  01409C  0E07               	movlw	7
  3757  01409E  0100               	movlb	0	; () banked
  3758  0140A0  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3759  0140A2  0100               	movlb	0	; () banked
  3760  0140A4  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3761  0140A6  0E00               	movlw	0
  3762  0140A8  0100               	movlb	0	; () banked
  3763  0140AA  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3764  0140AC  0100               	movlb	0	; () banked
  3765  0140AE  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3766  0140B0  0E00               	movlw	0
  3767  0140B2  0100               	movlb	0	; () banked
  3768  0140B4  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3769  0140B6  0100               	movlb	0	; () banked
  3770  0140B8  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3771  0140BA  0E00               	movlw	0
  3772  0140BC  0100               	movlb	0	; () banked
  3773  0140BE  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3774  0140C0  0100               	movlb	0	; () banked
  3775  0140C2  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3779  0140C4  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3780  0140C8  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3781  0140CC  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3782  0140D0  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3783  0140D4  0E05               	movlw	5
  3784  0140D6                     u6045:
  3785  0140D6  90D8               	bcf	status,0,c
  3786  0140D8  0100               	movlb	0	; () banked
  3787  0140DA  3776               	rlcf	??_CANSetMask& (0+255),f,b
  3788  0140DC  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3789  0140DE  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3790  0140E0  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3791  0140E2  2EE8               	decfsz	wreg,f,c
  3792  0140E4  D7F8               	goto	u6045
  3793  0140E6  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3794  0140EA  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3795  0140EE  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3796  0140F2  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3800  0140F6  C07B  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3801  0140FA                     l5345:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;inc\CANlib.h: 652: }
  3805                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3806  0140FA  0E02               	movlw	2
  3807  0140FC  0100               	movlb	0	; () banked
  3808  0140FE  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3809  014100  A4D8               	btfss	status,2,c
  3810  014102  D056               	goto	l5361
  3811                           
  3812                           ; BSR set to: 0
  3813  014104  0100               	movlb	0	; () banked
  3814  014106  2975               	incf	CANSetMask@type& (0+255),w,b
  3815  014108  A4D8               	btfss	status,2,c
  3816  01410A  D052               	goto	l5361
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;inc\CANlib.h: 655: {
  3820                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3821  01410C  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3822  014110  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3823  014114  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3824  014118  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3825  01411C  0E04               	movlw	4
  3826  01411E  D006               	goto	u6070
  3827  014120                     u6075:
  3828  014120  0100               	movlb	0	; () banked
  3829  014122  90D8               	bcf	status,0,c
  3830  014124  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3831  014126  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3832  014128  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3833  01412A  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3834  01412C                     u6070:
  3835  01412C  2EE8               	decfsz	wreg,f,c
  3836  01412E  D7F8               	goto	u6075
  3837  014130  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3838  014134  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3839  014138  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3840  01413C  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3844  014140  0100               	movlb	0	; () banked
  3845  014142  517B               	movf	CANSetMask@tamp& (0+255),w,b
  3846  014144  0100               	movlb	0	; () banked
  3847  014146  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3848  014148  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3849  01414A  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3850  01414C  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3854  01414E  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3858  014152  0E07               	movlw	7
  3859  014154  0100               	movlb	0	; () banked
  3860  014156  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3861  014158  0100               	movlb	0	; () banked
  3862  01415A  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3863  01415C  0E00               	movlw	0
  3864  01415E  0100               	movlb	0	; () banked
  3865  014160  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3866  014162  0100               	movlb	0	; () banked
  3867  014164  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3868  014166  0E00               	movlw	0
  3869  014168  0100               	movlb	0	; () banked
  3870  01416A  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3871  01416C  0100               	movlb	0	; () banked
  3872  01416E  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3873  014170  0E00               	movlw	0
  3874  014172  0100               	movlb	0	; () banked
  3875  014174  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3876  014176  0100               	movlb	0	; () banked
  3877  014178  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3881  01417A  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3882  01417E  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3883  014182  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3884  014186  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3885  01418A  0E05               	movlw	5
  3886  01418C                     u6085:
  3887  01418C  90D8               	bcf	status,0,c
  3888  01418E  0100               	movlb	0	; () banked
  3889  014190  3776               	rlcf	??_CANSetMask& (0+255),f,b
  3890  014192  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3891  014194  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3892  014196  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3893  014198  2EE8               	decfsz	wreg,f,c
  3894  01419A  D7F8               	goto	u6085
  3895  01419C  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3896  0141A0  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3897  0141A4  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3898  0141A8  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3902  0141AC  C07B  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3903  0141B0                     l5361:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;inc\CANlib.h: 663: }
  3907                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3908  0141B0  0100               	movlb	0	; () banked
  3909  0141B2  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  3910  0141B4  A4D8               	btfss	status,2,c
  3911  0141B6  D087               	goto	l5393
  3912                           
  3913                           ; BSR set to: 0
  3914  0141B8  0EF7               	movlw	247
  3915  0141BA  0100               	movlb	0	; () banked
  3916  0141BC  1975               	xorwf	CANSetMask@type& (0+255),w,b
  3917  0141BE  A4D8               	btfss	status,2,c
  3918  0141C0  D082               	goto	l5393
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;inc\CANlib.h: 666: {
  3922                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3923  0141C2  0100               	movlb	0	; () banked
  3924  0141C4  5171               	movf	CANSetMask@mask& (0+255),w,b
  3925  0141C6  0100               	movlb	0	; () banked
  3926  0141C8  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3927  0141CA  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3928  0141CC  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3929  0141CE  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3933  0141D0  C07B  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3937  0141D4  0E00               	movlw	0
  3938  0141D6  0100               	movlb	0	; () banked
  3939  0141D8  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3940  0141DA  0100               	movlb	0	; () banked
  3941  0141DC  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3942  0141DE  0EFF               	movlw	255
  3943  0141E0  0100               	movlb	0	; () banked
  3944  0141E2  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3945  0141E4  0100               	movlb	0	; () banked
  3946  0141E6  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3947  0141E8  0E00               	movlw	0
  3948  0141EA  0100               	movlb	0	; () banked
  3949  0141EC  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3950  0141EE  0100               	movlb	0	; () banked
  3951  0141F0  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3952  0141F2  0E00               	movlw	0
  3953  0141F4  0100               	movlb	0	; () banked
  3954  0141F6  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3955  0141F8  0100               	movlb	0	; () banked
  3956  0141FA  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3960  0141FC  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3961  014200  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3962  014204  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3963  014208  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3964  01420C  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  3965  014210  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  3966  014214  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  3967  014218  0100               	movlb	0	; () banked
  3968  01421A  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  3969  01421C  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3970  014220  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3971  014224  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3972  014228  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3976  01422C  C07B  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3980  014230  0100               	movlb	0	; () banked
  3981  014232  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3982  014234  D003               	goto	l452
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3986  014236  010F               	movlb	15	; () banked
  3987  014238  8119               	bsf	25,0,b	;volatile
  3988  01423A  D002               	goto	l453
  3989  01423C                     l452:
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;inc\CANlib.h: 676: else
  3993                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3994  01423C  010F               	movlb	15	; () banked
  3995  01423E  9119               	bcf	25,0,b	;volatile
  3996  014240                     l453:
  3997                           
  3998                           ; BSR set to: 15
  3999                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4000  014240  0100               	movlb	0	; () banked
  4001  014242  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4002  014244  D003               	goto	l454
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4006  014246  010F               	movlb	15	; () banked
  4007  014248  8319               	bsf	25,1,b	;volatile
  4008  01424A  D002               	goto	l455
  4009  01424C                     l454:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 681: else
  4013                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4014  01424C  010F               	movlb	15	; () banked
  4015  01424E  9319               	bcf	25,1,b	;volatile
  4016  014250                     l455:
  4017                           
  4018                           ; BSR set to: 15
  4019                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4020  014250  0100               	movlb	0	; () banked
  4021  014252  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4022  014254  D003               	goto	l456
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4026  014256  010F               	movlb	15	; () banked
  4027  014258  8B19               	bsf	25,5,b	;volatile
  4028  01425A  D002               	goto	l457
  4029  01425C                     l456:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;inc\CANlib.h: 686: else
  4033                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4034  01425C  010F               	movlb	15	; () banked
  4035  01425E  9B19               	bcf	25,5,b	;volatile
  4036  014260                     l457:
  4037                           
  4038                           ; BSR set to: 15
  4039                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4040  014260  0100               	movlb	0	; () banked
  4041  014262  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4042  014264  D003               	goto	l458
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4046  014266  010F               	movlb	15	; () banked
  4047  014268  8D19               	bsf	25,6,b	;volatile
  4048  01426A  D002               	goto	l459
  4049  01426C                     l458:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;inc\CANlib.h: 691: else
  4053                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4054  01426C  010F               	movlb	15	; () banked
  4055  01426E  9D19               	bcf	25,6,b	;volatile
  4056  014270                     l459:
  4057                           
  4058                           ; BSR set to: 15
  4059                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4060  014270  0100               	movlb	0	; () banked
  4061  014272  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4062  014274  D003               	goto	l460
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4066  014276  010F               	movlb	15	; () banked
  4067  014278  8F19               	bsf	25,7,b	;volatile
  4068  01427A  D002               	goto	l5387
  4069  01427C                     l460:
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;inc\CANlib.h: 696: else
  4073                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4074  01427C  010F               	movlb	15	; () banked
  4075  01427E  9F19               	bcf	25,7,b	;volatile
  4076  014280                     l5387:
  4077                           
  4078                           ; BSR set to: 15
  4079                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4080  014280  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4081  014284  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4082  014288  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4083  01428C  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4084  014290  0E16               	movlw	22
  4085  014292  D006               	goto	u6160
  4086  014294                     u6165:
  4087  014294  0100               	movlb	0	; () banked
  4088  014296  90D8               	bcf	status,0,c
  4089  014298  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4090  01429A  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4091  01429C  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4092  01429E  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4093  0142A0                     u6160:
  4094  0142A0  2EE8               	decfsz	wreg,f,c
  4095  0142A2  D7F8               	goto	u6165
  4096  0142A4  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4097  0142A8  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4098  0142AC  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4099  0142B0  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4103  0142B4  0100               	movlb	0	; () banked
  4104  0142B6  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4105  0142B8  0100               	movlb	0	; () banked
  4106  0142BA  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4107  0142BC  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4108  0142BE  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4109  0142C0  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4113  0142C2  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4114  0142C6                     l5393:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 702: }
  4118                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4119  0142C6  0E02               	movlw	2
  4120  0142C8  0100               	movlb	0	; () banked
  4121  0142CA  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4122  0142CC  A4D8               	btfss	status,2,c
  4123  0142CE  0012               	return	
  4124                           
  4125                           ; BSR set to: 0
  4126  0142D0  0EF7               	movlw	247
  4127  0142D2  0100               	movlb	0	; () banked
  4128  0142D4  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4129  0142D6  A4D8               	btfss	status,2,c
  4130  0142D8  0012               	return	
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 705: {
  4134                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4135  0142DA  0100               	movlb	0	; () banked
  4136  0142DC  5171               	movf	CANSetMask@mask& (0+255),w,b
  4137  0142DE  0100               	movlb	0	; () banked
  4138  0142E0  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4139  0142E2  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4140  0142E4  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4141  0142E6  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4145  0142E8  C07B  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4149  0142EC  0E00               	movlw	0
  4150  0142EE  0100               	movlb	0	; () banked
  4151  0142F0  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4152  0142F2  0100               	movlb	0	; () banked
  4153  0142F4  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4154  0142F6  0EFF               	movlw	255
  4155  0142F8  0100               	movlb	0	; () banked
  4156  0142FA  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4157  0142FC  0100               	movlb	0	; () banked
  4158  0142FE  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4159  014300  0E00               	movlw	0
  4160  014302  0100               	movlb	0	; () banked
  4161  014304  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4162  014306  0100               	movlb	0	; () banked
  4163  014308  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4164  01430A  0E00               	movlw	0
  4165  01430C  0100               	movlb	0	; () banked
  4166  01430E  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4167  014310  0100               	movlb	0	; () banked
  4168  014312  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4172  014314  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4173  014318  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4174  01431C  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4175  014320  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4176  014324  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4177  014328  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4178  01432C  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4179  014330  0100               	movlb	0	; () banked
  4180  014332  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4181  014334  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4182  014338  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4183  01433C  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4184  014340  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4188  014344  C07B  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4192  014348  0100               	movlb	0	; () banked
  4193  01434A  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4194  01434C  D003               	goto	l463
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4198  01434E  010F               	movlb	15	; () banked
  4199  014350  811D               	bsf	29,0,b	;volatile
  4200  014352  D002               	goto	l464
  4201  014354                     l463:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 715: else
  4205                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4206  014354  010F               	movlb	15	; () banked
  4207  014356  911D               	bcf	29,0,b	;volatile
  4208  014358                     l464:
  4209                           
  4210                           ; BSR set to: 15
  4211                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4212  014358  0100               	movlb	0	; () banked
  4213  01435A  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4214  01435C  D003               	goto	l465
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4218  01435E  010F               	movlb	15	; () banked
  4219  014360  831D               	bsf	29,1,b	;volatile
  4220  014362  D002               	goto	l466
  4221  014364                     l465:
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;inc\CANlib.h: 720: else
  4225                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4226  014364  010F               	movlb	15	; () banked
  4227  014366  931D               	bcf	29,1,b	;volatile
  4228  014368                     l466:
  4229                           
  4230                           ; BSR set to: 15
  4231                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4232  014368  0100               	movlb	0	; () banked
  4233  01436A  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4234  01436C  D003               	goto	l467
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4238  01436E  010F               	movlb	15	; () banked
  4239  014370  8B1D               	bsf	29,5,b	;volatile
  4240  014372  D002               	goto	l468
  4241  014374                     l467:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 725: else
  4245                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4246  014374  010F               	movlb	15	; () banked
  4247  014376  9B1D               	bcf	29,5,b	;volatile
  4248  014378                     l468:
  4249                           
  4250                           ; BSR set to: 15
  4251                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4252  014378  0100               	movlb	0	; () banked
  4253  01437A  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4254  01437C  D003               	goto	l469
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4258  01437E  010F               	movlb	15	; () banked
  4259  014380  8D1D               	bsf	29,6,b	;volatile
  4260  014382  D002               	goto	l470
  4261  014384                     l469:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;inc\CANlib.h: 730: else
  4265                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4266  014384  010F               	movlb	15	; () banked
  4267  014386  9D1D               	bcf	29,6,b	;volatile
  4268  014388                     l470:
  4269                           
  4270                           ; BSR set to: 15
  4271                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4272  014388  0100               	movlb	0	; () banked
  4273  01438A  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4274  01438C  D003               	goto	l471
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4278  01438E  010F               	movlb	15	; () banked
  4279  014390  8F1D               	bsf	29,7,b	;volatile
  4280  014392  D002               	goto	l5419
  4281  014394                     l471:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 735: else
  4285                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4286  014394  010F               	movlb	15	; () banked
  4287  014396  9F1D               	bcf	29,7,b	;volatile
  4288  014398                     l5419:
  4289                           
  4290                           ; BSR set to: 15
  4291                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4292  014398  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4293  01439C  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4294  0143A0  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4295  0143A4  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4296  0143A8  0E16               	movlw	22
  4297  0143AA  D006               	goto	u6240
  4298  0143AC                     u6245:
  4299  0143AC  0100               	movlb	0	; () banked
  4300  0143AE  90D8               	bcf	status,0,c
  4301  0143B0  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4302  0143B2  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4303  0143B4  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4304  0143B6  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4305  0143B8                     u6240:
  4306  0143B8  2EE8               	decfsz	wreg,f,c
  4307  0143BA  D7F8               	goto	u6245
  4308  0143BC  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4309  0143C0  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4310  0143C4  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4311  0143C8  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4315  0143CC  0100               	movlb	0	; () banked
  4316  0143CE  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4317  0143D0  0100               	movlb	0	; () banked
  4318  0143D2  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4319  0143D4  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4320  0143D6  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4321  0143D8  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4325  0143DA  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4326  0143DE  0012               	return	
  4327  0143E0                     __end_of_CANSetMask:
  4328                           	opt stack 0
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           intcon	equ	0xFF2
  4334                           postinc0	equ	0xFEE
  4335                           wreg	equ	0xFE8
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _CANSetFilter *****************
  4339 ;; Defined at:
  4340 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  numBuffer       1    wreg     enum E16924
  4343 ;;  filter          4   17[BANK0 ] unsigned long 
  4344 ;;  type            1   21[BANK0 ] enum E16887
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  numBuffer       1   26[BANK0 ] enum E16924
  4347 ;;  tamp            4   27[BANK0 ] unsigned long 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;		None               void
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4357 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4361 ;;Total ram usage:       14 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    3
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_CANInitialize
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text4
  4372  010000                     __ptext4:
  4373                           	opt stack 0
  4374  010000                     _CANSetFilter:
  4375                           	opt stack 25
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;incstack = 0
  4379                           ;CANSetFilter@numBuffer stored from wreg
  4380  010000  0100               	movlb	0	; () banked
  4381  010002  6F7A               	movwf	CANSetFilter@numBuffer& (0+255),b
  4382                           
  4383                           ;inc\CANlib.h: 750: unsigned long tamp;
  4384                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4385  010004  0100               	movlb	0	; () banked
  4386  010006  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4387  010008  0100               	movlb	0	; () banked
  4388  01000A  A4D8               	btfss	status,2,c
  4389  01000C  D058               	goto	l5443
  4390                           
  4391                           ; BSR set to: 0
  4392  01000E  0100               	movlb	0	; () banked
  4393  010010  2975               	incf	CANSetFilter@type& (0+255),w,b
  4394  010012  A4D8               	btfss	status,2,c
  4395  010014  D054               	goto	l5443
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 753: {
  4399                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4400  010016  010F               	movlb	15	; () banked
  4401  010018  9701               	bcf	1,3,b	;volatile
  4402                           
  4403                           ; BSR set to: 15
  4404                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4405  01001A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4406  01001E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4407  010022  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4408  010026  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4409  01002A  0E04               	movlw	4
  4410  01002C  D006               	goto	u6270
  4411  01002E                     u6275:
  4412  01002E  0100               	movlb	0	; () banked
  4413  010030  90D8               	bcf	status,0,c
  4414  010032  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4415  010034  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4416  010036  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4417  010038  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4418  01003A                     u6270:
  4419  01003A  2EE8               	decfsz	wreg,f,c
  4420  01003C  D7F8               	goto	u6275
  4421  01003E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4422  010042  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4423  010046  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4424  01004A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4428  01004E  0100               	movlb	0	; () banked
  4429  010050  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4430  010052  0100               	movlb	0	; () banked
  4431  010054  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4432  010056  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4433  010058  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4434  01005A  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4438  01005C  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4442  010060  0E07               	movlw	7
  4443  010062  0100               	movlb	0	; () banked
  4444  010064  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4445  010066  0100               	movlb	0	; () banked
  4446  010068  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4447  01006A  0E00               	movlw	0
  4448  01006C  0100               	movlb	0	; () banked
  4449  01006E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4450  010070  0100               	movlb	0	; () banked
  4451  010072  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4452  010074  0E00               	movlw	0
  4453  010076  0100               	movlb	0	; () banked
  4454  010078  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4455  01007A  0100               	movlb	0	; () banked
  4456  01007C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4457  01007E  0E00               	movlw	0
  4458  010080  0100               	movlb	0	; () banked
  4459  010082  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4460  010084  0100               	movlb	0	; () banked
  4461  010086  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4465  010088  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4466  01008C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4467  010090  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4468  010094  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4469  010098  0E05               	movlw	5
  4470  01009A                     u6285:
  4471  01009A  90D8               	bcf	status,0,c
  4472  01009C  0100               	movlb	0	; () banked
  4473  01009E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4474  0100A0  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4475  0100A2  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4476  0100A4  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4477  0100A6  2EE8               	decfsz	wreg,f,c
  4478  0100A8  D7F8               	goto	u6285
  4479  0100AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4480  0100AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4481  0100B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4482  0100B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4486  0100BA  C07B  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4487  0100BE                     l5443:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 763: }
  4491                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4492  0100BE  0100               	movlb	0	; () banked
  4493  0100C0  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4494  0100C2  A4D8               	btfss	status,2,c
  4495  0100C4  D058               	goto	l5461
  4496                           
  4497                           ; BSR set to: 0
  4498  0100C6  0100               	movlb	0	; () banked
  4499  0100C8  2975               	incf	CANSetFilter@type& (0+255),w,b
  4500  0100CA  A4D8               	btfss	status,2,c
  4501  0100CC  D054               	goto	l5461
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;inc\CANlib.h: 766: {
  4505                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4506  0100CE  010F               	movlb	15	; () banked
  4507  0100D0  9705               	bcf	5,3,b	;volatile
  4508                           
  4509                           ; BSR set to: 15
  4510                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4511  0100D2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4512  0100D6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4513  0100DA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4514  0100DE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4515  0100E2  0E04               	movlw	4
  4516  0100E4  D006               	goto	u6310
  4517  0100E6                     u6315:
  4518  0100E6  0100               	movlb	0	; () banked
  4519  0100E8  90D8               	bcf	status,0,c
  4520  0100EA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4521  0100EC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4522  0100EE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4523  0100F0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4524  0100F2                     u6310:
  4525  0100F2  2EE8               	decfsz	wreg,f,c
  4526  0100F4  D7F8               	goto	u6315
  4527  0100F6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4528  0100FA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4529  0100FE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4530  010102  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4534  010106  0100               	movlb	0	; () banked
  4535  010108  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4536  01010A  0100               	movlb	0	; () banked
  4537  01010C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4538  01010E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4539  010110  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4540  010112  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4544  010114  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4548  010118  0E07               	movlw	7
  4549  01011A  0100               	movlb	0	; () banked
  4550  01011C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4551  01011E  0100               	movlb	0	; () banked
  4552  010120  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4553  010122  0E00               	movlw	0
  4554  010124  0100               	movlb	0	; () banked
  4555  010126  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4556  010128  0100               	movlb	0	; () banked
  4557  01012A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4558  01012C  0E00               	movlw	0
  4559  01012E  0100               	movlb	0	; () banked
  4560  010130  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4561  010132  0100               	movlb	0	; () banked
  4562  010134  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4563  010136  0E00               	movlw	0
  4564  010138  0100               	movlb	0	; () banked
  4565  01013A  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4566  01013C  0100               	movlb	0	; () banked
  4567  01013E  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4571  010140  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4572  010144  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4573  010148  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4574  01014C  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4575  010150  0E05               	movlw	5
  4576  010152                     u6325:
  4577  010152  90D8               	bcf	status,0,c
  4578  010154  0100               	movlb	0	; () banked
  4579  010156  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4580  010158  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4581  01015A  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4582  01015C  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4583  01015E  2EE8               	decfsz	wreg,f,c
  4584  010160  D7F8               	goto	u6325
  4585  010162  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4586  010166  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4587  01016A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4588  01016E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4592  010172  C07B  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4593  010176                     l5461:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;inc\CANlib.h: 776: }
  4597                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4598  010176  0E02               	movlw	2
  4599  010178  0100               	movlb	0	; () banked
  4600  01017A  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4601  01017C  A4D8               	btfss	status,2,c
  4602  01017E  D058               	goto	l5479
  4603                           
  4604                           ; BSR set to: 0
  4605  010180  0100               	movlb	0	; () banked
  4606  010182  2975               	incf	CANSetFilter@type& (0+255),w,b
  4607  010184  A4D8               	btfss	status,2,c
  4608  010186  D054               	goto	l5479
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 779: {
  4612                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4613  010188  010F               	movlb	15	; () banked
  4614  01018A  9709               	bcf	9,3,b	;volatile
  4615                           
  4616                           ; BSR set to: 15
  4617                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4618  01018C  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4619  010190  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4620  010194  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4621  010198  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4622  01019C  0E04               	movlw	4
  4623  01019E  D006               	goto	u6350
  4624  0101A0                     u6355:
  4625  0101A0  0100               	movlb	0	; () banked
  4626  0101A2  90D8               	bcf	status,0,c
  4627  0101A4  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4628  0101A6  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4629  0101A8  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4630  0101AA  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4631  0101AC                     u6350:
  4632  0101AC  2EE8               	decfsz	wreg,f,c
  4633  0101AE  D7F8               	goto	u6355
  4634  0101B0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4635  0101B4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4636  0101B8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4637  0101BC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4641  0101C0  0100               	movlb	0	; () banked
  4642  0101C2  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4643  0101C4  0100               	movlb	0	; () banked
  4644  0101C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4645  0101C8  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4646  0101CA  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4647  0101CC  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4651  0101CE  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4655  0101D2  0E07               	movlw	7
  4656  0101D4  0100               	movlb	0	; () banked
  4657  0101D6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4658  0101D8  0100               	movlb	0	; () banked
  4659  0101DA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4660  0101DC  0E00               	movlw	0
  4661  0101DE  0100               	movlb	0	; () banked
  4662  0101E0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4663  0101E2  0100               	movlb	0	; () banked
  4664  0101E4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4665  0101E6  0E00               	movlw	0
  4666  0101E8  0100               	movlb	0	; () banked
  4667  0101EA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4668  0101EC  0100               	movlb	0	; () banked
  4669  0101EE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4670  0101F0  0E00               	movlw	0
  4671  0101F2  0100               	movlb	0	; () banked
  4672  0101F4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4673  0101F6  0100               	movlb	0	; () banked
  4674  0101F8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4678  0101FA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4679  0101FE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4680  010202  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4681  010206  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4682  01020A  0E05               	movlw	5
  4683  01020C                     u6365:
  4684  01020C  90D8               	bcf	status,0,c
  4685  01020E  0100               	movlb	0	; () banked
  4686  010210  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4687  010212  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4688  010214  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4689  010216  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4690  010218  2EE8               	decfsz	wreg,f,c
  4691  01021A  D7F8               	goto	u6365
  4692  01021C  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4693  010220  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4694  010224  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4695  010228  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4699  01022C  C07B  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4700  010230                     l5479:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;inc\CANlib.h: 789: }
  4704                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4705  010230  0E03               	movlw	3
  4706  010232  0100               	movlb	0	; () banked
  4707  010234  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4708  010236  A4D8               	btfss	status,2,c
  4709  010238  D058               	goto	l5497
  4710                           
  4711                           ; BSR set to: 0
  4712  01023A  0100               	movlb	0	; () banked
  4713  01023C  2975               	incf	CANSetFilter@type& (0+255),w,b
  4714  01023E  A4D8               	btfss	status,2,c
  4715  010240  D054               	goto	l5497
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;inc\CANlib.h: 792: {
  4719                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4720  010242  010F               	movlb	15	; () banked
  4721  010244  970D               	bcf	13,3,b	;volatile
  4722                           
  4723                           ; BSR set to: 15
  4724                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4725  010246  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4726  01024A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4727  01024E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4728  010252  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4729  010256  0E04               	movlw	4
  4730  010258  D006               	goto	u6390
  4731  01025A                     u6395:
  4732  01025A  0100               	movlb	0	; () banked
  4733  01025C  90D8               	bcf	status,0,c
  4734  01025E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4735  010260  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4736  010262  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4737  010264  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4738  010266                     u6390:
  4739  010266  2EE8               	decfsz	wreg,f,c
  4740  010268  D7F8               	goto	u6395
  4741  01026A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4742  01026E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4743  010272  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4744  010276  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4748  01027A  0100               	movlb	0	; () banked
  4749  01027C  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4750  01027E  0100               	movlb	0	; () banked
  4751  010280  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4752  010282  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4753  010284  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4754  010286  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4758  010288  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4762  01028C  0E07               	movlw	7
  4763  01028E  0100               	movlb	0	; () banked
  4764  010290  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4765  010292  0100               	movlb	0	; () banked
  4766  010294  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4767  010296  0E00               	movlw	0
  4768  010298  0100               	movlb	0	; () banked
  4769  01029A  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4770  01029C  0100               	movlb	0	; () banked
  4771  01029E  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4772  0102A0  0E00               	movlw	0
  4773  0102A2  0100               	movlb	0	; () banked
  4774  0102A4  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4775  0102A6  0100               	movlb	0	; () banked
  4776  0102A8  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4777  0102AA  0E00               	movlw	0
  4778  0102AC  0100               	movlb	0	; () banked
  4779  0102AE  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4780  0102B0  0100               	movlb	0	; () banked
  4781  0102B2  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4785  0102B4  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4786  0102B8  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4787  0102BC  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4788  0102C0  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4789  0102C4  0E05               	movlw	5
  4790  0102C6                     u6405:
  4791  0102C6  90D8               	bcf	status,0,c
  4792  0102C8  0100               	movlb	0	; () banked
  4793  0102CA  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4794  0102CC  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4795  0102CE  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4796  0102D0  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4797  0102D2  2EE8               	decfsz	wreg,f,c
  4798  0102D4  D7F8               	goto	u6405
  4799  0102D6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4800  0102DA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4801  0102DE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4802  0102E2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4806  0102E6  C07B  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4807  0102EA                     l5497:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;inc\CANlib.h: 802: }
  4811                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4812  0102EA  0E04               	movlw	4
  4813  0102EC  0100               	movlb	0	; () banked
  4814  0102EE  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4815  0102F0  A4D8               	btfss	status,2,c
  4816  0102F2  D058               	goto	l5515
  4817                           
  4818                           ; BSR set to: 0
  4819  0102F4  0100               	movlb	0	; () banked
  4820  0102F6  2975               	incf	CANSetFilter@type& (0+255),w,b
  4821  0102F8  A4D8               	btfss	status,2,c
  4822  0102FA  D054               	goto	l5515
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;inc\CANlib.h: 805: {
  4826                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4827  0102FC  010F               	movlb	15	; () banked
  4828  0102FE  9711               	bcf	17,3,b	;volatile
  4829                           
  4830                           ; BSR set to: 15
  4831                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4832  010300  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4833  010304  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4834  010308  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4835  01030C  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4836  010310  0E04               	movlw	4
  4837  010312  D006               	goto	u6430
  4838  010314                     u6435:
  4839  010314  0100               	movlb	0	; () banked
  4840  010316  90D8               	bcf	status,0,c
  4841  010318  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4842  01031A  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4843  01031C  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4844  01031E  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4845  010320                     u6430:
  4846  010320  2EE8               	decfsz	wreg,f,c
  4847  010322  D7F8               	goto	u6435
  4848  010324  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4849  010328  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4850  01032C  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4851  010330  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4855  010334  0100               	movlb	0	; () banked
  4856  010336  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4857  010338  0100               	movlb	0	; () banked
  4858  01033A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4859  01033C  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4860  01033E  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4861  010340  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4865  010342  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4869  010346  0E07               	movlw	7
  4870  010348  0100               	movlb	0	; () banked
  4871  01034A  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4872  01034C  0100               	movlb	0	; () banked
  4873  01034E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4874  010350  0E00               	movlw	0
  4875  010352  0100               	movlb	0	; () banked
  4876  010354  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4877  010356  0100               	movlb	0	; () banked
  4878  010358  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4879  01035A  0E00               	movlw	0
  4880  01035C  0100               	movlb	0	; () banked
  4881  01035E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4882  010360  0100               	movlb	0	; () banked
  4883  010362  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4884  010364  0E00               	movlw	0
  4885  010366  0100               	movlb	0	; () banked
  4886  010368  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4887  01036A  0100               	movlb	0	; () banked
  4888  01036C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4892  01036E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4893  010372  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4894  010376  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4895  01037A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4896  01037E  0E05               	movlw	5
  4897  010380                     u6445:
  4898  010380  90D8               	bcf	status,0,c
  4899  010382  0100               	movlb	0	; () banked
  4900  010384  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4901  010386  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4902  010388  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4903  01038A  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4904  01038C  2EE8               	decfsz	wreg,f,c
  4905  01038E  D7F8               	goto	u6445
  4906  010390  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4907  010394  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4908  010398  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4909  01039C  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4913  0103A0  C07B  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4914  0103A4                     l5515:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;inc\CANlib.h: 815: }
  4918                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4919  0103A4  0E05               	movlw	5
  4920  0103A6  0100               	movlb	0	; () banked
  4921  0103A8  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4922  0103AA  A4D8               	btfss	status,2,c
  4923  0103AC  D058               	goto	l5533
  4924                           
  4925                           ; BSR set to: 0
  4926  0103AE  0100               	movlb	0	; () banked
  4927  0103B0  2975               	incf	CANSetFilter@type& (0+255),w,b
  4928  0103B2  A4D8               	btfss	status,2,c
  4929  0103B4  D054               	goto	l5533
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;inc\CANlib.h: 818: {
  4933                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4934  0103B6  010F               	movlb	15	; () banked
  4935  0103B8  9715               	bcf	21,3,b	;volatile
  4936                           
  4937                           ; BSR set to: 15
  4938                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4939  0103BA  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4940  0103BE  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4941  0103C2  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4942  0103C6  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4943  0103CA  0E04               	movlw	4
  4944  0103CC  D006               	goto	u6470
  4945  0103CE                     u6475:
  4946  0103CE  0100               	movlb	0	; () banked
  4947  0103D0  90D8               	bcf	status,0,c
  4948  0103D2  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4949  0103D4  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4950  0103D6  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4951  0103D8  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4952  0103DA                     u6470:
  4953  0103DA  2EE8               	decfsz	wreg,f,c
  4954  0103DC  D7F8               	goto	u6475
  4955  0103DE  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4956  0103E2  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4957  0103E6  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4958  0103EA  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4962  0103EE  0100               	movlb	0	; () banked
  4963  0103F0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4964  0103F2  0100               	movlb	0	; () banked
  4965  0103F4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4966  0103F6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4967  0103F8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4968  0103FA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4972  0103FC  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4976  010400  0E07               	movlw	7
  4977  010402  0100               	movlb	0	; () banked
  4978  010404  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4979  010406  0100               	movlb	0	; () banked
  4980  010408  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4981  01040A  0E00               	movlw	0
  4982  01040C  0100               	movlb	0	; () banked
  4983  01040E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4984  010410  0100               	movlb	0	; () banked
  4985  010412  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4986  010414  0E00               	movlw	0
  4987  010416  0100               	movlb	0	; () banked
  4988  010418  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4989  01041A  0100               	movlb	0	; () banked
  4990  01041C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4991  01041E  0E00               	movlw	0
  4992  010420  0100               	movlb	0	; () banked
  4993  010422  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4994  010424  0100               	movlb	0	; () banked
  4995  010426  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4999  010428  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5000  01042C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5001  010430  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5002  010434  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5003  010438  0E05               	movlw	5
  5004  01043A                     u6485:
  5005  01043A  90D8               	bcf	status,0,c
  5006  01043C  0100               	movlb	0	; () banked
  5007  01043E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5008  010440  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5009  010442  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5010  010444  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5011  010446  2EE8               	decfsz	wreg,f,c
  5012  010448  D7F8               	goto	u6485
  5013  01044A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5014  01044E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5015  010452  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5016  010456  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5020  01045A  C07B  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5021  01045E                     l5533:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;inc\CANlib.h: 828: }
  5025                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5026  01045E  0100               	movlb	0	; () banked
  5027  010460  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5028  010462  0100               	movlb	0	; () banked
  5029  010464  A4D8               	btfss	status,2,c
  5030  010466  D089               	goto	l5567
  5031                           
  5032                           ; BSR set to: 0
  5033  010468  0EF7               	movlw	247
  5034  01046A  0100               	movlb	0	; () banked
  5035  01046C  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5036  01046E  A4D8               	btfss	status,2,c
  5037  010470  D084               	goto	l5567
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;inc\CANlib.h: 832: {
  5041                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5042  010472  010F               	movlb	15	; () banked
  5043  010474  8701               	bsf	1,3,b	;volatile
  5044                           
  5045                           ; BSR set to: 15
  5046                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5047  010476  0100               	movlb	0	; () banked
  5048  010478  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5049  01047A  0100               	movlb	0	; () banked
  5050  01047C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5051  01047E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5052  010480  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5053  010482  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5057  010484  C07B  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5061  010488  0E00               	movlw	0
  5062  01048A  0100               	movlb	0	; () banked
  5063  01048C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5064  01048E  0100               	movlb	0	; () banked
  5065  010490  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5066  010492  0EFF               	movlw	255
  5067  010494  0100               	movlb	0	; () banked
  5068  010496  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5069  010498  0100               	movlb	0	; () banked
  5070  01049A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5071  01049C  0E00               	movlw	0
  5072  01049E  0100               	movlb	0	; () banked
  5073  0104A0  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5074  0104A2  0100               	movlb	0	; () banked
  5075  0104A4  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5076  0104A6  0E00               	movlw	0
  5077  0104A8  0100               	movlb	0	; () banked
  5078  0104AA  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5079  0104AC  0100               	movlb	0	; () banked
  5080  0104AE  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5084  0104B0  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5085  0104B4  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5086  0104B8  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5087  0104BC  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5088  0104C0  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5089  0104C4  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5090  0104C8  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5091  0104CC  0100               	movlb	0	; () banked
  5092  0104CE  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5093  0104D0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5094  0104D4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5095  0104D8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5096  0104DC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5100  0104E0  C07B  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5104  0104E4  0100               	movlb	0	; () banked
  5105  0104E6  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5106  0104E8  D003               	goto	l483
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5110  0104EA  010F               	movlb	15	; () banked
  5111  0104EC  8101               	bsf	1,0,b	;volatile
  5112  0104EE  D002               	goto	l484
  5113  0104F0                     l483:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 844: else
  5117                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5118  0104F0  010F               	movlb	15	; () banked
  5119  0104F2  9101               	bcf	1,0,b	;volatile
  5120  0104F4                     l484:
  5121                           
  5122                           ; BSR set to: 15
  5123                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5124  0104F4  0100               	movlb	0	; () banked
  5125  0104F6  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5126  0104F8  D003               	goto	l485
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5130  0104FA  010F               	movlb	15	; () banked
  5131  0104FC  8301               	bsf	1,1,b	;volatile
  5132  0104FE  D002               	goto	l486
  5133  010500                     l485:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;inc\CANlib.h: 849: else
  5137                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5138  010500  010F               	movlb	15	; () banked
  5139  010502  9301               	bcf	1,1,b	;volatile
  5140  010504                     l486:
  5141                           
  5142                           ; BSR set to: 15
  5143                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5144  010504  0100               	movlb	0	; () banked
  5145  010506  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5146  010508  D003               	goto	l487
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5150  01050A  010F               	movlb	15	; () banked
  5151  01050C  8B01               	bsf	1,5,b	;volatile
  5152  01050E  D002               	goto	l488
  5153  010510                     l487:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;inc\CANlib.h: 854: else
  5157                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5158  010510  010F               	movlb	15	; () banked
  5159  010512  9B01               	bcf	1,5,b	;volatile
  5160  010514                     l488:
  5161                           
  5162                           ; BSR set to: 15
  5163                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5164  010514  0100               	movlb	0	; () banked
  5165  010516  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5166  010518  D003               	goto	l489
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5170  01051A  010F               	movlb	15	; () banked
  5171  01051C  8D01               	bsf	1,6,b	;volatile
  5172  01051E  D002               	goto	l490
  5173  010520                     l489:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;inc\CANlib.h: 859: else
  5177                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5178  010520  010F               	movlb	15	; () banked
  5179  010522  9D01               	bcf	1,6,b	;volatile
  5180  010524                     l490:
  5181                           
  5182                           ; BSR set to: 15
  5183                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5184  010524  0100               	movlb	0	; () banked
  5185  010526  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5186  010528  D003               	goto	l491
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5190  01052A  010F               	movlb	15	; () banked
  5191  01052C  8F01               	bsf	1,7,b	;volatile
  5192  01052E  D002               	goto	l5561
  5193  010530                     l491:
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;inc\CANlib.h: 864: else
  5197                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5198  010530  010F               	movlb	15	; () banked
  5199  010532  9F01               	bcf	1,7,b	;volatile
  5200  010534                     l5561:
  5201                           
  5202                           ; BSR set to: 15
  5203                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5204  010534  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5205  010538  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5206  01053C  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5207  010540  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5208  010544  0E16               	movlw	22
  5209  010546  D006               	goto	u6560
  5210  010548                     u6565:
  5211  010548  0100               	movlb	0	; () banked
  5212  01054A  90D8               	bcf	status,0,c
  5213  01054C  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5214  01054E  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5215  010550  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5216  010552  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5217  010554                     u6560:
  5218  010554  2EE8               	decfsz	wreg,f,c
  5219  010556  D7F8               	goto	u6565
  5220  010558  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5221  01055C  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5222  010560  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5223  010564  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5227  010568  0100               	movlb	0	; () banked
  5228  01056A  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5229  01056C  0100               	movlb	0	; () banked
  5230  01056E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5231  010570  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5232  010572  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5233  010574  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5237  010576  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5238  01057A                     l5567:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 870: }
  5242                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5243  01057A  0100               	movlb	0	; () banked
  5244  01057C  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5245  01057E  A4D8               	btfss	status,2,c
  5246  010580  D089               	goto	l5601
  5247                           
  5248                           ; BSR set to: 0
  5249  010582  0EF7               	movlw	247
  5250  010584  0100               	movlb	0	; () banked
  5251  010586  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5252  010588  A4D8               	btfss	status,2,c
  5253  01058A  D084               	goto	l5601
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 873: {
  5257                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5258  01058C  010F               	movlb	15	; () banked
  5259  01058E  8705               	bsf	5,3,b	;volatile
  5260                           
  5261                           ; BSR set to: 15
  5262                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5263  010590  0100               	movlb	0	; () banked
  5264  010592  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5265  010594  0100               	movlb	0	; () banked
  5266  010596  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5267  010598  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5268  01059A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5269  01059C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5273  01059E  C07B  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5277  0105A2  0E00               	movlw	0
  5278  0105A4  0100               	movlb	0	; () banked
  5279  0105A6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5280  0105A8  0100               	movlb	0	; () banked
  5281  0105AA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5282  0105AC  0EFF               	movlw	255
  5283  0105AE  0100               	movlb	0	; () banked
  5284  0105B0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5285  0105B2  0100               	movlb	0	; () banked
  5286  0105B4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5287  0105B6  0E00               	movlw	0
  5288  0105B8  0100               	movlb	0	; () banked
  5289  0105BA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5290  0105BC  0100               	movlb	0	; () banked
  5291  0105BE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5292  0105C0  0E00               	movlw	0
  5293  0105C2  0100               	movlb	0	; () banked
  5294  0105C4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5295  0105C6  0100               	movlb	0	; () banked
  5296  0105C8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5300  0105CA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5301  0105CE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5302  0105D2  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5303  0105D6  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5304  0105DA  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5305  0105DE  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5306  0105E2  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5307  0105E6  0100               	movlb	0	; () banked
  5308  0105E8  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5309  0105EA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5310  0105EE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5311  0105F2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5312  0105F6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5316  0105FA  C07B  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5320  0105FE  0100               	movlb	0	; () banked
  5321  010600  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5322  010602  D003               	goto	l494
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5326  010604  010F               	movlb	15	; () banked
  5327  010606  8105               	bsf	5,0,b	;volatile
  5328  010608  D002               	goto	l495
  5329  01060A                     l494:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;inc\CANlib.h: 885: else
  5333                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5334  01060A  010F               	movlb	15	; () banked
  5335  01060C  9105               	bcf	5,0,b	;volatile
  5336  01060E                     l495:
  5337                           
  5338                           ; BSR set to: 15
  5339                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5340  01060E  0100               	movlb	0	; () banked
  5341  010610  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5342  010612  D003               	goto	l496
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5346  010614  010F               	movlb	15	; () banked
  5347  010616  8305               	bsf	5,1,b	;volatile
  5348  010618  D002               	goto	l497
  5349  01061A                     l496:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;inc\CANlib.h: 890: else
  5353                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5354  01061A  010F               	movlb	15	; () banked
  5355  01061C  9305               	bcf	5,1,b	;volatile
  5356  01061E                     l497:
  5357                           
  5358                           ; BSR set to: 15
  5359                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5360  01061E  0100               	movlb	0	; () banked
  5361  010620  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5362  010622  D003               	goto	l498
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5366  010624  010F               	movlb	15	; () banked
  5367  010626  8B05               	bsf	5,5,b	;volatile
  5368  010628  D002               	goto	l499
  5369  01062A                     l498:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 895: else
  5373                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5374  01062A  010F               	movlb	15	; () banked
  5375  01062C  9B05               	bcf	5,5,b	;volatile
  5376  01062E                     l499:
  5377                           
  5378                           ; BSR set to: 15
  5379                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5380  01062E  0100               	movlb	0	; () banked
  5381  010630  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5382  010632  D003               	goto	l500
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5386  010634  010F               	movlb	15	; () banked
  5387  010636  8D05               	bsf	5,6,b	;volatile
  5388  010638  D002               	goto	l501
  5389  01063A                     l500:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;inc\CANlib.h: 900: else
  5393                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5394  01063A  010F               	movlb	15	; () banked
  5395  01063C  9D05               	bcf	5,6,b	;volatile
  5396  01063E                     l501:
  5397                           
  5398                           ; BSR set to: 15
  5399                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5400  01063E  0100               	movlb	0	; () banked
  5401  010640  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5402  010642  D003               	goto	l502
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5406  010644  010F               	movlb	15	; () banked
  5407  010646  8F05               	bsf	5,7,b	;volatile
  5408  010648  D002               	goto	l5595
  5409  01064A                     l502:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 905: else
  5413                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5414  01064A  010F               	movlb	15	; () banked
  5415  01064C  9F05               	bcf	5,7,b	;volatile
  5416  01064E                     l5595:
  5417                           
  5418                           ; BSR set to: 15
  5419                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5420  01064E  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5421  010652  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5422  010656  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5423  01065A  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5424  01065E  0E16               	movlw	22
  5425  010660  D006               	goto	u6640
  5426  010662                     u6645:
  5427  010662  0100               	movlb	0	; () banked
  5428  010664  90D8               	bcf	status,0,c
  5429  010666  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5430  010668  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5431  01066A  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5432  01066C  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5433  01066E                     u6640:
  5434  01066E  2EE8               	decfsz	wreg,f,c
  5435  010670  D7F8               	goto	u6645
  5436  010672  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5437  010676  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5438  01067A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5439  01067E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5443  010682  0100               	movlb	0	; () banked
  5444  010684  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5445  010686  0100               	movlb	0	; () banked
  5446  010688  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5447  01068A  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5448  01068C  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5449  01068E  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5453  010690  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5454  010694                     l5601:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;inc\CANlib.h: 911: }
  5458                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5459  010694  0E02               	movlw	2
  5460  010696  0100               	movlb	0	; () banked
  5461  010698  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5462  01069A  A4D8               	btfss	status,2,c
  5463  01069C  D089               	goto	l5635
  5464                           
  5465                           ; BSR set to: 0
  5466  01069E  0EF7               	movlw	247
  5467  0106A0  0100               	movlb	0	; () banked
  5468  0106A2  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5469  0106A4  A4D8               	btfss	status,2,c
  5470  0106A6  D084               	goto	l5635
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;inc\CANlib.h: 915: {
  5474                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5475  0106A8  010F               	movlb	15	; () banked
  5476  0106AA  8709               	bsf	9,3,b	;volatile
  5477                           
  5478                           ; BSR set to: 15
  5479                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5480  0106AC  0100               	movlb	0	; () banked
  5481  0106AE  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5482  0106B0  0100               	movlb	0	; () banked
  5483  0106B2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5484  0106B4  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5485  0106B6  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5486  0106B8  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5490  0106BA  C07B  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5494  0106BE  0E00               	movlw	0
  5495  0106C0  0100               	movlb	0	; () banked
  5496  0106C2  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5497  0106C4  0100               	movlb	0	; () banked
  5498  0106C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5499  0106C8  0EFF               	movlw	255
  5500  0106CA  0100               	movlb	0	; () banked
  5501  0106CC  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5502  0106CE  0100               	movlb	0	; () banked
  5503  0106D0  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5504  0106D2  0E00               	movlw	0
  5505  0106D4  0100               	movlb	0	; () banked
  5506  0106D6  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5507  0106D8  0100               	movlb	0	; () banked
  5508  0106DA  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5509  0106DC  0E00               	movlw	0
  5510  0106DE  0100               	movlb	0	; () banked
  5511  0106E0  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5512  0106E2  0100               	movlb	0	; () banked
  5513  0106E4  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5517  0106E6  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5518  0106EA  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5519  0106EE  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5520  0106F2  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5521  0106F6  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5522  0106FA  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5523  0106FE  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5524  010702  0100               	movlb	0	; () banked
  5525  010704  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5526  010706  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5527  01070A  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5528  01070E  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5529  010712  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5533  010716  C07B  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5537  01071A  0100               	movlb	0	; () banked
  5538  01071C  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5539  01071E  D003               	goto	l505
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5543  010720  010F               	movlb	15	; () banked
  5544  010722  8109               	bsf	9,0,b	;volatile
  5545  010724  D002               	goto	l506
  5546  010726                     l505:
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;inc\CANlib.h: 927: else
  5550                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5551  010726  010F               	movlb	15	; () banked
  5552  010728  9109               	bcf	9,0,b	;volatile
  5553  01072A                     l506:
  5554                           
  5555                           ; BSR set to: 15
  5556                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5557  01072A  0100               	movlb	0	; () banked
  5558  01072C  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5559  01072E  D003               	goto	l507
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5563  010730  010F               	movlb	15	; () banked
  5564  010732  8309               	bsf	9,1,b	;volatile
  5565  010734  D002               	goto	l508
  5566  010736                     l507:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 932: else
  5570                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5571  010736  010F               	movlb	15	; () banked
  5572  010738  9309               	bcf	9,1,b	;volatile
  5573  01073A                     l508:
  5574                           
  5575                           ; BSR set to: 15
  5576                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5577  01073A  0100               	movlb	0	; () banked
  5578  01073C  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5579  01073E  D003               	goto	l509
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5583  010740  010F               	movlb	15	; () banked
  5584  010742  8B09               	bsf	9,5,b	;volatile
  5585  010744  D002               	goto	l510
  5586  010746                     l509:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;inc\CANlib.h: 937: else
  5590                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5591  010746  010F               	movlb	15	; () banked
  5592  010748  9B09               	bcf	9,5,b	;volatile
  5593  01074A                     l510:
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5597  01074A  0100               	movlb	0	; () banked
  5598  01074C  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5599  01074E  D003               	goto	l511
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5603  010750  010F               	movlb	15	; () banked
  5604  010752  8D09               	bsf	9,6,b	;volatile
  5605  010754  D002               	goto	l512
  5606  010756                     l511:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;inc\CANlib.h: 942: else
  5610                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5611  010756  010F               	movlb	15	; () banked
  5612  010758  9D09               	bcf	9,6,b	;volatile
  5613  01075A                     l512:
  5614                           
  5615                           ; BSR set to: 15
  5616                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5617  01075A  0100               	movlb	0	; () banked
  5618  01075C  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5619  01075E  D003               	goto	l513
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5623  010760  010F               	movlb	15	; () banked
  5624  010762  8F09               	bsf	9,7,b	;volatile
  5625  010764  D002               	goto	l5629
  5626  010766                     l513:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;inc\CANlib.h: 947: else
  5630                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5631  010766  010F               	movlb	15	; () banked
  5632  010768  9F09               	bcf	9,7,b	;volatile
  5633  01076A                     l5629:
  5634                           
  5635                           ; BSR set to: 15
  5636                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5637  01076A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5638  01076E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5639  010772  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5640  010776  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5641  01077A  0E16               	movlw	22
  5642  01077C  D006               	goto	u6720
  5643  01077E                     u6725:
  5644  01077E  0100               	movlb	0	; () banked
  5645  010780  90D8               	bcf	status,0,c
  5646  010782  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5647  010784  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5648  010786  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5649  010788  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5650  01078A                     u6720:
  5651  01078A  2EE8               	decfsz	wreg,f,c
  5652  01078C  D7F8               	goto	u6725
  5653  01078E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5654  010792  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5655  010796  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5656  01079A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5660  01079E  0100               	movlb	0	; () banked
  5661  0107A0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5662  0107A2  0100               	movlb	0	; () banked
  5663  0107A4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5664  0107A6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5665  0107A8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5666  0107AA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5670  0107AC  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5671  0107B0                     l5635:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;inc\CANlib.h: 953: }
  5675                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5676  0107B0  0E03               	movlw	3
  5677  0107B2  0100               	movlb	0	; () banked
  5678  0107B4  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5679  0107B6  A4D8               	btfss	status,2,c
  5680  0107B8  D089               	goto	l5669
  5681                           
  5682                           ; BSR set to: 0
  5683  0107BA  0EF7               	movlw	247
  5684  0107BC  0100               	movlb	0	; () banked
  5685  0107BE  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5686  0107C0  A4D8               	btfss	status,2,c
  5687  0107C2  D084               	goto	l5669
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;inc\CANlib.h: 956: {
  5691                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5692  0107C4  010F               	movlb	15	; () banked
  5693  0107C6  870D               	bsf	13,3,b	;volatile
  5694                           
  5695                           ; BSR set to: 15
  5696                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5697  0107C8  0100               	movlb	0	; () banked
  5698  0107CA  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5699  0107CC  0100               	movlb	0	; () banked
  5700  0107CE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5701  0107D0  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5702  0107D2  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5703  0107D4  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5707  0107D6  C07B  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5711  0107DA  0E00               	movlw	0
  5712  0107DC  0100               	movlb	0	; () banked
  5713  0107DE  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5714  0107E0  0100               	movlb	0	; () banked
  5715  0107E2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5716  0107E4  0EFF               	movlw	255
  5717  0107E6  0100               	movlb	0	; () banked
  5718  0107E8  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5719  0107EA  0100               	movlb	0	; () banked
  5720  0107EC  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5721  0107EE  0E00               	movlw	0
  5722  0107F0  0100               	movlb	0	; () banked
  5723  0107F2  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5724  0107F4  0100               	movlb	0	; () banked
  5725  0107F6  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5726  0107F8  0E00               	movlw	0
  5727  0107FA  0100               	movlb	0	; () banked
  5728  0107FC  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5729  0107FE  0100               	movlb	0	; () banked
  5730  010800  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5734  010802  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5735  010806  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5736  01080A  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5737  01080E  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5738  010812  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5739  010816  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5740  01081A  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5741  01081E  0100               	movlb	0	; () banked
  5742  010820  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5743  010822  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5744  010826  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5745  01082A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5746  01082E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5750  010832  C07B  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5754  010836  0100               	movlb	0	; () banked
  5755  010838  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5756  01083A  D003               	goto	l516
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5760  01083C  010F               	movlb	15	; () banked
  5761  01083E  810D               	bsf	13,0,b	;volatile
  5762  010840  D002               	goto	l517
  5763  010842                     l516:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;inc\CANlib.h: 968: else
  5767                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5768  010842  010F               	movlb	15	; () banked
  5769  010844  910D               	bcf	13,0,b	;volatile
  5770  010846                     l517:
  5771                           
  5772                           ; BSR set to: 15
  5773                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5774  010846  0100               	movlb	0	; () banked
  5775  010848  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5776  01084A  D003               	goto	l518
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5780  01084C  010F               	movlb	15	; () banked
  5781  01084E  830D               	bsf	13,1,b	;volatile
  5782  010850  D002               	goto	l519
  5783  010852                     l518:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 973: else
  5787                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5788  010852  010F               	movlb	15	; () banked
  5789  010854  930D               	bcf	13,1,b	;volatile
  5790  010856                     l519:
  5791                           
  5792                           ; BSR set to: 15
  5793                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5794  010856  0100               	movlb	0	; () banked
  5795  010858  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5796  01085A  D003               	goto	l520
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5800  01085C  010F               	movlb	15	; () banked
  5801  01085E  8B0D               	bsf	13,5,b	;volatile
  5802  010860  D002               	goto	l521
  5803  010862                     l520:
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;inc\CANlib.h: 978: else
  5807                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5808  010862  010F               	movlb	15	; () banked
  5809  010864  9B0D               	bcf	13,5,b	;volatile
  5810  010866                     l521:
  5811                           
  5812                           ; BSR set to: 15
  5813                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5814  010866  0100               	movlb	0	; () banked
  5815  010868  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5816  01086A  D003               	goto	l522
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5820  01086C  010F               	movlb	15	; () banked
  5821  01086E  8D0D               	bsf	13,6,b	;volatile
  5822  010870  D002               	goto	l523
  5823  010872                     l522:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;inc\CANlib.h: 983: else
  5827                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5828  010872  010F               	movlb	15	; () banked
  5829  010874  9D0D               	bcf	13,6,b	;volatile
  5830  010876                     l523:
  5831                           
  5832                           ; BSR set to: 15
  5833                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5834  010876  0100               	movlb	0	; () banked
  5835  010878  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5836  01087A  D003               	goto	l524
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5840  01087C  010F               	movlb	15	; () banked
  5841  01087E  8F0D               	bsf	13,7,b	;volatile
  5842  010880  D002               	goto	l5663
  5843  010882                     l524:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;inc\CANlib.h: 988: else
  5847                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5848  010882  010F               	movlb	15	; () banked
  5849  010884  9F0D               	bcf	13,7,b	;volatile
  5850  010886                     l5663:
  5851                           
  5852                           ; BSR set to: 15
  5853                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5854  010886  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5855  01088A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5856  01088E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5857  010892  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5858  010896  0E16               	movlw	22
  5859  010898  D006               	goto	u6800
  5860  01089A                     u6805:
  5861  01089A  0100               	movlb	0	; () banked
  5862  01089C  90D8               	bcf	status,0,c
  5863  01089E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5864  0108A0  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5865  0108A2  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5866  0108A4  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5867  0108A6                     u6800:
  5868  0108A6  2EE8               	decfsz	wreg,f,c
  5869  0108A8  D7F8               	goto	u6805
  5870  0108AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5871  0108AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5872  0108B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5873  0108B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5877  0108BA  0100               	movlb	0	; () banked
  5878  0108BC  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5879  0108BE  0100               	movlb	0	; () banked
  5880  0108C0  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5881  0108C2  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5882  0108C4  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5883  0108C6  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5887  0108C8  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5888  0108CC                     l5669:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 994: }
  5892                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5893  0108CC  0E04               	movlw	4
  5894  0108CE  0100               	movlb	0	; () banked
  5895  0108D0  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5896  0108D2  A4D8               	btfss	status,2,c
  5897  0108D4  D089               	goto	l5703
  5898                           
  5899                           ; BSR set to: 0
  5900  0108D6  0EF7               	movlw	247
  5901  0108D8  0100               	movlb	0	; () banked
  5902  0108DA  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5903  0108DC  A4D8               	btfss	status,2,c
  5904  0108DE  D084               	goto	l5703
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;inc\CANlib.h: 997: {
  5908                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5909  0108E0  010F               	movlb	15	; () banked
  5910  0108E2  8711               	bsf	17,3,b	;volatile
  5911                           
  5912                           ; BSR set to: 15
  5913                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5914  0108E4  0100               	movlb	0	; () banked
  5915  0108E6  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5916  0108E8  0100               	movlb	0	; () banked
  5917  0108EA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5918  0108EC  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5919  0108EE  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5920  0108F0  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5924  0108F2  C07B  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5928  0108F6  0E00               	movlw	0
  5929  0108F8  0100               	movlb	0	; () banked
  5930  0108FA  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5931  0108FC  0100               	movlb	0	; () banked
  5932  0108FE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5933  010900  0EFF               	movlw	255
  5934  010902  0100               	movlb	0	; () banked
  5935  010904  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5936  010906  0100               	movlb	0	; () banked
  5937  010908  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5938  01090A  0E00               	movlw	0
  5939  01090C  0100               	movlb	0	; () banked
  5940  01090E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5941  010910  0100               	movlb	0	; () banked
  5942  010912  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5943  010914  0E00               	movlw	0
  5944  010916  0100               	movlb	0	; () banked
  5945  010918  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5946  01091A  0100               	movlb	0	; () banked
  5947  01091C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5951  01091E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5952  010922  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5953  010926  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5954  01092A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5955  01092E  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5956  010932  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5957  010936  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5958  01093A  0100               	movlb	0	; () banked
  5959  01093C  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5960  01093E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5961  010942  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5962  010946  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5963  01094A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5967  01094E  C07B  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5971  010952  0100               	movlb	0	; () banked
  5972  010954  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5973  010956  D003               	goto	l527
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5977  010958  010F               	movlb	15	; () banked
  5978  01095A  8111               	bsf	17,0,b	;volatile
  5979  01095C  D002               	goto	l528
  5980  01095E                     l527:
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;inc\CANlib.h: 1009: else
  5984                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5985  01095E  010F               	movlb	15	; () banked
  5986  010960  9111               	bcf	17,0,b	;volatile
  5987  010962                     l528:
  5988                           
  5989                           ; BSR set to: 15
  5990                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5991  010962  0100               	movlb	0	; () banked
  5992  010964  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5993  010966  D003               	goto	l529
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5997  010968  010F               	movlb	15	; () banked
  5998  01096A  8311               	bsf	17,1,b	;volatile
  5999  01096C  D002               	goto	l530
  6000  01096E                     l529:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;inc\CANlib.h: 1014: else
  6004                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6005  01096E  010F               	movlb	15	; () banked
  6006  010970  9311               	bcf	17,1,b	;volatile
  6007  010972                     l530:
  6008                           
  6009                           ; BSR set to: 15
  6010                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6011  010972  0100               	movlb	0	; () banked
  6012  010974  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6013  010976  D003               	goto	l531
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6017  010978  010F               	movlb	15	; () banked
  6018  01097A  8B11               	bsf	17,5,b	;volatile
  6019  01097C  D002               	goto	l532
  6020  01097E                     l531:
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;inc\CANlib.h: 1019: else
  6024                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6025  01097E  010F               	movlb	15	; () banked
  6026  010980  9B11               	bcf	17,5,b	;volatile
  6027  010982                     l532:
  6028                           
  6029                           ; BSR set to: 15
  6030                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6031  010982  0100               	movlb	0	; () banked
  6032  010984  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6033  010986  D003               	goto	l533
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6037  010988  010F               	movlb	15	; () banked
  6038  01098A  8D11               	bsf	17,6,b	;volatile
  6039  01098C  D002               	goto	l534
  6040  01098E                     l533:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 1024: else
  6044                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6045  01098E  010F               	movlb	15	; () banked
  6046  010990  9D11               	bcf	17,6,b	;volatile
  6047  010992                     l534:
  6048                           
  6049                           ; BSR set to: 15
  6050                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6051  010992  0100               	movlb	0	; () banked
  6052  010994  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6053  010996  D003               	goto	l535
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6057  010998  010F               	movlb	15	; () banked
  6058  01099A  8F11               	bsf	17,7,b	;volatile
  6059  01099C  D002               	goto	l5697
  6060  01099E                     l535:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;inc\CANlib.h: 1029: else
  6064                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6065  01099E  010F               	movlb	15	; () banked
  6066  0109A0  9F11               	bcf	17,7,b	;volatile
  6067  0109A2                     l5697:
  6068                           
  6069                           ; BSR set to: 15
  6070                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6071  0109A2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6072  0109A6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6073  0109AA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6074  0109AE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6075  0109B2  0E16               	movlw	22
  6076  0109B4  D006               	goto	u6880
  6077  0109B6                     u6885:
  6078  0109B6  0100               	movlb	0	; () banked
  6079  0109B8  90D8               	bcf	status,0,c
  6080  0109BA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6081  0109BC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6082  0109BE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6083  0109C0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6084  0109C2                     u6880:
  6085  0109C2  2EE8               	decfsz	wreg,f,c
  6086  0109C4  D7F8               	goto	u6885
  6087  0109C6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6088  0109CA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6089  0109CE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6090  0109D2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6094  0109D6  0100               	movlb	0	; () banked
  6095  0109D8  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6096  0109DA  0100               	movlb	0	; () banked
  6097  0109DC  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6098  0109DE  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6099  0109E0  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6100  0109E2  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6104  0109E4  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6105  0109E8                     l5703:
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;inc\CANlib.h: 1035: }
  6109                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6110  0109E8  0E05               	movlw	5
  6111  0109EA  0100               	movlb	0	; () banked
  6112  0109EC  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6113  0109EE  A4D8               	btfss	status,2,c
  6114  0109F0  0012               	return	
  6115                           
  6116                           ; BSR set to: 0
  6117  0109F2  0EF7               	movlw	247
  6118  0109F4  0100               	movlb	0	; () banked
  6119  0109F6  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6120  0109F8  A4D8               	btfss	status,2,c
  6121  0109FA  0012               	return	
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;inc\CANlib.h: 1038: {
  6125                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6126  0109FC  010F               	movlb	15	; () banked
  6127  0109FE  8715               	bsf	21,3,b	;volatile
  6128                           
  6129                           ; BSR set to: 15
  6130                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6131  010A00  0100               	movlb	0	; () banked
  6132  010A02  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6133  010A04  0100               	movlb	0	; () banked
  6134  010A06  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6135  010A08  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6136  010A0A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6137  010A0C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6141  010A0E  C07B  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6145  010A12  0E00               	movlw	0
  6146  010A14  0100               	movlb	0	; () banked
  6147  010A16  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6148  010A18  0100               	movlb	0	; () banked
  6149  010A1A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6150  010A1C  0EFF               	movlw	255
  6151  010A1E  0100               	movlb	0	; () banked
  6152  010A20  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6153  010A22  0100               	movlb	0	; () banked
  6154  010A24  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6155  010A26  0E00               	movlw	0
  6156  010A28  0100               	movlb	0	; () banked
  6157  010A2A  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6158  010A2C  0100               	movlb	0	; () banked
  6159  010A2E  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6160  010A30  0E00               	movlw	0
  6161  010A32  0100               	movlb	0	; () banked
  6162  010A34  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6163  010A36  0100               	movlb	0	; () banked
  6164  010A38  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6168  010A3A  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6169  010A3E  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6170  010A42  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6171  010A46  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6172  010A4A  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6173  010A4E  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6174  010A52  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6175  010A56  0100               	movlb	0	; () banked
  6176  010A58  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6177  010A5A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6178  010A5E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6179  010A62  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6180  010A66  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6184  010A6A  C07B  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6188  010A6E  0100               	movlb	0	; () banked
  6189  010A70  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6190  010A72  D003               	goto	l538
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6194  010A74  010F               	movlb	15	; () banked
  6195  010A76  8115               	bsf	21,0,b	;volatile
  6196  010A78  D002               	goto	l539
  6197  010A7A                     l538:
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;inc\CANlib.h: 1050: else
  6201                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6202  010A7A  010F               	movlb	15	; () banked
  6203  010A7C  9115               	bcf	21,0,b	;volatile
  6204  010A7E                     l539:
  6205                           
  6206                           ; BSR set to: 15
  6207                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6208  010A7E  0100               	movlb	0	; () banked
  6209  010A80  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6210  010A82  D003               	goto	l540
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6214  010A84  010F               	movlb	15	; () banked
  6215  010A86  8315               	bsf	21,1,b	;volatile
  6216  010A88  D002               	goto	l541
  6217  010A8A                     l540:
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;inc\CANlib.h: 1055: else
  6221                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6222  010A8A  010F               	movlb	15	; () banked
  6223  010A8C  9315               	bcf	21,1,b	;volatile
  6224  010A8E                     l541:
  6225                           
  6226                           ; BSR set to: 15
  6227                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6228  010A8E  0100               	movlb	0	; () banked
  6229  010A90  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6230  010A92  D003               	goto	l542
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6234  010A94  010F               	movlb	15	; () banked
  6235  010A96  8B15               	bsf	21,5,b	;volatile
  6236  010A98  D002               	goto	l543
  6237  010A9A                     l542:
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;inc\CANlib.h: 1060: else
  6241                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6242  010A9A  010F               	movlb	15	; () banked
  6243  010A9C  9B15               	bcf	21,5,b	;volatile
  6244  010A9E                     l543:
  6245                           
  6246                           ; BSR set to: 15
  6247                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6248  010A9E  0100               	movlb	0	; () banked
  6249  010AA0  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6250  010AA2  D003               	goto	l544
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6254  010AA4  010F               	movlb	15	; () banked
  6255  010AA6  8D15               	bsf	21,6,b	;volatile
  6256  010AA8  D002               	goto	l545
  6257  010AAA                     l544:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;inc\CANlib.h: 1065: else
  6261                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6262  010AAA  010F               	movlb	15	; () banked
  6263  010AAC  9D15               	bcf	21,6,b	;volatile
  6264  010AAE                     l545:
  6265                           
  6266                           ; BSR set to: 15
  6267                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6268  010AAE  0100               	movlb	0	; () banked
  6269  010AB0  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6270  010AB2  D003               	goto	l546
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6274  010AB4  010F               	movlb	15	; () banked
  6275  010AB6  8F15               	bsf	21,7,b	;volatile
  6276  010AB8  D002               	goto	l5731
  6277  010ABA                     l546:
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;inc\CANlib.h: 1070: else
  6281                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6282  010ABA  010F               	movlb	15	; () banked
  6283  010ABC  9F15               	bcf	21,7,b	;volatile
  6284  010ABE                     l5731:
  6285                           
  6286                           ; BSR set to: 15
  6287                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6288  010ABE  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6289  010AC2  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6290  010AC6  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6291  010ACA  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6292  010ACE  0E16               	movlw	22
  6293  010AD0  D006               	goto	u6960
  6294  010AD2                     u6965:
  6295  010AD2  0100               	movlb	0	; () banked
  6296  010AD4  90D8               	bcf	status,0,c
  6297  010AD6  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6298  010AD8  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6299  010ADA  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6300  010ADC  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6301  010ADE                     u6960:
  6302  010ADE  2EE8               	decfsz	wreg,f,c
  6303  010AE0  D7F8               	goto	u6965
  6304  010AE2  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6305  010AE6  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6306  010AEA  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6307  010AEE  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6311  010AF2  0100               	movlb	0	; () banked
  6312  010AF4  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6313  010AF6  0100               	movlb	0	; () banked
  6314  010AF8  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6315  010AFA  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6316  010AFC  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6317  010AFE  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6321  010B00  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6322  010B04  0012               	return	
  6323  010B06                     __end_of_CANSetFilter:
  6324                           	opt stack 0
  6325                           tblptru	equ	0xFF8
  6326                           tblptrh	equ	0xFF7
  6327                           tblptrl	equ	0xFF6
  6328                           tablat	equ	0xFF5
  6329                           intcon	equ	0xFF2
  6330                           postinc0	equ	0xFEE
  6331                           wreg	equ	0xFE8
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function _CANOperationMode *****************
  6335 ;; Defined at:
  6336 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  mode            1    wreg     enum E16881
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  mode            1   17[BANK0 ] enum E16881
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;Total ram usage:        1 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    3
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_CANInitialize
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text5
  6365  016484                     __ptext5:
  6366                           	opt stack 0
  6367  016484                     _CANOperationMode:
  6368                           	opt stack 25
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;incstack = 0
  6372                           ;CANOperationMode@mode stored from wreg
  6373  016484  0100               	movlb	0	; () banked
  6374  016486  6F71               	movwf	CANOperationMode@mode& (0+255),b
  6375                           
  6376                           ;inc\CANlib.h: 208: CANCON = mode;
  6377  016488  C071  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6378  01648C                     l5327:
  6379  01648C  506E               	movf	3950,w,c	;volatile
  6380  01648E  0BE0               	andlw	224
  6381  016490  0100               	movlb	0	; () banked
  6382  016492  1971               	xorwf	CANOperationMode@mode& (0+255),w,b
  6383  016494  B4D8               	btfsc	status,2,c
  6384  016496  0012               	return	
  6385  016498  D7F9               	goto	l5327
  6386  01649A                     __end_of_CANOperationMode:
  6387                           	opt stack 0
  6388                           tblptru	equ	0xFF8
  6389                           tblptrh	equ	0xFF7
  6390                           tblptrl	equ	0xFF6
  6391                           tablat	equ	0xFF5
  6392                           intcon	equ	0xFF2
  6393                           postinc0	equ	0xFEE
  6394                           wreg	equ	0xFE8
  6395                           status	equ	0xFD8
  6396                           
  6397 ;; *************** function _PWR_Button_Polling *****************
  6398 ;; Defined at:
  6399 ;;		line 527 in file "RemoteCan.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;		None               void
  6406 ;; Registers used:
  6407 ;;		None
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    3
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_main
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text6
  6428  016414                     __ptext6:
  6429                           	opt stack 0
  6430  016414                     _PWR_Button_Polling:
  6431                           	opt stack 27
  6432                           
  6433                           ;RemoteCan.c: 528: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;incstack = 0
  6437  016414  AA81               	btfss	3969,5,c	;volatile
  6438  016416  D002               	goto	l901
  6439  016418  BC4C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6440  01641A  0012               	return	
  6441  01641C                     l901:
  6442                           
  6443                           ;RemoteCan.c: 529: wait_low_1 = 0;
  6444  01641C  9C4C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6445                           
  6446                           ;RemoteCan.c: 530: if (PORTBbits.RB5 == 1) {
  6447  01641E  AA81               	btfss	3969,5,c	;volatile
  6448  016420  0012               	return	
  6449                           
  6450                           ;RemoteCan.c: 531: power_switch = ~power_switch;
  6451  016422  B44C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6452  016424  D002               	goto	u8920
  6453  016426  844C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6454  016428  D001               	goto	u8935
  6455  01642A                     u8920:
  6456  01642A  944C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6457  01642C                     u8935:
  6458                           
  6459                           ;RemoteCan.c: 532: wait_low_1 = 1;
  6460  01642C  8C4C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6461  01642E  0012               	return	
  6462  016430                     __end_of_PWR_Button_Polling:
  6463                           	opt stack 0
  6464                           tblptru	equ	0xFF8
  6465                           tblptrh	equ	0xFF7
  6466                           tblptrl	equ	0xFF6
  6467                           tablat	equ	0xFF5
  6468                           intcon	equ	0xFF2
  6469                           postinc0	equ	0xFEE
  6470                           wreg	equ	0xFE8
  6471                           status	equ	0xFD8
  6472                           
  6473 ;; *************** function _LCD_Parking *****************
  6474 ;; Defined at:
  6475 ;;		line 501 in file "RemoteCan.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;		None
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;		None               void
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;Total ram usage:        0 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    9
  6496 ;; This function calls:
  6497 ;;		_LCD_clear
  6498 ;;		_LCD_goto_line
  6499 ;;		_LCD_initialize
  6500 ;;		_LCD_write_message
  6501 ;; This function is called by:
  6502 ;;		_main
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text7
  6507  015E7E                     __ptext7:
  6508                           	opt stack 0
  6509  015E7E                     _LCD_Parking:
  6510                           	opt stack 21
  6511                           
  6512                           ;RemoteCan.c: 502: LCD_initialize(16);
  6513                           
  6514                           ;incstack = 0
  6515  015E7E  0E10               	movlw	16
  6516  015E80  EC45  F0AA         	call	_LCD_initialize
  6517                           
  6518                           ;RemoteCan.c: 503: LCD_clear();
  6519  015E84  EC97  F0B1         	call	_LCD_clear	;wreg free
  6520                           
  6521                           ;RemoteCan.c: 504: LCD_goto_line(1);
  6522  015E88  0E01               	movlw	1
  6523  015E8A  EC82  F0AB         	call	_LCD_goto_line
  6524                           
  6525                           ;RemoteCan.c: 505: LCD_write_message("= PARKING MESSAGES =");
  6526  015E8E  0E40               	movlw	low STR_16
  6527  015E90  0100               	movlb	0	; () banked
  6528  015E92  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6529  015E94  0EFF               	movlw	high STR_16
  6530  015E96  0100               	movlb	0	; () banked
  6531  015E98  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6532  015E9A  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6533                           
  6534                           ;RemoteCan.c: 506: LCD_goto_line(2);
  6535  015E9E  0E02               	movlw	2
  6536  015EA0  EC82  F0AB         	call	_LCD_goto_line
  6537                           
  6538                           ;RemoteCan.c: 507: LCD_write_message("=    Parking in    =");
  6539  015EA4  0E16               	movlw	low STR_25
  6540  015EA6  0100               	movlb	0	; () banked
  6541  015EA8  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6542  015EAA  0EFF               	movlw	high STR_25
  6543  015EAC  0100               	movlb	0	; () banked
  6544  015EAE  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6545  015EB0  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6546                           
  6547                           ;RemoteCan.c: 508: LCD_goto_line(3);
  6548  015EB4  0E03               	movlw	3
  6549  015EB6  EC82  F0AB         	call	_LCD_goto_line
  6550                           
  6551                           ;RemoteCan.c: 509: LCD_write_message("=    progress...   =");
  6552  015EBA  0E2B               	movlw	low STR_26
  6553  015EBC  0100               	movlb	0	; () banked
  6554  015EBE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6555  015EC0  0EFF               	movlw	high STR_26
  6556  015EC2  0100               	movlb	0	; () banked
  6557  015EC4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6558  015EC6  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6559                           
  6560                           ;RemoteCan.c: 510: LCD_goto_line(4);
  6561  015ECA  0E04               	movlw	4
  6562  015ECC  EC82  F0AB         	call	_LCD_goto_line
  6563                           
  6564                           ;RemoteCan.c: 511: LCD_write_message("====================");
  6565  015ED0  0E7F               	movlw	low STR_1
  6566  015ED2  0100               	movlb	0	; () banked
  6567  015ED4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6568  015ED6  0EFF               	movlw	high STR_1
  6569  015ED8  0100               	movlb	0	; () banked
  6570  015EDA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6571  015EDC  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6572  015EE0  0012               	return		;funcret
  6573  015EE2                     __end_of_LCD_Parking:
  6574                           	opt stack 0
  6575                           tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           intcon	equ	0xFF2
  6580                           postinc0	equ	0xFEE
  6581                           wreg	equ	0xFE8
  6582                           status	equ	0xFD8
  6583                           
  6584 ;; *************** function _LCD_Park *****************
  6585 ;; Defined at:
  6586 ;;		line 488 in file "RemoteCan.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;		None               void
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;Total ram usage:        0 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    9
  6607 ;; This function calls:
  6608 ;;		_LCD_clear
  6609 ;;		_LCD_goto_line
  6610 ;;		_LCD_initialize
  6611 ;;		_LCD_write_message
  6612 ;; This function is called by:
  6613 ;;		_main
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text8
  6618  015EE2                     __ptext8:
  6619                           	opt stack 0
  6620  015EE2                     _LCD_Park:
  6621                           	opt stack 21
  6622                           
  6623                           ;RemoteCan.c: 489: LCD_initialize(16);
  6624                           
  6625                           ;incstack = 0
  6626  015EE2  0E10               	movlw	16
  6627  015EE4  EC45  F0AA         	call	_LCD_initialize
  6628                           
  6629                           ;RemoteCan.c: 490: LCD_clear();
  6630  015EE8  EC97  F0B1         	call	_LCD_clear	;wreg free
  6631                           
  6632                           ;RemoteCan.c: 491: LCD_goto_line(1);
  6633  015EEC  0E01               	movlw	1
  6634  015EEE  EC82  F0AB         	call	_LCD_goto_line
  6635                           
  6636                           ;RemoteCan.c: 492: LCD_write_message("= PARKING MESSAGES =");
  6637  015EF2  0E40               	movlw	low STR_16
  6638  015EF4  0100               	movlb	0	; () banked
  6639  015EF6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6640  015EF8  0EFF               	movlw	high STR_16
  6641  015EFA  0100               	movlb	0	; () banked
  6642  015EFC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6643  015EFE  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6644                           
  6645                           ;RemoteCan.c: 493: LCD_goto_line(2);
  6646  015F02  0E02               	movlw	2
  6647  015F04  EC82  F0AB         	call	_LCD_goto_line
  6648                           
  6649                           ;RemoteCan.c: 494: LCD_write_message("- Distance REACHED -");
  6650  015F08  0EEC               	movlw	low STR_21
  6651  015F0A  0100               	movlb	0	; () banked
  6652  015F0C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6653  015F0E  0EFE               	movlw	high STR_21
  6654  015F10  0100               	movlb	0	; () banked
  6655  015F12  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6656  015F14  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6657                           
  6658                           ;RemoteCan.c: 495: LCD_goto_line(3);
  6659  015F18  0E03               	movlw	3
  6660  015F1A  EC82  F0AB         	call	_LCD_goto_line
  6661                           
  6662                           ;RemoteCan.c: 496: LCD_write_message("Press the BUTTON to ");
  6663  015F1E  0EC2               	movlw	low STR_22
  6664  015F20  0100               	movlb	0	; () banked
  6665  015F22  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6666  015F24  0EFE               	movlw	high STR_22
  6667  015F26  0100               	movlb	0	; () banked
  6668  015F28  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6669  015F2A  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6670                           
  6671                           ;RemoteCan.c: 497: LCD_goto_line(4);
  6672  015F2E  0E04               	movlw	4
  6673  015F30  EC82  F0AB         	call	_LCD_goto_line
  6674                           
  6675                           ;RemoteCan.c: 498: LCD_write_message("   start parking    ");
  6676  015F34  0E83               	movlw	low STR_23
  6677  015F36  0100               	movlb	0	; () banked
  6678  015F38  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6679  015F3A  0EFE               	movlw	high STR_23
  6680  015F3C  0100               	movlb	0	; () banked
  6681  015F3E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6682  015F40  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6683  015F44  0012               	return		;funcret
  6684  015F46                     __end_of_LCD_Park:
  6685                           	opt stack 0
  6686                           tblptru	equ	0xFF8
  6687                           tblptrh	equ	0xFF7
  6688                           tblptrl	equ	0xFF6
  6689                           tablat	equ	0xFF5
  6690                           intcon	equ	0xFF2
  6691                           postinc0	equ	0xFEE
  6692                           wreg	equ	0xFE8
  6693                           status	equ	0xFD8
  6694                           
  6695 ;; *************** function _LCD_Handler *****************
  6696 ;; Defined at:
  6697 ;;		line 417 in file "RemoteCan.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;		None               void
  6704 ;; Registers used:
  6705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;Total ram usage:        0 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:   10
  6718 ;; This function calls:
  6719 ;;		_CANisTxReady
  6720 ;;		_CANsendMessage
  6721 ;;		_LCD_clear
  6722 ;;		_LCD_goto_line
  6723 ;;		_LCD_goto_xy
  6724 ;;		_LCD_initialize
  6725 ;;		_LCD_write_integer
  6726 ;;		_LCD_write_message
  6727 ;;		_LCD_write_string
  6728 ;;		___fldiv
  6729 ;;		___xxtofl
  6730 ;;		_sprintf
  6731 ;; This function is called by:
  6732 ;;		_main
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text9
  6737  014E26                     __ptext9:
  6738                           	opt stack 0
  6739  014E26                     _LCD_Handler:
  6740                           	opt stack 20
  6741  014E26                     l9217:
  6742  014E26  ECD8  F0B1         	call	_CANisTxReady	;wreg free
  6743  014E2A  06E8               	decf	wreg,f,c
  6744  014E2C  A4D8               	btfss	status,2,c
  6745  014E2E  D7FB               	goto	l9217
  6746                           
  6747                           ;RemoteCan.c: 420: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  6748  014E30  0E06               	movlw	6
  6749  014E32  0100               	movlb	0	; () banked
  6750  014E34  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  6751  014E36  0E00               	movlw	0
  6752  014E38  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6753  014E3A  0E00               	movlw	0
  6754  014E3C  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6755  014E3E  0E00               	movlw	0
  6756  014E40  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6757  014E42  0EEB               	movlw	low _data_speed
  6758  014E44  0100               	movlb	0	; () banked
  6759  014E46  6F75               	movwf	CANsendMessage@data& (0+255),b
  6760  014E48  0E00               	movlw	high _data_speed
  6761  014E4A  0100               	movlb	0	; () banked
  6762  014E4C  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  6763  014E4E  0E08               	movlw	8
  6764  014E50  0100               	movlb	0	; () banked
  6765  014E52  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  6766  014E54  0EFC               	movlw	252
  6767  014E56  0100               	movlb	0	; () banked
  6768  014E58  6F78               	movwf	CANsendMessage@flags& (0+255),b
  6769  014E5A  ECCD  F089         	call	_CANsendMessage	;wreg free
  6770                           
  6771                           ;RemoteCan.c: 422: actual_speed_kmh = ((actual_speed) / 278.0);
  6772  014E5E  C0DF  F071         	movff	_actual_speed,___xxtofl@val	;volatile
  6773  014E62  C0E0  F072         	movff	_actual_speed+1,___xxtofl@val+1	;volatile
  6774  014E66  0100               	movlb	0	; () banked
  6775  014E68  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  6776  014E6A  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  6777  014E6C  0E00               	movlw	0
  6778  014E6E  EC69  F0A4         	call	___xxtofl
  6779  014E72  C071  F07F         	movff	?___xxtofl,___fldiv@b
  6780  014E76  C072  F080         	movff	?___xxtofl+1,___fldiv@b+1
  6781  014E7A  C073  F081         	movff	?___xxtofl+2,___fldiv@b+2
  6782  014E7E  C074  F082         	movff	?___xxtofl+3,___fldiv@b+3
  6783  014E82  0E00               	movlw	0
  6784  014E84  0100               	movlb	0	; () banked
  6785  014E86  6F83               	movwf	___fldiv@a& (0+255),b
  6786  014E88  0E00               	movlw	0
  6787  014E8A  6F84               	movwf	(___fldiv@a+1)& (0+255),b
  6788  014E8C  0E8B               	movlw	139
  6789  014E8E  6F85               	movwf	(___fldiv@a+2)& (0+255),b
  6790  014E90  0E43               	movlw	67
  6791  014E92  6F86               	movwf	(___fldiv@a+3)& (0+255),b
  6792  014E94  EC41  F09E         	call	___fldiv	;wreg free
  6793  014E98  C07F  F001         	movff	?___fldiv,_actual_speed_kmh	;volatile
  6794  014E9C  C080  F002         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  6795  014EA0  C081  F003         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  6796  014EA4  C082  F004         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  6797                           
  6798                           ;RemoteCan.c: 423: sprintf(str, "%.2f", actual_speed_kmh);
  6799  014EA8  0E1C               	movlw	low _str
  6800  014EAA  0100               	movlb	0	; () banked
  6801  014EAC  6FC3               	movwf	sprintf@sp& (0+255),b
  6802  014EAE  0E01               	movlw	high _str
  6803  014EB0  0100               	movlb	0	; () banked
  6804  014EB2  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  6805  014EB4  0EFA               	movlw	low STR_5
  6806  014EB6  0100               	movlb	0	; () banked
  6807  014EB8  6FC5               	movwf	sprintf@f& (0+255),b
  6808  014EBA  0EFF               	movlw	high STR_5
  6809  014EBC  0100               	movlb	0	; () banked
  6810  014EBE  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  6811  014EC0  C001  F0C7         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  6812  014EC4  C002  F0C8         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  6813  014EC8  C003  F0C9         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  6814  014ECC  C004  F0CA         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  6815  014ED0  EC83  F085         	call	_sprintf	;wreg free
  6816                           
  6817                           ;RemoteCan.c: 424: str[11] = '\0';
  6818  014ED4  0E00               	movlw	0
  6819  014ED6  0101               	movlb	1	; () banked
  6820  014ED8  6F27               	movwf	(_str+11)& (0+255),b	;volatile
  6821                           
  6822                           ; BSR set to: 1
  6823                           ;RemoteCan.c: 426: if (display_refresh == 1) {
  6824  014EDA  AE4B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6825  014EDC  D032               	goto	l9245
  6826                           
  6827                           ; BSR set to: 1
  6828                           ;RemoteCan.c: 427: LCD_initialize(16);
  6829  014EDE  0E10               	movlw	16
  6830  014EE0  EC45  F0AA         	call	_LCD_initialize
  6831                           
  6832                           ;RemoteCan.c: 428: LCD_clear();
  6833  014EE4  EC97  F0B1         	call	_LCD_clear	;wreg free
  6834                           
  6835                           ;RemoteCan.c: 429: LCD_goto_line(1);
  6836  014EE8  0E01               	movlw	1
  6837  014EEA  EC82  F0AB         	call	_LCD_goto_line
  6838                           
  6839                           ;RemoteCan.c: 430: LCD_write_message("=== VEHICLE DATA ===");
  6840  014EEE  0E6A               	movlw	low STR_6
  6841  014EF0  0100               	movlb	0	; () banked
  6842  014EF2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6843  014EF4  0EFF               	movlw	high STR_6
  6844  014EF6  0100               	movlb	0	; () banked
  6845  014EF8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6846  014EFA  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6847                           
  6848                           ;RemoteCan.c: 431: LCD_goto_line(2);
  6849  014EFE  0E02               	movlw	2
  6850  014F00  EC82  F0AB         	call	_LCD_goto_line
  6851                           
  6852                           ;RemoteCan.c: 432: LCD_write_message("Direction: ");
  6853  014F04  0EC8               	movlw	low STR_7
  6854  014F06  0100               	movlb	0	; () banked
  6855  014F08  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6856  014F0A  0EFF               	movlw	high STR_7
  6857  014F0C  0100               	movlb	0	; () banked
  6858  014F0E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6859  014F10  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6860                           
  6861                           ;RemoteCan.c: 433: LCD_goto_line(3);
  6862  014F14  0E03               	movlw	3
  6863  014F16  EC82  F0AB         	call	_LCD_goto_line
  6864                           
  6865                           ;RemoteCan.c: 434: LCD_write_message("Speed: 0.00 Km/h");
  6866  014F1A  0EA9               	movlw	low STR_8
  6867  014F1C  0100               	movlb	0	; () banked
  6868  014F1E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6869  014F20  0EFF               	movlw	high STR_8
  6870  014F22  0100               	movlb	0	; () banked
  6871  014F24  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6872  014F26  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6873                           
  6874                           ;RemoteCan.c: 435: LCD_goto_line(4);
  6875  014F2A  0E04               	movlw	4
  6876  014F2C  EC82  F0AB         	call	_LCD_goto_line
  6877                           
  6878                           ;RemoteCan.c: 439: LCD_write_message("Data: ");
  6879                           
  6880                           ;RemoteCan.c: 438: } else {
  6881                           
  6882                           ;RemoteCan.c: 437: LCD_write_message("Park assist: ");
  6883                           
  6884                           ;RemoteCan.c: 436: if (1 == 0) {
  6885  014F30  0EE4               	movlw	low STR_10
  6886  014F32  0100               	movlb	0	; () banked
  6887  014F34  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6888  014F36  0EFF               	movlw	high STR_10
  6889  014F38  0100               	movlb	0	; () banked
  6890  014F3A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6891  014F3C  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6892                           
  6893                           ;RemoteCan.c: 440: }
  6894                           ;RemoteCan.c: 441: display_refresh = 0;
  6895  014F40  9E4B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6896  014F42                     l9245:
  6897                           
  6898                           ;RemoteCan.c: 442: }
  6899                           ;RemoteCan.c: 445: LCD_goto_xy(12, 2);
  6900  014F42  0E02               	movlw	2
  6901  014F44  0100               	movlb	0	; () banked
  6902  014F46  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6903  014F48  0E0C               	movlw	12
  6904  014F4A  EC18  F0B2         	call	_LCD_goto_xy
  6905                           
  6906                           ;RemoteCan.c: 446: if (switch_position != 0) {
  6907  014F4E  0100               	movlb	0	; () banked
  6908  014F50  51E9               	movf	_switch_position& (0+255),w,b	;volatile
  6909  014F52  B4D8               	btfsc	status,2,c
  6910  014F54  D016               	goto	l9255
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;RemoteCan.c: 447: if (dir == 1) {
  6914  014F56  0100               	movlb	0	; () banked
  6915  014F58  05E5               	decf	_dir& (0+255),w,b	;volatile
  6916  014F5A  A4D8               	btfss	status,2,c
  6917  014F5C  D009               	goto	l9253
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;RemoteCan.c: 448: LCD_write_message("FWD ");
  6921  014F5E  0EF0               	movlw	low STR_11
  6922  014F60  0100               	movlb	0	; () banked
  6923  014F62  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6924  014F64  0EFF               	movlw	high STR_11
  6925  014F66  0100               	movlb	0	; () banked
  6926  014F68  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6927  014F6A  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6928                           
  6929                           ;RemoteCan.c: 449: } else {
  6930  014F6E  D011               	goto	l9257
  6931  014F70                     l9253:
  6932                           
  6933                           ;RemoteCan.c: 450: LCD_write_message("BKWD");
  6934  014F70  0EF5               	movlw	low STR_12
  6935  014F72  0100               	movlb	0	; () banked
  6936  014F74  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6937  014F76  0EFF               	movlw	high STR_12
  6938  014F78  0100               	movlb	0	; () banked
  6939  014F7A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6940  014F7C  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6941                           
  6942                           ;RemoteCan.c: 451: }
  6943                           ;RemoteCan.c: 452: } else {
  6944  014F80  D008               	goto	l9257
  6945  014F82                     l9255:
  6946                           
  6947                           ;RemoteCan.c: 453: LCD_write_message("P   ");
  6948  014F82  0EEB               	movlw	low STR_13
  6949  014F84  0100               	movlb	0	; () banked
  6950  014F86  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6951  014F88  0EFF               	movlw	high STR_13
  6952  014F8A  0100               	movlb	0	; () banked
  6953  014F8C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6954  014F8E  EC64  F0B1         	call	_LCD_write_message	;wreg free
  6955  014F92                     l9257:
  6956                           
  6957                           ;RemoteCan.c: 454: }
  6958                           ;RemoteCan.c: 457: LCD_goto_xy(8, 3);
  6959  014F92  0E03               	movlw	3
  6960  014F94  0100               	movlb	0	; () banked
  6961  014F96  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6962  014F98  0E08               	movlw	8
  6963  014F9A  EC18  F0B2         	call	_LCD_goto_xy
  6964                           
  6965                           ;RemoteCan.c: 458: LCD_write_string(str);
  6966  014F9E  0E1C               	movlw	low _str
  6967  014FA0  0100               	movlb	0	; () banked
  6968  014FA2  6F82               	movwf	LCD_write_string@buffer& (0+255),b
  6969  014FA4  0E01               	movlw	high _str
  6970  014FA6  0100               	movlb	0	; () banked
  6971  014FA8  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6972  014FAA  ECC5  F0B1         	call	_LCD_write_string	;wreg free
  6973                           
  6974                           ;RemoteCan.c: 470: LCD_goto_xy(7, 4);
  6975                           
  6976                           ;RemoteCan.c: 467: }
  6977                           ;RemoteCan.c: 468: } else {
  6978                           
  6979                           ;RemoteCan.c: 466: LCD_write_message("SEARCH ");
  6980                           
  6981                           ;RemoteCan.c: 465: } else {
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;RemoteCan.c: 464: LCD_write_message("OFF    ");
  6985                           
  6986                           ;RemoteCan.c: 463: if (parking_state == 0) {
  6987                           
  6988                           ;RemoteCan.c: 462: LCD_goto_xy(14, 4);
  6989                           
  6990                           ;RemoteCan.c: 460: if (1 == 0) {
  6991  014FAE  0E04               	movlw	4
  6992  014FB0  0100               	movlb	0	; () banked
  6993  014FB2  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6994  014FB4  0E07               	movlw	7
  6995  014FB6  EC18  F0B2         	call	_LCD_goto_xy
  6996                           
  6997                           ;RemoteCan.c: 471: LCD_write_integer(user_data, 0, 0x01);
  6998  014FBA  C025  F089         	movff	_user_data,LCD_write_integer@value	;volatile
  6999  014FBE  C026  F08A         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7000  014FC2  0E00               	movlw	0
  7001  014FC4  0100               	movlb	0	; () banked
  7002  014FC6  6F8B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7003  014FC8  0E01               	movlw	1
  7004  014FCA  0100               	movlb	0	; () banked
  7005  014FCC  6F8C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7006  014FCE  EC33  F0A6         	call	_LCD_write_integer	;wreg free
  7007  014FD2  0012               	return	
  7008  014FD4                     __end_of_LCD_Handler:
  7009                           	opt stack 0
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           intcon	equ	0xFF2
  7015                           postinc0	equ	0xFEE
  7016                           wreg	equ	0xFE8
  7017                           status	equ	0xFD8
  7018                           
  7019 ;; *************** function _sprintf *****************
  7020 ;; Defined at:
  7021 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  sp              2   99[BANK0 ] PTR unsigned char 
  7024 ;;		 -> str(12), 
  7025 ;;  f               2  101[BANK0 ] PTR const unsigned char 
  7026 ;;		 -> STR_5(5), 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  7029 ;;  tmpval          4   14[BANK1 ] struct .
  7030 ;;  val             4    8[BANK1 ] unsigned long 
  7031 ;;  cp              3    0        PTR const unsigned char 
  7032 ;;  prec            2   18[BANK1 ] int 
  7033 ;;  exp             2   12[BANK1 ] int 
  7034 ;;  flag            2    6[BANK1 ] unsigned short 
  7035 ;;  ap              2    4[BANK1 ] PTR void [1]
  7036 ;;		 -> ?_sprintf(2), 
  7037 ;;  len             2    0        unsigned int 
  7038 ;;  width           2    0        int 
  7039 ;;  c               1   24[BANK1 ] char 
  7040 ;;  d               1    0        unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  2   99[BANK0 ] int 
  7043 ;; Registers used:
  7044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7050 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;Total ram usage:       35 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    5
  7057 ;; This function calls:
  7058 ;;		___awdiv
  7059 ;;		___fladd
  7060 ;;		___flge
  7061 ;;		___flmul
  7062 ;;		___flneg
  7063 ;;		___flsub
  7064 ;;		___fltol
  7065 ;;		___lldiv
  7066 ;;		___llmod
  7067 ;;		___wmul
  7068 ;;		___xxtofl
  7069 ;;		__div_to_l_
  7070 ;;		__tdiv_to_l_
  7071 ;;		_fround
  7072 ;;		_isdigit
  7073 ;;		_scale
  7074 ;; This function is called by:
  7075 ;;		_LCD_Handler
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text10
  7080  010B06                     __ptext10:
  7081                           	opt stack 0
  7082  010B06                     _sprintf:
  7083                           	opt stack 24
  7084                           
  7085                           ;doprnt.c: 494: va_list ap;
  7086                           ;doprnt.c: 499: signed char c;
  7087                           ;doprnt.c: 501: int width;
  7088                           ;doprnt.c: 504: int prec;
  7089                           ;doprnt.c: 508: unsigned short flag;
  7090                           ;doprnt.c: 515: char d;
  7091                           ;doprnt.c: 516: double fval;
  7092                           ;doprnt.c: 517: int exp;
  7093                           ;doprnt.c: 523: union {
  7094                           ;doprnt.c: 524: unsigned long vd;
  7095                           ;doprnt.c: 525: double integ;
  7096                           ;doprnt.c: 526: } tmpval;
  7097                           ;doprnt.c: 528: unsigned long val;
  7098                           ;doprnt.c: 529: unsigned len;
  7099                           ;doprnt.c: 530: const char * cp;
  7100                           ;doprnt.c: 533: *ap = __va_start();
  7101                           
  7102                           ;incstack = 0
  7103  010B06  0EC7               	movlw	low (?_sprintf+4)
  7104  010B08  0101               	movlb	1	; () banked
  7105  010B0A  6F34               	movwf	sprintf@ap& (0+255),b
  7106  010B0C  0E00               	movlw	high (?_sprintf+4)
  7107  010B0E  0101               	movlb	1	; () banked
  7108  010B10  6F35               	movwf	(sprintf@ap+1)& (0+255),b
  7109                           
  7110                           ;doprnt.c: 536: while(c = *f++) {
  7111  010B12  EFB5  F089         	goto	l8957
  7112  010B16                     l8759:
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;doprnt.c: 538: if(c != '%')
  7116  010B16  0E25               	movlw	37
  7117  010B18  0101               	movlb	1	; () banked
  7118  010B1A  1948               	xorwf	sprintf@c& (0+255),w,b
  7119  010B1C  B4D8               	btfsc	status,2,c
  7120  010B1E  D008               	goto	l8765
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;doprnt.c: 540: {
  7124                           ;doprnt.c: 541: ((*sp++ = (c)));
  7125  010B20  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7126  010B24  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7127  010B28  C148  FFDF         	movff	sprintf@c,indf2
  7128  010B2C  EFB2  F089         	goto	l8955
  7129  010B30                     l8765:
  7130                           
  7131                           ;doprnt.c: 543: }
  7132                           ;doprnt.c: 548: flag = 0;
  7133  010B30  0E00               	movlw	0
  7134  010B32  0101               	movlb	1	; () banked
  7135  010B34  6F37               	movwf	(sprintf@flag+1)& (0+255),b
  7136  010B36  0E00               	movlw	0
  7137  010B38  6F36               	movwf	sprintf@flag& (0+255),b
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;doprnt.c: 611: if(*f == '.') {
  7141  010B3A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7142  010B3E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7143  010B42                     	if	0	;tblptru may be non-zero
  7144  010B42                     	endif
  7145  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7146  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  7147  010B44  6EF8               	movwf	tblptru,c
  7148  010B46                     	endif
  7149  010B46  0008               	tblrd		*
  7150  010B48  50F5               	movf	tablat,w,c
  7151  010B4A  0A2E               	xorlw	46
  7152  010B4C  A4D8               	btfss	status,2,c
  7153  010B4E  D03D               	goto	l8779
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;doprnt.c: 612: flag |= 0x4000;
  7157  010B50  0101               	movlb	1	; () banked
  7158  010B52  8D37               	bsf	(sprintf@flag+1)& (0+255),6,b
  7159                           
  7160                           ;doprnt.c: 613: f++;
  7161  010B54  0100               	movlb	0	; () banked
  7162  010B56  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7163  010B58  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;doprnt.c: 620: {
  7167                           ;doprnt.c: 621: prec = 0;
  7168  010B5A  0E00               	movlw	0
  7169  010B5C  0101               	movlb	1	; () banked
  7170  010B5E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7171  010B60  0E00               	movlw	0
  7172  010B62  6F42               	movwf	sprintf@prec& (0+255),b
  7173                           
  7174                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7175  010B64  D025               	goto	l8777
  7176  010B66                     l8773:
  7177                           
  7178                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7179  010B66  C142  F071         	movff	sprintf@prec,___wmul@multiplier
  7180  010B6A  C143  F072         	movff	sprintf@prec+1,___wmul@multiplier+1
  7181  010B6E  0E00               	movlw	0
  7182  010B70  0100               	movlb	0	; () banked
  7183  010B72  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7184  010B74  0E0A               	movlw	10
  7185  010B76  6F73               	movwf	___wmul@multiplicand& (0+255),b
  7186  010B78  EC49  F0B1         	call	___wmul	;wreg free
  7187  010B7C  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7188  010B80  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7189  010B84                     	if	0	;tblptru may be non-zero
  7190  010B84                     	endif
  7191  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7192  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  7193  010B86  6EF8               	movwf	tblptru,c
  7194  010B88                     	endif
  7195  010B88  0008               	tblrd		*
  7196  010B8A  50F5               	movf	tablat,w,c
  7197  010B8C  0100               	movlb	0	; () banked
  7198  010B8E  2771               	addwf	?___wmul& (0+255),f,b
  7199  010B90  0E00               	movlw	0
  7200  010B92  0100               	movlb	0	; () banked
  7201  010B94  2372               	addwfc	(?___wmul+1)& (0+255),f,b
  7202  010B96  0ED0               	movlw	208
  7203  010B98  0100               	movlb	0	; () banked
  7204  010B9A  2571               	addwf	?___wmul& (0+255),w,b
  7205  010B9C  0101               	movlb	1	; () banked
  7206  010B9E  6F42               	movwf	sprintf@prec& (0+255),b
  7207  010BA0  0EFF               	movlw	255
  7208  010BA2  0100               	movlb	0	; () banked
  7209  010BA4  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  7210  010BA6  0101               	movlb	1	; () banked
  7211  010BA8  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7212                           
  7213                           ; BSR set to: 1
  7214  010BAA  0100               	movlb	0	; () banked
  7215  010BAC  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7216  010BAE  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7217  010BB0                     l8777:
  7218  010BB0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7219  010BB4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7220  010BB8                     	if	0	;tblptru may be non-zero
  7221  010BB8                     	endif
  7222  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7223  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  7224  010BBA  6EF8               	movwf	tblptru,c
  7225  010BBC                     	endif
  7226  010BBC  0008               	tblrd		*
  7227  010BBE  50F5               	movf	tablat,w,c
  7228  010BC0  ECB0  F0B1         	call	_isdigit
  7229  010BC4  A0D8               	btfss	status,0,c
  7230  010BC6  D00C               	goto	l8787
  7231  010BC8  D7CE               	goto	l8773
  7232  010BCA                     l8779:
  7233                           
  7234                           ;doprnt.c: 626: prec = 0;
  7235  010BCA  0E00               	movlw	0
  7236  010BCC  0101               	movlb	1	; () banked
  7237  010BCE  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7238  010BD0  0E00               	movlw	0
  7239  010BD2  6F42               	movwf	sprintf@prec& (0+255),b
  7240                           
  7241                           ; BSR set to: 1
  7242                           ;doprnt.c: 628: flag |= 0x1000;
  7243  010BD4  0101               	movlb	1	; () banked
  7244  010BD6  8937               	bsf	(sprintf@flag+1)& (0+255),4,b
  7245                           
  7246                           ; BSR set to: 1
  7247                           ;doprnt.c: 630: }
  7248                           ;doprnt.c: 635: switch(c = *f++) {
  7249  010BD8  D003               	goto	l8787
  7250  010BDA                     l8783:
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;doprnt.c: 663: flag |= 0x400;
  7254  010BDA  0101               	movlb	1	; () banked
  7255  010BDC  8537               	bsf	(sprintf@flag+1)& (0+255),2,b
  7256                           
  7257                           ;doprnt.c: 664: break;
  7258  010BDE  D015               	goto	l8789
  7259  010BE0                     l8787:
  7260  010BE0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7261  010BE4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7262  010BE8  0100               	movlb	0	; () banked
  7263  010BEA  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7264  010BEC  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7265  010BEE                     	if	0	;tblptru may be non-zero
  7266  010BEE                     	endif
  7267  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7268  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7269  010BF0  6EF8               	movwf	tblptru,c
  7270  010BF2                     	endif
  7271  010BF2  0008               	tblrd		*
  7272  010BF4  CFF5 F148          	movff	tablat,sprintf@c
  7273  010BF8  0101               	movlb	1	; () banked
  7274  010BFA  5148               	movf	sprintf@c& (0+255),w,b
  7275                           
  7276                           ; Switch size 1, requested type "space"
  7277                           ; Number of cases is 2, Range of values is 0 to 102
  7278                           ; switch strategies available:
  7279                           ; Name         Instructions Cycles
  7280                           ; simple_byte            7     4 (average)
  7281                           ;	Chosen strategy is simple_byte
  7282  010BFC  0A00               	xorlw	0	; case 0
  7283  010BFE  B4D8               	btfsc	status,2,c
  7284  010C00  D3C5               	goto	l8959
  7285  010C02  0A66               	xorlw	102	; case 102
  7286  010C04  B4D8               	btfsc	status,2,c
  7287  010C06  D7E9               	goto	l8783
  7288  010C08  D3B0               	goto	l8957
  7289  010C0A                     l8789:
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;doprnt.c: 825: if(flag & (0x700)) {
  7293  010C0A  0E07               	movlw	7
  7294  010C0C  0101               	movlb	1	; () banked
  7295  010C0E  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7296  010C10  B4D8               	btfsc	status,2,c
  7297  010C12  D353               	goto	l8937
  7298                           
  7299                           ; BSR set to: 1
  7300                           ;doprnt.c: 827: if(flag & 0x1000)
  7301  010C14  0101               	movlb	1	; () banked
  7302  010C16  A937               	btfss	(sprintf@flag+1)& (0+255),4,b
  7303  010C18  D005               	goto	l8795
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;doprnt.c: 829: prec = 6;
  7307  010C1A  0E00               	movlw	0
  7308  010C1C  0101               	movlb	1	; () banked
  7309  010C1E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7310  010C20  0E06               	movlw	6
  7311  010C22  6F42               	movwf	sprintf@prec& (0+255),b
  7312  010C24                     l8795:
  7313                           
  7314                           ; BSR set to: 1
  7315                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7316  010C24  C134  FFD9         	movff	sprintf@ap,fsr2l
  7317  010C28  C135  FFDA         	movff	sprintf@ap+1,fsr2h
  7318  010C2C  CFDE F144          	movff	postinc2,sprintf@fval
  7319  010C30  CFDE F145          	movff	postinc2,sprintf@fval+1
  7320  010C34  CFDE F146          	movff	postinc2,sprintf@fval+2
  7321  010C38  CFDE F147          	movff	postinc2,sprintf@fval+3
  7322                           
  7323                           ; BSR set to: 1
  7324  010C3C  0E04               	movlw	4
  7325  010C3E  0101               	movlb	1	; () banked
  7326  010C40  2734               	addwf	sprintf@ap& (0+255),f,b
  7327  010C42  0E00               	movlw	0
  7328  010C44  2335               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7329                           
  7330                           ; BSR set to: 1
  7331                           ;doprnt.c: 831: if(fval < 0.0) {
  7332  010C46  0101               	movlb	1	; () banked
  7333  010C48  AF47               	btfss	(sprintf@fval+3)& (0+255),7,b
  7334  010C4A  D015               	goto	l8805
  7335                           
  7336                           ; BSR set to: 1
  7337                           ;doprnt.c: 832: fval = -fval;
  7338  010C4C  C144  F098         	movff	sprintf@fval,___flneg@f1
  7339  010C50  C145  F099         	movff	sprintf@fval+1,___flneg@f1+1
  7340  010C54  C146  F09A         	movff	sprintf@fval+2,___flneg@f1+2
  7341  010C58  C147  F09B         	movff	sprintf@fval+3,___flneg@f1+3
  7342  010C5C  EC2D  F0B1         	call	___flneg	;wreg free
  7343  010C60  C098  F144         	movff	?___flneg,sprintf@fval
  7344  010C64  C099  F145         	movff	?___flneg+1,sprintf@fval+1
  7345  010C68  C09A  F146         	movff	?___flneg+2,sprintf@fval+2
  7346  010C6C  C09B  F147         	movff	?___flneg+3,sprintf@fval+3
  7347                           
  7348                           ;doprnt.c: 833: flag |= 0x03;
  7349  010C70  0E03               	movlw	3
  7350  010C72  0101               	movlb	1	; () banked
  7351  010C74  1336               	iorwf	sprintf@flag& (0+255),f,b
  7352  010C76                     l8805:
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;doprnt.c: 834: }
  7356                           ;doprnt.c: 835: exp = 0;
  7357  010C76  0E00               	movlw	0
  7358  010C78  0101               	movlb	1	; () banked
  7359  010C7A  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  7360  010C7C  0E00               	movlw	0
  7361  010C7E  6F3C               	movwf	sprintf@exp& (0+255),b
  7362                           
  7363                           ; BSR set to: 1
  7364                           ;doprnt.c: 836: if( fval!=0) {
  7365  010C80  0101               	movlb	1	; () banked
  7366  010C82  5144               	movf	sprintf@fval& (0+255),w,b
  7367  010C84  0101               	movlb	1	; () banked
  7368  010C86  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7369  010C88  0101               	movlb	1	; () banked
  7370  010C8A  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7371  010C8C  0101               	movlb	1	; () banked
  7372  010C8E  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7373  010C90  B4D8               	btfsc	status,2,c
  7374  010C92  D08E               	goto	l8833
  7375                           
  7376                           ; BSR set to: 1
  7377                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7378  010C94  0101               	movlb	1	; () banked
  7379  010C96  3546               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7380  010C98  3547               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7381  010C9A  0F82               	addlw	130
  7382  010C9C  0101               	movlb	1	; () banked
  7383  010C9E  6F3C               	movwf	sprintf@exp& (0+255),b
  7384  010CA0  0101               	movlb	1	; () banked
  7385  010CA2  6B3D               	clrf	(sprintf@exp+1)& (0+255),b
  7386  010CA4  0EFF               	movlw	255
  7387  010CA6  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7388                           
  7389                           ; BSR set to: 1
  7390                           ;doprnt.c: 838: exp--;
  7391  010CA8  0101               	movlb	1	; () banked
  7392  010CAA  073C               	decf	sprintf@exp& (0+255),f,b
  7393  010CAC  A0D8               	btfss	status,0,c
  7394  010CAE  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7395                           
  7396                           ; BSR set to: 1
  7397                           ;doprnt.c: 839: exp *= 3;
  7398  010CB0  C13C  F071         	movff	sprintf@exp,___wmul@multiplier
  7399  010CB4  C13D  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
  7400  010CB8  0E00               	movlw	0
  7401  010CBA  0100               	movlb	0	; () banked
  7402  010CBC  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7403  010CBE  0E03               	movlw	3
  7404  010CC0  6F73               	movwf	___wmul@multiplicand& (0+255),b
  7405  010CC2  EC49  F0B1         	call	___wmul	;wreg free
  7406  010CC6  C071  F13C         	movff	?___wmul,sprintf@exp
  7407  010CCA  C072  F13D         	movff	?___wmul+1,sprintf@exp+1
  7408                           
  7409                           ;doprnt.c: 840: exp /= 10;
  7410  010CCE  C13C  F077         	movff	sprintf@exp,___awdiv@dividend
  7411  010CD2  C13D  F078         	movff	sprintf@exp+1,___awdiv@dividend+1
  7412  010CD6  0E00               	movlw	0
  7413  010CD8  0100               	movlb	0	; () banked
  7414  010CDA  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  7415  010CDC  0E0A               	movlw	10
  7416  010CDE  6F79               	movwf	___awdiv@divisor& (0+255),b
  7417  010CE0  ECF8  F0AB         	call	___awdiv	;wreg free
  7418  010CE4  C077  F13C         	movff	?___awdiv,sprintf@exp
  7419  010CE8  C078  F13D         	movff	?___awdiv+1,sprintf@exp+1
  7420                           
  7421                           ;doprnt.c: 841: if(exp < 0)
  7422  010CEC  0101               	movlb	1	; () banked
  7423  010CEE  AF3D               	btfss	(sprintf@exp+1)& (0+255),7,b
  7424  010CF0  D004               	goto	l8821
  7425                           
  7426                           ; BSR set to: 1
  7427                           ;doprnt.c: 842: exp--;
  7428  010CF2  0101               	movlb	1	; () banked
  7429  010CF4  073C               	decf	sprintf@exp& (0+255),f,b
  7430  010CF6  A0D8               	btfss	status,0,c
  7431  010CF8  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7432  010CFA                     l8821:
  7433                           
  7434                           ; BSR set to: 1
  7435                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7436  010CFA  0101               	movlb	1	; () banked
  7437  010CFC  513C               	movf	sprintf@exp& (0+255),w,b
  7438  010CFE  0800               	sublw	0
  7439  010D00  EC87  F094         	call	_scale
  7440  010D04  C098  F13E         	movff	?_scale,sprintf@tmpval
  7441  010D08  C099  F13F         	movff	?_scale+1,sprintf@tmpval+1
  7442  010D0C  C09A  F140         	movff	?_scale+2,sprintf@tmpval+2
  7443  010D10  C09B  F141         	movff	?_scale+3,sprintf@tmpval+3
  7444                           
  7445                           ;doprnt.c: 847: tmpval.integ *= fval;
  7446  010D14  C13E  F07F         	movff	sprintf@tmpval,___flmul@b
  7447  010D18  C13F  F080         	movff	sprintf@tmpval+1,___flmul@b+1
  7448  010D1C  C140  F081         	movff	sprintf@tmpval+2,___flmul@b+2
  7449  010D20  C141  F082         	movff	sprintf@tmpval+3,___flmul@b+3
  7450  010D24  C144  F083         	movff	sprintf@fval,___flmul@a
  7451  010D28  C145  F084         	movff	sprintf@fval+1,___flmul@a+1
  7452  010D2C  C146  F085         	movff	sprintf@fval+2,___flmul@a+2
  7453  010D30  C147  F086         	movff	sprintf@fval+3,___flmul@a+3
  7454  010D34  ECEE  F09B         	call	___flmul	;wreg free
  7455  010D38  C07F  F13E         	movff	?___flmul,sprintf@tmpval
  7456  010D3C  C080  F13F         	movff	?___flmul+1,sprintf@tmpval+1
  7457  010D40  C081  F140         	movff	?___flmul+2,sprintf@tmpval+2
  7458  010D44  C082  F141         	movff	?___flmul+3,sprintf@tmpval+3
  7459                           
  7460                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7461  010D48  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7462  010D4C  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7463  010D50  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7464  010D54  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7465  010D58  0E00               	movlw	0
  7466  010D5A  0100               	movlb	0	; () banked
  7467  010D5C  6F75               	movwf	___flge@ff2& (0+255),b
  7468  010D5E  0E00               	movlw	0
  7469  010D60  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7470  010D62  0E80               	movlw	128
  7471  010D64  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7472  010D66  0E3F               	movlw	63
  7473  010D68  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7474  010D6A  ECB9  F0A8         	call	___flge	;wreg free
  7475  010D6E  0100               	movlb	0	; () banked
  7476  010D70  B0D8               	btfsc	status,0,c
  7477  010D72  D005               	goto	l8829
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;doprnt.c: 849: exp--;
  7481  010D74  0101               	movlb	1	; () banked
  7482  010D76  073C               	decf	sprintf@exp& (0+255),f,b
  7483  010D78  A0D8               	btfss	status,0,c
  7484  010D7A  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7485  010D7C  D019               	goto	l8833
  7486  010D7E                     l8829:
  7487                           
  7488                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7489  010D7E  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7490  010D82  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7491  010D86  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7492  010D8A  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7493  010D8E  0E00               	movlw	0
  7494  010D90  0100               	movlb	0	; () banked
  7495  010D92  6F75               	movwf	___flge@ff2& (0+255),b
  7496  010D94  0E00               	movlw	0
  7497  010D96  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7498  010D98  0E20               	movlw	32
  7499  010D9A  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7500  010D9C  0E41               	movlw	65
  7501  010D9E  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7502  010DA0  ECB9  F0A8         	call	___flge	;wreg free
  7503  010DA4  0100               	movlb	0	; () banked
  7504  010DA6  A0D8               	btfss	status,0,c
  7505  010DA8  D003               	goto	l8833
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;doprnt.c: 851: exp++;
  7509  010DAA  0101               	movlb	1	; () banked
  7510  010DAC  4B3C               	infsnz	sprintf@exp& (0+255),f,b
  7511  010DAE  2B3D               	incf	(sprintf@exp+1)& (0+255),f,b
  7512  010DB0                     l8833:
  7513                           
  7514                           ;doprnt.c: 852: }
  7515                           ;doprnt.c: 1112: if(prec <= 12)
  7516  010DB0  0101               	movlb	1	; () banked
  7517  010DB2  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7518  010DB4  D008               	goto	l8835
  7519  010DB6  0101               	movlb	1	; () banked
  7520  010DB8  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7521  010DBA  E123               	bnz	l8837
  7522  010DBC  0E0D               	movlw	13
  7523  010DBE  0101               	movlb	1	; () banked
  7524  010DC0  5D42               	subwf	sprintf@prec& (0+255),w,b
  7525  010DC2  B0D8               	btfsc	status,0,c
  7526  010DC4  D01E               	goto	l8837
  7527  010DC6                     l8835:
  7528                           
  7529                           ; BSR set to: 1
  7530                           ;doprnt.c: 1113: fval += fround(prec);
  7531  010DC6  C144  F0A5         	movff	sprintf@fval,___fladd@b
  7532  010DCA  C145  F0A6         	movff	sprintf@fval+1,___fladd@b+1
  7533  010DCE  C146  F0A7         	movff	sprintf@fval+2,___fladd@b+2
  7534  010DD2  C147  F0A8         	movff	sprintf@fval+3,___fladd@b+3
  7535  010DD6  0101               	movlb	1	; () banked
  7536  010DD8  5142               	movf	sprintf@prec& (0+255),w,b
  7537  010DDA  ECF0  F0A1         	call	_fround
  7538  010DDE  C098  F0A9         	movff	?_fround,___fladd@a
  7539  010DE2  C099  F0AA         	movff	?_fround+1,___fladd@a+1
  7540  010DE6  C09A  F0AB         	movff	?_fround+2,___fladd@a+2
  7541  010DEA  C09B  F0AC         	movff	?_fround+3,___fladd@a+3
  7542  010DEE  EC9A  F099         	call	___fladd	;wreg free
  7543  010DF2  C0A5  F144         	movff	?___fladd,sprintf@fval
  7544  010DF6  C0A6  F145         	movff	?___fladd+1,sprintf@fval+1
  7545  010DFA  C0A7  F146         	movff	?___fladd+2,sprintf@fval+2
  7546  010DFE  C0A8  F147         	movff	?___fladd+3,sprintf@fval+3
  7547  010E02                     l8837:
  7548                           
  7549                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7550  010E02  0101               	movlb	1	; () banked
  7551  010E04  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7552  010E06  D008               	goto	l8839
  7553  010E08  0101               	movlb	1	; () banked
  7554  010E0A  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7555  010E0C  E12E               	bnz	l8845
  7556  010E0E  0E0A               	movlw	10
  7557  010E10  0101               	movlb	1	; () banked
  7558  010E12  5D3C               	subwf	sprintf@exp& (0+255),w,b
  7559  010E14  B0D8               	btfsc	status,0,c
  7560  010E16  D029               	goto	l8845
  7561  010E18                     l8839:
  7562                           
  7563                           ; BSR set to: 1
  7564  010E18  0101               	movlb	1	; () banked
  7565  010E1A  5144               	movf	sprintf@fval& (0+255),w,b
  7566  010E1C  0101               	movlb	1	; () banked
  7567  010E1E  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7568  010E20  0101               	movlb	1	; () banked
  7569  010E22  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7570  010E24  0101               	movlb	1	; () banked
  7571  010E26  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7572  010E28  B4D8               	btfsc	status,2,c
  7573  010E2A  D06D               	goto	l8859
  7574                           
  7575                           ; BSR set to: 1
  7576  010E2C  C144  F0B9         	movff	sprintf@fval,___fltol@f1
  7577  010E30  C145  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  7578  010E34  C146  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  7579  010E38  C147  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  7580  010E3C  ECFC  F0AA         	call	___fltol	;wreg free
  7581  010E40  0100               	movlb	0	; () banked
  7582  010E42  51B9               	movf	?___fltol& (0+255),w,b
  7583  010E44  0100               	movlb	0	; () banked
  7584  010E46  11BA               	iorwf	(?___fltol+1)& (0+255),w,b
  7585  010E48  0100               	movlb	0	; () banked
  7586  010E4A  11BB               	iorwf	(?___fltol+2)& (0+255),w,b
  7587  010E4C  0100               	movlb	0	; () banked
  7588  010E4E  11BC               	iorwf	(?___fltol+3)& (0+255),w,b
  7589  010E50  A4D8               	btfss	status,2,c
  7590  010E52  D059               	goto	l8859
  7591                           
  7592                           ; BSR set to: 0
  7593  010E54  0101               	movlb	1	; () banked
  7594  010E56  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7595  010E58  D056               	goto	l8859
  7596  010E5A  0101               	movlb	1	; () banked
  7597  010E5C  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7598  010E5E  E105               	bnz	l8845
  7599  010E60  0E02               	movlw	2
  7600  010E62  0101               	movlb	1	; () banked
  7601  010E64  5D3C               	subwf	sprintf@exp& (0+255),w,b
  7602  010E66  A0D8               	btfss	status,0,c
  7603  010E68  D04E               	goto	l8859
  7604  010E6A                     l8845:
  7605                           
  7606                           ; BSR set to: 1
  7607                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7608  010E6A  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7609  010E6E  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7610  010E72  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7611  010E76  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7612  010E7A  0E5F               	movlw	95
  7613  010E7C  0100               	movlb	0	; () banked
  7614  010E7E  6F75               	movwf	___flge@ff2& (0+255),b
  7615  010E80  0E70               	movlw	112
  7616  010E82  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7617  010E84  0E89               	movlw	137
  7618  010E86  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7619  010E88  0E40               	movlw	64
  7620  010E8A  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7621  010E8C  ECB9  F0A8         	call	___flge	;wreg free
  7622  010E90  0100               	movlb	0	; () banked
  7623  010E92  B0D8               	btfsc	status,0,c
  7624  010E94  D003               	goto	l8849
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7628  010E96  0101               	movlb	1	; () banked
  7629  010E98  0EF7               	movlw	247
  7630  010E9A  D002               	goto	L6
  7631  010E9C                     l8849:
  7632                           
  7633                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7634  010E9C  0101               	movlb	1	; () banked
  7635  010E9E  0EF8               	movlw	248
  7636  010EA0                     L6:
  7637  010EA0  273C               	addwf	sprintf@exp& (0+255),f,b
  7638  010EA2  0EFF               	movlw	255
  7639  010EA4  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7640                           
  7641                           ; BSR set to: 1
  7642                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7643                           
  7644                           ; BSR set to: 1
  7645  010EA6  0101               	movlb	1	; () banked
  7646  010EA8  513C               	movf	sprintf@exp& (0+255),w,b
  7647  010EAA  EC87  F094         	call	_scale
  7648  010EAE  C098  F13E         	movff	?_scale,sprintf@tmpval
  7649  010EB2  C099  F13F         	movff	?_scale+1,sprintf@tmpval+1
  7650  010EB6  C09A  F140         	movff	?_scale+2,sprintf@tmpval+2
  7651  010EBA  C09B  F141         	movff	?_scale+3,sprintf@tmpval+3
  7652  010EBE  C144  F071         	movff	sprintf@fval,__div_to_l_@f1
  7653  010EC2  C145  F072         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7654  010EC6  C146  F073         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7655  010ECA  C147  F074         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7656  010ECE  C13E  F075         	movff	sprintf@tmpval,__div_to_l_@f2
  7657  010ED2  C13F  F076         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7658  010ED6  C140  F077         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7659  010EDA  C141  F078         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7660  010EDE  EC81  F0A9         	call	__div_to_l_	;wreg free
  7661  010EE2  C071  F138         	movff	?__div_to_l_,sprintf@val
  7662  010EE6  C072  F139         	movff	?__div_to_l_+1,sprintf@val+1
  7663  010EEA  C073  F13A         	movff	?__div_to_l_+2,sprintf@val+2
  7664  010EEE  C074  F13B         	movff	?__div_to_l_+3,sprintf@val+3
  7665                           
  7666                           ;doprnt.c: 1129: fval = 0.0;
  7667  010EF2  0E00               	movlw	0
  7668  010EF4  0101               	movlb	1	; () banked
  7669  010EF6  6F44               	movwf	sprintf@fval& (0+255),b
  7670  010EF8  0E00               	movlw	0
  7671  010EFA  6F45               	movwf	(sprintf@fval+1)& (0+255),b
  7672  010EFC  0E00               	movlw	0
  7673  010EFE  6F46               	movwf	(sprintf@fval+2)& (0+255),b
  7674  010F00  0E00               	movlw	0
  7675  010F02  6F47               	movwf	(sprintf@fval+3)& (0+255),b
  7676                           
  7677                           ;doprnt.c: 1130: } else {
  7678  010F04  D03C               	goto	l8863
  7679  010F06                     l8859:
  7680                           
  7681                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7682  010F06  C144  F0B9         	movff	sprintf@fval,___fltol@f1
  7683  010F0A  C145  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  7684  010F0E  C146  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  7685  010F12  C147  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  7686  010F16  ECFC  F0AA         	call	___fltol	;wreg free
  7687  010F1A  C0B9  F138         	movff	?___fltol,sprintf@val
  7688  010F1E  C0BA  F139         	movff	?___fltol+1,sprintf@val+1
  7689  010F22  C0BB  F13A         	movff	?___fltol+2,sprintf@val+2
  7690  010F26  C0BC  F13B         	movff	?___fltol+3,sprintf@val+3
  7691                           
  7692                           ;doprnt.c: 1132: fval -= (double)val;
  7693  010F2A  C144  F0B9         	movff	sprintf@fval,___flsub@b
  7694  010F2E  C145  F0BA         	movff	sprintf@fval+1,___flsub@b+1
  7695  010F32  C146  F0BB         	movff	sprintf@fval+2,___flsub@b+2
  7696  010F36  C147  F0BC         	movff	sprintf@fval+3,___flsub@b+3
  7697  010F3A  C138  F071         	movff	sprintf@val,___xxtofl@val
  7698  010F3E  C139  F072         	movff	sprintf@val+1,___xxtofl@val+1
  7699  010F42  C13A  F073         	movff	sprintf@val+2,___xxtofl@val+2
  7700  010F46  C13B  F074         	movff	sprintf@val+3,___xxtofl@val+3
  7701  010F4A  0E00               	movlw	0
  7702  010F4C  EC69  F0A4         	call	___xxtofl
  7703  010F50  C071  F0BD         	movff	?___xxtofl,___flsub@a
  7704  010F54  C072  F0BE         	movff	?___xxtofl+1,___flsub@a+1
  7705  010F58  C073  F0BF         	movff	?___xxtofl+2,___flsub@a+2
  7706  010F5C  C074  F0C0         	movff	?___xxtofl+3,___flsub@a+3
  7707  010F60  EC88  F0B0         	call	___flsub	;wreg free
  7708  010F64  C0B9  F144         	movff	?___flsub,sprintf@fval
  7709  010F68  C0BA  F145         	movff	?___flsub+1,sprintf@fval+1
  7710  010F6C  C0BB  F146         	movff	?___flsub+2,sprintf@fval+2
  7711  010F70  C0BC  F147         	movff	?___flsub+3,sprintf@fval+3
  7712                           
  7713                           ;doprnt.c: 1133: exp = 0;
  7714  010F74  0E00               	movlw	0
  7715  010F76  0101               	movlb	1	; () banked
  7716  010F78  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  7717  010F7A  0E00               	movlw	0
  7718  010F7C  6F3C               	movwf	sprintf@exp& (0+255),b
  7719  010F7E                     l8863:
  7720                           
  7721                           ; BSR set to: 1
  7722                           ;doprnt.c: 1134: }
  7723                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7724  010F7E  0E01               	movlw	1
  7725  010F80  0101               	movlb	1	; () banked
  7726  010F82  6F48               	movwf	sprintf@c& (0+255),b
  7727  010F84                     l8865:
  7728                           
  7729                           ; BSR set to: 1
  7730  010F84  0E0A               	movlw	10
  7731  010F86  0101               	movlb	1	; () banked
  7732  010F88  1948               	xorwf	sprintf@c& (0+255),w,b
  7733  010F8A  B4D8               	btfsc	status,2,c
  7734  010F8C  D021               	goto	l8877
  7735                           
  7736                           ; BSR set to: 1
  7737                           ;doprnt.c: 1137: if(val < dpowers[c])
  7738                           
  7739                           ; BSR set to: 1
  7740                           
  7741                           ; BSR set to: 1
  7742  010F8E  0101               	movlb	1	; () banked
  7743  010F90  5148               	movf	sprintf@c& (0+255),w,b
  7744  010F92  0D04               	mullw	4
  7745  010F94  0E31               	movlw	low _dpowers
  7746  010F96  24F3               	addwf	prodl,w,c
  7747  010F98  6EF6               	movwf	tblptrl,c
  7748  010F9A  0EFE               	movlw	high _dpowers
  7749  010F9C  20F4               	addwfc	prodh,w,c
  7750  010F9E  6EF7               	movwf	tblptrh,c
  7751  010FA0                     	if	1	;There are 3 active tblptr bytes
  7752  010FA0  6AF8               	clrf	tblptru,c
  7753  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7754  010FA4  22F8               	addwfc	tblptru,f,c
  7755  010FA6                     	endif
  7756  010FA6  0009               	tblrd		*+
  7757  010FA8  50F5               	movf	tablat,w,c
  7758  010FAA  0101               	movlb	1	; () banked
  7759  010FAC  5D38               	subwf	sprintf@val& (0+255),w,b
  7760  010FAE  0009               	tblrd		*+
  7761  010FB0  50F5               	movf	tablat,w,c
  7762  010FB2  0101               	movlb	1	; () banked
  7763  010FB4  5939               	subwfb	(sprintf@val+1)& (0+255),w,b
  7764  010FB6  0009               	tblrd		*+
  7765  010FB8  50F5               	movf	tablat,w,c
  7766  010FBA  0101               	movlb	1	; () banked
  7767  010FBC  593A               	subwfb	(sprintf@val+2)& (0+255),w,b
  7768  010FBE  0009               	tblrd		*+
  7769  010FC0  50F5               	movf	tablat,w,c
  7770  010FC2  0101               	movlb	1	; () banked
  7771  010FC4  593B               	subwfb	(sprintf@val+3)& (0+255),w,b
  7772  010FC6  A0D8               	btfss	status,0,c
  7773  010FC8  D003               	goto	l8877
  7774                           
  7775                           ; BSR set to: 1
  7776                           
  7777                           ; BSR set to: 1
  7778                           
  7779                           ; BSR set to: 1
  7780                           ;doprnt.c: 1138: break;
  7781  010FCA  0101               	movlb	1	; () banked
  7782  010FCC  2B48               	incf	sprintf@c& (0+255),f,b
  7783  010FCE  D7DA               	goto	l8865
  7784  010FD0                     l8877:
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;doprnt.c: 1175: {
  7788                           ;doprnt.c: 1188: if(flag & 0x03)
  7789  010FD0  0E03               	movlw	3
  7790  010FD2  0101               	movlb	1	; () banked
  7791  010FD4  1536               	andwf	sprintf@flag& (0+255),w,b
  7792  010FD6  0100               	movlb	0	; () banked
  7793  010FD8  6FCB               	movwf	??_sprintf& (0+255),b
  7794  010FDA  0E00               	movlw	0
  7795  010FDC  0101               	movlb	1	; () banked
  7796  010FDE  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7797  010FE0  0100               	movlb	0	; () banked
  7798  010FE2  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  7799  010FE4  0100               	movlb	0	; () banked
  7800  010FE6  51CB               	movf	??_sprintf& (0+255),w,b
  7801  010FE8  0100               	movlb	0	; () banked
  7802  010FEA  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  7803  010FEC  B4D8               	btfsc	status,2,c
  7804  010FEE  D058               	goto	l8891
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7808  010FF0  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7809  010FF4  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7810  010FF8  0E2D               	movlw	45
  7811  010FFA  D050               	goto	L7
  7812  010FFC                     l8881:
  7813                           
  7814                           ; BSR set to: 0
  7815  010FFC  0100               	movlb	0	; () banked
  7816  010FFE  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7817  011000  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;doprnt.c: 1195: }
  7821                           ;doprnt.c: 1196: while(c--) {
  7822  011002  D04E               	goto	l8891
  7823  011004                     l8883:
  7824                           
  7825                           ;doprnt.c: 1200: {
  7826                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7827  011004  C138  F071         	movff	sprintf@val,___lldiv@dividend
  7828  011008  C139  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7829  01100C  C13A  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7830  011010  C13B  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7831  011014  0101               	movlb	1	; () banked
  7832  011016  5148               	movf	sprintf@c& (0+255),w,b
  7833  011018  0D04               	mullw	4
  7834  01101A  0E31               	movlw	low _dpowers
  7835  01101C  24F3               	addwf	prodl,w,c
  7836  01101E  6EF6               	movwf	tblptrl,c
  7837  011020  0EFE               	movlw	high _dpowers
  7838  011022  20F4               	addwfc	prodh,w,c
  7839  011024  6EF7               	movwf	tblptrh,c
  7840  011026                     	if	1	;There are 3 active tblptr bytes
  7841  011026  6AF8               	clrf	tblptru,c
  7842  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7843  01102A  22F8               	addwfc	tblptru,f,c
  7844  01102C                     	endif
  7845  01102C  0009               	tblrd		*+
  7846  01102E  CFF5 F075          	movff	tablat,___lldiv@divisor
  7847  011032  0009               	tblrd		*+
  7848  011034  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7849  011038  0009               	tblrd		*+
  7850  01103A  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7851  01103E  000A               	tblrd		*-
  7852  011040  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7853  011044  ECB6  F0AC         	call	___lldiv	;wreg free
  7854  011048  C071  F13E         	movff	?___lldiv,sprintf@tmpval
  7855  01104C  C072  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  7856  011050  C073  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  7857  011054  C074  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  7858                           
  7859                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7860  011058  C13E  F071         	movff	sprintf@tmpval,___llmod@dividend
  7861  01105C  C13F  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7862  011060  C140  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7863  011064  C141  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7864  011068  0E0A               	movlw	10
  7865  01106A  0100               	movlb	0	; () banked
  7866  01106C  6F75               	movwf	___llmod@divisor& (0+255),b
  7867  01106E  0E00               	movlw	0
  7868  011070  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  7869  011072  0E00               	movlw	0
  7870  011074  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  7871  011076  0E00               	movlw	0
  7872  011078  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  7873  01107A  EC6B  F0AE         	call	___llmod	;wreg free
  7874  01107E  C071  F13E         	movff	?___llmod,sprintf@tmpval
  7875  011082  C072  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  7876  011086  C073  F140         	movff	?___llmod+2,sprintf@tmpval+2
  7877  01108A  C074  F141         	movff	?___llmod+3,sprintf@tmpval+3
  7878                           
  7879                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7880  01108E  0101               	movlb	1	; () banked
  7881  011090  513E               	movf	sprintf@tmpval& (0+255),w,b
  7882  011092  0F30               	addlw	48
  7883  011094  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7884  011098  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7885  01109C                     L7:
  7886  01109C  6EDF               	movwf	indf2,c
  7887  01109E  D7AE               	goto	l8881
  7888  0110A0                     l8891:
  7889                           
  7890                           ; BSR set to: 0
  7891  0110A0  0101               	movlb	1	; () banked
  7892  0110A2  0748               	decf	sprintf@c& (0+255),f,b
  7893  0110A4  0101               	movlb	1	; () banked
  7894  0110A6  2948               	incf	sprintf@c& (0+255),w,b
  7895  0110A8  B4D8               	btfsc	status,2,c
  7896  0110AA  D00E               	goto	l8899
  7897  0110AC  D7AB               	goto	l8883
  7898  0110AE                     l8893:
  7899                           
  7900                           ; BSR set to: 1
  7901                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7902  0110AE  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7903  0110B2  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7904  0110B6  0E30               	movlw	48
  7905  0110B8  6EDF               	movwf	indf2,c
  7906                           
  7907                           ; BSR set to: 1
  7908  0110BA  0100               	movlb	0	; () banked
  7909  0110BC  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7910  0110BE  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;doprnt.c: 1209: exp--;
  7914  0110C0  0101               	movlb	1	; () banked
  7915  0110C2  073C               	decf	sprintf@exp& (0+255),f,b
  7916  0110C4  A0D8               	btfss	status,0,c
  7917  0110C6  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7918  0110C8                     l8899:
  7919                           
  7920                           ; BSR set to: 1
  7921  0110C8  0101               	movlb	1	; () banked
  7922  0110CA  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7923  0110CC  D007               	goto	l8901
  7924  0110CE  0101               	movlb	1	; () banked
  7925  0110D0  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7926  0110D2  E1ED               	bnz	l8893
  7927  0110D4  0101               	movlb	1	; () banked
  7928  0110D6  053C               	decf	sprintf@exp& (0+255),w,b
  7929  0110D8  B0D8               	btfsc	status,0,c
  7930  0110DA  D7E9               	goto	l8893
  7931  0110DC                     l8901:
  7932                           
  7933                           ; BSR set to: 1
  7934                           ;doprnt.c: 1210: }
  7935                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7936  0110DC  0101               	movlb	1	; () banked
  7937  0110DE  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7938  0110E0  D00C               	goto	l1029
  7939  0110E2  0101               	movlb	1	; () banked
  7940  0110E4  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7941  0110E6  E105               	bnz	u11910
  7942  0110E8  0E09               	movlw	9
  7943  0110EA  0101               	movlb	1	; () banked
  7944  0110EC  5D42               	subwf	sprintf@prec& (0+255),w,b
  7945  0110EE  A0D8               	btfss	status,0,c
  7946  0110F0  D004               	goto	l1029
  7947  0110F2                     u11910:
  7948                           
  7949                           ; BSR set to: 1
  7950                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7951  0110F2  0E08               	movlw	8
  7952  0110F4  0101               	movlb	1	; () banked
  7953  0110F6  6F48               	movwf	sprintf@c& (0+255),b
  7954  0110F8  D002               	goto	l8905
  7955  0110FA                     l1029:
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;doprnt.c: 1213: else
  7959                           ;doprnt.c: 1214: c = prec;
  7960  0110FA  C142  F148         	movff	sprintf@prec,sprintf@c
  7961  0110FE                     l8905:
  7962                           
  7963                           ; BSR set to: 1
  7964                           ;doprnt.c: 1215: prec -= c;
  7965  0110FE  0101               	movlb	1	; () banked
  7966  011100  5148               	movf	sprintf@c& (0+255),w,b
  7967  011102  0101               	movlb	1	; () banked
  7968  011104  5F42               	subwf	sprintf@prec& (0+255),f,b
  7969  011106  0E00               	movlw	0
  7970  011108  0101               	movlb	1	; () banked
  7971  01110A  BF48               	btfsc	sprintf@c& (0+255),7,b
  7972  01110C  0EFF               	movlw	255
  7973  01110E  0101               	movlb	1	; () banked
  7974  011110  5B43               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;doprnt.c: 1219: if(c)
  7978  011112  0101               	movlb	1	; () banked
  7979  011114  5148               	movf	sprintf@c& (0+255),w,b
  7980  011116  0101               	movlb	1	; () banked
  7981  011118  B4D8               	btfsc	status,2,c
  7982  01111A  D009               	goto	l8913
  7983                           
  7984                           ; BSR set to: 1
  7985                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7986  01111C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7987  011120  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7988  011124  0E2E               	movlw	46
  7989  011126  6EDF               	movwf	indf2,c
  7990                           
  7991                           ; BSR set to: 1
  7992  011128  0100               	movlb	0	; () banked
  7993  01112A  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7994  01112C  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7995  01112E                     l8913:
  7996                           
  7997                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7998  01112E  0101               	movlb	1	; () banked
  7999  011130  5148               	movf	sprintf@c& (0+255),w,b
  8000  011132  EC87  F094         	call	_scale
  8001  011136  C098  F130         	movff	?_scale,_sprintf$4257
  8002  01113A  C099  F131         	movff	?_scale+1,_sprintf$4257+1
  8003  01113E  C09A  F132         	movff	?_scale+2,_sprintf$4257+2
  8004  011142  C09B  F133         	movff	?_scale+3,_sprintf$4257+3
  8005                           
  8006                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8007  011146  C144  F083         	movff	sprintf@fval,___flmul@a
  8008  01114A  C145  F084         	movff	sprintf@fval+1,___flmul@a+1
  8009  01114E  C146  F085         	movff	sprintf@fval+2,___flmul@a+2
  8010  011152  C147  F086         	movff	sprintf@fval+3,___flmul@a+3
  8011  011156  C130  F07F         	movff	_sprintf$4257,___flmul@b
  8012  01115A  C131  F080         	movff	_sprintf$4257+1,___flmul@b+1
  8013  01115E  C132  F081         	movff	_sprintf$4257+2,___flmul@b+2
  8014  011162  C133  F082         	movff	_sprintf$4257+3,___flmul@b+3
  8015  011166  ECEE  F09B         	call	___flmul	;wreg free
  8016  01116A  C07F  F0B9         	movff	?___flmul,___fltol@f1
  8017  01116E  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  8018  011172  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  8019  011176  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  8020  01117A  ECFC  F0AA         	call	___fltol	;wreg free
  8021  01117E  C0B9  F138         	movff	?___fltol,sprintf@val
  8022  011182  C0BA  F139         	movff	?___fltol+1,sprintf@val+1
  8023  011186  C0BB  F13A         	movff	?___fltol+2,sprintf@val+2
  8024  01118A  C0BC  F13B         	movff	?___fltol+3,sprintf@val+3
  8025                           
  8026                           ;doprnt.c: 1228: while(c--) {
  8027  01118E  D07A               	goto	l8927
  8028  011190                     l8917:
  8029                           
  8030                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8031  011190  C138  F071         	movff	sprintf@val,___lldiv@dividend
  8032  011194  C139  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8033  011198  C13A  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8034  01119C  C13B  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8035  0111A0  0101               	movlb	1	; () banked
  8036  0111A2  5148               	movf	sprintf@c& (0+255),w,b
  8037  0111A4  0D04               	mullw	4
  8038  0111A6  0E31               	movlw	low _dpowers
  8039  0111A8  24F3               	addwf	prodl,w,c
  8040  0111AA  6EF6               	movwf	tblptrl,c
  8041  0111AC  0EFE               	movlw	high _dpowers
  8042  0111AE  20F4               	addwfc	prodh,w,c
  8043  0111B0  6EF7               	movwf	tblptrh,c
  8044  0111B2                     	if	1	;There are 3 active tblptr bytes
  8045  0111B2  6AF8               	clrf	tblptru,c
  8046  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  8047  0111B6  22F8               	addwfc	tblptru,f,c
  8048  0111B8                     	endif
  8049  0111B8  0009               	tblrd		*+
  8050  0111BA  CFF5 F075          	movff	tablat,___lldiv@divisor
  8051  0111BE  0009               	tblrd		*+
  8052  0111C0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8053  0111C4  0009               	tblrd		*+
  8054  0111C6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8055  0111CA  000A               	tblrd		*-
  8056  0111CC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8057  0111D0  ECB6  F0AC         	call	___lldiv	;wreg free
  8058  0111D4  C071  F13E         	movff	?___lldiv,sprintf@tmpval
  8059  0111D8  C072  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  8060  0111DC  C073  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  8061  0111E0  C074  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  8062                           
  8063                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8064  0111E4  C13E  F071         	movff	sprintf@tmpval,___llmod@dividend
  8065  0111E8  C13F  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8066  0111EC  C140  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8067  0111F0  C141  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8068  0111F4  0E0A               	movlw	10
  8069  0111F6  0100               	movlb	0	; () banked
  8070  0111F8  6F75               	movwf	___llmod@divisor& (0+255),b
  8071  0111FA  0E00               	movlw	0
  8072  0111FC  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8073  0111FE  0E00               	movlw	0
  8074  011200  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8075  011202  0E00               	movlw	0
  8076  011204  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8077  011206  EC6B  F0AE         	call	___llmod	;wreg free
  8078  01120A  C071  F13E         	movff	?___llmod,sprintf@tmpval
  8079  01120E  C072  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  8080  011212  C073  F140         	movff	?___llmod+2,sprintf@tmpval+2
  8081  011216  C074  F141         	movff	?___llmod+3,sprintf@tmpval+3
  8082                           
  8083                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8084  01121A  0101               	movlb	1	; () banked
  8085  01121C  513E               	movf	sprintf@tmpval& (0+255),w,b
  8086  01121E  0F30               	addlw	48
  8087  011220  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8088  011224  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8089  011228  6EDF               	movwf	indf2,c
  8090                           
  8091                           ; BSR set to: 1
  8092  01122A  0100               	movlb	0	; () banked
  8093  01122C  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8094  01122E  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;doprnt.c: 1232: val %= dpowers[c];
  8098  011230  C138  F071         	movff	sprintf@val,___llmod@dividend
  8099  011234  C139  F072         	movff	sprintf@val+1,___llmod@dividend+1
  8100  011238  C13A  F073         	movff	sprintf@val+2,___llmod@dividend+2
  8101  01123C  C13B  F074         	movff	sprintf@val+3,___llmod@dividend+3
  8102  011240  0101               	movlb	1	; () banked
  8103  011242  5148               	movf	sprintf@c& (0+255),w,b
  8104  011244  0D04               	mullw	4
  8105  011246  0E31               	movlw	low _dpowers
  8106  011248  24F3               	addwf	prodl,w,c
  8107  01124A  6EF6               	movwf	tblptrl,c
  8108  01124C  0EFE               	movlw	high _dpowers
  8109  01124E  20F4               	addwfc	prodh,w,c
  8110  011250  6EF7               	movwf	tblptrh,c
  8111  011252                     	if	1	;There are 3 active tblptr bytes
  8112  011252  6AF8               	clrf	tblptru,c
  8113  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  8114  011256  22F8               	addwfc	tblptru,f,c
  8115  011258                     	endif
  8116  011258  0009               	tblrd		*+
  8117  01125A  CFF5 F075          	movff	tablat,___llmod@divisor
  8118  01125E  0009               	tblrd		*+
  8119  011260  CFF5 F076          	movff	tablat,___llmod@divisor+1
  8120  011264  0009               	tblrd		*+
  8121  011266  CFF5 F077          	movff	tablat,___llmod@divisor+2
  8122  01126A  000A               	tblrd		*-
  8123  01126C  CFF5 F078          	movff	tablat,___llmod@divisor+3
  8124  011270  EC6B  F0AE         	call	___llmod	;wreg free
  8125  011274  C071  F138         	movff	?___llmod,sprintf@val
  8126  011278  C072  F139         	movff	?___llmod+1,sprintf@val+1
  8127  01127C  C073  F13A         	movff	?___llmod+2,sprintf@val+2
  8128  011280  C074  F13B         	movff	?___llmod+3,sprintf@val+3
  8129  011284                     l8927:
  8130  011284  0101               	movlb	1	; () banked
  8131  011286  0748               	decf	sprintf@c& (0+255),f,b
  8132  011288  0101               	movlb	1	; () banked
  8133  01128A  2948               	incf	sprintf@c& (0+255),w,b
  8134  01128C  B4D8               	btfsc	status,2,c
  8135  01128E  D00E               	goto	l8935
  8136  011290  D77F               	goto	l8917
  8137  011292                     l8929:
  8138                           
  8139                           ; BSR set to: 1
  8140                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8141  011292  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8142  011296  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8143  01129A  0E30               	movlw	48
  8144  01129C  6EDF               	movwf	indf2,c
  8145                           
  8146                           ; BSR set to: 1
  8147  01129E  0100               	movlb	0	; () banked
  8148  0112A0  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8149  0112A2  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;doprnt.c: 1237: prec--;
  8153  0112A4  0101               	movlb	1	; () banked
  8154  0112A6  0742               	decf	sprintf@prec& (0+255),f,b
  8155  0112A8  A0D8               	btfss	status,0,c
  8156  0112AA  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  8157  0112AC                     l8935:
  8158                           
  8159                           ; BSR set to: 1
  8160  0112AC  0101               	movlb	1	; () banked
  8161  0112AE  5142               	movf	sprintf@prec& (0+255),w,b
  8162  0112B0  0101               	movlb	1	; () banked
  8163  0112B2  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8164  0112B4  B4D8               	btfsc	status,2,c
  8165  0112B6  D059               	goto	l8957
  8166  0112B8  D7EC               	goto	l8929
  8167  0112BA                     l8937:
  8168                           
  8169                           ; BSR set to: 1
  8170                           ;doprnt.c: 1246: }
  8171                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8172  0112BA  0101               	movlb	1	; () banked
  8173  0112BC  5142               	movf	sprintf@prec& (0+255),w,b
  8174  0112BE  0101               	movlb	1	; () banked
  8175  0112C0  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8176  0112C2  A4D8               	btfss	status,2,c
  8177  0112C4  D00D               	goto	l8943
  8178                           
  8179                           ; BSR set to: 1
  8180  0112C6  0101               	movlb	1	; () banked
  8181  0112C8  5138               	movf	sprintf@val& (0+255),w,b
  8182  0112CA  0101               	movlb	1	; () banked
  8183  0112CC  1139               	iorwf	(sprintf@val+1)& (0+255),w,b
  8184  0112CE  0101               	movlb	1	; () banked
  8185  0112D0  113A               	iorwf	(sprintf@val+2)& (0+255),w,b
  8186  0112D2  0101               	movlb	1	; () banked
  8187  0112D4  113B               	iorwf	(sprintf@val+3)& (0+255),w,b
  8188  0112D6  A4D8               	btfss	status,2,c
  8189  0112D8  D003               	goto	l8943
  8190                           
  8191                           ; BSR set to: 1
  8192                           ;doprnt.c: 1291: prec++;
  8193  0112DA  0101               	movlb	1	; () banked
  8194  0112DC  4B42               	infsnz	sprintf@prec& (0+255),f,b
  8195  0112DE  2B43               	incf	(sprintf@prec+1)& (0+255),f,b
  8196  0112E0                     l8943:
  8197                           
  8198                           ; BSR set to: 1
  8199                           ;doprnt.c: 1339: if(c < prec)
  8200  0112E0  0E80               	movlw	128
  8201  0112E2  0101               	movlb	1	; () banked
  8202  0112E4  BF48               	btfsc	sprintf@c& (0+255),7,b
  8203  0112E6  0E7F               	movlw	127
  8204  0112E8  0100               	movlb	0	; () banked
  8205  0112EA  6FCB               	movwf	??_sprintf& (0+255),b
  8206  0112EC  0101               	movlb	1	; () banked
  8207  0112EE  5142               	movf	sprintf@prec& (0+255),w,b
  8208  0112F0  0101               	movlb	1	; () banked
  8209  0112F2  5D48               	subwf	sprintf@c& (0+255),w,b
  8210  0112F4  0101               	movlb	1	; () banked
  8211  0112F6  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  8212  0112F8  0A80               	xorlw	128
  8213  0112FA  0100               	movlb	0	; () banked
  8214  0112FC  59CB               	subwfb	??_sprintf& (0+255),w,b
  8215  0112FE  B0D8               	btfsc	status,0,c
  8216  011300  D003               	goto	l8947
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;doprnt.c: 1340: c = prec;
  8220  011302  C142  F148         	movff	sprintf@prec,sprintf@c
  8221  011306  D018               	goto	l8951
  8222  011308                     l8947:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;doprnt.c: 1341: else if(prec < c)
  8226  011308  0101               	movlb	1	; () banked
  8227  01130A  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  8228  01130C  0A80               	xorlw	128
  8229  01130E  0100               	movlb	0	; () banked
  8230  011310  6FCB               	movwf	??_sprintf& (0+255),b
  8231  011312  0101               	movlb	1	; () banked
  8232  011314  5148               	movf	sprintf@c& (0+255),w,b
  8233  011316  0101               	movlb	1	; () banked
  8234  011318  5D42               	subwf	sprintf@prec& (0+255),w,b
  8235  01131A  0E80               	movlw	128
  8236  01131C  0101               	movlb	1	; () banked
  8237  01131E  BF48               	btfsc	sprintf@c& (0+255),7,b
  8238  011320  0E7F               	movlw	127
  8239  011322  0100               	movlb	0	; () banked
  8240  011324  59CB               	subwfb	??_sprintf& (0+255),w,b
  8241  011326  B0D8               	btfsc	status,0,c
  8242  011328  D007               	goto	l8951
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;doprnt.c: 1342: prec = c;
  8246  01132A  0101               	movlb	1	; () banked
  8247  01132C  5148               	movf	sprintf@c& (0+255),w,b
  8248  01132E  0101               	movlb	1	; () banked
  8249  011330  6F42               	movwf	sprintf@prec& (0+255),b
  8250  011332  6B43               	clrf	(sprintf@prec+1)& (0+255),b
  8251  011334  BF42               	btfsc	sprintf@prec& (0+255),7,b
  8252  011336  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  8253  011338                     l8951:
  8254                           
  8255                           ;doprnt.c: 1422: {
  8256                           ;doprnt.c: 1438: if(flag & 0x03)
  8257  011338  0E03               	movlw	3
  8258  01133A  0101               	movlb	1	; () banked
  8259  01133C  1536               	andwf	sprintf@flag& (0+255),w,b
  8260  01133E  0100               	movlb	0	; () banked
  8261  011340  6FCB               	movwf	??_sprintf& (0+255),b
  8262  011342  0E00               	movlw	0
  8263  011344  0101               	movlb	1	; () banked
  8264  011346  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  8265  011348  0100               	movlb	0	; () banked
  8266  01134A  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  8267  01134C  0100               	movlb	0	; () banked
  8268  01134E  51CB               	movf	??_sprintf& (0+255),w,b
  8269  011350  0100               	movlb	0	; () banked
  8270  011352  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  8271  011354  B4D8               	btfsc	status,2,c
  8272  011356  D009               	goto	l8957
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8276  011358  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8277  01135C  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8278  011360  0E2D               	movlw	45
  8279  011362  6EDF               	movwf	indf2,c
  8280  011364                     l8955:
  8281                           
  8282                           ; BSR set to: 0
  8283  011364  0100               	movlb	0	; () banked
  8284  011366  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8285  011368  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8286  01136A                     l8957:
  8287  01136A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8288  01136E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8289  011372  0100               	movlb	0	; () banked
  8290  011374  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8291  011376  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8292  011378                     	if	0	;tblptru may be non-zero
  8293  011378                     	endif
  8294  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8295  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  8296  01137A  6EF8               	movwf	tblptru,c
  8297  01137C                     	endif
  8298  01137C  0008               	tblrd		*
  8299  01137E  CFF5 F148          	movff	tablat,sprintf@c
  8300  011382  0101               	movlb	1	; () banked
  8301  011384  5148               	movf	sprintf@c& (0+255),w,b
  8302  011386  A4D8               	btfss	status,2,c
  8303  011388  EF8B  F085         	goto	l8759
  8304  01138C                     l8959:
  8305                           
  8306                           ; BSR set to: 1
  8307                           ;doprnt.c: 1538: *sp = 0;
  8308  01138C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8309  011390  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8310  011394  0E00               	movlw	0
  8311  011396  6EDF               	movwf	indf2,c
  8312  011398  0012               	return	
  8313  01139A                     __end_of_sprintf:
  8314                           	opt stack 0
  8315                           tblptru	equ	0xFF8
  8316                           tblptrh	equ	0xFF7
  8317                           tblptrl	equ	0xFF6
  8318                           tablat	equ	0xFF5
  8319                           prodh	equ	0xFF4
  8320                           prodl	equ	0xFF3
  8321                           intcon	equ	0xFF2
  8322                           postinc0	equ	0xFEE
  8323                           wreg	equ	0xFE8
  8324                           indf2	equ	0xFDF
  8325                           postinc2	equ	0xFDE
  8326                           fsr2h	equ	0xFDA
  8327                           fsr2l	equ	0xFD9
  8328                           status	equ	0xFD8
  8329                           
  8330 ;; *************** function _scale *****************
  8331 ;; Defined at:
  8332 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  scl             1    wreg     char 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  scl             1   64[BANK0 ] char 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  4   56[BANK0 ] char 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;Total ram usage:        9 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    4
  8353 ;; This function calls:
  8354 ;;		___awdiv
  8355 ;;		___awmod
  8356 ;;		___flmul
  8357 ;; This function is called by:
  8358 ;;		_sprintf
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text11
  8363  01290E                     __ptext11:
  8364                           	opt stack 0
  8365  01290E                     _scale:
  8366                           	opt stack 24
  8367                           
  8368                           ; BSR set to: 1
  8369                           ;incstack = 0
  8370                           ;scale@scl stored from wreg
  8371  01290E  0100               	movlb	0	; () banked
  8372  012910  6FA0               	movwf	scale@scl& (0+255),b
  8373                           
  8374                           ;doprnt.c: 428: if(scl < 0) {
  8375  012912  0100               	movlb	0	; () banked
  8376  012914  AFA0               	btfss	scale@scl& (0+255),7,b
  8377  012916  D145               	goto	l8367
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;doprnt.c: 429: scl = -scl;
  8381  012918  0100               	movlb	0	; () banked
  8382  01291A  6DA0               	negf	scale@scl& (0+255),b
  8383                           
  8384                           ;doprnt.c: 430: if(scl>=110)
  8385  01291C  0100               	movlb	0	; () banked
  8386  01291E  51A0               	movf	scale@scl& (0+255),w,b
  8387  012920  0A80               	xorlw	128
  8388  012922  0F12               	addlw	-238
  8389  012924  A0D8               	btfss	status,0,c
  8390  012926  D0BB               	goto	l8357
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8394  012928  0E00               	movlw	0
  8395  01292A  0100               	movlb	0	; () banked
  8396  01292C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8397  01292E  0E0A               	movlw	10
  8398  012930  6F79               	movwf	___awdiv@divisor& (0+255),b
  8399  012932  0E00               	movlw	0
  8400  012934  0100               	movlb	0	; () banked
  8401  012936  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8402  012938  0E64               	movlw	100
  8403  01293A  6F73               	movwf	___awmod@divisor& (0+255),b
  8404  01293C  0100               	movlb	0	; () banked
  8405  01293E  51A0               	movf	scale@scl& (0+255),w,b
  8406  012940  0100               	movlb	0	; () banked
  8407  012942  6F71               	movwf	___awmod@dividend& (0+255),b
  8408  012944  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8409  012946  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8410  012948  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8411  01294A  EC1A  F0AE         	call	___awmod	;wreg free
  8412  01294E  C071  F077         	movff	?___awmod,___awdiv@dividend
  8413  012952  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8414  012956  ECF8  F0AB         	call	___awdiv	;wreg free
  8415  01295A  0100               	movlb	0	; () banked
  8416  01295C  90D8               	bcf	status,0,c
  8417  01295E  3777               	rlcf	?___awdiv& (0+255),f,b
  8418  012960  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8419  012962  0100               	movlb	0	; () banked
  8420  012964  90D8               	bcf	status,0,c
  8421  012966  3777               	rlcf	?___awdiv& (0+255),f,b
  8422  012968  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8423  01296A  0E24               	movlw	36
  8424  01296C  0100               	movlb	0	; () banked
  8425  01296E  2777               	addwf	?___awdiv& (0+255),f,b
  8426  012970  0E00               	movlw	0
  8427  012972  0100               	movlb	0	; () banked
  8428  012974  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8429  012976  0EC9               	movlw	low __npowers_
  8430  012978  0100               	movlb	0	; () banked
  8431  01297A  2577               	addwf	?___awdiv& (0+255),w,b
  8432  01297C  6EF6               	movwf	tblptrl,c
  8433  01297E  0EFD               	movlw	high __npowers_
  8434  012980  0100               	movlb	0	; () banked
  8435  012982  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8436  012984  6EF7               	movwf	tblptrh,c
  8437  012986                     	if	1	;There are 3 active tblptr bytes
  8438  012986  6AF8               	clrf	tblptru,c
  8439  012988  0E00               	movlw	low (__mediumconst shr (0+16))
  8440  01298A  22F8               	addwfc	tblptru,f,c
  8441  01298C                     	endif
  8442  01298C  0009               	tblrd		*+
  8443  01298E  CFF5 F083          	movff	tablat,___flmul@a
  8444  012992  0009               	tblrd		*+
  8445  012994  CFF5 F084          	movff	tablat,___flmul@a+1
  8446  012998  0009               	tblrd		*+
  8447  01299A  CFF5 F085          	movff	tablat,___flmul@a+2
  8448  01299E  000A               	tblrd		*-
  8449  0129A0  CFF5 F086          	movff	tablat,___flmul@a+3
  8450  0129A4  0E00               	movlw	0
  8451  0129A6  0100               	movlb	0	; () banked
  8452  0129A8  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8453  0129AA  0E64               	movlw	100
  8454  0129AC  6F79               	movwf	___awdiv@divisor& (0+255),b
  8455  0129AE  0100               	movlb	0	; () banked
  8456  0129B0  51A0               	movf	scale@scl& (0+255),w,b
  8457  0129B2  0100               	movlb	0	; () banked
  8458  0129B4  6F77               	movwf	___awdiv@dividend& (0+255),b
  8459  0129B6  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8460  0129B8  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8461  0129BA  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8462  0129BC  ECF8  F0AB         	call	___awdiv	;wreg free
  8463  0129C0  0100               	movlb	0	; () banked
  8464  0129C2  90D8               	bcf	status,0,c
  8465  0129C4  3777               	rlcf	?___awdiv& (0+255),f,b
  8466  0129C6  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8467  0129C8  0100               	movlb	0	; () banked
  8468  0129CA  90D8               	bcf	status,0,c
  8469  0129CC  3777               	rlcf	?___awdiv& (0+255),f,b
  8470  0129CE  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8471  0129D0  0E48               	movlw	72
  8472  0129D2  0100               	movlb	0	; () banked
  8473  0129D4  2777               	addwf	?___awdiv& (0+255),f,b
  8474  0129D6  0E00               	movlw	0
  8475  0129D8  0100               	movlb	0	; () banked
  8476  0129DA  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8477  0129DC  0EC9               	movlw	low __npowers_
  8478  0129DE  0100               	movlb	0	; () banked
  8479  0129E0  2577               	addwf	?___awdiv& (0+255),w,b
  8480  0129E2  6EF6               	movwf	tblptrl,c
  8481  0129E4  0EFD               	movlw	high __npowers_
  8482  0129E6  0100               	movlb	0	; () banked
  8483  0129E8  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8484  0129EA  6EF7               	movwf	tblptrh,c
  8485  0129EC                     	if	1	;There are 3 active tblptr bytes
  8486  0129EC  6AF8               	clrf	tblptru,c
  8487  0129EE  0E00               	movlw	low (__mediumconst shr (0+16))
  8488  0129F0  22F8               	addwfc	tblptru,f,c
  8489  0129F2                     	endif
  8490  0129F2  0009               	tblrd		*+
  8491  0129F4  CFF5 F07F          	movff	tablat,___flmul@b
  8492  0129F8  0009               	tblrd		*+
  8493  0129FA  CFF5 F080          	movff	tablat,___flmul@b+1
  8494  0129FE  0009               	tblrd		*+
  8495  012A00  CFF5 F081          	movff	tablat,___flmul@b+2
  8496  012A04  000A               	tblrd		*-
  8497  012A06  CFF5 F082          	movff	tablat,___flmul@b+3
  8498  012A0A  ECEE  F09B         	call	___flmul	;wreg free
  8499  012A0E  C07F  F09C         	movff	?___flmul,_scale$4256
  8500  012A12  C080  F09D         	movff	?___flmul+1,_scale$4256+1
  8501  012A16  C081  F09E         	movff	?___flmul+2,_scale$4256+2
  8502  012A1A  C082  F09F         	movff	?___flmul+3,_scale$4256+3
  8503                           
  8504                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8505  012A1E  C09C  F07F         	movff	_scale$4256,___flmul@b
  8506  012A22  C09D  F080         	movff	_scale$4256+1,___flmul@b+1
  8507  012A26  C09E  F081         	movff	_scale$4256+2,___flmul@b+2
  8508  012A2A  C09F  F082         	movff	_scale$4256+3,___flmul@b+3
  8509  012A2E  0E00               	movlw	0
  8510  012A30  0100               	movlb	0	; () banked
  8511  012A32  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8512  012A34  0E0A               	movlw	10
  8513  012A36  6F73               	movwf	___awmod@divisor& (0+255),b
  8514  012A38  0100               	movlb	0	; () banked
  8515  012A3A  51A0               	movf	scale@scl& (0+255),w,b
  8516  012A3C  0100               	movlb	0	; () banked
  8517  012A3E  6F71               	movwf	___awmod@dividend& (0+255),b
  8518  012A40  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8519  012A42  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8520  012A44  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8521  012A46  EC1A  F0AE         	call	___awmod	;wreg free
  8522  012A4A  0100               	movlb	0	; () banked
  8523  012A4C  90D8               	bcf	status,0,c
  8524  012A4E  3771               	rlcf	?___awmod& (0+255),f,b
  8525  012A50  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8526  012A52  0100               	movlb	0	; () banked
  8527  012A54  90D8               	bcf	status,0,c
  8528  012A56  3771               	rlcf	?___awmod& (0+255),f,b
  8529  012A58  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8530  012A5A  0EC9               	movlw	low __npowers_
  8531  012A5C  0100               	movlb	0	; () banked
  8532  012A5E  2571               	addwf	?___awmod& (0+255),w,b
  8533  012A60  6EF6               	movwf	tblptrl,c
  8534  012A62  0EFD               	movlw	high __npowers_
  8535  012A64  0100               	movlb	0	; () banked
  8536  012A66  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8537  012A68  6EF7               	movwf	tblptrh,c
  8538  012A6A                     	if	1	;There are 3 active tblptr bytes
  8539  012A6A  6AF8               	clrf	tblptru,c
  8540  012A6C  0E00               	movlw	low (__mediumconst shr (0+16))
  8541  012A6E  22F8               	addwfc	tblptru,f,c
  8542  012A70                     	endif
  8543  012A70  0009               	tblrd		*+
  8544  012A72  CFF5 F083          	movff	tablat,___flmul@a
  8545  012A76  0009               	tblrd		*+
  8546  012A78  CFF5 F084          	movff	tablat,___flmul@a+1
  8547  012A7C  0009               	tblrd		*+
  8548  012A7E  CFF5 F085          	movff	tablat,___flmul@a+2
  8549  012A82  000A               	tblrd		*-
  8550  012A84  CFF5 F086          	movff	tablat,___flmul@a+3
  8551  012A88  ECEE  F09B         	call	___flmul	;wreg free
  8552  012A8C  C07F  F098         	movff	?___flmul,?_scale
  8553  012A90  C080  F099         	movff	?___flmul+1,?_scale+1
  8554  012A94  C081  F09A         	movff	?___flmul+2,?_scale+2
  8555  012A98  C082  F09B         	movff	?___flmul+3,?_scale+3
  8556  012A9C  0012               	return	
  8557  012A9E                     l8357:
  8558                           
  8559                           ;doprnt.c: 432: else if(scl > 10)
  8560  012A9E  0100               	movlb	0	; () banked
  8561  012AA0  51A0               	movf	scale@scl& (0+255),w,b
  8562  012AA2  0A80               	xorlw	128
  8563  012AA4  0F75               	addlw	-139
  8564  012AA6  A0D8               	btfss	status,0,c
  8565  012AA8  D063               	goto	l8363
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8569  012AAA  0E00               	movlw	0
  8570  012AAC  0100               	movlb	0	; () banked
  8571  012AAE  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8572  012AB0  0E0A               	movlw	10
  8573  012AB2  6F79               	movwf	___awdiv@divisor& (0+255),b
  8574  012AB4  0100               	movlb	0	; () banked
  8575  012AB6  51A0               	movf	scale@scl& (0+255),w,b
  8576  012AB8  0100               	movlb	0	; () banked
  8577  012ABA  6F77               	movwf	___awdiv@dividend& (0+255),b
  8578  012ABC  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8579  012ABE  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8580  012AC0  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8581  012AC2  ECF8  F0AB         	call	___awdiv	;wreg free
  8582  012AC6  0100               	movlb	0	; () banked
  8583  012AC8  90D8               	bcf	status,0,c
  8584  012ACA  3777               	rlcf	?___awdiv& (0+255),f,b
  8585  012ACC  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8586  012ACE  0100               	movlb	0	; () banked
  8587  012AD0  90D8               	bcf	status,0,c
  8588  012AD2  3777               	rlcf	?___awdiv& (0+255),f,b
  8589  012AD4  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8590  012AD6  0E24               	movlw	36
  8591  012AD8  0100               	movlb	0	; () banked
  8592  012ADA  2777               	addwf	?___awdiv& (0+255),f,b
  8593  012ADC  0E00               	movlw	0
  8594  012ADE  0100               	movlb	0	; () banked
  8595  012AE0  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8596  012AE2  0EC9               	movlw	low __npowers_
  8597  012AE4  0100               	movlb	0	; () banked
  8598  012AE6  2577               	addwf	?___awdiv& (0+255),w,b
  8599  012AE8  6EF6               	movwf	tblptrl,c
  8600  012AEA  0EFD               	movlw	high __npowers_
  8601  012AEC  0100               	movlb	0	; () banked
  8602  012AEE  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8603  012AF0  6EF7               	movwf	tblptrh,c
  8604  012AF2                     	if	1	;There are 3 active tblptr bytes
  8605  012AF2  6AF8               	clrf	tblptru,c
  8606  012AF4  0E00               	movlw	low (__mediumconst shr (0+16))
  8607  012AF6  22F8               	addwfc	tblptru,f,c
  8608  012AF8                     	endif
  8609  012AF8  0009               	tblrd		*+
  8610  012AFA  CFF5 F07F          	movff	tablat,___flmul@b
  8611  012AFE  0009               	tblrd		*+
  8612  012B00  CFF5 F080          	movff	tablat,___flmul@b+1
  8613  012B04  0009               	tblrd		*+
  8614  012B06  CFF5 F081          	movff	tablat,___flmul@b+2
  8615  012B0A  000A               	tblrd		*-
  8616  012B0C  CFF5 F082          	movff	tablat,___flmul@b+3
  8617  012B10  0E00               	movlw	0
  8618  012B12  0100               	movlb	0	; () banked
  8619  012B14  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8620  012B16  0E0A               	movlw	10
  8621  012B18  6F73               	movwf	___awmod@divisor& (0+255),b
  8622  012B1A  0100               	movlb	0	; () banked
  8623  012B1C  51A0               	movf	scale@scl& (0+255),w,b
  8624  012B1E  0100               	movlb	0	; () banked
  8625  012B20  6F71               	movwf	___awmod@dividend& (0+255),b
  8626  012B22  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8627  012B24  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8628  012B26  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8629  012B28  EC1A  F0AE         	call	___awmod	;wreg free
  8630  012B2C  0100               	movlb	0	; () banked
  8631  012B2E  90D8               	bcf	status,0,c
  8632  012B30  3771               	rlcf	?___awmod& (0+255),f,b
  8633  012B32  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8634  012B34  0100               	movlb	0	; () banked
  8635  012B36  90D8               	bcf	status,0,c
  8636  012B38  3771               	rlcf	?___awmod& (0+255),f,b
  8637  012B3A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8638  012B3C  0EC9               	movlw	low __npowers_
  8639  012B3E  0100               	movlb	0	; () banked
  8640  012B40  2571               	addwf	?___awmod& (0+255),w,b
  8641  012B42  6EF6               	movwf	tblptrl,c
  8642  012B44  0EFD               	movlw	high __npowers_
  8643  012B46  0100               	movlb	0	; () banked
  8644  012B48  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8645  012B4A  6EF7               	movwf	tblptrh,c
  8646  012B4C                     	if	1	;There are 3 active tblptr bytes
  8647  012B4C  6AF8               	clrf	tblptru,c
  8648  012B4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8649  012B50  22F8               	addwfc	tblptru,f,c
  8650  012B52                     	endif
  8651  012B52  0009               	tblrd		*+
  8652  012B54  CFF5 F083          	movff	tablat,___flmul@a
  8653  012B58  0009               	tblrd		*+
  8654  012B5A  CFF5 F084          	movff	tablat,___flmul@a+1
  8655  012B5E  0009               	tblrd		*+
  8656  012B60  CFF5 F085          	movff	tablat,___flmul@a+2
  8657  012B64  000A               	tblrd		*-
  8658  012B66  CFF5 F086          	movff	tablat,___flmul@a+3
  8659  012B6A  ECEE  F09B         	call	___flmul	;wreg free
  8660  012B6E  D78E               	goto	L8
  8661  012B70                     l8363:
  8662                           
  8663                           ;doprnt.c: 434: return _npowers_[scl];
  8664  012B70  0100               	movlb	0	; () banked
  8665  012B72  51A0               	movf	scale@scl& (0+255),w,b
  8666  012B74  0D04               	mullw	4
  8667  012B76  0EC9               	movlw	low __npowers_
  8668  012B78  24F3               	addwf	prodl,w,c
  8669  012B7A  6EF6               	movwf	tblptrl,c
  8670  012B7C  0EFD               	movlw	high __npowers_
  8671  012B7E  20F4               	addwfc	prodh,w,c
  8672  012B80  6EF7               	movwf	tblptrh,c
  8673  012B82                     	if	1	;There are 3 active tblptr bytes
  8674  012B82  6AF8               	clrf	tblptru,c
  8675  012B84  0E00               	movlw	low (__mediumconst shr (0+16))
  8676  012B86  22F8               	addwfc	tblptru,f,c
  8677  012B88                     	endif
  8678  012B88  0009               	tblrd		*+
  8679  012B8A  CFF5 F098          	movff	tablat,?_scale
  8680  012B8E  0009               	tblrd		*+
  8681  012B90  CFF5 F099          	movff	tablat,?_scale+1
  8682  012B94  0009               	tblrd		*+
  8683  012B96  CFF5 F09A          	movff	tablat,?_scale+2
  8684  012B9A  000A               	tblrd		*-
  8685  012B9C  CFF5 F09B          	movff	tablat,?_scale+3
  8686                           
  8687                           ; BSR set to: 0
  8688  012BA0  0012               	return	
  8689  012BA2                     l8367:
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;doprnt.c: 435: }
  8693                           ;doprnt.c: 436: if(scl>=110)
  8694  012BA2  0100               	movlb	0	; () banked
  8695  012BA4  51A0               	movf	scale@scl& (0+255),w,b
  8696  012BA6  0A80               	xorlw	128
  8697  012BA8  0F12               	addlw	-238
  8698  012BAA  A0D8               	btfss	status,0,c
  8699  012BAC  D0BB               	goto	l8375
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8703  012BAE  0E00               	movlw	0
  8704  012BB0  0100               	movlb	0	; () banked
  8705  012BB2  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8706  012BB4  0E0A               	movlw	10
  8707  012BB6  6F79               	movwf	___awdiv@divisor& (0+255),b
  8708  012BB8  0E00               	movlw	0
  8709  012BBA  0100               	movlb	0	; () banked
  8710  012BBC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8711  012BBE  0E64               	movlw	100
  8712  012BC0  6F73               	movwf	___awmod@divisor& (0+255),b
  8713  012BC2  0100               	movlb	0	; () banked
  8714  012BC4  51A0               	movf	scale@scl& (0+255),w,b
  8715  012BC6  0100               	movlb	0	; () banked
  8716  012BC8  6F71               	movwf	___awmod@dividend& (0+255),b
  8717  012BCA  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8718  012BCC  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8719  012BCE  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8720  012BD0  EC1A  F0AE         	call	___awmod	;wreg free
  8721  012BD4  C071  F077         	movff	?___awmod,___awdiv@dividend
  8722  012BD8  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8723  012BDC  ECF8  F0AB         	call	___awdiv	;wreg free
  8724  012BE0  0100               	movlb	0	; () banked
  8725  012BE2  90D8               	bcf	status,0,c
  8726  012BE4  3777               	rlcf	?___awdiv& (0+255),f,b
  8727  012BE6  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8728  012BE8  0100               	movlb	0	; () banked
  8729  012BEA  90D8               	bcf	status,0,c
  8730  012BEC  3777               	rlcf	?___awdiv& (0+255),f,b
  8731  012BEE  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8732  012BF0  0E24               	movlw	36
  8733  012BF2  0100               	movlb	0	; () banked
  8734  012BF4  2777               	addwf	?___awdiv& (0+255),f,b
  8735  012BF6  0E00               	movlw	0
  8736  012BF8  0100               	movlb	0	; () banked
  8737  012BFA  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8738  012BFC  0EFD               	movlw	low __powers_
  8739  012BFE  0100               	movlb	0	; () banked
  8740  012C00  2577               	addwf	?___awdiv& (0+255),w,b
  8741  012C02  6EF6               	movwf	tblptrl,c
  8742  012C04  0EFD               	movlw	high __powers_
  8743  012C06  0100               	movlb	0	; () banked
  8744  012C08  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8745  012C0A  6EF7               	movwf	tblptrh,c
  8746  012C0C                     	if	1	;There are 3 active tblptr bytes
  8747  012C0C  6AF8               	clrf	tblptru,c
  8748  012C0E  0E00               	movlw	low (__mediumconst shr (0+16))
  8749  012C10  22F8               	addwfc	tblptru,f,c
  8750  012C12                     	endif
  8751  012C12  0009               	tblrd		*+
  8752  012C14  CFF5 F083          	movff	tablat,___flmul@a
  8753  012C18  0009               	tblrd		*+
  8754  012C1A  CFF5 F084          	movff	tablat,___flmul@a+1
  8755  012C1E  0009               	tblrd		*+
  8756  012C20  CFF5 F085          	movff	tablat,___flmul@a+2
  8757  012C24  000A               	tblrd		*-
  8758  012C26  CFF5 F086          	movff	tablat,___flmul@a+3
  8759  012C2A  0E00               	movlw	0
  8760  012C2C  0100               	movlb	0	; () banked
  8761  012C2E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8762  012C30  0E64               	movlw	100
  8763  012C32  6F79               	movwf	___awdiv@divisor& (0+255),b
  8764  012C34  0100               	movlb	0	; () banked
  8765  012C36  51A0               	movf	scale@scl& (0+255),w,b
  8766  012C38  0100               	movlb	0	; () banked
  8767  012C3A  6F77               	movwf	___awdiv@dividend& (0+255),b
  8768  012C3C  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8769  012C3E  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8770  012C40  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8771  012C42  ECF8  F0AB         	call	___awdiv	;wreg free
  8772  012C46  0100               	movlb	0	; () banked
  8773  012C48  90D8               	bcf	status,0,c
  8774  012C4A  3777               	rlcf	?___awdiv& (0+255),f,b
  8775  012C4C  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8776  012C4E  0100               	movlb	0	; () banked
  8777  012C50  90D8               	bcf	status,0,c
  8778  012C52  3777               	rlcf	?___awdiv& (0+255),f,b
  8779  012C54  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8780  012C56  0E48               	movlw	72
  8781  012C58  0100               	movlb	0	; () banked
  8782  012C5A  2777               	addwf	?___awdiv& (0+255),f,b
  8783  012C5C  0E00               	movlw	0
  8784  012C5E  0100               	movlb	0	; () banked
  8785  012C60  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8786  012C62  0EFD               	movlw	low __powers_
  8787  012C64  0100               	movlb	0	; () banked
  8788  012C66  2577               	addwf	?___awdiv& (0+255),w,b
  8789  012C68  6EF6               	movwf	tblptrl,c
  8790  012C6A  0EFD               	movlw	high __powers_
  8791  012C6C  0100               	movlb	0	; () banked
  8792  012C6E  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8793  012C70  6EF7               	movwf	tblptrh,c
  8794  012C72                     	if	1	;There are 3 active tblptr bytes
  8795  012C72  6AF8               	clrf	tblptru,c
  8796  012C74  0E00               	movlw	low (__mediumconst shr (0+16))
  8797  012C76  22F8               	addwfc	tblptru,f,c
  8798  012C78                     	endif
  8799  012C78  0009               	tblrd		*+
  8800  012C7A  CFF5 F07F          	movff	tablat,___flmul@b
  8801  012C7E  0009               	tblrd		*+
  8802  012C80  CFF5 F080          	movff	tablat,___flmul@b+1
  8803  012C84  0009               	tblrd		*+
  8804  012C86  CFF5 F081          	movff	tablat,___flmul@b+2
  8805  012C8A  000A               	tblrd		*-
  8806  012C8C  CFF5 F082          	movff	tablat,___flmul@b+3
  8807  012C90  ECEE  F09B         	call	___flmul	;wreg free
  8808  012C94  C07F  F09C         	movff	?___flmul,_scale$4256
  8809  012C98  C080  F09D         	movff	?___flmul+1,_scale$4256+1
  8810  012C9C  C081  F09E         	movff	?___flmul+2,_scale$4256+2
  8811  012CA0  C082  F09F         	movff	?___flmul+3,_scale$4256+3
  8812                           
  8813                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8814  012CA4  C09C  F07F         	movff	_scale$4256,___flmul@b
  8815  012CA8  C09D  F080         	movff	_scale$4256+1,___flmul@b+1
  8816  012CAC  C09E  F081         	movff	_scale$4256+2,___flmul@b+2
  8817  012CB0  C09F  F082         	movff	_scale$4256+3,___flmul@b+3
  8818  012CB4  0E00               	movlw	0
  8819  012CB6  0100               	movlb	0	; () banked
  8820  012CB8  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8821  012CBA  0E0A               	movlw	10
  8822  012CBC  6F73               	movwf	___awmod@divisor& (0+255),b
  8823  012CBE  0100               	movlb	0	; () banked
  8824  012CC0  51A0               	movf	scale@scl& (0+255),w,b
  8825  012CC2  0100               	movlb	0	; () banked
  8826  012CC4  6F71               	movwf	___awmod@dividend& (0+255),b
  8827  012CC6  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8828  012CC8  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8829  012CCA  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8830  012CCC  EC1A  F0AE         	call	___awmod	;wreg free
  8831  012CD0  0100               	movlb	0	; () banked
  8832  012CD2  90D8               	bcf	status,0,c
  8833  012CD4  3771               	rlcf	?___awmod& (0+255),f,b
  8834  012CD6  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8835  012CD8  0100               	movlb	0	; () banked
  8836  012CDA  90D8               	bcf	status,0,c
  8837  012CDC  3771               	rlcf	?___awmod& (0+255),f,b
  8838  012CDE  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8839  012CE0  0EFD               	movlw	low __powers_
  8840  012CE2  0100               	movlb	0	; () banked
  8841  012CE4  2571               	addwf	?___awmod& (0+255),w,b
  8842  012CE6  6EF6               	movwf	tblptrl,c
  8843  012CE8  0EFD               	movlw	high __powers_
  8844  012CEA  0100               	movlb	0	; () banked
  8845  012CEC  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8846  012CEE  6EF7               	movwf	tblptrh,c
  8847  012CF0                     	if	1	;There are 3 active tblptr bytes
  8848  012CF0  6AF8               	clrf	tblptru,c
  8849  012CF2  0E00               	movlw	low (__mediumconst shr (0+16))
  8850  012CF4  22F8               	addwfc	tblptru,f,c
  8851  012CF6                     	endif
  8852  012CF6  0009               	tblrd		*+
  8853  012CF8  CFF5 F083          	movff	tablat,___flmul@a
  8854  012CFC  0009               	tblrd		*+
  8855  012CFE  CFF5 F084          	movff	tablat,___flmul@a+1
  8856  012D02  0009               	tblrd		*+
  8857  012D04  CFF5 F085          	movff	tablat,___flmul@a+2
  8858  012D08  000A               	tblrd		*-
  8859  012D0A  CFF5 F086          	movff	tablat,___flmul@a+3
  8860  012D0E  ECEE  F09B         	call	___flmul	;wreg free
  8861  012D12  C07F  F098         	movff	?___flmul,?_scale
  8862  012D16  C080  F099         	movff	?___flmul+1,?_scale+1
  8863  012D1A  C081  F09A         	movff	?___flmul+2,?_scale+2
  8864  012D1E  C082  F09B         	movff	?___flmul+3,?_scale+3
  8865  012D22  0012               	return	
  8866  012D24                     l8375:
  8867                           
  8868                           ;doprnt.c: 438: else if(scl > 10)
  8869  012D24  0100               	movlb	0	; () banked
  8870  012D26  51A0               	movf	scale@scl& (0+255),w,b
  8871  012D28  0A80               	xorlw	128
  8872  012D2A  0F75               	addlw	-139
  8873  012D2C  A0D8               	btfss	status,0,c
  8874  012D2E  D063               	goto	l8381
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8878  012D30  0E00               	movlw	0
  8879  012D32  0100               	movlb	0	; () banked
  8880  012D34  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8881  012D36  0E0A               	movlw	10
  8882  012D38  6F79               	movwf	___awdiv@divisor& (0+255),b
  8883  012D3A  0100               	movlb	0	; () banked
  8884  012D3C  51A0               	movf	scale@scl& (0+255),w,b
  8885  012D3E  0100               	movlb	0	; () banked
  8886  012D40  6F77               	movwf	___awdiv@dividend& (0+255),b
  8887  012D42  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8888  012D44  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8889  012D46  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8890  012D48  ECF8  F0AB         	call	___awdiv	;wreg free
  8891  012D4C  0100               	movlb	0	; () banked
  8892  012D4E  90D8               	bcf	status,0,c
  8893  012D50  3777               	rlcf	?___awdiv& (0+255),f,b
  8894  012D52  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8895  012D54  0100               	movlb	0	; () banked
  8896  012D56  90D8               	bcf	status,0,c
  8897  012D58  3777               	rlcf	?___awdiv& (0+255),f,b
  8898  012D5A  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8899  012D5C  0E24               	movlw	36
  8900  012D5E  0100               	movlb	0	; () banked
  8901  012D60  2777               	addwf	?___awdiv& (0+255),f,b
  8902  012D62  0E00               	movlw	0
  8903  012D64  0100               	movlb	0	; () banked
  8904  012D66  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8905  012D68  0EFD               	movlw	low __powers_
  8906  012D6A  0100               	movlb	0	; () banked
  8907  012D6C  2577               	addwf	?___awdiv& (0+255),w,b
  8908  012D6E  6EF6               	movwf	tblptrl,c
  8909  012D70  0EFD               	movlw	high __powers_
  8910  012D72  0100               	movlb	0	; () banked
  8911  012D74  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8912  012D76  6EF7               	movwf	tblptrh,c
  8913  012D78                     	if	1	;There are 3 active tblptr bytes
  8914  012D78  6AF8               	clrf	tblptru,c
  8915  012D7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8916  012D7C  22F8               	addwfc	tblptru,f,c
  8917  012D7E                     	endif
  8918  012D7E  0009               	tblrd		*+
  8919  012D80  CFF5 F07F          	movff	tablat,___flmul@b
  8920  012D84  0009               	tblrd		*+
  8921  012D86  CFF5 F080          	movff	tablat,___flmul@b+1
  8922  012D8A  0009               	tblrd		*+
  8923  012D8C  CFF5 F081          	movff	tablat,___flmul@b+2
  8924  012D90  000A               	tblrd		*-
  8925  012D92  CFF5 F082          	movff	tablat,___flmul@b+3
  8926  012D96  0E00               	movlw	0
  8927  012D98  0100               	movlb	0	; () banked
  8928  012D9A  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8929  012D9C  0E0A               	movlw	10
  8930  012D9E  6F73               	movwf	___awmod@divisor& (0+255),b
  8931  012DA0  0100               	movlb	0	; () banked
  8932  012DA2  51A0               	movf	scale@scl& (0+255),w,b
  8933  012DA4  0100               	movlb	0	; () banked
  8934  012DA6  6F71               	movwf	___awmod@dividend& (0+255),b
  8935  012DA8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8936  012DAA  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8937  012DAC  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8938  012DAE  EC1A  F0AE         	call	___awmod	;wreg free
  8939  012DB2  0100               	movlb	0	; () banked
  8940  012DB4  90D8               	bcf	status,0,c
  8941  012DB6  3771               	rlcf	?___awmod& (0+255),f,b
  8942  012DB8  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8943  012DBA  0100               	movlb	0	; () banked
  8944  012DBC  90D8               	bcf	status,0,c
  8945  012DBE  3771               	rlcf	?___awmod& (0+255),f,b
  8946  012DC0  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8947  012DC2  0EFD               	movlw	low __powers_
  8948  012DC4  0100               	movlb	0	; () banked
  8949  012DC6  2571               	addwf	?___awmod& (0+255),w,b
  8950  012DC8  6EF6               	movwf	tblptrl,c
  8951  012DCA  0EFD               	movlw	high __powers_
  8952  012DCC  0100               	movlb	0	; () banked
  8953  012DCE  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8954  012DD0  6EF7               	movwf	tblptrh,c
  8955  012DD2                     	if	1	;There are 3 active tblptr bytes
  8956  012DD2  6AF8               	clrf	tblptru,c
  8957  012DD4  0E00               	movlw	low (__mediumconst shr (0+16))
  8958  012DD6  22F8               	addwfc	tblptru,f,c
  8959  012DD8                     	endif
  8960  012DD8  0009               	tblrd		*+
  8961  012DDA  CFF5 F083          	movff	tablat,___flmul@a
  8962  012DDE  0009               	tblrd		*+
  8963  012DE0  CFF5 F084          	movff	tablat,___flmul@a+1
  8964  012DE4  0009               	tblrd		*+
  8965  012DE6  CFF5 F085          	movff	tablat,___flmul@a+2
  8966  012DEA  000A               	tblrd		*-
  8967  012DEC  CFF5 F086          	movff	tablat,___flmul@a+3
  8968  012DF0  ECEE  F09B         	call	___flmul	;wreg free
  8969  012DF4  D78E               	goto	L9
  8970  012DF6                     l8381:
  8971                           
  8972                           ;doprnt.c: 440: return _powers_[scl];
  8973  012DF6  0100               	movlb	0	; () banked
  8974  012DF8  51A0               	movf	scale@scl& (0+255),w,b
  8975  012DFA  0D04               	mullw	4
  8976  012DFC  0EFD               	movlw	low __powers_
  8977  012DFE  24F3               	addwf	prodl,w,c
  8978  012E00  6EF6               	movwf	tblptrl,c
  8979  012E02  0EFD               	movlw	high __powers_
  8980  012E04  20F4               	addwfc	prodh,w,c
  8981  012E06  6EF7               	movwf	tblptrh,c
  8982  012E08                     	if	1	;There are 3 active tblptr bytes
  8983  012E08  6AF8               	clrf	tblptru,c
  8984  012E0A  0E00               	movlw	low (__mediumconst shr (0+16))
  8985  012E0C  22F8               	addwfc	tblptru,f,c
  8986  012E0E                     	endif
  8987  012E0E  0009               	tblrd		*+
  8988  012E10  CFF5 F098          	movff	tablat,?_scale
  8989  012E14  0009               	tblrd		*+
  8990  012E16  CFF5 F099          	movff	tablat,?_scale+1
  8991  012E1A  0009               	tblrd		*+
  8992  012E1C  CFF5 F09A          	movff	tablat,?_scale+2
  8993  012E20  000A               	tblrd		*-
  8994  012E22  CFF5 F09B          	movff	tablat,?_scale+3
  8995  012E26  0012               	return	
  8996  012E28                     __end_of_scale:
  8997                           	opt stack 0
  8998                           tblptru	equ	0xFF8
  8999                           tblptrh	equ	0xFF7
  9000                           tblptrl	equ	0xFF6
  9001                           tablat	equ	0xFF5
  9002                           prodh	equ	0xFF4
  9003                           prodl	equ	0xFF3
  9004                           intcon	equ	0xFF2
  9005                           postinc0	equ	0xFEE
  9006                           wreg	equ	0xFE8
  9007                           indf2	equ	0xFDF
  9008                           postinc2	equ	0xFDE
  9009                           fsr2h	equ	0xFDA
  9010                           fsr2l	equ	0xFD9
  9011                           status	equ	0xFD8
  9012                           
  9013 ;; *************** function _isdigit *****************
  9014 ;; Defined at:
  9015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  c               1    wreg     unsigned char 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  c               1   19[BANK0 ] unsigned char 
  9020 ;; Return value:  Size  Location     Type
  9021 ;;		None               void
  9022 ;; Registers used:
  9023 ;;		wreg, status,2, status,0
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;Total ram usage:        3 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; Hardware stack levels required when called:    3
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_sprintf
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text12
  9044  016360                     __ptext12:
  9045                           	opt stack 0
  9046  016360                     _isdigit:
  9047                           	opt stack 25
  9048                           
  9049                           ;incstack = 0
  9050                           ;isdigit@c stored from wreg
  9051  016360  0100               	movlb	0	; () banked
  9052  016362  6F73               	movwf	isdigit@c& (0+255),b
  9053  016364  0E00               	movlw	0
  9054  016366  0100               	movlb	0	; () banked
  9055  016368  6F72               	movwf	_isdigit$3840& (0+255),b
  9056                           
  9057                           ; BSR set to: 0
  9058  01636A  0E3A               	movlw	58
  9059  01636C  0100               	movlb	0	; () banked
  9060  01636E  6173               	cpfslt	isdigit@c& (0+255),b
  9061  016370  D007               	goto	l8393
  9062                           
  9063                           ; BSR set to: 0
  9064  016372  0E2F               	movlw	47
  9065  016374  0100               	movlb	0	; () banked
  9066  016376  6573               	cpfsgt	isdigit@c& (0+255),b
  9067  016378  D003               	goto	l8393
  9068                           
  9069                           ; BSR set to: 0
  9070  01637A  0E01               	movlw	1
  9071  01637C  0100               	movlb	0	; () banked
  9072  01637E  6F72               	movwf	_isdigit$3840& (0+255),b
  9073  016380                     l8393:
  9074                           
  9075                           ; BSR set to: 0
  9076  016380  C072  F071         	movff	_isdigit$3840,??_isdigit
  9077  016384  0100               	movlb	0	; () banked
  9078  016386  3171               	rrcf	??_isdigit& (0+255),w,b
  9079  016388  0012               	return	
  9080  01638A                     __end_of_isdigit:
  9081                           	opt stack 0
  9082                           tblptru	equ	0xFF8
  9083                           tblptrh	equ	0xFF7
  9084                           tblptrl	equ	0xFF6
  9085                           tablat	equ	0xFF5
  9086                           prodh	equ	0xFF4
  9087                           prodl	equ	0xFF3
  9088                           intcon	equ	0xFF2
  9089                           postinc0	equ	0xFEE
  9090                           wreg	equ	0xFE8
  9091                           indf2	equ	0xFDF
  9092                           postinc2	equ	0xFDE
  9093                           fsr2h	equ	0xFDA
  9094                           fsr2l	equ	0xFD9
  9095                           status	equ	0xFD8
  9096                           
  9097 ;; *************** function _fround *****************
  9098 ;; Defined at:
  9099 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  prec            1    wreg     unsigned char 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  prec            1   68[BANK0 ] unsigned char 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  4   56[BANK0 ] unsigned char 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;Total ram usage:       13 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; Hardware stack levels required when called:    4
  9120 ;; This function calls:
  9121 ;;		___awdiv
  9122 ;;		___awmod
  9123 ;;		___flmul
  9124 ;; This function is called by:
  9125 ;;		_sprintf
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text13
  9130  0143E0                     __ptext13:
  9131                           	opt stack 0
  9132  0143E0                     _fround:
  9133                           	opt stack 24
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;incstack = 0
  9137                           ;fround@prec stored from wreg
  9138  0143E0  0100               	movlb	0	; () banked
  9139  0143E2  6FA4               	movwf	fround@prec& (0+255),b
  9140                           
  9141                           ;doprnt.c: 413: if(prec>=110)
  9142  0143E4  0E6D               	movlw	109
  9143  0143E6  0100               	movlb	0	; () banked
  9144  0143E8  65A4               	cpfsgt	fround@prec& (0+255),b
  9145  0143EA  D0CD               	goto	l8335
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9149  0143EC  0E00               	movlw	0
  9150  0143EE  0100               	movlb	0	; () banked
  9151  0143F0  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9152  0143F2  0E0A               	movlw	10
  9153  0143F4  6F79               	movwf	___awdiv@divisor& (0+255),b
  9154  0143F6  0E00               	movlw	0
  9155  0143F8  0100               	movlb	0	; () banked
  9156  0143FA  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9157  0143FC  0E64               	movlw	100
  9158  0143FE  6F73               	movwf	___awmod@divisor& (0+255),b
  9159  014400  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9160  014404  0100               	movlb	0	; () banked
  9161  014406  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9162  014408  EC1A  F0AE         	call	___awmod	;wreg free
  9163  01440C  C071  F077         	movff	?___awmod,___awdiv@dividend
  9164  014410  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9165  014414  ECF8  F0AB         	call	___awdiv	;wreg free
  9166  014418  0100               	movlb	0	; () banked
  9167  01441A  90D8               	bcf	status,0,c
  9168  01441C  3777               	rlcf	?___awdiv& (0+255),f,b
  9169  01441E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9170  014420  0100               	movlb	0	; () banked
  9171  014422  90D8               	bcf	status,0,c
  9172  014424  3777               	rlcf	?___awdiv& (0+255),f,b
  9173  014426  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9174  014428  0E24               	movlw	36
  9175  01442A  0100               	movlb	0	; () banked
  9176  01442C  2777               	addwf	?___awdiv& (0+255),f,b
  9177  01442E  0E00               	movlw	0
  9178  014430  0100               	movlb	0	; () banked
  9179  014432  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9180  014434  0EC9               	movlw	low __npowers_
  9181  014436  0100               	movlb	0	; () banked
  9182  014438  2577               	addwf	?___awdiv& (0+255),w,b
  9183  01443A  6EF6               	movwf	tblptrl,c
  9184  01443C  0EFD               	movlw	high __npowers_
  9185  01443E  0100               	movlb	0	; () banked
  9186  014440  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9187  014442  6EF7               	movwf	tblptrh,c
  9188  014444                     	if	1	;There are 3 active tblptr bytes
  9189  014444  6AF8               	clrf	tblptru,c
  9190  014446  0E00               	movlw	low (__mediumconst shr (0+16))
  9191  014448  22F8               	addwfc	tblptru,f,c
  9192  01444A                     	endif
  9193  01444A  0009               	tblrd		*+
  9194  01444C  CFF5 F083          	movff	tablat,___flmul@a
  9195  014450  0009               	tblrd		*+
  9196  014452  CFF5 F084          	movff	tablat,___flmul@a+1
  9197  014456  0009               	tblrd		*+
  9198  014458  CFF5 F085          	movff	tablat,___flmul@a+2
  9199  01445C  000A               	tblrd		*-
  9200  01445E  CFF5 F086          	movff	tablat,___flmul@a+3
  9201  014462  0E00               	movlw	0
  9202  014464  0100               	movlb	0	; () banked
  9203  014466  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9204  014468  0E64               	movlw	100
  9205  01446A  6F79               	movwf	___awdiv@divisor& (0+255),b
  9206  01446C  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  9207  014470  0100               	movlb	0	; () banked
  9208  014472  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9209  014474  ECF8  F0AB         	call	___awdiv	;wreg free
  9210  014478  0100               	movlb	0	; () banked
  9211  01447A  90D8               	bcf	status,0,c
  9212  01447C  3777               	rlcf	?___awdiv& (0+255),f,b
  9213  01447E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9214  014480  0100               	movlb	0	; () banked
  9215  014482  90D8               	bcf	status,0,c
  9216  014484  3777               	rlcf	?___awdiv& (0+255),f,b
  9217  014486  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9218  014488  0E48               	movlw	72
  9219  01448A  0100               	movlb	0	; () banked
  9220  01448C  2777               	addwf	?___awdiv& (0+255),f,b
  9221  01448E  0E00               	movlw	0
  9222  014490  0100               	movlb	0	; () banked
  9223  014492  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9224  014494  0EC9               	movlw	low __npowers_
  9225  014496  0100               	movlb	0	; () banked
  9226  014498  2577               	addwf	?___awdiv& (0+255),w,b
  9227  01449A  6EF6               	movwf	tblptrl,c
  9228  01449C  0EFD               	movlw	high __npowers_
  9229  01449E  0100               	movlb	0	; () banked
  9230  0144A0  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9231  0144A2  6EF7               	movwf	tblptrh,c
  9232  0144A4                     	if	1	;There are 3 active tblptr bytes
  9233  0144A4  6AF8               	clrf	tblptru,c
  9234  0144A6  0E00               	movlw	low (__mediumconst shr (0+16))
  9235  0144A8  22F8               	addwfc	tblptru,f,c
  9236  0144AA                     	endif
  9237  0144AA  0009               	tblrd		*+
  9238  0144AC  CFF5 F07F          	movff	tablat,___flmul@b
  9239  0144B0  0009               	tblrd		*+
  9240  0144B2  CFF5 F080          	movff	tablat,___flmul@b+1
  9241  0144B6  0009               	tblrd		*+
  9242  0144B8  CFF5 F081          	movff	tablat,___flmul@b+2
  9243  0144BC  000A               	tblrd		*-
  9244  0144BE  CFF5 F082          	movff	tablat,___flmul@b+3
  9245  0144C2  ECEE  F09B         	call	___flmul	;wreg free
  9246  0144C6  C07F  F0A0         	movff	?___flmul,_fround$4254
  9247  0144CA  C080  F0A1         	movff	?___flmul+1,_fround$4254+1
  9248  0144CE  C081  F0A2         	movff	?___flmul+2,_fround$4254+2
  9249  0144D2  C082  F0A3         	movff	?___flmul+3,_fround$4254+3
  9250                           
  9251                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9252  0144D6  0E00               	movlw	0
  9253  0144D8  0100               	movlb	0	; () banked
  9254  0144DA  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9255  0144DC  0E0A               	movlw	10
  9256  0144DE  6F73               	movwf	___awmod@divisor& (0+255),b
  9257  0144E0  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9258  0144E4  0100               	movlb	0	; () banked
  9259  0144E6  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9260  0144E8  EC1A  F0AE         	call	___awmod	;wreg free
  9261  0144EC  0100               	movlb	0	; () banked
  9262  0144EE  90D8               	bcf	status,0,c
  9263  0144F0  3771               	rlcf	?___awmod& (0+255),f,b
  9264  0144F2  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9265  0144F4  0100               	movlb	0	; () banked
  9266  0144F6  90D8               	bcf	status,0,c
  9267  0144F8  3771               	rlcf	?___awmod& (0+255),f,b
  9268  0144FA  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9269  0144FC  0EC9               	movlw	low __npowers_
  9270  0144FE  0100               	movlb	0	; () banked
  9271  014500  2571               	addwf	?___awmod& (0+255),w,b
  9272  014502  6EF6               	movwf	tblptrl,c
  9273  014504  0EFD               	movlw	high __npowers_
  9274  014506  0100               	movlb	0	; () banked
  9275  014508  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9276  01450A  6EF7               	movwf	tblptrh,c
  9277  01450C                     	if	1	;There are 3 active tblptr bytes
  9278  01450C  6AF8               	clrf	tblptru,c
  9279  01450E  0E00               	movlw	low (__mediumconst shr (0+16))
  9280  014510  22F8               	addwfc	tblptru,f,c
  9281  014512                     	endif
  9282  014512  0009               	tblrd		*+
  9283  014514  CFF5 F083          	movff	tablat,___flmul@a
  9284  014518  0009               	tblrd		*+
  9285  01451A  CFF5 F084          	movff	tablat,___flmul@a+1
  9286  01451E  0009               	tblrd		*+
  9287  014520  CFF5 F085          	movff	tablat,___flmul@a+2
  9288  014524  000A               	tblrd		*-
  9289  014526  CFF5 F086          	movff	tablat,___flmul@a+3
  9290  01452A  C0A0  F07F         	movff	_fround$4254,___flmul@b
  9291  01452E  C0A1  F080         	movff	_fround$4254+1,___flmul@b+1
  9292  014532  C0A2  F081         	movff	_fround$4254+2,___flmul@b+2
  9293  014536  C0A3  F082         	movff	_fround$4254+3,___flmul@b+3
  9294  01453A  ECEE  F09B         	call	___flmul	;wreg free
  9295  01453E  C07F  F09C         	movff	?___flmul,_fround$4255
  9296  014542  C080  F09D         	movff	?___flmul+1,_fround$4255+1
  9297  014546  C081  F09E         	movff	?___flmul+2,_fround$4255+2
  9298  01454A  C082  F09F         	movff	?___flmul+3,_fround$4255+3
  9299                           
  9300                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9301  01454E  C09C  F07F         	movff	_fround$4255,___flmul@b
  9302  014552  C09D  F080         	movff	_fround$4255+1,___flmul@b+1
  9303  014556  C09E  F081         	movff	_fround$4255+2,___flmul@b+2
  9304  01455A  C09F  F082         	movff	_fround$4255+3,___flmul@b+3
  9305  01455E  0E00               	movlw	0
  9306  014560  0100               	movlb	0	; () banked
  9307  014562  6F83               	movwf	___flmul@a& (0+255),b
  9308  014564  0E00               	movlw	0
  9309  014566  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9310  014568  0E00               	movlw	0
  9311  01456A  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9312  01456C  0E3F               	movlw	63
  9313  01456E  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9314  014570  ECEE  F09B         	call	___flmul	;wreg free
  9315  014574  C07F  F098         	movff	?___flmul,?_fround
  9316  014578  C080  F099         	movff	?___flmul+1,?_fround+1
  9317  01457C  C081  F09A         	movff	?___flmul+2,?_fround+2
  9318  014580  C082  F09B         	movff	?___flmul+3,?_fround+3
  9319  014584  0012               	return	
  9320  014586                     l8335:
  9321                           
  9322                           ;doprnt.c: 415: else if(prec > 10)
  9323  014586  0E0A               	movlw	10
  9324  014588  0100               	movlb	0	; () banked
  9325  01458A  65A4               	cpfsgt	fround@prec& (0+255),b
  9326  01458C  D078               	goto	l8343
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9330  01458E  0E00               	movlw	0
  9331  014590  0100               	movlb	0	; () banked
  9332  014592  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9333  014594  0E0A               	movlw	10
  9334  014596  6F73               	movwf	___awmod@divisor& (0+255),b
  9335  014598  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9336  01459C  0100               	movlb	0	; () banked
  9337  01459E  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9338  0145A0  EC1A  F0AE         	call	___awmod	;wreg free
  9339  0145A4  0100               	movlb	0	; () banked
  9340  0145A6  90D8               	bcf	status,0,c
  9341  0145A8  3771               	rlcf	?___awmod& (0+255),f,b
  9342  0145AA  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9343  0145AC  0100               	movlb	0	; () banked
  9344  0145AE  90D8               	bcf	status,0,c
  9345  0145B0  3771               	rlcf	?___awmod& (0+255),f,b
  9346  0145B2  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9347  0145B4  0EC9               	movlw	low __npowers_
  9348  0145B6  0100               	movlb	0	; () banked
  9349  0145B8  2571               	addwf	?___awmod& (0+255),w,b
  9350  0145BA  6EF6               	movwf	tblptrl,c
  9351  0145BC  0EFD               	movlw	high __npowers_
  9352  0145BE  0100               	movlb	0	; () banked
  9353  0145C0  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9354  0145C2  6EF7               	movwf	tblptrh,c
  9355  0145C4                     	if	1	;There are 3 active tblptr bytes
  9356  0145C4  6AF8               	clrf	tblptru,c
  9357  0145C6  0E00               	movlw	low (__mediumconst shr (0+16))
  9358  0145C8  22F8               	addwfc	tblptru,f,c
  9359  0145CA                     	endif
  9360  0145CA  0009               	tblrd		*+
  9361  0145CC  CFF5 F083          	movff	tablat,___flmul@a
  9362  0145D0  0009               	tblrd		*+
  9363  0145D2  CFF5 F084          	movff	tablat,___flmul@a+1
  9364  0145D6  0009               	tblrd		*+
  9365  0145D8  CFF5 F085          	movff	tablat,___flmul@a+2
  9366  0145DC  000A               	tblrd		*-
  9367  0145DE  CFF5 F086          	movff	tablat,___flmul@a+3
  9368  0145E2  0E00               	movlw	0
  9369  0145E4  0100               	movlb	0	; () banked
  9370  0145E6  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9371  0145E8  0E0A               	movlw	10
  9372  0145EA  6F79               	movwf	___awdiv@divisor& (0+255),b
  9373  0145EC  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  9374  0145F0  0100               	movlb	0	; () banked
  9375  0145F2  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9376  0145F4  ECF8  F0AB         	call	___awdiv	;wreg free
  9377  0145F8  0100               	movlb	0	; () banked
  9378  0145FA  90D8               	bcf	status,0,c
  9379  0145FC  3777               	rlcf	?___awdiv& (0+255),f,b
  9380  0145FE  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9381  014600  0100               	movlb	0	; () banked
  9382  014602  90D8               	bcf	status,0,c
  9383  014604  3777               	rlcf	?___awdiv& (0+255),f,b
  9384  014606  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9385  014608  0E24               	movlw	36
  9386  01460A  0100               	movlb	0	; () banked
  9387  01460C  2777               	addwf	?___awdiv& (0+255),f,b
  9388  01460E  0E00               	movlw	0
  9389  014610  0100               	movlb	0	; () banked
  9390  014612  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9391  014614  0EC9               	movlw	low __npowers_
  9392  014616  0100               	movlb	0	; () banked
  9393  014618  2577               	addwf	?___awdiv& (0+255),w,b
  9394  01461A  6EF6               	movwf	tblptrl,c
  9395  01461C  0EFD               	movlw	high __npowers_
  9396  01461E  0100               	movlb	0	; () banked
  9397  014620  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9398  014622  6EF7               	movwf	tblptrh,c
  9399  014624                     	if	1	;There are 3 active tblptr bytes
  9400  014624  6AF8               	clrf	tblptru,c
  9401  014626  0E00               	movlw	low (__mediumconst shr (0+16))
  9402  014628  22F8               	addwfc	tblptru,f,c
  9403  01462A                     	endif
  9404  01462A  0009               	tblrd		*+
  9405  01462C  CFF5 F07F          	movff	tablat,___flmul@b
  9406  014630  0009               	tblrd		*+
  9407  014632  CFF5 F080          	movff	tablat,___flmul@b+1
  9408  014636  0009               	tblrd		*+
  9409  014638  CFF5 F081          	movff	tablat,___flmul@b+2
  9410  01463C  000A               	tblrd		*-
  9411  01463E  CFF5 F082          	movff	tablat,___flmul@b+3
  9412  014642  ECEE  F09B         	call	___flmul	;wreg free
  9413  014646  C07F  F0A0         	movff	?___flmul,_fround$4254
  9414  01464A  C080  F0A1         	movff	?___flmul+1,_fround$4254+1
  9415  01464E  C081  F0A2         	movff	?___flmul+2,_fround$4254+2
  9416  014652  C082  F0A3         	movff	?___flmul+3,_fround$4254+3
  9417                           
  9418                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9419  014656  C0A0  F07F         	movff	_fround$4254,___flmul@b
  9420  01465A  C0A1  F080         	movff	_fround$4254+1,___flmul@b+1
  9421  01465E  C0A2  F081         	movff	_fround$4254+2,___flmul@b+2
  9422  014662  C0A3  F082         	movff	_fround$4254+3,___flmul@b+3
  9423  014666  0E00               	movlw	0
  9424  014668  0100               	movlb	0	; () banked
  9425  01466A  6F83               	movwf	___flmul@a& (0+255),b
  9426  01466C  0E00               	movlw	0
  9427  01466E  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9428  014670  0E00               	movlw	0
  9429  014672  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9430  014674  0E3F               	movlw	63
  9431  014676  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9432  014678  ECEE  F09B         	call	___flmul	;wreg free
  9433  01467C  D77B               	goto	L10
  9434  01467E                     l8343:
  9435                           
  9436                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9437  01467E  0100               	movlb	0	; () banked
  9438  014680  51A4               	movf	fround@prec& (0+255),w,b
  9439  014682  0D04               	mullw	4
  9440  014684  0EC9               	movlw	low __npowers_
  9441  014686  24F3               	addwf	prodl,w,c
  9442  014688  6EF6               	movwf	tblptrl,c
  9443  01468A  0EFD               	movlw	high __npowers_
  9444  01468C  20F4               	addwfc	prodh,w,c
  9445  01468E  6EF7               	movwf	tblptrh,c
  9446  014690                     	if	1	;There are 3 active tblptr bytes
  9447  014690  6AF8               	clrf	tblptru,c
  9448  014692  0E00               	movlw	low (__mediumconst shr (0+16))
  9449  014694  22F8               	addwfc	tblptru,f,c
  9450  014696                     	endif
  9451  014696  0009               	tblrd		*+
  9452  014698  CFF5 F07F          	movff	tablat,___flmul@b
  9453  01469C  0009               	tblrd		*+
  9454  01469E  CFF5 F080          	movff	tablat,___flmul@b+1
  9455  0146A2  0009               	tblrd		*+
  9456  0146A4  CFF5 F081          	movff	tablat,___flmul@b+2
  9457  0146A8  000A               	tblrd		*-
  9458  0146AA  CFF5 F082          	movff	tablat,___flmul@b+3
  9459  0146AE  0E00               	movlw	0
  9460  0146B0  0100               	movlb	0	; () banked
  9461  0146B2  6F83               	movwf	___flmul@a& (0+255),b
  9462  0146B4  0E00               	movlw	0
  9463  0146B6  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9464  0146B8  0E00               	movlw	0
  9465  0146BA  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9466  0146BC  0E3F               	movlw	63
  9467  0146BE  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9468  0146C0  ECEE  F09B         	call	___flmul	;wreg free
  9469  0146C4  C07F  F098         	movff	?___flmul,?_fround
  9470  0146C8  C080  F099         	movff	?___flmul+1,?_fround+1
  9471  0146CC  C081  F09A         	movff	?___flmul+2,?_fround+2
  9472  0146D0  C082  F09B         	movff	?___flmul+3,?_fround+3
  9473  0146D4  0012               	return	
  9474  0146D6                     __end_of_fround:
  9475                           	opt stack 0
  9476                           tblptru	equ	0xFF8
  9477                           tblptrh	equ	0xFF7
  9478                           tblptrl	equ	0xFF6
  9479                           tablat	equ	0xFF5
  9480                           prodh	equ	0xFF4
  9481                           prodl	equ	0xFF3
  9482                           intcon	equ	0xFF2
  9483                           postinc0	equ	0xFEE
  9484                           wreg	equ	0xFE8
  9485                           indf2	equ	0xFDF
  9486                           postinc2	equ	0xFDE
  9487                           fsr2h	equ	0xFDA
  9488                           fsr2l	equ	0xFD9
  9489                           status	equ	0xFD8
  9490                           
  9491 ;; *************** function ___flmul *****************
  9492 ;; Defined at:
  9493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  b               4   31[BANK0 ] unsigned char 
  9496 ;;  a               4   35[BANK0 ] unsigned char 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  prod            4   50[BANK0 ] struct .
  9499 ;;  grs             4   45[BANK0 ] unsigned long 
  9500 ;;  temp            2   54[BANK0 ] struct .
  9501 ;;  bexp            1   49[BANK0 ] unsigned char 
  9502 ;;  aexp            1   44[BANK0 ] unsigned char 
  9503 ;;  sign            1   43[BANK0 ] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  4   31[BANK0 ] unsigned char 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0, prodl, prodh
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9513 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;Total ram usage:       25 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    3
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_main
  9524 ;;		_fround
  9525 ;;		_scale
  9526 ;;		_sprintf
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text14
  9531  0137DC                     __ptext14:
  9532                           	opt stack 0
  9533  0137DC                     ___flmul:
  9534                           	opt stack 27
  9535                           
  9536                           ;incstack = 0
  9537  0137DC  0100               	movlb	0	; () banked
  9538  0137DE  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9539  0137E0  0B80               	andlw	128
  9540  0137E2  0100               	movlb	0	; () banked
  9541  0137E4  6F8B               	movwf	___flmul@sign& (0+255),b
  9542  0137E6  0100               	movlb	0	; () banked
  9543  0137E8  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9544  0137EA  2582               	addwf	(___flmul@b+3)& (0+255),w,b
  9545  0137EC  0100               	movlb	0	; () banked
  9546  0137EE  6F91               	movwf	___flmul@bexp& (0+255),b
  9547                           
  9548                           ; BSR set to: 0
  9549  0137F0  0100               	movlb	0	; () banked
  9550  0137F2  AF81               	btfss	(___flmul@b+2)& (0+255),7,b
  9551  0137F4  D002               	goto	l8089
  9552                           
  9553                           ; BSR set to: 0
  9554  0137F6  0100               	movlb	0	; () banked
  9555  0137F8  8191               	bsf	___flmul@bexp& (0+255),0,b
  9556  0137FA                     l8089:
  9557                           
  9558                           ; BSR set to: 0
  9559  0137FA  0100               	movlb	0	; () banked
  9560  0137FC  5191               	movf	___flmul@bexp& (0+255),w,b
  9561  0137FE  0100               	movlb	0	; () banked
  9562  013800  B4D8               	btfsc	status,2,c
  9563  013802  D010               	goto	l8097
  9564                           
  9565                           ; BSR set to: 0
  9566  013804  0100               	movlb	0	; () banked
  9567  013806  2991               	incf	___flmul@bexp& (0+255),w,b
  9568  013808  A4D8               	btfss	status,2,c
  9569  01380A  D009               	goto	l8095
  9570                           
  9571                           ; BSR set to: 0
  9572  01380C  0E00               	movlw	0
  9573  01380E  0100               	movlb	0	; () banked
  9574  013810  6F7F               	movwf	___flmul@b& (0+255),b
  9575  013812  0E00               	movlw	0
  9576  013814  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9577  013816  0E00               	movlw	0
  9578  013818  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9579  01381A  0E00               	movlw	0
  9580  01381C  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9581  01381E                     l8095:
  9582                           
  9583                           ; BSR set to: 0
  9584  01381E  0100               	movlb	0	; () banked
  9585  013820  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
  9586  013822  D009               	goto	l8099
  9587  013824                     l8097:
  9588                           
  9589                           ; BSR set to: 0
  9590  013824  0E00               	movlw	0
  9591  013826  0100               	movlb	0	; () banked
  9592  013828  6F7F               	movwf	___flmul@b& (0+255),b
  9593  01382A  0E00               	movlw	0
  9594  01382C  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9595  01382E  0E00               	movlw	0
  9596  013830  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9597  013832  0E00               	movlw	0
  9598  013834  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9599  013836                     l8099:
  9600                           
  9601                           ; BSR set to: 0
  9602  013836  0100               	movlb	0	; () banked
  9603  013838  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9604  01383A  0B80               	andlw	128
  9605  01383C  0100               	movlb	0	; () banked
  9606  01383E  1B8B               	xorwf	___flmul@sign& (0+255),f,b
  9607                           
  9608                           ; BSR set to: 0
  9609  013840  0100               	movlb	0	; () banked
  9610  013842  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9611  013844  2586               	addwf	(___flmul@a+3)& (0+255),w,b
  9612  013846  0100               	movlb	0	; () banked
  9613  013848  6F8C               	movwf	___flmul@aexp& (0+255),b
  9614                           
  9615                           ; BSR set to: 0
  9616  01384A  0100               	movlb	0	; () banked
  9617  01384C  AF85               	btfss	(___flmul@a+2)& (0+255),7,b
  9618  01384E  D002               	goto	l8107
  9619                           
  9620                           ; BSR set to: 0
  9621  013850  0100               	movlb	0	; () banked
  9622  013852  818C               	bsf	___flmul@aexp& (0+255),0,b
  9623  013854                     l8107:
  9624                           
  9625                           ; BSR set to: 0
  9626  013854  0100               	movlb	0	; () banked
  9627  013856  518C               	movf	___flmul@aexp& (0+255),w,b
  9628  013858  0100               	movlb	0	; () banked
  9629  01385A  B4D8               	btfsc	status,2,c
  9630  01385C  D010               	goto	l8115
  9631                           
  9632                           ; BSR set to: 0
  9633  01385E  0100               	movlb	0	; () banked
  9634  013860  298C               	incf	___flmul@aexp& (0+255),w,b
  9635  013862  A4D8               	btfss	status,2,c
  9636  013864  D009               	goto	l8113
  9637                           
  9638                           ; BSR set to: 0
  9639  013866  0E00               	movlw	0
  9640  013868  0100               	movlb	0	; () banked
  9641  01386A  6F83               	movwf	___flmul@a& (0+255),b
  9642  01386C  0E00               	movlw	0
  9643  01386E  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9644  013870  0E00               	movlw	0
  9645  013872  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9646  013874  0E00               	movlw	0
  9647  013876  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9648  013878                     l8113:
  9649                           
  9650                           ; BSR set to: 0
  9651  013878  0100               	movlb	0	; () banked
  9652  01387A  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
  9653  01387C  D009               	goto	l1627
  9654  01387E                     l8115:
  9655                           
  9656                           ; BSR set to: 0
  9657  01387E  0E00               	movlw	0
  9658  013880  0100               	movlb	0	; () banked
  9659  013882  6F83               	movwf	___flmul@a& (0+255),b
  9660  013884  0E00               	movlw	0
  9661  013886  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9662  013888  0E00               	movlw	0
  9663  01388A  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9664  01388C  0E00               	movlw	0
  9665  01388E  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9666  013890                     l1627:
  9667                           
  9668                           ; BSR set to: 0
  9669  013890  0100               	movlb	0	; () banked
  9670  013892  518C               	movf	___flmul@aexp& (0+255),w,b
  9671  013894  0100               	movlb	0	; () banked
  9672  013896  B4D8               	btfsc	status,2,c
  9673  013898  D005               	goto	l8119
  9674                           
  9675                           ; BSR set to: 0
  9676  01389A  0100               	movlb	0	; () banked
  9677  01389C  5191               	movf	___flmul@bexp& (0+255),w,b
  9678  01389E  0100               	movlb	0	; () banked
  9679  0138A0  A4D8               	btfss	status,2,c
  9680  0138A2  D00A               	goto	l8123
  9681  0138A4                     l8119:
  9682                           
  9683                           ; BSR set to: 0
  9684  0138A4  0E00               	movlw	0
  9685  0138A6  0100               	movlb	0	; () banked
  9686  0138A8  6F7F               	movwf	?___flmul& (0+255),b
  9687  0138AA  0E00               	movlw	0
  9688  0138AC  6F80               	movwf	(?___flmul+1)& (0+255),b
  9689  0138AE  0E00               	movlw	0
  9690  0138B0  6F81               	movwf	(?___flmul+2)& (0+255),b
  9691  0138B2  0E00               	movlw	0
  9692  0138B4  6F82               	movwf	(?___flmul+3)& (0+255),b
  9693                           
  9694                           ; BSR set to: 0
  9695  0138B6  0012               	return	
  9696  0138B8                     l8123:
  9697                           
  9698                           ; BSR set to: 0
  9699  0138B8  0100               	movlb	0	; () banked
  9700  0138BA  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9701  0138BC  0100               	movlb	0	; () banked
  9702  0138BE  037F               	mulwf	___flmul@b& (0+255),b
  9703  0138C0  CFF3 F096          	movff	prodl,___flmul@temp
  9704  0138C4  CFF4 F097          	movff	prodh,___flmul@temp+1
  9705                           
  9706                           ; BSR set to: 0
  9707  0138C8  0100               	movlb	0	; () banked
  9708  0138CA  5196               	movf	___flmul@temp& (0+255),w,b
  9709  0138CC  0100               	movlb	0	; () banked
  9710  0138CE  6F8D               	movwf	___flmul@grs& (0+255),b
  9711  0138D0  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
  9712  0138D2  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
  9713  0138D4  6B90               	clrf	(___flmul@grs+3)& (0+255),b
  9714                           
  9715                           ; BSR set to: 0
  9716  0138D6  0100               	movlb	0	; () banked
  9717  0138D8  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9718  0138DA  0100               	movlb	0	; () banked
  9719  0138DC  6F92               	movwf	___flmul@prod& (0+255),b
  9720  0138DE  6B93               	clrf	(___flmul@prod+1)& (0+255),b
  9721  0138E0  6B94               	clrf	(___flmul@prod+2)& (0+255),b
  9722  0138E2  6B95               	clrf	(___flmul@prod+3)& (0+255),b
  9723  0138E4  0100               	movlb	0	; () banked
  9724  0138E6  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9725  0138E8  0100               	movlb	0	; () banked
  9726  0138EA  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9727  0138EC  CFF3 F096          	movff	prodl,___flmul@temp
  9728  0138F0  CFF4 F097          	movff	prodh,___flmul@temp+1
  9729                           
  9730                           ; BSR set to: 0
  9731  0138F4  0100               	movlb	0	; () banked
  9732  0138F6  5196               	movf	___flmul@temp& (0+255),w,b
  9733  0138F8  0100               	movlb	0	; () banked
  9734  0138FA  278D               	addwf	___flmul@grs& (0+255),f,b
  9735  0138FC  0E00               	movlw	0
  9736  0138FE  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9737  013900  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9738  013902  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9739                           
  9740                           ; BSR set to: 0
  9741  013904  0100               	movlb	0	; () banked
  9742  013906  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9743  013908  0100               	movlb	0	; () banked
  9744  01390A  2792               	addwf	___flmul@prod& (0+255),f,b
  9745  01390C  0E00               	movlw	0
  9746  01390E  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9747  013910  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9748  013912  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9749  013914  0100               	movlb	0	; () banked
  9750  013916  5183               	movf	___flmul@a& (0+255),w,b
  9751  013918  0100               	movlb	0	; () banked
  9752  01391A  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9753  01391C  CFF3 F096          	movff	prodl,___flmul@temp
  9754  013920  CFF4 F097          	movff	prodh,___flmul@temp+1
  9755                           
  9756                           ; BSR set to: 0
  9757  013924  0100               	movlb	0	; () banked
  9758  013926  5196               	movf	___flmul@temp& (0+255),w,b
  9759  013928  0100               	movlb	0	; () banked
  9760  01392A  278D               	addwf	___flmul@grs& (0+255),f,b
  9761  01392C  0E00               	movlw	0
  9762  01392E  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9763  013930  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9764  013932  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9765                           
  9766                           ; BSR set to: 0
  9767  013934  0100               	movlb	0	; () banked
  9768  013936  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9769  013938  0100               	movlb	0	; () banked
  9770  01393A  2792               	addwf	___flmul@prod& (0+255),f,b
  9771  01393C  0E00               	movlw	0
  9772  01393E  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9773  013940  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9774  013942  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 0
  9777  013944  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9778  013948  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9779  01394C  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9780  013950  0100               	movlb	0	; () banked
  9781  013952  6B8D               	clrf	___flmul@grs& (0+255),b
  9782                           
  9783                           ; BSR set to: 0
  9784  013954  0100               	movlb	0	; () banked
  9785  013956  5183               	movf	___flmul@a& (0+255),w,b
  9786  013958  0100               	movlb	0	; () banked
  9787  01395A  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9788  01395C  CFF3 F096          	movff	prodl,___flmul@temp
  9789  013960  CFF4 F097          	movff	prodh,___flmul@temp+1
  9790                           
  9791                           ; BSR set to: 0
  9792  013964  0100               	movlb	0	; () banked
  9793  013966  5196               	movf	___flmul@temp& (0+255),w,b
  9794  013968  0100               	movlb	0	; () banked
  9795  01396A  278D               	addwf	___flmul@grs& (0+255),f,b
  9796  01396C  0100               	movlb	0	; () banked
  9797  01396E  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9798  013970  0100               	movlb	0	; () banked
  9799  013972  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9800  013974  0E00               	movlw	0
  9801  013976  0100               	movlb	0	; () banked
  9802  013978  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9803  01397A  0E00               	movlw	0
  9804  01397C  0100               	movlb	0	; () banked
  9805  01397E  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9806                           
  9807                           ; BSR set to: 0
  9808  013980  0100               	movlb	0	; () banked
  9809  013982  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9810  013984  0100               	movlb	0	; () banked
  9811  013986  037F               	mulwf	___flmul@b& (0+255),b
  9812  013988  CFF3 F096          	movff	prodl,___flmul@temp
  9813  01398C  CFF4 F097          	movff	prodh,___flmul@temp+1
  9814                           
  9815                           ; BSR set to: 0
  9816  013990  0100               	movlb	0	; () banked
  9817  013992  5196               	movf	___flmul@temp& (0+255),w,b
  9818  013994  0100               	movlb	0	; () banked
  9819  013996  278D               	addwf	___flmul@grs& (0+255),f,b
  9820  013998  0100               	movlb	0	; () banked
  9821  01399A  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9822  01399C  0100               	movlb	0	; () banked
  9823  01399E  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9824  0139A0  0E00               	movlw	0
  9825  0139A2  0100               	movlb	0	; () banked
  9826  0139A4  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9827  0139A6  0E00               	movlw	0
  9828  0139A8  0100               	movlb	0	; () banked
  9829  0139AA  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9830                           
  9831                           ; BSR set to: 0
  9832  0139AC  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9833  0139B0  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9834  0139B4  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9835  0139B8  0100               	movlb	0	; () banked
  9836  0139BA  6B8D               	clrf	___flmul@grs& (0+255),b
  9837  0139BC  0100               	movlb	0	; () banked
  9838  0139BE  5183               	movf	___flmul@a& (0+255),w,b
  9839  0139C0  0100               	movlb	0	; () banked
  9840  0139C2  037F               	mulwf	___flmul@b& (0+255),b
  9841  0139C4  CFF3 F096          	movff	prodl,___flmul@temp
  9842  0139C8  CFF4 F097          	movff	prodh,___flmul@temp+1
  9843                           
  9844                           ; BSR set to: 0
  9845  0139CC  0100               	movlb	0	; () banked
  9846  0139CE  5196               	movf	___flmul@temp& (0+255),w,b
  9847  0139D0  0100               	movlb	0	; () banked
  9848  0139D2  278D               	addwf	___flmul@grs& (0+255),f,b
  9849  0139D4  0100               	movlb	0	; () banked
  9850  0139D6  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9851  0139D8  0100               	movlb	0	; () banked
  9852  0139DA  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9853  0139DC  0E00               	movlw	0
  9854  0139DE  0100               	movlb	0	; () banked
  9855  0139E0  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9856  0139E2  0E00               	movlw	0
  9857  0139E4  0100               	movlb	0	; () banked
  9858  0139E6  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9859                           
  9860                           ; BSR set to: 0
  9861  0139E8  0100               	movlb	0	; () banked
  9862  0139EA  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9863  0139EC  0100               	movlb	0	; () banked
  9864  0139EE  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9865  0139F0  CFF3 F096          	movff	prodl,___flmul@temp
  9866  0139F4  CFF4 F097          	movff	prodh,___flmul@temp+1
  9867  0139F8  0100               	movlb	0	; () banked
  9868  0139FA  5196               	movf	___flmul@temp& (0+255),w,b
  9869  0139FC  0100               	movlb	0	; () banked
  9870  0139FE  2792               	addwf	___flmul@prod& (0+255),f,b
  9871  013A00  0100               	movlb	0	; () banked
  9872  013A02  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9873  013A04  0100               	movlb	0	; () banked
  9874  013A06  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9875  013A08  0E00               	movlw	0
  9876  013A0A  0100               	movlb	0	; () banked
  9877  013A0C  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9878  013A0E  0E00               	movlw	0
  9879  013A10  0100               	movlb	0	; () banked
  9880  013A12  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9881                           
  9882                           ; BSR set to: 0
  9883  013A14  0100               	movlb	0	; () banked
  9884  013A16  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9885  013A18  0100               	movlb	0	; () banked
  9886  013A1A  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9887  013A1C  CFF3 F096          	movff	prodl,___flmul@temp
  9888  013A20  CFF4 F097          	movff	prodh,___flmul@temp+1
  9889                           
  9890                           ; BSR set to: 0
  9891  013A24  0100               	movlb	0	; () banked
  9892  013A26  5196               	movf	___flmul@temp& (0+255),w,b
  9893  013A28  0100               	movlb	0	; () banked
  9894  013A2A  2792               	addwf	___flmul@prod& (0+255),f,b
  9895  013A2C  0100               	movlb	0	; () banked
  9896  013A2E  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9897  013A30  0100               	movlb	0	; () banked
  9898  013A32  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9899  013A34  0E00               	movlw	0
  9900  013A36  0100               	movlb	0	; () banked
  9901  013A38  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9902  013A3A  0E00               	movlw	0
  9903  013A3C  0100               	movlb	0	; () banked
  9904  013A3E  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9905  013A40  0100               	movlb	0	; () banked
  9906  013A42  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9907  013A44  0100               	movlb	0	; () banked
  9908  013A46  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9909  013A48  CFF3 F096          	movff	prodl,___flmul@temp
  9910  013A4C  CFF4 F097          	movff	prodh,___flmul@temp+1
  9911                           
  9912                           ; BSR set to: 0
  9913  013A50  0100               	movlb	0	; () banked
  9914  013A52  5196               	movf	___flmul@temp& (0+255),w,b
  9915  013A54  0100               	movlb	0	; () banked
  9916  013A56  6F87               	movwf	??___flmul& (0+255),b
  9917  013A58  0100               	movlb	0	; () banked
  9918  013A5A  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9919  013A5C  0100               	movlb	0	; () banked
  9920  013A5E  6F88               	movwf	(??___flmul+1)& (0+255),b
  9921  013A60  0100               	movlb	0	; () banked
  9922  013A62  6B89               	clrf	(??___flmul+2)& (0+255),b
  9923  013A64  0100               	movlb	0	; () banked
  9924  013A66  6B8A               	clrf	(??___flmul+3)& (0+255),b
  9925  013A68  C089  F08A         	movff	??___flmul+2,??___flmul+3
  9926  013A6C  C088  F089         	movff	??___flmul+1,??___flmul+2
  9927  013A70  C087  F088         	movff	??___flmul,??___flmul+1
  9928  013A74  0100               	movlb	0	; () banked
  9929  013A76  6B87               	clrf	??___flmul& (0+255),b
  9930  013A78  0100               	movlb	0	; () banked
  9931  013A7A  5187               	movf	??___flmul& (0+255),w,b
  9932  013A7C  0100               	movlb	0	; () banked
  9933  013A7E  2792               	addwf	___flmul@prod& (0+255),f,b
  9934  013A80  0100               	movlb	0	; () banked
  9935  013A82  5188               	movf	(??___flmul+1)& (0+255),w,b
  9936  013A84  0100               	movlb	0	; () banked
  9937  013A86  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9938  013A88  0100               	movlb	0	; () banked
  9939  013A8A  5189               	movf	(??___flmul+2)& (0+255),w,b
  9940  013A8C  0100               	movlb	0	; () banked
  9941  013A8E  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9942  013A90  0100               	movlb	0	; () banked
  9943  013A92  518A               	movf	(??___flmul+3)& (0+255),w,b
  9944  013A94  0100               	movlb	0	; () banked
  9945  013A96  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9946                           
  9947                           ; BSR set to: 0
  9948  013A98  C08D  F087         	movff	___flmul@grs,??___flmul
  9949  013A9C  C08E  F088         	movff	___flmul@grs+1,??___flmul+1
  9950  013AA0  C08F  F089         	movff	___flmul@grs+2,??___flmul+2
  9951  013AA4  C090  F08A         	movff	___flmul@grs+3,??___flmul+3
  9952  013AA8  0E19               	movlw	25
  9953  013AAA  D006               	goto	u10820
  9954  013AAC                     u10825:
  9955  013AAC  0100               	movlb	0	; () banked
  9956  013AAE  90D8               	bcf	status,0,c
  9957  013AB0  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  9958  013AB2  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  9959  013AB4  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  9960  013AB6  3387               	rrcf	??___flmul& (0+255),f,b
  9961  013AB8                     u10820:
  9962  013AB8  2EE8               	decfsz	wreg,f,c
  9963  013ABA  D7F8               	goto	u10825
  9964  013ABC  0100               	movlb	0	; () banked
  9965  013ABE  5187               	movf	??___flmul& (0+255),w,b
  9966  013AC0  0100               	movlb	0	; () banked
  9967  013AC2  2792               	addwf	___flmul@prod& (0+255),f,b
  9968  013AC4  0100               	movlb	0	; () banked
  9969  013AC6  5188               	movf	(??___flmul+1)& (0+255),w,b
  9970  013AC8  0100               	movlb	0	; () banked
  9971  013ACA  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9972  013ACC  0100               	movlb	0	; () banked
  9973  013ACE  5189               	movf	(??___flmul+2)& (0+255),w,b
  9974  013AD0  0100               	movlb	0	; () banked
  9975  013AD2  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9976  013AD4  0100               	movlb	0	; () banked
  9977  013AD6  518A               	movf	(??___flmul+3)& (0+255),w,b
  9978  013AD8  0100               	movlb	0	; () banked
  9979  013ADA  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9980                           
  9981                           ; BSR set to: 0
  9982  013ADC  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9983  013AE0  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9984  013AE4  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9985  013AE8  0100               	movlb	0	; () banked
  9986  013AEA  6B8D               	clrf	___flmul@grs& (0+255),b
  9987                           
  9988                           ; BSR set to: 0
  9989  013AEC  0100               	movlb	0	; () banked
  9990  013AEE  518C               	movf	___flmul@aexp& (0+255),w,b
  9991  013AF0  C091  F087         	movff	___flmul@bexp,??___flmul
  9992  013AF4  0100               	movlb	0	; () banked
  9993  013AF6  6B88               	clrf	(??___flmul+1)& (0+255),b
  9994  013AF8  0100               	movlb	0	; () banked
  9995  013AFA  2787               	addwf	??___flmul& (0+255),f,b
  9996  013AFC  0E00               	movlw	0
  9997  013AFE  2388               	addwfc	(??___flmul+1)& (0+255),f,b
  9998  013B00  0E82               	movlw	130
  9999  013B02  0100               	movlb	0	; () banked
 10000  013B04  2587               	addwf	??___flmul& (0+255),w,b
 10001  013B06  0100               	movlb	0	; () banked
 10002  013B08  6F96               	movwf	___flmul@temp& (0+255),b
 10003  013B0A  0EFF               	movlw	255
 10004  013B0C  0100               	movlb	0	; () banked
 10005  013B0E  2188               	addwfc	(??___flmul+1)& (0+255),w,b
 10006  013B10  0100               	movlb	0	; () banked
 10007  013B12  6F97               	movwf	(___flmul@temp+1)& (0+255),b
 10008  013B14  D015               	goto	l8171
 10009  013B16                     l8165:
 10010                           
 10011                           ; BSR set to: 0
 10012  013B16  0100               	movlb	0	; () banked
 10013  013B18  90D8               	bcf	status,0,c
 10014  013B1A  3792               	rlcf	___flmul@prod& (0+255),f,b
 10015  013B1C  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10016  013B1E  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10017  013B20  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10018                           
 10019                           ; BSR set to: 0
 10020  013B22  0100               	movlb	0	; () banked
 10021  013B24  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10022  013B26  D002               	goto	l1634
 10023                           
 10024                           ; BSR set to: 0
 10025  013B28  0100               	movlb	0	; () banked
 10026  013B2A  8192               	bsf	___flmul@prod& (0+255),0,b
 10027  013B2C                     l1634:
 10028                           
 10029                           ; BSR set to: 0
 10030  013B2C  0100               	movlb	0	; () banked
 10031  013B2E  90D8               	bcf	status,0,c
 10032  013B30  378D               	rlcf	___flmul@grs& (0+255),f,b
 10033  013B32  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10034  013B34  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10035  013B36  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10036  013B38  0100               	movlb	0	; () banked
 10037  013B3A  0796               	decf	___flmul@temp& (0+255),f,b
 10038  013B3C  A0D8               	btfss	status,0,c
 10039  013B3E  0797               	decf	(___flmul@temp+1)& (0+255),f,b
 10040  013B40                     l8171:
 10041                           
 10042                           ; BSR set to: 0
 10043  013B40  0100               	movlb	0	; () banked
 10044  013B42  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
 10045  013B44  D7E8               	goto	l8165
 10046                           
 10047                           ; BSR set to: 0
 10048                           
 10049                           ; BSR set to: 0
 10050  013B46  0E00               	movlw	0
 10051  013B48  0100               	movlb	0	; () banked
 10052  013B4A  6F8C               	movwf	___flmul@aexp& (0+255),b
 10053                           
 10054                           ; BSR set to: 0
 10055  013B4C  0100               	movlb	0	; () banked
 10056  013B4E  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10057  013B50  D024               	goto	l1636
 10058                           
 10059                           ; BSR set to: 0
 10060  013B52  0EFF               	movlw	255
 10061  013B54  0100               	movlb	0	; () banked
 10062  013B56  158D               	andwf	___flmul@grs& (0+255),w,b
 10063  013B58  0100               	movlb	0	; () banked
 10064  013B5A  6F87               	movwf	??___flmul& (0+255),b
 10065  013B5C  0EFF               	movlw	255
 10066  013B5E  0100               	movlb	0	; () banked
 10067  013B60  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
 10068  013B62  0100               	movlb	0	; () banked
 10069  013B64  6F88               	movwf	(??___flmul+1)& (0+255),b
 10070  013B66  0EFF               	movlw	255
 10071  013B68  0100               	movlb	0	; () banked
 10072  013B6A  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
 10073  013B6C  0100               	movlb	0	; () banked
 10074  013B6E  6F89               	movwf	(??___flmul+2)& (0+255),b
 10075  013B70  0E7F               	movlw	127
 10076  013B72  0100               	movlb	0	; () banked
 10077  013B74  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
 10078  013B76  0100               	movlb	0	; () banked
 10079  013B78  6F8A               	movwf	(??___flmul+3)& (0+255),b
 10080  013B7A  0100               	movlb	0	; () banked
 10081  013B7C  5187               	movf	??___flmul& (0+255),w,b
 10082  013B7E  0100               	movlb	0	; () banked
 10083  013B80  1188               	iorwf	(??___flmul+1)& (0+255),w,b
 10084  013B82  0100               	movlb	0	; () banked
 10085  013B84  1189               	iorwf	(??___flmul+2)& (0+255),w,b
 10086  013B86  0100               	movlb	0	; () banked
 10087  013B88  118A               	iorwf	(??___flmul+3)& (0+255),w,b
 10088  013B8A  A4D8               	btfss	status,2,c
 10089  013B8C  D003               	goto	l8181
 10090                           
 10091                           ; BSR set to: 0
 10092                           
 10093                           ; BSR set to: 0
 10094  013B8E  0100               	movlb	0	; () banked
 10095  013B90  A192               	btfss	___flmul@prod& (0+255),0,b
 10096  013B92  D003               	goto	l1636
 10097  013B94                     l8181:
 10098                           
 10099                           ; BSR set to: 0
 10100  013B94  0E01               	movlw	1
 10101  013B96  0100               	movlb	0	; () banked
 10102  013B98  6F8C               	movwf	___flmul@aexp& (0+255),b
 10103  013B9A                     l1636:
 10104                           
 10105                           ; BSR set to: 0
 10106  013B9A  0100               	movlb	0	; () banked
 10107  013B9C  518C               	movf	___flmul@aexp& (0+255),w,b
 10108  013B9E  0100               	movlb	0	; () banked
 10109  013BA0  B4D8               	btfsc	status,2,c
 10110  013BA2  D023               	goto	l8191
 10111                           
 10112                           ; BSR set to: 0
 10113  013BA4  0E01               	movlw	1
 10114  013BA6  0100               	movlb	0	; () banked
 10115  013BA8  2792               	addwf	___flmul@prod& (0+255),f,b
 10116  013BAA  0E00               	movlw	0
 10117  013BAC  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10118  013BAE  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10119  013BB0  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10120                           
 10121                           ; BSR set to: 0
 10122  013BB2  0100               	movlb	0	; () banked
 10123  013BB4  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
 10124  013BB6  D019               	goto	l8191
 10125                           
 10126                           ; BSR set to: 0
 10127  013BB8  C092  F087         	movff	___flmul@prod,??___flmul
 10128  013BBC  C093  F088         	movff	___flmul@prod+1,??___flmul+1
 10129  013BC0  C094  F089         	movff	___flmul@prod+2,??___flmul+2
 10130  013BC4  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
 10131  013BC8  0100               	movlb	0	; () banked
 10132  013BCA  358A               	rlcf	(??___flmul+3)& (0+255),w,b
 10133  013BCC  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 10134  013BCE  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 10135  013BD0  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 10136  013BD2  3387               	rrcf	??___flmul& (0+255),f,b
 10137  013BD4  C087  F092         	movff	??___flmul,___flmul@prod
 10138  013BD8  C088  F093         	movff	??___flmul+1,___flmul@prod+1
 10139  013BDC  C089  F094         	movff	??___flmul+2,___flmul@prod+2
 10140  013BE0  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
 10141                           
 10142                           ; BSR set to: 0
 10143  013BE4  0100               	movlb	0	; () banked
 10144  013BE6  4B96               	infsnz	___flmul@temp& (0+255),f,b
 10145  013BE8  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
 10146  013BEA                     l8191:
 10147                           
 10148                           ; BSR set to: 0
 10149  013BEA  0100               	movlb	0	; () banked
 10150  013BEC  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10151  013BEE  D010               	goto	l8195
 10152  013BF0  0100               	movlb	0	; () banked
 10153  013BF2  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10154  013BF4  E104               	bnz	u10900
 10155  013BF6  0100               	movlb	0	; () banked
 10156  013BF8  2996               	incf	___flmul@temp& (0+255),w,b
 10157  013BFA  A0D8               	btfss	status,0,c
 10158  013BFC  D009               	goto	l8195
 10159  013BFE                     u10900:
 10160                           
 10161                           ; BSR set to: 0
 10162  013BFE  0E00               	movlw	0
 10163  013C00  0100               	movlb	0	; () banked
 10164  013C02  6F92               	movwf	___flmul@prod& (0+255),b
 10165  013C04  0E00               	movlw	0
 10166  013C06  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 10167  013C08  0E80               	movlw	128
 10168  013C0A  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 10169  013C0C  0E7F               	movlw	127
 10170  013C0E  D02B               	goto	L11
 10171  013C10                     l8195:
 10172                           
 10173                           ; BSR set to: 0
 10174  013C10  0100               	movlb	0	; () banked
 10175  013C12  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10176  013C14  D007               	goto	l8197
 10177  013C16  0100               	movlb	0	; () banked
 10178  013C18  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10179  013C1A  E111               	bnz	l1644
 10180  013C1C  0100               	movlb	0	; () banked
 10181  013C1E  0596               	decf	___flmul@temp& (0+255),w,b
 10182  013C20  B0D8               	btfsc	status,0,c
 10183  013C22  D00D               	goto	l1644
 10184  013C24                     l8197:
 10185                           
 10186                           ; BSR set to: 0
 10187  013C24  0E00               	movlw	0
 10188  013C26  0100               	movlb	0	; () banked
 10189  013C28  6F92               	movwf	___flmul@prod& (0+255),b
 10190  013C2A  0E00               	movlw	0
 10191  013C2C  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 10192  013C2E  0E00               	movlw	0
 10193  013C30  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 10194  013C32  0E00               	movlw	0
 10195  013C34  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 10196  013C36  0E00               	movlw	0
 10197  013C38  0100               	movlb	0	; () banked
 10198  013C3A  6F8B               	movwf	___flmul@sign& (0+255),b
 10199  013C3C  D015               	goto	l8207
 10200  013C3E                     l1644:
 10201                           
 10202                           ; BSR set to: 0
 10203  013C3E  C096  F091         	movff	___flmul@temp,___flmul@bexp
 10204                           
 10205                           ; BSR set to: 0
 10206  013C42  0EFF               	movlw	255
 10207  013C44  0100               	movlb	0	; () banked
 10208  013C46  1792               	andwf	___flmul@prod& (0+255),f,b
 10209  013C48  0EFF               	movlw	255
 10210  013C4A  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
 10211  013C4C  0E7F               	movlw	127
 10212  013C4E  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
 10213  013C50  0E00               	movlw	0
 10214  013C52  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
 10215                           
 10216                           ; BSR set to: 0
 10217  013C54  0100               	movlb	0	; () banked
 10218  013C56  A191               	btfss	___flmul@bexp& (0+255),0,b
 10219  013C58  D002               	goto	l8205
 10220                           
 10221                           ; BSR set to: 0
 10222  013C5A  0100               	movlb	0	; () banked
 10223  013C5C  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
 10224  013C5E                     l8205:
 10225                           
 10226                           ; BSR set to: 0
 10227  013C5E  0100               	movlb	0	; () banked
 10228  013C60  90D8               	bcf	status,0,c
 10229  013C62  3191               	rrcf	___flmul@bexp& (0+255),w,b
 10230  013C64  0100               	movlb	0	; () banked
 10231  013C66                     L11:
 10232  013C66  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 10233  013C68                     l8207:
 10234                           
 10235                           ; BSR set to: 0
 10236  013C68  0100               	movlb	0	; () banked
 10237  013C6A  518B               	movf	___flmul@sign& (0+255),w,b
 10238  013C6C  0100               	movlb	0	; () banked
 10239  013C6E  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10240                           
 10241                           ; BSR set to: 0
 10242  013C70  C092  F07F         	movff	___flmul@prod,?___flmul
 10243  013C74  C093  F080         	movff	___flmul@prod+1,?___flmul+1
 10244  013C78  C094  F081         	movff	___flmul@prod+2,?___flmul+2
 10245  013C7C  C095  F082         	movff	___flmul@prod+3,?___flmul+3
 10246  013C80  0012               	return	
 10247  013C82                     __end_of___flmul:
 10248                           	opt stack 0
 10249                           tblptru	equ	0xFF8
 10250                           tblptrh	equ	0xFF7
 10251                           tblptrl	equ	0xFF6
 10252                           tablat	equ	0xFF5
 10253                           prodh	equ	0xFF4
 10254                           prodl	equ	0xFF3
 10255                           intcon	equ	0xFF2
 10256                           postinc0	equ	0xFEE
 10257                           wreg	equ	0xFE8
 10258                           indf2	equ	0xFDF
 10259                           postinc2	equ	0xFDE
 10260                           fsr2h	equ	0xFDA
 10261                           fsr2l	equ	0xFD9
 10262                           status	equ	0xFD8
 10263                           
 10264 ;; *************** function ___awmod *****************
 10265 ;; Defined at:
 10266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  dividend        2   17[BANK0 ] int 
 10269 ;;  divisor         2   19[BANK0 ] int 
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;  sign            1   22[BANK0 ] unsigned char 
 10272 ;;  counter         1   21[BANK0 ] unsigned char 
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  2   17[BANK0 ] int 
 10275 ;; Registers used:
 10276 ;;		wreg, status,2, status,0
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;Total ram usage:        6 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:    3
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_fround
 10293 ;;		_scale
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	text15
 10298  015C34                     __ptext15:
 10299                           	opt stack 0
 10300  015C34                     ___awmod:
 10301                           	opt stack 24
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;incstack = 0
 10305  015C34  0E00               	movlw	0
 10306  015C36  0100               	movlb	0	; () banked
 10307  015C38  6F76               	movwf	___awmod@sign& (0+255),b
 10308                           
 10309                           ; BSR set to: 0
 10310  015C3A  0100               	movlb	0	; () banked
 10311  015C3C  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10312  015C3E  D008               	goto	l8265
 10313                           
 10314                           ; BSR set to: 0
 10315  015C40  0100               	movlb	0	; () banked
 10316  015C42  6D71               	negf	___awmod@dividend& (0+255),b
 10317  015C44  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10318  015C46  B0D8               	btfsc	status,0,c
 10319  015C48  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10320                           
 10321                           ; BSR set to: 0
 10322  015C4A  0E01               	movlw	1
 10323  015C4C  0100               	movlb	0	; () banked
 10324  015C4E  6F76               	movwf	___awmod@sign& (0+255),b
 10325  015C50                     l8265:
 10326                           
 10327                           ; BSR set to: 0
 10328  015C50  0100               	movlb	0	; () banked
 10329  015C52  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10330  015C54  D005               	goto	l8269
 10331                           
 10332                           ; BSR set to: 0
 10333  015C56  0100               	movlb	0	; () banked
 10334  015C58  6D73               	negf	___awmod@divisor& (0+255),b
 10335  015C5A  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 10336  015C5C  B0D8               	btfsc	status,0,c
 10337  015C5E  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 10338  015C60                     l8269:
 10339                           
 10340                           ; BSR set to: 0
 10341  015C60  0100               	movlb	0	; () banked
 10342  015C62  5173               	movf	___awmod@divisor& (0+255),w,b
 10343  015C64  0100               	movlb	0	; () banked
 10344  015C66  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10345  015C68  B4D8               	btfsc	status,2,c
 10346  015C6A  D026               	goto	l8285
 10347                           
 10348                           ; BSR set to: 0
 10349  015C6C  0E01               	movlw	1
 10350  015C6E  0100               	movlb	0	; () banked
 10351  015C70  6F75               	movwf	___awmod@counter& (0+255),b
 10352  015C72  D006               	goto	l8275
 10353  015C74                     l8273:
 10354                           
 10355                           ; BSR set to: 0
 10356  015C74  0100               	movlb	0	; () banked
 10357  015C76  90D8               	bcf	status,0,c
 10358  015C78  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10359  015C7A  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10360  015C7C  0100               	movlb	0	; () banked
 10361  015C7E  2B75               	incf	___awmod@counter& (0+255),f,b
 10362  015C80                     l8275:
 10363                           
 10364                           ; BSR set to: 0
 10365  015C80  0100               	movlb	0	; () banked
 10366  015C82  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10367  015C84  D7F7               	goto	l8273
 10368  015C86                     l8277:
 10369                           
 10370                           ; BSR set to: 0
 10371  015C86  0100               	movlb	0	; () banked
 10372  015C88  5173               	movf	___awmod@divisor& (0+255),w,b
 10373  015C8A  0100               	movlb	0	; () banked
 10374  015C8C  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10375  015C8E  0100               	movlb	0	; () banked
 10376  015C90  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10377  015C92  0100               	movlb	0	; () banked
 10378  015C94  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10379  015C96  A0D8               	btfss	status,0,c
 10380  015C98  D008               	goto	l8281
 10381                           
 10382                           ; BSR set to: 0
 10383  015C9A  0100               	movlb	0	; () banked
 10384  015C9C  5173               	movf	___awmod@divisor& (0+255),w,b
 10385  015C9E  0100               	movlb	0	; () banked
 10386  015CA0  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10387  015CA2  0100               	movlb	0	; () banked
 10388  015CA4  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10389  015CA6  0100               	movlb	0	; () banked
 10390  015CA8  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10391  015CAA                     l8281:
 10392                           
 10393                           ; BSR set to: 0
 10394  015CAA  0100               	movlb	0	; () banked
 10395  015CAC  90D8               	bcf	status,0,c
 10396  015CAE  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10397  015CB0  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10398                           
 10399                           ; BSR set to: 0
 10400  015CB2  0100               	movlb	0	; () banked
 10401  015CB4  2F75               	decfsz	___awmod@counter& (0+255),f,b
 10402  015CB6  D7E7               	goto	l8277
 10403  015CB8                     l8285:
 10404                           
 10405                           ; BSR set to: 0
 10406  015CB8  0100               	movlb	0	; () banked
 10407  015CBA  5176               	movf	___awmod@sign& (0+255),w,b
 10408  015CBC  0100               	movlb	0	; () banked
 10409  015CBE  B4D8               	btfsc	status,2,c
 10410  015CC0  D005               	goto	l8289
 10411                           
 10412                           ; BSR set to: 0
 10413  015CC2  0100               	movlb	0	; () banked
 10414  015CC4  6D71               	negf	___awmod@dividend& (0+255),b
 10415  015CC6  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10416  015CC8  B0D8               	btfsc	status,0,c
 10417  015CCA  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10418  015CCC                     l8289:
 10419                           
 10420                           ; BSR set to: 0
 10421  015CCC  C071  F071         	movff	___awmod@dividend,?___awmod
 10422  015CD0  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10423  015CD4  0012               	return	
 10424  015CD6                     __end_of___awmod:
 10425                           	opt stack 0
 10426                           tblptru	equ	0xFF8
 10427                           tblptrh	equ	0xFF7
 10428                           tblptrl	equ	0xFF6
 10429                           tablat	equ	0xFF5
 10430                           prodh	equ	0xFF4
 10431                           prodl	equ	0xFF3
 10432                           intcon	equ	0xFF2
 10433                           postinc0	equ	0xFEE
 10434                           wreg	equ	0xFE8
 10435                           indf2	equ	0xFDF
 10436                           postinc2	equ	0xFDE
 10437                           fsr2h	equ	0xFDA
 10438                           fsr2l	equ	0xFD9
 10439                           status	equ	0xFD8
 10440                           
 10441 ;; *************** function ___awdiv *****************
 10442 ;; Defined at:
 10443 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;  dividend        2   23[BANK0 ] int 
 10446 ;;  divisor         2   25[BANK0 ] int 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  quotient        2   29[BANK0 ] int 
 10449 ;;  sign            1   28[BANK0 ] unsigned char 
 10450 ;;  counter         1   27[BANK0 ] unsigned char 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  2   23[BANK0 ] int 
 10453 ;; Registers used:
 10454 ;;		wreg, status,2, status,0
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;Total ram usage:        8 bytes
 10465 ;; Hardware stack levels used:    1
 10466 ;; Hardware stack levels required when called:    3
 10467 ;; This function calls:
 10468 ;;		Nothing
 10469 ;; This function is called by:
 10470 ;;		_fround
 10471 ;;		_scale
 10472 ;;		_sprintf
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text16
 10477  0157F0                     __ptext16:
 10478                           	opt stack 0
 10479  0157F0                     ___awdiv:
 10480                           	opt stack 24
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;incstack = 0
 10484  0157F0  0E00               	movlw	0
 10485  0157F2  0100               	movlb	0	; () banked
 10486  0157F4  6F7C               	movwf	___awdiv@sign& (0+255),b
 10487                           
 10488                           ; BSR set to: 0
 10489  0157F6  0100               	movlb	0	; () banked
 10490  0157F8  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10491  0157FA  D008               	goto	l8221
 10492                           
 10493                           ; BSR set to: 0
 10494  0157FC  0100               	movlb	0	; () banked
 10495  0157FE  6D79               	negf	___awdiv@divisor& (0+255),b
 10496  015800  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10497  015802  B0D8               	btfsc	status,0,c
 10498  015804  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10499                           
 10500                           ; BSR set to: 0
 10501  015806  0E01               	movlw	1
 10502  015808  0100               	movlb	0	; () banked
 10503  01580A  6F7C               	movwf	___awdiv@sign& (0+255),b
 10504  01580C                     l8221:
 10505                           
 10506                           ; BSR set to: 0
 10507  01580C  0100               	movlb	0	; () banked
 10508  01580E  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10509  015810  D008               	goto	l8227
 10510                           
 10511                           ; BSR set to: 0
 10512  015812  0100               	movlb	0	; () banked
 10513  015814  6D77               	negf	___awdiv@dividend& (0+255),b
 10514  015816  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10515  015818  B0D8               	btfsc	status,0,c
 10516  01581A  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10517                           
 10518                           ; BSR set to: 0
 10519  01581C  0E01               	movlw	1
 10520  01581E  0100               	movlb	0	; () banked
 10521  015820  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
 10522  015822                     l8227:
 10523                           
 10524                           ; BSR set to: 0
 10525  015822  0E00               	movlw	0
 10526  015824  0100               	movlb	0	; () banked
 10527  015826  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
 10528  015828  0E00               	movlw	0
 10529  01582A  6F7D               	movwf	___awdiv@quotient& (0+255),b
 10530                           
 10531                           ; BSR set to: 0
 10532  01582C  0100               	movlb	0	; () banked
 10533  01582E  5179               	movf	___awdiv@divisor& (0+255),w,b
 10534  015830  0100               	movlb	0	; () banked
 10535  015832  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10536  015834  B4D8               	btfsc	status,2,c
 10537  015836  D02C               	goto	l8249
 10538                           
 10539                           ; BSR set to: 0
 10540  015838  0E01               	movlw	1
 10541  01583A  0100               	movlb	0	; () banked
 10542  01583C  6F7B               	movwf	___awdiv@counter& (0+255),b
 10543  01583E  D006               	goto	l8235
 10544  015840                     l8233:
 10545                           
 10546                           ; BSR set to: 0
 10547  015840  0100               	movlb	0	; () banked
 10548  015842  90D8               	bcf	status,0,c
 10549  015844  3779               	rlcf	___awdiv@divisor& (0+255),f,b
 10550  015846  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10551  015848  0100               	movlb	0	; () banked
 10552  01584A  2B7B               	incf	___awdiv@counter& (0+255),f,b
 10553  01584C                     l8235:
 10554                           
 10555                           ; BSR set to: 0
 10556  01584C  0100               	movlb	0	; () banked
 10557  01584E  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10558  015850  D7F7               	goto	l8233
 10559  015852                     l8237:
 10560                           
 10561                           ; BSR set to: 0
 10562  015852  0100               	movlb	0	; () banked
 10563  015854  90D8               	bcf	status,0,c
 10564  015856  377D               	rlcf	___awdiv@quotient& (0+255),f,b
 10565  015858  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10566                           
 10567                           ; BSR set to: 0
 10568  01585A  0100               	movlb	0	; () banked
 10569  01585C  5179               	movf	___awdiv@divisor& (0+255),w,b
 10570  01585E  0100               	movlb	0	; () banked
 10571  015860  5D77               	subwf	___awdiv@dividend& (0+255),w,b
 10572  015862  0100               	movlb	0	; () banked
 10573  015864  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10574  015866  0100               	movlb	0	; () banked
 10575  015868  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10576  01586A  A0D8               	btfss	status,0,c
 10577  01586C  D00A               	goto	l8245
 10578                           
 10579                           ; BSR set to: 0
 10580  01586E  0100               	movlb	0	; () banked
 10581  015870  5179               	movf	___awdiv@divisor& (0+255),w,b
 10582  015872  0100               	movlb	0	; () banked
 10583  015874  5F77               	subwf	___awdiv@dividend& (0+255),f,b
 10584  015876  0100               	movlb	0	; () banked
 10585  015878  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10586  01587A  0100               	movlb	0	; () banked
 10587  01587C  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10588                           
 10589                           ; BSR set to: 0
 10590  01587E  0100               	movlb	0	; () banked
 10591  015880  817D               	bsf	___awdiv@quotient& (0+255),0,b
 10592  015882                     l8245:
 10593                           
 10594                           ; BSR set to: 0
 10595  015882  0100               	movlb	0	; () banked
 10596  015884  90D8               	bcf	status,0,c
 10597  015886  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10598  015888  3379               	rrcf	___awdiv@divisor& (0+255),f,b
 10599                           
 10600                           ; BSR set to: 0
 10601  01588A  0100               	movlb	0	; () banked
 10602  01588C  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
 10603  01588E  D7E1               	goto	l8237
 10604  015890                     l8249:
 10605                           
 10606                           ; BSR set to: 0
 10607  015890  0100               	movlb	0	; () banked
 10608  015892  517C               	movf	___awdiv@sign& (0+255),w,b
 10609  015894  0100               	movlb	0	; () banked
 10610  015896  B4D8               	btfsc	status,2,c
 10611  015898  D005               	goto	l8253
 10612                           
 10613                           ; BSR set to: 0
 10614  01589A  0100               	movlb	0	; () banked
 10615  01589C  6D7D               	negf	___awdiv@quotient& (0+255),b
 10616  01589E  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10617  0158A0  B0D8               	btfsc	status,0,c
 10618  0158A2  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10619  0158A4                     l8253:
 10620                           
 10621                           ; BSR set to: 0
 10622  0158A4  C07D  F077         	movff	___awdiv@quotient,?___awdiv
 10623  0158A8  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
 10624  0158AC  0012               	return	
 10625  0158AE                     __end_of___awdiv:
 10626                           	opt stack 0
 10627                           tblptru	equ	0xFF8
 10628                           tblptrh	equ	0xFF7
 10629                           tblptrl	equ	0xFF6
 10630                           tablat	equ	0xFF5
 10631                           prodh	equ	0xFF4
 10632                           prodl	equ	0xFF3
 10633                           intcon	equ	0xFF2
 10634                           postinc0	equ	0xFEE
 10635                           wreg	equ	0xFE8
 10636                           indf2	equ	0xFDF
 10637                           postinc2	equ	0xFDE
 10638                           fsr2h	equ	0xFDA
 10639                           fsr2l	equ	0xFD9
 10640                           status	equ	0xFD8
 10641                           
 10642 ;; *************** function __tdiv_to_l_ *****************
 10643 ;; Defined at:
 10644 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  f1              4   17[BANK0 ] float 
 10647 ;;  f2              4   21[BANK0 ] float 
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;  quot            4   28[BANK0 ] unsigned long 
 10650 ;;  exp1            1   33[BANK0 ] unsigned char 
 10651 ;;  cntr            1   32[BANK0 ] unsigned char 
 10652 ;; Return value:  Size  Location     Type
 10653 ;;                  4   17[BANK0 ] unsigned long 
 10654 ;; Registers used:
 10655 ;;		wreg, status,2, status,0
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/0
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10661 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;Total ram usage:       17 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; Hardware stack levels required when called:    3
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_sprintf
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text17
 10676  014FD4                     __ptext17:
 10677                           	opt stack 0
 10678  014FD4                     __tdiv_to_l_:
 10679                           	opt stack 25
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;incstack = 0
 10683  014FD4  C073  F079         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10684  014FD8  0100               	movlb	0	; () banked
 10685  014FDA  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10686  014FDC  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10687  014FDE  0100               	movlb	0	; () banked
 10688  014FE0  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10689  014FE2  0100               	movlb	0	; () banked
 10690  014FE4  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10691  014FE6  E301               	bnc	u11161
 10692  014FE8  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10693  014FEA                     u11161:
 10694  014FEA  0100               	movlb	0	; () banked
 10695  014FEC  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 10696  014FEE  0100               	movlb	0	; () banked
 10697  014FF0  6F81               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10698  014FF2  0100               	movlb	0	; () banked
 10699  014FF4  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10700  014FF6  A4D8               	btfss	status,2,c
 10701  014FF8  D00A               	goto	l8403
 10702                           
 10703                           ; BSR set to: 0
 10704  014FFA  0E00               	movlw	0
 10705  014FFC  0100               	movlb	0	; () banked
 10706  014FFE  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10707  015000  0E00               	movlw	0
 10708  015002  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10709  015004  0E00               	movlw	0
 10710  015006  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10711  015008  0E00               	movlw	0
 10712  01500A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10713                           
 10714                           ; BSR set to: 0
 10715  01500C  0012               	return	
 10716  01500E                     l8403:
 10717                           
 10718                           ; BSR set to: 0
 10719  01500E  C077  F079         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10720  015012  0100               	movlb	0	; () banked
 10721  015014  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10722  015016  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10723  015018  0100               	movlb	0	; () banked
 10724  01501A  3576               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10725  01501C  0100               	movlb	0	; () banked
 10726  01501E  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10727  015020  E301               	bnc	u11181
 10728  015022  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10729  015024                     u11181:
 10730  015024  0100               	movlb	0	; () banked
 10731  015026  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 10732  015028  0100               	movlb	0	; () banked
 10733  01502A  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10734  01502C  0100               	movlb	0	; () banked
 10735  01502E  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10736  015030  A4D8               	btfss	status,2,c
 10737  015032  D00A               	goto	l8409
 10738                           
 10739                           ; BSR set to: 0
 10740  015034  0E00               	movlw	0
 10741  015036  0100               	movlb	0	; () banked
 10742  015038  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10743  01503A  0E00               	movlw	0
 10744  01503C  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10745  01503E  0E00               	movlw	0
 10746  015040  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10747  015042  0E00               	movlw	0
 10748  015044  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10749                           
 10750                           ; BSR set to: 0
 10751  015046  0012               	return	
 10752  015048                     l8409:
 10753                           
 10754                           ; BSR set to: 0
 10755  015048  0100               	movlb	0	; () banked
 10756  01504A  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10757                           
 10758                           ; BSR set to: 0
 10759  01504C  0EFF               	movlw	255
 10760  01504E  0100               	movlb	0	; () banked
 10761  015050  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10762  015052  0EFF               	movlw	255
 10763  015054  0100               	movlb	0	; () banked
 10764  015056  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10765  015058  0E00               	movlw	0
 10766  01505A  0100               	movlb	0	; () banked
 10767  01505C  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10768  01505E  0100               	movlb	0	; () banked
 10769  015060  8F76               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10770                           
 10771                           ; BSR set to: 0
 10772  015062  0EFF               	movlw	255
 10773  015064  0100               	movlb	0	; () banked
 10774  015066  1775               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10775  015068  0EFF               	movlw	255
 10776  01506A  0100               	movlb	0	; () banked
 10777  01506C  1776               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10778  01506E  0E00               	movlw	0
 10779  015070  0100               	movlb	0	; () banked
 10780  015072  1777               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10781                           
 10782                           ; BSR set to: 0
 10783  015074  0E00               	movlw	0
 10784  015076  0100               	movlb	0	; () banked
 10785  015078  6F7C               	movwf	__tdiv_to_l_@quot& (0+255),b
 10786  01507A  0E00               	movlw	0
 10787  01507C  6F7D               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10788  01507E  0E00               	movlw	0
 10789  015080  6F7E               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10790  015082  0E00               	movlw	0
 10791  015084  6F7F               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10792                           
 10793                           ; BSR set to: 0
 10794  015086  0E7F               	movlw	127
 10795  015088  0100               	movlb	0	; () banked
 10796  01508A  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10797                           
 10798                           ; BSR set to: 0
 10799  01508C  0100               	movlb	0	; () banked
 10800  01508E  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10801  015090  0F98               	addlw	152
 10802  015092  0100               	movlb	0	; () banked
 10803  015094  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10804                           
 10805                           ; BSR set to: 0
 10806  015096  0E18               	movlw	24
 10807  015098  0100               	movlb	0	; () banked
 10808  01509A  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10809  01509C                     l1351:
 10810                           
 10811                           ; BSR set to: 0
 10812  01509C  0100               	movlb	0	; () banked
 10813  01509E  90D8               	bcf	status,0,c
 10814  0150A0  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10815  0150A2  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10816  0150A4  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10817  0150A6  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10818                           
 10819                           ; BSR set to: 0
 10820  0150A8  0100               	movlb	0	; () banked
 10821  0150AA  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10822  0150AC  0100               	movlb	0	; () banked
 10823  0150AE  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10824  0150B0  0100               	movlb	0	; () banked
 10825  0150B2  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10826  0150B4  0100               	movlb	0	; () banked
 10827  0150B6  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10828  0150B8  0100               	movlb	0	; () banked
 10829  0150BA  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10830  0150BC  0100               	movlb	0	; () banked
 10831  0150BE  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10832  0150C0  A0D8               	btfss	status,0,c
 10833  0150C2  D00E               	goto	l1352
 10834                           
 10835                           ; BSR set to: 0
 10836  0150C4  0100               	movlb	0	; () banked
 10837  0150C6  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10838  0150C8  0100               	movlb	0	; () banked
 10839  0150CA  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10840  0150CC  0100               	movlb	0	; () banked
 10841  0150CE  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10842  0150D0  0100               	movlb	0	; () banked
 10843  0150D2  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10844  0150D4  0100               	movlb	0	; () banked
 10845  0150D6  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10846  0150D8  0100               	movlb	0	; () banked
 10847  0150DA  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10848                           
 10849                           ; BSR set to: 0
 10850  0150DC  0100               	movlb	0	; () banked
 10851  0150DE  817C               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10852  0150E0                     l1352:
 10853                           
 10854                           ; BSR set to: 0
 10855  0150E0  0100               	movlb	0	; () banked
 10856  0150E2  90D8               	bcf	status,0,c
 10857  0150E4  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10858  0150E6  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10859  0150E8  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10860                           
 10861                           ; BSR set to: 0
 10862  0150EA  0100               	movlb	0	; () banked
 10863  0150EC  2F80               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10864  0150EE  D7D6               	goto	l1351
 10865                           
 10866                           ; BSR set to: 0
 10867                           
 10868                           ; BSR set to: 0
 10869  0150F0  0100               	movlb	0	; () banked
 10870  0150F2  AF81               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10871  0150F4  D01A               	goto	l8443
 10872                           
 10873                           ; BSR set to: 0
 10874  0150F6  0100               	movlb	0	; () banked
 10875  0150F8  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10876  0150FA  0A80               	xorlw	128
 10877  0150FC  0F97               	addlw	151
 10878  0150FE  B0D8               	btfsc	status,0,c
 10879  015100  D00A               	goto	l8439
 10880                           
 10881                           ; BSR set to: 0
 10882  015102  0E00               	movlw	0
 10883  015104  0100               	movlb	0	; () banked
 10884  015106  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10885  015108  0E00               	movlw	0
 10886  01510A  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10887  01510C  0E00               	movlw	0
 10888  01510E  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10889  015110  0E00               	movlw	0
 10890  015112  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10891                           
 10892                           ; BSR set to: 0
 10893  015114  0012               	return	
 10894  015116                     l8439:
 10895                           
 10896                           ; BSR set to: 0
 10897  015116  0100               	movlb	0	; () banked
 10898  015118  90D8               	bcf	status,0,c
 10899  01511A  337F               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10900  01511C  337E               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10901  01511E  337D               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10902  015120  337C               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10903                           
 10904                           ; BSR set to: 0
 10905  015122  0100               	movlb	0	; () banked
 10906  015124  3F81               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10907  015126  D7F7               	goto	l8439
 10908                           
 10909                           ; BSR set to: 0
 10910  015128  D01B               	goto	l1358
 10911  01512A                     l8443:
 10912                           
 10913                           ; BSR set to: 0
 10914  01512A  0E17               	movlw	23
 10915  01512C  0100               	movlb	0	; () banked
 10916  01512E  6581               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10917  015130  D012               	goto	l8451
 10918                           
 10919                           ; BSR set to: 0
 10920  015132  0E00               	movlw	0
 10921  015134  0100               	movlb	0	; () banked
 10922  015136  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10923  015138  0E00               	movlw	0
 10924  01513A  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10925  01513C  0E00               	movlw	0
 10926  01513E  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10927  015140  0E00               	movlw	0
 10928  015142  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10929                           
 10930                           ; BSR set to: 0
 10931  015144  0012               	return	
 10932  015146                     l8449:
 10933                           
 10934                           ; BSR set to: 0
 10935  015146  0100               	movlb	0	; () banked
 10936  015148  90D8               	bcf	status,0,c
 10937  01514A  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10938  01514C  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10939  01514E  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10940  015150  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10941  015152  0100               	movlb	0	; () banked
 10942  015154  0781               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10943  015156                     l8451:
 10944                           
 10945                           ; BSR set to: 0
 10946  015156  0100               	movlb	0	; () banked
 10947  015158  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10948  01515A  0100               	movlb	0	; () banked
 10949  01515C  A4D8               	btfss	status,2,c
 10950  01515E  D7F3               	goto	l8449
 10951  015160                     l1358:
 10952                           
 10953                           ; BSR set to: 0
 10954  015160  C07C  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10955  015164  C07D  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10956  015168  C07E  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10957  01516C  C07F  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10958                           
 10959                           ; BSR set to: 0
 10960  015170  0012               	return		;funcret
 10961  015172                     __end_of__tdiv_to_l_:
 10962                           	opt stack 0
 10963                           tblptru	equ	0xFF8
 10964                           tblptrh	equ	0xFF7
 10965                           tblptrl	equ	0xFF6
 10966                           tablat	equ	0xFF5
 10967                           prodh	equ	0xFF4
 10968                           prodl	equ	0xFF3
 10969                           intcon	equ	0xFF2
 10970                           postinc0	equ	0xFEE
 10971                           wreg	equ	0xFE8
 10972                           indf2	equ	0xFDF
 10973                           postinc2	equ	0xFDE
 10974                           fsr2h	equ	0xFDA
 10975                           fsr2l	equ	0xFD9
 10976                           status	equ	0xFD8
 10977                           
 10978 ;; *************** function __div_to_l_ *****************
 10979 ;; Defined at:
 10980 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;  f1              4   17[BANK0 ] unsigned long 
 10983 ;;  f2              4   21[BANK0 ] unsigned long 
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;  quot            4   25[BANK0 ] unsigned long 
 10986 ;;  exp1            1   30[BANK0 ] unsigned char 
 10987 ;;  cntr            1   29[BANK0 ] unsigned char 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  4   17[BANK0 ] unsigned long 
 10990 ;; Registers used:
 10991 ;;		wreg, status,2, status,0
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10997 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;Total ram usage:       14 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    3
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_sprintf
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text18
 11012  015302                     __ptext18:
 11013                           	opt stack 0
 11014  015302                     __div_to_l_:
 11015                           	opt stack 25
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;incstack = 0
 11019  015302  0100               	movlb	0	; () banked
 11020  015304  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11021  015306  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11022  015308  0100               	movlb	0	; () banked
 11023  01530A  6F7E               	movwf	__div_to_l_@exp1& (0+255),b
 11024  01530C  0100               	movlb	0	; () banked
 11025  01530E  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11026  015310  A4D8               	btfss	status,2,c
 11027  015312  D00A               	goto	l8459
 11028                           
 11029                           ; BSR set to: 0
 11030  015314  0E00               	movlw	0
 11031  015316  0100               	movlb	0	; () banked
 11032  015318  6F71               	movwf	?__div_to_l_& (0+255),b
 11033  01531A  0E00               	movlw	0
 11034  01531C  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11035  01531E  0E00               	movlw	0
 11036  015320  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11037  015322  0E00               	movlw	0
 11038  015324  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11039                           
 11040                           ; BSR set to: 0
 11041  015326  0012               	return	
 11042  015328                     l8459:
 11043                           
 11044                           ; BSR set to: 0
 11045  015328  0100               	movlb	0	; () banked
 11046  01532A  3577               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11047  01532C  3578               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11048  01532E  0100               	movlb	0	; () banked
 11049  015330  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11050  015332  0100               	movlb	0	; () banked
 11051  015334  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11052  015336  A4D8               	btfss	status,2,c
 11053  015338  D00A               	goto	l8465
 11054                           
 11055                           ; BSR set to: 0
 11056  01533A  0E00               	movlw	0
 11057  01533C  0100               	movlb	0	; () banked
 11058  01533E  6F71               	movwf	?__div_to_l_& (0+255),b
 11059  015340  0E00               	movlw	0
 11060  015342  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11061  015344  0E00               	movlw	0
 11062  015346  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11063  015348  0E00               	movlw	0
 11064  01534A  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11065                           
 11066                           ; BSR set to: 0
 11067  01534C  0012               	return	
 11068  01534E                     l8465:
 11069                           
 11070                           ; BSR set to: 0
 11071  01534E  0100               	movlb	0	; () banked
 11072  015350  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11073                           
 11074                           ; BSR set to: 0
 11075  015352  0EFF               	movlw	255
 11076  015354  0100               	movlb	0	; () banked
 11077  015356  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 11078  015358  0EFF               	movlw	255
 11079  01535A  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11080  01535C  0EFF               	movlw	255
 11081  01535E  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11082  015360  0E00               	movlw	0
 11083  015362  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11084                           
 11085                           ; BSR set to: 0
 11086  015364  0100               	movlb	0	; () banked
 11087  015366  8F77               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11088  015368  0EFF               	movlw	255
 11089  01536A  0100               	movlb	0	; () banked
 11090  01536C  1775               	andwf	__div_to_l_@f2& (0+255),f,b
 11091  01536E  0EFF               	movlw	255
 11092  015370  1776               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11093  015372  0EFF               	movlw	255
 11094  015374  1777               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11095  015376  0E00               	movlw	0
 11096  015378  1778               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11097                           
 11098                           ; BSR set to: 0
 11099  01537A  0E00               	movlw	0
 11100  01537C  0100               	movlb	0	; () banked
 11101  01537E  6F79               	movwf	__div_to_l_@quot& (0+255),b
 11102  015380  0E00               	movlw	0
 11103  015382  6F7A               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11104  015384  0E00               	movlw	0
 11105  015386  6F7B               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11106  015388  0E00               	movlw	0
 11107  01538A  6F7C               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11108                           
 11109                           ; BSR set to: 0
 11110  01538C  0E7F               	movlw	127
 11111  01538E  0100               	movlb	0	; () banked
 11112  015390  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11113                           
 11114                           ; BSR set to: 0
 11115  015392  0100               	movlb	0	; () banked
 11116  015394  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11117  015396  0FA0               	addlw	160
 11118  015398  0100               	movlb	0	; () banked
 11119  01539A  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11120                           
 11121                           ; BSR set to: 0
 11122  01539C  0E20               	movlw	32
 11123  01539E  0100               	movlb	0	; () banked
 11124  0153A0  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11125  0153A2                     l8479:
 11126                           
 11127                           ; BSR set to: 0
 11128  0153A2  0100               	movlb	0	; () banked
 11129  0153A4  90D8               	bcf	status,0,c
 11130  0153A6  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 11131  0153A8  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11132  0153AA  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11133  0153AC  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11134                           
 11135                           ; BSR set to: 0
 11136  0153AE  0100               	movlb	0	; () banked
 11137  0153B0  5175               	movf	__div_to_l_@f2& (0+255),w,b
 11138  0153B2  0100               	movlb	0	; () banked
 11139  0153B4  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 11140  0153B6  0100               	movlb	0	; () banked
 11141  0153B8  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11142  0153BA  0100               	movlb	0	; () banked
 11143  0153BC  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11144  0153BE  0100               	movlb	0	; () banked
 11145  0153C0  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11146  0153C2  0100               	movlb	0	; () banked
 11147  0153C4  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11148  0153C6  0100               	movlb	0	; () banked
 11149  0153C8  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11150  0153CA  0100               	movlb	0	; () banked
 11151  0153CC  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11152  0153CE  A0D8               	btfss	status,0,c
 11153  0153D0  D012               	goto	l8487
 11154                           
 11155                           ; BSR set to: 0
 11156  0153D2  0100               	movlb	0	; () banked
 11157  0153D4  5175               	movf	__div_to_l_@f2& (0+255),w,b
 11158  0153D6  0100               	movlb	0	; () banked
 11159  0153D8  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 11160  0153DA  0100               	movlb	0	; () banked
 11161  0153DC  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11162  0153DE  0100               	movlb	0	; () banked
 11163  0153E0  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11164  0153E2  0100               	movlb	0	; () banked
 11165  0153E4  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11166  0153E6  0100               	movlb	0	; () banked
 11167  0153E8  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11168  0153EA  0100               	movlb	0	; () banked
 11169  0153EC  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11170  0153EE  0100               	movlb	0	; () banked
 11171  0153F0  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11172                           
 11173                           ; BSR set to: 0
 11174  0153F2  0100               	movlb	0	; () banked
 11175  0153F4  8179               	bsf	__div_to_l_@quot& (0+255),0,b
 11176  0153F6                     l8487:
 11177                           
 11178                           ; BSR set to: 0
 11179  0153F6  0100               	movlb	0	; () banked
 11180  0153F8  90D8               	bcf	status,0,c
 11181  0153FA  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 11182  0153FC  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11183  0153FE  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11184  015400  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11185                           
 11186                           ; BSR set to: 0
 11187  015402  0100               	movlb	0	; () banked
 11188  015404  2F7D               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11189  015406  D7CD               	goto	l8479
 11190                           
 11191                           ; BSR set to: 0
 11192                           
 11193                           ; BSR set to: 0
 11194  015408  0100               	movlb	0	; () banked
 11195  01540A  AF7E               	btfss	__div_to_l_@exp1& (0+255),7,b
 11196  01540C  D01A               	goto	l8503
 11197                           
 11198                           ; BSR set to: 0
 11199  01540E  0100               	movlb	0	; () banked
 11200  015410  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11201  015412  0A80               	xorlw	128
 11202  015414  0F9F               	addlw	159
 11203  015416  B0D8               	btfsc	status,0,c
 11204  015418  D00A               	goto	l8499
 11205                           
 11206                           ; BSR set to: 0
 11207  01541A  0E00               	movlw	0
 11208  01541C  0100               	movlb	0	; () banked
 11209  01541E  6F71               	movwf	?__div_to_l_& (0+255),b
 11210  015420  0E00               	movlw	0
 11211  015422  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11212  015424  0E00               	movlw	0
 11213  015426  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11214  015428  0E00               	movlw	0
 11215  01542A  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11216                           
 11217                           ; BSR set to: 0
 11218  01542C  0012               	return	
 11219  01542E                     l8499:
 11220                           
 11221                           ; BSR set to: 0
 11222  01542E  0100               	movlb	0	; () banked
 11223  015430  90D8               	bcf	status,0,c
 11224  015432  337C               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11225  015434  337B               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11226  015436  337A               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11227  015438  3379               	rrcf	__div_to_l_@quot& (0+255),f,b
 11228                           
 11229                           ; BSR set to: 0
 11230  01543A  0100               	movlb	0	; () banked
 11231  01543C  3F7E               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11232  01543E  D7F7               	goto	l8499
 11233                           
 11234                           ; BSR set to: 0
 11235  015440  D01B               	goto	l1254
 11236  015442                     l8503:
 11237                           
 11238                           ; BSR set to: 0
 11239  015442  0E1F               	movlw	31
 11240  015444  0100               	movlb	0	; () banked
 11241  015446  657E               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11242  015448  D012               	goto	l8511
 11243                           
 11244                           ; BSR set to: 0
 11245  01544A  0E00               	movlw	0
 11246  01544C  0100               	movlb	0	; () banked
 11247  01544E  6F71               	movwf	?__div_to_l_& (0+255),b
 11248  015450  0E00               	movlw	0
 11249  015452  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11250  015454  0E00               	movlw	0
 11251  015456  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11252  015458  0E00               	movlw	0
 11253  01545A  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11254                           
 11255                           ; BSR set to: 0
 11256  01545C  0012               	return	
 11257  01545E                     l8509:
 11258                           
 11259                           ; BSR set to: 0
 11260  01545E  0100               	movlb	0	; () banked
 11261  015460  90D8               	bcf	status,0,c
 11262  015462  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 11263  015464  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11264  015466  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11265  015468  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11266  01546A  0100               	movlb	0	; () banked
 11267  01546C  077E               	decf	__div_to_l_@exp1& (0+255),f,b
 11268  01546E                     l8511:
 11269                           
 11270                           ; BSR set to: 0
 11271  01546E  0100               	movlb	0	; () banked
 11272  015470  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11273  015472  0100               	movlb	0	; () banked
 11274  015474  A4D8               	btfss	status,2,c
 11275  015476  D7F3               	goto	l8509
 11276  015478                     l1254:
 11277                           
 11278                           ; BSR set to: 0
 11279  015478  C079  F071         	movff	__div_to_l_@quot,?__div_to_l_
 11280  01547C  C07A  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11281  015480  C07B  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11282  015484  C07C  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11283                           
 11284                           ; BSR set to: 0
 11285  015488  0012               	return		;funcret
 11286  01548A                     __end_of__div_to_l_:
 11287                           	opt stack 0
 11288                           tblptru	equ	0xFF8
 11289                           tblptrh	equ	0xFF7
 11290                           tblptrl	equ	0xFF6
 11291                           tablat	equ	0xFF5
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           postinc0	equ	0xFEE
 11296                           wreg	equ	0xFE8
 11297                           indf2	equ	0xFDF
 11298                           postinc2	equ	0xFDE
 11299                           fsr2h	equ	0xFDA
 11300                           fsr2l	equ	0xFD9
 11301                           status	equ	0xFD8
 11302                           
 11303 ;; *************** function ___xxtofl *****************
 11304 ;; Defined at:
 11305 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  sign            1    wreg     unsigned char 
 11308 ;;  val             4   17[BANK0 ] long 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  sign            1   25[BANK0 ] unsigned char 
 11311 ;;  arg             4   27[BANK0 ] unsigned long 
 11312 ;;  exp             1   26[BANK0 ] unsigned char 
 11313 ;; Return value:  Size  Location     Type
 11314 ;;                  4   17[BANK0 ] unsigned char 
 11315 ;; Registers used:
 11316 ;;		wreg, status,2, status,0
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11323 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11324 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;Total ram usage:       14 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:    3
 11329 ;; This function calls:
 11330 ;;		Nothing
 11331 ;; This function is called by:
 11332 ;;		_main
 11333 ;;		_LCD_Handler
 11334 ;;		_sprintf
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           	psect	text19
 11339  0148D2                     __ptext19:
 11340                           	opt stack 0
 11341  0148D2                     ___xxtofl:
 11342                           	opt stack 27
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;incstack = 0
 11346                           ;___xxtofl@sign stored from wreg
 11347  0148D2  0100               	movlb	0	; () banked
 11348  0148D4  6F79               	movwf	___xxtofl@sign& (0+255),b
 11349  0148D6  0100               	movlb	0	; () banked
 11350  0148D8  5179               	movf	___xxtofl@sign& (0+255),w,b
 11351  0148DA  0100               	movlb	0	; () banked
 11352  0148DC  B4D8               	btfsc	status,2,c
 11353  0148DE  D01E               	goto	l1649
 11354                           
 11355                           ; BSR set to: 0
 11356  0148E0  0100               	movlb	0	; () banked
 11357  0148E2  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11358  0148E4  D01B               	goto	l1649
 11359                           
 11360                           ; BSR set to: 0
 11361  0148E6  C071  F075         	movff	___xxtofl@val,??___xxtofl
 11362  0148EA  C072  F076         	movff	___xxtofl@val+1,??___xxtofl+1
 11363  0148EE  C073  F077         	movff	___xxtofl@val+2,??___xxtofl+2
 11364  0148F2  C074  F078         	movff	___xxtofl@val+3,??___xxtofl+3
 11365  0148F6  0100               	movlb	0	; () banked
 11366  0148F8  1F75               	comf	??___xxtofl& (0+255),f,b
 11367  0148FA  1F76               	comf	(??___xxtofl+1)& (0+255),f,b
 11368  0148FC  1F77               	comf	(??___xxtofl+2)& (0+255),f,b
 11369  0148FE  1F78               	comf	(??___xxtofl+3)& (0+255),f,b
 11370  014900  2B75               	incf	??___xxtofl& (0+255),f,b
 11371  014902  0E00               	movlw	0
 11372  014904  2376               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11373  014906  2377               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11374  014908  2378               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11375  01490A  C075  F07B         	movff	??___xxtofl,___xxtofl@arg
 11376  01490E  C076  F07C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11377  014912  C077  F07D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11378  014916  C078  F07E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11379  01491A  D008               	goto	l8637
 11380  01491C                     l1649:
 11381                           
 11382                           ; BSR set to: 0
 11383  01491C  C071  F07B         	movff	___xxtofl@val,___xxtofl@arg
 11384  014920  C072  F07C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11385  014924  C073  F07D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11386  014928  C074  F07E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11387  01492C                     l8637:
 11388                           
 11389                           ; BSR set to: 0
 11390  01492C  0100               	movlb	0	; () banked
 11391  01492E  5171               	movf	___xxtofl@val& (0+255),w,b
 11392  014930  0100               	movlb	0	; () banked
 11393  014932  1172               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11394  014934  0100               	movlb	0	; () banked
 11395  014936  1173               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11396  014938  0100               	movlb	0	; () banked
 11397  01493A  1174               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11398  01493C  A4D8               	btfss	status,2,c
 11399  01493E  D00A               	goto	l8643
 11400                           
 11401                           ; BSR set to: 0
 11402  014940  0E00               	movlw	0
 11403  014942  0100               	movlb	0	; () banked
 11404  014944  6F71               	movwf	?___xxtofl& (0+255),b
 11405  014946  0E00               	movlw	0
 11406  014948  6F72               	movwf	(?___xxtofl+1)& (0+255),b
 11407  01494A  0E00               	movlw	0
 11408  01494C  6F73               	movwf	(?___xxtofl+2)& (0+255),b
 11409  01494E  0E00               	movlw	0
 11410  014950  6F74               	movwf	(?___xxtofl+3)& (0+255),b
 11411                           
 11412                           ; BSR set to: 0
 11413  014952  0012               	return	
 11414  014954                     l8643:
 11415                           
 11416                           ; BSR set to: 0
 11417  014954  0E96               	movlw	150
 11418  014956  0100               	movlb	0	; () banked
 11419  014958  6F7A               	movwf	___xxtofl@exp& (0+255),b
 11420  01495A  D008               	goto	l8647
 11421  01495C                     l8645:
 11422                           
 11423                           ; BSR set to: 0
 11424  01495C  0100               	movlb	0	; () banked
 11425  01495E  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11426  014960  0100               	movlb	0	; () banked
 11427  014962  90D8               	bcf	status,0,c
 11428  014964  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11429  014966  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11430  014968  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11431  01496A  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11432  01496C                     l8647:
 11433                           
 11434                           ; BSR set to: 0
 11435  01496C  0E00               	movlw	0
 11436  01496E  0100               	movlb	0	; () banked
 11437  014970  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11438  014972  0100               	movlb	0	; () banked
 11439  014974  6F75               	movwf	??___xxtofl& (0+255),b
 11440  014976  0E00               	movlw	0
 11441  014978  0100               	movlb	0	; () banked
 11442  01497A  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11443  01497C  0100               	movlb	0	; () banked
 11444  01497E  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11445  014980  0E00               	movlw	0
 11446  014982  0100               	movlb	0	; () banked
 11447  014984  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11448  014986  0100               	movlb	0	; () banked
 11449  014988  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11450  01498A  0EFE               	movlw	254
 11451  01498C  0100               	movlb	0	; () banked
 11452  01498E  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11453  014990  0100               	movlb	0	; () banked
 11454  014992  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11455  014994  0100               	movlb	0	; () banked
 11456  014996  5175               	movf	??___xxtofl& (0+255),w,b
 11457  014998  0100               	movlb	0	; () banked
 11458  01499A  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11459  01499C  0100               	movlb	0	; () banked
 11460  01499E  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11461  0149A0  0100               	movlb	0	; () banked
 11462  0149A2  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11463  0149A4  B4D8               	btfsc	status,2,c
 11464  0149A6  D010               	goto	l1656
 11465  0149A8  D7D9               	goto	l8645
 11466  0149AA                     l8649:
 11467                           
 11468                           ; BSR set to: 0
 11469  0149AA  0100               	movlb	0	; () banked
 11470  0149AC  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11471                           
 11472                           ; BSR set to: 0
 11473  0149AE  0E01               	movlw	1
 11474  0149B0  0100               	movlb	0	; () banked
 11475  0149B2  277B               	addwf	___xxtofl@arg& (0+255),f,b
 11476  0149B4  0E00               	movlw	0
 11477  0149B6  237C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11478  0149B8  237D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11479  0149BA  237E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11480                           
 11481                           ; BSR set to: 0
 11482  0149BC  0100               	movlb	0	; () banked
 11483  0149BE  90D8               	bcf	status,0,c
 11484  0149C0  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11485  0149C2  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11486  0149C4  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11487  0149C6  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11488  0149C8                     l1656:
 11489                           
 11490                           ; BSR set to: 0
 11491  0149C8  0E00               	movlw	0
 11492  0149CA  0100               	movlb	0	; () banked
 11493  0149CC  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11494  0149CE  0100               	movlb	0	; () banked
 11495  0149D0  6F75               	movwf	??___xxtofl& (0+255),b
 11496  0149D2  0E00               	movlw	0
 11497  0149D4  0100               	movlb	0	; () banked
 11498  0149D6  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11499  0149D8  0100               	movlb	0	; () banked
 11500  0149DA  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11501  0149DC  0E00               	movlw	0
 11502  0149DE  0100               	movlb	0	; () banked
 11503  0149E0  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11504  0149E2  0100               	movlb	0	; () banked
 11505  0149E4  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11506  0149E6  0EFF               	movlw	255
 11507  0149E8  0100               	movlb	0	; () banked
 11508  0149EA  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11509  0149EC  0100               	movlb	0	; () banked
 11510  0149EE  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11511  0149F0  0100               	movlb	0	; () banked
 11512  0149F2  5175               	movf	??___xxtofl& (0+255),w,b
 11513  0149F4  0100               	movlb	0	; () banked
 11514  0149F6  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11515  0149F8  0100               	movlb	0	; () banked
 11516  0149FA  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11517  0149FC  0100               	movlb	0	; () banked
 11518  0149FE  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11519  014A00  B4D8               	btfsc	status,2,c
 11520  014A02  D009               	goto	l8657
 11521  014A04  D7D2               	goto	l8649
 11522  014A06                     l8655:
 11523                           
 11524                           ; BSR set to: 0
 11525  014A06  0100               	movlb	0	; () banked
 11526  014A08  077A               	decf	___xxtofl@exp& (0+255),f,b
 11527  014A0A  0100               	movlb	0	; () banked
 11528  014A0C  90D8               	bcf	status,0,c
 11529  014A0E  377B               	rlcf	___xxtofl@arg& (0+255),f,b
 11530  014A10  377C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11531  014A12  377D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11532  014A14  377E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11533  014A16                     l8657:
 11534                           
 11535                           ; BSR set to: 0
 11536  014A16  0100               	movlb	0	; () banked
 11537  014A18  BF7D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11538  014A1A  D004               	goto	l1663
 11539                           
 11540                           ; BSR set to: 0
 11541  014A1C  0E02               	movlw	2
 11542  014A1E  0100               	movlb	0	; () banked
 11543  014A20  617A               	cpfslt	___xxtofl@exp& (0+255),b
 11544  014A22  D7F1               	goto	l8655
 11545  014A24                     l1663:
 11546                           
 11547                           ; BSR set to: 0
 11548  014A24  0100               	movlb	0	; () banked
 11549  014A26  B17A               	btfsc	___xxtofl@exp& (0+255),0,b
 11550  014A28  D009               	goto	l1664
 11551                           
 11552                           ; BSR set to: 0
 11553  014A2A  0EFF               	movlw	255
 11554  014A2C  0100               	movlb	0	; () banked
 11555  014A2E  177B               	andwf	___xxtofl@arg& (0+255),f,b
 11556  014A30  0EFF               	movlw	255
 11557  014A32  177C               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 11558  014A34  0E7F               	movlw	127
 11559  014A36  177D               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 11560  014A38  0EFF               	movlw	255
 11561  014A3A  177E               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 11562  014A3C                     l1664:
 11563                           
 11564                           ; BSR set to: 0
 11565  014A3C  0100               	movlb	0	; () banked
 11566  014A3E  90D8               	bcf	status,0,c
 11567  014A40  337A               	rrcf	___xxtofl@exp& (0+255),f,b
 11568  014A42  C07A  F075         	movff	___xxtofl@exp,??___xxtofl
 11569  014A46  0100               	movlb	0	; () banked
 11570  014A48  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11571  014A4A  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11572  014A4C  6B78               	clrf	(??___xxtofl+3)& (0+255),b
 11573  014A4E  C075  F078         	movff	??___xxtofl,??___xxtofl+3
 11574  014A52  0100               	movlb	0	; () banked
 11575  014A54  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11576  014A56  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11577  014A58  6B75               	clrf	??___xxtofl& (0+255),b
 11578  014A5A  0100               	movlb	0	; () banked
 11579  014A5C  5175               	movf	??___xxtofl& (0+255),w,b
 11580  014A5E  0100               	movlb	0	; () banked
 11581  014A60  137B               	iorwf	___xxtofl@arg& (0+255),f,b
 11582  014A62  0100               	movlb	0	; () banked
 11583  014A64  5176               	movf	(??___xxtofl+1)& (0+255),w,b
 11584  014A66  0100               	movlb	0	; () banked
 11585  014A68  137C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11586  014A6A  0100               	movlb	0	; () banked
 11587  014A6C  5177               	movf	(??___xxtofl+2)& (0+255),w,b
 11588  014A6E  0100               	movlb	0	; () banked
 11589  014A70  137D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11590  014A72  0100               	movlb	0	; () banked
 11591  014A74  5178               	movf	(??___xxtofl+3)& (0+255),w,b
 11592  014A76  0100               	movlb	0	; () banked
 11593  014A78  137E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11594                           
 11595                           ; BSR set to: 0
 11596  014A7A  0100               	movlb	0	; () banked
 11597  014A7C  5179               	movf	___xxtofl@sign& (0+255),w,b
 11598  014A7E  0100               	movlb	0	; () banked
 11599  014A80  B4D8               	btfsc	status,2,c
 11600  014A82  D005               	goto	l8669
 11601                           
 11602                           ; BSR set to: 0
 11603  014A84  0100               	movlb	0	; () banked
 11604  014A86  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11605  014A88  D002               	goto	l8669
 11606                           
 11607                           ; BSR set to: 0
 11608  014A8A  0100               	movlb	0	; () banked
 11609  014A8C  8F7E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11610  014A8E                     l8669:
 11611                           
 11612                           ; BSR set to: 0
 11613  014A8E  C07B  F071         	movff	___xxtofl@arg,?___xxtofl
 11614  014A92  C07C  F072         	movff	___xxtofl@arg+1,?___xxtofl+1
 11615  014A96  C07D  F073         	movff	___xxtofl@arg+2,?___xxtofl+2
 11616  014A9A  C07E  F074         	movff	___xxtofl@arg+3,?___xxtofl+3
 11617  014A9E  0012               	return	
 11618  014AA0                     __end_of___xxtofl:
 11619                           	opt stack 0
 11620                           tblptru	equ	0xFF8
 11621                           tblptrh	equ	0xFF7
 11622                           tblptrl	equ	0xFF6
 11623                           tablat	equ	0xFF5
 11624                           prodh	equ	0xFF4
 11625                           prodl	equ	0xFF3
 11626                           intcon	equ	0xFF2
 11627                           postinc0	equ	0xFEE
 11628                           wreg	equ	0xFE8
 11629                           indf2	equ	0xFDF
 11630                           postinc2	equ	0xFDE
 11631                           fsr2h	equ	0xFDA
 11632                           fsr2l	equ	0xFD9
 11633                           status	equ	0xFD8
 11634                           
 11635 ;; *************** function ___llmod *****************
 11636 ;; Defined at:
 11637 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;  dividend        4   17[BANK0 ] unsigned long 
 11640 ;;  divisor         4   21[BANK0 ] unsigned long 
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;  counter         1   25[BANK0 ] unsigned char 
 11643 ;; Return value:  Size  Location     Type
 11644 ;;                  4   17[BANK0 ] unsigned long 
 11645 ;; Registers used:
 11646 ;;		wreg, status,2, status,0
 11647 ;; Tracked objects:
 11648 ;;		On entry : 0/0
 11649 ;;		On exit  : 0/0
 11650 ;;		Unchanged: 0/0
 11651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11652 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11655 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11656 ;;Total ram usage:        9 bytes
 11657 ;; Hardware stack levels used:    1
 11658 ;; Hardware stack levels required when called:    3
 11659 ;; This function calls:
 11660 ;;		Nothing
 11661 ;; This function is called by:
 11662 ;;		_sprintf
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           	psect	text20
 11667  015CD6                     __ptext20:
 11668                           	opt stack 0
 11669  015CD6                     ___llmod:
 11670                           	opt stack 25
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;incstack = 0
 11674  015CD6  0100               	movlb	0	; () banked
 11675  015CD8  5175               	movf	___llmod@divisor& (0+255),w,b
 11676  015CDA  0100               	movlb	0	; () banked
 11677  015CDC  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11678  015CDE  0100               	movlb	0	; () banked
 11679  015CE0  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11680  015CE2  0100               	movlb	0	; () banked
 11681  015CE4  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11682  015CE6  B4D8               	btfsc	status,2,c
 11683  015CE8  D03A               	goto	l1457
 11684                           
 11685                           ; BSR set to: 0
 11686  015CEA  0E01               	movlw	1
 11687  015CEC  0100               	movlb	0	; () banked
 11688  015CEE  6F79               	movwf	___llmod@counter& (0+255),b
 11689  015CF0  D008               	goto	l8621
 11690  015CF2                     l8619:
 11691                           
 11692                           ; BSR set to: 0
 11693  015CF2  0100               	movlb	0	; () banked
 11694  015CF4  90D8               	bcf	status,0,c
 11695  015CF6  3775               	rlcf	___llmod@divisor& (0+255),f,b
 11696  015CF8  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11697  015CFA  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11698  015CFC  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11699  015CFE  0100               	movlb	0	; () banked
 11700  015D00  2B79               	incf	___llmod@counter& (0+255),f,b
 11701  015D02                     l8621:
 11702                           
 11703                           ; BSR set to: 0
 11704  015D02  0100               	movlb	0	; () banked
 11705  015D04  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11706  015D06  D7F5               	goto	l8619
 11707  015D08                     l8623:
 11708                           
 11709                           ; BSR set to: 0
 11710  015D08  0100               	movlb	0	; () banked
 11711  015D0A  5175               	movf	___llmod@divisor& (0+255),w,b
 11712  015D0C  0100               	movlb	0	; () banked
 11713  015D0E  5D71               	subwf	___llmod@dividend& (0+255),w,b
 11714  015D10  0100               	movlb	0	; () banked
 11715  015D12  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 11716  015D14  0100               	movlb	0	; () banked
 11717  015D16  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11718  015D18  0100               	movlb	0	; () banked
 11719  015D1A  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 11720  015D1C  0100               	movlb	0	; () banked
 11721  015D1E  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11722  015D20  0100               	movlb	0	; () banked
 11723  015D22  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 11724  015D24  0100               	movlb	0	; () banked
 11725  015D26  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11726  015D28  A0D8               	btfss	status,0,c
 11727  015D2A  D010               	goto	l8627
 11728                           
 11729                           ; BSR set to: 0
 11730  015D2C  0100               	movlb	0	; () banked
 11731  015D2E  5175               	movf	___llmod@divisor& (0+255),w,b
 11732  015D30  0100               	movlb	0	; () banked
 11733  015D32  5F71               	subwf	___llmod@dividend& (0+255),f,b
 11734  015D34  0100               	movlb	0	; () banked
 11735  015D36  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 11736  015D38  0100               	movlb	0	; () banked
 11737  015D3A  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11738  015D3C  0100               	movlb	0	; () banked
 11739  015D3E  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 11740  015D40  0100               	movlb	0	; () banked
 11741  015D42  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11742  015D44  0100               	movlb	0	; () banked
 11743  015D46  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 11744  015D48  0100               	movlb	0	; () banked
 11745  015D4A  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11746  015D4C                     l8627:
 11747                           
 11748                           ; BSR set to: 0
 11749  015D4C  0100               	movlb	0	; () banked
 11750  015D4E  90D8               	bcf	status,0,c
 11751  015D50  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11752  015D52  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11753  015D54  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11754  015D56  3375               	rrcf	___llmod@divisor& (0+255),f,b
 11755                           
 11756                           ; BSR set to: 0
 11757  015D58  0100               	movlb	0	; () banked
 11758  015D5A  2F79               	decfsz	___llmod@counter& (0+255),f,b
 11759  015D5C  D7D5               	goto	l8623
 11760  015D5E                     l1457:
 11761                           
 11762                           ; BSR set to: 0
 11763  015D5E  C071  F071         	movff	___llmod@dividend,?___llmod
 11764  015D62  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 11765  015D66  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 11766  015D6A  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 11767                           
 11768                           ; BSR set to: 0
 11769  015D6E  0012               	return		;funcret
 11770  015D70                     __end_of___llmod:
 11771                           	opt stack 0
 11772                           tblptru	equ	0xFF8
 11773                           tblptrh	equ	0xFF7
 11774                           tblptrl	equ	0xFF6
 11775                           tablat	equ	0xFF5
 11776                           prodh	equ	0xFF4
 11777                           prodl	equ	0xFF3
 11778                           intcon	equ	0xFF2
 11779                           postinc0	equ	0xFEE
 11780                           wreg	equ	0xFE8
 11781                           indf2	equ	0xFDF
 11782                           postinc2	equ	0xFDE
 11783                           fsr2h	equ	0xFDA
 11784                           fsr2l	equ	0xFD9
 11785                           status	equ	0xFD8
 11786                           
 11787 ;; *************** function ___lldiv *****************
 11788 ;; Defined at:
 11789 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;  dividend        4   17[BANK0 ] unsigned long 
 11792 ;;  divisor         4   21[BANK0 ] unsigned long 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;  quotient        4   25[BANK0 ] unsigned long 
 11795 ;;  counter         1   29[BANK0 ] unsigned char 
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  4   17[BANK0 ] unsigned long 
 11798 ;; Registers used:
 11799 ;;		wreg, status,2, status,0
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11805 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11809 ;;Total ram usage:       13 bytes
 11810 ;; Hardware stack levels used:    1
 11811 ;; Hardware stack levels required when called:    3
 11812 ;; This function calls:
 11813 ;;		Nothing
 11814 ;; This function is called by:
 11815 ;;		_sprintf
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text21
 11820  01596C                     __ptext21:
 11821                           	opt stack 0
 11822  01596C                     ___lldiv:
 11823                           	opt stack 25
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;incstack = 0
 11827  01596C  0E00               	movlw	0
 11828  01596E  0100               	movlb	0	; () banked
 11829  015970  6F79               	movwf	___lldiv@quotient& (0+255),b
 11830  015972  0E00               	movlw	0
 11831  015974  6F7A               	movwf	(___lldiv@quotient+1)& (0+255),b
 11832  015976  0E00               	movlw	0
 11833  015978  6F7B               	movwf	(___lldiv@quotient+2)& (0+255),b
 11834  01597A  0E00               	movlw	0
 11835  01597C  6F7C               	movwf	(___lldiv@quotient+3)& (0+255),b
 11836                           
 11837                           ; BSR set to: 0
 11838  01597E  0100               	movlb	0	; () banked
 11839  015980  5175               	movf	___lldiv@divisor& (0+255),w,b
 11840  015982  0100               	movlb	0	; () banked
 11841  015984  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11842  015986  0100               	movlb	0	; () banked
 11843  015988  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11844  01598A  0100               	movlb	0	; () banked
 11845  01598C  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11846  01598E  B4D8               	btfsc	status,2,c
 11847  015990  D042               	goto	l1447
 11848                           
 11849                           ; BSR set to: 0
 11850  015992  0E01               	movlw	1
 11851  015994  0100               	movlb	0	; () banked
 11852  015996  6F7D               	movwf	___lldiv@counter& (0+255),b
 11853  015998  D008               	goto	l8601
 11854  01599A                     l8599:
 11855                           
 11856                           ; BSR set to: 0
 11857  01599A  0100               	movlb	0	; () banked
 11858  01599C  90D8               	bcf	status,0,c
 11859  01599E  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11860  0159A0  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11861  0159A2  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11862  0159A4  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11863  0159A6  0100               	movlb	0	; () banked
 11864  0159A8  2B7D               	incf	___lldiv@counter& (0+255),f,b
 11865  0159AA                     l8601:
 11866                           
 11867                           ; BSR set to: 0
 11868  0159AA  0100               	movlb	0	; () banked
 11869  0159AC  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11870  0159AE  D7F5               	goto	l8599
 11871  0159B0                     l8603:
 11872                           
 11873                           ; BSR set to: 0
 11874  0159B0  0100               	movlb	0	; () banked
 11875  0159B2  90D8               	bcf	status,0,c
 11876  0159B4  3779               	rlcf	___lldiv@quotient& (0+255),f,b
 11877  0159B6  377A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11878  0159B8  377B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11879  0159BA  377C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11880                           
 11881                           ; BSR set to: 0
 11882  0159BC  0100               	movlb	0	; () banked
 11883  0159BE  5175               	movf	___lldiv@divisor& (0+255),w,b
 11884  0159C0  0100               	movlb	0	; () banked
 11885  0159C2  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11886  0159C4  0100               	movlb	0	; () banked
 11887  0159C6  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11888  0159C8  0100               	movlb	0	; () banked
 11889  0159CA  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11890  0159CC  0100               	movlb	0	; () banked
 11891  0159CE  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11892  0159D0  0100               	movlb	0	; () banked
 11893  0159D2  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11894  0159D4  0100               	movlb	0	; () banked
 11895  0159D6  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11896  0159D8  0100               	movlb	0	; () banked
 11897  0159DA  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11898  0159DC  A0D8               	btfss	status,0,c
 11899  0159DE  D012               	goto	l8611
 11900                           
 11901                           ; BSR set to: 0
 11902  0159E0  0100               	movlb	0	; () banked
 11903  0159E2  5175               	movf	___lldiv@divisor& (0+255),w,b
 11904  0159E4  0100               	movlb	0	; () banked
 11905  0159E6  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11906  0159E8  0100               	movlb	0	; () banked
 11907  0159EA  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11908  0159EC  0100               	movlb	0	; () banked
 11909  0159EE  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11910  0159F0  0100               	movlb	0	; () banked
 11911  0159F2  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11912  0159F4  0100               	movlb	0	; () banked
 11913  0159F6  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11914  0159F8  0100               	movlb	0	; () banked
 11915  0159FA  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11916  0159FC  0100               	movlb	0	; () banked
 11917  0159FE  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11918                           
 11919                           ; BSR set to: 0
 11920  015A00  0100               	movlb	0	; () banked
 11921  015A02  8179               	bsf	___lldiv@quotient& (0+255),0,b
 11922  015A04                     l8611:
 11923                           
 11924                           ; BSR set to: 0
 11925  015A04  0100               	movlb	0	; () banked
 11926  015A06  90D8               	bcf	status,0,c
 11927  015A08  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11928  015A0A  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11929  015A0C  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11930  015A0E  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11931                           
 11932                           ; BSR set to: 0
 11933  015A10  0100               	movlb	0	; () banked
 11934  015A12  2F7D               	decfsz	___lldiv@counter& (0+255),f,b
 11935  015A14  D7CD               	goto	l8603
 11936  015A16                     l1447:
 11937                           
 11938                           ; BSR set to: 0
 11939  015A16  C079  F071         	movff	___lldiv@quotient,?___lldiv
 11940  015A1A  C07A  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11941  015A1E  C07B  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11942  015A22  C07C  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11943                           
 11944                           ; BSR set to: 0
 11945  015A26  0012               	return		;funcret
 11946  015A28                     __end_of___lldiv:
 11947                           	opt stack 0
 11948                           tblptru	equ	0xFF8
 11949                           tblptrh	equ	0xFF7
 11950                           tblptrl	equ	0xFF6
 11951                           tablat	equ	0xFF5
 11952                           prodh	equ	0xFF4
 11953                           prodl	equ	0xFF3
 11954                           intcon	equ	0xFF2
 11955                           postinc0	equ	0xFEE
 11956                           wreg	equ	0xFE8
 11957                           indf2	equ	0xFDF
 11958                           postinc2	equ	0xFDE
 11959                           fsr2h	equ	0xFDA
 11960                           fsr2l	equ	0xFD9
 11961                           status	equ	0xFD8
 11962                           
 11963 ;; *************** function ___fltol *****************
 11964 ;; Defined at:
 11965 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11966 ;; Parameters:    Size  Location     Type
 11967 ;;  f1              4   89[BANK0 ] unsigned long 
 11968 ;; Auto vars:     Size  Location     Type
 11969 ;;  exp1            1   98[BANK0 ] unsigned char 
 11970 ;;  sign1           1   97[BANK0 ] unsigned char 
 11971 ;; Return value:  Size  Location     Type
 11972 ;;                  4   89[BANK0 ] long 
 11973 ;; Registers used:
 11974 ;;		wreg, status,2, status,0
 11975 ;; Tracked objects:
 11976 ;;		On entry : 0/0
 11977 ;;		On exit  : 0/0
 11978 ;;		Unchanged: 0/0
 11979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11981 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;Total ram usage:       10 bytes
 11985 ;; Hardware stack levels used:    1
 11986 ;; Hardware stack levels required when called:    3
 11987 ;; This function calls:
 11988 ;;		Nothing
 11989 ;; This function is called by:
 11990 ;;		_main
 11991 ;;		_sprintf
 11992 ;; This function uses a non-reentrant model
 11993 ;;
 11994                           
 11995                           	psect	text22
 11996  0155F8                     __ptext22:
 11997                           	opt stack 0
 11998  0155F8                     ___fltol:
 11999                           	opt stack 27
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;incstack = 0
 12003  0155F8  0100               	movlb	0	; () banked
 12004  0155FA  35BB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12005  0155FC  35BC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12006  0155FE  0100               	movlb	0	; () banked
 12007  015600  6FC2               	movwf	___fltol@exp1& (0+255),b
 12008  015602  0100               	movlb	0	; () banked
 12009  015604  51C2               	movf	___fltol@exp1& (0+255),w,b
 12010  015606  A4D8               	btfss	status,2,c
 12011  015608  D00A               	goto	l8555
 12012                           
 12013                           ; BSR set to: 0
 12014  01560A  0E00               	movlw	0
 12015  01560C  0100               	movlb	0	; () banked
 12016  01560E  6FB9               	movwf	?___fltol& (0+255),b
 12017  015610  0E00               	movlw	0
 12018  015612  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12019  015614  0E00               	movlw	0
 12020  015616  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12021  015618  0E00               	movlw	0
 12022  01561A  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12023                           
 12024                           ; BSR set to: 0
 12025  01561C  0012               	return	
 12026  01561E                     l8555:
 12027                           
 12028                           ; BSR set to: 0
 12029  01561E  C0B9  F0BD         	movff	___fltol@f1,??___fltol
 12030  015622  C0BA  F0BE         	movff	___fltol@f1+1,??___fltol+1
 12031  015626  C0BB  F0BF         	movff	___fltol@f1+2,??___fltol+2
 12032  01562A  C0BC  F0C0         	movff	___fltol@f1+3,??___fltol+3
 12033  01562E  0E20               	movlw	32
 12034  015630  D006               	goto	u11390
 12035  015632                     u11395:
 12036  015632  0100               	movlb	0	; () banked
 12037  015634  90D8               	bcf	status,0,c
 12038  015636  33C0               	rrcf	(??___fltol+3)& (0+255),f,b
 12039  015638  33BF               	rrcf	(??___fltol+2)& (0+255),f,b
 12040  01563A  33BE               	rrcf	(??___fltol+1)& (0+255),f,b
 12041  01563C  33BD               	rrcf	??___fltol& (0+255),f,b
 12042  01563E                     u11390:
 12043  01563E  2EE8               	decfsz	wreg,f,c
 12044  015640  D7F8               	goto	u11395
 12045  015642  0100               	movlb	0	; () banked
 12046  015644  51BD               	movf	??___fltol& (0+255),w,b
 12047  015646  0100               	movlb	0	; () banked
 12048  015648  6FC1               	movwf	___fltol@sign1& (0+255),b
 12049                           
 12050                           ; BSR set to: 0
 12051  01564A  0100               	movlb	0	; () banked
 12052  01564C  8FBB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12053                           
 12054                           ; BSR set to: 0
 12055  01564E  0EFF               	movlw	255
 12056  015650  0100               	movlb	0	; () banked
 12057  015652  17B9               	andwf	___fltol@f1& (0+255),f,b
 12058  015654  0EFF               	movlw	255
 12059  015656  17BA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12060  015658  0EFF               	movlw	255
 12061  01565A  17BB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12062  01565C  0E00               	movlw	0
 12063  01565E  17BC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12064                           
 12065                           ; BSR set to: 0
 12066  015660  0E96               	movlw	150
 12067  015662  0100               	movlb	0	; () banked
 12068  015664  5FC2               	subwf	___fltol@exp1& (0+255),f,b
 12069                           
 12070                           ; BSR set to: 0
 12071  015666  0100               	movlb	0	; () banked
 12072  015668  AFC2               	btfss	___fltol@exp1& (0+255),7,b
 12073  01566A  D01A               	goto	l8575
 12074                           
 12075                           ; BSR set to: 0
 12076  01566C  0100               	movlb	0	; () banked
 12077  01566E  51C2               	movf	___fltol@exp1& (0+255),w,b
 12078  015670  0A80               	xorlw	128
 12079  015672  0F97               	addlw	151
 12080  015674  B0D8               	btfsc	status,0,c
 12081  015676  D00A               	goto	l8571
 12082                           
 12083                           ; BSR set to: 0
 12084  015678  0E00               	movlw	0
 12085  01567A  0100               	movlb	0	; () banked
 12086  01567C  6FB9               	movwf	?___fltol& (0+255),b
 12087  01567E  0E00               	movlw	0
 12088  015680  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12089  015682  0E00               	movlw	0
 12090  015684  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12091  015686  0E00               	movlw	0
 12092  015688  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12093                           
 12094                           ; BSR set to: 0
 12095  01568A  0012               	return	
 12096  01568C                     l8571:
 12097                           
 12098                           ; BSR set to: 0
 12099  01568C  0100               	movlb	0	; () banked
 12100  01568E  90D8               	bcf	status,0,c
 12101  015690  33BC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12102  015692  33BB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12103  015694  33BA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12104  015696  33B9               	rrcf	___fltol@f1& (0+255),f,b
 12105                           
 12106                           ; BSR set to: 0
 12107  015698  0100               	movlb	0	; () banked
 12108  01569A  3FC2               	incfsz	___fltol@exp1& (0+255),f,b
 12109  01569C  D7F7               	goto	l8571
 12110                           
 12111                           ; BSR set to: 0
 12112  01569E  D01B               	goto	l8585
 12113  0156A0                     l8575:
 12114                           
 12115                           ; BSR set to: 0
 12116  0156A0  0E1F               	movlw	31
 12117  0156A2  0100               	movlb	0	; () banked
 12118  0156A4  65C2               	cpfsgt	___fltol@exp1& (0+255),b
 12119  0156A6  D012               	goto	l8583
 12120                           
 12121                           ; BSR set to: 0
 12122  0156A8  0E00               	movlw	0
 12123  0156AA  0100               	movlb	0	; () banked
 12124  0156AC  6FB9               	movwf	?___fltol& (0+255),b
 12125  0156AE  0E00               	movlw	0
 12126  0156B0  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12127  0156B2  0E00               	movlw	0
 12128  0156B4  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12129  0156B6  0E00               	movlw	0
 12130  0156B8  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12131                           
 12132                           ; BSR set to: 0
 12133  0156BA  0012               	return	
 12134  0156BC                     l8581:
 12135                           
 12136                           ; BSR set to: 0
 12137  0156BC  0100               	movlb	0	; () banked
 12138  0156BE  90D8               	bcf	status,0,c
 12139  0156C0  37B9               	rlcf	___fltol@f1& (0+255),f,b
 12140  0156C2  37BA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12141  0156C4  37BB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12142  0156C6  37BC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12143  0156C8  0100               	movlb	0	; () banked
 12144  0156CA  07C2               	decf	___fltol@exp1& (0+255),f,b
 12145  0156CC                     l8583:
 12146                           
 12147                           ; BSR set to: 0
 12148  0156CC  0100               	movlb	0	; () banked
 12149  0156CE  51C2               	movf	___fltol@exp1& (0+255),w,b
 12150  0156D0  0100               	movlb	0	; () banked
 12151  0156D2  A4D8               	btfss	status,2,c
 12152  0156D4  D7F3               	goto	l8581
 12153  0156D6                     l8585:
 12154                           
 12155                           ; BSR set to: 0
 12156  0156D6  0100               	movlb	0	; () banked
 12157  0156D8  51C1               	movf	___fltol@sign1& (0+255),w,b
 12158  0156DA  0100               	movlb	0	; () banked
 12159  0156DC  B4D8               	btfsc	status,2,c
 12160  0156DE  D009               	goto	l8589
 12161                           
 12162                           ; BSR set to: 0
 12163  0156E0  0100               	movlb	0	; () banked
 12164  0156E2  1FBC               	comf	(___fltol@f1+3)& (0+255),f,b
 12165  0156E4  1FBB               	comf	(___fltol@f1+2)& (0+255),f,b
 12166  0156E6  1FBA               	comf	(___fltol@f1+1)& (0+255),f,b
 12167  0156E8  6DB9               	negf	___fltol@f1& (0+255),b
 12168  0156EA  0E00               	movlw	0
 12169  0156EC  23BA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12170  0156EE  23BB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12171  0156F0  23BC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12172  0156F2                     l8589:
 12173                           
 12174                           ; BSR set to: 0
 12175  0156F2  C0B9  F0B9         	movff	___fltol@f1,?___fltol
 12176  0156F6  C0BA  F0BA         	movff	___fltol@f1+1,?___fltol+1
 12177  0156FA  C0BB  F0BB         	movff	___fltol@f1+2,?___fltol+2
 12178  0156FE  C0BC  F0BC         	movff	___fltol@f1+3,?___fltol+3
 12179  015702  0012               	return	
 12180  015704                     __end_of___fltol:
 12181                           	opt stack 0
 12182                           tblptru	equ	0xFF8
 12183                           tblptrh	equ	0xFF7
 12184                           tblptrl	equ	0xFF6
 12185                           tablat	equ	0xFF5
 12186                           prodh	equ	0xFF4
 12187                           prodl	equ	0xFF3
 12188                           intcon	equ	0xFF2
 12189                           postinc0	equ	0xFEE
 12190                           wreg	equ	0xFE8
 12191                           indf2	equ	0xFDF
 12192                           postinc2	equ	0xFDE
 12193                           fsr2h	equ	0xFDA
 12194                           fsr2l	equ	0xFD9
 12195                           status	equ	0xFD8
 12196                           
 12197 ;; *************** function ___flsub *****************
 12198 ;; Defined at:
 12199 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  b               4   89[BANK0 ] long 
 12202 ;;  a               4   93[BANK0 ] long 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;		None
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  4   89[BANK0 ] long 
 12207 ;; Registers used:
 12208 ;;		wreg, status,2, status,0, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12214 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;Total ram usage:        8 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    4
 12221 ;; This function calls:
 12222 ;;		___fladd
 12223 ;; This function is called by:
 12224 ;;		_sprintf
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	text23
 12229  016110                     __ptext23:
 12230                           	opt stack 0
 12231  016110                     ___flsub:
 12232                           	opt stack 24
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;incstack = 0
 12236  016110  0E00               	movlw	0
 12237  016112  0100               	movlb	0	; () banked
 12238  016114  1BBD               	xorwf	___flsub@a& (0+255),f,b
 12239  016116  0E00               	movlw	0
 12240  016118  1BBE               	xorwf	(___flsub@a+1)& (0+255),f,b
 12241  01611A  0E00               	movlw	0
 12242  01611C  1BBF               	xorwf	(___flsub@a+2)& (0+255),f,b
 12243  01611E  0E80               	movlw	128
 12244  016120  1BC0               	xorwf	(___flsub@a+3)& (0+255),f,b
 12245                           
 12246                           ; BSR set to: 0
 12247  016122  C0B9  F0A5         	movff	___flsub@b,___fladd@b
 12248  016126  C0BA  F0A6         	movff	___flsub@b+1,___fladd@b+1
 12249  01612A  C0BB  F0A7         	movff	___flsub@b+2,___fladd@b+2
 12250  01612E  C0BC  F0A8         	movff	___flsub@b+3,___fladd@b+3
 12251  016132  C0BD  F0A9         	movff	___flsub@a,___fladd@a
 12252  016136  C0BE  F0AA         	movff	___flsub@a+1,___fladd@a+1
 12253  01613A  C0BF  F0AB         	movff	___flsub@a+2,___fladd@a+2
 12254  01613E  C0C0  F0AC         	movff	___flsub@a+3,___fladd@a+3
 12255  016142  EC9A  F099         	call	___fladd	;wreg free
 12256  016146  C0A5  F0B9         	movff	?___fladd,?___flsub
 12257  01614A  C0A6  F0BA         	movff	?___fladd+1,?___flsub+1
 12258  01614E  C0A7  F0BB         	movff	?___fladd+2,?___flsub+2
 12259  016152  C0A8  F0BC         	movff	?___fladd+3,?___flsub+3
 12260  016156  0012               	return	
 12261  016158                     __end_of___flsub:
 12262                           	opt stack 0
 12263                           tblptru	equ	0xFF8
 12264                           tblptrh	equ	0xFF7
 12265                           tblptrl	equ	0xFF6
 12266                           tablat	equ	0xFF5
 12267                           prodh	equ	0xFF4
 12268                           prodl	equ	0xFF3
 12269                           intcon	equ	0xFF2
 12270                           postinc0	equ	0xFEE
 12271                           wreg	equ	0xFE8
 12272                           indf2	equ	0xFDF
 12273                           postinc2	equ	0xFDE
 12274                           fsr2h	equ	0xFDA
 12275                           fsr2l	equ	0xFD9
 12276                           status	equ	0xFD8
 12277                           
 12278 ;; *************** function ___fladd *****************
 12279 ;; Defined at:
 12280 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  b               4   69[BANK0 ] long 
 12283 ;;  a               4   73[BANK0 ] long 
 12284 ;; Auto vars:     Size  Location     Type
 12285 ;;  grs             1   88[BANK0 ] unsigned char 
 12286 ;;  bexp            1   87[BANK0 ] unsigned char 
 12287 ;;  aexp            1   86[BANK0 ] unsigned char 
 12288 ;;  signs           1   85[BANK0 ] unsigned char 
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  4   69[BANK0 ] unsigned char 
 12291 ;; Registers used:
 12292 ;;		wreg, status,2, status,0
 12293 ;; Tracked objects:
 12294 ;;		On entry : 0/0
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12298 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;Total ram usage:       20 bytes
 12303 ;; Hardware stack levels used:    1
 12304 ;; Hardware stack levels required when called:    3
 12305 ;; This function calls:
 12306 ;;		Nothing
 12307 ;; This function is called by:
 12308 ;;		_main
 12309 ;;		_sprintf
 12310 ;;		___flsub
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314                           	psect	text24
 12315  013334                     __ptext24:
 12316                           	opt stack 0
 12317  013334                     ___fladd:
 12318                           	opt stack 27
 12319                           
 12320                           ;incstack = 0
 12321  013334  0100               	movlb	0	; () banked
 12322  013336  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12323  013338  0B80               	andlw	128
 12324  01333A  0100               	movlb	0	; () banked
 12325  01333C  6FB5               	movwf	___fladd@signs& (0+255),b
 12326  01333E  0100               	movlb	0	; () banked
 12327  013340  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12328  013342  25A8               	addwf	(___fladd@b+3)& (0+255),w,b
 12329  013344  0100               	movlb	0	; () banked
 12330  013346  6FB7               	movwf	___fladd@bexp& (0+255),b
 12331                           
 12332                           ; BSR set to: 0
 12333  013348  0100               	movlb	0	; () banked
 12334  01334A  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 12335  01334C  D002               	goto	l7887
 12336                           
 12337                           ; BSR set to: 0
 12338  01334E  0100               	movlb	0	; () banked
 12339  013350  81B7               	bsf	___fladd@bexp& (0+255),0,b
 12340  013352                     l7887:
 12341                           
 12342                           ; BSR set to: 0
 12343  013352  0100               	movlb	0	; () banked
 12344  013354  51B7               	movf	___fladd@bexp& (0+255),w,b
 12345  013356  0100               	movlb	0	; () banked
 12346  013358  B4D8               	btfsc	status,2,c
 12347  01335A  D012               	goto	l7897
 12348                           
 12349                           ; BSR set to: 0
 12350  01335C  0100               	movlb	0	; () banked
 12351  01335E  29B7               	incf	___fladd@bexp& (0+255),w,b
 12352  013360  A4D8               	btfss	status,2,c
 12353  013362  D009               	goto	l7893
 12354                           
 12355                           ; BSR set to: 0
 12356  013364  0E00               	movlw	0
 12357  013366  0100               	movlb	0	; () banked
 12358  013368  6FA5               	movwf	___fladd@b& (0+255),b
 12359  01336A  0E00               	movlw	0
 12360  01336C  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12361  01336E  0E00               	movlw	0
 12362  013370  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12363  013372  0E00               	movlw	0
 12364  013374  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12365  013376                     l7893:
 12366                           
 12367                           ; BSR set to: 0
 12368  013376  0100               	movlb	0	; () banked
 12369  013378  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 12370                           
 12371                           ; BSR set to: 0
 12372  01337A  0E00               	movlw	0
 12373  01337C  0100               	movlb	0	; () banked
 12374  01337E  D008               	goto	L12
 12375  013380                     l7897:
 12376                           
 12377                           ; BSR set to: 0
 12378  013380  0E00               	movlw	0
 12379  013382  0100               	movlb	0	; () banked
 12380  013384  6FA5               	movwf	___fladd@b& (0+255),b
 12381  013386  0E00               	movlw	0
 12382  013388  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12383  01338A  0E00               	movlw	0
 12384  01338C  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12385  01338E  0E00               	movlw	0
 12386  013390                     L12:
 12387  013390  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12388                           
 12389                           ; BSR set to: 0
 12390                           
 12391                           ; BSR set to: 0
 12392  013392  0100               	movlb	0	; () banked
 12393  013394  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12394  013396  0B80               	andlw	128
 12395  013398  0100               	movlb	0	; () banked
 12396  01339A  6FB6               	movwf	___fladd@aexp& (0+255),b
 12397                           
 12398                           ; BSR set to: 0
 12399  01339C  0100               	movlb	0	; () banked
 12400  01339E  51B5               	movf	___fladd@signs& (0+255),w,b
 12401  0133A0  0100               	movlb	0	; () banked
 12402  0133A2  19B6               	xorwf	___fladd@aexp& (0+255),w,b
 12403  0133A4  B4D8               	btfsc	status,2,c
 12404  0133A6  D002               	goto	l7905
 12405                           
 12406                           ; BSR set to: 0
 12407  0133A8  0100               	movlb	0	; () banked
 12408  0133AA  8DB5               	bsf	___fladd@signs& (0+255),6,b
 12409  0133AC                     l7905:
 12410                           
 12411                           ; BSR set to: 0
 12412  0133AC  0100               	movlb	0	; () banked
 12413  0133AE  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12414  0133B0  25AC               	addwf	(___fladd@a+3)& (0+255),w,b
 12415  0133B2  0100               	movlb	0	; () banked
 12416  0133B4  6FB6               	movwf	___fladd@aexp& (0+255),b
 12417                           
 12418                           ; BSR set to: 0
 12419  0133B6  0100               	movlb	0	; () banked
 12420  0133B8  AFAB               	btfss	(___fladd@a+2)& (0+255),7,b
 12421  0133BA  D002               	goto	l7911
 12422                           
 12423                           ; BSR set to: 0
 12424  0133BC  0100               	movlb	0	; () banked
 12425  0133BE  81B6               	bsf	___fladd@aexp& (0+255),0,b
 12426  0133C0                     l7911:
 12427                           
 12428                           ; BSR set to: 0
 12429  0133C0  0100               	movlb	0	; () banked
 12430  0133C2  51B6               	movf	___fladd@aexp& (0+255),w,b
 12431  0133C4  0100               	movlb	0	; () banked
 12432  0133C6  B4D8               	btfsc	status,2,c
 12433  0133C8  D012               	goto	l7921
 12434                           
 12435                           ; BSR set to: 0
 12436  0133CA  0100               	movlb	0	; () banked
 12437  0133CC  29B6               	incf	___fladd@aexp& (0+255),w,b
 12438  0133CE  A4D8               	btfss	status,2,c
 12439  0133D0  D009               	goto	l7917
 12440                           
 12441                           ; BSR set to: 0
 12442  0133D2  0E00               	movlw	0
 12443  0133D4  0100               	movlb	0	; () banked
 12444  0133D6  6FA9               	movwf	___fladd@a& (0+255),b
 12445  0133D8  0E00               	movlw	0
 12446  0133DA  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12447  0133DC  0E00               	movlw	0
 12448  0133DE  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12449  0133E0  0E00               	movlw	0
 12450  0133E2  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12451  0133E4                     l7917:
 12452                           
 12453                           ; BSR set to: 0
 12454  0133E4  0100               	movlb	0	; () banked
 12455  0133E6  8FAB               	bsf	(___fladd@a+2)& (0+255),7,b
 12456                           
 12457                           ; BSR set to: 0
 12458  0133E8  0E00               	movlw	0
 12459  0133EA  0100               	movlb	0	; () banked
 12460  0133EC  D008               	goto	L13
 12461  0133EE                     l7921:
 12462                           
 12463                           ; BSR set to: 0
 12464  0133EE  0E00               	movlw	0
 12465  0133F0  0100               	movlb	0	; () banked
 12466  0133F2  6FA9               	movwf	___fladd@a& (0+255),b
 12467  0133F4  0E00               	movlw	0
 12468  0133F6  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12469  0133F8  0E00               	movlw	0
 12470  0133FA  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12471  0133FC  0E00               	movlw	0
 12472  0133FE                     L13:
 12473  0133FE  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12474                           
 12475                           ; BSR set to: 0
 12476                           
 12477                           ; BSR set to: 0
 12478  013400  0100               	movlb	0	; () banked
 12479  013402  51B7               	movf	___fladd@bexp& (0+255),w,b
 12480  013404  0100               	movlb	0	; () banked
 12481  013406  5DB6               	subwf	___fladd@aexp& (0+255),w,b
 12482  013408  B0D8               	btfsc	status,0,c
 12483  01340A  D024               	goto	l7959
 12484                           
 12485                           ; BSR set to: 0
 12486  01340C  0100               	movlb	0	; () banked
 12487  01340E  ADB5               	btfss	___fladd@signs& (0+255),6,b
 12488  013410  D003               	goto	l7929
 12489                           
 12490                           ; BSR set to: 0
 12491  013412  0E80               	movlw	128
 12492  013414  0100               	movlb	0	; () banked
 12493  013416  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 12494  013418                     l7929:
 12495                           
 12496                           ; BSR set to: 0
 12497  013418  C0B7  F0B8         	movff	___fladd@bexp,___fladd@grs
 12498                           
 12499                           ; BSR set to: 0
 12500  01341C  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12501                           
 12502                           ; BSR set to: 0
 12503  013420  C0B8  F0B6         	movff	___fladd@grs,___fladd@aexp
 12504                           
 12505                           ; BSR set to: 0
 12506  013424  C0A5  F0B8         	movff	___fladd@b,___fladd@grs
 12507                           
 12508                           ; BSR set to: 0
 12509  013428  C0A9  F0A5         	movff	___fladd@a,___fladd@b
 12510                           
 12511                           ; BSR set to: 0
 12512  01342C  C0B8  F0A9         	movff	___fladd@grs,___fladd@a
 12513                           
 12514                           ; BSR set to: 0
 12515  013430  C0A6  F0B8         	movff	___fladd@b+1,___fladd@grs
 12516                           
 12517                           ; BSR set to: 0
 12518  013434  C0AA  F0A6         	movff	___fladd@a+1,___fladd@b+1
 12519                           
 12520                           ; BSR set to: 0
 12521  013438  C0B8  F0AA         	movff	___fladd@grs,___fladd@a+1
 12522                           
 12523                           ; BSR set to: 0
 12524  01343C  C0A7  F0B8         	movff	___fladd@b+2,___fladd@grs
 12525                           
 12526                           ; BSR set to: 0
 12527  013440  C0AB  F0A7         	movff	___fladd@a+2,___fladd@b+2
 12528                           
 12529                           ; BSR set to: 0
 12530  013444  C0B8  F0AB         	movff	___fladd@grs,___fladd@a+2
 12531                           
 12532                           ; BSR set to: 0
 12533  013448  C0A8  F0B8         	movff	___fladd@b+3,___fladd@grs
 12534                           
 12535                           ; BSR set to: 0
 12536  01344C  C0AC  F0A8         	movff	___fladd@a+3,___fladd@b+3
 12537                           
 12538                           ; BSR set to: 0
 12539  013450  C0B8  F0AC         	movff	___fladd@grs,___fladd@a+3
 12540  013454                     l7959:
 12541                           
 12542                           ; BSR set to: 0
 12543  013454  0E00               	movlw	0
 12544  013456  0100               	movlb	0	; () banked
 12545  013458  6FB8               	movwf	___fladd@grs& (0+255),b
 12546                           
 12547                           ; BSR set to: 0
 12548  01345A  0100               	movlb	0	; () banked
 12549  01345C  51B7               	movf	___fladd@bexp& (0+255),w,b
 12550  01345E  0100               	movlb	0	; () banked
 12551  013460  6FAD               	movwf	??___fladd& (0+255),b
 12552  013462  6BAE               	clrf	(??___fladd+1)& (0+255),b
 12553  013464  0100               	movlb	0	; () banked
 12554  013466  1FAD               	comf	??___fladd& (0+255),f,b
 12555  013468  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 12556  01346A  4BAD               	infsnz	??___fladd& (0+255),f,b
 12557  01346C  2BAE               	incf	(??___fladd+1)& (0+255),f,b
 12558  01346E  0100               	movlb	0	; () banked
 12559  013470  51B6               	movf	___fladd@aexp& (0+255),w,b
 12560  013472  0100               	movlb	0	; () banked
 12561  013474  6FAF               	movwf	(??___fladd+2)& (0+255),b
 12562  013476  6BB0               	clrf	(??___fladd+3)& (0+255),b
 12563  013478  0100               	movlb	0	; () banked
 12564  01347A  51AD               	movf	??___fladd& (0+255),w,b
 12565  01347C  0100               	movlb	0	; () banked
 12566  01347E  27AF               	addwf	(??___fladd+2)& (0+255),f,b
 12567  013480  0100               	movlb	0	; () banked
 12568  013482  51AE               	movf	(??___fladd+1)& (0+255),w,b
 12569  013484  0100               	movlb	0	; () banked
 12570  013486  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 12571  013488  0100               	movlb	0	; () banked
 12572  01348A  BFB0               	btfsc	(??___fladd+3)& (0+255),7,b
 12573  01348C  D03D               	goto	l1542
 12574  01348E  0100               	movlb	0	; () banked
 12575  013490  51B0               	movf	(??___fladd+3)& (0+255),w,b
 12576  013492  E105               	bnz	u10440
 12577  013494  0E1A               	movlw	26
 12578  013496  0100               	movlb	0	; () banked
 12579  013498  5DAF               	subwf	(??___fladd+2)& (0+255),w,b
 12580  01349A  A0D8               	btfss	status,0,c
 12581  01349C  D035               	goto	l1542
 12582  01349E                     u10440:
 12583                           
 12584                           ; BSR set to: 0
 12585  01349E  0100               	movlb	0	; () banked
 12586  0134A0  51A5               	movf	___fladd@b& (0+255),w,b
 12587  0134A2  0100               	movlb	0	; () banked
 12588  0134A4  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 12589  0134A6  0100               	movlb	0	; () banked
 12590  0134A8  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 12591  0134AA  0100               	movlb	0	; () banked
 12592  0134AC  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 12593  0134AE  B4D8               	btfsc	status,2,c
 12594  0134B0  D002               	goto	u10450
 12595  0134B2  0E01               	movlw	1
 12596  0134B4  D001               	goto	u10460
 12597  0134B6                     u10450:
 12598  0134B6  0E00               	movlw	0
 12599  0134B8                     u10460:
 12600  0134B8  0100               	movlb	0	; () banked
 12601  0134BA  6FB8               	movwf	___fladd@grs& (0+255),b
 12602                           
 12603                           ; BSR set to: 0
 12604  0134BC  0E00               	movlw	0
 12605  0134BE  0100               	movlb	0	; () banked
 12606  0134C0  6FA5               	movwf	___fladd@b& (0+255),b
 12607  0134C2  0E00               	movlw	0
 12608  0134C4  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12609  0134C6  0E00               	movlw	0
 12610  0134C8  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12611  0134CA  0E00               	movlw	0
 12612  0134CC  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12613                           
 12614                           ; BSR set to: 0
 12615  0134CE  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12616  0134D2  D020               	goto	l1541
 12617  0134D4                     l1543:
 12618                           
 12619                           ; BSR set to: 0
 12620  0134D4  0100               	movlb	0	; () banked
 12621  0134D6  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12622  0134D8  D007               	goto	l7971
 12623                           
 12624                           ; BSR set to: 0
 12625  0134DA  0100               	movlb	0	; () banked
 12626  0134DC  90D8               	bcf	status,0,c
 12627  0134DE  31B8               	rrcf	___fladd@grs& (0+255),w,b
 12628  0134E0  0901               	iorlw	1
 12629  0134E2  0100               	movlb	0	; () banked
 12630  0134E4  6FB8               	movwf	___fladd@grs& (0+255),b
 12631  0134E6  D003               	goto	l7973
 12632  0134E8                     l7971:
 12633                           
 12634                           ; BSR set to: 0
 12635  0134E8  0100               	movlb	0	; () banked
 12636  0134EA  90D8               	bcf	status,0,c
 12637  0134EC  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12638  0134EE                     l7973:
 12639                           
 12640                           ; BSR set to: 0
 12641  0134EE  0100               	movlb	0	; () banked
 12642  0134F0  A1A5               	btfss	___fladd@b& (0+255),0,b
 12643  0134F2  D002               	goto	l7977
 12644                           
 12645                           ; BSR set to: 0
 12646  0134F4  0100               	movlb	0	; () banked
 12647  0134F6  8FB8               	bsf	___fladd@grs& (0+255),7,b
 12648  0134F8                     l7977:
 12649                           
 12650                           ; BSR set to: 0
 12651  0134F8  0100               	movlb	0	; () banked
 12652  0134FA  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 12653  0134FC  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 12654  0134FE  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 12655  013500  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 12656  013502  33A5               	rrcf	___fladd@b& (0+255),f,b
 12657                           
 12658                           ; BSR set to: 0
 12659  013504  0100               	movlb	0	; () banked
 12660  013506  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12661  013508                     l1542:
 12662                           
 12663                           ; BSR set to: 0
 12664  013508  0100               	movlb	0	; () banked
 12665  01350A  51B6               	movf	___fladd@aexp& (0+255),w,b
 12666  01350C  0100               	movlb	0	; () banked
 12667  01350E  5DB7               	subwf	___fladd@bexp& (0+255),w,b
 12668  013510  A0D8               	btfss	status,0,c
 12669  013512  D7E0               	goto	l1543
 12670  013514                     l1541:
 12671                           
 12672                           ; BSR set to: 0
 12673  013514  0100               	movlb	0	; () banked
 12674  013516  BDB5               	btfsc	___fladd@signs& (0+255),6,b
 12675  013518  D03F               	goto	l8005
 12676                           
 12677                           ; BSR set to: 0
 12678  01351A  0100               	movlb	0	; () banked
 12679  01351C  51B7               	movf	___fladd@bexp& (0+255),w,b
 12680  01351E  0100               	movlb	0	; () banked
 12681  013520  A4D8               	btfss	status,2,c
 12682  013522  D00A               	goto	l7987
 12683                           
 12684                           ; BSR set to: 0
 12685  013524  0E00               	movlw	0
 12686  013526  0100               	movlb	0	; () banked
 12687  013528  6FA5               	movwf	?___fladd& (0+255),b
 12688  01352A  0E00               	movlw	0
 12689  01352C  6FA6               	movwf	(?___fladd+1)& (0+255),b
 12690  01352E  0E00               	movlw	0
 12691  013530  6FA7               	movwf	(?___fladd+2)& (0+255),b
 12692  013532  0E00               	movlw	0
 12693  013534  6FA8               	movwf	(?___fladd+3)& (0+255),b
 12694                           
 12695                           ; BSR set to: 0
 12696  013536  0012               	return	
 12697  013538                     l7987:
 12698                           
 12699                           ; BSR set to: 0
 12700  013538  0100               	movlb	0	; () banked
 12701  01353A  51A9               	movf	___fladd@a& (0+255),w,b
 12702  01353C  0100               	movlb	0	; () banked
 12703  01353E  27A5               	addwf	___fladd@b& (0+255),f,b
 12704  013540  0100               	movlb	0	; () banked
 12705  013542  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12706  013544  0100               	movlb	0	; () banked
 12707  013546  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 12708  013548  0100               	movlb	0	; () banked
 12709  01354A  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12710  01354C  0100               	movlb	0	; () banked
 12711  01354E  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 12712  013550  0100               	movlb	0	; () banked
 12713  013552  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12714  013554  0100               	movlb	0	; () banked
 12715  013556  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 12716                           
 12717                           ; BSR set to: 0
 12718  013558  0100               	movlb	0	; () banked
 12719  01355A  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 12720  01355C  D0CC               	goto	l8041
 12721                           
 12722                           ; BSR set to: 0
 12723  01355E  0100               	movlb	0	; () banked
 12724  013560  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12725  013562  D009               	goto	l7995
 12726                           
 12727                           ; BSR set to: 0
 12728  013564  0100               	movlb	0	; () banked
 12729  013566  90D8               	bcf	status,0,c
 12730  013568  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12731  01356A  0100               	movlb	0	; () banked
 12732  01356C  51B8               	movf	___fladd@grs& (0+255),w,b
 12733  01356E  0901               	iorlw	1
 12734  013570  0100               	movlb	0	; () banked
 12735  013572  6FB8               	movwf	___fladd@grs& (0+255),b
 12736  013574  D003               	goto	l7997
 12737  013576                     l7995:
 12738                           
 12739                           ; BSR set to: 0
 12740  013576  0100               	movlb	0	; () banked
 12741  013578  90D8               	bcf	status,0,c
 12742  01357A  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12743  01357C                     l7997:
 12744                           
 12745                           ; BSR set to: 0
 12746  01357C  0100               	movlb	0	; () banked
 12747  01357E  A1A5               	btfss	___fladd@b& (0+255),0,b
 12748  013580  D002               	goto	l8001
 12749                           
 12750                           ; BSR set to: 0
 12751  013582  0100               	movlb	0	; () banked
 12752  013584  8FB8               	bsf	___fladd@grs& (0+255),7,b
 12753  013586                     l8001:
 12754                           
 12755                           ; BSR set to: 0
 12756  013586  0100               	movlb	0	; () banked
 12757  013588  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 12758  01358A  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 12759  01358C  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 12760  01358E  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 12761  013590  33A5               	rrcf	___fladd@b& (0+255),f,b
 12762                           
 12763                           ; BSR set to: 0
 12764  013592  0100               	movlb	0	; () banked
 12765  013594  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12766                           
 12767                           ; BSR set to: 0
 12768  013596  D0AF               	goto	l8041
 12769  013598                     l8005:
 12770                           
 12771                           ; BSR set to: 0
 12772  013598  0100               	movlb	0	; () banked
 12773  01359A  51A9               	movf	___fladd@a& (0+255),w,b
 12774  01359C  0100               	movlb	0	; () banked
 12775  01359E  5DA5               	subwf	___fladd@b& (0+255),w,b
 12776  0135A0  0100               	movlb	0	; () banked
 12777  0135A2  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12778  0135A4  0100               	movlb	0	; () banked
 12779  0135A6  59A6               	subwfb	(___fladd@b+1)& (0+255),w,b
 12780  0135A8  0100               	movlb	0	; () banked
 12781  0135AA  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12782  0135AC  0100               	movlb	0	; () banked
 12783  0135AE  59A7               	subwfb	(___fladd@b+2)& (0+255),w,b
 12784  0135B0  0100               	movlb	0	; () banked
 12785  0135B2  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12786  0135B4  0A80               	xorlw	128
 12787  0135B6  0100               	movlb	0	; () banked
 12788  0135B8  6FAD               	movwf	??___fladd& (0+255),b
 12789  0135BA  0100               	movlb	0	; () banked
 12790  0135BC  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12791  0135BE  0A80               	xorlw	128
 12792  0135C0  0100               	movlb	0	; () banked
 12793  0135C2  59AD               	subwfb	??___fladd& (0+255),w,b
 12794  0135C4  B0D8               	btfsc	status,0,c
 12795  0135C6  D050               	goto	l8015
 12796                           
 12797                           ; BSR set to: 0
 12798  0135C8  C0A5  F0AD         	movff	___fladd@b,??___fladd
 12799  0135CC  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 12800  0135D0  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 12801  0135D4  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 12802  0135D8  0100               	movlb	0	; () banked
 12803  0135DA  1FAD               	comf	??___fladd& (0+255),f,b
 12804  0135DC  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 12805  0135DE  1FAF               	comf	(??___fladd+2)& (0+255),f,b
 12806  0135E0  1FB0               	comf	(??___fladd+3)& (0+255),f,b
 12807  0135E2  2BAD               	incf	??___fladd& (0+255),f,b
 12808  0135E4  0E00               	movlw	0
 12809  0135E6  23AE               	addwfc	(??___fladd+1)& (0+255),f,b
 12810  0135E8  23AF               	addwfc	(??___fladd+2)& (0+255),f,b
 12811  0135EA  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 12812  0135EC  0100               	movlb	0	; () banked
 12813  0135EE  51A9               	movf	___fladd@a& (0+255),w,b
 12814  0135F0  0100               	movlb	0	; () banked
 12815  0135F2  25AD               	addwf	??___fladd& (0+255),w,b
 12816  0135F4  0100               	movlb	0	; () banked
 12817  0135F6  6FB1               	movwf	(??___fladd+4)& (0+255),b
 12818  0135F8  0100               	movlb	0	; () banked
 12819  0135FA  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12820  0135FC  0100               	movlb	0	; () banked
 12821  0135FE  21AE               	addwfc	(??___fladd+1)& (0+255),w,b
 12822  013600  0100               	movlb	0	; () banked
 12823  013602  6FB2               	movwf	(??___fladd+5)& (0+255),b
 12824  013604  0100               	movlb	0	; () banked
 12825  013606  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12826  013608  0100               	movlb	0	; () banked
 12827  01360A  21AF               	addwfc	(??___fladd+2)& (0+255),w,b
 12828  01360C  0100               	movlb	0	; () banked
 12829  01360E  6FB3               	movwf	(??___fladd+6)& (0+255),b
 12830  013610  0100               	movlb	0	; () banked
 12831  013612  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12832  013614  0100               	movlb	0	; () banked
 12833  013616  21B0               	addwfc	(??___fladd+3)& (0+255),w,b
 12834  013618  0100               	movlb	0	; () banked
 12835  01361A  6FB4               	movwf	(??___fladd+7)& (0+255),b
 12836  01361C  0EFF               	movlw	255
 12837  01361E  0100               	movlb	0	; () banked
 12838  013620  25B1               	addwf	(??___fladd+4)& (0+255),w,b
 12839  013622  0100               	movlb	0	; () banked
 12840  013624  6FA5               	movwf	___fladd@b& (0+255),b
 12841  013626  0EFF               	movlw	255
 12842  013628  0100               	movlb	0	; () banked
 12843  01362A  21B2               	addwfc	(??___fladd+5)& (0+255),w,b
 12844  01362C  0100               	movlb	0	; () banked
 12845  01362E  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12846  013630  0EFF               	movlw	255
 12847  013632  0100               	movlb	0	; () banked
 12848  013634  21B3               	addwfc	(??___fladd+6)& (0+255),w,b
 12849  013636  0100               	movlb	0	; () banked
 12850  013638  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12851  01363A  0EFF               	movlw	255
 12852  01363C  0100               	movlb	0	; () banked
 12853  01363E  21B4               	addwfc	(??___fladd+7)& (0+255),w,b
 12854  013640  0100               	movlb	0	; () banked
 12855  013642  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12856  013644  0E80               	movlw	128
 12857  013646  0100               	movlb	0	; () banked
 12858  013648  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 12859                           
 12860                           ; BSR set to: 0
 12861  01364A  0100               	movlb	0	; () banked
 12862  01364C  6DB8               	negf	___fladd@grs& (0+255),b
 12863                           
 12864                           ; BSR set to: 0
 12865  01364E  0100               	movlb	0	; () banked
 12866  013650  51B8               	movf	___fladd@grs& (0+255),w,b
 12867  013652  0100               	movlb	0	; () banked
 12868  013654  A4D8               	btfss	status,2,c
 12869  013656  D018               	goto	l1558
 12870                           
 12871                           ; BSR set to: 0
 12872  013658  0E01               	movlw	1
 12873  01365A  0100               	movlb	0	; () banked
 12874  01365C  27A5               	addwf	___fladd@b& (0+255),f,b
 12875  01365E  0E00               	movlw	0
 12876  013660  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 12877  013662  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 12878  013664  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 12879                           
 12880                           ; BSR set to: 0
 12881  013666  D010               	goto	l1558
 12882  013668                     l8015:
 12883                           
 12884                           ; BSR set to: 0
 12885  013668  0100               	movlb	0	; () banked
 12886  01366A  51A9               	movf	___fladd@a& (0+255),w,b
 12887  01366C  0100               	movlb	0	; () banked
 12888  01366E  5FA5               	subwf	___fladd@b& (0+255),f,b
 12889  013670  0100               	movlb	0	; () banked
 12890  013672  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12891  013674  0100               	movlb	0	; () banked
 12892  013676  5BA6               	subwfb	(___fladd@b+1)& (0+255),f,b
 12893  013678  0100               	movlb	0	; () banked
 12894  01367A  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12895  01367C  0100               	movlb	0	; () banked
 12896  01367E  5BA7               	subwfb	(___fladd@b+2)& (0+255),f,b
 12897  013680  0100               	movlb	0	; () banked
 12898  013682  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12899  013684  0100               	movlb	0	; () banked
 12900  013686  5BA8               	subwfb	(___fladd@b+3)& (0+255),f,b
 12901  013688                     l1558:
 12902                           
 12903                           ; BSR set to: 0
 12904  013688  0100               	movlb	0	; () banked
 12905  01368A  51A5               	movf	___fladd@b& (0+255),w,b
 12906  01368C  0100               	movlb	0	; () banked
 12907  01368E  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 12908  013690  0100               	movlb	0	; () banked
 12909  013692  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 12910  013694  0100               	movlb	0	; () banked
 12911  013696  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 12912  013698  A4D8               	btfss	status,2,c
 12913  01369A  D02A               	goto	l8039
 12914                           
 12915                           ; BSR set to: 0
 12916  01369C  0100               	movlb	0	; () banked
 12917  01369E  51B8               	movf	___fladd@grs& (0+255),w,b
 12918  0136A0  0100               	movlb	0	; () banked
 12919  0136A2  A4D8               	btfss	status,2,c
 12920  0136A4  D025               	goto	l8039
 12921                           
 12922                           ; BSR set to: 0
 12923  0136A6  0E00               	movlw	0
 12924  0136A8  0100               	movlb	0	; () banked
 12925  0136AA  6FA5               	movwf	?___fladd& (0+255),b
 12926  0136AC  0E00               	movlw	0
 12927  0136AE  6FA6               	movwf	(?___fladd+1)& (0+255),b
 12928  0136B0  0E00               	movlw	0
 12929  0136B2  6FA7               	movwf	(?___fladd+2)& (0+255),b
 12930  0136B4  0E00               	movlw	0
 12931  0136B6  6FA8               	movwf	(?___fladd+3)& (0+255),b
 12932                           
 12933                           ; BSR set to: 0
 12934  0136B8  0012               	return	
 12935  0136BA                     l8023:
 12936                           
 12937                           ; BSR set to: 0
 12938  0136BA  0100               	movlb	0	; () banked
 12939  0136BC  90D8               	bcf	status,0,c
 12940  0136BE  37A5               	rlcf	___fladd@b& (0+255),f,b
 12941  0136C0  37A6               	rlcf	(___fladd@b+1)& (0+255),f,b
 12942  0136C2  37A7               	rlcf	(___fladd@b+2)& (0+255),f,b
 12943  0136C4  37A8               	rlcf	(___fladd@b+3)& (0+255),f,b
 12944                           
 12945                           ; BSR set to: 0
 12946  0136C6  0100               	movlb	0	; () banked
 12947  0136C8  AFB8               	btfss	___fladd@grs& (0+255),7,b
 12948  0136CA  D002               	goto	l8029
 12949                           
 12950                           ; BSR set to: 0
 12951  0136CC  0100               	movlb	0	; () banked
 12952  0136CE  81A5               	bsf	___fladd@b& (0+255),0,b
 12953  0136D0                     l8029:
 12954                           
 12955                           ; BSR set to: 0
 12956  0136D0  0100               	movlb	0	; () banked
 12957  0136D2  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12958  0136D4  D003               	goto	l8033
 12959                           
 12960                           ; BSR set to: 0
 12961  0136D6  80D8               	bsf	status,0,c
 12962  0136D8  0100               	movlb	0	; () banked
 12963  0136DA  D002               	goto	L14
 12964  0136DC                     l8033:
 12965                           
 12966                           ; BSR set to: 0
 12967  0136DC  0100               	movlb	0	; () banked
 12968  0136DE  90D8               	bcf	status,0,c
 12969  0136E0                     L14:
 12970  0136E0  37B8               	rlcf	___fladd@grs& (0+255),f,b
 12971                           
 12972                           ; BSR set to: 0
 12973                           
 12974                           ; BSR set to: 0
 12975  0136E2  0100               	movlb	0	; () banked
 12976  0136E4  51B7               	movf	___fladd@bexp& (0+255),w,b
 12977  0136E6  0100               	movlb	0	; () banked
 12978  0136E8  B4D8               	btfsc	status,2,c
 12979  0136EA  D002               	goto	l8039
 12980                           
 12981                           ; BSR set to: 0
 12982  0136EC  0100               	movlb	0	; () banked
 12983  0136EE  07B7               	decf	___fladd@bexp& (0+255),f,b
 12984  0136F0                     l8039:
 12985                           
 12986                           ; BSR set to: 0
 12987  0136F0  0100               	movlb	0	; () banked
 12988  0136F2  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 12989  0136F4  D7E2               	goto	l8023
 12990  0136F6                     l8041:
 12991                           
 12992                           ; BSR set to: 0
 12993  0136F6  0E00               	movlw	0
 12994  0136F8  0100               	movlb	0	; () banked
 12995  0136FA  6FB6               	movwf	___fladd@aexp& (0+255),b
 12996                           
 12997                           ; BSR set to: 0
 12998  0136FC  0100               	movlb	0	; () banked
 12999  0136FE  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13000  013700  D00D               	goto	l1567
 13001                           
 13002                           ; BSR set to: 0
 13003  013702  C0B8  F0AD         	movff	___fladd@grs,??___fladd
 13004  013706  0E7F               	movlw	127
 13005  013708  0100               	movlb	0	; () banked
 13006  01370A  17AD               	andwf	??___fladd& (0+255),f,b
 13007  01370C  A4D8               	btfss	status,2,c
 13008  01370E  D003               	goto	l8049
 13009                           
 13010                           ; BSR set to: 0
 13011                           
 13012                           ; BSR set to: 0
 13013  013710  0100               	movlb	0	; () banked
 13014  013712  A1A5               	btfss	___fladd@b& (0+255),0,b
 13015  013714  D003               	goto	l1567
 13016  013716                     l8049:
 13017                           
 13018                           ; BSR set to: 0
 13019  013716  0E01               	movlw	1
 13020  013718  0100               	movlb	0	; () banked
 13021  01371A  6FB6               	movwf	___fladd@aexp& (0+255),b
 13022  01371C                     l1567:
 13023                           
 13024                           ; BSR set to: 0
 13025  01371C  0100               	movlb	0	; () banked
 13026  01371E  51B6               	movf	___fladd@aexp& (0+255),w,b
 13027  013720  0100               	movlb	0	; () banked
 13028  013722  B4D8               	btfsc	status,2,c
 13029  013724  D026               	goto	l8059
 13030                           
 13031                           ; BSR set to: 0
 13032  013726  0E01               	movlw	1
 13033  013728  0100               	movlb	0	; () banked
 13034  01372A  27A5               	addwf	___fladd@b& (0+255),f,b
 13035  01372C  0E00               	movlw	0
 13036  01372E  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13037  013730  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13038  013732  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13039                           
 13040                           ; BSR set to: 0
 13041  013734  0100               	movlb	0	; () banked
 13042  013736  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13043  013738  D01C               	goto	l8059
 13044                           
 13045                           ; BSR set to: 0
 13046  01373A  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13047  01373E  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13048  013742  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13049  013746  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13050  01374A  0100               	movlb	0	; () banked
 13051  01374C  35B0               	rlcf	(??___fladd+3)& (0+255),w,b
 13052  01374E  33B0               	rrcf	(??___fladd+3)& (0+255),f,b
 13053  013750  33AF               	rrcf	(??___fladd+2)& (0+255),f,b
 13054  013752  33AE               	rrcf	(??___fladd+1)& (0+255),f,b
 13055  013754  33AD               	rrcf	??___fladd& (0+255),f,b
 13056  013756  C0AD  F0A5         	movff	??___fladd,___fladd@b
 13057  01375A  C0AE  F0A6         	movff	??___fladd+1,___fladd@b+1
 13058  01375E  C0AF  F0A7         	movff	??___fladd+2,___fladd@b+2
 13059  013762  C0B0  F0A8         	movff	??___fladd+3,___fladd@b+3
 13060  013766  0100               	movlb	0	; () banked
 13061  013768  29B7               	incf	___fladd@bexp& (0+255),w,b
 13062  01376A  B4D8               	btfsc	status,2,c
 13063  01376C  D002               	goto	l8059
 13064                           
 13065                           ; BSR set to: 0
 13066  01376E  0100               	movlb	0	; () banked
 13067  013770  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13068  013772                     l8059:
 13069                           
 13070                           ; BSR set to: 0
 13071  013772  0100               	movlb	0	; () banked
 13072  013774  29B7               	incf	___fladd@bexp& (0+255),w,b
 13073  013776  B4D8               	btfsc	status,2,c
 13074  013778  D005               	goto	l8063
 13075                           
 13076                           ; BSR set to: 0
 13077  01377A  0100               	movlb	0	; () banked
 13078  01377C  51B7               	movf	___fladd@bexp& (0+255),w,b
 13079  01377E  0100               	movlb	0	; () banked
 13080  013780  A4D8               	btfss	status,2,c
 13081  013782  D011               	goto	l8067
 13082  013784                     l8063:
 13083                           
 13084                           ; BSR set to: 0
 13085  013784  0E00               	movlw	0
 13086  013786  0100               	movlb	0	; () banked
 13087  013788  6FA5               	movwf	___fladd@b& (0+255),b
 13088  01378A  0E00               	movlw	0
 13089  01378C  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13090  01378E  0E00               	movlw	0
 13091  013790  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13092  013792  0E00               	movlw	0
 13093  013794  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13094  013796  0100               	movlb	0	; () banked
 13095  013798  51B7               	movf	___fladd@bexp& (0+255),w,b
 13096  01379A  0100               	movlb	0	; () banked
 13097  01379C  A4D8               	btfss	status,2,c
 13098  01379E  D003               	goto	l8067
 13099                           
 13100                           ; BSR set to: 0
 13101  0137A0  0E00               	movlw	0
 13102  0137A2  0100               	movlb	0	; () banked
 13103  0137A4  6FB5               	movwf	___fladd@signs& (0+255),b
 13104  0137A6                     l8067:
 13105                           
 13106                           ; BSR set to: 0
 13107  0137A6  0100               	movlb	0	; () banked
 13108  0137A8  A1B7               	btfss	___fladd@bexp& (0+255),0,b
 13109  0137AA  D003               	goto	l8071
 13110                           
 13111                           ; BSR set to: 0
 13112  0137AC  0100               	movlb	0	; () banked
 13113  0137AE  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 13114  0137B0  D002               	goto	l8073
 13115  0137B2                     l8071:
 13116                           
 13117                           ; BSR set to: 0
 13118  0137B2  0100               	movlb	0	; () banked
 13119  0137B4  9FA7               	bcf	(___fladd@b+2)& (0+255),7,b
 13120  0137B6                     l8073:
 13121                           
 13122                           ; BSR set to: 0
 13123  0137B6  0100               	movlb	0	; () banked
 13124  0137B8  90D8               	bcf	status,0,c
 13125  0137BA  31B7               	rrcf	___fladd@bexp& (0+255),w,b
 13126  0137BC  0100               	movlb	0	; () banked
 13127  0137BE  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13128                           
 13129                           ; BSR set to: 0
 13130  0137C0  0100               	movlb	0	; () banked
 13131  0137C2  AFB5               	btfss	___fladd@signs& (0+255),7,b
 13132  0137C4  D002               	goto	l8079
 13133                           
 13134                           ; BSR set to: 0
 13135  0137C6  0100               	movlb	0	; () banked
 13136  0137C8  8FA8               	bsf	(___fladd@b+3)& (0+255),7,b
 13137  0137CA                     l8079:
 13138                           
 13139                           ; BSR set to: 0
 13140  0137CA  C0A5  F0A5         	movff	___fladd@b,?___fladd
 13141  0137CE  C0A6  F0A6         	movff	___fladd@b+1,?___fladd+1
 13142  0137D2  C0A7  F0A7         	movff	___fladd@b+2,?___fladd+2
 13143  0137D6  C0A8  F0A8         	movff	___fladd@b+3,?___fladd+3
 13144  0137DA  0012               	return	
 13145  0137DC                     __end_of___fladd:
 13146                           	opt stack 0
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           postinc0	equ	0xFEE
 13155                           wreg	equ	0xFE8
 13156                           indf2	equ	0xFDF
 13157                           postinc2	equ	0xFDE
 13158                           fsr2h	equ	0xFDA
 13159                           fsr2l	equ	0xFD9
 13160                           status	equ	0xFD8
 13161                           
 13162 ;; *************** function ___flneg *****************
 13163 ;; Defined at:
 13164 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  f1              4   56[BANK0 ] unsigned char 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;		None
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  4   56[BANK0 ] unsigned char 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13178 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;Total ram usage:        4 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:    3
 13185 ;; This function calls:
 13186 ;;		Nothing
 13187 ;; This function is called by:
 13188 ;;		_main
 13189 ;;		_sprintf
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193                           	psect	text25
 13194  01625A                     __ptext25:
 13195                           	opt stack 0
 13196  01625A                     ___flneg:
 13197                           	opt stack 27
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;incstack = 0
 13201  01625A  0100               	movlb	0	; () banked
 13202  01625C  5198               	movf	___flneg@f1& (0+255),w,b
 13203  01625E  0100               	movlb	0	; () banked
 13204  016260  1199               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13205  016262  0100               	movlb	0	; () banked
 13206  016264  119A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13207  016266  0100               	movlb	0	; () banked
 13208  016268  119B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13209  01626A  B4D8               	btfsc	status,2,c
 13210  01626C  D009               	goto	l8545
 13211                           
 13212                           ; BSR set to: 0
 13213  01626E  0E00               	movlw	0
 13214  016270  0100               	movlb	0	; () banked
 13215  016272  1B98               	xorwf	___flneg@f1& (0+255),f,b
 13216  016274  0E00               	movlw	0
 13217  016276  1B99               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13218  016278  0E00               	movlw	0
 13219  01627A  1B9A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13220  01627C  0E80               	movlw	128
 13221  01627E  1B9B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13222  016280                     l8545:
 13223                           
 13224                           ; BSR set to: 0
 13225  016280  C098  F098         	movff	___flneg@f1,?___flneg
 13226  016284  C099  F099         	movff	___flneg@f1+1,?___flneg+1
 13227  016288  C09A  F09A         	movff	___flneg@f1+2,?___flneg+2
 13228  01628C  C09B  F09B         	movff	___flneg@f1+3,?___flneg+3
 13229  016290  0012               	return	
 13230  016292                     __end_of___flneg:
 13231                           	opt stack 0
 13232                           tblptru	equ	0xFF8
 13233                           tblptrh	equ	0xFF7
 13234                           tblptrl	equ	0xFF6
 13235                           tablat	equ	0xFF5
 13236                           prodh	equ	0xFF4
 13237                           prodl	equ	0xFF3
 13238                           intcon	equ	0xFF2
 13239                           postinc0	equ	0xFEE
 13240                           wreg	equ	0xFE8
 13241                           indf2	equ	0xFDF
 13242                           postinc2	equ	0xFDE
 13243                           fsr2h	equ	0xFDA
 13244                           fsr2l	equ	0xFD9
 13245                           status	equ	0xFD8
 13246                           
 13247 ;; *************** function ___flge *****************
 13248 ;; Defined at:
 13249 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;  ff1             4   17[BANK0 ] unsigned char 
 13252 ;;  ff2             4   21[BANK0 ] unsigned char 
 13253 ;; Auto vars:     Size  Location     Type
 13254 ;;		None
 13255 ;; Return value:  Size  Location     Type
 13256 ;;		None               void
 13257 ;; Registers used:
 13258 ;;		wreg, status,2, status,0
 13259 ;; Tracked objects:
 13260 ;;		On entry : 0/0
 13261 ;;		On exit  : 0/0
 13262 ;;		Unchanged: 0/0
 13263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13264 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13268 ;;Total ram usage:       12 bytes
 13269 ;; Hardware stack levels used:    1
 13270 ;; Hardware stack levels required when called:    3
 13271 ;; This function calls:
 13272 ;;		Nothing
 13273 ;; This function is called by:
 13274 ;;		_sprintf
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278                           	psect	text26
 13279  015172                     __ptext26:
 13280                           	opt stack 0
 13281  015172                     ___flge:
 13282                           	opt stack 25
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;incstack = 0
 13286  015172  0E00               	movlw	0
 13287  015174  0100               	movlb	0	; () banked
 13288  015176  1571               	andwf	___flge@ff1& (0+255),w,b
 13289  015178  0100               	movlb	0	; () banked
 13290  01517A  6F79               	movwf	??___flge& (0+255),b
 13291  01517C  0E00               	movlw	0
 13292  01517E  0100               	movlb	0	; () banked
 13293  015180  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
 13294  015182  0100               	movlb	0	; () banked
 13295  015184  6F7A               	movwf	(??___flge+1)& (0+255),b
 13296  015186  0E80               	movlw	128
 13297  015188  0100               	movlb	0	; () banked
 13298  01518A  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
 13299  01518C  0100               	movlb	0	; () banked
 13300  01518E  6F7B               	movwf	(??___flge+2)& (0+255),b
 13301  015190  0E7F               	movlw	127
 13302  015192  0100               	movlb	0	; () banked
 13303  015194  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
 13304  015196  0100               	movlb	0	; () banked
 13305  015198  6F7C               	movwf	(??___flge+3)& (0+255),b
 13306  01519A  0100               	movlb	0	; () banked
 13307  01519C  5179               	movf	??___flge& (0+255),w,b
 13308  01519E  0100               	movlb	0	; () banked
 13309  0151A0  117A               	iorwf	(??___flge+1)& (0+255),w,b
 13310  0151A2  0100               	movlb	0	; () banked
 13311  0151A4  117B               	iorwf	(??___flge+2)& (0+255),w,b
 13312  0151A6  0100               	movlb	0	; () banked
 13313  0151A8  117C               	iorwf	(??___flge+3)& (0+255),w,b
 13314  0151AA  A4D8               	btfss	status,2,c
 13315  0151AC  D009               	goto	l8523
 13316                           
 13317                           ; BSR set to: 0
 13318  0151AE  0E00               	movlw	0
 13319  0151B0  0100               	movlb	0	; () banked
 13320  0151B2  6F71               	movwf	___flge@ff1& (0+255),b
 13321  0151B4  0E00               	movlw	0
 13322  0151B6  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 13323  0151B8  0E00               	movlw	0
 13324  0151BA  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 13325  0151BC  0E00               	movlw	0
 13326  0151BE  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 13327  0151C0                     l8523:
 13328                           
 13329                           ; BSR set to: 0
 13330  0151C0  0E00               	movlw	0
 13331  0151C2  0100               	movlb	0	; () banked
 13332  0151C4  1575               	andwf	___flge@ff2& (0+255),w,b
 13333  0151C6  0100               	movlb	0	; () banked
 13334  0151C8  6F79               	movwf	??___flge& (0+255),b
 13335  0151CA  0E00               	movlw	0
 13336  0151CC  0100               	movlb	0	; () banked
 13337  0151CE  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
 13338  0151D0  0100               	movlb	0	; () banked
 13339  0151D2  6F7A               	movwf	(??___flge+1)& (0+255),b
 13340  0151D4  0E80               	movlw	128
 13341  0151D6  0100               	movlb	0	; () banked
 13342  0151D8  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
 13343  0151DA  0100               	movlb	0	; () banked
 13344  0151DC  6F7B               	movwf	(??___flge+2)& (0+255),b
 13345  0151DE  0E7F               	movlw	127
 13346  0151E0  0100               	movlb	0	; () banked
 13347  0151E2  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
 13348  0151E4  0100               	movlb	0	; () banked
 13349  0151E6  6F7C               	movwf	(??___flge+3)& (0+255),b
 13350  0151E8  0100               	movlb	0	; () banked
 13351  0151EA  5179               	movf	??___flge& (0+255),w,b
 13352  0151EC  0100               	movlb	0	; () banked
 13353  0151EE  117A               	iorwf	(??___flge+1)& (0+255),w,b
 13354  0151F0  0100               	movlb	0	; () banked
 13355  0151F2  117B               	iorwf	(??___flge+2)& (0+255),w,b
 13356  0151F4  0100               	movlb	0	; () banked
 13357  0151F6  117C               	iorwf	(??___flge+3)& (0+255),w,b
 13358  0151F8  A4D8               	btfss	status,2,c
 13359  0151FA  D009               	goto	l8527
 13360                           
 13361                           ; BSR set to: 0
 13362  0151FC  0E00               	movlw	0
 13363  0151FE  0100               	movlb	0	; () banked
 13364  015200  6F75               	movwf	___flge@ff2& (0+255),b
 13365  015202  0E00               	movlw	0
 13366  015204  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 13367  015206  0E00               	movlw	0
 13368  015208  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 13369  01520A  0E00               	movlw	0
 13370  01520C  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 13371  01520E                     l8527:
 13372                           
 13373                           ; BSR set to: 0
 13374  01520E  0100               	movlb	0	; () banked
 13375  015210  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
 13376  015212  D026               	goto	l8531
 13377                           
 13378                           ; BSR set to: 0
 13379  015214  C071  F079         	movff	___flge@ff1,??___flge
 13380  015218  C072  F07A         	movff	___flge@ff1+1,??___flge+1
 13381  01521C  C073  F07B         	movff	___flge@ff1+2,??___flge+2
 13382  015220  C074  F07C         	movff	___flge@ff1+3,??___flge+3
 13383  015224  0100               	movlb	0	; () banked
 13384  015226  1F79               	comf	??___flge& (0+255),f,b
 13385  015228  1F7A               	comf	(??___flge+1)& (0+255),f,b
 13386  01522A  1F7B               	comf	(??___flge+2)& (0+255),f,b
 13387  01522C  1F7C               	comf	(??___flge+3)& (0+255),f,b
 13388  01522E  2B79               	incf	??___flge& (0+255),f,b
 13389  015230  0E00               	movlw	0
 13390  015232  237A               	addwfc	(??___flge+1)& (0+255),f,b
 13391  015234  237B               	addwfc	(??___flge+2)& (0+255),f,b
 13392  015236  237C               	addwfc	(??___flge+3)& (0+255),f,b
 13393  015238  0E00               	movlw	0
 13394  01523A  0100               	movlb	0	; () banked
 13395  01523C  2579               	addwf	??___flge& (0+255),w,b
 13396  01523E  0100               	movlb	0	; () banked
 13397  015240  6F71               	movwf	___flge@ff1& (0+255),b
 13398  015242  0E00               	movlw	0
 13399  015244  0100               	movlb	0	; () banked
 13400  015246  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13401  015248  0100               	movlb	0	; () banked
 13402  01524A  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 13403  01524C  0E00               	movlw	0
 13404  01524E  0100               	movlb	0	; () banked
 13405  015250  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13406  015252  0100               	movlb	0	; () banked
 13407  015254  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 13408  015256  0E80               	movlw	128
 13409  015258  0100               	movlb	0	; () banked
 13410  01525A  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13411  01525C  0100               	movlb	0	; () banked
 13412  01525E  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 13413  015260                     l8531:
 13414                           
 13415                           ; BSR set to: 0
 13416  015260  0100               	movlb	0	; () banked
 13417  015262  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
 13418  015264  D026               	goto	l1264
 13419                           
 13420                           ; BSR set to: 0
 13421  015266  C075  F079         	movff	___flge@ff2,??___flge
 13422  01526A  C076  F07A         	movff	___flge@ff2+1,??___flge+1
 13423  01526E  C077  F07B         	movff	___flge@ff2+2,??___flge+2
 13424  015272  C078  F07C         	movff	___flge@ff2+3,??___flge+3
 13425  015276  0100               	movlb	0	; () banked
 13426  015278  1F79               	comf	??___flge& (0+255),f,b
 13427  01527A  1F7A               	comf	(??___flge+1)& (0+255),f,b
 13428  01527C  1F7B               	comf	(??___flge+2)& (0+255),f,b
 13429  01527E  1F7C               	comf	(??___flge+3)& (0+255),f,b
 13430  015280  2B79               	incf	??___flge& (0+255),f,b
 13431  015282  0E00               	movlw	0
 13432  015284  237A               	addwfc	(??___flge+1)& (0+255),f,b
 13433  015286  237B               	addwfc	(??___flge+2)& (0+255),f,b
 13434  015288  237C               	addwfc	(??___flge+3)& (0+255),f,b
 13435  01528A  0E00               	movlw	0
 13436  01528C  0100               	movlb	0	; () banked
 13437  01528E  2579               	addwf	??___flge& (0+255),w,b
 13438  015290  0100               	movlb	0	; () banked
 13439  015292  6F75               	movwf	___flge@ff2& (0+255),b
 13440  015294  0E00               	movlw	0
 13441  015296  0100               	movlb	0	; () banked
 13442  015298  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13443  01529A  0100               	movlb	0	; () banked
 13444  01529C  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 13445  01529E  0E00               	movlw	0
 13446  0152A0  0100               	movlb	0	; () banked
 13447  0152A2  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13448  0152A4  0100               	movlb	0	; () banked
 13449  0152A6  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 13450  0152A8  0E80               	movlw	128
 13451  0152AA  0100               	movlb	0	; () banked
 13452  0152AC  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13453  0152AE  0100               	movlb	0	; () banked
 13454  0152B0  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 13455  0152B2                     l1264:
 13456                           
 13457                           ; BSR set to: 0
 13458  0152B2  0E00               	movlw	0
 13459  0152B4  0100               	movlb	0	; () banked
 13460  0152B6  1B71               	xorwf	___flge@ff1& (0+255),f,b
 13461  0152B8  0E00               	movlw	0
 13462  0152BA  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13463  0152BC  0E00               	movlw	0
 13464  0152BE  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13465  0152C0  0E80               	movlw	128
 13466  0152C2  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13467  0152C4  0E00               	movlw	0
 13468  0152C6  0100               	movlb	0	; () banked
 13469  0152C8  1B75               	xorwf	___flge@ff2& (0+255),f,b
 13470  0152CA  0E00               	movlw	0
 13471  0152CC  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13472  0152CE  0E00               	movlw	0
 13473  0152D0  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13474  0152D2  0E80               	movlw	128
 13475  0152D4  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13476  0152D6  0100               	movlb	0	; () banked
 13477  0152D8  5175               	movf	___flge@ff2& (0+255),w,b
 13478  0152DA  0100               	movlb	0	; () banked
 13479  0152DC  5D71               	subwf	___flge@ff1& (0+255),w,b
 13480  0152DE  0100               	movlb	0	; () banked
 13481  0152E0  5176               	movf	(___flge@ff2+1)& (0+255),w,b
 13482  0152E2  0100               	movlb	0	; () banked
 13483  0152E4  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13484  0152E6  0100               	movlb	0	; () banked
 13485  0152E8  5177               	movf	(___flge@ff2+2)& (0+255),w,b
 13486  0152EA  0100               	movlb	0	; () banked
 13487  0152EC  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13488  0152EE  0100               	movlb	0	; () banked
 13489  0152F0  5178               	movf	(___flge@ff2+3)& (0+255),w,b
 13490  0152F2  0100               	movlb	0	; () banked
 13491  0152F4  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13492  0152F6  B0D8               	btfsc	status,0,c
 13493  0152F8  D002               	goto	l8537
 13494                           
 13495                           ; BSR set to: 0
 13496  0152FA  90D8               	bcf	status,0,c
 13497  0152FC  0012               	return	
 13498  0152FE                     l8537:
 13499                           
 13500                           ; BSR set to: 0
 13501  0152FE  80D8               	bsf	status,0,c
 13502                           
 13503                           ; BSR set to: 0
 13504  015300  0012               	return	
 13505  015302                     __end_of___flge:
 13506                           	opt stack 0
 13507                           tblptru	equ	0xFF8
 13508                           tblptrh	equ	0xFF7
 13509                           tblptrl	equ	0xFF6
 13510                           tablat	equ	0xFF5
 13511                           prodh	equ	0xFF4
 13512                           prodl	equ	0xFF3
 13513                           intcon	equ	0xFF2
 13514                           postinc0	equ	0xFEE
 13515                           wreg	equ	0xFE8
 13516                           indf2	equ	0xFDF
 13517                           postinc2	equ	0xFDE
 13518                           fsr2h	equ	0xFDA
 13519                           fsr2l	equ	0xFD9
 13520                           status	equ	0xFD8
 13521                           
 13522 ;; *************** function ___fldiv *****************
 13523 ;; Defined at:
 13524 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;  b               4   31[BANK0 ] unsigned char 
 13527 ;;  a               4   35[BANK0 ] unsigned char 
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;  grs             4   50[BANK0 ] unsigned long 
 13530 ;;  rem             4   44[BANK0 ] unsigned long 
 13531 ;;  new_exp         2   48[BANK0 ] int 
 13532 ;;  aexp            1   55[BANK0 ] unsigned char 
 13533 ;;  bexp            1   54[BANK0 ] unsigned char 
 13534 ;;  sign            1   43[BANK0 ] unsigned char 
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  4   31[BANK0 ] unsigned char 
 13537 ;; Registers used:
 13538 ;;		wreg, status,2, status,0
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13544 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13545 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;Total ram usage:       25 bytes
 13549 ;; Hardware stack levels used:    1
 13550 ;; Hardware stack levels required when called:    3
 13551 ;; This function calls:
 13552 ;;		Nothing
 13553 ;; This function is called by:
 13554 ;;		_LCD_Handler
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text27
 13559  013C82                     __ptext27:
 13560                           	opt stack 0
 13561  013C82                     ___fldiv:
 13562                           	opt stack 26
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;incstack = 0
 13566  013C82  0100               	movlb	0	; () banked
 13567  013C84  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13568  013C86  0B80               	andlw	128
 13569  013C88  0100               	movlb	0	; () banked
 13570  013C8A  6F8B               	movwf	___fldiv@sign& (0+255),b
 13571  013C8C  0100               	movlb	0	; () banked
 13572  013C8E  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13573  013C90  2582               	addwf	(___fldiv@b+3)& (0+255),w,b
 13574  013C92  0100               	movlb	0	; () banked
 13575  013C94  6F96               	movwf	___fldiv@bexp& (0+255),b
 13576                           
 13577                           ; BSR set to: 0
 13578  013C96  0100               	movlb	0	; () banked
 13579  013C98  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 13580  013C9A  D002               	goto	l6721
 13581                           
 13582                           ; BSR set to: 0
 13583  013C9C  0100               	movlb	0	; () banked
 13584  013C9E  8196               	bsf	___fldiv@bexp& (0+255),0,b
 13585  013CA0                     l6721:
 13586                           
 13587                           ; BSR set to: 0
 13588  013CA0  0100               	movlb	0	; () banked
 13589  013CA2  5196               	movf	___fldiv@bexp& (0+255),w,b
 13590  013CA4  0100               	movlb	0	; () banked
 13591  013CA6  B4D8               	btfsc	status,2,c
 13592  013CA8  D012               	goto	l6731
 13593                           
 13594                           ; BSR set to: 0
 13595  013CAA  0100               	movlb	0	; () banked
 13596  013CAC  2996               	incf	___fldiv@bexp& (0+255),w,b
 13597  013CAE  A4D8               	btfss	status,2,c
 13598  013CB0  D009               	goto	l6727
 13599                           
 13600                           ; BSR set to: 0
 13601  013CB2  0E00               	movlw	0
 13602  013CB4  0100               	movlb	0	; () banked
 13603  013CB6  6F7F               	movwf	___fldiv@b& (0+255),b
 13604  013CB8  0E00               	movlw	0
 13605  013CBA  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13606  013CBC  0E00               	movlw	0
 13607  013CBE  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13608  013CC0  0E00               	movlw	0
 13609  013CC2  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13610  013CC4                     l6727:
 13611                           
 13612                           ; BSR set to: 0
 13613  013CC4  0100               	movlb	0	; () banked
 13614  013CC6  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 13615                           
 13616                           ; BSR set to: 0
 13617  013CC8  0E00               	movlw	0
 13618  013CCA  0100               	movlb	0	; () banked
 13619  013CCC  D008               	goto	L15
 13620  013CCE                     l6731:
 13621                           
 13622                           ; BSR set to: 0
 13623  013CCE  0E00               	movlw	0
 13624  013CD0  0100               	movlb	0	; () banked
 13625  013CD2  6F7F               	movwf	___fldiv@b& (0+255),b
 13626  013CD4  0E00               	movlw	0
 13627  013CD6  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13628  013CD8  0E00               	movlw	0
 13629  013CDA  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13630  013CDC  0E00               	movlw	0
 13631  013CDE                     L15:
 13632  013CDE  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13633                           
 13634                           ; BSR set to: 0
 13635                           
 13636                           ; BSR set to: 0
 13637  013CE0  0100               	movlb	0	; () banked
 13638  013CE2  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13639  013CE4  0B80               	andlw	128
 13640  013CE6  0100               	movlb	0	; () banked
 13641  013CE8  1B8B               	xorwf	___fldiv@sign& (0+255),f,b
 13642                           
 13643                           ; BSR set to: 0
 13644  013CEA  0100               	movlb	0	; () banked
 13645  013CEC  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13646  013CEE  2586               	addwf	(___fldiv@a+3)& (0+255),w,b
 13647  013CF0  0100               	movlb	0	; () banked
 13648  013CF2  6F97               	movwf	___fldiv@aexp& (0+255),b
 13649                           
 13650                           ; BSR set to: 0
 13651  013CF4  0100               	movlb	0	; () banked
 13652  013CF6  AF85               	btfss	(___fldiv@a+2)& (0+255),7,b
 13653  013CF8  D002               	goto	l6741
 13654                           
 13655                           ; BSR set to: 0
 13656  013CFA  0100               	movlb	0	; () banked
 13657  013CFC  8197               	bsf	___fldiv@aexp& (0+255),0,b
 13658  013CFE                     l6741:
 13659                           
 13660                           ; BSR set to: 0
 13661  013CFE  0100               	movlb	0	; () banked
 13662  013D00  5197               	movf	___fldiv@aexp& (0+255),w,b
 13663  013D02  0100               	movlb	0	; () banked
 13664  013D04  B4D8               	btfsc	status,2,c
 13665  013D06  D012               	goto	l6751
 13666                           
 13667                           ; BSR set to: 0
 13668  013D08  0100               	movlb	0	; () banked
 13669  013D0A  2997               	incf	___fldiv@aexp& (0+255),w,b
 13670  013D0C  A4D8               	btfss	status,2,c
 13671  013D0E  D009               	goto	l6747
 13672                           
 13673                           ; BSR set to: 0
 13674  013D10  0E00               	movlw	0
 13675  013D12  0100               	movlb	0	; () banked
 13676  013D14  6F83               	movwf	___fldiv@a& (0+255),b
 13677  013D16  0E00               	movlw	0
 13678  013D18  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 13679  013D1A  0E00               	movlw	0
 13680  013D1C  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 13681  013D1E  0E00               	movlw	0
 13682  013D20  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 13683  013D22                     l6747:
 13684                           
 13685                           ; BSR set to: 0
 13686  013D22  0100               	movlb	0	; () banked
 13687  013D24  8F85               	bsf	(___fldiv@a+2)& (0+255),7,b
 13688                           
 13689                           ; BSR set to: 0
 13690  013D26  0E00               	movlw	0
 13691  013D28  0100               	movlb	0	; () banked
 13692  013D2A  D008               	goto	L16
 13693  013D2C                     l6751:
 13694                           
 13695                           ; BSR set to: 0
 13696  013D2C  0E00               	movlw	0
 13697  013D2E  0100               	movlb	0	; () banked
 13698  013D30  6F83               	movwf	___fldiv@a& (0+255),b
 13699  013D32  0E00               	movlw	0
 13700  013D34  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 13701  013D36  0E00               	movlw	0
 13702  013D38  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 13703  013D3A  0E00               	movlw	0
 13704  013D3C                     L16:
 13705  013D3C  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 13706                           
 13707                           ; BSR set to: 0
 13708                           
 13709                           ; BSR set to: 0
 13710  013D3E  0100               	movlb	0	; () banked
 13711  013D40  5183               	movf	___fldiv@a& (0+255),w,b
 13712  013D42  0100               	movlb	0	; () banked
 13713  013D44  1184               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13714  013D46  0100               	movlb	0	; () banked
 13715  013D48  1185               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13716  013D4A  0100               	movlb	0	; () banked
 13717  013D4C  1186               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13718  013D4E  A4D8               	btfss	status,2,c
 13719  013D50  D017               	goto	l6763
 13720                           
 13721                           ; BSR set to: 0
 13722  013D52  0E00               	movlw	0
 13723  013D54  0100               	movlb	0	; () banked
 13724  013D56  6F7F               	movwf	___fldiv@b& (0+255),b
 13725  013D58  0E00               	movlw	0
 13726  013D5A  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13727  013D5C  0E00               	movlw	0
 13728  013D5E  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13729  013D60  0E00               	movlw	0
 13730  013D62  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13731                           
 13732                           ; BSR set to: 0
 13733  013D64  0100               	movlb	0	; () banked
 13734  013D66  0E80               	movlw	128
 13735  013D68  1381               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13736  013D6A  0E7F               	movlw	127
 13737  013D6C  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13738                           
 13739                           ; BSR set to: 0
 13740  013D6E  C07F  F07F         	movff	___fldiv@b,?___fldiv
 13741  013D72  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 13742  013D76  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 13743  013D7A  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 13744                           
 13745                           ; BSR set to: 0
 13746  013D7E  0012               	return	
 13747  013D80                     l6763:
 13748                           
 13749                           ; BSR set to: 0
 13750  013D80  0100               	movlb	0	; () banked
 13751  013D82  5196               	movf	___fldiv@bexp& (0+255),w,b
 13752  013D84  0100               	movlb	0	; () banked
 13753  013D86  A4D8               	btfss	status,2,c
 13754  013D88  D012               	goto	l6771
 13755                           
 13756                           ; BSR set to: 0
 13757  013D8A  0E00               	movlw	0
 13758  013D8C  0100               	movlb	0	; () banked
 13759  013D8E  6F7F               	movwf	___fldiv@b& (0+255),b
 13760  013D90  0E00               	movlw	0
 13761  013D92  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13762  013D94  0E00               	movlw	0
 13763  013D96  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13764  013D98  0E00               	movlw	0
 13765  013D9A  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13766                           
 13767                           ; BSR set to: 0
 13768  013D9C  C07F  F07F         	movff	___fldiv@b,?___fldiv
 13769  013DA0  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 13770  013DA4  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 13771  013DA8  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 13772                           
 13773                           ; BSR set to: 0
 13774  013DAC  0012               	return	
 13775  013DAE                     l6771:
 13776                           
 13777                           ; BSR set to: 0
 13778  013DAE  0100               	movlb	0	; () banked
 13779  013DB0  5197               	movf	___fldiv@aexp& (0+255),w,b
 13780  013DB2  0100               	movlb	0	; () banked
 13781  013DB4  6F87               	movwf	??___fldiv& (0+255),b
 13782  013DB6  6B88               	clrf	(??___fldiv+1)& (0+255),b
 13783  013DB8  0100               	movlb	0	; () banked
 13784  013DBA  1F87               	comf	??___fldiv& (0+255),f,b
 13785  013DBC  1F88               	comf	(??___fldiv+1)& (0+255),f,b
 13786  013DBE  4B87               	infsnz	??___fldiv& (0+255),f,b
 13787  013DC0  2B88               	incf	(??___fldiv+1)& (0+255),f,b
 13788  013DC2  0100               	movlb	0	; () banked
 13789  013DC4  5196               	movf	___fldiv@bexp& (0+255),w,b
 13790  013DC6  0100               	movlb	0	; () banked
 13791  013DC8  6F89               	movwf	(??___fldiv+2)& (0+255),b
 13792  013DCA  6B8A               	clrf	(??___fldiv+3)& (0+255),b
 13793  013DCC  0100               	movlb	0	; () banked
 13794  013DCE  5187               	movf	??___fldiv& (0+255),w,b
 13795  013DD0  0100               	movlb	0	; () banked
 13796  013DD2  2789               	addwf	(??___fldiv+2)& (0+255),f,b
 13797  013DD4  0100               	movlb	0	; () banked
 13798  013DD6  5188               	movf	(??___fldiv+1)& (0+255),w,b
 13799  013DD8  0100               	movlb	0	; () banked
 13800  013DDA  238A               	addwfc	(??___fldiv+3)& (0+255),f,b
 13801  013DDC  0E7F               	movlw	127
 13802  013DDE  0100               	movlb	0	; () banked
 13803  013DE0  2589               	addwf	(??___fldiv+2)& (0+255),w,b
 13804  013DE2  0100               	movlb	0	; () banked
 13805  013DE4  6F90               	movwf	___fldiv@new_exp& (0+255),b
 13806  013DE6  0E00               	movlw	0
 13807  013DE8  0100               	movlb	0	; () banked
 13808  013DEA  218A               	addwfc	(??___fldiv+3)& (0+255),w,b
 13809  013DEC  0100               	movlb	0	; () banked
 13810  013DEE  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13811                           
 13812                           ; BSR set to: 0
 13813  013DF0  C07F  F08C         	movff	___fldiv@b,___fldiv@rem
 13814  013DF4  C080  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
 13815  013DF8  C081  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
 13816  013DFC  C082  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
 13817                           
 13818                           ; BSR set to: 0
 13819  013E00  0E00               	movlw	0
 13820  013E02  0100               	movlb	0	; () banked
 13821  013E04  6F7F               	movwf	___fldiv@b& (0+255),b
 13822  013E06  0E00               	movlw	0
 13823  013E08  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13824  013E0A  0E00               	movlw	0
 13825  013E0C  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13826  013E0E  0E00               	movlw	0
 13827  013E10  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13828                           
 13829                           ; BSR set to: 0
 13830  013E12  0E00               	movlw	0
 13831  013E14  0100               	movlb	0	; () banked
 13832  013E16  6F92               	movwf	___fldiv@grs& (0+255),b
 13833  013E18  0E00               	movlw	0
 13834  013E1A  6F93               	movwf	(___fldiv@grs+1)& (0+255),b
 13835  013E1C  0E00               	movlw	0
 13836  013E1E  6F94               	movwf	(___fldiv@grs+2)& (0+255),b
 13837  013E20  0E00               	movlw	0
 13838  013E22  6F95               	movwf	(___fldiv@grs+3)& (0+255),b
 13839                           
 13840                           ; BSR set to: 0
 13841  013E24  0E00               	movlw	0
 13842  013E26  0100               	movlb	0	; () banked
 13843  013E28  6F97               	movwf	___fldiv@aexp& (0+255),b
 13844  013E2A  D042               	goto	l1597
 13845  013E2C                     l6781:
 13846                           
 13847                           ; BSR set to: 0
 13848  013E2C  0100               	movlb	0	; () banked
 13849  013E2E  5197               	movf	___fldiv@aexp& (0+255),w,b
 13850  013E30  0100               	movlb	0	; () banked
 13851  013E32  B4D8               	btfsc	status,2,c
 13852  013E34  D017               	goto	l6789
 13853                           
 13854                           ; BSR set to: 0
 13855  013E36  0100               	movlb	0	; () banked
 13856  013E38  90D8               	bcf	status,0,c
 13857  013E3A  378C               	rlcf	___fldiv@rem& (0+255),f,b
 13858  013E3C  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13859  013E3E  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13860  013E40  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13861  013E42  0100               	movlb	0	; () banked
 13862  013E44  90D8               	bcf	status,0,c
 13863  013E46  377F               	rlcf	___fldiv@b& (0+255),f,b
 13864  013E48  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13865  013E4A  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13866  013E4C  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13867                           
 13868                           ; BSR set to: 0
 13869  013E4E  0100               	movlb	0	; () banked
 13870  013E50  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13871  013E52  D002               	goto	l1600
 13872                           
 13873                           ; BSR set to: 0
 13874  013E54  0100               	movlb	0	; () banked
 13875  013E56  817F               	bsf	___fldiv@b& (0+255),0,b
 13876  013E58                     l1600:
 13877                           
 13878                           ; BSR set to: 0
 13879  013E58  0100               	movlb	0	; () banked
 13880  013E5A  90D8               	bcf	status,0,c
 13881  013E5C  3792               	rlcf	___fldiv@grs& (0+255),f,b
 13882  013E5E  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13883  013E60  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13884  013E62  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13885  013E64                     l6789:
 13886                           
 13887                           ; BSR set to: 0
 13888  013E64  0100               	movlb	0	; () banked
 13889  013E66  5183               	movf	___fldiv@a& (0+255),w,b
 13890  013E68  0100               	movlb	0	; () banked
 13891  013E6A  5D8C               	subwf	___fldiv@rem& (0+255),w,b
 13892  013E6C  0100               	movlb	0	; () banked
 13893  013E6E  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 13894  013E70  0100               	movlb	0	; () banked
 13895  013E72  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13896  013E74  0100               	movlb	0	; () banked
 13897  013E76  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 13898  013E78  0100               	movlb	0	; () banked
 13899  013E7A  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13900  013E7C  0100               	movlb	0	; () banked
 13901  013E7E  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13902  013E80  0100               	movlb	0	; () banked
 13903  013E82  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13904  013E84  A0D8               	btfss	status,0,c
 13905  013E86  D012               	goto	l6795
 13906                           
 13907                           ; BSR set to: 0
 13908  013E88  0100               	movlb	0	; () banked
 13909  013E8A  8D95               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13910                           
 13911                           ; BSR set to: 0
 13912  013E8C  0100               	movlb	0	; () banked
 13913  013E8E  5183               	movf	___fldiv@a& (0+255),w,b
 13914  013E90  0100               	movlb	0	; () banked
 13915  013E92  5F8C               	subwf	___fldiv@rem& (0+255),f,b
 13916  013E94  0100               	movlb	0	; () banked
 13917  013E96  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 13918  013E98  0100               	movlb	0	; () banked
 13919  013E9A  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13920  013E9C  0100               	movlb	0	; () banked
 13921  013E9E  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 13922  013EA0  0100               	movlb	0	; () banked
 13923  013EA2  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13924  013EA4  0100               	movlb	0	; () banked
 13925  013EA6  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13926  013EA8  0100               	movlb	0	; () banked
 13927  013EAA  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13928  013EAC                     l6795:
 13929                           
 13930                           ; BSR set to: 0
 13931  013EAC  0100               	movlb	0	; () banked
 13932  013EAE  2B97               	incf	___fldiv@aexp& (0+255),f,b
 13933  013EB0                     l1597:
 13934                           
 13935                           ; BSR set to: 0
 13936  013EB0  0E19               	movlw	25
 13937  013EB2  0100               	movlb	0	; () banked
 13938  013EB4  6597               	cpfsgt	___fldiv@aexp& (0+255),b
 13939  013EB6  D7BA               	goto	l6781
 13940                           
 13941                           ; BSR set to: 0
 13942                           
 13943                           ; BSR set to: 0
 13944  013EB8  0100               	movlb	0	; () banked
 13945  013EBA  518C               	movf	___fldiv@rem& (0+255),w,b
 13946  013EBC  0100               	movlb	0	; () banked
 13947  013EBE  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13948  013EC0  0100               	movlb	0	; () banked
 13949  013EC2  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13950  013EC4  0100               	movlb	0	; () banked
 13951  013EC6  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13952  013EC8  B4D8               	btfsc	status,2,c
 13953  013ECA  D018               	goto	l6807
 13954                           
 13955                           ; BSR set to: 0
 13956  013ECC  0100               	movlb	0	; () banked
 13957  013ECE  8192               	bsf	___fldiv@grs& (0+255),0,b
 13958                           
 13959                           ; BSR set to: 0
 13960  013ED0  D015               	goto	l6807
 13961  013ED2                     l6801:
 13962                           
 13963                           ; BSR set to: 0
 13964  013ED2  0100               	movlb	0	; () banked
 13965  013ED4  90D8               	bcf	status,0,c
 13966  013ED6  377F               	rlcf	___fldiv@b& (0+255),f,b
 13967  013ED8  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13968  013EDA  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13969  013EDC  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13970                           
 13971                           ; BSR set to: 0
 13972  013EDE  0100               	movlb	0	; () banked
 13973  013EE0  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13974  013EE2  D002               	goto	l1606
 13975                           
 13976                           ; BSR set to: 0
 13977  013EE4  0100               	movlb	0	; () banked
 13978  013EE6  817F               	bsf	___fldiv@b& (0+255),0,b
 13979  013EE8                     l1606:
 13980                           
 13981                           ; BSR set to: 0
 13982  013EE8  0100               	movlb	0	; () banked
 13983  013EEA  90D8               	bcf	status,0,c
 13984  013EEC  3792               	rlcf	___fldiv@grs& (0+255),f,b
 13985  013EEE  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13986  013EF0  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13987  013EF2  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13988  013EF4  0100               	movlb	0	; () banked
 13989  013EF6  0790               	decf	___fldiv@new_exp& (0+255),f,b
 13990  013EF8  A0D8               	btfss	status,0,c
 13991  013EFA  0791               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13992  013EFC                     l6807:
 13993                           
 13994                           ; BSR set to: 0
 13995  013EFC  0100               	movlb	0	; () banked
 13996  013EFE  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 13997  013F00  D7E8               	goto	l6801
 13998                           
 13999                           ; BSR set to: 0
 14000                           
 14001                           ; BSR set to: 0
 14002  013F02  0E00               	movlw	0
 14003  013F04  0100               	movlb	0	; () banked
 14004  013F06  6F97               	movwf	___fldiv@aexp& (0+255),b
 14005                           
 14006                           ; BSR set to: 0
 14007  013F08  0100               	movlb	0	; () banked
 14008  013F0A  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14009  013F0C  D024               	goto	l1608
 14010                           
 14011                           ; BSR set to: 0
 14012  013F0E  0EFF               	movlw	255
 14013  013F10  0100               	movlb	0	; () banked
 14014  013F12  1592               	andwf	___fldiv@grs& (0+255),w,b
 14015  013F14  0100               	movlb	0	; () banked
 14016  013F16  6F87               	movwf	??___fldiv& (0+255),b
 14017  013F18  0EFF               	movlw	255
 14018  013F1A  0100               	movlb	0	; () banked
 14019  013F1C  1593               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14020  013F1E  0100               	movlb	0	; () banked
 14021  013F20  6F88               	movwf	(??___fldiv+1)& (0+255),b
 14022  013F22  0EFF               	movlw	255
 14023  013F24  0100               	movlb	0	; () banked
 14024  013F26  1594               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14025  013F28  0100               	movlb	0	; () banked
 14026  013F2A  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14027  013F2C  0E7F               	movlw	127
 14028  013F2E  0100               	movlb	0	; () banked
 14029  013F30  1595               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14030  013F32  0100               	movlb	0	; () banked
 14031  013F34  6F8A               	movwf	(??___fldiv+3)& (0+255),b
 14032  013F36  0100               	movlb	0	; () banked
 14033  013F38  5187               	movf	??___fldiv& (0+255),w,b
 14034  013F3A  0100               	movlb	0	; () banked
 14035  013F3C  1188               	iorwf	(??___fldiv+1)& (0+255),w,b
 14036  013F3E  0100               	movlb	0	; () banked
 14037  013F40  1189               	iorwf	(??___fldiv+2)& (0+255),w,b
 14038  013F42  0100               	movlb	0	; () banked
 14039  013F44  118A               	iorwf	(??___fldiv+3)& (0+255),w,b
 14040  013F46  A4D8               	btfss	status,2,c
 14041  013F48  D003               	goto	l6817
 14042                           
 14043                           ; BSR set to: 0
 14044                           
 14045                           ; BSR set to: 0
 14046  013F4A  0100               	movlb	0	; () banked
 14047  013F4C  A17F               	btfss	___fldiv@b& (0+255),0,b
 14048  013F4E  D003               	goto	l1608
 14049  013F50                     l6817:
 14050                           
 14051                           ; BSR set to: 0
 14052  013F50  0E01               	movlw	1
 14053  013F52  0100               	movlb	0	; () banked
 14054  013F54  6F97               	movwf	___fldiv@aexp& (0+255),b
 14055  013F56                     l1608:
 14056                           
 14057                           ; BSR set to: 0
 14058  013F56  0100               	movlb	0	; () banked
 14059  013F58  5197               	movf	___fldiv@aexp& (0+255),w,b
 14060  013F5A  0100               	movlb	0	; () banked
 14061  013F5C  B4D8               	btfsc	status,2,c
 14062  013F5E  D023               	goto	l6827
 14063                           
 14064                           ; BSR set to: 0
 14065  013F60  0E01               	movlw	1
 14066  013F62  0100               	movlb	0	; () banked
 14067  013F64  277F               	addwf	___fldiv@b& (0+255),f,b
 14068  013F66  0E00               	movlw	0
 14069  013F68  2380               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14070  013F6A  2381               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14071  013F6C  2382               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14072                           
 14073                           ; BSR set to: 0
 14074  013F6E  0100               	movlb	0	; () banked
 14075  013F70  A182               	btfss	(___fldiv@b+3)& (0+255),0,b
 14076  013F72  D019               	goto	l6827
 14077                           
 14078                           ; BSR set to: 0
 14079  013F74  C07F  F087         	movff	___fldiv@b,??___fldiv
 14080  013F78  C080  F088         	movff	___fldiv@b+1,??___fldiv+1
 14081  013F7C  C081  F089         	movff	___fldiv@b+2,??___fldiv+2
 14082  013F80  C082  F08A         	movff	___fldiv@b+3,??___fldiv+3
 14083  013F84  0100               	movlb	0	; () banked
 14084  013F86  358A               	rlcf	(??___fldiv+3)& (0+255),w,b
 14085  013F88  338A               	rrcf	(??___fldiv+3)& (0+255),f,b
 14086  013F8A  3389               	rrcf	(??___fldiv+2)& (0+255),f,b
 14087  013F8C  3388               	rrcf	(??___fldiv+1)& (0+255),f,b
 14088  013F8E  3387               	rrcf	??___fldiv& (0+255),f,b
 14089  013F90  C087  F07F         	movff	??___fldiv,___fldiv@b
 14090  013F94  C088  F080         	movff	??___fldiv+1,___fldiv@b+1
 14091  013F98  C089  F081         	movff	??___fldiv+2,___fldiv@b+2
 14092  013F9C  C08A  F082         	movff	??___fldiv+3,___fldiv@b+3
 14093                           
 14094                           ; BSR set to: 0
 14095  013FA0  0100               	movlb	0	; () banked
 14096  013FA2  4B90               	infsnz	___fldiv@new_exp& (0+255),f,b
 14097  013FA4  2B91               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14098  013FA6                     l6827:
 14099                           
 14100                           ; BSR set to: 0
 14101  013FA6  0100               	movlb	0	; () banked
 14102  013FA8  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14103  013FAA  D014               	goto	l6831
 14104  013FAC  0100               	movlb	0	; () banked
 14105  013FAE  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14106  013FB0  E104               	bnz	u8600
 14107  013FB2  0100               	movlb	0	; () banked
 14108  013FB4  2990               	incf	___fldiv@new_exp& (0+255),w,b
 14109  013FB6  A0D8               	btfss	status,0,c
 14110  013FB8  D00D               	goto	l6831
 14111  013FBA                     u8600:
 14112                           
 14113                           ; BSR set to: 0
 14114  013FBA  0E00               	movlw	0
 14115  013FBC  0100               	movlb	0	; () banked
 14116  013FBE  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14117  013FC0  6990               	setf	___fldiv@new_exp& (0+255),b
 14118  013FC2  0E00               	movlw	0
 14119  013FC4  0100               	movlb	0	; () banked
 14120  013FC6  6F7F               	movwf	___fldiv@b& (0+255),b
 14121  013FC8  0E00               	movlw	0
 14122  013FCA  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14123  013FCC  0E00               	movlw	0
 14124  013FCE  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14125  013FD0  0E00               	movlw	0
 14126  013FD2  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14127  013FD4                     l6831:
 14128                           
 14129                           ; BSR set to: 0
 14130  013FD4  0100               	movlb	0	; () banked
 14131  013FD6  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14132  013FD8  D007               	goto	l6833
 14133  013FDA  0100               	movlb	0	; () banked
 14134  013FDC  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14135  013FDE  E115               	bnz	l6835
 14136  013FE0  0100               	movlb	0	; () banked
 14137  013FE2  0590               	decf	___fldiv@new_exp& (0+255),w,b
 14138  013FE4  B0D8               	btfsc	status,0,c
 14139  013FE6  D011               	goto	l6835
 14140  013FE8                     l6833:
 14141                           
 14142                           ; BSR set to: 0
 14143  013FE8  0E00               	movlw	0
 14144  013FEA  0100               	movlb	0	; () banked
 14145  013FEC  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14146  013FEE  0E00               	movlw	0
 14147  013FF0  6F90               	movwf	___fldiv@new_exp& (0+255),b
 14148  013FF2  0E00               	movlw	0
 14149  013FF4  0100               	movlb	0	; () banked
 14150  013FF6  6F7F               	movwf	___fldiv@b& (0+255),b
 14151  013FF8  0E00               	movlw	0
 14152  013FFA  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14153  013FFC  0E00               	movlw	0
 14154  013FFE  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14155  014000  0E00               	movlw	0
 14156  014002  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14157  014004  0E00               	movlw	0
 14158  014006  0100               	movlb	0	; () banked
 14159  014008  6F8B               	movwf	___fldiv@sign& (0+255),b
 14160  01400A                     l6835:
 14161                           
 14162                           ; BSR set to: 0
 14163  01400A  C090  F096         	movff	___fldiv@new_exp,___fldiv@bexp
 14164                           
 14165                           ; BSR set to: 0
 14166  01400E  0100               	movlb	0	; () banked
 14167  014010  A196               	btfss	___fldiv@bexp& (0+255),0,b
 14168  014012  D003               	goto	l6841
 14169                           
 14170                           ; BSR set to: 0
 14171  014014  0100               	movlb	0	; () banked
 14172  014016  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 14173  014018  D002               	goto	l6843
 14174  01401A                     l6841:
 14175                           
 14176                           ; BSR set to: 0
 14177  01401A  0100               	movlb	0	; () banked
 14178  01401C  9F81               	bcf	(___fldiv@b+2)& (0+255),7,b
 14179  01401E                     l6843:
 14180                           
 14181                           ; BSR set to: 0
 14182  01401E  0100               	movlb	0	; () banked
 14183  014020  90D8               	bcf	status,0,c
 14184  014022  3196               	rrcf	___fldiv@bexp& (0+255),w,b
 14185  014024  0100               	movlb	0	; () banked
 14186  014026  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14187                           
 14188                           ; BSR set to: 0
 14189  014028  0100               	movlb	0	; () banked
 14190  01402A  518B               	movf	___fldiv@sign& (0+255),w,b
 14191  01402C  0100               	movlb	0	; () banked
 14192  01402E  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14193                           
 14194                           ; BSR set to: 0
 14195  014030  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14196  014034  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14197  014038  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14198  01403C  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14199  014040  0012               	return	
 14200  014042                     __end_of___fldiv:
 14201                           	opt stack 0
 14202                           tblptru	equ	0xFF8
 14203                           tblptrh	equ	0xFF7
 14204                           tblptrl	equ	0xFF6
 14205                           tablat	equ	0xFF5
 14206                           prodh	equ	0xFF4
 14207                           prodl	equ	0xFF3
 14208                           intcon	equ	0xFF2
 14209                           postinc0	equ	0xFEE
 14210                           wreg	equ	0xFE8
 14211                           indf2	equ	0xFDF
 14212                           postinc2	equ	0xFDE
 14213                           fsr2h	equ	0xFDA
 14214                           fsr2l	equ	0xFD9
 14215                           status	equ	0xFD8
 14216                           
 14217 ;; *************** function _LCD_write_integer *****************
 14218 ;; Defined at:
 14219 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  value           2   41[BANK0 ] int 
 14222 ;;  number_of_di    1   43[BANK0 ] unsigned char 
 14223 ;;  zero_cleanin    1   44[BANK0 ] unsigned char 
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;  convertedInt    6   50[BANK0 ] unsigned char [6]
 14226 ;;  index           1   56[BANK0 ] unsigned char 
 14227 ;; Return value:  Size  Location     Type
 14228 ;;		None               void
 14229 ;; Registers used:
 14230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14236 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;Total ram usage:       16 bytes
 14241 ;; Hardware stack levels used:    1
 14242 ;; Hardware stack levels required when called:    9
 14243 ;; This function calls:
 14244 ;;		_LCD_write_string
 14245 ;;		_itoa
 14246 ;; This function is called by:
 14247 ;;		_LCD_Handler
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           	psect	text28
 14252  014C66                     __ptext28:
 14253                           	opt stack 0
 14254  014C66                     _LCD_write_integer:
 14255                           	opt stack 20
 14256                           
 14257                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;incstack = 0
 14261  014C66  EE21  F007         	lfsr	2,LCD_write_integer@F17272
 14262  014C6A  EE10  F092         	lfsr	1,LCD_write_integer@convertedInt
 14263  014C6E  0E05               	movlw	5
 14264  014C70                     u11621:
 14265  014C70  CFDB FFE3          	movff	plusw2,plusw1
 14266  014C74  06E8               	decf	wreg,f,c
 14267  014C76  E2FC               	bc	u11621
 14268                           
 14269                           ;src\LCD_44780.c: 216: unsigned char index;
 14270                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 14271  014C78  0E92               	movlw	low LCD_write_integer@convertedInt
 14272  014C7A  0100               	movlb	0	; () banked
 14273  014C7C  6F81               	movwf	itoa@buf& (0+255),b
 14274  014C7E  0E00               	movlw	high LCD_write_integer@convertedInt
 14275  014C80  0100               	movlb	0	; () banked
 14276  014C82  6F82               	movwf	(itoa@buf+1)& (0+255),b
 14277  014C84  C089  F083         	movff	LCD_write_integer@value,itoa@val
 14278  014C88  C08A  F084         	movff	LCD_write_integer@value+1,itoa@val+1
 14279  014C8C  0E00               	movlw	0
 14280  014C8E  0100               	movlb	0	; () banked
 14281  014C90  6F86               	movwf	(itoa@base+1)& (0+255),b
 14282  014C92  0E0A               	movlw	10
 14283  014C94  6F85               	movwf	itoa@base& (0+255),b
 14284  014C96  ECAC  F0B0         	call	_itoa	;wreg free
 14285                           
 14286                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 14287  014C9A  0100               	movlb	0	; () banked
 14288  014C9C  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14289  014C9E  0100               	movlb	0	; () banked
 14290  014CA0  B4D8               	btfsc	status,2,c
 14291  014CA2  D0B8               	goto	l8713
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 14295  014CA4  0100               	movlb	0	; () banked
 14296  014CA6  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14297  014CA8  0D01               	mullw	1
 14298  014CAA  0E92               	movlw	low LCD_write_integer@convertedInt
 14299  014CAC  24F3               	addwf	prodl,w,c
 14300  014CAE  6ED9               	movwf	fsr2l,c
 14301  014CB0  0E00               	movlw	high LCD_write_integer@convertedInt
 14302  014CB2  20F4               	addwfc	prodh,w,c
 14303  014CB4  6EDA               	movwf	fsr2h,c
 14304  014CB6  0E00               	movlw	0
 14305  014CB8  6EDF               	movwf	indf2,c
 14306                           
 14307                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14308  014CBA  D070               	goto	l8709
 14309  014CBC                     l8691:
 14310                           
 14311                           ; BSR set to: 0
 14312                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14313  014CBC  0100               	movlb	0	; () banked
 14314  014CBE  058B               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14315  014CC0  0100               	movlb	0	; () banked
 14316  014CC2  6F98               	movwf	LCD_write_integer@index& (0+255),b
 14317  014CC4                     l8693:
 14318                           
 14319                           ; BSR set to: 0
 14320  014CC4  0100               	movlb	0	; () banked
 14321  014CC6  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14322  014CC8  0100               	movlb	0	; () banked
 14323  014CCA  B4D8               	btfsc	status,2,c
 14324  014CCC  D067               	goto	l8709
 14325                           
 14326                           ; BSR set to: 0
 14327                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14328                           
 14329                           ; BSR set to: 0
 14330                           
 14331                           ; BSR set to: 0
 14332  014CCE  0EFF               	movlw	255
 14333  014CD0  0100               	movlb	0	; () banked
 14334  014CD2  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14335  014CD4  0EFF               	movlw	255
 14336  014CD6  0100               	movlb	0	; () banked
 14337  014CD8  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14338  014CDA  0100               	movlb	0	; () banked
 14339  014CDC  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14340  014CDE  0100               	movlb	0	; () banked
 14341  014CE0  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14342  014CE2  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14343  014CE4  0100               	movlb	0	; () banked
 14344  014CE6  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14345  014CE8  0100               	movlb	0	; () banked
 14346  014CEA  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14347  014CEC  0100               	movlb	0	; () banked
 14348  014CEE  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14349  014CF0  0100               	movlb	0	; () banked
 14350  014CF2  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14351  014CF4  0E92               	movlw	low LCD_write_integer@convertedInt
 14352  014CF6  0100               	movlb	0	; () banked
 14353  014CF8  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14354  014CFA  6ED9               	movwf	fsr2l,c
 14355  014CFC  0E00               	movlw	high LCD_write_integer@convertedInt
 14356  014CFE  0100               	movlb	0	; () banked
 14357  014D00  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14358  014D02  6EDA               	movwf	fsr2h,c
 14359  014D04  0100               	movlb	0	; () banked
 14360  014D06  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14361  014D08  0D01               	mullw	1
 14362  014D0A  0E92               	movlw	low LCD_write_integer@convertedInt
 14363  014D0C  24F3               	addwf	prodl,w,c
 14364  014D0E  6EE1               	movwf	fsr1l,c
 14365  014D10  0E00               	movlw	high LCD_write_integer@convertedInt
 14366  014D12  20F4               	addwfc	prodh,w,c
 14367  014D14  6EE2               	movwf	fsr1h,c
 14368  014D16  CFDF FFE7          	movff	indf2,indf1
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14372  014D1A  0100               	movlb	0	; () banked
 14373  014D1C  058C               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14374  014D1E  A4D8               	btfss	status,2,c
 14375  014D20  D01D               	goto	l8703
 14376                           
 14377                           ; BSR set to: 0
 14378                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14379  014D22  0EFF               	movlw	255
 14380  014D24  0100               	movlb	0	; () banked
 14381  014D26  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14382  014D28  0EFF               	movlw	255
 14383  014D2A  0100               	movlb	0	; () banked
 14384  014D2C  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14385  014D2E  0100               	movlb	0	; () banked
 14386  014D30  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14387  014D32  0100               	movlb	0	; () banked
 14388  014D34  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14389  014D36  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14390  014D38  0100               	movlb	0	; () banked
 14391  014D3A  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14392  014D3C  0100               	movlb	0	; () banked
 14393  014D3E  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14394  014D40  0100               	movlb	0	; () banked
 14395  014D42  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14396  014D44  0100               	movlb	0	; () banked
 14397  014D46  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14398  014D48  0E92               	movlw	low LCD_write_integer@convertedInt
 14399  014D4A  0100               	movlb	0	; () banked
 14400  014D4C  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14401  014D4E  6ED9               	movwf	fsr2l,c
 14402  014D50  0E00               	movlw	high LCD_write_integer@convertedInt
 14403  014D52  0100               	movlb	0	; () banked
 14404  014D54  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14405  014D56  6EDA               	movwf	fsr2h,c
 14406  014D58  0E20               	movlw	32
 14407  014D5A  D01C               	goto	L17
 14408  014D5C                     l8703:
 14409                           
 14410                           ; BSR set to: 0
 14411                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14412  014D5C  0EFF               	movlw	255
 14413  014D5E  0100               	movlb	0	; () banked
 14414  014D60  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14415  014D62  0EFF               	movlw	255
 14416  014D64  0100               	movlb	0	; () banked
 14417  014D66  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14418  014D68  0100               	movlb	0	; () banked
 14419  014D6A  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14420  014D6C  0100               	movlb	0	; () banked
 14421  014D6E  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14422  014D70  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14423  014D72  0100               	movlb	0	; () banked
 14424  014D74  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14425  014D76  0100               	movlb	0	; () banked
 14426  014D78  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14427  014D7A  0100               	movlb	0	; () banked
 14428  014D7C  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14429  014D7E  0100               	movlb	0	; () banked
 14430  014D80  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14431  014D82  0E92               	movlw	low LCD_write_integer@convertedInt
 14432  014D84  0100               	movlb	0	; () banked
 14433  014D86  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14434  014D88  6ED9               	movwf	fsr2l,c
 14435  014D8A  0E00               	movlw	high LCD_write_integer@convertedInt
 14436  014D8C  0100               	movlb	0	; () banked
 14437  014D8E  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14438  014D90  6EDA               	movwf	fsr2h,c
 14439  014D92  0E30               	movlw	48
 14440  014D94                     L17:
 14441  014D94  6EDF               	movwf	indf2,c
 14442                           
 14443                           ; BSR set to: 0
 14444                           
 14445                           ; BSR set to: 0
 14446  014D96  0100               	movlb	0	; () banked
 14447  014D98  0798               	decf	LCD_write_integer@index& (0+255),f,b
 14448  014D9A  D794               	goto	l8693
 14449  014D9C                     l8709:
 14450                           
 14451                           ; BSR set to: 0
 14452  014D9C  0EFF               	movlw	255
 14453  014D9E  0100               	movlb	0	; () banked
 14454  014DA0  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14455  014DA2  0EFF               	movlw	255
 14456  014DA4  0100               	movlb	0	; () banked
 14457  014DA6  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14458  014DA8  0100               	movlb	0	; () banked
 14459  014DAA  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14460  014DAC  0100               	movlb	0	; () banked
 14461  014DAE  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14462  014DB0  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14463  014DB2  0100               	movlb	0	; () banked
 14464  014DB4  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14465  014DB6  0100               	movlb	0	; () banked
 14466  014DB8  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14467  014DBA  0100               	movlb	0	; () banked
 14468  014DBC  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14469  014DBE  0100               	movlb	0	; () banked
 14470  014DC0  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14471  014DC2  0E92               	movlw	low LCD_write_integer@convertedInt
 14472  014DC4  0100               	movlb	0	; () banked
 14473  014DC6  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14474  014DC8  6ED9               	movwf	fsr2l,c
 14475  014DCA  0E00               	movlw	high LCD_write_integer@convertedInt
 14476  014DCC  0100               	movlb	0	; () banked
 14477  014DCE  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14478  014DD0  6EDA               	movwf	fsr2h,c
 14479  014DD2  0E3A               	movlw	58
 14480  014DD4  60DF               	cpfslt	indf2,c
 14481  014DD6  D772               	goto	l8691
 14482                           
 14483                           ; BSR set to: 0
 14484  014DD8  0EFF               	movlw	255
 14485  014DDA  0100               	movlb	0	; () banked
 14486  014DDC  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14487  014DDE  0EFF               	movlw	255
 14488  014DE0  0100               	movlb	0	; () banked
 14489  014DE2  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14490  014DE4  0100               	movlb	0	; () banked
 14491  014DE6  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14492  014DE8  0100               	movlb	0	; () banked
 14493  014DEA  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14494  014DEC  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14495  014DEE  0100               	movlb	0	; () banked
 14496  014DF0  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14497  014DF2  0100               	movlb	0	; () banked
 14498  014DF4  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14499  014DF6  0100               	movlb	0	; () banked
 14500  014DF8  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14501  014DFA  0100               	movlb	0	; () banked
 14502  014DFC  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14503  014DFE  0E92               	movlw	low LCD_write_integer@convertedInt
 14504  014E00  0100               	movlb	0	; () banked
 14505  014E02  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14506  014E04  6ED9               	movwf	fsr2l,c
 14507  014E06  0E00               	movlw	high LCD_write_integer@convertedInt
 14508  014E08  0100               	movlb	0	; () banked
 14509  014E0A  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14510  014E0C  6EDA               	movwf	fsr2h,c
 14511  014E0E  0E2F               	movlw	47
 14512  014E10  64DF               	cpfsgt	indf2,c
 14513  014E12  D754               	goto	l8691
 14514  014E14                     l8713:
 14515                           
 14516                           ; BSR set to: 0
 14517                           ;src\LCD_44780.c: 243: }
 14518                           ;src\LCD_44780.c: 245: }
 14519                           ;src\LCD_44780.c: 246: }
 14520                           ;src\LCD_44780.c: 247: }
 14521                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14522  014E14  0E92               	movlw	low LCD_write_integer@convertedInt
 14523  014E16  0100               	movlb	0	; () banked
 14524  014E18  6F82               	movwf	LCD_write_string@buffer& (0+255),b
 14525  014E1A  0E00               	movlw	high LCD_write_integer@convertedInt
 14526  014E1C  0100               	movlb	0	; () banked
 14527  014E1E  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14528  014E20  ECC5  F0B1         	call	_LCD_write_string	;wreg free
 14529  014E24  0012               	return		;funcret
 14530  014E26                     __end_of_LCD_write_integer:
 14531                           	opt stack 0
 14532                           tblptru	equ	0xFF8
 14533                           tblptrh	equ	0xFF7
 14534                           tblptrl	equ	0xFF6
 14535                           tablat	equ	0xFF5
 14536                           prodh	equ	0xFF4
 14537                           prodl	equ	0xFF3
 14538                           intcon	equ	0xFF2
 14539                           postinc0	equ	0xFEE
 14540                           wreg	equ	0xFE8
 14541                           indf1	equ	0xFE7
 14542                           plusw1	equ	0xFE3
 14543                           fsr1h	equ	0xFE2
 14544                           fsr1l	equ	0xFE1
 14545                           indf2	equ	0xFDF
 14546                           postinc2	equ	0xFDE
 14547                           plusw2	equ	0xFDB
 14548                           fsr2h	equ	0xFDA
 14549                           fsr2l	equ	0xFD9
 14550                           status	equ	0xFD8
 14551                           
 14552 ;; *************** function _itoa *****************
 14553 ;; Defined at:
 14554 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;  buf             2   33[BANK0 ] PTR unsigned char 
 14557 ;;		 -> LCD_write_integer@convertedInt(6), 
 14558 ;;  val             2   35[BANK0 ] int 
 14559 ;;  base            2   37[BANK0 ] int 
 14560 ;; Auto vars:     Size  Location     Type
 14561 ;;  cp              2   39[BANK0 ] PTR unsigned char 
 14562 ;;		 -> LCD_write_integer@convertedInt(6), 
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  2   33[BANK0 ] PTR unsigned char 
 14565 ;; Registers used:
 14566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14572 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14575 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14576 ;;Total ram usage:        8 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:    5
 14579 ;; This function calls:
 14580 ;;		_utoa
 14581 ;; This function is called by:
 14582 ;;		_LCD_write_integer
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text29
 14587  016158                     __ptext29:
 14588                           	opt stack 0
 14589  016158                     _itoa:
 14590                           	opt stack 23
 14591                           
 14592                           ;incstack = 0
 14593  016158  C081  F087         	movff	itoa@buf,itoa@cp
 14594  01615C  C082  F088         	movff	itoa@buf+1,itoa@cp+1
 14595  016160  0100               	movlb	0	; () banked
 14596  016162  AF84               	btfss	(itoa@val+1)& (0+255),7,b
 14597  016164  D00E               	goto	l5775
 14598                           
 14599                           ; BSR set to: 0
 14600  016166  C081  FFD9         	movff	itoa@buf,fsr2l
 14601  01616A  C082  FFDA         	movff	itoa@buf+1,fsr2h
 14602  01616E  0E2D               	movlw	45
 14603  016170  6EDF               	movwf	indf2,c
 14604                           
 14605                           ; BSR set to: 0
 14606  016172  0100               	movlb	0	; () banked
 14607  016174  4B81               	infsnz	itoa@buf& (0+255),f,b
 14608  016176  2B82               	incf	(itoa@buf+1)& (0+255),f,b
 14609                           
 14610                           ; BSR set to: 0
 14611  016178  0100               	movlb	0	; () banked
 14612  01617A  6D83               	negf	itoa@val& (0+255),b
 14613  01617C  1F84               	comf	(itoa@val+1)& (0+255),f,b
 14614  01617E  B0D8               	btfsc	status,0,c
 14615  016180  2B84               	incf	(itoa@val+1)& (0+255),f,b
 14616  016182                     l5775:
 14617                           
 14618                           ; BSR set to: 0
 14619  016182  C081  F078         	movff	itoa@buf,utoa@buf
 14620  016186  C082  F079         	movff	itoa@buf+1,utoa@buf+1
 14621  01618A  C083  F07A         	movff	itoa@val,utoa@val
 14622  01618E  C084  F07B         	movff	itoa@val+1,utoa@val+1
 14623  016192  C085  F07C         	movff	itoa@base,utoa@base
 14624  016196  C086  F07D         	movff	itoa@base+1,utoa@base+1
 14625  01619A  EC57  F0AC         	call	_utoa	;wreg free
 14626  01619E  0012               	return	
 14627  0161A0                     __end_of_itoa:
 14628                           	opt stack 0
 14629                           tblptru	equ	0xFF8
 14630                           tblptrh	equ	0xFF7
 14631                           tblptrl	equ	0xFF6
 14632                           tablat	equ	0xFF5
 14633                           prodh	equ	0xFF4
 14634                           prodl	equ	0xFF3
 14635                           intcon	equ	0xFF2
 14636                           postinc0	equ	0xFEE
 14637                           wreg	equ	0xFE8
 14638                           indf1	equ	0xFE7
 14639                           plusw1	equ	0xFE3
 14640                           fsr1h	equ	0xFE2
 14641                           fsr1l	equ	0xFE1
 14642                           indf2	equ	0xFDF
 14643                           postinc2	equ	0xFDE
 14644                           plusw2	equ	0xFDB
 14645                           fsr2h	equ	0xFDA
 14646                           fsr2l	equ	0xFD9
 14647                           status	equ	0xFD8
 14648                           
 14649 ;; *************** function _utoa *****************
 14650 ;; Defined at:
 14651 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;  buf             2   24[BANK0 ] PTR unsigned char 
 14654 ;;		 -> LCD_write_integer@convertedInt(6), 
 14655 ;;  val             2   26[BANK0 ] unsigned int 
 14656 ;;  base            2   28[BANK0 ] int 
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;  v               2   30[BANK0 ] unsigned int 
 14659 ;;  c               1   32[BANK0 ] unsigned char 
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  2   24[BANK0 ] PTR unsigned char 
 14662 ;; Registers used:
 14663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14669 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;Total ram usage:        9 bytes
 14674 ;; Hardware stack levels used:    1
 14675 ;; Hardware stack levels required when called:    4
 14676 ;; This function calls:
 14677 ;;		___lwdiv
 14678 ;;		___lwmod
 14679 ;; This function is called by:
 14680 ;;		_itoa
 14681 ;; This function uses a non-reentrant model
 14682 ;;
 14683                           
 14684                           	psect	text30
 14685  0158AE                     __ptext30:
 14686                           	opt stack 0
 14687  0158AE                     _utoa:
 14688                           	opt stack 23
 14689                           
 14690                           ;incstack = 0
 14691  0158AE  C07A  F07E         	movff	utoa@val,utoa@v
 14692  0158B2  C07B  F07F         	movff	utoa@val+1,utoa@v+1
 14693  0158B6                     l5297:
 14694  0158B6  C07E  F071         	movff	utoa@v,___lwdiv@dividend
 14695  0158BA  C07F  F072         	movff	utoa@v+1,___lwdiv@dividend+1
 14696  0158BE  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 14697  0158C2  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 14698  0158C6  EC03  F0AF         	call	___lwdiv	;wreg free
 14699  0158CA  C071  F07E         	movff	?___lwdiv,utoa@v
 14700  0158CE  C072  F07F         	movff	?___lwdiv+1,utoa@v+1
 14701  0158D2  0100               	movlb	0	; () banked
 14702  0158D4  4B78               	infsnz	utoa@buf& (0+255),f,b
 14703  0158D6  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 14704                           
 14705                           ; BSR set to: 0
 14706  0158D8  0100               	movlb	0	; () banked
 14707  0158DA  517E               	movf	utoa@v& (0+255),w,b
 14708  0158DC  0100               	movlb	0	; () banked
 14709  0158DE  117F               	iorwf	(utoa@v+1)& (0+255),w,b
 14710  0158E0  A4D8               	btfss	status,2,c
 14711  0158E2  D7E9               	goto	l5297
 14712                           
 14713                           ; BSR set to: 0
 14714                           
 14715                           ; BSR set to: 0
 14716  0158E4  C078  FFD9         	movff	utoa@buf,fsr2l
 14717  0158E8  C079  FFDA         	movff	utoa@buf+1,fsr2h
 14718  0158EC  0E00               	movlw	0
 14719  0158EE  6EDF               	movwf	indf2,c
 14720                           
 14721                           ; BSR set to: 0
 14722  0158F0  0100               	movlb	0	; () banked
 14723  0158F2  0778               	decf	utoa@buf& (0+255),f,b
 14724  0158F4  A0D8               	btfss	status,0,c
 14725  0158F6  0779               	decf	(utoa@buf+1)& (0+255),f,b
 14726  0158F8                     l5307:
 14727                           
 14728                           ; BSR set to: 0
 14729  0158F8  C07A  F071         	movff	utoa@val,___lwmod@dividend
 14730  0158FC  C07B  F072         	movff	utoa@val+1,___lwmod@dividend+1
 14731  015900  C07C  F073         	movff	utoa@base,___lwmod@divisor
 14732  015904  C07D  F074         	movff	utoa@base+1,___lwmod@divisor+1
 14733  015908  EC07  F0B0         	call	___lwmod	;wreg free
 14734  01590C  0100               	movlb	0	; () banked
 14735  01590E  5171               	movf	?___lwmod& (0+255),w,b
 14736  015910  0100               	movlb	0	; () banked
 14737  015912  6F80               	movwf	utoa@c& (0+255),b
 14738                           
 14739                           ; BSR set to: 0
 14740  015914  C07A  F071         	movff	utoa@val,___lwdiv@dividend
 14741  015918  C07B  F072         	movff	utoa@val+1,___lwdiv@dividend+1
 14742  01591C  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 14743  015920  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 14744  015924  EC03  F0AF         	call	___lwdiv	;wreg free
 14745  015928  C071  F07A         	movff	?___lwdiv,utoa@val
 14746  01592C  C072  F07B         	movff	?___lwdiv+1,utoa@val+1
 14747  015930  0E09               	movlw	9
 14748  015932  0100               	movlb	0	; () banked
 14749  015934  6580               	cpfsgt	utoa@c& (0+255),b
 14750  015936  D003               	goto	l1421
 14751                           
 14752                           ; BSR set to: 0
 14753  015938  0E07               	movlw	7
 14754  01593A  0100               	movlb	0	; () banked
 14755  01593C  2780               	addwf	utoa@c& (0+255),f,b
 14756  01593E                     l1421:
 14757                           
 14758                           ; BSR set to: 0
 14759  01593E  0E30               	movlw	48
 14760  015940  0100               	movlb	0	; () banked
 14761  015942  2780               	addwf	utoa@c& (0+255),f,b
 14762                           
 14763                           ; BSR set to: 0
 14764  015944  C078  FFD9         	movff	utoa@buf,fsr2l
 14765  015948  C079  FFDA         	movff	utoa@buf+1,fsr2h
 14766  01594C  C080  FFDF         	movff	utoa@c,indf2
 14767                           
 14768                           ; BSR set to: 0
 14769  015950  0100               	movlb	0	; () banked
 14770  015952  0778               	decf	utoa@buf& (0+255),f,b
 14771  015954  A0D8               	btfss	status,0,c
 14772  015956  0779               	decf	(utoa@buf+1)& (0+255),f,b
 14773                           
 14774                           ; BSR set to: 0
 14775  015958  0100               	movlb	0	; () banked
 14776  01595A  517A               	movf	utoa@val& (0+255),w,b
 14777  01595C  0100               	movlb	0	; () banked
 14778  01595E  117B               	iorwf	(utoa@val+1)& (0+255),w,b
 14779  015960  A4D8               	btfss	status,2,c
 14780  015962  D7CA               	goto	l5307
 14781                           
 14782                           ; BSR set to: 0
 14783                           ;	Return value of _utoa is never used
 14784                           
 14785                           ; BSR set to: 0
 14786  015964  0100               	movlb	0	; () banked
 14787  015966  4B78               	infsnz	utoa@buf& (0+255),f,b
 14788  015968  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 14789  01596A  0012               	return	
 14790  01596C                     __end_of_utoa:
 14791                           	opt stack 0
 14792                           tblptru	equ	0xFF8
 14793                           tblptrh	equ	0xFF7
 14794                           tblptrl	equ	0xFF6
 14795                           tablat	equ	0xFF5
 14796                           prodh	equ	0xFF4
 14797                           prodl	equ	0xFF3
 14798                           intcon	equ	0xFF2
 14799                           postinc0	equ	0xFEE
 14800                           wreg	equ	0xFE8
 14801                           indf1	equ	0xFE7
 14802                           plusw1	equ	0xFE3
 14803                           fsr1h	equ	0xFE2
 14804                           fsr1l	equ	0xFE1
 14805                           indf2	equ	0xFDF
 14806                           postinc2	equ	0xFDE
 14807                           plusw2	equ	0xFDB
 14808                           fsr2h	equ	0xFDA
 14809                           fsr2l	equ	0xFD9
 14810                           status	equ	0xFD8
 14811                           
 14812 ;; *************** function ___lwmod *****************
 14813 ;; Defined at:
 14814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14815 ;; Parameters:    Size  Location     Type
 14816 ;;  dividend        2   17[BANK0 ] unsigned int 
 14817 ;;  divisor         2   19[BANK0 ] unsigned int 
 14818 ;; Auto vars:     Size  Location     Type
 14819 ;;  counter         1   21[BANK0 ] unsigned char 
 14820 ;; Return value:  Size  Location     Type
 14821 ;;                  2   17[BANK0 ] unsigned int 
 14822 ;; Registers used:
 14823 ;;		wreg, status,2, status,0
 14824 ;; Tracked objects:
 14825 ;;		On entry : 0/0
 14826 ;;		On exit  : 0/0
 14827 ;;		Unchanged: 0/0
 14828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14832 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14833 ;;Total ram usage:        5 bytes
 14834 ;; Hardware stack levels used:    1
 14835 ;; Hardware stack levels required when called:    3
 14836 ;; This function calls:
 14837 ;;		Nothing
 14838 ;; This function is called by:
 14839 ;;		_utoa
 14840 ;; This function uses a non-reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text31
 14844  01600E                     __ptext31:
 14845                           	opt stack 0
 14846  01600E                     ___lwmod:
 14847                           	opt stack 23
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;incstack = 0
 14851  01600E  0100               	movlb	0	; () banked
 14852  016010  5173               	movf	___lwmod@divisor& (0+255),w,b
 14853  016012  0100               	movlb	0	; () banked
 14854  016014  1174               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14855  016016  B4D8               	btfsc	status,2,c
 14856  016018  D026               	goto	l1510
 14857                           
 14858                           ; BSR set to: 0
 14859  01601A  0E01               	movlw	1
 14860  01601C  0100               	movlb	0	; () banked
 14861  01601E  6F75               	movwf	___lwmod@counter& (0+255),b
 14862  016020  D006               	goto	l4855
 14863  016022                     l4853:
 14864                           
 14865                           ; BSR set to: 0
 14866  016022  0100               	movlb	0	; () banked
 14867  016024  90D8               	bcf	status,0,c
 14868  016026  3773               	rlcf	___lwmod@divisor& (0+255),f,b
 14869  016028  3774               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14870  01602A  0100               	movlb	0	; () banked
 14871  01602C  2B75               	incf	___lwmod@counter& (0+255),f,b
 14872  01602E                     l4855:
 14873                           
 14874                           ; BSR set to: 0
 14875  01602E  0100               	movlb	0	; () banked
 14876  016030  AF74               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14877  016032  D7F7               	goto	l4853
 14878  016034                     l4857:
 14879                           
 14880                           ; BSR set to: 0
 14881  016034  0100               	movlb	0	; () banked
 14882  016036  5173               	movf	___lwmod@divisor& (0+255),w,b
 14883  016038  0100               	movlb	0	; () banked
 14884  01603A  5D71               	subwf	___lwmod@dividend& (0+255),w,b
 14885  01603C  0100               	movlb	0	; () banked
 14886  01603E  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14887  016040  0100               	movlb	0	; () banked
 14888  016042  5972               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14889  016044  A0D8               	btfss	status,0,c
 14890  016046  D008               	goto	l4861
 14891                           
 14892                           ; BSR set to: 0
 14893  016048  0100               	movlb	0	; () banked
 14894  01604A  5173               	movf	___lwmod@divisor& (0+255),w,b
 14895  01604C  0100               	movlb	0	; () banked
 14896  01604E  5F71               	subwf	___lwmod@dividend& (0+255),f,b
 14897  016050  0100               	movlb	0	; () banked
 14898  016052  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14899  016054  0100               	movlb	0	; () banked
 14900  016056  5B72               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14901  016058                     l4861:
 14902                           
 14903                           ; BSR set to: 0
 14904  016058  0100               	movlb	0	; () banked
 14905  01605A  90D8               	bcf	status,0,c
 14906  01605C  3374               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14907  01605E  3373               	rrcf	___lwmod@divisor& (0+255),f,b
 14908                           
 14909                           ; BSR set to: 0
 14910  016060  0100               	movlb	0	; () banked
 14911  016062  2F75               	decfsz	___lwmod@counter& (0+255),f,b
 14912  016064  D7E7               	goto	l4857
 14913  016066                     l1510:
 14914                           
 14915                           ; BSR set to: 0
 14916  016066  C071  F071         	movff	___lwmod@dividend,?___lwmod
 14917  01606A  C072  F072         	movff	___lwmod@dividend+1,?___lwmod+1
 14918                           
 14919                           ; BSR set to: 0
 14920  01606E  0012               	return		;funcret
 14921  016070                     __end_of___lwmod:
 14922                           	opt stack 0
 14923                           tblptru	equ	0xFF8
 14924                           tblptrh	equ	0xFF7
 14925                           tblptrl	equ	0xFF6
 14926                           tablat	equ	0xFF5
 14927                           prodh	equ	0xFF4
 14928                           prodl	equ	0xFF3
 14929                           intcon	equ	0xFF2
 14930                           postinc0	equ	0xFEE
 14931                           wreg	equ	0xFE8
 14932                           indf1	equ	0xFE7
 14933                           plusw1	equ	0xFE3
 14934                           fsr1h	equ	0xFE2
 14935                           fsr1l	equ	0xFE1
 14936                           indf2	equ	0xFDF
 14937                           postinc2	equ	0xFDE
 14938                           plusw2	equ	0xFDB
 14939                           fsr2h	equ	0xFDA
 14940                           fsr2l	equ	0xFD9
 14941                           status	equ	0xFD8
 14942                           
 14943 ;; *************** function ___lwdiv *****************
 14944 ;; Defined at:
 14945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14946 ;; Parameters:    Size  Location     Type
 14947 ;;  dividend        2   17[BANK0 ] unsigned int 
 14948 ;;  divisor         2   19[BANK0 ] unsigned int 
 14949 ;; Auto vars:     Size  Location     Type
 14950 ;;  quotient        2   21[BANK0 ] unsigned int 
 14951 ;;  counter         1   23[BANK0 ] unsigned char 
 14952 ;; Return value:  Size  Location     Type
 14953 ;;                  2   17[BANK0 ] unsigned int 
 14954 ;; Registers used:
 14955 ;;		wreg, status,2, status,0
 14956 ;; Tracked objects:
 14957 ;;		On entry : 0/0
 14958 ;;		On exit  : 0/0
 14959 ;;		Unchanged: 0/0
 14960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;Total ram usage:        7 bytes
 14966 ;; Hardware stack levels used:    1
 14967 ;; Hardware stack levels required when called:    3
 14968 ;; This function calls:
 14969 ;;		Nothing
 14970 ;; This function is called by:
 14971 ;;		_utoa
 14972 ;; This function uses a non-reentrant model
 14973 ;;
 14974                           
 14975                           	psect	text32
 14976  015E06                     __ptext32:
 14977                           	opt stack 0
 14978  015E06                     ___lwdiv:
 14979                           	opt stack 23
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;incstack = 0
 14983  015E06  0E00               	movlw	0
 14984  015E08  0100               	movlb	0	; () banked
 14985  015E0A  6F76               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14986  015E0C  0E00               	movlw	0
 14987  015E0E  6F75               	movwf	___lwdiv@quotient& (0+255),b
 14988                           
 14989                           ; BSR set to: 0
 14990  015E10  0100               	movlb	0	; () banked
 14991  015E12  5173               	movf	___lwdiv@divisor& (0+255),w,b
 14992  015E14  0100               	movlb	0	; () banked
 14993  015E16  1174               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14994  015E18  B4D8               	btfsc	status,2,c
 14995  015E1A  D02C               	goto	l1500
 14996                           
 14997                           ; BSR set to: 0
 14998  015E1C  0E01               	movlw	1
 14999  015E1E  0100               	movlb	0	; () banked
 15000  015E20  6F77               	movwf	___lwdiv@counter& (0+255),b
 15001  015E22  D006               	goto	l4835
 15002  015E24                     l4833:
 15003                           
 15004                           ; BSR set to: 0
 15005  015E24  0100               	movlb	0	; () banked
 15006  015E26  90D8               	bcf	status,0,c
 15007  015E28  3773               	rlcf	___lwdiv@divisor& (0+255),f,b
 15008  015E2A  3774               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15009  015E2C  0100               	movlb	0	; () banked
 15010  015E2E  2B77               	incf	___lwdiv@counter& (0+255),f,b
 15011  015E30                     l4835:
 15012                           
 15013                           ; BSR set to: 0
 15014  015E30  0100               	movlb	0	; () banked
 15015  015E32  AF74               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15016  015E34  D7F7               	goto	l4833
 15017  015E36                     l4837:
 15018                           
 15019                           ; BSR set to: 0
 15020  015E36  0100               	movlb	0	; () banked
 15021  015E38  90D8               	bcf	status,0,c
 15022  015E3A  3775               	rlcf	___lwdiv@quotient& (0+255),f,b
 15023  015E3C  3776               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15024                           
 15025                           ; BSR set to: 0
 15026  015E3E  0100               	movlb	0	; () banked
 15027  015E40  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15028  015E42  0100               	movlb	0	; () banked
 15029  015E44  5D71               	subwf	___lwdiv@dividend& (0+255),w,b
 15030  015E46  0100               	movlb	0	; () banked
 15031  015E48  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15032  015E4A  0100               	movlb	0	; () banked
 15033  015E4C  5972               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15034  015E4E  A0D8               	btfss	status,0,c
 15035  015E50  D00A               	goto	l4845
 15036                           
 15037                           ; BSR set to: 0
 15038  015E52  0100               	movlb	0	; () banked
 15039  015E54  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15040  015E56  0100               	movlb	0	; () banked
 15041  015E58  5F71               	subwf	___lwdiv@dividend& (0+255),f,b
 15042  015E5A  0100               	movlb	0	; () banked
 15043  015E5C  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15044  015E5E  0100               	movlb	0	; () banked
 15045  015E60  5B72               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15046                           
 15047                           ; BSR set to: 0
 15048  015E62  0100               	movlb	0	; () banked
 15049  015E64  8175               	bsf	___lwdiv@quotient& (0+255),0,b
 15050  015E66                     l4845:
 15051                           
 15052                           ; BSR set to: 0
 15053  015E66  0100               	movlb	0	; () banked
 15054  015E68  90D8               	bcf	status,0,c
 15055  015E6A  3374               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15056  015E6C  3373               	rrcf	___lwdiv@divisor& (0+255),f,b
 15057                           
 15058                           ; BSR set to: 0
 15059  015E6E  0100               	movlb	0	; () banked
 15060  015E70  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 15061  015E72  D7E1               	goto	l4837
 15062  015E74                     l1500:
 15063                           
 15064                           ; BSR set to: 0
 15065  015E74  C075  F071         	movff	___lwdiv@quotient,?___lwdiv
 15066  015E78  C076  F072         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15067                           
 15068                           ; BSR set to: 0
 15069  015E7C  0012               	return		;funcret
 15070  015E7E                     __end_of___lwdiv:
 15071                           	opt stack 0
 15072                           tblptru	equ	0xFF8
 15073                           tblptrh	equ	0xFF7
 15074                           tblptrl	equ	0xFF6
 15075                           tablat	equ	0xFF5
 15076                           prodh	equ	0xFF4
 15077                           prodl	equ	0xFF3
 15078                           intcon	equ	0xFF2
 15079                           postinc0	equ	0xFEE
 15080                           wreg	equ	0xFE8
 15081                           indf1	equ	0xFE7
 15082                           plusw1	equ	0xFE3
 15083                           fsr1h	equ	0xFE2
 15084                           fsr1l	equ	0xFE1
 15085                           indf2	equ	0xFDF
 15086                           postinc2	equ	0xFDE
 15087                           plusw2	equ	0xFDB
 15088                           fsr2h	equ	0xFDA
 15089                           fsr2l	equ	0xFD9
 15090                           status	equ	0xFD8
 15091                           
 15092 ;; *************** function _LCD_write_string *****************
 15093 ;; Defined at:
 15094 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15095 ;; Parameters:    Size  Location     Type
 15096 ;;  buffer          2   34[BANK0 ] PTR unsigned char 
 15097 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;		None
 15100 ;; Return value:  Size  Location     Type
 15101 ;;		None               void
 15102 ;; Registers used:
 15103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15104 ;; Tracked objects:
 15105 ;;		On entry : 0/0
 15106 ;;		On exit  : 0/0
 15107 ;;		Unchanged: 0/0
 15108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15113 ;;Total ram usage:        2 bytes
 15114 ;; Hardware stack levels used:    1
 15115 ;; Hardware stack levels required when called:    8
 15116 ;; This function calls:
 15117 ;;		_LCD_write_char
 15118 ;; This function is called by:
 15119 ;;		_LCD_write_integer
 15120 ;;		_LCD_Handler
 15121 ;; This function uses a non-reentrant model
 15122 ;;
 15123                           
 15124                           	psect	text33
 15125  01638A                     __ptext33:
 15126                           	opt stack 0
 15127  01638A                     _LCD_write_string:
 15128                           	opt stack 21
 15129                           
 15130                           ;src\LCD_44780.c: 197: while(*buffer){
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;incstack = 0
 15134  01638A  D00A               	goto	l8319
 15135  01638C                     l8315:
 15136                           
 15137                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 15138  01638C  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15139  016390  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15140  016394  50DF               	movf	indf2,w,c
 15141  016396  ECB8  F0AE         	call	_LCD_write_char
 15142                           
 15143                           ;src\LCD_44780.c: 202: buffer++;
 15144  01639A  0100               	movlb	0	; () banked
 15145  01639C  4B82               	infsnz	LCD_write_string@buffer& (0+255),f,b
 15146  01639E  2B83               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 15147  0163A0                     l8319:
 15148  0163A0  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15149  0163A4  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15150  0163A8  50DF               	movf	indf2,w,c
 15151  0163AA  B4D8               	btfsc	status,2,c
 15152  0163AC  0012               	return	
 15153  0163AE  D7EE               	goto	l8315
 15154  0163B0                     __end_of_LCD_write_string:
 15155                           	opt stack 0
 15156                           tblptru	equ	0xFF8
 15157                           tblptrh	equ	0xFF7
 15158                           tblptrl	equ	0xFF6
 15159                           tablat	equ	0xFF5
 15160                           prodh	equ	0xFF4
 15161                           prodl	equ	0xFF3
 15162                           intcon	equ	0xFF2
 15163                           postinc0	equ	0xFEE
 15164                           wreg	equ	0xFE8
 15165                           indf1	equ	0xFE7
 15166                           plusw1	equ	0xFE3
 15167                           fsr1h	equ	0xFE2
 15168                           fsr1l	equ	0xFE1
 15169                           indf2	equ	0xFDF
 15170                           postinc2	equ	0xFDE
 15171                           plusw2	equ	0xFDB
 15172                           fsr2h	equ	0xFDA
 15173                           fsr2l	equ	0xFD9
 15174                           status	equ	0xFD8
 15175                           
 15176 ;; *************** function _LCD_goto_xy *****************
 15177 ;; Defined at:
 15178 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15179 ;; Parameters:    Size  Location     Type
 15180 ;;  x               1    wreg     unsigned char 
 15181 ;;  y               1   32[BANK0 ] unsigned char 
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;  x               1   33[BANK0 ] unsigned char 
 15184 ;; Return value:  Size  Location     Type
 15185 ;;		None               void
 15186 ;; Registers used:
 15187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15193 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15196 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15197 ;;Total ram usage:        2 bytes
 15198 ;; Hardware stack levels used:    1
 15199 ;; Hardware stack levels required when called:    8
 15200 ;; This function calls:
 15201 ;;		_LCD_goto_line
 15202 ;;		_LCD_shift_cursor
 15203 ;; This function is called by:
 15204 ;;		_LCD_Handler
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text34
 15209  016430                     __ptext34:
 15210                           	opt stack 0
 15211  016430                     _LCD_goto_xy:
 15212                           	opt stack 21
 15213                           
 15214                           ;incstack = 0
 15215                           ;LCD_goto_xy@x stored from wreg
 15216  016430  0100               	movlb	0	; () banked
 15217  016432  6F81               	movwf	LCD_goto_xy@x& (0+255),b
 15218                           
 15219                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15220  016434  0100               	movlb	0	; () banked
 15221  016436  5180               	movf	LCD_goto_xy@y& (0+255),w,b
 15222  016438  EC82  F0AB         	call	_LCD_goto_line
 15223                           
 15224                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15225  01643C  0100               	movlb	0	; () banked
 15226  01643E  0581               	decf	LCD_goto_xy@x& (0+255),w,b
 15227  016440  0100               	movlb	0	; () banked
 15228  016442  6F7D               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15229  016444  0E01               	movlw	1
 15230  016446  EC62  F0B0         	call	_LCD_shift_cursor
 15231  01644A  0012               	return		;funcret
 15232  01644C                     __end_of_LCD_goto_xy:
 15233                           	opt stack 0
 15234                           tblptru	equ	0xFF8
 15235                           tblptrh	equ	0xFF7
 15236                           tblptrl	equ	0xFF6
 15237                           tablat	equ	0xFF5
 15238                           prodh	equ	0xFF4
 15239                           prodl	equ	0xFF3
 15240                           intcon	equ	0xFF2
 15241                           postinc0	equ	0xFEE
 15242                           wreg	equ	0xFE8
 15243                           indf1	equ	0xFE7
 15244                           plusw1	equ	0xFE3
 15245                           fsr1h	equ	0xFE2
 15246                           fsr1l	equ	0xFE1
 15247                           indf2	equ	0xFDF
 15248                           postinc2	equ	0xFDE
 15249                           plusw2	equ	0xFDB
 15250                           fsr2h	equ	0xFDA
 15251                           fsr2l	equ	0xFD9
 15252                           status	equ	0xFD8
 15253                           
 15254 ;; *************** function _LCD_shift_cursor *****************
 15255 ;; Defined at:
 15256 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;  shift           1    wreg     unsigned char 
 15259 ;;  number_of_sh    1   29[BANK0 ] unsigned char 
 15260 ;; Auto vars:     Size  Location     Type
 15261 ;;  shift           1   30[BANK0 ] unsigned char 
 15262 ;;  i               1   31[BANK0 ] unsigned char 
 15263 ;; Return value:  Size  Location     Type
 15264 ;;		None               void
 15265 ;; Registers used:
 15266 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15267 ;; Tracked objects:
 15268 ;;		On entry : 0/0
 15269 ;;		On exit  : 0/0
 15270 ;;		Unchanged: 0/0
 15271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15272 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15276 ;;Total ram usage:        3 bytes
 15277 ;; Hardware stack levels used:    1
 15278 ;; Hardware stack levels required when called:    7
 15279 ;; This function calls:
 15280 ;;		_LCD_send_command
 15281 ;; This function is called by:
 15282 ;;		_LCD_goto_xy
 15283 ;; This function uses a non-reentrant model
 15284 ;;
 15285                           
 15286                           	psect	text35
 15287  0160C4                     __ptext35:
 15288                           	opt stack 0
 15289  0160C4                     _LCD_shift_cursor:
 15290                           	opt stack 21
 15291                           
 15292                           ;incstack = 0
 15293                           ;LCD_shift_cursor@shift stored from wreg
 15294  0160C4  0100               	movlb	0	; () banked
 15295  0160C6  6F7E               	movwf	LCD_shift_cursor@shift& (0+255),b
 15296                           
 15297                           ;src\LCD_44780.c: 100: unsigned char i;
 15298                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15299  0160C8  0E00               	movlw	0
 15300  0160CA  0100               	movlb	0	; () banked
 15301  0160CC  6F7F               	movwf	LCD_shift_cursor@i& (0+255),b
 15302  0160CE  D019               	goto	l8299
 15303  0160D0                     l8295:
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15307  0160D0  0E00               	movlw	0
 15308  0160D2  0100               	movlb	0	; () banked
 15309  0160D4  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15310  0160D6  0E00               	movlw	0
 15311  0160D8  0100               	movlb	0	; () banked
 15312  0160DA  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15313  0160DC  0E01               	movlw	1
 15314  0160DE  0100               	movlb	0	; () banked
 15315  0160E0  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15316  0160E2  0E00               	movlw	0
 15317  0160E4  ECF3  F0B0         	call	_LCD_send_command
 15318                           
 15319                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15320  0160E8  C07E  F079         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15321  0160EC  0E00               	movlw	0
 15322  0160EE  0100               	movlb	0	; () banked
 15323  0160F0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15324  0160F2  0E00               	movlw	0
 15325  0160F4  0100               	movlb	0	; () banked
 15326  0160F6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15327  0160F8  0E00               	movlw	0
 15328  0160FA  ECF3  F0B0         	call	_LCD_send_command
 15329  0160FE  0100               	movlb	0	; () banked
 15330  016100  2B7F               	incf	LCD_shift_cursor@i& (0+255),f,b
 15331  016102                     l8299:
 15332                           
 15333                           ; BSR set to: 0
 15334  016102  0100               	movlb	0	; () banked
 15335  016104  517D               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15336  016106  0100               	movlb	0	; () banked
 15337  016108  5D7F               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15338  01610A  B0D8               	btfsc	status,0,c
 15339  01610C  0012               	return	
 15340  01610E  D7E0               	goto	l8295
 15341  016110                     __end_of_LCD_shift_cursor:
 15342                           	opt stack 0
 15343                           tblptru	equ	0xFF8
 15344                           tblptrh	equ	0xFF7
 15345                           tblptrl	equ	0xFF6
 15346                           tablat	equ	0xFF5
 15347                           prodh	equ	0xFF4
 15348                           prodl	equ	0xFF3
 15349                           intcon	equ	0xFF2
 15350                           postinc0	equ	0xFEE
 15351                           wreg	equ	0xFE8
 15352                           indf1	equ	0xFE7
 15353                           plusw1	equ	0xFE3
 15354                           fsr1h	equ	0xFE2
 15355                           fsr1l	equ	0xFE1
 15356                           indf2	equ	0xFDF
 15357                           postinc2	equ	0xFDE
 15358                           plusw2	equ	0xFDB
 15359                           fsr2h	equ	0xFDA
 15360                           fsr2l	equ	0xFD9
 15361                           status	equ	0xFD8
 15362                           
 15363 ;; *************** function _LCD_Gap *****************
 15364 ;; Defined at:
 15365 ;;		line 475 in file "RemoteCan.c"
 15366 ;; Parameters:    Size  Location     Type
 15367 ;;		None
 15368 ;; Auto vars:     Size  Location     Type
 15369 ;;		None
 15370 ;; Return value:  Size  Location     Type
 15371 ;;		None               void
 15372 ;; Registers used:
 15373 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15374 ;; Tracked objects:
 15375 ;;		On entry : 0/0
 15376 ;;		On exit  : 0/0
 15377 ;;		Unchanged: 0/0
 15378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15383 ;;Total ram usage:        0 bytes
 15384 ;; Hardware stack levels used:    1
 15385 ;; Hardware stack levels required when called:    9
 15386 ;; This function calls:
 15387 ;;		_LCD_clear
 15388 ;;		_LCD_goto_line
 15389 ;;		_LCD_initialize
 15390 ;;		_LCD_write_message
 15391 ;; This function is called by:
 15392 ;;		_main
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396                           	psect	text36
 15397  015F46                     __ptext36:
 15398                           	opt stack 0
 15399  015F46                     _LCD_Gap:
 15400                           	opt stack 21
 15401                           
 15402                           ;RemoteCan.c: 476: LCD_initialize(16);
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;incstack = 0
 15406  015F46  0E10               	movlw	16
 15407  015F48  EC45  F0AA         	call	_LCD_initialize
 15408                           
 15409                           ;RemoteCan.c: 477: LCD_clear();
 15410  015F4C  EC97  F0B1         	call	_LCD_clear	;wreg free
 15411                           
 15412                           ;RemoteCan.c: 478: LCD_goto_line(1);
 15413  015F50  0E01               	movlw	1
 15414  015F52  EC82  F0AB         	call	_LCD_goto_line
 15415                           
 15416                           ;RemoteCan.c: 479: LCD_write_message("= PARKING MESSAGES =");
 15417  015F56  0E40               	movlw	low STR_16
 15418  015F58  0100               	movlb	0	; () banked
 15419  015F5A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15420  015F5C  0EFF               	movlw	high STR_16
 15421  015F5E  0100               	movlb	0	; () banked
 15422  015F60  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15423  015F62  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15424                           
 15425                           ;RemoteCan.c: 480: LCD_goto_line(2);
 15426  015F66  0E02               	movlw	2
 15427  015F68  EC82  F0AB         	call	_LCD_goto_line
 15428                           
 15429                           ;RemoteCan.c: 481: LCD_write_message(" Parking space FOUND");
 15430  015F6C  0E94               	movlw	low STR_17
 15431  015F6E  0100               	movlb	0	; () banked
 15432  015F70  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15433  015F72  0EFF               	movlw	high STR_17
 15434  015F74  0100               	movlb	0	; () banked
 15435  015F76  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15436  015F78  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15437                           
 15438                           ;RemoteCan.c: 482: LCD_goto_line(3);
 15439  015F7C  0E03               	movlw	3
 15440  015F7E  EC82  F0AB         	call	_LCD_goto_line
 15441                           
 15442                           ;RemoteCan.c: 483: LCD_write_message("->  KEEP MOVING   <-");
 15443  015F82  0E01               	movlw	low STR_18
 15444  015F84  0100               	movlb	0	; () banked
 15445  015F86  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15446  015F88  0EFF               	movlw	high STR_18
 15447  015F8A  0100               	movlb	0	; () banked
 15448  015F8C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15449  015F8E  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15450                           
 15451                           ;RemoteCan.c: 484: LCD_goto_line(4);
 15452  015F92  0E04               	movlw	4
 15453  015F94  EC82  F0AB         	call	_LCD_goto_line
 15454                           
 15455                           ;RemoteCan.c: 485: LCD_write_message(" until next message ");
 15456  015F98  0EAD               	movlw	low STR_19
 15457  015F9A  0100               	movlb	0	; () banked
 15458  015F9C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15459  015F9E  0EFE               	movlw	high STR_19
 15460  015FA0  0100               	movlb	0	; () banked
 15461  015FA2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15462  015FA4  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15463  015FA8  0012               	return		;funcret
 15464  015FAA                     __end_of_LCD_Gap:
 15465                           	opt stack 0
 15466                           tblptru	equ	0xFF8
 15467                           tblptrh	equ	0xFF7
 15468                           tblptrl	equ	0xFF6
 15469                           tablat	equ	0xFF5
 15470                           prodh	equ	0xFF4
 15471                           prodl	equ	0xFF3
 15472                           intcon	equ	0xFF2
 15473                           postinc0	equ	0xFEE
 15474                           wreg	equ	0xFE8
 15475                           indf1	equ	0xFE7
 15476                           plusw1	equ	0xFE3
 15477                           fsr1h	equ	0xFE2
 15478                           fsr1l	equ	0xFE1
 15479                           indf2	equ	0xFDF
 15480                           postinc2	equ	0xFDE
 15481                           plusw2	equ	0xFDB
 15482                           fsr2h	equ	0xFDA
 15483                           fsr2l	equ	0xFD9
 15484                           status	equ	0xFD8
 15485                           
 15486 ;; *************** function _LCD_End *****************
 15487 ;; Defined at:
 15488 ;;		line 514 in file "RemoteCan.c"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;		None
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;		None
 15493 ;; Return value:  Size  Location     Type
 15494 ;;		None               void
 15495 ;; Registers used:
 15496 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;Total ram usage:        0 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:    9
 15509 ;; This function calls:
 15510 ;;		_LCD_clear
 15511 ;;		_LCD_goto_line
 15512 ;;		_LCD_initialize
 15513 ;;		_LCD_write_message
 15514 ;; This function is called by:
 15515 ;;		_main
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	text37
 15520  015FAA                     __ptext37:
 15521                           	opt stack 0
 15522  015FAA                     _LCD_End:
 15523                           	opt stack 21
 15524                           
 15525                           ;RemoteCan.c: 515: LCD_initialize(16);
 15526                           
 15527                           ;incstack = 0
 15528  015FAA  0E10               	movlw	16
 15529  015FAC  EC45  F0AA         	call	_LCD_initialize
 15530                           
 15531                           ;RemoteCan.c: 516: LCD_clear();
 15532  015FB0  EC97  F0B1         	call	_LCD_clear	;wreg free
 15533                           
 15534                           ;RemoteCan.c: 517: LCD_goto_line(1);
 15535  015FB4  0E01               	movlw	1
 15536  015FB6  EC82  F0AB         	call	_LCD_goto_line
 15537                           
 15538                           ;RemoteCan.c: 518: LCD_write_message("= PARKING MESSAGES =");
 15539  015FBA  0E40               	movlw	low STR_16
 15540  015FBC  0100               	movlb	0	; () banked
 15541  015FBE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15542  015FC0  0EFF               	movlw	high STR_16
 15543  015FC2  0100               	movlb	0	; () banked
 15544  015FC4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15545  015FC6  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15546                           
 15547                           ;RemoteCan.c: 519: LCD_goto_line(2);
 15548  015FCA  0E02               	movlw	2
 15549  015FCC  EC82  F0AB         	call	_LCD_goto_line
 15550                           
 15551                           ;RemoteCan.c: 520: LCD_write_message(" Parking procedures ");
 15552  015FD0  0ED7               	movlw	low STR_29
 15553  015FD2  0100               	movlb	0	; () banked
 15554  015FD4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15555  015FD6  0EFE               	movlw	high STR_29
 15556  015FD8  0100               	movlb	0	; () banked
 15557  015FDA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15558  015FDC  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15559                           
 15560                           ;RemoteCan.c: 521: LCD_goto_line(3);
 15561  015FE0  0E03               	movlw	3
 15562  015FE2  EC82  F0AB         	call	_LCD_goto_line
 15563                           
 15564                           ;RemoteCan.c: 522: LCD_write_message("    SUCCESSFULLY    ");
 15565  015FE6  0E6E               	movlw	low STR_30
 15566  015FE8  0100               	movlb	0	; () banked
 15567  015FEA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15568  015FEC  0EFE               	movlw	high STR_30
 15569  015FEE  0100               	movlb	0	; () banked
 15570  015FF0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15571  015FF2  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15572                           
 15573                           ;RemoteCan.c: 523: LCD_goto_line(4);
 15574  015FF6  0E04               	movlw	4
 15575  015FF8  EC82  F0AB         	call	_LCD_goto_line
 15576                           
 15577                           ;RemoteCan.c: 524: LCD_write_message("     COMPLETED!     ");
 15578  015FFC  0E59               	movlw	low STR_31
 15579  015FFE  0100               	movlb	0	; () banked
 15580  016000  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15581  016002  0EFE               	movlw	high STR_31
 15582  016004  0100               	movlb	0	; () banked
 15583  016006  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15584  016008  EC64  F0B1         	call	_LCD_write_message	;wreg free
 15585  01600C  0012               	return		;funcret
 15586  01600E                     __end_of_LCD_End:
 15587                           	opt stack 0
 15588                           tblptru	equ	0xFF8
 15589                           tblptrh	equ	0xFF7
 15590                           tblptrl	equ	0xFF6
 15591                           tablat	equ	0xFF5
 15592                           prodh	equ	0xFF4
 15593                           prodl	equ	0xFF3
 15594                           intcon	equ	0xFF2
 15595                           postinc0	equ	0xFEE
 15596                           wreg	equ	0xFE8
 15597                           indf1	equ	0xFE7
 15598                           plusw1	equ	0xFE3
 15599                           fsr1h	equ	0xFE2
 15600                           fsr1l	equ	0xFE1
 15601                           indf2	equ	0xFDF
 15602                           postinc2	equ	0xFDE
 15603                           plusw2	equ	0xFDB
 15604                           fsr2h	equ	0xFDA
 15605                           fsr2l	equ	0xFD9
 15606                           status	equ	0xFD8
 15607                           
 15608 ;; *************** function _LCD_write_message *****************
 15609 ;; Defined at:
 15610 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15611 ;; Parameters:    Size  Location     Type
 15612 ;;  buffer          2   34[BANK0 ] PTR const unsigned char 
 15613 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 15614 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15615 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15616 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 15617 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 15618 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 15619 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15620 ;;		 -> STR_2(21), STR_1(21), 
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;		None
 15623 ;; Return value:  Size  Location     Type
 15624 ;;		None               void
 15625 ;; Registers used:
 15626 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15627 ;; Tracked objects:
 15628 ;;		On entry : 0/0
 15629 ;;		On exit  : 0/0
 15630 ;;		Unchanged: 0/0
 15631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;Total ram usage:        2 bytes
 15637 ;; Hardware stack levels used:    1
 15638 ;; Hardware stack levels required when called:    8
 15639 ;; This function calls:
 15640 ;;		_LCD_write_char
 15641 ;; This function is called by:
 15642 ;;		_main
 15643 ;;		_LCD_Handler
 15644 ;;		_LCD_Gap
 15645 ;;		_LCD_Park
 15646 ;;		_LCD_Parking
 15647 ;;		_LCD_End
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text38
 15652  0162C8                     __ptext38:
 15653                           	opt stack 0
 15654  0162C8                     _LCD_write_message:
 15655                           	opt stack 22
 15656                           
 15657                           ;src\LCD_44780.c: 181: while(*buffer) {
 15658                           
 15659                           ;incstack = 0
 15660  0162C8  D00D               	goto	l8681
 15661  0162CA                     l8677:
 15662                           
 15663                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15664  0162CA  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15665  0162CE  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15666  0162D2                     	if	0	;tblptru may be non-zero
 15667  0162D2                     	endif
 15668  0162D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15669  0162D2  0E00               	movlw	low (__mediumconst shr (0+16))
 15670  0162D4  6EF8               	movwf	tblptru,c
 15671  0162D6                     	endif
 15672  0162D6  0008               	tblrd		*
 15673  0162D8  50F5               	movf	tablat,w,c
 15674  0162DA  ECB8  F0AE         	call	_LCD_write_char
 15675                           
 15676                           ;src\LCD_44780.c: 186: buffer++;
 15677  0162DE  0100               	movlb	0	; () banked
 15678  0162E0  4B82               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15679  0162E2  2B83               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15680  0162E4                     l8681:
 15681  0162E4  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15682  0162E8  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15683  0162EC                     	if	0	;tblptru may be non-zero
 15684  0162EC                     	endif
 15685  0162EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15686  0162EC  0E00               	movlw	low (__mediumconst shr (0+16))
 15687  0162EE  6EF8               	movwf	tblptru,c
 15688  0162F0                     	endif
 15689  0162F0  0008               	tblrd		*
 15690  0162F2  50F5               	movf	tablat,w,c
 15691  0162F4  0900               	iorlw	0
 15692  0162F6  B4D8               	btfsc	status,2,c
 15693  0162F8  0012               	return	
 15694  0162FA  D7E7               	goto	l8677
 15695  0162FC                     __end_of_LCD_write_message:
 15696                           	opt stack 0
 15697                           tblptru	equ	0xFF8
 15698                           tblptrh	equ	0xFF7
 15699                           tblptrl	equ	0xFF6
 15700                           tablat	equ	0xFF5
 15701                           prodh	equ	0xFF4
 15702                           prodl	equ	0xFF3
 15703                           intcon	equ	0xFF2
 15704                           postinc0	equ	0xFEE
 15705                           wreg	equ	0xFE8
 15706                           indf1	equ	0xFE7
 15707                           plusw1	equ	0xFE3
 15708                           fsr1h	equ	0xFE2
 15709                           fsr1l	equ	0xFE1
 15710                           indf2	equ	0xFDF
 15711                           postinc2	equ	0xFDE
 15712                           plusw2	equ	0xFDB
 15713                           fsr2h	equ	0xFDA
 15714                           fsr2l	equ	0xFD9
 15715                           status	equ	0xFD8
 15716                           
 15717 ;; *************** function _LCD_write_char *****************
 15718 ;; Defined at:
 15719 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  value           1    wreg     unsigned char 
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;  value           1   33[BANK0 ] unsigned char 
 15724 ;;  D0              1   32[BANK0 ] unsigned char 
 15725 ;;  D1              1   31[BANK0 ] unsigned char 
 15726 ;;  D2              1   30[BANK0 ] unsigned char 
 15727 ;;  D3              1   29[BANK0 ] unsigned char 
 15728 ;; Return value:  Size  Location     Type
 15729 ;;		None               void
 15730 ;; Registers used:
 15731 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 0/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15738 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15740 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15741 ;;Total ram usage:        5 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:    7
 15744 ;; This function calls:
 15745 ;;		_LCD_send_command
 15746 ;; This function is called by:
 15747 ;;		_LCD_write_message
 15748 ;;		_LCD_write_string
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text39
 15753  015D70                     __ptext39:
 15754                           	opt stack 0
 15755  015D70                     _LCD_write_char:
 15756                           	opt stack 22
 15757                           
 15758                           ;incstack = 0
 15759                           ;LCD_write_char@value stored from wreg
 15760  015D70  0100               	movlb	0	; () banked
 15761  015D72  6F81               	movwf	LCD_write_char@value& (0+255),b
 15762                           
 15763                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15764                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15765  015D74  848D               	bsf	3981,2,c	;volatile
 15766                           
 15767                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15768  015D76  0100               	movlb	0	; () banked
 15769  015D78  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 15770  015D7A  0B01               	andlw	1
 15771  015D7C  0100               	movlb	0	; () banked
 15772  015D7E  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 15773                           
 15774                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15775  015D80  0100               	movlb	0	; () banked
 15776  015D82  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 15777  015D84  46E8               	rlncf	wreg,f,c
 15778  015D86  0B03               	andlw	3
 15779  015D88  0B01               	andlw	1
 15780  015D8A  0100               	movlb	0	; () banked
 15781  015D8C  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 15782                           
 15783                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15784  015D8E  0100               	movlb	0	; () banked
 15785  015D90  3981               	swapf	LCD_write_char@value& (0+255),w,b
 15786  015D92  42E8               	rrncf	wreg,f,c
 15787  015D94  0B07               	andlw	7
 15788  015D96  0B01               	andlw	1
 15789  015D98  0100               	movlb	0	; () banked
 15790  015D9A  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 15791                           
 15792                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15793  015D9C  0100               	movlb	0	; () banked
 15794  015D9E  3981               	swapf	LCD_write_char@value& (0+255),w,b
 15795  015DA0  0B0F               	andlw	15
 15796  015DA2  0B01               	andlw	1
 15797  015DA4  0100               	movlb	0	; () banked
 15798  015DA6  6F80               	movwf	LCD_write_char@D0& (0+255),b
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15802  015DA8  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 15803  015DAC  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 15804  015DB0  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 15805  015DB4  0100               	movlb	0	; () banked
 15806  015DB6  517D               	movf	LCD_write_char@D3& (0+255),w,b
 15807  015DB8  ECF3  F0B0         	call	_LCD_send_command
 15808                           
 15809                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15810  015DBC  0100               	movlb	0	; () banked
 15811  015DBE  3981               	swapf	LCD_write_char@value& (0+255),w,b
 15812  015DC0  46E8               	rlncf	wreg,f,c
 15813  015DC2  0B1F               	andlw	31
 15814  015DC4  0B01               	andlw	1
 15815  015DC6  0100               	movlb	0	; () banked
 15816  015DC8  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 15817                           
 15818                           ; BSR set to: 0
 15819                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15820  015DCA  0100               	movlb	0	; () banked
 15821  015DCC  4181               	rrncf	LCD_write_char@value& (0+255),w,b
 15822  015DCE  42E8               	rrncf	wreg,f,c
 15823  015DD0  0B3F               	andlw	63
 15824  015DD2  0B01               	andlw	1
 15825  015DD4  0100               	movlb	0	; () banked
 15826  015DD6  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 15827                           
 15828                           ; BSR set to: 0
 15829                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15830  015DD8  0100               	movlb	0	; () banked
 15831  015DDA  90D8               	bcf	status,0,c
 15832  015DDC  3181               	rrcf	LCD_write_char@value& (0+255),w,b
 15833  015DDE  0B01               	andlw	1
 15834  015DE0  0100               	movlb	0	; () banked
 15835  015DE2  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15839  015DE4  0100               	movlb	0	; () banked
 15840  015DE6  5181               	movf	LCD_write_char@value& (0+255),w,b
 15841  015DE8  0B01               	andlw	1
 15842  015DEA  0100               	movlb	0	; () banked
 15843  015DEC  6F80               	movwf	LCD_write_char@D0& (0+255),b
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15847  015DEE  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 15848  015DF2  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 15849  015DF6  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 15850  015DFA  0100               	movlb	0	; () banked
 15851  015DFC  517D               	movf	LCD_write_char@D3& (0+255),w,b
 15852  015DFE  ECF3  F0B0         	call	_LCD_send_command
 15853                           
 15854                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15855  015E02  948D               	bcf	3981,2,c	;volatile
 15856  015E04  0012               	return		;funcret
 15857  015E06                     __end_of_LCD_write_char:
 15858                           	opt stack 0
 15859                           tblptru	equ	0xFF8
 15860                           tblptrh	equ	0xFF7
 15861                           tblptrl	equ	0xFF6
 15862                           tablat	equ	0xFF5
 15863                           prodh	equ	0xFF4
 15864                           prodl	equ	0xFF3
 15865                           intcon	equ	0xFF2
 15866                           postinc0	equ	0xFEE
 15867                           wreg	equ	0xFE8
 15868                           indf1	equ	0xFE7
 15869                           plusw1	equ	0xFE3
 15870                           fsr1h	equ	0xFE2
 15871                           fsr1l	equ	0xFE1
 15872                           indf2	equ	0xFDF
 15873                           postinc2	equ	0xFDE
 15874                           plusw2	equ	0xFDB
 15875                           fsr2h	equ	0xFDA
 15876                           fsr2l	equ	0xFD9
 15877                           status	equ	0xFD8
 15878                           
 15879 ;; *************** function _LCD_initialize *****************
 15880 ;; Defined at:
 15881 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;  quartz_frequ    1    wreg     unsigned char 
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;  quartz_frequ    1   31[BANK0 ] unsigned char 
 15886 ;; Return value:  Size  Location     Type
 15887 ;;		None               void
 15888 ;; Registers used:
 15889 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15896 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15898 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;Total ram usage:        1 bytes
 15900 ;; Hardware stack levels used:    1
 15901 ;; Hardware stack levels required when called:    8
 15902 ;; This function calls:
 15903 ;;		_LCD_clear
 15904 ;;		_LCD_cursor
 15905 ;;		_LCD_send_command
 15906 ;;		_delay_ms
 15907 ;;		_delay_set_quartz
 15908 ;; This function is called by:
 15909 ;;		_main
 15910 ;;		_LCD_Handler
 15911 ;;		_LCD_Gap
 15912 ;;		_LCD_Park
 15913 ;;		_LCD_Parking
 15914 ;;		_LCD_End
 15915 ;;		_board_initialization
 15916 ;; This function uses a non-reentrant model
 15917 ;;
 15918                           
 15919                           	psect	text40
 15920  01548A                     __ptext40:
 15921                           	opt stack 0
 15922  01548A                     _LCD_initialize:
 15923                           	opt stack 21
 15924                           
 15925                           ;incstack = 0
 15926                           ;LCD_initialize@quartz_frequency stored from wreg
 15927  01548A  0100               	movlb	0	; () banked
 15928  01548C  6F7F               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15929                           
 15930                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15931  01548E  0100               	movlb	0	; () banked
 15932  015490  517F               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15933  015492  EC58  F0B2         	call	_delay_set_quartz
 15934                           
 15935                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15936  015496  948D               	bcf	3981,2,c	;volatile
 15937                           
 15938                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15939  015498  928B               	bcf	3979,1,c	;volatile
 15940                           
 15941                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15942  01549A  908B               	bcf	3979,0,c	;volatile
 15943                           
 15944                           ;src\LCD_44780.c: 291: delay_ms (100);
 15945  01549C  0E00               	movlw	0
 15946  01549E  0100               	movlb	0	; () banked
 15947  0154A0  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15948  0154A2  0E64               	movlw	100
 15949  0154A4  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15950  0154A6  EC10  F0B1         	call	_delay_ms	;wreg free
 15951                           
 15952                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15953  0154AA  0E00               	movlw	0
 15954  0154AC  0100               	movlb	0	; () banked
 15955  0154AE  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15956  0154B0  0E01               	movlw	1
 15957  0154B2  0100               	movlb	0	; () banked
 15958  0154B4  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15959  0154B6  0E01               	movlw	1
 15960  0154B8  0100               	movlb	0	; () banked
 15961  0154BA  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15962  0154BC  0E00               	movlw	0
 15963  0154BE  ECF3  F0B0         	call	_LCD_send_command
 15964                           
 15965                           ;src\LCD_44780.c: 293: delay_ms (100);
 15966  0154C2  0E00               	movlw	0
 15967  0154C4  0100               	movlb	0	; () banked
 15968  0154C6  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15969  0154C8  0E64               	movlw	100
 15970  0154CA  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15971  0154CC  EC10  F0B1         	call	_delay_ms	;wreg free
 15972                           
 15973                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15974  0154D0  0E00               	movlw	0
 15975  0154D2  0100               	movlb	0	; () banked
 15976  0154D4  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15977  0154D6  0E01               	movlw	1
 15978  0154D8  0100               	movlb	0	; () banked
 15979  0154DA  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15980  0154DC  0E01               	movlw	1
 15981  0154DE  0100               	movlb	0	; () banked
 15982  0154E0  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15983  0154E2  0E00               	movlw	0
 15984  0154E4  ECF3  F0B0         	call	_LCD_send_command
 15985                           
 15986                           ;src\LCD_44780.c: 295: delay_ms (10);
 15987  0154E8  0E00               	movlw	0
 15988  0154EA  0100               	movlb	0	; () banked
 15989  0154EC  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15990  0154EE  0E0A               	movlw	10
 15991  0154F0  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15992  0154F2  EC10  F0B1         	call	_delay_ms	;wreg free
 15993                           
 15994                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15995  0154F6  0E00               	movlw	0
 15996  0154F8  0100               	movlb	0	; () banked
 15997  0154FA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15998  0154FC  0E01               	movlw	1
 15999  0154FE  0100               	movlb	0	; () banked
 16000  015500  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16001  015502  0E01               	movlw	1
 16002  015504  0100               	movlb	0	; () banked
 16003  015506  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16004  015508  0E00               	movlw	0
 16005  01550A  ECF3  F0B0         	call	_LCD_send_command
 16006                           
 16007                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 16008  01550E  0E00               	movlw	0
 16009  015510  0100               	movlb	0	; () banked
 16010  015512  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16011  015514  0E01               	movlw	1
 16012  015516  0100               	movlb	0	; () banked
 16013  015518  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16014  01551A  0E00               	movlw	0
 16015  01551C  0100               	movlb	0	; () banked
 16016  01551E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16017  015520  0E00               	movlw	0
 16018  015522  ECF3  F0B0         	call	_LCD_send_command
 16019                           
 16020                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 16021  015526  0E00               	movlw	0
 16022  015528  0100               	movlb	0	; () banked
 16023  01552A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16024  01552C  0E01               	movlw	1
 16025  01552E  0100               	movlb	0	; () banked
 16026  015530  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16027  015532  0E00               	movlw	0
 16028  015534  0100               	movlb	0	; () banked
 16029  015536  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16030  015538  0E00               	movlw	0
 16031  01553A  ECF3  F0B0         	call	_LCD_send_command
 16032                           
 16033                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 16034  01553E  0E00               	movlw	0
 16035  015540  0100               	movlb	0	; () banked
 16036  015542  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16037  015544  0E00               	movlw	0
 16038  015546  0100               	movlb	0	; () banked
 16039  015548  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16040  01554A  0E00               	movlw	0
 16041  01554C  0100               	movlb	0	; () banked
 16042  01554E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16043  015550  0E01               	movlw	1
 16044  015552  ECF3  F0B0         	call	_LCD_send_command
 16045                           
 16046                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 16047  015556  0E00               	movlw	0
 16048  015558  0100               	movlb	0	; () banked
 16049  01555A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16050  01555C  0E00               	movlw	0
 16051  01555E  0100               	movlb	0	; () banked
 16052  015560  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16053  015562  0E00               	movlw	0
 16054  015564  0100               	movlb	0	; () banked
 16055  015566  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16056  015568  0E00               	movlw	0
 16057  01556A  ECF3  F0B0         	call	_LCD_send_command
 16058                           
 16059                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 16060  01556E  0E00               	movlw	0
 16061  015570  0100               	movlb	0	; () banked
 16062  015572  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16063  015574  0E00               	movlw	0
 16064  015576  0100               	movlb	0	; () banked
 16065  015578  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16066  01557A  0E00               	movlw	0
 16067  01557C  0100               	movlb	0	; () banked
 16068  01557E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16069  015580  0E01               	movlw	1
 16070  015582  ECF3  F0B0         	call	_LCD_send_command
 16071                           
 16072                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 16073  015586  0E00               	movlw	0
 16074  015588  0100               	movlb	0	; () banked
 16075  01558A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16076  01558C  0E00               	movlw	0
 16077  01558E  0100               	movlb	0	; () banked
 16078  015590  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16079  015592  0E00               	movlw	0
 16080  015594  0100               	movlb	0	; () banked
 16081  015596  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16082  015598  0E00               	movlw	0
 16083  01559A  ECF3  F0B0         	call	_LCD_send_command
 16084                           
 16085                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 16086  01559E  0E00               	movlw	0
 16087  0155A0  0100               	movlb	0	; () banked
 16088  0155A2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16089  0155A4  0E00               	movlw	0
 16090  0155A6  0100               	movlb	0	; () banked
 16091  0155A8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16092  0155AA  0E01               	movlw	1
 16093  0155AC  0100               	movlb	0	; () banked
 16094  0155AE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16095  0155B0  0E00               	movlw	0
 16096  0155B2  ECF3  F0B0         	call	_LCD_send_command
 16097                           
 16098                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 16099  0155B6  0E00               	movlw	0
 16100  0155B8  0100               	movlb	0	; () banked
 16101  0155BA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16102  0155BC  0E00               	movlw	0
 16103  0155BE  0100               	movlb	0	; () banked
 16104  0155C0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16105  0155C2  0E00               	movlw	0
 16106  0155C4  0100               	movlb	0	; () banked
 16107  0155C6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16108  0155C8  0E00               	movlw	0
 16109  0155CA  ECF3  F0B0         	call	_LCD_send_command
 16110                           
 16111                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 16112  0155CE  0E01               	movlw	1
 16113  0155D0  0100               	movlb	0	; () banked
 16114  0155D2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16115  0155D4  0E01               	movlw	1
 16116  0155D6  0100               	movlb	0	; () banked
 16117  0155D8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16118  0155DA  0E00               	movlw	0
 16119  0155DC  0100               	movlb	0	; () banked
 16120  0155DE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16121  0155E0  0E00               	movlw	0
 16122  0155E2  ECF3  F0B0         	call	_LCD_send_command
 16123                           
 16124                           ;src\LCD_44780.c: 312: LCD_clear ();
 16125  0155E6  EC97  F0B1         	call	_LCD_clear	;wreg free
 16126                           
 16127                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 16128  0155EA  0E00               	movlw	0
 16129  0155EC  0100               	movlb	0	; () banked
 16130  0155EE  6F7D               	movwf	LCD_cursor@blinking& (0+255),b
 16131  0155F0  0E00               	movlw	0
 16132  0155F2  EC7E  F0B1         	call	_LCD_cursor
 16133  0155F6  0012               	return		;funcret
 16134  0155F8                     __end_of_LCD_initialize:
 16135                           	opt stack 0
 16136                           tblptru	equ	0xFF8
 16137                           tblptrh	equ	0xFF7
 16138                           tblptrl	equ	0xFF6
 16139                           tablat	equ	0xFF5
 16140                           prodh	equ	0xFF4
 16141                           prodl	equ	0xFF3
 16142                           intcon	equ	0xFF2
 16143                           postinc0	equ	0xFEE
 16144                           wreg	equ	0xFE8
 16145                           indf1	equ	0xFE7
 16146                           plusw1	equ	0xFE3
 16147                           fsr1h	equ	0xFE2
 16148                           fsr1l	equ	0xFE1
 16149                           indf2	equ	0xFDF
 16150                           postinc2	equ	0xFDE
 16151                           plusw2	equ	0xFDB
 16152                           fsr2h	equ	0xFDA
 16153                           fsr2l	equ	0xFD9
 16154                           status	equ	0xFD8
 16155                           
 16156 ;; *************** function _delay_set_quartz *****************
 16157 ;; Defined at:
 16158 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;  frequency       1    wreg     unsigned char 
 16161 ;; Auto vars:     Size  Location     Type
 16162 ;;  frequency       1   17[BANK0 ] unsigned char 
 16163 ;; Return value:  Size  Location     Type
 16164 ;;		None               void
 16165 ;; Registers used:
 16166 ;;		wreg
 16167 ;; Tracked objects:
 16168 ;;		On entry : 0/0
 16169 ;;		On exit  : 0/0
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;Total ram usage:        1 bytes
 16177 ;; Hardware stack levels used:    1
 16178 ;; Hardware stack levels required when called:    3
 16179 ;; This function calls:
 16180 ;;		Nothing
 16181 ;; This function is called by:
 16182 ;;		_LCD_initialize
 16183 ;; This function uses a non-reentrant model
 16184 ;;
 16185                           
 16186                           	psect	text41
 16187  0164B0                     __ptext41:
 16188                           	opt stack 0
 16189  0164B0                     _delay_set_quartz:
 16190                           	opt stack 25
 16191                           
 16192                           ;incstack = 0
 16193                           ;delay_set_quartz@frequency stored from wreg
 16194  0164B0  0100               	movlb	0	; () banked
 16195  0164B2  6F71               	movwf	delay_set_quartz@frequency& (0+255),b
 16196                           
 16197                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 16198  0164B4  C071  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 16199  0164B8  0012               	return		;funcret
 16200  0164BA                     __end_of_delay_set_quartz:
 16201                           	opt stack 0
 16202                           tblptru	equ	0xFF8
 16203                           tblptrh	equ	0xFF7
 16204                           tblptrl	equ	0xFF6
 16205                           tablat	equ	0xFF5
 16206                           prodh	equ	0xFF4
 16207                           prodl	equ	0xFF3
 16208                           intcon	equ	0xFF2
 16209                           postinc0	equ	0xFEE
 16210                           wreg	equ	0xFE8
 16211                           indf1	equ	0xFE7
 16212                           plusw1	equ	0xFE3
 16213                           fsr1h	equ	0xFE2
 16214                           fsr1l	equ	0xFE1
 16215                           indf2	equ	0xFDF
 16216                           postinc2	equ	0xFDE
 16217                           plusw2	equ	0xFDB
 16218                           fsr2h	equ	0xFDA
 16219                           fsr2l	equ	0xFD9
 16220                           status	equ	0xFD8
 16221                           
 16222 ;; *************** function _LCD_cursor *****************
 16223 ;; Defined at:
 16224 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;  active          1    wreg     unsigned char 
 16227 ;;  blinking        1   29[BANK0 ] unsigned char 
 16228 ;; Auto vars:     Size  Location     Type
 16229 ;;  active          1   30[BANK0 ] unsigned char 
 16230 ;; Return value:  Size  Location     Type
 16231 ;;		None               void
 16232 ;; Registers used:
 16233 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16234 ;; Tracked objects:
 16235 ;;		On entry : 0/0
 16236 ;;		On exit  : 0/0
 16237 ;;		Unchanged: 0/0
 16238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16239 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16243 ;;Total ram usage:        2 bytes
 16244 ;; Hardware stack levels used:    1
 16245 ;; Hardware stack levels required when called:    7
 16246 ;; This function calls:
 16247 ;;		_LCD_send_command
 16248 ;; This function is called by:
 16249 ;;		_LCD_initialize
 16250 ;; This function uses a non-reentrant model
 16251 ;;
 16252                           
 16253                           	psect	text42
 16254  0162FC                     __ptext42:
 16255                           	opt stack 0
 16256  0162FC                     _LCD_cursor:
 16257                           	opt stack 21
 16258                           
 16259                           ;incstack = 0
 16260                           ;LCD_cursor@active stored from wreg
 16261  0162FC  0100               	movlb	0	; () banked
 16262  0162FE  6F7E               	movwf	LCD_cursor@active& (0+255),b
 16263                           
 16264                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 16265  016300  0E00               	movlw	0
 16266  016302  0100               	movlb	0	; () banked
 16267  016304  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16268  016306  0E00               	movlw	0
 16269  016308  0100               	movlb	0	; () banked
 16270  01630A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16271  01630C  0E00               	movlw	0
 16272  01630E  0100               	movlb	0	; () banked
 16273  016310  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16274  016312  0E00               	movlw	0
 16275  016314  ECF3  F0B0         	call	_LCD_send_command
 16276                           
 16277                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 16278  016318  0E01               	movlw	1
 16279  01631A  0100               	movlb	0	; () banked
 16280  01631C  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16281  01631E  C07E  F07A         	movff	LCD_cursor@active,LCD_send_command@D1
 16282  016322  C07D  F07B         	movff	LCD_cursor@blinking,LCD_send_command@D0
 16283  016326  0E01               	movlw	1
 16284  016328  ECF3  F0B0         	call	_LCD_send_command
 16285  01632C  0012               	return		;funcret
 16286  01632E                     __end_of_LCD_cursor:
 16287                           	opt stack 0
 16288                           tblptru	equ	0xFF8
 16289                           tblptrh	equ	0xFF7
 16290                           tblptrl	equ	0xFF6
 16291                           tablat	equ	0xFF5
 16292                           prodh	equ	0xFF4
 16293                           prodl	equ	0xFF3
 16294                           intcon	equ	0xFF2
 16295                           postinc0	equ	0xFEE
 16296                           wreg	equ	0xFE8
 16297                           indf1	equ	0xFE7
 16298                           plusw1	equ	0xFE3
 16299                           fsr1h	equ	0xFE2
 16300                           fsr1l	equ	0xFE1
 16301                           indf2	equ	0xFDF
 16302                           postinc2	equ	0xFDE
 16303                           plusw2	equ	0xFDB
 16304                           fsr2h	equ	0xFDA
 16305                           fsr2l	equ	0xFD9
 16306                           status	equ	0xFD8
 16307                           
 16308 ;; *************** function _LCD_clear *****************
 16309 ;; Defined at:
 16310 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16311 ;; Parameters:    Size  Location     Type
 16312 ;;		None
 16313 ;; Auto vars:     Size  Location     Type
 16314 ;;		None
 16315 ;; Return value:  Size  Location     Type
 16316 ;;		None               void
 16317 ;; Registers used:
 16318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16319 ;; Tracked objects:
 16320 ;;		On entry : 0/0
 16321 ;;		On exit  : 0/0
 16322 ;;		Unchanged: 0/0
 16323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16328 ;;Total ram usage:        0 bytes
 16329 ;; Hardware stack levels used:    1
 16330 ;; Hardware stack levels required when called:    7
 16331 ;; This function calls:
 16332 ;;		_LCD_send_command
 16333 ;; This function is called by:
 16334 ;;		_LCD_initialize
 16335 ;;		_LCD_Handler
 16336 ;;		_LCD_Gap
 16337 ;;		_LCD_Park
 16338 ;;		_LCD_Parking
 16339 ;;		_LCD_End
 16340 ;;		_board_initialization
 16341 ;; This function uses a non-reentrant model
 16342 ;;
 16343                           
 16344                           	psect	text43
 16345  01632E                     __ptext43:
 16346                           	opt stack 0
 16347  01632E                     _LCD_clear:
 16348                           	opt stack 21
 16349                           
 16350                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16351                           
 16352                           ;incstack = 0
 16353  01632E  0E00               	movlw	0
 16354  016330  0100               	movlb	0	; () banked
 16355  016332  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16356  016334  0E00               	movlw	0
 16357  016336  0100               	movlb	0	; () banked
 16358  016338  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16359  01633A  0E00               	movlw	0
 16360  01633C  0100               	movlb	0	; () banked
 16361  01633E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16362  016340  0E00               	movlw	0
 16363  016342  ECF3  F0B0         	call	_LCD_send_command
 16364                           
 16365                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16366  016346  0E00               	movlw	0
 16367  016348  0100               	movlb	0	; () banked
 16368  01634A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16369  01634C  0E00               	movlw	0
 16370  01634E  0100               	movlb	0	; () banked
 16371  016350  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16372  016352  0E01               	movlw	1
 16373  016354  0100               	movlb	0	; () banked
 16374  016356  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16375  016358  0E00               	movlw	0
 16376  01635A  ECF3  F0B0         	call	_LCD_send_command
 16377  01635E  0012               	return		;funcret
 16378  016360                     __end_of_LCD_clear:
 16379                           	opt stack 0
 16380                           tblptru	equ	0xFF8
 16381                           tblptrh	equ	0xFF7
 16382                           tblptrl	equ	0xFF6
 16383                           tablat	equ	0xFF5
 16384                           prodh	equ	0xFF4
 16385                           prodl	equ	0xFF3
 16386                           intcon	equ	0xFF2
 16387                           postinc0	equ	0xFEE
 16388                           wreg	equ	0xFE8
 16389                           indf1	equ	0xFE7
 16390                           plusw1	equ	0xFE3
 16391                           fsr1h	equ	0xFE2
 16392                           fsr1l	equ	0xFE1
 16393                           indf2	equ	0xFDF
 16394                           postinc2	equ	0xFDE
 16395                           plusw2	equ	0xFDB
 16396                           fsr2h	equ	0xFDA
 16397                           fsr2l	equ	0xFD9
 16398                           status	equ	0xFD8
 16399                           
 16400 ;; *************** function _LCD_goto_line *****************
 16401 ;; Defined at:
 16402 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;  line            1    wreg     unsigned char 
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;  line            1   29[BANK0 ] unsigned char 
 16407 ;; Return value:  Size  Location     Type
 16408 ;;		None               void
 16409 ;; Registers used:
 16410 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16411 ;; Tracked objects:
 16412 ;;		On entry : 0/0
 16413 ;;		On exit  : 0/0
 16414 ;;		Unchanged: 0/0
 16415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16417 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16419 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16420 ;;Total ram usage:        1 bytes
 16421 ;; Hardware stack levels used:    1
 16422 ;; Hardware stack levels required when called:    7
 16423 ;; This function calls:
 16424 ;;		_LCD_send_command
 16425 ;; This function is called by:
 16426 ;;		_LCD_goto_xy
 16427 ;;		_main
 16428 ;;		_LCD_Handler
 16429 ;;		_LCD_Gap
 16430 ;;		_LCD_Park
 16431 ;;		_LCD_Parking
 16432 ;;		_LCD_End
 16433 ;;		_board_initialization
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           	psect	text44
 16438  015704                     __ptext44:
 16439                           	opt stack 0
 16440  015704                     _LCD_goto_line:
 16441                           	opt stack 22
 16442                           
 16443                           ;incstack = 0
 16444                           ;LCD_goto_line@line stored from wreg
 16445  015704  0100               	movlb	0	; () banked
 16446  015706  6F7D               	movwf	LCD_goto_line@line& (0+255),b
 16447                           
 16448                           ;src\LCD_44780.c: 113: switch(line) {
 16449  015708  D064               	goto	l8311
 16450  01570A                     l8303:
 16451  01570A  0E00               	movlw	0
 16452  01570C  0100               	movlb	0	; () banked
 16453  01570E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16454  015710  0E00               	movlw	0
 16455  015712  0100               	movlb	0	; () banked
 16456  015714  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16457  015716  0E00               	movlw	0
 16458  015718  0100               	movlb	0	; () banked
 16459  01571A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16460  01571C  0E01               	movlw	1
 16461  01571E  ECF3  F0B0         	call	_LCD_send_command
 16462                           
 16463                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16464  015722  0E00               	movlw	0
 16465  015724  0100               	movlb	0	; () banked
 16466  015726  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16467  015728  0E00               	movlw	0
 16468  01572A  0100               	movlb	0	; () banked
 16469  01572C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16470  01572E  0E00               	movlw	0
 16471  015730  0100               	movlb	0	; () banked
 16472  015732  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16473  015734  0E00               	movlw	0
 16474  015736  ECF3  F0B0         	call	_LCD_send_command
 16475                           
 16476                           ;src\LCD_44780.c: 117: break;
 16477  01573A  0012               	return	
 16478  01573C                     l8305:
 16479  01573C  0E01               	movlw	1
 16480  01573E  0100               	movlb	0	; () banked
 16481  015740  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16482  015742  0E00               	movlw	0
 16483  015744  0100               	movlb	0	; () banked
 16484  015746  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16485  015748  0E00               	movlw	0
 16486  01574A  0100               	movlb	0	; () banked
 16487  01574C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16488  01574E  0E01               	movlw	1
 16489  015750  ECF3  F0B0         	call	_LCD_send_command
 16490                           
 16491                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16492  015754  0E00               	movlw	0
 16493  015756  0100               	movlb	0	; () banked
 16494  015758  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16495  01575A  0E00               	movlw	0
 16496  01575C  0100               	movlb	0	; () banked
 16497  01575E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16498  015760  0E00               	movlw	0
 16499  015762  0100               	movlb	0	; () banked
 16500  015764  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16501  015766  0E00               	movlw	0
 16502  015768  ECF3  F0B0         	call	_LCD_send_command
 16503                           
 16504                           ;src\LCD_44780.c: 121: break;
 16505  01576C  0012               	return	
 16506  01576E                     l8307:
 16507  01576E  0E00               	movlw	0
 16508  015770  0100               	movlb	0	; () banked
 16509  015772  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16510  015774  0E00               	movlw	0
 16511  015776  0100               	movlb	0	; () banked
 16512  015778  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16513  01577A  0E01               	movlw	1
 16514  01577C  0100               	movlb	0	; () banked
 16515  01577E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16516  015780  0E01               	movlw	1
 16517  015782  ECF3  F0B0         	call	_LCD_send_command
 16518                           
 16519                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16520  015786  0E01               	movlw	1
 16521  015788  0100               	movlb	0	; () banked
 16522  01578A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16523  01578C  0E00               	movlw	0
 16524  01578E  0100               	movlb	0	; () banked
 16525  015790  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16526  015792  0E00               	movlw	0
 16527  015794  0100               	movlb	0	; () banked
 16528  015796  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16529  015798  0E00               	movlw	0
 16530  01579A  ECF3  F0B0         	call	_LCD_send_command
 16531                           
 16532                           ;src\LCD_44780.c: 125: break;
 16533  01579E  0012               	return	
 16534  0157A0                     l8309:
 16535  0157A0  0E01               	movlw	1
 16536  0157A2  0100               	movlb	0	; () banked
 16537  0157A4  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16538  0157A6  0E00               	movlw	0
 16539  0157A8  0100               	movlb	0	; () banked
 16540  0157AA  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16541  0157AC  0E01               	movlw	1
 16542  0157AE  0100               	movlb	0	; () banked
 16543  0157B0  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16544  0157B2  0E01               	movlw	1
 16545  0157B4  ECF3  F0B0         	call	_LCD_send_command
 16546                           
 16547                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 16548  0157B8  0E01               	movlw	1
 16549  0157BA  0100               	movlb	0	; () banked
 16550  0157BC  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16551  0157BE  0E00               	movlw	0
 16552  0157C0  0100               	movlb	0	; () banked
 16553  0157C2  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16554  0157C4  0E00               	movlw	0
 16555  0157C6  0100               	movlb	0	; () banked
 16556  0157C8  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16557  0157CA  0E00               	movlw	0
 16558  0157CC  ECF3  F0B0         	call	_LCD_send_command
 16559                           
 16560                           ;src\LCD_44780.c: 129: }
 16561  0157D0  0012               	return	
 16562  0157D2                     l8311:
 16563  0157D2  0100               	movlb	0	; () banked
 16564  0157D4  517D               	movf	LCD_goto_line@line& (0+255),w,b
 16565                           
 16566                           ; Switch size 1, requested type "space"
 16567                           ; Number of cases is 4, Range of values is 1 to 4
 16568                           ; switch strategies available:
 16569                           ; Name         Instructions Cycles
 16570                           ; simple_byte           13     7 (average)
 16571                           ;	Chosen strategy is simple_byte
 16572  0157D6  0A01               	xorlw	1	; case 1
 16573  0157D8  B4D8               	btfsc	status,2,c
 16574  0157DA  D797               	goto	l8303
 16575  0157DC  0A03               	xorlw	3	; case 2
 16576  0157DE  B4D8               	btfsc	status,2,c
 16577  0157E0  D7AD               	goto	l8305
 16578  0157E2  0A01               	xorlw	1	; case 3
 16579  0157E4  B4D8               	btfsc	status,2,c
 16580  0157E6  D7C3               	goto	l8307
 16581  0157E8  0A07               	xorlw	7	; case 4
 16582  0157EA  A4D8               	btfss	status,2,c
 16583  0157EC  0012               	return	
 16584  0157EE  D7D8               	goto	l8309
 16585  0157F0                     __end_of_LCD_goto_line:
 16586                           	opt stack 0
 16587                           tblptru	equ	0xFF8
 16588                           tblptrh	equ	0xFF7
 16589                           tblptrl	equ	0xFF6
 16590                           tablat	equ	0xFF5
 16591                           prodh	equ	0xFF4
 16592                           prodl	equ	0xFF3
 16593                           intcon	equ	0xFF2
 16594                           postinc0	equ	0xFEE
 16595                           wreg	equ	0xFE8
 16596                           indf1	equ	0xFE7
 16597                           plusw1	equ	0xFE3
 16598                           fsr1h	equ	0xFE2
 16599                           fsr1l	equ	0xFE1
 16600                           indf2	equ	0xFDF
 16601                           postinc2	equ	0xFDE
 16602                           plusw2	equ	0xFDB
 16603                           fsr2h	equ	0xFDA
 16604                           fsr2l	equ	0xFD9
 16605                           status	equ	0xFD8
 16606                           
 16607 ;; *************** function _LCD_send_command *****************
 16608 ;; Defined at:
 16609 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16610 ;; Parameters:    Size  Location     Type
 16611 ;;  D3              1    wreg     unsigned char 
 16612 ;;  D2              1   25[BANK0 ] unsigned char 
 16613 ;;  D1              1   26[BANK0 ] unsigned char 
 16614 ;;  D0              1   27[BANK0 ] unsigned char 
 16615 ;; Auto vars:     Size  Location     Type
 16616 ;;  D3              1   28[BANK0 ] unsigned char 
 16617 ;; Return value:  Size  Location     Type
 16618 ;;		None               void
 16619 ;; Registers used:
 16620 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16621 ;; Tracked objects:
 16622 ;;		On entry : 0/0
 16623 ;;		On exit  : 0/0
 16624 ;;		Unchanged: 0/0
 16625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16626 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16630 ;;Total ram usage:        4 bytes
 16631 ;; Hardware stack levels used:    1
 16632 ;; Hardware stack levels required when called:    6
 16633 ;; This function calls:
 16634 ;;		_LCD_enable_pulse
 16635 ;; This function is called by:
 16636 ;;		_LCD_shift_cursor
 16637 ;;		_LCD_goto_line
 16638 ;;		_LCD_write_char
 16639 ;;		_LCD_clear
 16640 ;;		_LCD_cursor
 16641 ;;		_LCD_initialize
 16642 ;;		_LCD_home
 16643 ;;		_LCD_shift
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647                           	psect	text45
 16648  0161E6                     __ptext45:
 16649                           	opt stack 0
 16650  0161E6                     _LCD_send_command:
 16651                           	opt stack 22
 16652                           
 16653                           ;incstack = 0
 16654                           ;LCD_send_command@D3 stored from wreg
 16655  0161E6  0100               	movlb	0	; () banked
 16656  0161E8  6F7C               	movwf	LCD_send_command@D3& (0+255),b
 16657                           
 16658                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16659  0161EA  0100               	movlb	0	; () banked
 16660  0161EC  B17B               	btfsc	LCD_send_command@D0& (0+255),0,b
 16661  0161EE  D002               	bra	u10315
 16662  0161F0  948B               	bcf	3979,2,c	;volatile
 16663  0161F2  D001               	bra	u10316
 16664  0161F4                     u10315:
 16665  0161F4  848B               	bsf	3979,2,c	;volatile
 16666  0161F6                     u10316:
 16667                           
 16668                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16669  0161F6  0100               	movlb	0	; () banked
 16670  0161F8  B17A               	btfsc	LCD_send_command@D1& (0+255),0,b
 16671  0161FA  D002               	bra	u10325
 16672  0161FC  968B               	bcf	3979,3,c	;volatile
 16673  0161FE  D001               	bra	u10326
 16674  016200                     u10325:
 16675  016200  868B               	bsf	3979,3,c	;volatile
 16676  016202                     u10326:
 16677                           
 16678                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16679  016202  0100               	movlb	0	; () banked
 16680  016204  B179               	btfsc	LCD_send_command@D2& (0+255),0,b
 16681  016206  D002               	bra	u10335
 16682  016208  908C               	bcf	3980,0,c	;volatile
 16683  01620A  D001               	bra	u10336
 16684  01620C                     u10335:
 16685  01620C  808C               	bsf	3980,0,c	;volatile
 16686  01620E                     u10336:
 16687                           
 16688                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16689  01620E  0100               	movlb	0	; () banked
 16690  016210  B17C               	btfsc	LCD_send_command@D3& (0+255),0,b
 16691  016212  D002               	bra	u10345
 16692  016214  928C               	bcf	3980,1,c	;volatile
 16693  016216  D001               	bra	u10346
 16694  016218                     u10345:
 16695  016218  828C               	bsf	3980,1,c	;volatile
 16696  01621A                     u10346:
 16697                           
 16698                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16699  01621A  ECEA  F0B1         	call	_LCD_enable_pulse	;wreg free
 16700  01621E  0012               	return		;funcret
 16701  016220                     __end_of_LCD_send_command:
 16702                           	opt stack 0
 16703                           tblptru	equ	0xFF8
 16704                           tblptrh	equ	0xFF7
 16705                           tblptrl	equ	0xFF6
 16706                           tablat	equ	0xFF5
 16707                           prodh	equ	0xFF4
 16708                           prodl	equ	0xFF3
 16709                           intcon	equ	0xFF2
 16710                           postinc0	equ	0xFEE
 16711                           wreg	equ	0xFE8
 16712                           indf1	equ	0xFE7
 16713                           plusw1	equ	0xFE3
 16714                           fsr1h	equ	0xFE2
 16715                           fsr1l	equ	0xFE1
 16716                           indf2	equ	0xFDF
 16717                           postinc2	equ	0xFDE
 16718                           plusw2	equ	0xFDB
 16719                           fsr2h	equ	0xFDA
 16720                           fsr2l	equ	0xFD9
 16721                           status	equ	0xFD8
 16722                           
 16723 ;; *************** function _LCD_enable_pulse *****************
 16724 ;; Defined at:
 16725 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16726 ;; Parameters:    Size  Location     Type
 16727 ;;		None
 16728 ;; Auto vars:     Size  Location     Type
 16729 ;;		None
 16730 ;; Return value:  Size  Location     Type
 16731 ;;		None               void
 16732 ;; Registers used:
 16733 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16734 ;; Tracked objects:
 16735 ;;		On entry : 0/0
 16736 ;;		On exit  : 0/0
 16737 ;;		Unchanged: 0/0
 16738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16743 ;;Total ram usage:        0 bytes
 16744 ;; Hardware stack levels used:    1
 16745 ;; Hardware stack levels required when called:    5
 16746 ;; This function calls:
 16747 ;;		_delay_ms
 16748 ;; This function is called by:
 16749 ;;		_LCD_send_command
 16750 ;; This function uses a non-reentrant model
 16751 ;;
 16752                           
 16753                           	psect	text46
 16754  0163D4                     __ptext46:
 16755                           	opt stack 0
 16756  0163D4                     _LCD_enable_pulse:
 16757                           	opt stack 22
 16758                           
 16759                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16760                           
 16761                           ;incstack = 0
 16762  0163D4  828B               	bsf	3979,1,c	;volatile
 16763                           
 16764                           ;src\LCD_44780.c: 52: delay_ms (1);
 16765  0163D6  0E00               	movlw	0
 16766  0163D8  0100               	movlb	0	; () banked
 16767  0163DA  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16768  0163DC  0E01               	movlw	1
 16769  0163DE  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16770  0163E0  EC10  F0B1         	call	_delay_ms	;wreg free
 16771                           
 16772                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16773  0163E4  928B               	bcf	3979,1,c	;volatile
 16774                           
 16775                           ;src\LCD_44780.c: 54: delay_ms (1);
 16776  0163E6  0E00               	movlw	0
 16777  0163E8  0100               	movlb	0	; () banked
 16778  0163EA  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16779  0163EC  0E01               	movlw	1
 16780  0163EE  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16781  0163F0  EC10  F0B1         	call	_delay_ms	;wreg free
 16782  0163F4  0012               	return		;funcret
 16783  0163F6                     __end_of_LCD_enable_pulse:
 16784                           	opt stack 0
 16785                           tblptru	equ	0xFF8
 16786                           tblptrh	equ	0xFF7
 16787                           tblptrl	equ	0xFF6
 16788                           tablat	equ	0xFF5
 16789                           prodh	equ	0xFF4
 16790                           prodl	equ	0xFF3
 16791                           intcon	equ	0xFF2
 16792                           postinc0	equ	0xFEE
 16793                           wreg	equ	0xFE8
 16794                           indf1	equ	0xFE7
 16795                           plusw1	equ	0xFE3
 16796                           fsr1h	equ	0xFE2
 16797                           fsr1l	equ	0xFE1
 16798                           indf2	equ	0xFDF
 16799                           postinc2	equ	0xFDE
 16800                           plusw2	equ	0xFDB
 16801                           fsr2h	equ	0xFDA
 16802                           fsr2l	equ	0xFD9
 16803                           status	equ	0xFD8
 16804                           
 16805 ;; *************** function _delay_ms *****************
 16806 ;; Defined at:
 16807 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16808 ;; Parameters:    Size  Location     Type
 16809 ;;  value_ms        2   23[BANK0 ] unsigned int 
 16810 ;; Auto vars:     Size  Location     Type
 16811 ;;		None
 16812 ;; Return value:  Size  Location     Type
 16813 ;;		None               void
 16814 ;; Registers used:
 16815 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16816 ;; Tracked objects:
 16817 ;;		On entry : 0/0
 16818 ;;		On exit  : 0/0
 16819 ;;		Unchanged: 0/0
 16820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16821 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16824 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16825 ;;Total ram usage:        2 bytes
 16826 ;; Hardware stack levels used:    1
 16827 ;; Hardware stack levels required when called:    4
 16828 ;; This function calls:
 16829 ;;		___wmul
 16830 ;; This function is called by:
 16831 ;;		_LCD_enable_pulse
 16832 ;;		_LCD_initialize
 16833 ;;		_main
 16834 ;;		_delay_s
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838                           	psect	text47
 16839  016220                     __ptext47:
 16840                           	opt stack 0
 16841  016220                     _delay_ms:
 16842                           	opt stack 26
 16843                           
 16844                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16845                           
 16846                           ;incstack = 0
 16847  016220  C0ED  F071         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16848  016224  0100               	movlb	0	; () banked
 16849  016226  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 16850  016228  C077  F073         	movff	delay_ms@value_ms,___wmul@multiplicand
 16851  01622C  C078  F074         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16852  016230  EC49  F0B1         	call	___wmul	;wreg free
 16853  016234  C071  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
 16854  016238  C072  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16855                           
 16856                           ;src\delay.c: 75: while (clock_counter_reference) {
 16857  01623C  D007               	goto	l589
 16858  01623E                     l7847:
 16859                           
 16860                           ;src\delay.c: 85: _delay(240);
 16861  01623E  0E50               	movlw	80
 16862  016240                     u13397:
 16863  016240  2EE8               	decfsz	wreg,f,c
 16864  016242  D7FE               	goto	u13397
 16865                           
 16866                           ;src\delay.c: 88: clock_counter_reference--;
 16867  016244  0100               	movlb	0	; () banked
 16868  016246  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16869  016248  A0D8               	btfss	status,0,c
 16870  01624A  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16871  01624C                     l589:
 16872  01624C  0100               	movlb	0	; () banked
 16873  01624E  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16874  016250  0100               	movlb	0	; () banked
 16875  016252  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16876  016254  B4D8               	btfsc	status,2,c
 16877  016256  0012               	return	
 16878  016258  D7F2               	goto	l7847
 16879  01625A                     __end_of_delay_ms:
 16880                           	opt stack 0
 16881                           tblptru	equ	0xFF8
 16882                           tblptrh	equ	0xFF7
 16883                           tblptrl	equ	0xFF6
 16884                           tablat	equ	0xFF5
 16885                           prodh	equ	0xFF4
 16886                           prodl	equ	0xFF3
 16887                           intcon	equ	0xFF2
 16888                           postinc0	equ	0xFEE
 16889                           wreg	equ	0xFE8
 16890                           indf1	equ	0xFE7
 16891                           plusw1	equ	0xFE3
 16892                           fsr1h	equ	0xFE2
 16893                           fsr1l	equ	0xFE1
 16894                           indf2	equ	0xFDF
 16895                           postinc2	equ	0xFDE
 16896                           plusw2	equ	0xFDB
 16897                           fsr2h	equ	0xFDA
 16898                           fsr2l	equ	0xFD9
 16899                           status	equ	0xFD8
 16900                           
 16901 ;; *************** function ___wmul *****************
 16902 ;; Defined at:
 16903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16904 ;; Parameters:    Size  Location     Type
 16905 ;;  multiplier      2   17[BANK0 ] unsigned int 
 16906 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 16907 ;; Auto vars:     Size  Location     Type
 16908 ;;  product         2   21[BANK0 ] unsigned int 
 16909 ;; Return value:  Size  Location     Type
 16910 ;;                  2   17[BANK0 ] unsigned int 
 16911 ;; Registers used:
 16912 ;;		wreg, status,2, status,0, prodl, prodh
 16913 ;; Tracked objects:
 16914 ;;		On entry : 0/0
 16915 ;;		On exit  : 0/0
 16916 ;;		Unchanged: 0/0
 16917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16918 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16921 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16922 ;;Total ram usage:        6 bytes
 16923 ;; Hardware stack levels used:    1
 16924 ;; Hardware stack levels required when called:    3
 16925 ;; This function calls:
 16926 ;;		Nothing
 16927 ;; This function is called by:
 16928 ;;		_delay_ms
 16929 ;;		_sprintf
 16930 ;; This function uses a non-reentrant model
 16931 ;;
 16932                           
 16933                           	psect	text48
 16934  016292                     __ptext48:
 16935                           	opt stack 0
 16936  016292                     ___wmul:
 16937                           	opt stack 26
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;incstack = 0
 16941  016292  0100               	movlb	0	; () banked
 16942  016294  5171               	movf	___wmul@multiplier& (0+255),w,b
 16943  016296  0100               	movlb	0	; () banked
 16944  016298  0373               	mulwf	___wmul@multiplicand& (0+255),b
 16945  01629A  CFF3 F075          	movff	prodl,___wmul@product
 16946  01629E  CFF4 F076          	movff	prodh,___wmul@product+1
 16947  0162A2  0100               	movlb	0	; () banked
 16948  0162A4  5171               	movf	___wmul@multiplier& (0+255),w,b
 16949  0162A6  0100               	movlb	0	; () banked
 16950  0162A8  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16951  0162AA  50F3               	movf	prodl,w,c
 16952  0162AC  0100               	movlb	0	; () banked
 16953  0162AE  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 16954  0162B0  0100               	movlb	0	; () banked
 16955  0162B2  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16956  0162B4  0100               	movlb	0	; () banked
 16957  0162B6  0373               	mulwf	___wmul@multiplicand& (0+255),b
 16958  0162B8  50F3               	movf	prodl,w,c
 16959  0162BA  0100               	movlb	0	; () banked
 16960  0162BC  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 16961                           
 16962                           ; BSR set to: 0
 16963  0162BE  C075  F071         	movff	___wmul@product,?___wmul
 16964  0162C2  C076  F072         	movff	___wmul@product+1,?___wmul+1
 16965  0162C6  0012               	return	
 16966  0162C8                     __end_of___wmul:
 16967                           	opt stack 0
 16968                           tblptru	equ	0xFF8
 16969                           tblptrh	equ	0xFF7
 16970                           tblptrl	equ	0xFF6
 16971                           tablat	equ	0xFF5
 16972                           prodh	equ	0xFF4
 16973                           prodl	equ	0xFF3
 16974                           intcon	equ	0xFF2
 16975                           postinc0	equ	0xFEE
 16976                           wreg	equ	0xFE8
 16977                           indf1	equ	0xFE7
 16978                           plusw1	equ	0xFE3
 16979                           fsr1h	equ	0xFE2
 16980                           fsr1l	equ	0xFE1
 16981                           indf2	equ	0xFDF
 16982                           postinc2	equ	0xFDE
 16983                           plusw2	equ	0xFDB
 16984                           fsr2h	equ	0xFDA
 16985                           fsr2l	equ	0xFD9
 16986                           status	equ	0xFD8
 16987                           
 16988 ;; *************** function _Joystick_Polling *****************
 16989 ;; Defined at:
 16990 ;;		line 557 in file "RemoteCan.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;		None
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;  i               1   18[BANK0 ] unsigned char 
 16995 ;; Return value:  Size  Location     Type
 16996 ;;		None               void
 16997 ;; Registers used:
 16998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16999 ;; Tracked objects:
 17000 ;;		On entry : 0/0
 17001 ;;		On exit  : 0/0
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17008 ;;Total ram usage:        2 bytes
 17009 ;; Hardware stack levels used:    1
 17010 ;; Hardware stack levels required when called:    3
 17011 ;; This function calls:
 17012 ;;		Nothing
 17013 ;; This function is called by:
 17014 ;;		_main
 17015 ;; This function uses a non-reentrant model
 17016 ;;
 17017                           
 17018                           	psect	text49
 17019  016070                     __ptext49:
 17020                           	opt stack 0
 17021  016070                     _Joystick_Polling:
 17022                           	opt stack 27
 17023                           
 17024                           ;RemoteCan.c: 558: for (unsigned char i = 0; i < 2; i++) {
 17025                           
 17026                           ; BSR set to: 0
 17027                           ;incstack = 0
 17028  016070  0E00               	movlw	0
 17029  016072  0100               	movlb	0	; () banked
 17030  016074  6F72               	movwf	Joystick_Polling@i& (0+255),b
 17031  016076                     l7107:
 17032                           
 17033                           ; BSR set to: 0
 17034  016076  0E01               	movlw	1
 17035  016078  0100               	movlb	0	; () banked
 17036  01607A  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 17037  01607C  D001               	goto	l920
 17038  01607E  0012               	return	
 17039  016080                     l920:
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;RemoteCan.c: 559: ADCON0bits.GO = 1;
 17043  016080  82C2               	bsf	4034,1,c	;volatile
 17044  016082                     l922:
 17045  016082  B2C2               	btfsc	4034,1,c	;volatile
 17046  016084  D7FE               	goto	l922
 17047                           
 17048                           ;RemoteCan.c: 561: JoystickValues[i] = ADRESH;
 17049  016086  0100               	movlb	0	; () banked
 17050  016088  5172               	movf	Joystick_Polling@i& (0+255),w,b
 17051  01608A  0D01               	mullw	1
 17052  01608C  0EDD               	movlw	low _JoystickValues
 17053  01608E  24F3               	addwf	prodl,w,c
 17054  016090  6ED9               	movwf	fsr2l,c
 17055  016092  0E00               	movlw	high _JoystickValues
 17056  016094  20F4               	addwfc	prodh,w,c
 17057  016096  6EDA               	movwf	fsr2h,c
 17058  016098  CFC4 FFDF          	movff	4036,indf2	;volatile
 17059                           
 17060                           ; BSR set to: 0
 17061                           ;RemoteCan.c: 562: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 17062  01609C  A4C2               	btfss	4034,2,c	;volatile
 17063  01609E  D002               	goto	u9090
 17064  0160A0  0E01               	movlw	1
 17065  0160A2  D001               	goto	u9096
 17066  0160A4                     u9090:
 17067  0160A4  0E00               	movlw	0
 17068  0160A6                     u9096:
 17069  0160A6  0AFF               	xorlw	255
 17070  0160A8  0100               	movlb	0	; () banked
 17071  0160AA  6F71               	movwf	??_Joystick_Polling& (0+255),b
 17072  0160AC  0100               	movlb	0	; () banked
 17073  0160AE  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 17074  0160B0  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 17075  0160B2  50C2               	movf	4034,w,c	;volatile
 17076  0160B4  0100               	movlb	0	; () banked
 17077  0160B6  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 17078  0160B8  0BFB               	andlw	-5
 17079  0160BA  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 17080  0160BC  6EC2               	movwf	4034,c	;volatile
 17081                           
 17082                           ; BSR set to: 0
 17083  0160BE  0100               	movlb	0	; () banked
 17084  0160C0  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 17085  0160C2  D7D9               	goto	l7107
 17086  0160C4                     __end_of_Joystick_Polling:
 17087                           	opt stack 0
 17088                           tblptru	equ	0xFF8
 17089                           tblptrh	equ	0xFF7
 17090                           tblptrl	equ	0xFF6
 17091                           tablat	equ	0xFF5
 17092                           prodh	equ	0xFF4
 17093                           prodl	equ	0xFF3
 17094                           intcon	equ	0xFF2
 17095                           postinc0	equ	0xFEE
 17096                           wreg	equ	0xFE8
 17097                           indf1	equ	0xFE7
 17098                           plusw1	equ	0xFE3
 17099                           fsr1h	equ	0xFE2
 17100                           fsr1l	equ	0xFE1
 17101                           indf2	equ	0xFDF
 17102                           postinc2	equ	0xFDE
 17103                           plusw2	equ	0xFDB
 17104                           fsr2h	equ	0xFDA
 17105                           fsr2l	equ	0xFD9
 17106                           status	equ	0xFD8
 17107                           
 17108 ;; *************** function _F2_Button_Polling *****************
 17109 ;; Defined at:
 17110 ;;		line 547 in file "RemoteCan.c"
 17111 ;; Parameters:    Size  Location     Type
 17112 ;;		None
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;		None
 17115 ;; Return value:  Size  Location     Type
 17116 ;;		None               void
 17117 ;; Registers used:
 17118 ;;		None
 17119 ;; Tracked objects:
 17120 ;;		On entry : 0/0
 17121 ;;		On exit  : 0/0
 17122 ;;		Unchanged: 0/0
 17123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17128 ;;Total ram usage:        0 bytes
 17129 ;; Hardware stack levels used:    1
 17130 ;; Hardware stack levels required when called:    3
 17131 ;; This function calls:
 17132 ;;		Nothing
 17133 ;; This function is called by:
 17134 ;;		_main
 17135 ;; This function uses a non-reentrant model
 17136 ;;
 17137                           
 17138                           	psect	text50
 17139  01644C                     __ptext50:
 17140                           	opt stack 0
 17141  01644C                     _F2_Button_Polling:
 17142                           	opt stack 27
 17143                           
 17144                           ;RemoteCan.c: 548: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 17145                           
 17146                           ; BSR set to: 0
 17147                           ;incstack = 0
 17148  01644C  A281               	btfss	3969,1,c	;volatile
 17149  01644E  D002               	goto	l915
 17150  016450  B04D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17151  016452  0012               	return	
 17152  016454                     l915:
 17153                           
 17154                           ;RemoteCan.c: 549: wait_low_3 = 0;
 17155  016454  904D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17156                           
 17157                           ;RemoteCan.c: 550: if (PORTBbits.RB1 == 1) {
 17158  016456  A281               	btfss	3969,1,c	;volatile
 17159  016458  0012               	return	
 17160                           
 17161                           ;RemoteCan.c: 551: F2_switch = ~F2_switch;
 17162  01645A  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17163  01645C  D002               	goto	u9020
 17164  01645E  864B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17165  016460  D001               	goto	u9035
 17166  016462                     u9020:
 17167  016462  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17168  016464                     u9035:
 17169                           
 17170                           ;RemoteCan.c: 552: wait_low_3 = 1;
 17171  016464  804D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17172  016466  0012               	return	
 17173  016468                     __end_of_F2_Button_Polling:
 17174                           	opt stack 0
 17175                           tblptru	equ	0xFF8
 17176                           tblptrh	equ	0xFF7
 17177                           tblptrl	equ	0xFF6
 17178                           tablat	equ	0xFF5
 17179                           prodh	equ	0xFF4
 17180                           prodl	equ	0xFF3
 17181                           intcon	equ	0xFF2
 17182                           postinc0	equ	0xFEE
 17183                           wreg	equ	0xFE8
 17184                           indf1	equ	0xFE7
 17185                           plusw1	equ	0xFE3
 17186                           fsr1h	equ	0xFE2
 17187                           fsr1l	equ	0xFE1
 17188                           indf2	equ	0xFDF
 17189                           postinc2	equ	0xFDE
 17190                           plusw2	equ	0xFDB
 17191                           fsr2h	equ	0xFDA
 17192                           fsr2l	equ	0xFD9
 17193                           status	equ	0xFD8
 17194                           
 17195 ;; *************** function _F1_Button_Polling *****************
 17196 ;; Defined at:
 17197 ;;		line 537 in file "RemoteCan.c"
 17198 ;; Parameters:    Size  Location     Type
 17199 ;;		None
 17200 ;; Auto vars:     Size  Location     Type
 17201 ;;		None
 17202 ;; Return value:  Size  Location     Type
 17203 ;;		None               void
 17204 ;; Registers used:
 17205 ;;		None
 17206 ;; Tracked objects:
 17207 ;;		On entry : 0/0
 17208 ;;		On exit  : 0/0
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;Total ram usage:        0 bytes
 17216 ;; Hardware stack levels used:    1
 17217 ;; Hardware stack levels required when called:    3
 17218 ;; This function calls:
 17219 ;;		Nothing
 17220 ;; This function is called by:
 17221 ;;		_main
 17222 ;; This function uses a non-reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text51
 17226  016468                     __ptext51:
 17227                           	opt stack 0
 17228  016468                     _F1_Button_Polling:
 17229                           	opt stack 27
 17230                           
 17231                           ;RemoteCan.c: 538: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 17232                           
 17233                           ;incstack = 0
 17234  016468  A881               	btfss	3969,4,c	;volatile
 17235  01646A  D002               	goto	l908
 17236  01646C  BE4C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17237  01646E  0012               	return	
 17238  016470                     l908:
 17239                           
 17240                           ;RemoteCan.c: 539: wait_low_2 = 0;
 17241  016470  9E4C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17242                           
 17243                           ;RemoteCan.c: 540: if (PORTBbits.RB4 == 1) {
 17244  016472  A881               	btfss	3969,4,c	;volatile
 17245  016474  0012               	return	
 17246                           
 17247                           ;RemoteCan.c: 541: F1_switch = ~F1_switch;
 17248  016476  B44B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17249  016478  D002               	goto	u8970
 17250  01647A  844B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17251  01647C  D001               	goto	u8985
 17252  01647E                     u8970:
 17253  01647E  944B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17254  016480                     u8985:
 17255                           
 17256                           ;RemoteCan.c: 542: wait_low_2 = 1;
 17257  016480  8E4C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17258  016482  0012               	return	
 17259  016484                     __end_of_F1_Button_Polling:
 17260                           	opt stack 0
 17261                           tblptru	equ	0xFF8
 17262                           tblptrh	equ	0xFF7
 17263                           tblptrl	equ	0xFF6
 17264                           tablat	equ	0xFF5
 17265                           prodh	equ	0xFF4
 17266                           prodl	equ	0xFF3
 17267                           intcon	equ	0xFF2
 17268                           postinc0	equ	0xFEE
 17269                           wreg	equ	0xFE8
 17270                           indf1	equ	0xFE7
 17271                           plusw1	equ	0xFE3
 17272                           fsr1h	equ	0xFE2
 17273                           fsr1l	equ	0xFE1
 17274                           indf2	equ	0xFDF
 17275                           postinc2	equ	0xFDE
 17276                           plusw2	equ	0xFDB
 17277                           fsr2h	equ	0xFDA
 17278                           fsr2l	equ	0xFD9
 17279                           status	equ	0xFD8
 17280                           
 17281 ;; *************** function _CAN_Tx *****************
 17282 ;; Defined at:
 17283 ;;		line 566 in file "RemoteCan.c"
 17284 ;; Parameters:    Size  Location     Type
 17285 ;;		None
 17286 ;; Auto vars:     Size  Location     Type
 17287 ;;		None
 17288 ;; Return value:  Size  Location     Type
 17289 ;;		None               void
 17290 ;; Registers used:
 17291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17292 ;; Tracked objects:
 17293 ;;		On entry : 0/0
 17294 ;;		On exit  : 0/0
 17295 ;;		Unchanged: 0/0
 17296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17301 ;;Total ram usage:        0 bytes
 17302 ;; Hardware stack levels used:    1
 17303 ;; Hardware stack levels required when called:    4
 17304 ;; This function calls:
 17305 ;;		_CANisTxReady
 17306 ;;		_CANsendMessage
 17307 ;; This function is called by:
 17308 ;;		_main
 17309 ;; This function uses a non-reentrant model
 17310 ;;
 17311                           
 17312                           	psect	text52
 17313  015A28                     __ptext52:
 17314                           	opt stack 0
 17315  015A28                     _CAN_Tx:
 17316                           	opt stack 26
 17317  015A28                     l7087:
 17318  015A28  ECD8  F0B1         	call	_CANisTxReady	;wreg free
 17319  015A2C  06E8               	decf	wreg,f,c
 17320  015A2E  A4D8               	btfss	status,2,c
 17321  015A30  D7FB               	goto	l7087
 17322                           
 17323                           ;RemoteCan.c: 569: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17324  015A32  0E05               	movlw	5
 17325  015A34  0100               	movlb	0	; () banked
 17326  015A36  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17327  015A38  0E00               	movlw	0
 17328  015A3A  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17329  015A3C  0E00               	movlw	0
 17330  015A3E  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17331  015A40  0E00               	movlw	0
 17332  015A42  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17333  015A44  0EEC               	movlw	low _data_steering
 17334  015A46  0100               	movlb	0	; () banked
 17335  015A48  6F75               	movwf	CANsendMessage@data& (0+255),b
 17336  015A4A  0E00               	movlw	high _data_steering
 17337  015A4C  0100               	movlb	0	; () banked
 17338  015A4E  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17339  015A50  0E08               	movlw	8
 17340  015A52  0100               	movlb	0	; () banked
 17341  015A54  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17342  015A56  0EBC               	movlw	188
 17343  015A58  0100               	movlb	0	; () banked
 17344  015A5A  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17345  015A5C  ECCD  F089         	call	_CANsendMessage	;wreg free
 17346                           
 17347                           ;RemoteCan.c: 572: data_speed[0] = set_speed;
 17348  015A60  C0E3  F0EB         	movff	_set_speed,_data_speed	;volatile
 17349                           
 17350                           ;RemoteCan.c: 573: data_speed[1] = (set_speed >> 8);
 17351  015A64  0100               	movlb	0	; () banked
 17352  015A66  51E4               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17353  015A68  0100               	movlb	0	; () banked
 17354  015A6A  6FEC               	movwf	(_data_speed+1)& (0+255),b
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;RemoteCan.c: 574: data_speed[2] = dir;
 17358  015A6C  C0E5  F0ED         	movff	_dir,_data_speed+2	;volatile
 17359  015A70                     l7097:
 17360  015A70  ECD8  F0B1         	call	_CANisTxReady	;wreg free
 17361  015A74  06E8               	decf	wreg,f,c
 17362  015A76  A4D8               	btfss	status,2,c
 17363  015A78  D7FB               	goto	l7097
 17364                           
 17365                           ;RemoteCan.c: 576: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17366  015A7A  0E03               	movlw	3
 17367  015A7C  0100               	movlb	0	; () banked
 17368  015A7E  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17369  015A80  0E00               	movlw	0
 17370  015A82  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17371  015A84  0E00               	movlw	0
 17372  015A86  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17373  015A88  0E00               	movlw	0
 17374  015A8A  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17375  015A8C  0EEB               	movlw	low _data_speed
 17376  015A8E  0100               	movlb	0	; () banked
 17377  015A90  6F75               	movwf	CANsendMessage@data& (0+255),b
 17378  015A92  0E00               	movlw	high _data_speed
 17379  015A94  0100               	movlb	0	; () banked
 17380  015A96  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17381  015A98  0E08               	movlw	8
 17382  015A9A  0100               	movlb	0	; () banked
 17383  015A9C  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17384  015A9E  0EBC               	movlw	188
 17385  015AA0  0100               	movlb	0	; () banked
 17386  015AA2  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17387  015AA4  ECCD  F089         	call	_CANsendMessage	;wreg free
 17388  015AA8                     l7101:
 17389  015AA8  ECD8  F0B1         	call	_CANisTxReady	;wreg free
 17390  015AAC  06E8               	decf	wreg,f,c
 17391  015AAE  A4D8               	btfss	status,2,c
 17392  015AB0  D7FB               	goto	l7101
 17393                           
 17394                           ;RemoteCan.c: 580: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17395  015AB2  0E04               	movlw	4
 17396  015AB4  0100               	movlb	0	; () banked
 17397  015AB6  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17398  015AB8  0E00               	movlw	0
 17399  015ABA  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17400  015ABC  0E00               	movlw	0
 17401  015ABE  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17402  015AC0  0E00               	movlw	0
 17403  015AC2  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17404  015AC4  0EEA               	movlw	low _data_brake
 17405  015AC6  0100               	movlb	0	; () banked
 17406  015AC8  6F75               	movwf	CANsendMessage@data& (0+255),b
 17407  015ACA  0E00               	movlw	high _data_brake
 17408  015ACC  0100               	movlb	0	; () banked
 17409  015ACE  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17410  015AD0  0E08               	movlw	8
 17411  015AD2  0100               	movlb	0	; () banked
 17412  015AD4  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17413  015AD6  0EBC               	movlw	188
 17414  015AD8  0100               	movlb	0	; () banked
 17415  015ADA  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17416  015ADC  ECCD  F089         	call	_CANsendMessage	;wreg free
 17417  015AE0  0012               	return		;funcret
 17418  015AE2                     __end_of_CAN_Tx:
 17419                           	opt stack 0
 17420                           tblptru	equ	0xFF8
 17421                           tblptrh	equ	0xFF7
 17422                           tblptrl	equ	0xFF6
 17423                           tablat	equ	0xFF5
 17424                           prodh	equ	0xFF4
 17425                           prodl	equ	0xFF3
 17426                           intcon	equ	0xFF2
 17427                           postinc0	equ	0xFEE
 17428                           wreg	equ	0xFE8
 17429                           indf1	equ	0xFE7
 17430                           plusw1	equ	0xFE3
 17431                           fsr1h	equ	0xFE2
 17432                           fsr1l	equ	0xFE1
 17433                           indf2	equ	0xFDF
 17434                           postinc2	equ	0xFDE
 17435                           plusw2	equ	0xFDB
 17436                           fsr2h	equ	0xFDA
 17437                           fsr2l	equ	0xFD9
 17438                           status	equ	0xFD8
 17439                           
 17440 ;; *************** function _CANsendMessage *****************
 17441 ;; Defined at:
 17442 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17443 ;; Parameters:    Size  Location     Type
 17444 ;;  identifier      4   17[BANK0 ] unsigned long 
 17445 ;;  data            2   21[BANK0 ] PTR unsigned char 
 17446 ;;		 -> data_speed(1), park_assist_state(8), data_steering(1), data_brake(1), 
 17447 ;;		 -> data(1), 
 17448 ;;  dataLength      1   23[BANK0 ] unsigned char 
 17449 ;;  flags           1   24[BANK0 ] enum E16909
 17450 ;; Auto vars:     Size  Location     Type
 17451 ;;  tamp            4   29[BANK0 ] unsigned long 
 17452 ;; Return value:  Size  Location     Type
 17453 ;;		None               void
 17454 ;; Registers used:
 17455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17456 ;; Tracked objects:
 17457 ;;		On entry : 0/0
 17458 ;;		On exit  : 0/0
 17459 ;;		Unchanged: 0/0
 17460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17461 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17463 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17464 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;Total ram usage:       16 bytes
 17466 ;; Hardware stack levels used:    1
 17467 ;; Hardware stack levels required when called:    3
 17468 ;; This function calls:
 17469 ;;		Nothing
 17470 ;; This function is called by:
 17471 ;;		_main
 17472 ;;		_LCD_Handler
 17473 ;;		_CAN_Tx
 17474 ;; This function uses a non-reentrant model
 17475 ;;
 17476                           
 17477                           	psect	text53
 17478  01139A                     __ptext53:
 17479                           	opt stack 0
 17480  01139A                     _CANsendMessage:
 17481                           	opt stack 26
 17482                           
 17483                           ;inc\CANlib.h: 296: unsigned long tamp;
 17484                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17485                           
 17486                           ;incstack = 0
 17487  01139A  010F               	movlb	15	; () banked
 17488  01139C  B740               	btfsc	64,3,b	;volatile
 17489  01139E  D13F               	goto	l383
 17490                           
 17491                           ; BSR set to: 15
 17492                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17493  0113A0  C077  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17494                           
 17495                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17496  0113A4  0100               	movlb	0	; () banked
 17497  0113A6  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 17498  0113A8  D003               	goto	l384
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17502  0113AA  010F               	movlb	15	; () banked
 17503  0113AC  8D45               	bsf	69,6,b	;volatile
 17504  0113AE  D002               	goto	l385
 17505  0113B0                     l384:
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;inc\CANlib.h: 302: else
 17509                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17510  0113B0  010F               	movlb	15	; () banked
 17511  0113B2  9D45               	bcf	69,6,b	;volatile
 17512  0113B4                     l385:
 17513                           
 17514                           ; BSR set to: 15
 17515                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17516  0113B4  0100               	movlb	0	; () banked
 17517  0113B6  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 17518  0113B8  D079               	goto	l386
 17519                           
 17520                           ; BSR set to: 0
 17521                           ;inc\CANlib.h: 306: {
 17522                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17523  0113BA  0100               	movlb	0	; () banked
 17524  0113BC  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 17525  0113BE  0100               	movlb	0	; () banked
 17526  0113C0  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17527  0113C2  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17528  0113C4  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17529  0113C6  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17533  0113C8  C07D  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17537  0113CC  0E00               	movlw	0
 17538  0113CE  0100               	movlb	0	; () banked
 17539  0113D0  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17540  0113D2  0100               	movlb	0	; () banked
 17541  0113D4  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17542  0113D6  0EFF               	movlw	255
 17543  0113D8  0100               	movlb	0	; () banked
 17544  0113DA  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17545  0113DC  0100               	movlb	0	; () banked
 17546  0113DE  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17547  0113E0  0E00               	movlw	0
 17548  0113E2  0100               	movlb	0	; () banked
 17549  0113E4  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17550  0113E6  0100               	movlb	0	; () banked
 17551  0113E8  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17552  0113EA  0E00               	movlw	0
 17553  0113EC  0100               	movlb	0	; () banked
 17554  0113EE  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17555  0113F0  0100               	movlb	0	; () banked
 17556  0113F2  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17560  0113F4  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17561  0113F8  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17562  0113FC  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17563  011400  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17564  011404  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 17565  011408  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17566  01140C  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17567  011410  0100               	movlb	0	; () banked
 17568  011412  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 17569  011414  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17570  011418  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17571  01141C  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17572  011420  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17576  011424  C07D  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17580  011428  0E00               	movlw	0
 17581  01142A  010F               	movlb	15	; () banked
 17582  01142C  6F42               	movwf	66,b	;volatile
 17583                           
 17584                           ; BSR set to: 15
 17585                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17586  01142E  010F               	movlb	15	; () banked
 17587  011430  8742               	bsf	66,3,b	;volatile
 17588                           
 17589                           ; BSR set to: 15
 17590                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17591  011432  0100               	movlb	0	; () banked
 17592  011434  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17593  011436  D002               	goto	l387
 17594                           
 17595                           ; BSR set to: 0
 17596                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17597  011438  010F               	movlb	15	; () banked
 17598  01143A  8142               	bsf	66,0,b	;volatile
 17599  01143C                     l387:
 17600                           
 17601                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17602  01143C  0100               	movlb	0	; () banked
 17603  01143E  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17604  011440  D002               	goto	l388
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17608  011442  010F               	movlb	15	; () banked
 17609  011444  8342               	bsf	66,1,b	;volatile
 17610  011446                     l388:
 17611                           
 17612                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17613  011446  0100               	movlb	0	; () banked
 17614  011448  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17615  01144A  D002               	goto	l389
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17619  01144C  010F               	movlb	15	; () banked
 17620  01144E  8B42               	bsf	66,5,b	;volatile
 17621  011450                     l389:
 17622                           
 17623                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17624  011450  0100               	movlb	0	; () banked
 17625  011452  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17626  011454  D002               	goto	l390
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17630  011456  010F               	movlb	15	; () banked
 17631  011458  8D42               	bsf	66,6,b	;volatile
 17632  01145A                     l390:
 17633                           
 17634                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17635  01145A  0100               	movlb	0	; () banked
 17636  01145C  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17637  01145E  D002               	goto	l6215
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17641  011460  010F               	movlb	15	; () banked
 17642  011462  8F42               	bsf	66,7,b	;volatile
 17643  011464                     l6215:
 17644                           
 17645                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17646  011464  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17647  011468  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17648  01146C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17649  011470  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17650  011474  0E16               	movlw	22
 17651  011476  D006               	goto	u7660
 17652  011478                     u7665:
 17653  011478  0100               	movlb	0	; () banked
 17654  01147A  90D8               	bcf	status,0,c
 17655  01147C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17656  01147E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17657  011480  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17658  011482  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17659  011484                     u7660:
 17660  011484  2EE8               	decfsz	wreg,f,c
 17661  011486  D7F8               	goto	u7665
 17662  011488  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17663  01148C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17664  011490  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17665  011494  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17666                           
 17667                           ; BSR set to: 0
 17668                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17669  011498  0100               	movlb	0	; () banked
 17670  01149A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17671  01149C  0100               	movlb	0	; () banked
 17672  01149E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17673  0114A0  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17674  0114A2  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17675  0114A4  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17679  0114A6  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17680                           
 17681                           ;inc\CANlib.h: 332: }
 17682  0114AA  D059               	goto	l6235
 17683  0114AC                     l386:
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;inc\CANlib.h: 334: else
 17687                           ;inc\CANlib.h: 336: {
 17688                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17689  0114AC  010F               	movlb	15	; () banked
 17690  0114AE  9742               	bcf	66,3,b	;volatile
 17691                           
 17692                           ; BSR set to: 15
 17693                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17694  0114B0  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17695  0114B4  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17696  0114B8  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17697  0114BC  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17698  0114C0  0E04               	movlw	4
 17699  0114C2  D006               	goto	u7670
 17700  0114C4                     u7675:
 17701  0114C4  0100               	movlb	0	; () banked
 17702  0114C6  90D8               	bcf	status,0,c
 17703  0114C8  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17704  0114CA  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17705  0114CC  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17706  0114CE  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17707  0114D0                     u7670:
 17708  0114D0  2EE8               	decfsz	wreg,f,c
 17709  0114D2  D7F8               	goto	u7675
 17710  0114D4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17711  0114D8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17712  0114DC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17713  0114E0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17714                           
 17715                           ; BSR set to: 0
 17716                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17717  0114E4  0100               	movlb	0	; () banked
 17718  0114E6  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17719  0114E8  0100               	movlb	0	; () banked
 17720  0114EA  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17721  0114EC  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17722  0114EE  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17723  0114F0  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17727  0114F2  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17728                           
 17729                           ; BSR set to: 0
 17730                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17731  0114F6  0E07               	movlw	7
 17732  0114F8  0100               	movlb	0	; () banked
 17733  0114FA  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17734  0114FC  0100               	movlb	0	; () banked
 17735  0114FE  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17736  011500  0E00               	movlw	0
 17737  011502  0100               	movlb	0	; () banked
 17738  011504  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17739  011506  0100               	movlb	0	; () banked
 17740  011508  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17741  01150A  0E00               	movlw	0
 17742  01150C  0100               	movlb	0	; () banked
 17743  01150E  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17744  011510  0100               	movlb	0	; () banked
 17745  011512  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17746  011514  0E00               	movlw	0
 17747  011516  0100               	movlb	0	; () banked
 17748  011518  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17749  01151A  0100               	movlb	0	; () banked
 17750  01151C  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17751                           
 17752                           ; BSR set to: 0
 17753                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17754  01151E  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17755  011522  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17756  011526  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17757  01152A  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17758  01152E  0E05               	movlw	5
 17759  011530                     u7685:
 17760  011530  90D8               	bcf	status,0,c
 17761  011532  0100               	movlb	0	; () banked
 17762  011534  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 17763  011536  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17764  011538  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17765  01153A  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17766  01153C  2EE8               	decfsz	wreg,f,c
 17767  01153E  D7F8               	goto	u7685
 17768  011540  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17769  011544  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17770  011548  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17771  01154C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17775  011550  010F               	movlb	15	; () banked
 17776  011552  5142               	movf	66,w,b	;volatile
 17777  011554  0B1F               	andlw	31
 17778  011556  010F               	movlb	15	; () banked
 17779  011558  6F42               	movwf	66,b	;volatile
 17780                           
 17781                           ; BSR set to: 15
 17782                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17783  01155A  C07D  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17784  01155E                     l6235:
 17785                           
 17786                           ;inc\CANlib.h: 347: }
 17787                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17788  01155E  0100               	movlb	0	; () banked
 17789  011560  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 17790  011562  D003               	goto	l393
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17794  011564  010F               	movlb	15	; () banked
 17795  011566  8140               	bsf	64,0,b	;volatile
 17796  011568  D002               	goto	l394
 17797  01156A                     l393:
 17798                           
 17799                           ; BSR set to: 0
 17800                           ;inc\CANlib.h: 351: else
 17801                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17802  01156A  010F               	movlb	15	; () banked
 17803  01156C  9140               	bcf	64,0,b	;volatile
 17804  01156E                     l394:
 17805                           
 17806                           ; BSR set to: 15
 17807                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17808  01156E  0100               	movlb	0	; () banked
 17809  011570  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 17810  011572  D003               	goto	l395
 17811                           
 17812                           ; BSR set to: 0
 17813                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17814  011574  010F               	movlb	15	; () banked
 17815  011576  8340               	bsf	64,1,b	;volatile
 17816  011578  D002               	goto	l6241
 17817  01157A                     l395:
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;inc\CANlib.h: 355: else
 17821                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17822  01157A  010F               	movlb	15	; () banked
 17823  01157C  9340               	bcf	64,1,b	;volatile
 17824  01157E                     l6241:
 17825                           
 17826                           ; BSR set to: 15
 17827                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17828  01157E  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 17829  011582  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17830  011586  50DF               	movf	indf2,w,c
 17831  011588  010F               	movlb	15	; () banked
 17832  01158A  6F46               	movwf	70,b	;volatile
 17833                           
 17834                           ; BSR set to: 15
 17835                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17836  01158C  0100               	movlb	0	; () banked
 17837  01158E  EE20 F001          	lfsr	2,1
 17838  011592  5175               	movf	CANsendMessage@data& (0+255),w,b
 17839  011594  26D9               	addwf	fsr2l,f,c
 17840  011596  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17841  011598  22DA               	addwfc	fsr2h,f,c
 17842  01159A  50DF               	movf	indf2,w,c
 17843  01159C  010F               	movlb	15	; () banked
 17844  01159E  6F47               	movwf	71,b	;volatile
 17845                           
 17846                           ; BSR set to: 15
 17847                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17848  0115A0  0100               	movlb	0	; () banked
 17849  0115A2  EE20 F002          	lfsr	2,2
 17850  0115A6  5175               	movf	CANsendMessage@data& (0+255),w,b
 17851  0115A8  26D9               	addwf	fsr2l,f,c
 17852  0115AA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17853  0115AC  22DA               	addwfc	fsr2h,f,c
 17854  0115AE  50DF               	movf	indf2,w,c
 17855  0115B0  010F               	movlb	15	; () banked
 17856  0115B2  6F48               	movwf	72,b	;volatile
 17857                           
 17858                           ; BSR set to: 15
 17859                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17860  0115B4  0100               	movlb	0	; () banked
 17861  0115B6  EE20 F003          	lfsr	2,3
 17862  0115BA  5175               	movf	CANsendMessage@data& (0+255),w,b
 17863  0115BC  26D9               	addwf	fsr2l,f,c
 17864  0115BE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17865  0115C0  22DA               	addwfc	fsr2h,f,c
 17866  0115C2  50DF               	movf	indf2,w,c
 17867  0115C4  010F               	movlb	15	; () banked
 17868  0115C6  6F49               	movwf	73,b	;volatile
 17869                           
 17870                           ; BSR set to: 15
 17871                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17872  0115C8  0100               	movlb	0	; () banked
 17873  0115CA  EE20 F004          	lfsr	2,4
 17874  0115CE  5175               	movf	CANsendMessage@data& (0+255),w,b
 17875  0115D0  26D9               	addwf	fsr2l,f,c
 17876  0115D2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17877  0115D4  22DA               	addwfc	fsr2h,f,c
 17878  0115D6  50DF               	movf	indf2,w,c
 17879  0115D8  010F               	movlb	15	; () banked
 17880  0115DA  6F4A               	movwf	74,b	;volatile
 17881                           
 17882                           ; BSR set to: 15
 17883                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17884  0115DC  0100               	movlb	0	; () banked
 17885  0115DE  EE20 F005          	lfsr	2,5
 17886  0115E2  5175               	movf	CANsendMessage@data& (0+255),w,b
 17887  0115E4  26D9               	addwf	fsr2l,f,c
 17888  0115E6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17889  0115E8  22DA               	addwfc	fsr2h,f,c
 17890  0115EA  50DF               	movf	indf2,w,c
 17891  0115EC  010F               	movlb	15	; () banked
 17892  0115EE  6F4B               	movwf	75,b	;volatile
 17893                           
 17894                           ; BSR set to: 15
 17895                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17896  0115F0  0100               	movlb	0	; () banked
 17897  0115F2  EE20 F006          	lfsr	2,6
 17898  0115F6  5175               	movf	CANsendMessage@data& (0+255),w,b
 17899  0115F8  26D9               	addwf	fsr2l,f,c
 17900  0115FA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17901  0115FC  22DA               	addwfc	fsr2h,f,c
 17902  0115FE  50DF               	movf	indf2,w,c
 17903  011600  010F               	movlb	15	; () banked
 17904  011602  6F4C               	movwf	76,b	;volatile
 17905                           
 17906                           ; BSR set to: 15
 17907                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17908  011604  0100               	movlb	0	; () banked
 17909  011606  EE20 F007          	lfsr	2,7
 17910  01160A  5175               	movf	CANsendMessage@data& (0+255),w,b
 17911  01160C  26D9               	addwf	fsr2l,f,c
 17912  01160E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17913  011610  22DA               	addwfc	fsr2h,f,c
 17914  011612  50DF               	movf	indf2,w,c
 17915  011614  010F               	movlb	15	; () banked
 17916  011616  6F4D               	movwf	77,b	;volatile
 17917                           
 17918                           ; BSR set to: 15
 17919                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17920  011618  010F               	movlb	15	; () banked
 17921  01161A  8740               	bsf	64,3,b	;volatile
 17922                           
 17923                           ; BSR set to: 15
 17924                           ;inc\CANlib.h: 368: return;
 17925  01161C  0012               	return	
 17926  01161E                     l383:
 17927                           
 17928                           ; BSR set to: 15
 17929                           ;inc\CANlib.h: 369: }
 17930                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17931  01161E  010F               	movlb	15	; () banked
 17932  011620  B730               	btfsc	48,3,b	;volatile
 17933  011622  D13F               	goto	l398
 17934                           
 17935                           ; BSR set to: 15
 17936                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17937  011624  C077  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17938                           
 17939                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17940  011628  0100               	movlb	0	; () banked
 17941  01162A  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 17942  01162C  D003               	goto	l399
 17943                           
 17944                           ; BSR set to: 0
 17945                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17946  01162E  010F               	movlb	15	; () banked
 17947  011630  8D35               	bsf	53,6,b	;volatile
 17948  011632  D002               	goto	l400
 17949  011634                     l399:
 17950                           
 17951                           ; BSR set to: 0
 17952                           ;inc\CANlib.h: 378: else
 17953                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17954  011634  010F               	movlb	15	; () banked
 17955  011636  9D35               	bcf	53,6,b	;volatile
 17956  011638                     l400:
 17957                           
 17958                           ; BSR set to: 15
 17959                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17960  011638  0100               	movlb	0	; () banked
 17961  01163A  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 17962  01163C  D079               	goto	l401
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;inc\CANlib.h: 382: {
 17966                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17967  01163E  0100               	movlb	0	; () banked
 17968  011640  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 17969  011642  0100               	movlb	0	; () banked
 17970  011644  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17971  011646  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17972  011648  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17973  01164A  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17977  01164C  C07D  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17978                           
 17979                           ; BSR set to: 0
 17980                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17981  011650  0E00               	movlw	0
 17982  011652  0100               	movlb	0	; () banked
 17983  011654  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17984  011656  0100               	movlb	0	; () banked
 17985  011658  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17986  01165A  0EFF               	movlw	255
 17987  01165C  0100               	movlb	0	; () banked
 17988  01165E  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17989  011660  0100               	movlb	0	; () banked
 17990  011662  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17991  011664  0E00               	movlw	0
 17992  011666  0100               	movlb	0	; () banked
 17993  011668  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17994  01166A  0100               	movlb	0	; () banked
 17995  01166C  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17996  01166E  0E00               	movlw	0
 17997  011670  0100               	movlb	0	; () banked
 17998  011672  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17999  011674  0100               	movlb	0	; () banked
 18000  011676  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18001                           
 18002                           ; BSR set to: 0
 18003                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 18004  011678  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18005  01167C  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18006  011680  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18007  011684  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18008  011688  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18009  01168C  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18010  011690  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18011  011694  0100               	movlb	0	; () banked
 18012  011696  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18013  011698  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18014  01169C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18015  0116A0  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18016  0116A4  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18017                           
 18018                           ; BSR set to: 0
 18019                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 18020  0116A8  C07D  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 18021                           
 18022                           ; BSR set to: 0
 18023                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 18024  0116AC  0E00               	movlw	0
 18025  0116AE  010F               	movlb	15	; () banked
 18026  0116B0  6F32               	movwf	50,b	;volatile
 18027                           
 18028                           ; BSR set to: 15
 18029                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 18030  0116B2  010F               	movlb	15	; () banked
 18031  0116B4  8732               	bsf	50,3,b	;volatile
 18032                           
 18033                           ; BSR set to: 15
 18034                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18035  0116B6  0100               	movlb	0	; () banked
 18036  0116B8  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18037  0116BA  D002               	goto	l402
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18041  0116BC  010F               	movlb	15	; () banked
 18042  0116BE  8132               	bsf	50,0,b	;volatile
 18043  0116C0                     l402:
 18044                           
 18045                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18046  0116C0  0100               	movlb	0	; () banked
 18047  0116C2  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18048  0116C4  D002               	goto	l403
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18052  0116C6  010F               	movlb	15	; () banked
 18053  0116C8  8332               	bsf	50,1,b	;volatile
 18054  0116CA                     l403:
 18055                           
 18056                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18057  0116CA  0100               	movlb	0	; () banked
 18058  0116CC  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18059  0116CE  D002               	goto	l404
 18060                           
 18061                           ; BSR set to: 0
 18062                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18063  0116D0  010F               	movlb	15	; () banked
 18064  0116D2  8B32               	bsf	50,5,b	;volatile
 18065  0116D4                     l404:
 18066                           
 18067                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18068  0116D4  0100               	movlb	0	; () banked
 18069  0116D6  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18070  0116D8  D002               	goto	l405
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18074  0116DA  010F               	movlb	15	; () banked
 18075  0116DC  8D32               	bsf	50,6,b	;volatile
 18076  0116DE                     l405:
 18077                           
 18078                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18079  0116DE  0100               	movlb	0	; () banked
 18080  0116E0  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18081  0116E2  D002               	goto	l6291
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18085  0116E4  010F               	movlb	15	; () banked
 18086  0116E6  8F32               	bsf	50,7,b	;volatile
 18087  0116E8                     l6291:
 18088                           
 18089                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18090  0116E8  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18091  0116EC  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18092  0116F0  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18093  0116F4  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18094  0116F8  0E16               	movlw	22
 18095  0116FA  D006               	goto	u7790
 18096  0116FC                     u7795:
 18097  0116FC  0100               	movlb	0	; () banked
 18098  0116FE  90D8               	bcf	status,0,c
 18099  011700  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18100  011702  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18101  011704  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18102  011706  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18103  011708                     u7790:
 18104  011708  2EE8               	decfsz	wreg,f,c
 18105  01170A  D7F8               	goto	u7795
 18106  01170C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18107  011710  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18108  011714  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18109  011718  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18113  01171C  0100               	movlb	0	; () banked
 18114  01171E  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18115  011720  0100               	movlb	0	; () banked
 18116  011722  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18117  011724  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18118  011726  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18119  011728  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18123  01172A  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18124                           
 18125                           ;inc\CANlib.h: 407: }
 18126  01172E  D059               	goto	l6311
 18127  011730                     l401:
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;inc\CANlib.h: 409: else
 18131                           ;inc\CANlib.h: 411: {
 18132                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18133  011730  010F               	movlb	15	; () banked
 18134  011732  9732               	bcf	50,3,b	;volatile
 18135                           
 18136                           ; BSR set to: 15
 18137                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18138  011734  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18139  011738  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18140  01173C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18141  011740  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18142  011744  0E04               	movlw	4
 18143  011746  D006               	goto	u7800
 18144  011748                     u7805:
 18145  011748  0100               	movlb	0	; () banked
 18146  01174A  90D8               	bcf	status,0,c
 18147  01174C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18148  01174E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18149  011750  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18150  011752  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18151  011754                     u7800:
 18152  011754  2EE8               	decfsz	wreg,f,c
 18153  011756  D7F8               	goto	u7805
 18154  011758  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18155  01175C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18156  011760  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18157  011764  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18161  011768  0100               	movlb	0	; () banked
 18162  01176A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18163  01176C  0100               	movlb	0	; () banked
 18164  01176E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18165  011770  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18166  011772  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18167  011774  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18168                           
 18169                           ; BSR set to: 0
 18170                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18171  011776  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18175  01177A  0E07               	movlw	7
 18176  01177C  0100               	movlb	0	; () banked
 18177  01177E  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18178  011780  0100               	movlb	0	; () banked
 18179  011782  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18180  011784  0E00               	movlw	0
 18181  011786  0100               	movlb	0	; () banked
 18182  011788  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18183  01178A  0100               	movlb	0	; () banked
 18184  01178C  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18185  01178E  0E00               	movlw	0
 18186  011790  0100               	movlb	0	; () banked
 18187  011792  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18188  011794  0100               	movlb	0	; () banked
 18189  011796  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18190  011798  0E00               	movlw	0
 18191  01179A  0100               	movlb	0	; () banked
 18192  01179C  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18193  01179E  0100               	movlb	0	; () banked
 18194  0117A0  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18195                           
 18196                           ; BSR set to: 0
 18197                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18198  0117A2  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18199  0117A6  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18200  0117AA  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18201  0117AE  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18202  0117B2  0E05               	movlw	5
 18203  0117B4                     u7815:
 18204  0117B4  90D8               	bcf	status,0,c
 18205  0117B6  0100               	movlb	0	; () banked
 18206  0117B8  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18207  0117BA  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18208  0117BC  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18209  0117BE  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18210  0117C0  2EE8               	decfsz	wreg,f,c
 18211  0117C2  D7F8               	goto	u7815
 18212  0117C4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18213  0117C8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18214  0117CC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18215  0117D0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18219  0117D4  010F               	movlb	15	; () banked
 18220  0117D6  5132               	movf	50,w,b	;volatile
 18221  0117D8  0B1F               	andlw	31
 18222  0117DA  010F               	movlb	15	; () banked
 18223  0117DC  6F32               	movwf	50,b	;volatile
 18224                           
 18225                           ; BSR set to: 15
 18226                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18227  0117DE  C07D  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 18228  0117E2                     l6311:
 18229                           
 18230                           ;inc\CANlib.h: 422: }
 18231                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18232  0117E2  0100               	movlb	0	; () banked
 18233  0117E4  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18234  0117E6  D003               	goto	l408
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18238  0117E8  010F               	movlb	15	; () banked
 18239  0117EA  8130               	bsf	48,0,b	;volatile
 18240  0117EC  D002               	goto	l409
 18241  0117EE                     l408:
 18242                           
 18243                           ; BSR set to: 0
 18244                           ;inc\CANlib.h: 426: else
 18245                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18246  0117EE  010F               	movlb	15	; () banked
 18247  0117F0  9130               	bcf	48,0,b	;volatile
 18248  0117F2                     l409:
 18249                           
 18250                           ; BSR set to: 15
 18251                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18252  0117F2  0100               	movlb	0	; () banked
 18253  0117F4  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18254  0117F6  D003               	goto	l410
 18255                           
 18256                           ; BSR set to: 0
 18257                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18258  0117F8  010F               	movlb	15	; () banked
 18259  0117FA  8330               	bsf	48,1,b	;volatile
 18260  0117FC  D002               	goto	l6317
 18261  0117FE                     l410:
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;inc\CANlib.h: 430: else
 18265                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18266  0117FE  010F               	movlb	15	; () banked
 18267  011800  9330               	bcf	48,1,b	;volatile
 18268  011802                     l6317:
 18269                           
 18270                           ; BSR set to: 15
 18271                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18272  011802  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18273  011806  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18274  01180A  50DF               	movf	indf2,w,c
 18275  01180C  010F               	movlb	15	; () banked
 18276  01180E  6F36               	movwf	54,b	;volatile
 18277                           
 18278                           ; BSR set to: 15
 18279                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18280  011810  0100               	movlb	0	; () banked
 18281  011812  EE20 F001          	lfsr	2,1
 18282  011816  5175               	movf	CANsendMessage@data& (0+255),w,b
 18283  011818  26D9               	addwf	fsr2l,f,c
 18284  01181A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18285  01181C  22DA               	addwfc	fsr2h,f,c
 18286  01181E  50DF               	movf	indf2,w,c
 18287  011820  010F               	movlb	15	; () banked
 18288  011822  6F37               	movwf	55,b	;volatile
 18289                           
 18290                           ; BSR set to: 15
 18291                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18292  011824  0100               	movlb	0	; () banked
 18293  011826  EE20 F002          	lfsr	2,2
 18294  01182A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18295  01182C  26D9               	addwf	fsr2l,f,c
 18296  01182E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18297  011830  22DA               	addwfc	fsr2h,f,c
 18298  011832  50DF               	movf	indf2,w,c
 18299  011834  010F               	movlb	15	; () banked
 18300  011836  6F38               	movwf	56,b	;volatile
 18301                           
 18302                           ; BSR set to: 15
 18303                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18304  011838  0100               	movlb	0	; () banked
 18305  01183A  EE20 F003          	lfsr	2,3
 18306  01183E  5175               	movf	CANsendMessage@data& (0+255),w,b
 18307  011840  26D9               	addwf	fsr2l,f,c
 18308  011842  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18309  011844  22DA               	addwfc	fsr2h,f,c
 18310  011846  50DF               	movf	indf2,w,c
 18311  011848  010F               	movlb	15	; () banked
 18312  01184A  6F39               	movwf	57,b	;volatile
 18313                           
 18314                           ; BSR set to: 15
 18315                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18316  01184C  0100               	movlb	0	; () banked
 18317  01184E  EE20 F004          	lfsr	2,4
 18318  011852  5175               	movf	CANsendMessage@data& (0+255),w,b
 18319  011854  26D9               	addwf	fsr2l,f,c
 18320  011856  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18321  011858  22DA               	addwfc	fsr2h,f,c
 18322  01185A  50DF               	movf	indf2,w,c
 18323  01185C  010F               	movlb	15	; () banked
 18324  01185E  6F3A               	movwf	58,b	;volatile
 18325                           
 18326                           ; BSR set to: 15
 18327                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18328  011860  0100               	movlb	0	; () banked
 18329  011862  EE20 F005          	lfsr	2,5
 18330  011866  5175               	movf	CANsendMessage@data& (0+255),w,b
 18331  011868  26D9               	addwf	fsr2l,f,c
 18332  01186A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18333  01186C  22DA               	addwfc	fsr2h,f,c
 18334  01186E  50DF               	movf	indf2,w,c
 18335  011870  010F               	movlb	15	; () banked
 18336  011872  6F3B               	movwf	59,b	;volatile
 18337                           
 18338                           ; BSR set to: 15
 18339                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18340  011874  0100               	movlb	0	; () banked
 18341  011876  EE20 F006          	lfsr	2,6
 18342  01187A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18343  01187C  26D9               	addwf	fsr2l,f,c
 18344  01187E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18345  011880  22DA               	addwfc	fsr2h,f,c
 18346  011882  50DF               	movf	indf2,w,c
 18347  011884  010F               	movlb	15	; () banked
 18348  011886  6F3C               	movwf	60,b	;volatile
 18349                           
 18350                           ; BSR set to: 15
 18351                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18352  011888  0100               	movlb	0	; () banked
 18353  01188A  EE20 F007          	lfsr	2,7
 18354  01188E  5175               	movf	CANsendMessage@data& (0+255),w,b
 18355  011890  26D9               	addwf	fsr2l,f,c
 18356  011892  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18357  011894  22DA               	addwfc	fsr2h,f,c
 18358  011896  50DF               	movf	indf2,w,c
 18359  011898  010F               	movlb	15	; () banked
 18360  01189A  6F3D               	movwf	61,b	;volatile
 18361                           
 18362                           ; BSR set to: 15
 18363                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18364  01189C  010F               	movlb	15	; () banked
 18365  01189E  8730               	bsf	48,3,b	;volatile
 18366                           
 18367                           ; BSR set to: 15
 18368                           ;inc\CANlib.h: 444: return;
 18369  0118A0  0012               	return	
 18370  0118A2                     l398:
 18371                           
 18372                           ; BSR set to: 15
 18373                           ;inc\CANlib.h: 445: }
 18374                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18375  0118A2  010F               	movlb	15	; () banked
 18376  0118A4  B720               	btfsc	32,3,b	;volatile
 18377  0118A6  0012               	return	
 18378                           
 18379                           ; BSR set to: 15
 18380                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18381  0118A8  C077  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18382                           
 18383                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18384  0118AC  0100               	movlb	0	; () banked
 18385  0118AE  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 18386  0118B0  D003               	goto	l413
 18387                           
 18388                           ; BSR set to: 0
 18389                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18390  0118B2  010F               	movlb	15	; () banked
 18391  0118B4  8D25               	bsf	37,6,b	;volatile
 18392  0118B6  D002               	goto	l414
 18393  0118B8                     l413:
 18394                           
 18395                           ; BSR set to: 0
 18396                           ;inc\CANlib.h: 454: else
 18397                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18398  0118B8  010F               	movlb	15	; () banked
 18399  0118BA  9D25               	bcf	37,6,b	;volatile
 18400  0118BC                     l414:
 18401                           
 18402                           ; BSR set to: 15
 18403                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18404  0118BC  0100               	movlb	0	; () banked
 18405  0118BE  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 18406  0118C0  D079               	goto	l415
 18407                           
 18408                           ; BSR set to: 0
 18409                           ;inc\CANlib.h: 458: {
 18410                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18411  0118C2  0100               	movlb	0	; () banked
 18412  0118C4  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 18413  0118C6  0100               	movlb	0	; () banked
 18414  0118C8  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18415  0118CA  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18416  0118CC  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18417  0118CE  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18418                           
 18419                           ; BSR set to: 0
 18420                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18421  0118D0  C07D  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18425  0118D4  0E00               	movlw	0
 18426  0118D6  0100               	movlb	0	; () banked
 18427  0118D8  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18428  0118DA  0100               	movlb	0	; () banked
 18429  0118DC  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18430  0118DE  0EFF               	movlw	255
 18431  0118E0  0100               	movlb	0	; () banked
 18432  0118E2  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18433  0118E4  0100               	movlb	0	; () banked
 18434  0118E6  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18435  0118E8  0E00               	movlw	0
 18436  0118EA  0100               	movlb	0	; () banked
 18437  0118EC  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18438  0118EE  0100               	movlb	0	; () banked
 18439  0118F0  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18440  0118F2  0E00               	movlw	0
 18441  0118F4  0100               	movlb	0	; () banked
 18442  0118F6  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18443  0118F8  0100               	movlb	0	; () banked
 18444  0118FA  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18448  0118FC  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18449  011900  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18450  011904  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18451  011908  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18452  01190C  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18453  011910  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18454  011914  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18455  011918  0100               	movlb	0	; () banked
 18456  01191A  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18457  01191C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18458  011920  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18459  011924  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18460  011928  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18464  01192C  C07D  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18468  011930  0E00               	movlw	0
 18469  011932  010F               	movlb	15	; () banked
 18470  011934  6F22               	movwf	34,b	;volatile
 18471                           
 18472                           ; BSR set to: 15
 18473                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18474  011936  010F               	movlb	15	; () banked
 18475  011938  8722               	bsf	34,3,b	;volatile
 18476                           
 18477                           ; BSR set to: 15
 18478                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18479  01193A  0100               	movlb	0	; () banked
 18480  01193C  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18481  01193E  D002               	goto	l416
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18485  011940  010F               	movlb	15	; () banked
 18486  011942  8122               	bsf	34,0,b	;volatile
 18487  011944                     l416:
 18488                           
 18489                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18490  011944  0100               	movlb	0	; () banked
 18491  011946  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18492  011948  D002               	goto	l417
 18493                           
 18494                           ; BSR set to: 0
 18495                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18496  01194A  010F               	movlb	15	; () banked
 18497  01194C  8322               	bsf	34,1,b	;volatile
 18498  01194E                     l417:
 18499                           
 18500                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18501  01194E  0100               	movlb	0	; () banked
 18502  011950  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18503  011952  D002               	goto	l418
 18504                           
 18505                           ; BSR set to: 0
 18506                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18507  011954  010F               	movlb	15	; () banked
 18508  011956  8B22               	bsf	34,5,b	;volatile
 18509  011958                     l418:
 18510                           
 18511                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18512  011958  0100               	movlb	0	; () banked
 18513  01195A  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18514  01195C  D002               	goto	l419
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18518  01195E  010F               	movlb	15	; () banked
 18519  011960  8D22               	bsf	34,6,b	;volatile
 18520  011962                     l419:
 18521                           
 18522                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18523  011962  0100               	movlb	0	; () banked
 18524  011964  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18525  011966  D002               	goto	l6367
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18529  011968  010F               	movlb	15	; () banked
 18530  01196A  8F22               	bsf	34,7,b	;volatile
 18531  01196C                     l6367:
 18532                           
 18533                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18534  01196C  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18535  011970  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18536  011974  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18537  011978  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18538  01197C  0E16               	movlw	22
 18539  01197E  D006               	goto	u7920
 18540  011980                     u7925:
 18541  011980  0100               	movlb	0	; () banked
 18542  011982  90D8               	bcf	status,0,c
 18543  011984  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18544  011986  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18545  011988  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18546  01198A  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18547  01198C                     u7920:
 18548  01198C  2EE8               	decfsz	wreg,f,c
 18549  01198E  D7F8               	goto	u7925
 18550  011990  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18551  011994  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18552  011998  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18553  01199C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18557  0119A0  0100               	movlb	0	; () banked
 18558  0119A2  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18559  0119A4  0100               	movlb	0	; () banked
 18560  0119A6  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18561  0119A8  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18562  0119AA  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18563  0119AC  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18567  0119AE  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18568                           
 18569                           ;inc\CANlib.h: 483: }
 18570  0119B2  D059               	goto	l6387
 18571  0119B4                     l415:
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;inc\CANlib.h: 485: else
 18575                           ;inc\CANlib.h: 487: {
 18576                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18577  0119B4  010F               	movlb	15	; () banked
 18578  0119B6  9722               	bcf	34,3,b	;volatile
 18579                           
 18580                           ; BSR set to: 15
 18581                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18582  0119B8  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18583  0119BC  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18584  0119C0  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18585  0119C4  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18586  0119C8  0E04               	movlw	4
 18587  0119CA  D006               	goto	u7930
 18588  0119CC                     u7935:
 18589  0119CC  0100               	movlb	0	; () banked
 18590  0119CE  90D8               	bcf	status,0,c
 18591  0119D0  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18592  0119D2  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18593  0119D4  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18594  0119D6  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18595  0119D8                     u7930:
 18596  0119D8  2EE8               	decfsz	wreg,f,c
 18597  0119DA  D7F8               	goto	u7935
 18598  0119DC  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18599  0119E0  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18600  0119E4  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18601  0119E8  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18602                           
 18603                           ; BSR set to: 0
 18604                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18605  0119EC  0100               	movlb	0	; () banked
 18606  0119EE  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18607  0119F0  0100               	movlb	0	; () banked
 18608  0119F2  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18609  0119F4  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18610  0119F6  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18611  0119F8  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18615  0119FA  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18616                           
 18617                           ; BSR set to: 0
 18618                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18619  0119FE  0E07               	movlw	7
 18620  011A00  0100               	movlb	0	; () banked
 18621  011A02  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18622  011A04  0100               	movlb	0	; () banked
 18623  011A06  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18624  011A08  0E00               	movlw	0
 18625  011A0A  0100               	movlb	0	; () banked
 18626  011A0C  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18627  011A0E  0100               	movlb	0	; () banked
 18628  011A10  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18629  011A12  0E00               	movlw	0
 18630  011A14  0100               	movlb	0	; () banked
 18631  011A16  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18632  011A18  0100               	movlb	0	; () banked
 18633  011A1A  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18634  011A1C  0E00               	movlw	0
 18635  011A1E  0100               	movlb	0	; () banked
 18636  011A20  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18637  011A22  0100               	movlb	0	; () banked
 18638  011A24  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18642  011A26  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18643  011A2A  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18644  011A2E  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18645  011A32  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18646  011A36  0E05               	movlw	5
 18647  011A38                     u7945:
 18648  011A38  90D8               	bcf	status,0,c
 18649  011A3A  0100               	movlb	0	; () banked
 18650  011A3C  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18651  011A3E  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18652  011A40  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18653  011A42  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18654  011A44  2EE8               	decfsz	wreg,f,c
 18655  011A46  D7F8               	goto	u7945
 18656  011A48  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18657  011A4C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18658  011A50  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18659  011A54  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18660                           
 18661                           ; BSR set to: 0
 18662                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18663  011A58  010F               	movlb	15	; () banked
 18664  011A5A  5122               	movf	34,w,b	;volatile
 18665  011A5C  0B1F               	andlw	31
 18666  011A5E  010F               	movlb	15	; () banked
 18667  011A60  6F22               	movwf	34,b	;volatile
 18668                           
 18669                           ; BSR set to: 15
 18670                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18671  011A62  C07D  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18672  011A66                     l6387:
 18673                           
 18674                           ;inc\CANlib.h: 498: }
 18675                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18676  011A66  0100               	movlb	0	; () banked
 18677  011A68  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18678  011A6A  D003               	goto	l422
 18679                           
 18680                           ; BSR set to: 0
 18681                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18682  011A6C  010F               	movlb	15	; () banked
 18683  011A6E  8120               	bsf	32,0,b	;volatile
 18684  011A70  D002               	goto	l423
 18685  011A72                     l422:
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;inc\CANlib.h: 502: else
 18689                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18690  011A72  010F               	movlb	15	; () banked
 18691  011A74  9120               	bcf	32,0,b	;volatile
 18692  011A76                     l423:
 18693                           
 18694                           ; BSR set to: 15
 18695                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18696  011A76  0100               	movlb	0	; () banked
 18697  011A78  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18698  011A7A  D003               	goto	l424
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18702  011A7C  010F               	movlb	15	; () banked
 18703  011A7E  8320               	bsf	32,1,b	;volatile
 18704  011A80  D002               	goto	l6393
 18705  011A82                     l424:
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;inc\CANlib.h: 506: else
 18709                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18710  011A82  010F               	movlb	15	; () banked
 18711  011A84  9320               	bcf	32,1,b	;volatile
 18712  011A86                     l6393:
 18713                           
 18714                           ; BSR set to: 15
 18715                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18716  011A86  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18717  011A8A  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18718  011A8E  50DF               	movf	indf2,w,c
 18719  011A90  010F               	movlb	15	; () banked
 18720  011A92  6F26               	movwf	38,b	;volatile
 18721                           
 18722                           ; BSR set to: 15
 18723                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18724  011A94  0100               	movlb	0	; () banked
 18725  011A96  EE20 F001          	lfsr	2,1
 18726  011A9A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18727  011A9C  26D9               	addwf	fsr2l,f,c
 18728  011A9E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18729  011AA0  22DA               	addwfc	fsr2h,f,c
 18730  011AA2  50DF               	movf	indf2,w,c
 18731  011AA4  010F               	movlb	15	; () banked
 18732  011AA6  6F27               	movwf	39,b	;volatile
 18733                           
 18734                           ; BSR set to: 15
 18735                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18736  011AA8  0100               	movlb	0	; () banked
 18737  011AAA  EE20 F002          	lfsr	2,2
 18738  011AAE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18739  011AB0  26D9               	addwf	fsr2l,f,c
 18740  011AB2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18741  011AB4  22DA               	addwfc	fsr2h,f,c
 18742  011AB6  50DF               	movf	indf2,w,c
 18743  011AB8  010F               	movlb	15	; () banked
 18744  011ABA  6F28               	movwf	40,b	;volatile
 18745                           
 18746                           ; BSR set to: 15
 18747                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18748  011ABC  0100               	movlb	0	; () banked
 18749  011ABE  EE20 F003          	lfsr	2,3
 18750  011AC2  5175               	movf	CANsendMessage@data& (0+255),w,b
 18751  011AC4  26D9               	addwf	fsr2l,f,c
 18752  011AC6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18753  011AC8  22DA               	addwfc	fsr2h,f,c
 18754  011ACA  50DF               	movf	indf2,w,c
 18755  011ACC  010F               	movlb	15	; () banked
 18756  011ACE  6F29               	movwf	41,b	;volatile
 18757                           
 18758                           ; BSR set to: 15
 18759                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18760  011AD0  0100               	movlb	0	; () banked
 18761  011AD2  EE20 F004          	lfsr	2,4
 18762  011AD6  5175               	movf	CANsendMessage@data& (0+255),w,b
 18763  011AD8  26D9               	addwf	fsr2l,f,c
 18764  011ADA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18765  011ADC  22DA               	addwfc	fsr2h,f,c
 18766  011ADE  50DF               	movf	indf2,w,c
 18767  011AE0  010F               	movlb	15	; () banked
 18768  011AE2  6F2A               	movwf	42,b	;volatile
 18769                           
 18770                           ; BSR set to: 15
 18771                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18772  011AE4  0100               	movlb	0	; () banked
 18773  011AE6  EE20 F005          	lfsr	2,5
 18774  011AEA  5175               	movf	CANsendMessage@data& (0+255),w,b
 18775  011AEC  26D9               	addwf	fsr2l,f,c
 18776  011AEE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18777  011AF0  22DA               	addwfc	fsr2h,f,c
 18778  011AF2  50DF               	movf	indf2,w,c
 18779  011AF4  010F               	movlb	15	; () banked
 18780  011AF6  6F2B               	movwf	43,b	;volatile
 18781                           
 18782                           ; BSR set to: 15
 18783                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18784  011AF8  0100               	movlb	0	; () banked
 18785  011AFA  EE20 F006          	lfsr	2,6
 18786  011AFE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18787  011B00  26D9               	addwf	fsr2l,f,c
 18788  011B02  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18789  011B04  22DA               	addwfc	fsr2h,f,c
 18790  011B06  50DF               	movf	indf2,w,c
 18791  011B08  010F               	movlb	15	; () banked
 18792  011B0A  6F2C               	movwf	44,b	;volatile
 18793                           
 18794                           ; BSR set to: 15
 18795                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18796  011B0C  0100               	movlb	0	; () banked
 18797  011B0E  EE20 F007          	lfsr	2,7
 18798  011B12  5175               	movf	CANsendMessage@data& (0+255),w,b
 18799  011B14  26D9               	addwf	fsr2l,f,c
 18800  011B16  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18801  011B18  22DA               	addwfc	fsr2h,f,c
 18802  011B1A  50DF               	movf	indf2,w,c
 18803  011B1C  010F               	movlb	15	; () banked
 18804  011B1E  6F2D               	movwf	45,b	;volatile
 18805                           
 18806                           ; BSR set to: 15
 18807                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18808  011B20  010F               	movlb	15	; () banked
 18809  011B22  8720               	bsf	32,3,b	;volatile
 18810                           
 18811                           ; BSR set to: 15
 18812                           ;inc\CANlib.h: 520: return;
 18813  011B24  0012               	return	
 18814  011B26                     __end_of_CANsendMessage:
 18815                           	opt stack 0
 18816                           tblptru	equ	0xFF8
 18817                           tblptrh	equ	0xFF7
 18818                           tblptrl	equ	0xFF6
 18819                           tablat	equ	0xFF5
 18820                           prodh	equ	0xFF4
 18821                           prodl	equ	0xFF3
 18822                           intcon	equ	0xFF2
 18823                           postinc0	equ	0xFEE
 18824                           wreg	equ	0xFE8
 18825                           indf1	equ	0xFE7
 18826                           plusw1	equ	0xFE3
 18827                           fsr1h	equ	0xFE2
 18828                           fsr1l	equ	0xFE1
 18829                           indf2	equ	0xFDF
 18830                           postinc2	equ	0xFDE
 18831                           plusw2	equ	0xFDB
 18832                           fsr2h	equ	0xFDA
 18833                           fsr2l	equ	0xFD9
 18834                           status	equ	0xFD8
 18835                           
 18836 ;; *************** function _CANisTxReady *****************
 18837 ;; Defined at:
 18838 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18839 ;; Parameters:    Size  Location     Type
 18840 ;;		None
 18841 ;; Auto vars:     Size  Location     Type
 18842 ;;		None
 18843 ;; Return value:  Size  Location     Type
 18844 ;;                  1    wreg      unsigned char 
 18845 ;; Registers used:
 18846 ;;		wreg, status,2
 18847 ;; Tracked objects:
 18848 ;;		On entry : 0/0
 18849 ;;		On exit  : 0/0
 18850 ;;		Unchanged: 0/0
 18851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18856 ;;Total ram usage:        1 bytes
 18857 ;; Hardware stack levels used:    1
 18858 ;; Hardware stack levels required when called:    3
 18859 ;; This function calls:
 18860 ;;		Nothing
 18861 ;; This function is called by:
 18862 ;;		_main
 18863 ;;		_LCD_Handler
 18864 ;;		_CAN_Tx
 18865 ;; This function uses a non-reentrant model
 18866 ;;
 18867                           
 18868                           	psect	text54
 18869  0163B0                     __ptext54:
 18870                           	opt stack 0
 18871  0163B0                     _CANisTxReady:
 18872                           	opt stack 26
 18873                           
 18874                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18875                           
 18876                           ; BSR set to: 15
 18877                           ;incstack = 0
 18878  0163B0  0E01               	movlw	1
 18879  0163B2  0100               	movlb	0	; () banked
 18880  0163B4  6F71               	movwf	_CANisTxReady$3251& (0+255),b
 18881                           
 18882                           ; BSR set to: 0
 18883  0163B6  010F               	movlb	15	; () banked
 18884  0163B8  A740               	btfss	64,3,b	;volatile
 18885  0163BA  D009               	goto	l576
 18886                           
 18887                           ; BSR set to: 15
 18888  0163BC  010F               	movlb	15	; () banked
 18889  0163BE  A730               	btfss	48,3,b	;volatile
 18890  0163C0  D006               	goto	l576
 18891                           
 18892                           ; BSR set to: 15
 18893  0163C2  010F               	movlb	15	; () banked
 18894  0163C4  A720               	btfss	32,3,b	;volatile
 18895  0163C6  D003               	goto	l576
 18896                           
 18897                           ; BSR set to: 15
 18898  0163C8  0E00               	movlw	0
 18899  0163CA  0100               	movlb	0	; () banked
 18900  0163CC  6F71               	movwf	_CANisTxReady$3251& (0+255),b
 18901  0163CE                     l576:
 18902  0163CE  0100               	movlb	0	; () banked
 18903  0163D0  5171               	movf	_CANisTxReady$3251& (0+255),w,b
 18904  0163D2  0012               	return	
 18905  0163D4                     __end_of_CANisTxReady:
 18906                           	opt stack 0
 18907                           tblptru	equ	0xFF8
 18908                           tblptrh	equ	0xFF7
 18909                           tblptrl	equ	0xFF6
 18910                           tablat	equ	0xFF5
 18911                           prodh	equ	0xFF4
 18912                           prodl	equ	0xFF3
 18913                           intcon	equ	0xFF2
 18914                           postinc0	equ	0xFEE
 18915                           wreg	equ	0xFE8
 18916                           indf1	equ	0xFE7
 18917                           plusw1	equ	0xFE3
 18918                           fsr1h	equ	0xFE2
 18919                           fsr1l	equ	0xFE1
 18920                           indf2	equ	0xFDF
 18921                           postinc2	equ	0xFDE
 18922                           plusw2	equ	0xFDB
 18923                           fsr2h	equ	0xFDA
 18924                           fsr2l	equ	0xFD9
 18925                           status	equ	0xFD8
 18926                           
 18927 ;; *************** function _CAN_Rx *****************
 18928 ;; Defined at:
 18929 ;;		line 584 in file "RemoteCan.c"
 18930 ;; Parameters:    Size  Location     Type
 18931 ;;		None
 18932 ;; Auto vars:     Size  Location     Type
 18933 ;;		None
 18934 ;; Return value:  Size  Location     Type
 18935 ;;		None               void
 18936 ;; Registers used:
 18937 ;;		wreg, status,2, status,0
 18938 ;; Tracked objects:
 18939 ;;		On entry : 0/0
 18940 ;;		On exit  : 0/0
 18941 ;;		Unchanged: 0/0
 18942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18946 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18947 ;;Total ram usage:        4 bytes
 18948 ;; Hardware stack levels used:    1
 18949 ;; Hardware stack levels required when called:    3
 18950 ;; This function calls:
 18951 ;;		Nothing
 18952 ;; This function is called by:
 18953 ;;		_main
 18954 ;; This function uses a non-reentrant model
 18955 ;;
 18956                           
 18957                           	psect	text55
 18958  015AE2                     __ptext55:
 18959                           	opt stack 0
 18960  015AE2                     _CAN_Rx:
 18961                           	opt stack 27
 18962                           
 18963                           ;RemoteCan.c: 585: if (id == 0b00000000010) {
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;incstack = 0
 18967  015AE2  0E02               	movlw	2
 18968  015AE4  1805               	xorwf	_id,w,c	;volatile
 18969  015AE6  1006               	iorwf	_id+1,w,c	;volatile
 18970  015AE8  1007               	iorwf	_id+2,w,c	;volatile
 18971  015AEA  1008               	iorwf	_id+3,w,c	;volatile
 18972  015AEC  A4D8               	btfss	status,2,c
 18973  015AEE  D015               	goto	l7135
 18974                           
 18975                           ;RemoteCan.c: 586: if (RTR_Flag == 1) {
 18976  015AF0  AA4B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18977  015AF2  D00C               	goto	l7125
 18978                           
 18979                           ;RemoteCan.c: 587: pr_time_4 = time_counter;
 18980  015AF4  C01D  F011         	movff	_time_counter,_pr_time_4	;volatile
 18981  015AF8  C01E  F012         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18982  015AFC  C01F  F013         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18983  015B00  C020  F014         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18984                           
 18985                           ;RemoteCan.c: 588: MotoreFlag = 1;
 18986  015B04  884B               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 18987                           
 18988                           ;RemoteCan.c: 589: AbsFlag = 0;
 18989  015B06  904B               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18990                           
 18991                           ;RemoteCan.c: 590: SterzoFlag = 0;
 18992  015B08  9C4B               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18993                           
 18994                           ;RemoteCan.c: 591: } else {
 18995  015B0A  D007               	goto	l7135
 18996  015B0C                     l7125:
 18997                           
 18998                           ;RemoteCan.c: 592: if (data[0] == 0x01) {
 18999  015B0C  0429               	decf	_data,w,c
 19000  015B0E  B4D8               	btfsc	status,2,c
 19001                           
 19002                           ;RemoteCan.c: 593: AbsFlag = 1;
 19003  015B10  804B               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 19004                           
 19005                           ;RemoteCan.c: 594: }
 19006                           ;RemoteCan.c: 595: if (data[0] == 0x02) {
 19007  015B12  0E02               	movlw	2
 19008  015B14  1829               	xorwf	_data,w,c
 19009  015B16  B4D8               	btfsc	status,2,c
 19010                           
 19011                           ;RemoteCan.c: 596: SterzoFlag = 1;
 19012  015B18  8C4B               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 19013  015B1A                     l7135:
 19014                           
 19015                           ;RemoteCan.c: 603: }
 19016                           ;RemoteCan.c: 605: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 19017  015B1A  0E06               	movlw	6
 19018  015B1C  1805               	xorwf	_id,w,c	;volatile
 19019  015B1E  1006               	iorwf	_id+1,w,c	;volatile
 19020  015B20  1007               	iorwf	_id+2,w,c	;volatile
 19021  015B22  1008               	iorwf	_id+3,w,c	;volatile
 19022  015B24  B4D8               	btfsc	status,2,c
 19023  015B26  BA4B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19024  015B28  D029               	goto	l7147
 19025                           
 19026                           ;RemoteCan.c: 606: left_speed = data_speed_rx[1];
 19027  015B2A  C101  F021         	movff	_data_speed_rx+1,_left_speed	;volatile
 19028  015B2E  6A22               	clrf	_left_speed+1,c	;volatile
 19029                           
 19030                           ;RemoteCan.c: 607: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 19031  015B30  5021               	movf	_left_speed,w,c	;volatile
 19032  015B32  0100               	movlb	0	; () banked
 19033  015B34  6F71               	movwf	??_CAN_Rx& (0+255),b
 19034  015B36  0101               	movlb	1	; () banked
 19035  015B38  5100               	movf	_data_speed_rx& (0+255),w,b
 19036  015B3A  6E21               	movwf	_left_speed,c	;volatile
 19037  015B3C  C071  F022         	movff	??_CAN_Rx,_left_speed+1	;volatile
 19038                           
 19039                           ; BSR set to: 1
 19040                           ;RemoteCan.c: 608: right_speed = data_speed_rx[3];
 19041  015B40  C103  F023         	movff	_data_speed_rx+3,_right_speed	;volatile
 19042  015B44  6A24               	clrf	_right_speed+1,c	;volatile
 19043                           
 19044                           ;RemoteCan.c: 609: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 19045  015B46  5023               	movf	_right_speed,w,c	;volatile
 19046  015B48  0100               	movlb	0	; () banked
 19047  015B4A  6F71               	movwf	??_CAN_Rx& (0+255),b
 19048  015B4C  0101               	movlb	1	; () banked
 19049  015B4E  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 19050  015B50  6E23               	movwf	_right_speed,c	;volatile
 19051  015B52  C071  F024         	movff	??_CAN_Rx,_right_speed+1	;volatile
 19052                           
 19053                           ; BSR set to: 1
 19054                           ;RemoteCan.c: 610: actual_speed = (right_speed + left_speed) / 2;
 19055  015B56  5021               	movf	_left_speed,w,c	;volatile
 19056  015B58  2423               	addwf	_right_speed,w,c	;volatile
 19057  015B5A  0100               	movlb	0	; () banked
 19058  015B5C  6F71               	movwf	??_CAN_Rx& (0+255),b
 19059  015B5E  5022               	movf	_left_speed+1,w,c	;volatile
 19060  015B60  2024               	addwfc	_right_speed+1,w,c	;volatile
 19061  015B62  0100               	movlb	0	; () banked
 19062  015B64  6F72               	movwf	(??_CAN_Rx+1)& (0+255),b
 19063  015B66  90D8               	bcf	status,0,c
 19064  015B68  0100               	movlb	0	; () banked
 19065  015B6A  3172               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 19066  015B6C  0100               	movlb	0	; () banked
 19067  015B6E  6F73               	movwf	(??_CAN_Rx+2)& (0+255),b
 19068  015B70  0100               	movlb	0	; () banked
 19069  015B72  3171               	rrcf	??_CAN_Rx& (0+255),w,b
 19070  015B74  0100               	movlb	0	; () banked
 19071  015B76  6FDF               	movwf	_actual_speed& (0+255),b	;volatile
 19072  015B78  C073  F0E0         	movff	??_CAN_Rx+2,_actual_speed+1	;volatile
 19073  015B7C                     l7147:
 19074                           
 19075                           ;RemoteCan.c: 611: }
 19076                           ;RemoteCan.c: 613: if (id == 0b00000001001) {
 19077  015B7C  0E09               	movlw	9
 19078  015B7E  1805               	xorwf	_id,w,c	;volatile
 19079  015B80  1006               	iorwf	_id+1,w,c	;volatile
 19080  015B82  1007               	iorwf	_id+2,w,c	;volatile
 19081  015B84  1008               	iorwf	_id+3,w,c	;volatile
 19082  015B86  A4D8               	btfss	status,2,c
 19083  015B88  0012               	return	
 19084                           
 19085                           ;RemoteCan.c: 614: battery = data[0];
 19086  015B8A  C029  F027         	movff	_data,_battery	;volatile
 19087  015B8E  0012               	return	
 19088  015B90                     __end_of_CAN_Rx:
 19089                           	opt stack 0
 19090                           tblptru	equ	0xFF8
 19091                           tblptrh	equ	0xFF7
 19092                           tblptrl	equ	0xFF6
 19093                           tablat	equ	0xFF5
 19094                           prodh	equ	0xFF4
 19095                           prodl	equ	0xFF3
 19096                           intcon	equ	0xFF2
 19097                           postinc0	equ	0xFEE
 19098                           wreg	equ	0xFE8
 19099                           indf1	equ	0xFE7
 19100                           plusw1	equ	0xFE3
 19101                           fsr1h	equ	0xFE2
 19102                           fsr1l	equ	0xFE1
 19103                           indf2	equ	0xFDF
 19104                           postinc2	equ	0xFDE
 19105                           plusw2	equ	0xFDB
 19106                           fsr2h	equ	0xFDA
 19107                           fsr2l	equ	0xFD9
 19108                           status	equ	0xFD8
 19109                           
 19110 ;; *************** function _ISR_bassa *****************
 19111 ;; Defined at:
 19112 ;;		line 187 in file "RemoteCan.c"
 19113 ;; Parameters:    Size  Location     Type
 19114 ;;		None
 19115 ;; Auto vars:     Size  Location     Type
 19116 ;;		None
 19117 ;; Return value:  Size  Location     Type
 19118 ;;		None               void
 19119 ;; Registers used:
 19120 ;;		wreg, status,2, status,0
 19121 ;; Tracked objects:
 19122 ;;		On entry : 0/0
 19123 ;;		On exit  : 0/0
 19124 ;;		Unchanged: 0/0
 19125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19128 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19129 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19130 ;;Total ram usage:       17 bytes
 19131 ;; Hardware stack levels used:    1
 19132 ;; Hardware stack levels required when called:    2
 19133 ;; This function calls:
 19134 ;;		Nothing
 19135 ;; This function is called by:
 19136 ;;		Interrupt level 1
 19137 ;; This function uses a non-reentrant model
 19138 ;;
 19139                           
 19140                           	psect	intcodelo
 19141  000018                     __pintcodelo:
 19142                           	opt stack 0
 19143  000018                     _ISR_bassa:
 19144                           	opt stack 20
 19145                           
 19146                           ;incstack = 0
 19147  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19148  00001A  CFD8 F02A          	movff	status,??_ISR_bassa
 19149  00001E  CFE8 F02B          	movff	wreg,??_ISR_bassa+1
 19150  000022  CFE0 F02C          	movff	bsr,??_ISR_bassa+2
 19151  000026  CFFA F02D          	movff	pclath,??_ISR_bassa+3
 19152  00002A  CFFB F02E          	movff	pclatu,??_ISR_bassa+4
 19153  00002E  CFE9 F02F          	movff	fsr0l,??_ISR_bassa+5
 19154  000032  CFEA F030          	movff	fsr0h,??_ISR_bassa+6
 19155  000036  CFE1 F031          	movff	fsr1l,??_ISR_bassa+7
 19156  00003A  CFE2 F032          	movff	fsr1h,??_ISR_bassa+8
 19157  00003E  CFD9 F033          	movff	fsr2l,??_ISR_bassa+9
 19158  000042  CFDA F034          	movff	fsr2h,??_ISR_bassa+10
 19159  000046  CFF3 F035          	movff	prodl,??_ISR_bassa+11
 19160  00004A  CFF4 F036          	movff	prodh,??_ISR_bassa+12
 19161  00004E  CFF6 F037          	movff	tblptrl,??_ISR_bassa+13
 19162  000052  CFF7 F038          	movff	tblptrh,??_ISR_bassa+14
 19163  000056  CFF8 F039          	movff	tblptru,??_ISR_bassa+15
 19164  00005A  CFF5 F03A          	movff	tablat,??_ISR_bassa+16
 19165                           
 19166                           ;RemoteCan.c: 188: if (PIR2bits.TMR3IF == 1) {
 19167  00005E  A2A1               	btfss	4001,1,c	;volatile
 19168  000060  D00B               	goto	i1l800
 19169                           
 19170                           ;RemoteCan.c: 189: time_counter++;
 19171  000062  0E01               	movlw	1
 19172  000064  261D               	addwf	_time_counter,f,c	;volatile
 19173  000066  0E00               	movlw	0
 19174  000068  221E               	addwfc	_time_counter+1,f,c	;volatile
 19175  00006A  221F               	addwfc	_time_counter+2,f,c	;volatile
 19176  00006C  2220               	addwfc	_time_counter+3,f,c	;volatile
 19177                           
 19178                           ;RemoteCan.c: 190: TMR3H = 0x63;
 19179  00006E  0E63               	movlw	99
 19180  000070  6EB3               	movwf	4019,c	;volatile
 19181                           
 19182                           ;RemoteCan.c: 191: TMR3L = 0xC0;
 19183  000072  0EC0               	movlw	192
 19184  000074  6EB2               	movwf	4018,c	;volatile
 19185                           
 19186                           ;RemoteCan.c: 192: PIR2bits.TMR3IF = 0;
 19187  000076  92A1               	bcf	4001,1,c	;volatile
 19188  000078                     i1l800:
 19189  000078  C03A  FFF5         	movff	??_ISR_bassa+16,tablat
 19190  00007C  C039  FFF8         	movff	??_ISR_bassa+15,tblptru
 19191  000080  C038  FFF7         	movff	??_ISR_bassa+14,tblptrh
 19192  000084  C037  FFF6         	movff	??_ISR_bassa+13,tblptrl
 19193  000088  C036  FFF4         	movff	??_ISR_bassa+12,prodh
 19194  00008C  C035  FFF3         	movff	??_ISR_bassa+11,prodl
 19195  000090  C034  FFDA         	movff	??_ISR_bassa+10,fsr2h
 19196  000094  C033  FFD9         	movff	??_ISR_bassa+9,fsr2l
 19197  000098  C032  FFE2         	movff	??_ISR_bassa+8,fsr1h
 19198  00009C  C031  FFE1         	movff	??_ISR_bassa+7,fsr1l
 19199  0000A0  C030  FFEA         	movff	??_ISR_bassa+6,fsr0h
 19200  0000A4  C02F  FFE9         	movff	??_ISR_bassa+5,fsr0l
 19201  0000A8  C02E  FFFB         	movff	??_ISR_bassa+4,pclatu
 19202  0000AC  C02D  FFFA         	movff	??_ISR_bassa+3,pclath
 19203  0000B0  C02C  FFE0         	movff	??_ISR_bassa+2,bsr
 19204  0000B4  C02B  FFE8         	movff	??_ISR_bassa+1,wreg
 19205  0000B8  C02A  FFD8         	movff	??_ISR_bassa,status
 19206  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19207  0000BE  0010               	retfie	
 19208  0000C0                     __end_of_ISR_bassa:
 19209                           	opt stack 0
 19210                           pclatu	equ	0xFFB
 19211                           pclath	equ	0xFFA
 19212                           tblptru	equ	0xFF8
 19213                           tblptrh	equ	0xFF7
 19214                           tblptrl	equ	0xFF6
 19215                           tablat	equ	0xFF5
 19216                           prodh	equ	0xFF4
 19217                           prodl	equ	0xFF3
 19218                           intcon	equ	0xFF2
 19219                           postinc0	equ	0xFEE
 19220                           fsr0h	equ	0xFEA
 19221                           fsr0l	equ	0xFE9
 19222                           wreg	equ	0xFE8
 19223                           indf1	equ	0xFE7
 19224                           plusw1	equ	0xFE3
 19225                           fsr1h	equ	0xFE2
 19226                           fsr1l	equ	0xFE1
 19227                           bsr	equ	0xFE0
 19228                           indf2	equ	0xFDF
 19229                           postinc2	equ	0xFDE
 19230                           plusw2	equ	0xFDB
 19231                           fsr2h	equ	0xFDA
 19232                           fsr2l	equ	0xFD9
 19233                           status	equ	0xFD8
 19234                           
 19235 ;; *************** function _ISR_alta *****************
 19236 ;; Defined at:
 19237 ;;		line 119 in file "RemoteCan.c"
 19238 ;; Parameters:    Size  Location     Type
 19239 ;;		None
 19240 ;; Auto vars:     Size  Location     Type
 19241 ;;  i               1   16[BANK0 ] unsigned char 
 19242 ;; Return value:  Size  Location     Type
 19243 ;;		None               void
 19244 ;; Registers used:
 19245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19246 ;; Tracked objects:
 19247 ;;		On entry : 0/0
 19248 ;;		On exit  : 0/0
 19249 ;;		Unchanged: 0/0
 19250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19253 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19254 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19255 ;;Total ram usage:       17 bytes
 19256 ;; Hardware stack levels used:    1
 19257 ;; Hardware stack levels required when called:    1
 19258 ;; This function calls:
 19259 ;;		_CANisRxReady
 19260 ;;		_CANreceiveMessage
 19261 ;;		i2_CANisTxReady
 19262 ;;		i2_CANsendMessage
 19263 ;; This function is called by:
 19264 ;;		Interrupt level 2
 19265 ;; This function uses a non-reentrant model
 19266 ;;
 19267                           
 19268                           	psect	intcode
 19269  000008                     __pintcode:
 19270                           	opt stack 0
 19271  000008                     _ISR_alta:
 19272                           	opt stack 20
 19273                           
 19274                           ;incstack = 0
 19275  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19276  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 19277  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 19278  000012  EF6B  F0A3         	goto	int_func
 19279                           pclatu	equ	0xFFB
 19280                           pclath	equ	0xFFA
 19281                           tblptru	equ	0xFF8
 19282                           tblptrh	equ	0xFF7
 19283                           tblptrl	equ	0xFF6
 19284                           tablat	equ	0xFF5
 19285                           prodh	equ	0xFF4
 19286                           prodl	equ	0xFF3
 19287                           intcon	equ	0xFF2
 19288                           postinc0	equ	0xFEE
 19289                           fsr0h	equ	0xFEA
 19290                           fsr0l	equ	0xFE9
 19291                           wreg	equ	0xFE8
 19292                           indf1	equ	0xFE7
 19293                           plusw1	equ	0xFE3
 19294                           fsr1h	equ	0xFE2
 19295                           fsr1l	equ	0xFE1
 19296                           bsr	equ	0xFE0
 19297                           indf2	equ	0xFDF
 19298                           postinc2	equ	0xFDE
 19299                           plusw2	equ	0xFDB
 19300                           fsr2h	equ	0xFDA
 19301                           fsr2l	equ	0xFD9
 19302                           status	equ	0xFD8
 19303                           
 19304                           	psect	intcode_body
 19305  0146D6                     __pintcode_body:
 19306                           	opt stack 20
 19307  0146D6                     int_func:
 19308                           	opt stack 20
 19309  0146D6  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 19310  0146DA  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 19311  0146DE  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 19312  0146E2  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 19313  0146E6  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 19314  0146EA  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 19315  0146EE  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 19316  0146F2  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 19317  0146F6  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 19318  0146FA  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 19319  0146FE  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 19320  014702  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 19321                           
 19322                           ;RemoteCan.c: 120: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 19323  014706  A2A4               	btfss	4004,1,c	;volatile
 19324  014708  B0A4               	btfsc	4004,0,c	;volatile
 19325  01470A  D001               	goto	i2l9549
 19326  01470C  D0C4               	goto	i2l796
 19327  01470E                     i2l9549:
 19328                           
 19329                           ;RemoteCan.c: 121: if (CANisRxReady()) {
 19330  01470E  EC4D  F0B2         	call	_CANisRxReady	;wreg free
 19331  014712  0900               	iorlw	0
 19332  014714  B4D8               	btfsc	status,2,c
 19333  014716  D0BD               	goto	i2l9619
 19334                           
 19335                           ;RemoteCan.c: 122: CANreceiveMessage(&msg);
 19336  014718  0E0D               	movlw	low _msg
 19337  01471A  6E3B               	movwf	CANreceiveMessage@msg,c
 19338  01471C  0E01               	movlw	high _msg
 19339  01471E  6E3C               	movwf	CANreceiveMessage@msg+1,c
 19340  014720  EC14  F097         	call	_CANreceiveMessage	;wreg free
 19341                           
 19342                           ;RemoteCan.c: 123: RTR_Flag = msg.RTR;
 19343  014724  0101               	movlb	1	; () banked
 19344  014726  A11B               	btfss	(_msg+14)& (0+255),0,b
 19345  014728  D002               	goto	i2u1279_40
 19346  01472A  8A4B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19347  01472C  D001               	goto	i2l9555
 19348  01472E                     i2u1279_40:
 19349  01472E  9A4B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19350  014730                     i2l9555:
 19351                           
 19352                           ;RemoteCan.c: 124: id = msg.identifier;
 19353  014730  C10D  F005         	movff	_msg,_id	;volatile
 19354  014734  C10E  F006         	movff	_msg+1,_id+1	;volatile
 19355  014738  C10F  F007         	movff	_msg+2,_id+2	;volatile
 19356  01473C  C110  F008         	movff	_msg+3,_id+3	;volatile
 19357                           
 19358                           ;RemoteCan.c: 125: newMessageCan = 1;
 19359  014740  804C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 19360                           
 19361                           ;RemoteCan.c: 126: if (id == 0b00000000110) {
 19362  014742  0E06               	movlw	6
 19363  014744  1805               	xorwf	_id,w,c	;volatile
 19364  014746  1006               	iorwf	_id+1,w,c	;volatile
 19365  014748  1007               	iorwf	_id+2,w,c	;volatile
 19366  01474A  1008               	iorwf	_id+3,w,c	;volatile
 19367  01474C  A4D8               	btfss	status,2,c
 19368  01474E  D01F               	goto	i2l9573
 19369                           
 19370                           ;RemoteCan.c: 127: for (unsigned char i = 0; i < 8; i++) {
 19371  014750  0E00               	movlw	0
 19372  014752  0100               	movlb	0	; () banked
 19373  014754  6F70               	movwf	ISR_alta@i& (0+255),b
 19374  014756                     i2l9563:
 19375                           
 19376                           ; BSR set to: 0
 19377  014756  0E07               	movlw	7
 19378  014758  0100               	movlb	0	; () banked
 19379  01475A  6570               	cpfsgt	ISR_alta@i& (0+255),b
 19380  01475C  D001               	goto	i2l9567
 19381  01475E  D017               	goto	i2l9573
 19382  014760                     i2l9567:
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;RemoteCan.c: 128: data_speed_rx[i] = msg.data[i];
 19386  014760  0100               	movlb	0	; () banked
 19387  014762  5170               	movf	ISR_alta@i& (0+255),w,b
 19388  014764  0D01               	mullw	1
 19389  014766  0E11               	movlw	low (_msg+4)
 19390  014768  24F3               	addwf	prodl,w,c
 19391  01476A  6ED9               	movwf	fsr2l,c
 19392  01476C  0E01               	movlw	high (_msg+4)
 19393  01476E  20F4               	addwfc	prodh,w,c
 19394  014770  6EDA               	movwf	fsr2h,c
 19395  014772  0100               	movlb	0	; () banked
 19396  014774  5170               	movf	ISR_alta@i& (0+255),w,b
 19397  014776  0D01               	mullw	1
 19398  014778  0E00               	movlw	low _data_speed_rx
 19399  01477A  24F3               	addwf	prodl,w,c
 19400  01477C  6EE1               	movwf	fsr1l,c
 19401  01477E  0E01               	movlw	high _data_speed_rx
 19402  014780  20F4               	addwfc	prodh,w,c
 19403  014782  6EE2               	movwf	fsr1h,c
 19404  014784  CFDF FFE7          	movff	indf2,indf1
 19405                           
 19406                           ; BSR set to: 0
 19407  014788  0100               	movlb	0	; () banked
 19408  01478A  2B70               	incf	ISR_alta@i& (0+255),f,b
 19409  01478C  D7E4               	goto	i2l9563
 19410  01478E                     i2l9573:
 19411                           
 19412                           ;RemoteCan.c: 129: }
 19413                           ;RemoteCan.c: 130: }
 19414                           ;RemoteCan.c: 132: if (id == 0b00000001011) {
 19415  01478E  0E0B               	movlw	11
 19416  014790  1805               	xorwf	_id,w,c	;volatile
 19417  014792  1006               	iorwf	_id+1,w,c	;volatile
 19418  014794  1007               	iorwf	_id+2,w,c	;volatile
 19419  014796  1008               	iorwf	_id+3,w,c	;volatile
 19420  014798  A4D8               	btfss	status,2,c
 19421  01479A  D02D               	goto	i2l9595
 19422                           
 19423                           ;RemoteCan.c: 133: if (msg.data[0] == 1) {
 19424  01479C  0101               	movlb	1	; () banked
 19425  01479E  0511               	decf	(_msg+4)& (0+255),w,b
 19426  0147A0  A4D8               	btfss	status,2,c
 19427  0147A2  D008               	goto	i2l9581
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;RemoteCan.c: 134: LATDbits.LATD2 = 1;
 19431  0147A4  848C               	bsf	3980,2,c	;volatile
 19432                           
 19433                           ;RemoteCan.c: 135: space_available = 1;
 19434  0147A6  864C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19435                           
 19436                           ;RemoteCan.c: 136: space_gap_reached = 0;
 19437  0147A8  984C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19438                           
 19439                           ;RemoteCan.c: 137: F2_switch = 0;
 19440  0147AA  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 19441                           
 19442                           ;RemoteCan.c: 138: parking_message_E = 1;
 19443  0147AC  824C               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 19444                           
 19445                           ; BSR set to: 1
 19446                           ;RemoteCan.c: 139: parking_message_ID = 0;
 19447  0147AE  0E00               	movlw	0
 19448  0147B0  0100               	movlb	0	; () banked
 19449  0147B2  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
 19450  0147B4                     i2l9581:
 19451                           
 19452                           ;RemoteCan.c: 140: }
 19453                           ;RemoteCan.c: 142: if (msg.data[0] == 2) {
 19454  0147B4  0E02               	movlw	2
 19455  0147B6  0101               	movlb	1	; () banked
 19456  0147B8  1911               	xorwf	(_msg+4)& (0+255),w,b
 19457  0147BA  A4D8               	btfss	status,2,c
 19458  0147BC  D007               	goto	i2l9587
 19459                           
 19460                           ; BSR set to: 1
 19461                           ;RemoteCan.c: 143: LATDbits.LATD3 = 1;
 19462  0147BE  868C               	bsf	3980,3,c	;volatile
 19463                           
 19464                           ;RemoteCan.c: 144: space_available = 1;
 19465  0147C0  864C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19466                           
 19467                           ;RemoteCan.c: 145: space_gap_reached = 1;
 19468  0147C2  884C               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19469                           
 19470                           ;RemoteCan.c: 146: Can_Tx_Force = 1;
 19471  0147C4  824B               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 19472                           
 19473                           ; BSR set to: 1
 19474                           ;RemoteCan.c: 147: parking_message_ID = 2;
 19475  0147C6  0E02               	movlw	2
 19476  0147C8  0100               	movlb	0	; () banked
 19477  0147CA  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
 19478  0147CC                     i2l9587:
 19479                           
 19480                           ;RemoteCan.c: 148: }
 19481                           ;RemoteCan.c: 150: if (msg.data[0] == 3) {
 19482  0147CC  0E03               	movlw	3
 19483  0147CE  0101               	movlb	1	; () banked
 19484  0147D0  1911               	xorwf	(_msg+4)& (0+255),w,b
 19485  0147D2  A4D8               	btfss	status,2,c
 19486  0147D4  D010               	goto	i2l9595
 19487                           
 19488                           ; BSR set to: 1
 19489                           ;RemoteCan.c: 151: parking_message_ID = 6;
 19490  0147D6  0E06               	movlw	6
 19491  0147D8  0100               	movlb	0	; () banked
 19492  0147DA  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
 19493                           
 19494                           ; BSR set to: 0
 19495                           ;RemoteCan.c: 152: F1_switch = 0;
 19496  0147DC  944B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;RemoteCan.c: 153: pr_time_6 = time_counter + (2000 / 10);
 19500  0147DE  0EC8               	movlw	200
 19501  0147E0  241D               	addwf	_time_counter,w,c	;volatile
 19502  0147E2  6E19               	movwf	_pr_time_6,c	;volatile
 19503  0147E4  0E00               	movlw	0
 19504  0147E6  201E               	addwfc	_time_counter+1,w,c	;volatile
 19505  0147E8  6E1A               	movwf	_pr_time_6+1,c	;volatile
 19506  0147EA  0E00               	movlw	0
 19507  0147EC  201F               	addwfc	_time_counter+2,w,c	;volatile
 19508  0147EE  6E1B               	movwf	_pr_time_6+2,c	;volatile
 19509  0147F0  0E00               	movlw	0
 19510  0147F2  2020               	addwfc	_time_counter+3,w,c	;volatile
 19511  0147F4  6E1C               	movwf	_pr_time_6+3,c	;volatile
 19512  0147F6                     i2l9595:
 19513                           
 19514                           ;RemoteCan.c: 154: }
 19515                           ;RemoteCan.c: 155: }
 19516                           ;RemoteCan.c: 157: if (id == 0b00000001110) {
 19517  0147F6  0E0E               	movlw	14
 19518  0147F8  1805               	xorwf	_id,w,c	;volatile
 19519  0147FA  1006               	iorwf	_id+1,w,c	;volatile
 19520  0147FC  1007               	iorwf	_id+2,w,c	;volatile
 19521  0147FE  1008               	iorwf	_id+3,w,c	;volatile
 19522  014800  A4D8               	btfss	status,2,c
 19523  014802  D008               	goto	i2l9599
 19524                           
 19525                           ;RemoteCan.c: 158: steering_correction_dir = msg.data[1];
 19526  014804  0101               	movlb	1	; () banked
 19527  014806  A112               	btfss	(_msg+5)& (0+255),0,b
 19528  014808  D002               	goto	i2u1289_40
 19529  01480A  8A4C               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19530  01480C  D001               	goto	i2u1290_45
 19531  01480E                     i2u1289_40:
 19532  01480E  9A4C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19533  014810                     i2u1290_45:
 19534                           
 19535                           ;RemoteCan.c: 159: steering_correction = msg.data[0];
 19536  014810  C111  F0E8         	movff	_msg+4,_steering_correction	;volatile
 19537  014814                     i2l9599:
 19538                           
 19539                           ;RemoteCan.c: 160: }
 19540                           ;RemoteCan.c: 162: if (id == 0xAA) {
 19541  014814  0EAA               	movlw	170
 19542  014816  1805               	xorwf	_id,w,c	;volatile
 19543  014818  1006               	iorwf	_id+1,w,c	;volatile
 19544  01481A  1007               	iorwf	_id+2,w,c	;volatile
 19545  01481C  1008               	iorwf	_id+3,w,c	;volatile
 19546  01481E  A4D8               	btfss	status,2,c
 19547  014820  D00B               	goto	i2l9605
 19548                           
 19549                           ;RemoteCan.c: 163: user_data = msg.data[1];
 19550  014822  C112  F025         	movff	_msg+5,_user_data	;volatile
 19551  014826  6A26               	clrf	_user_data+1,c	;volatile
 19552                           
 19553                           ;RemoteCan.c: 164: user_data = ((user_data << 8) | msg.data[0]);
 19554  014828  5025               	movf	_user_data,w,c	;volatile
 19555  01482A  0100               	movlb	0	; () banked
 19556  01482C  6F60               	movwf	??_ISR_alta& (0+255),b
 19557  01482E  0101               	movlb	1	; () banked
 19558  014830  5111               	movf	(_msg+4)& (0+255),w,b
 19559  014832  6E25               	movwf	_user_data,c	;volatile
 19560  014834  C060  F026         	movff	??_ISR_alta,_user_data+1	;volatile
 19561  014838                     i2l9605:
 19562                           
 19563                           ;RemoteCan.c: 165: }
 19564                           ;RemoteCan.c: 167: if (id == 0b00000000010) {
 19565  014838  0E02               	movlw	2
 19566  01483A  1805               	xorwf	_id,w,c	;volatile
 19567  01483C  1006               	iorwf	_id+1,w,c	;volatile
 19568  01483E  1007               	iorwf	_id+2,w,c	;volatile
 19569  014840  1008               	iorwf	_id+3,w,c	;volatile
 19570  014842  B4D8               	btfsc	status,2,c
 19571                           
 19572                           ;RemoteCan.c: 168: if (RTR_Flag == 1) {
 19573  014844  AA4B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19574  014846  D025               	goto	i2l9619
 19575                           
 19576                           ;RemoteCan.c: 169: pr_time_4 = time_counter;
 19577  014848  C01D  F011         	movff	_time_counter,_pr_time_4	;volatile
 19578  01484C  C01E  F012         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19579  014850  C01F  F013         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19580  014854  C020  F014         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19581                           
 19582                           ;RemoteCan.c: 170: data[0] = 0x03;
 19583  014858  0E03               	movlw	3
 19584  01485A  6E29               	movwf	_data,c
 19585                           
 19586                           ;RemoteCan.c: 171: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19587  01485C  0E0D               	movlw	13
 19588  01485E                     i2u1340_47:
 19589  01485E  2EE8               	decfsz	wreg,f,c
 19590  014860  D7FE               	goto	i2u1340_47
 19591  014862  F000               	nop	
 19592  014864                     i2l9615:
 19593  014864  ECFB  F0B1         	call	i2_CANisTxReady	;wreg free
 19594  014868  06E8               	decf	wreg,f,c
 19595  01486A  A4D8               	btfss	status,2,c
 19596  01486C  D7FB               	goto	i2l9615
 19597                           
 19598                           ;RemoteCan.c: 173: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19599  01486E  0E02               	movlw	2
 19600  014870  6E3B               	movwf	i2CANsendMessage@identifier,c
 19601  014872  0E00               	movlw	0
 19602  014874  6E3C               	movwf	i2CANsendMessage@identifier+1,c
 19603  014876  0E00               	movlw	0
 19604  014878  6E3D               	movwf	i2CANsendMessage@identifier+2,c
 19605  01487A  0E00               	movlw	0
 19606  01487C  6E3E               	movwf	i2CANsendMessage@identifier+3,c
 19607  01487E  0E29               	movlw	low _data
 19608  014880  6E3F               	movwf	i2CANsendMessage@data,c
 19609  014882  0E00               	movlw	high _data
 19610  014884  6E40               	movwf	i2CANsendMessage@data+1,c
 19611  014886  0E08               	movlw	8
 19612  014888  6E41               	movwf	i2CANsendMessage@dataLength,c
 19613  01488A  0EBC               	movlw	188
 19614  01488C  6E42               	movwf	i2CANsendMessage@flags,c
 19615  01488E  EC3F  F091         	call	i2_CANsendMessage	;wreg free
 19616  014892                     i2l9619:
 19617                           
 19618                           ;RemoteCan.c: 179: }
 19619                           ;RemoteCan.c: 180: }
 19620                           ;RemoteCan.c: 181: }
 19621                           ;RemoteCan.c: 182: PIR3bits.RXB1IF = 0;
 19622  014892  92A4               	bcf	4004,1,c	;volatile
 19623                           
 19624                           ;RemoteCan.c: 183: PIR3bits.RXB0IF = 0;
 19625  014894  90A4               	bcf	4004,0,c	;volatile
 19626  014896                     i2l796:
 19627  014896  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 19628  01489A  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 19629  01489E  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 19630  0148A2  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 19631  0148A6  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 19632  0148AA  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 19633  0148AE  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 19634  0148B2  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 19635  0148B6  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 19636  0148BA  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 19637  0148BE  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 19638  0148C2  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 19639  0148C6  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 19640  0148CA  C062  FFFA         	movff	??_ISR_alta+2,pclath
 19641  0148CE  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19642  0148D0  0011               	retfie		f
 19643  0148D2                     __end_of_ISR_alta:
 19644                           	opt stack 0
 19645                           pclatu	equ	0xFFB
 19646                           pclath	equ	0xFFA
 19647                           tblptru	equ	0xFF8
 19648                           tblptrh	equ	0xFF7
 19649                           tblptrl	equ	0xFF6
 19650                           tablat	equ	0xFF5
 19651                           prodh	equ	0xFF4
 19652                           prodl	equ	0xFF3
 19653                           intcon	equ	0xFF2
 19654                           postinc0	equ	0xFEE
 19655                           fsr0h	equ	0xFEA
 19656                           fsr0l	equ	0xFE9
 19657                           wreg	equ	0xFE8
 19658                           indf1	equ	0xFE7
 19659                           plusw1	equ	0xFE3
 19660                           fsr1h	equ	0xFE2
 19661                           fsr1l	equ	0xFE1
 19662                           bsr	equ	0xFE0
 19663                           indf2	equ	0xFDF
 19664                           postinc2	equ	0xFDE
 19665                           plusw2	equ	0xFDB
 19666                           fsr2h	equ	0xFDA
 19667                           fsr2l	equ	0xFD9
 19668                           status	equ	0xFD8
 19669                           
 19670 ;; *************** function i2_CANsendMessage *****************
 19671 ;; Defined at:
 19672 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19673 ;; Parameters:    Size  Location     Type
 19674 ;;  identifier      4   17[COMRAM] unsigned long 
 19675 ;;  data            2   21[COMRAM] PTR unsigned char 
 19676 ;;		 -> data_speed(1), park_assist_state(8), data_steering(1), data_brake(1), 
 19677 ;;		 -> data(1), 
 19678 ;;  dataLength      1   23[COMRAM] unsigned char 
 19679 ;;  flags           1   24[COMRAM] enum E16909
 19680 ;; Auto vars:     Size  Location     Type
 19681 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19682 ;; Return value:  Size  Location     Type
 19683 ;;		None               void
 19684 ;; Registers used:
 19685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19686 ;; Tracked objects:
 19687 ;;		On entry : 0/0
 19688 ;;		On exit  : 0/0
 19689 ;;		Unchanged: 0/0
 19690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19691 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19692 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19693 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19694 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19695 ;;Total ram usage:       16 bytes
 19696 ;; Hardware stack levels used:    1
 19697 ;; This function calls:
 19698 ;;		Nothing
 19699 ;; This function is called by:
 19700 ;;		_ISR_alta
 19701 ;; This function uses a non-reentrant model
 19702 ;;
 19703                           
 19704                           	psect	text58
 19705  01227E                     __ptext58:
 19706                           	opt stack 0
 19707  01227E                     i2_CANsendMessage:
 19708                           	opt stack 20
 19709                           
 19710                           ;inc\CANlib.h: 296: unsigned long tamp;
 19711                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19712                           
 19713                           ;incstack = 0
 19714  01227E  010F               	movlb	15	; () banked
 19715  012280  B740               	btfsc	64,3,b	;volatile
 19716  012282  D115               	goto	i2l383
 19717                           
 19718                           ; BSR set to: 15
 19719                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19720  012284  C041  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19721                           
 19722                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19723  012288  AC42               	btfss	i2CANsendMessage@flags,6,c
 19724  01228A  D003               	goto	i2l384
 19725                           
 19726                           ; BSR set to: 15
 19727                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19728  01228C  010F               	movlb	15	; () banked
 19729  01228E  8D45               	bsf	69,6,b	;volatile
 19730  012290  D002               	goto	i2l385
 19731  012292                     i2l384:
 19732                           
 19733                           ; BSR set to: 15
 19734                           ;inc\CANlib.h: 302: else
 19735                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19736  012292  010F               	movlb	15	; () banked
 19737  012294  9D45               	bcf	69,6,b	;volatile
 19738  012296                     i2l385:
 19739                           
 19740                           ; BSR set to: 15
 19741                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19742  012296  A642               	btfss	i2CANsendMessage@flags,3,c
 19743  012298  D066               	goto	i2l386
 19744                           
 19745                           ; BSR set to: 15
 19746                           ;inc\CANlib.h: 306: {
 19747                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19748  01229A  503B               	movf	i2CANsendMessage@identifier,w,c
 19749  01229C  6E47               	movwf	i2CANsendMessage@tamp,c
 19750  01229E  6A48               	clrf	i2CANsendMessage@tamp+1,c
 19751  0122A0  6A49               	clrf	i2CANsendMessage@tamp+2,c
 19752  0122A2  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 19753                           
 19754                           ; BSR set to: 15
 19755                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19756  0122A4  C047  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19757                           
 19758                           ; BSR set to: 15
 19759                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19760  0122A8  0E00               	movlw	0
 19761  0122AA  143B               	andwf	i2CANsendMessage@identifier,w,c
 19762  0122AC  6E47               	movwf	i2CANsendMessage@tamp,c
 19763  0122AE  0EFF               	movlw	255
 19764  0122B0  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 19765  0122B2  6E48               	movwf	i2CANsendMessage@tamp+1,c
 19766  0122B4  0E00               	movlw	0
 19767  0122B6  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 19768  0122B8  6E49               	movwf	i2CANsendMessage@tamp+2,c
 19769  0122BA  0E00               	movlw	0
 19770  0122BC  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 19771  0122BE  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 19772                           
 19773                           ; BSR set to: 15
 19774                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19775  0122C0  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19776  0122C4  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19777  0122C8  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19778  0122CC  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19779  0122D0  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19780  0122D4  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19781  0122D8  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19782  0122DC  6A46               	clrf	??i2_CANsendMessage+3,c
 19783  0122DE  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19784  0122E2  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19785  0122E6  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19786  0122EA  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19787                           
 19788                           ; BSR set to: 15
 19789                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19790  0122EE  C047  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19791                           
 19792                           ; BSR set to: 15
 19793                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19794  0122F2  0E00               	movlw	0
 19795  0122F4  010F               	movlb	15	; () banked
 19796  0122F6  6F42               	movwf	66,b	;volatile
 19797                           
 19798                           ; BSR set to: 15
 19799                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19800  0122F8  010F               	movlb	15	; () banked
 19801  0122FA  8742               	bsf	66,3,b	;volatile
 19802                           
 19803                           ; BSR set to: 15
 19804                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19805  0122FC  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 19806  0122FE  D002               	goto	i2l387
 19807                           
 19808                           ; BSR set to: 15
 19809                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19810  012300  010F               	movlb	15	; () banked
 19811  012302  8142               	bsf	66,0,b	;volatile
 19812  012304                     i2l387:
 19813                           
 19814                           ; BSR set to: 15
 19815                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19816  012304  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 19817  012306  D002               	goto	i2l388
 19818                           
 19819                           ; BSR set to: 15
 19820                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19821  012308  010F               	movlb	15	; () banked
 19822  01230A  8342               	bsf	66,1,b	;volatile
 19823  01230C                     i2l388:
 19824                           
 19825                           ; BSR set to: 15
 19826                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19827  01230C  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 19828  01230E  D002               	goto	i2l389
 19829                           
 19830                           ; BSR set to: 15
 19831                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19832  012310  010F               	movlb	15	; () banked
 19833  012312  8B42               	bsf	66,5,b	;volatile
 19834  012314                     i2l389:
 19835                           
 19836                           ; BSR set to: 15
 19837                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19838  012314  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 19839  012316  D002               	goto	i2l390
 19840                           
 19841                           ; BSR set to: 15
 19842                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19843  012318  010F               	movlb	15	; () banked
 19844  01231A  8D42               	bsf	66,6,b	;volatile
 19845  01231C                     i2l390:
 19846                           
 19847                           ; BSR set to: 15
 19848                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19849  01231C  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 19850  01231E  D002               	goto	i2l9317
 19851                           
 19852                           ; BSR set to: 15
 19853                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19854  012320  010F               	movlb	15	; () banked
 19855  012322  8F42               	bsf	66,7,b	;volatile
 19856  012324                     i2l9317:
 19857                           
 19858                           ; BSR set to: 15
 19859                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19860  012324  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19861  012328  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19862  01232C  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19863  012330  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19864  012334  0E16               	movlw	22
 19865  012336  D005               	goto	i2u1240_40
 19866  012338                     i2u1240_45:
 19867  012338  90D8               	bcf	status,0,c
 19868  01233A  3246               	rrcf	??i2_CANsendMessage+3,f,c
 19869  01233C  3245               	rrcf	??i2_CANsendMessage+2,f,c
 19870  01233E  3244               	rrcf	??i2_CANsendMessage+1,f,c
 19871  012340  3243               	rrcf	??i2_CANsendMessage,f,c
 19872  012342                     i2u1240_40:
 19873  012342  2EE8               	decfsz	wreg,f,c
 19874  012344  D7F9               	goto	i2u1240_45
 19875  012346  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19876  01234A  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19877  01234E  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19878  012352  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19879                           
 19880                           ; BSR set to: 15
 19881                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19882  012356  5047               	movf	i2CANsendMessage@tamp,w,c
 19883  012358  6E47               	movwf	i2CANsendMessage@tamp,c
 19884  01235A  6A48               	clrf	i2CANsendMessage@tamp+1,c
 19885  01235C  6A49               	clrf	i2CANsendMessage@tamp+2,c
 19886  01235E  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 19887                           
 19888                           ; BSR set to: 15
 19889                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19890  012360  C047  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19891                           
 19892                           ;inc\CANlib.h: 332: }
 19893  012364  D04D               	goto	i2l9337
 19894  012366                     i2l386:
 19895                           
 19896                           ; BSR set to: 15
 19897                           ;inc\CANlib.h: 334: else
 19898                           ;inc\CANlib.h: 336: {
 19899                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19900  012366  010F               	movlb	15	; () banked
 19901  012368  9742               	bcf	66,3,b	;volatile
 19902                           
 19903                           ; BSR set to: 15
 19904                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19905  01236A  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19906  01236E  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19907  012372  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19908  012376  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19909  01237A  0E04               	movlw	4
 19910  01237C  D005               	goto	i2u1241_40
 19911  01237E                     i2u1241_45:
 19912  01237E  90D8               	bcf	status,0,c
 19913  012380  3246               	rrcf	??i2_CANsendMessage+3,f,c
 19914  012382  3245               	rrcf	??i2_CANsendMessage+2,f,c
 19915  012384  3244               	rrcf	??i2_CANsendMessage+1,f,c
 19916  012386  3243               	rrcf	??i2_CANsendMessage,f,c
 19917  012388                     i2u1241_40:
 19918  012388  2EE8               	decfsz	wreg,f,c
 19919  01238A  D7F9               	goto	i2u1241_45
 19920  01238C  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19921  012390  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19922  012394  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19923  012398  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19924                           
 19925                           ; BSR set to: 15
 19926                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19927  01239C  5047               	movf	i2CANsendMessage@tamp,w,c
 19928  01239E  6E47               	movwf	i2CANsendMessage@tamp,c
 19929  0123A0  6A48               	clrf	i2CANsendMessage@tamp+1,c
 19930  0123A2  6A49               	clrf	i2CANsendMessage@tamp+2,c
 19931  0123A4  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 19932                           
 19933                           ; BSR set to: 15
 19934                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19935  0123A6  C047  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19936                           
 19937                           ; BSR set to: 15
 19938                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19939  0123AA  0E07               	movlw	7
 19940  0123AC  143B               	andwf	i2CANsendMessage@identifier,w,c
 19941  0123AE  6E47               	movwf	i2CANsendMessage@tamp,c
 19942  0123B0  0E00               	movlw	0
 19943  0123B2  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 19944  0123B4  6E48               	movwf	i2CANsendMessage@tamp+1,c
 19945  0123B6  0E00               	movlw	0
 19946  0123B8  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 19947  0123BA  6E49               	movwf	i2CANsendMessage@tamp+2,c
 19948  0123BC  0E00               	movlw	0
 19949  0123BE  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 19950  0123C0  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 19951                           
 19952                           ; BSR set to: 15
 19953                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19954  0123C2  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19955  0123C6  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19956  0123CA  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19957  0123CE  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19958  0123D2  0E05               	movlw	5
 19959  0123D4                     i2u1242_45:
 19960  0123D4  90D8               	bcf	status,0,c
 19961  0123D6  3643               	rlcf	??i2_CANsendMessage,f,c
 19962  0123D8  3644               	rlcf	??i2_CANsendMessage+1,f,c
 19963  0123DA  3645               	rlcf	??i2_CANsendMessage+2,f,c
 19964  0123DC  3646               	rlcf	??i2_CANsendMessage+3,f,c
 19965  0123DE  2EE8               	decfsz	wreg,f,c
 19966  0123E0  D7F9               	goto	i2u1242_45
 19967  0123E2  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19968  0123E6  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19969  0123EA  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19970  0123EE  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19971                           
 19972                           ; BSR set to: 15
 19973                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19974  0123F2  010F               	movlb	15	; () banked
 19975  0123F4  5142               	movf	66,w,b	;volatile
 19976  0123F6  0B1F               	andlw	31
 19977  0123F8  010F               	movlb	15	; () banked
 19978  0123FA  6F42               	movwf	66,b	;volatile
 19979                           
 19980                           ; BSR set to: 15
 19981                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19982  0123FC  C047  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19983  012400                     i2l9337:
 19984                           
 19985                           ; BSR set to: 15
 19986                           ;inc\CANlib.h: 347: }
 19987                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19988  012400  A042               	btfss	i2CANsendMessage@flags,0,c
 19989  012402  D003               	goto	i2l393
 19990                           
 19991                           ; BSR set to: 15
 19992                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19993  012404  010F               	movlb	15	; () banked
 19994  012406  8140               	bsf	64,0,b	;volatile
 19995  012408  D002               	goto	i2l394
 19996  01240A                     i2l393:
 19997                           
 19998                           ; BSR set to: 15
 19999                           ;inc\CANlib.h: 351: else
 20000                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 20001  01240A  010F               	movlb	15	; () banked
 20002  01240C  9140               	bcf	64,0,b	;volatile
 20003  01240E                     i2l394:
 20004                           
 20005                           ; BSR set to: 15
 20006                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 20007  01240E  A242               	btfss	i2CANsendMessage@flags,1,c
 20008  012410  D003               	goto	i2l395
 20009                           
 20010                           ; BSR set to: 15
 20011                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 20012  012412  010F               	movlb	15	; () banked
 20013  012414  8340               	bsf	64,1,b	;volatile
 20014  012416  D002               	goto	i2l9343
 20015  012418                     i2l395:
 20016                           
 20017                           ; BSR set to: 15
 20018                           ;inc\CANlib.h: 355: else
 20019                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 20020  012418  010F               	movlb	15	; () banked
 20021  01241A  9340               	bcf	64,1,b	;volatile
 20022  01241C                     i2l9343:
 20023                           
 20024                           ; BSR set to: 15
 20025                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 20026  01241C  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20027  012420  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20028  012424  50DF               	movf	indf2,w,c
 20029  012426  010F               	movlb	15	; () banked
 20030  012428  6F46               	movwf	70,b	;volatile
 20031                           
 20032                           ; BSR set to: 15
 20033                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 20034  01242A  EE20 F001          	lfsr	2,1
 20035  01242E  503F               	movf	i2CANsendMessage@data,w,c
 20036  012430  26D9               	addwf	fsr2l,f,c
 20037  012432  5040               	movf	i2CANsendMessage@data+1,w,c
 20038  012434  22DA               	addwfc	fsr2h,f,c
 20039  012436  50DF               	movf	indf2,w,c
 20040  012438  010F               	movlb	15	; () banked
 20041  01243A  6F47               	movwf	71,b	;volatile
 20042                           
 20043                           ; BSR set to: 15
 20044                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 20045  01243C  EE20 F002          	lfsr	2,2
 20046  012440  503F               	movf	i2CANsendMessage@data,w,c
 20047  012442  26D9               	addwf	fsr2l,f,c
 20048  012444  5040               	movf	i2CANsendMessage@data+1,w,c
 20049  012446  22DA               	addwfc	fsr2h,f,c
 20050  012448  50DF               	movf	indf2,w,c
 20051  01244A  010F               	movlb	15	; () banked
 20052  01244C  6F48               	movwf	72,b	;volatile
 20053                           
 20054                           ; BSR set to: 15
 20055                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 20056  01244E  EE20 F003          	lfsr	2,3
 20057  012452  503F               	movf	i2CANsendMessage@data,w,c
 20058  012454  26D9               	addwf	fsr2l,f,c
 20059  012456  5040               	movf	i2CANsendMessage@data+1,w,c
 20060  012458  22DA               	addwfc	fsr2h,f,c
 20061  01245A  50DF               	movf	indf2,w,c
 20062  01245C  010F               	movlb	15	; () banked
 20063  01245E  6F49               	movwf	73,b	;volatile
 20064                           
 20065                           ; BSR set to: 15
 20066                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 20067  012460  EE20 F004          	lfsr	2,4
 20068  012464  503F               	movf	i2CANsendMessage@data,w,c
 20069  012466  26D9               	addwf	fsr2l,f,c
 20070  012468  5040               	movf	i2CANsendMessage@data+1,w,c
 20071  01246A  22DA               	addwfc	fsr2h,f,c
 20072  01246C  50DF               	movf	indf2,w,c
 20073  01246E  010F               	movlb	15	; () banked
 20074  012470  6F4A               	movwf	74,b	;volatile
 20075                           
 20076                           ; BSR set to: 15
 20077                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 20078  012472  EE20 F005          	lfsr	2,5
 20079  012476  503F               	movf	i2CANsendMessage@data,w,c
 20080  012478  26D9               	addwf	fsr2l,f,c
 20081  01247A  5040               	movf	i2CANsendMessage@data+1,w,c
 20082  01247C  22DA               	addwfc	fsr2h,f,c
 20083  01247E  50DF               	movf	indf2,w,c
 20084  012480  010F               	movlb	15	; () banked
 20085  012482  6F4B               	movwf	75,b	;volatile
 20086                           
 20087                           ; BSR set to: 15
 20088                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 20089  012484  EE20 F006          	lfsr	2,6
 20090  012488  503F               	movf	i2CANsendMessage@data,w,c
 20091  01248A  26D9               	addwf	fsr2l,f,c
 20092  01248C  5040               	movf	i2CANsendMessage@data+1,w,c
 20093  01248E  22DA               	addwfc	fsr2h,f,c
 20094  012490  50DF               	movf	indf2,w,c
 20095  012492  010F               	movlb	15	; () banked
 20096  012494  6F4C               	movwf	76,b	;volatile
 20097                           
 20098                           ; BSR set to: 15
 20099                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 20100  012496  EE20 F007          	lfsr	2,7
 20101  01249A  503F               	movf	i2CANsendMessage@data,w,c
 20102  01249C  26D9               	addwf	fsr2l,f,c
 20103  01249E  5040               	movf	i2CANsendMessage@data+1,w,c
 20104  0124A0  22DA               	addwfc	fsr2h,f,c
 20105  0124A2  50DF               	movf	indf2,w,c
 20106  0124A4  010F               	movlb	15	; () banked
 20107  0124A6  6F4D               	movwf	77,b	;volatile
 20108                           
 20109                           ; BSR set to: 15
 20110                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 20111  0124A8  010F               	movlb	15	; () banked
 20112  0124AA  8740               	bsf	64,3,b	;volatile
 20113                           
 20114                           ; BSR set to: 15
 20115                           ;inc\CANlib.h: 368: return;
 20116  0124AC  0012               	return	
 20117  0124AE                     i2l383:
 20118                           
 20119                           ; BSR set to: 15
 20120                           ;inc\CANlib.h: 369: }
 20121                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 20122  0124AE  010F               	movlb	15	; () banked
 20123  0124B0  B730               	btfsc	48,3,b	;volatile
 20124  0124B2  D115               	goto	i2l398
 20125                           
 20126                           ; BSR set to: 15
 20127                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 20128  0124B4  C041  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 20129                           
 20130                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 20131  0124B8  AC42               	btfss	i2CANsendMessage@flags,6,c
 20132  0124BA  D003               	goto	i2l399
 20133                           
 20134                           ; BSR set to: 15
 20135                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 20136  0124BC  010F               	movlb	15	; () banked
 20137  0124BE  8D35               	bsf	53,6,b	;volatile
 20138  0124C0  D002               	goto	i2l400
 20139  0124C2                     i2l399:
 20140                           
 20141                           ; BSR set to: 15
 20142                           ;inc\CANlib.h: 378: else
 20143                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 20144  0124C2  010F               	movlb	15	; () banked
 20145  0124C4  9D35               	bcf	53,6,b	;volatile
 20146  0124C6                     i2l400:
 20147                           
 20148                           ; BSR set to: 15
 20149                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 20150  0124C6  A642               	btfss	i2CANsendMessage@flags,3,c
 20151  0124C8  D066               	goto	i2l401
 20152                           
 20153                           ; BSR set to: 15
 20154                           ;inc\CANlib.h: 382: {
 20155                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 20156  0124CA  503B               	movf	i2CANsendMessage@identifier,w,c
 20157  0124CC  6E47               	movwf	i2CANsendMessage@tamp,c
 20158  0124CE  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20159  0124D0  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20160  0124D2  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20161                           
 20162                           ; BSR set to: 15
 20163                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 20164  0124D4  C047  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 20165                           
 20166                           ; BSR set to: 15
 20167                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 20168  0124D8  0E00               	movlw	0
 20169  0124DA  143B               	andwf	i2CANsendMessage@identifier,w,c
 20170  0124DC  6E47               	movwf	i2CANsendMessage@tamp,c
 20171  0124DE  0EFF               	movlw	255
 20172  0124E0  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20173  0124E2  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20174  0124E4  0E00               	movlw	0
 20175  0124E6  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20176  0124E8  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20177  0124EA  0E00               	movlw	0
 20178  0124EC  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20179  0124EE  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20180                           
 20181                           ; BSR set to: 15
 20182                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 20183  0124F0  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20184  0124F4  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20185  0124F8  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20186  0124FC  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20187  012500  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20188  012504  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20189  012508  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20190  01250C  6A46               	clrf	??i2_CANsendMessage+3,c
 20191  01250E  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20192  012512  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20193  012516  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20194  01251A  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20195                           
 20196                           ; BSR set to: 15
 20197                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 20198  01251E  C047  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 20199                           
 20200                           ; BSR set to: 15
 20201                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 20202  012522  0E00               	movlw	0
 20203  012524  010F               	movlb	15	; () banked
 20204  012526  6F32               	movwf	50,b	;volatile
 20205                           
 20206                           ; BSR set to: 15
 20207                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 20208  012528  010F               	movlb	15	; () banked
 20209  01252A  8732               	bsf	50,3,b	;volatile
 20210                           
 20211                           ; BSR set to: 15
 20212                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 20213  01252C  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 20214  01252E  D002               	goto	i2l402
 20215                           
 20216                           ; BSR set to: 15
 20217                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 20218  012530  010F               	movlb	15	; () banked
 20219  012532  8132               	bsf	50,0,b	;volatile
 20220  012534                     i2l402:
 20221                           
 20222                           ; BSR set to: 15
 20223                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 20224  012534  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 20225  012536  D002               	goto	i2l403
 20226                           
 20227                           ; BSR set to: 15
 20228                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 20229  012538  010F               	movlb	15	; () banked
 20230  01253A  8332               	bsf	50,1,b	;volatile
 20231  01253C                     i2l403:
 20232                           
 20233                           ; BSR set to: 15
 20234                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 20235  01253C  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 20236  01253E  D002               	goto	i2l404
 20237                           
 20238                           ; BSR set to: 15
 20239                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 20240  012540  010F               	movlb	15	; () banked
 20241  012542  8B32               	bsf	50,5,b	;volatile
 20242  012544                     i2l404:
 20243                           
 20244                           ; BSR set to: 15
 20245                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 20246  012544  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 20247  012546  D002               	goto	i2l405
 20248                           
 20249                           ; BSR set to: 15
 20250                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 20251  012548  010F               	movlb	15	; () banked
 20252  01254A  8D32               	bsf	50,6,b	;volatile
 20253  01254C                     i2l405:
 20254                           
 20255                           ; BSR set to: 15
 20256                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 20257  01254C  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 20258  01254E  D002               	goto	i2l9393
 20259                           
 20260                           ; BSR set to: 15
 20261                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 20262  012550  010F               	movlb	15	; () banked
 20263  012552  8F32               	bsf	50,7,b	;volatile
 20264  012554                     i2l9393:
 20265                           
 20266                           ; BSR set to: 15
 20267                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 20268  012554  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20269  012558  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20270  01255C  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20271  012560  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20272  012564  0E16               	movlw	22
 20273  012566  D005               	goto	i2u1253_40
 20274  012568                     i2u1253_45:
 20275  012568  90D8               	bcf	status,0,c
 20276  01256A  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20277  01256C  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20278  01256E  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20279  012570  3243               	rrcf	??i2_CANsendMessage,f,c
 20280  012572                     i2u1253_40:
 20281  012572  2EE8               	decfsz	wreg,f,c
 20282  012574  D7F9               	goto	i2u1253_45
 20283  012576  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20284  01257A  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20285  01257E  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20286  012582  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20287                           
 20288                           ; BSR set to: 15
 20289                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20290  012586  5047               	movf	i2CANsendMessage@tamp,w,c
 20291  012588  6E47               	movwf	i2CANsendMessage@tamp,c
 20292  01258A  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20293  01258C  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20294  01258E  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20295                           
 20296                           ; BSR set to: 15
 20297                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20298  012590  C047  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20299                           
 20300                           ;inc\CANlib.h: 407: }
 20301  012594  D04D               	goto	i2l9413
 20302  012596                     i2l401:
 20303                           
 20304                           ; BSR set to: 15
 20305                           ;inc\CANlib.h: 409: else
 20306                           ;inc\CANlib.h: 411: {
 20307                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20308  012596  010F               	movlb	15	; () banked
 20309  012598  9732               	bcf	50,3,b	;volatile
 20310                           
 20311                           ; BSR set to: 15
 20312                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20313  01259A  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20314  01259E  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20315  0125A2  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20316  0125A6  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20317  0125AA  0E04               	movlw	4
 20318  0125AC  D005               	goto	i2u1254_40
 20319  0125AE                     i2u1254_45:
 20320  0125AE  90D8               	bcf	status,0,c
 20321  0125B0  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20322  0125B2  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20323  0125B4  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20324  0125B6  3243               	rrcf	??i2_CANsendMessage,f,c
 20325  0125B8                     i2u1254_40:
 20326  0125B8  2EE8               	decfsz	wreg,f,c
 20327  0125BA  D7F9               	goto	i2u1254_45
 20328  0125BC  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20329  0125C0  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20330  0125C4  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20331  0125C8  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20332                           
 20333                           ; BSR set to: 15
 20334                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20335  0125CC  5047               	movf	i2CANsendMessage@tamp,w,c
 20336  0125CE  6E47               	movwf	i2CANsendMessage@tamp,c
 20337  0125D0  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20338  0125D2  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20339  0125D4  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20340                           
 20341                           ; BSR set to: 15
 20342                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20343  0125D6  C047  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20344                           
 20345                           ; BSR set to: 15
 20346                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20347  0125DA  0E07               	movlw	7
 20348  0125DC  143B               	andwf	i2CANsendMessage@identifier,w,c
 20349  0125DE  6E47               	movwf	i2CANsendMessage@tamp,c
 20350  0125E0  0E00               	movlw	0
 20351  0125E2  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20352  0125E4  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20353  0125E6  0E00               	movlw	0
 20354  0125E8  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20355  0125EA  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20356  0125EC  0E00               	movlw	0
 20357  0125EE  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20358  0125F0  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20359                           
 20360                           ; BSR set to: 15
 20361                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20362  0125F2  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20363  0125F6  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20364  0125FA  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20365  0125FE  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20366  012602  0E05               	movlw	5
 20367  012604                     i2u1255_45:
 20368  012604  90D8               	bcf	status,0,c
 20369  012606  3643               	rlcf	??i2_CANsendMessage,f,c
 20370  012608  3644               	rlcf	??i2_CANsendMessage+1,f,c
 20371  01260A  3645               	rlcf	??i2_CANsendMessage+2,f,c
 20372  01260C  3646               	rlcf	??i2_CANsendMessage+3,f,c
 20373  01260E  2EE8               	decfsz	wreg,f,c
 20374  012610  D7F9               	goto	i2u1255_45
 20375  012612  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20376  012616  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20377  01261A  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20378  01261E  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20379                           
 20380                           ; BSR set to: 15
 20381                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20382  012622  010F               	movlb	15	; () banked
 20383  012624  5132               	movf	50,w,b	;volatile
 20384  012626  0B1F               	andlw	31
 20385  012628  010F               	movlb	15	; () banked
 20386  01262A  6F32               	movwf	50,b	;volatile
 20387                           
 20388                           ; BSR set to: 15
 20389                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20390  01262C  C047  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20391  012630                     i2l9413:
 20392                           
 20393                           ; BSR set to: 15
 20394                           ;inc\CANlib.h: 422: }
 20395                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20396  012630  A042               	btfss	i2CANsendMessage@flags,0,c
 20397  012632  D003               	goto	i2l408
 20398                           
 20399                           ; BSR set to: 15
 20400                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20401  012634  010F               	movlb	15	; () banked
 20402  012636  8130               	bsf	48,0,b	;volatile
 20403  012638  D002               	goto	i2l409
 20404  01263A                     i2l408:
 20405                           
 20406                           ; BSR set to: 15
 20407                           ;inc\CANlib.h: 426: else
 20408                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20409  01263A  010F               	movlb	15	; () banked
 20410  01263C  9130               	bcf	48,0,b	;volatile
 20411  01263E                     i2l409:
 20412                           
 20413                           ; BSR set to: 15
 20414                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20415  01263E  A242               	btfss	i2CANsendMessage@flags,1,c
 20416  012640  D003               	goto	i2l410
 20417                           
 20418                           ; BSR set to: 15
 20419                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20420  012642  010F               	movlb	15	; () banked
 20421  012644  8330               	bsf	48,1,b	;volatile
 20422  012646  D002               	goto	i2l9419
 20423  012648                     i2l410:
 20424                           
 20425                           ; BSR set to: 15
 20426                           ;inc\CANlib.h: 430: else
 20427                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20428  012648  010F               	movlb	15	; () banked
 20429  01264A  9330               	bcf	48,1,b	;volatile
 20430  01264C                     i2l9419:
 20431                           
 20432                           ; BSR set to: 15
 20433                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20434  01264C  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20435  012650  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20436  012654  50DF               	movf	indf2,w,c
 20437  012656  010F               	movlb	15	; () banked
 20438  012658  6F36               	movwf	54,b	;volatile
 20439                           
 20440                           ; BSR set to: 15
 20441                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20442  01265A  EE20 F001          	lfsr	2,1
 20443  01265E  503F               	movf	i2CANsendMessage@data,w,c
 20444  012660  26D9               	addwf	fsr2l,f,c
 20445  012662  5040               	movf	i2CANsendMessage@data+1,w,c
 20446  012664  22DA               	addwfc	fsr2h,f,c
 20447  012666  50DF               	movf	indf2,w,c
 20448  012668  010F               	movlb	15	; () banked
 20449  01266A  6F37               	movwf	55,b	;volatile
 20450                           
 20451                           ; BSR set to: 15
 20452                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20453  01266C  EE20 F002          	lfsr	2,2
 20454  012670  503F               	movf	i2CANsendMessage@data,w,c
 20455  012672  26D9               	addwf	fsr2l,f,c
 20456  012674  5040               	movf	i2CANsendMessage@data+1,w,c
 20457  012676  22DA               	addwfc	fsr2h,f,c
 20458  012678  50DF               	movf	indf2,w,c
 20459  01267A  010F               	movlb	15	; () banked
 20460  01267C  6F38               	movwf	56,b	;volatile
 20461                           
 20462                           ; BSR set to: 15
 20463                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20464  01267E  EE20 F003          	lfsr	2,3
 20465  012682  503F               	movf	i2CANsendMessage@data,w,c
 20466  012684  26D9               	addwf	fsr2l,f,c
 20467  012686  5040               	movf	i2CANsendMessage@data+1,w,c
 20468  012688  22DA               	addwfc	fsr2h,f,c
 20469  01268A  50DF               	movf	indf2,w,c
 20470  01268C  010F               	movlb	15	; () banked
 20471  01268E  6F39               	movwf	57,b	;volatile
 20472                           
 20473                           ; BSR set to: 15
 20474                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20475  012690  EE20 F004          	lfsr	2,4
 20476  012694  503F               	movf	i2CANsendMessage@data,w,c
 20477  012696  26D9               	addwf	fsr2l,f,c
 20478  012698  5040               	movf	i2CANsendMessage@data+1,w,c
 20479  01269A  22DA               	addwfc	fsr2h,f,c
 20480  01269C  50DF               	movf	indf2,w,c
 20481  01269E  010F               	movlb	15	; () banked
 20482  0126A0  6F3A               	movwf	58,b	;volatile
 20483                           
 20484                           ; BSR set to: 15
 20485                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20486  0126A2  EE20 F005          	lfsr	2,5
 20487  0126A6  503F               	movf	i2CANsendMessage@data,w,c
 20488  0126A8  26D9               	addwf	fsr2l,f,c
 20489  0126AA  5040               	movf	i2CANsendMessage@data+1,w,c
 20490  0126AC  22DA               	addwfc	fsr2h,f,c
 20491  0126AE  50DF               	movf	indf2,w,c
 20492  0126B0  010F               	movlb	15	; () banked
 20493  0126B2  6F3B               	movwf	59,b	;volatile
 20494                           
 20495                           ; BSR set to: 15
 20496                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20497  0126B4  EE20 F006          	lfsr	2,6
 20498  0126B8  503F               	movf	i2CANsendMessage@data,w,c
 20499  0126BA  26D9               	addwf	fsr2l,f,c
 20500  0126BC  5040               	movf	i2CANsendMessage@data+1,w,c
 20501  0126BE  22DA               	addwfc	fsr2h,f,c
 20502  0126C0  50DF               	movf	indf2,w,c
 20503  0126C2  010F               	movlb	15	; () banked
 20504  0126C4  6F3C               	movwf	60,b	;volatile
 20505                           
 20506                           ; BSR set to: 15
 20507                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20508  0126C6  EE20 F007          	lfsr	2,7
 20509  0126CA  503F               	movf	i2CANsendMessage@data,w,c
 20510  0126CC  26D9               	addwf	fsr2l,f,c
 20511  0126CE  5040               	movf	i2CANsendMessage@data+1,w,c
 20512  0126D0  22DA               	addwfc	fsr2h,f,c
 20513  0126D2  50DF               	movf	indf2,w,c
 20514  0126D4  010F               	movlb	15	; () banked
 20515  0126D6  6F3D               	movwf	61,b	;volatile
 20516                           
 20517                           ; BSR set to: 15
 20518                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20519  0126D8  010F               	movlb	15	; () banked
 20520  0126DA  8730               	bsf	48,3,b	;volatile
 20521                           
 20522                           ; BSR set to: 15
 20523                           ;inc\CANlib.h: 444: return;
 20524  0126DC  0012               	return	
 20525  0126DE                     i2l398:
 20526                           
 20527                           ; BSR set to: 15
 20528                           ;inc\CANlib.h: 445: }
 20529                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20530  0126DE  010F               	movlb	15	; () banked
 20531  0126E0  B720               	btfsc	32,3,b	;volatile
 20532  0126E2  0012               	return	
 20533                           
 20534                           ; BSR set to: 15
 20535                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20536  0126E4  C041  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20537                           
 20538                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20539  0126E8  AC42               	btfss	i2CANsendMessage@flags,6,c
 20540  0126EA  D003               	goto	i2l413
 20541                           
 20542                           ; BSR set to: 15
 20543                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20544  0126EC  010F               	movlb	15	; () banked
 20545  0126EE  8D25               	bsf	37,6,b	;volatile
 20546  0126F0  D002               	goto	i2l414
 20547  0126F2                     i2l413:
 20548                           
 20549                           ; BSR set to: 15
 20550                           ;inc\CANlib.h: 454: else
 20551                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20552  0126F2  010F               	movlb	15	; () banked
 20553  0126F4  9D25               	bcf	37,6,b	;volatile
 20554  0126F6                     i2l414:
 20555                           
 20556                           ; BSR set to: 15
 20557                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20558  0126F6  A642               	btfss	i2CANsendMessage@flags,3,c
 20559  0126F8  D066               	goto	i2l415
 20560                           
 20561                           ; BSR set to: 15
 20562                           ;inc\CANlib.h: 458: {
 20563                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20564  0126FA  503B               	movf	i2CANsendMessage@identifier,w,c
 20565  0126FC  6E47               	movwf	i2CANsendMessage@tamp,c
 20566  0126FE  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20567  012700  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20568  012702  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20569                           
 20570                           ; BSR set to: 15
 20571                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20572  012704  C047  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20573                           
 20574                           ; BSR set to: 15
 20575                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20576  012708  0E00               	movlw	0
 20577  01270A  143B               	andwf	i2CANsendMessage@identifier,w,c
 20578  01270C  6E47               	movwf	i2CANsendMessage@tamp,c
 20579  01270E  0EFF               	movlw	255
 20580  012710  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20581  012712  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20582  012714  0E00               	movlw	0
 20583  012716  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20584  012718  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20585  01271A  0E00               	movlw	0
 20586  01271C  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20587  01271E  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20588                           
 20589                           ; BSR set to: 15
 20590                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20591  012720  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20592  012724  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20593  012728  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20594  01272C  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20595  012730  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20596  012734  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20597  012738  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20598  01273C  6A46               	clrf	??i2_CANsendMessage+3,c
 20599  01273E  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20600  012742  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20601  012746  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20602  01274A  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20603                           
 20604                           ; BSR set to: 15
 20605                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20606  01274E  C047  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20607                           
 20608                           ; BSR set to: 15
 20609                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20610  012752  0E00               	movlw	0
 20611  012754  010F               	movlb	15	; () banked
 20612  012756  6F22               	movwf	34,b	;volatile
 20613                           
 20614                           ; BSR set to: 15
 20615                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20616  012758  010F               	movlb	15	; () banked
 20617  01275A  8722               	bsf	34,3,b	;volatile
 20618                           
 20619                           ; BSR set to: 15
 20620                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20621  01275C  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 20622  01275E  D002               	goto	i2l416
 20623                           
 20624                           ; BSR set to: 15
 20625                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20626  012760  010F               	movlb	15	; () banked
 20627  012762  8122               	bsf	34,0,b	;volatile
 20628  012764                     i2l416:
 20629                           
 20630                           ; BSR set to: 15
 20631                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20632  012764  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 20633  012766  D002               	goto	i2l417
 20634                           
 20635                           ; BSR set to: 15
 20636                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20637  012768  010F               	movlb	15	; () banked
 20638  01276A  8322               	bsf	34,1,b	;volatile
 20639  01276C                     i2l417:
 20640                           
 20641                           ; BSR set to: 15
 20642                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20643  01276C  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 20644  01276E  D002               	goto	i2l418
 20645                           
 20646                           ; BSR set to: 15
 20647                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20648  012770  010F               	movlb	15	; () banked
 20649  012772  8B22               	bsf	34,5,b	;volatile
 20650  012774                     i2l418:
 20651                           
 20652                           ; BSR set to: 15
 20653                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20654  012774  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 20655  012776  D002               	goto	i2l419
 20656                           
 20657                           ; BSR set to: 15
 20658                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20659  012778  010F               	movlb	15	; () banked
 20660  01277A  8D22               	bsf	34,6,b	;volatile
 20661  01277C                     i2l419:
 20662                           
 20663                           ; BSR set to: 15
 20664                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20665  01277C  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 20666  01277E  D002               	goto	i2l9469
 20667                           
 20668                           ; BSR set to: 15
 20669                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20670  012780  010F               	movlb	15	; () banked
 20671  012782  8F22               	bsf	34,7,b	;volatile
 20672  012784                     i2l9469:
 20673                           
 20674                           ; BSR set to: 15
 20675                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20676  012784  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20677  012788  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20678  01278C  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20679  012790  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20680  012794  0E16               	movlw	22
 20681  012796  D005               	goto	i2u1266_40
 20682  012798                     i2u1266_45:
 20683  012798  90D8               	bcf	status,0,c
 20684  01279A  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20685  01279C  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20686  01279E  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20687  0127A0  3243               	rrcf	??i2_CANsendMessage,f,c
 20688  0127A2                     i2u1266_40:
 20689  0127A2  2EE8               	decfsz	wreg,f,c
 20690  0127A4  D7F9               	goto	i2u1266_45
 20691  0127A6  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20692  0127AA  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20693  0127AE  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20694  0127B2  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20695                           
 20696                           ; BSR set to: 15
 20697                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20698  0127B6  5047               	movf	i2CANsendMessage@tamp,w,c
 20699  0127B8  6E47               	movwf	i2CANsendMessage@tamp,c
 20700  0127BA  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20701  0127BC  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20702  0127BE  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20703                           
 20704                           ; BSR set to: 15
 20705                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20706  0127C0  C047  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20707                           
 20708                           ;inc\CANlib.h: 483: }
 20709  0127C4  D04D               	goto	i2l9489
 20710  0127C6                     i2l415:
 20711                           
 20712                           ; BSR set to: 15
 20713                           ;inc\CANlib.h: 485: else
 20714                           ;inc\CANlib.h: 487: {
 20715                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20716  0127C6  010F               	movlb	15	; () banked
 20717  0127C8  9722               	bcf	34,3,b	;volatile
 20718                           
 20719                           ; BSR set to: 15
 20720                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20721  0127CA  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20722  0127CE  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20723  0127D2  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20724  0127D6  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20725  0127DA  0E04               	movlw	4
 20726  0127DC  D005               	goto	i2u1267_40
 20727  0127DE                     i2u1267_45:
 20728  0127DE  90D8               	bcf	status,0,c
 20729  0127E0  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20730  0127E2  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20731  0127E4  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20732  0127E6  3243               	rrcf	??i2_CANsendMessage,f,c
 20733  0127E8                     i2u1267_40:
 20734  0127E8  2EE8               	decfsz	wreg,f,c
 20735  0127EA  D7F9               	goto	i2u1267_45
 20736  0127EC  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20737  0127F0  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20738  0127F4  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20739  0127F8  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20740                           
 20741                           ; BSR set to: 15
 20742                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20743  0127FC  5047               	movf	i2CANsendMessage@tamp,w,c
 20744  0127FE  6E47               	movwf	i2CANsendMessage@tamp,c
 20745  012800  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20746  012802  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20747  012804  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20748                           
 20749                           ; BSR set to: 15
 20750                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20751  012806  C047  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20752                           
 20753                           ; BSR set to: 15
 20754                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20755  01280A  0E07               	movlw	7
 20756  01280C  143B               	andwf	i2CANsendMessage@identifier,w,c
 20757  01280E  6E47               	movwf	i2CANsendMessage@tamp,c
 20758  012810  0E00               	movlw	0
 20759  012812  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20760  012814  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20761  012816  0E00               	movlw	0
 20762  012818  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20763  01281A  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20764  01281C  0E00               	movlw	0
 20765  01281E  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20766  012820  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20767                           
 20768                           ; BSR set to: 15
 20769                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20770  012822  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20771  012826  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20772  01282A  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20773  01282E  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20774  012832  0E05               	movlw	5
 20775  012834                     i2u1268_45:
 20776  012834  90D8               	bcf	status,0,c
 20777  012836  3643               	rlcf	??i2_CANsendMessage,f,c
 20778  012838  3644               	rlcf	??i2_CANsendMessage+1,f,c
 20779  01283A  3645               	rlcf	??i2_CANsendMessage+2,f,c
 20780  01283C  3646               	rlcf	??i2_CANsendMessage+3,f,c
 20781  01283E  2EE8               	decfsz	wreg,f,c
 20782  012840  D7F9               	goto	i2u1268_45
 20783  012842  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20784  012846  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20785  01284A  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20786  01284E  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20787                           
 20788                           ; BSR set to: 15
 20789                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20790  012852  010F               	movlb	15	; () banked
 20791  012854  5122               	movf	34,w,b	;volatile
 20792  012856  0B1F               	andlw	31
 20793  012858  010F               	movlb	15	; () banked
 20794  01285A  6F22               	movwf	34,b	;volatile
 20795                           
 20796                           ; BSR set to: 15
 20797                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20798  01285C  C047  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20799  012860                     i2l9489:
 20800                           
 20801                           ; BSR set to: 15
 20802                           ;inc\CANlib.h: 498: }
 20803                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20804  012860  A042               	btfss	i2CANsendMessage@flags,0,c
 20805  012862  D003               	goto	i2l422
 20806                           
 20807                           ; BSR set to: 15
 20808                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20809  012864  010F               	movlb	15	; () banked
 20810  012866  8120               	bsf	32,0,b	;volatile
 20811  012868  D002               	goto	i2l423
 20812  01286A                     i2l422:
 20813                           
 20814                           ; BSR set to: 15
 20815                           ;inc\CANlib.h: 502: else
 20816                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20817  01286A  010F               	movlb	15	; () banked
 20818  01286C  9120               	bcf	32,0,b	;volatile
 20819  01286E                     i2l423:
 20820                           
 20821                           ; BSR set to: 15
 20822                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20823  01286E  A242               	btfss	i2CANsendMessage@flags,1,c
 20824  012870  D003               	goto	i2l424
 20825                           
 20826                           ; BSR set to: 15
 20827                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20828  012872  010F               	movlb	15	; () banked
 20829  012874  8320               	bsf	32,1,b	;volatile
 20830  012876  D002               	goto	i2l9495
 20831  012878                     i2l424:
 20832                           
 20833                           ; BSR set to: 15
 20834                           ;inc\CANlib.h: 506: else
 20835                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20836  012878  010F               	movlb	15	; () banked
 20837  01287A  9320               	bcf	32,1,b	;volatile
 20838  01287C                     i2l9495:
 20839                           
 20840                           ; BSR set to: 15
 20841                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20842  01287C  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20843  012880  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20844  012884  50DF               	movf	indf2,w,c
 20845  012886  010F               	movlb	15	; () banked
 20846  012888  6F26               	movwf	38,b	;volatile
 20847                           
 20848                           ; BSR set to: 15
 20849                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20850  01288A  EE20 F001          	lfsr	2,1
 20851  01288E  503F               	movf	i2CANsendMessage@data,w,c
 20852  012890  26D9               	addwf	fsr2l,f,c
 20853  012892  5040               	movf	i2CANsendMessage@data+1,w,c
 20854  012894  22DA               	addwfc	fsr2h,f,c
 20855  012896  50DF               	movf	indf2,w,c
 20856  012898  010F               	movlb	15	; () banked
 20857  01289A  6F27               	movwf	39,b	;volatile
 20858                           
 20859                           ; BSR set to: 15
 20860                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20861  01289C  EE20 F002          	lfsr	2,2
 20862  0128A0  503F               	movf	i2CANsendMessage@data,w,c
 20863  0128A2  26D9               	addwf	fsr2l,f,c
 20864  0128A4  5040               	movf	i2CANsendMessage@data+1,w,c
 20865  0128A6  22DA               	addwfc	fsr2h,f,c
 20866  0128A8  50DF               	movf	indf2,w,c
 20867  0128AA  010F               	movlb	15	; () banked
 20868  0128AC  6F28               	movwf	40,b	;volatile
 20869                           
 20870                           ; BSR set to: 15
 20871                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20872  0128AE  EE20 F003          	lfsr	2,3
 20873  0128B2  503F               	movf	i2CANsendMessage@data,w,c
 20874  0128B4  26D9               	addwf	fsr2l,f,c
 20875  0128B6  5040               	movf	i2CANsendMessage@data+1,w,c
 20876  0128B8  22DA               	addwfc	fsr2h,f,c
 20877  0128BA  50DF               	movf	indf2,w,c
 20878  0128BC  010F               	movlb	15	; () banked
 20879  0128BE  6F29               	movwf	41,b	;volatile
 20880                           
 20881                           ; BSR set to: 15
 20882                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20883  0128C0  EE20 F004          	lfsr	2,4
 20884  0128C4  503F               	movf	i2CANsendMessage@data,w,c
 20885  0128C6  26D9               	addwf	fsr2l,f,c
 20886  0128C8  5040               	movf	i2CANsendMessage@data+1,w,c
 20887  0128CA  22DA               	addwfc	fsr2h,f,c
 20888  0128CC  50DF               	movf	indf2,w,c
 20889  0128CE  010F               	movlb	15	; () banked
 20890  0128D0  6F2A               	movwf	42,b	;volatile
 20891                           
 20892                           ; BSR set to: 15
 20893                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20894  0128D2  EE20 F005          	lfsr	2,5
 20895  0128D6  503F               	movf	i2CANsendMessage@data,w,c
 20896  0128D8  26D9               	addwf	fsr2l,f,c
 20897  0128DA  5040               	movf	i2CANsendMessage@data+1,w,c
 20898  0128DC  22DA               	addwfc	fsr2h,f,c
 20899  0128DE  50DF               	movf	indf2,w,c
 20900  0128E0  010F               	movlb	15	; () banked
 20901  0128E2  6F2B               	movwf	43,b	;volatile
 20902                           
 20903                           ; BSR set to: 15
 20904                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20905  0128E4  EE20 F006          	lfsr	2,6
 20906  0128E8  503F               	movf	i2CANsendMessage@data,w,c
 20907  0128EA  26D9               	addwf	fsr2l,f,c
 20908  0128EC  5040               	movf	i2CANsendMessage@data+1,w,c
 20909  0128EE  22DA               	addwfc	fsr2h,f,c
 20910  0128F0  50DF               	movf	indf2,w,c
 20911  0128F2  010F               	movlb	15	; () banked
 20912  0128F4  6F2C               	movwf	44,b	;volatile
 20913                           
 20914                           ; BSR set to: 15
 20915                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20916  0128F6  EE20 F007          	lfsr	2,7
 20917  0128FA  503F               	movf	i2CANsendMessage@data,w,c
 20918  0128FC  26D9               	addwf	fsr2l,f,c
 20919  0128FE  5040               	movf	i2CANsendMessage@data+1,w,c
 20920  012900  22DA               	addwfc	fsr2h,f,c
 20921  012902  50DF               	movf	indf2,w,c
 20922  012904  010F               	movlb	15	; () banked
 20923  012906  6F2D               	movwf	45,b	;volatile
 20924                           
 20925                           ; BSR set to: 15
 20926                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20927  012908  010F               	movlb	15	; () banked
 20928  01290A  8720               	bsf	32,3,b	;volatile
 20929                           
 20930                           ; BSR set to: 15
 20931                           ;inc\CANlib.h: 520: return;
 20932  01290C  0012               	return	
 20933  01290E                     __end_ofi2_CANsendMessage:
 20934                           	opt stack 0
 20935                           pclatu	equ	0xFFB
 20936                           pclath	equ	0xFFA
 20937                           tblptru	equ	0xFF8
 20938                           tblptrh	equ	0xFF7
 20939                           tblptrl	equ	0xFF6
 20940                           tablat	equ	0xFF5
 20941                           prodh	equ	0xFF4
 20942                           prodl	equ	0xFF3
 20943                           intcon	equ	0xFF2
 20944                           postinc0	equ	0xFEE
 20945                           fsr0h	equ	0xFEA
 20946                           fsr0l	equ	0xFE9
 20947                           wreg	equ	0xFE8
 20948                           indf1	equ	0xFE7
 20949                           plusw1	equ	0xFE3
 20950                           fsr1h	equ	0xFE2
 20951                           fsr1l	equ	0xFE1
 20952                           bsr	equ	0xFE0
 20953                           indf2	equ	0xFDF
 20954                           postinc2	equ	0xFDE
 20955                           plusw2	equ	0xFDB
 20956                           fsr2h	equ	0xFDA
 20957                           fsr2l	equ	0xFD9
 20958                           status	equ	0xFD8
 20959                           
 20960 ;; *************** function i2_CANisTxReady *****************
 20961 ;; Defined at:
 20962 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20963 ;; Parameters:    Size  Location     Type
 20964 ;;		None
 20965 ;; Auto vars:     Size  Location     Type
 20966 ;;		None
 20967 ;; Return value:  Size  Location     Type
 20968 ;;                  1    wreg      unsigned char 
 20969 ;; Registers used:
 20970 ;;		wreg, status,2
 20971 ;; Tracked objects:
 20972 ;;		On entry : 0/0
 20973 ;;		On exit  : 0/0
 20974 ;;		Unchanged: 0/0
 20975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20980 ;;Total ram usage:        1 bytes
 20981 ;; Hardware stack levels used:    1
 20982 ;; This function calls:
 20983 ;;		Nothing
 20984 ;; This function is called by:
 20985 ;;		_ISR_alta
 20986 ;; This function uses a non-reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text59
 20990  0163F6                     __ptext59:
 20991                           	opt stack 0
 20992  0163F6                     i2_CANisTxReady:
 20993                           	opt stack 20
 20994                           
 20995                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20996                           
 20997                           ; BSR set to: 15
 20998                           ;incstack = 0
 20999  0163F6  0E01               	movlw	1
 21000  0163F8  6E3B               	movwf	i2_CANisTxReady$3251,c
 21001  0163FA  010F               	movlb	15	; () banked
 21002  0163FC  A740               	btfss	64,3,b	;volatile
 21003  0163FE  D008               	goto	i2l576
 21004                           
 21005                           ; BSR set to: 15
 21006  016400  010F               	movlb	15	; () banked
 21007  016402  A730               	btfss	48,3,b	;volatile
 21008  016404  D005               	goto	i2l576
 21009                           
 21010                           ; BSR set to: 15
 21011  016406  010F               	movlb	15	; () banked
 21012  016408  A720               	btfss	32,3,b	;volatile
 21013  01640A  D002               	goto	i2l576
 21014                           
 21015                           ; BSR set to: 15
 21016  01640C  0E00               	movlw	0
 21017  01640E  6E3B               	movwf	i2_CANisTxReady$3251,c
 21018  016410                     i2l576:
 21019                           
 21020                           ; BSR set to: 15
 21021  016410  503B               	movf	i2_CANisTxReady$3251,w,c
 21022  016412  0012               	return	
 21023  016414                     __end_ofi2_CANisTxReady:
 21024                           	opt stack 0
 21025                           pclatu	equ	0xFFB
 21026                           pclath	equ	0xFFA
 21027                           tblptru	equ	0xFF8
 21028                           tblptrh	equ	0xFF7
 21029                           tblptrl	equ	0xFF6
 21030                           tablat	equ	0xFF5
 21031                           prodh	equ	0xFF4
 21032                           prodl	equ	0xFF3
 21033                           intcon	equ	0xFF2
 21034                           postinc0	equ	0xFEE
 21035                           fsr0h	equ	0xFEA
 21036                           fsr0l	equ	0xFE9
 21037                           wreg	equ	0xFE8
 21038                           indf1	equ	0xFE7
 21039                           plusw1	equ	0xFE3
 21040                           fsr1h	equ	0xFE2
 21041                           fsr1l	equ	0xFE1
 21042                           bsr	equ	0xFE0
 21043                           indf2	equ	0xFDF
 21044                           postinc2	equ	0xFDE
 21045                           plusw2	equ	0xFDB
 21046                           fsr2h	equ	0xFDA
 21047                           fsr2l	equ	0xFD9
 21048                           status	equ	0xFD8
 21049                           
 21050 ;; *************** function _CANreceiveMessage *****************
 21051 ;; Defined at:
 21052 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;  msg             2   17[COMRAM] PTR struct .
 21055 ;;		 -> msg(15), 
 21056 ;; Auto vars:     Size  Location     Type
 21057 ;;  tamp            1   28[COMRAM] unsigned char 
 21058 ;;  error           1   27[COMRAM] unsigned char 
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1    wreg      unsigned char 
 21061 ;; Registers used:
 21062 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/0
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21070 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21071 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21072 ;;Total ram usage:       12 bytes
 21073 ;; Hardware stack levels used:    1
 21074 ;; This function calls:
 21075 ;;		Nothing
 21076 ;; This function is called by:
 21077 ;;		_ISR_alta
 21078 ;; This function uses a non-reentrant model
 21079 ;;
 21080                           
 21081                           	psect	text60
 21082  012E28                     __ptext60:
 21083                           	opt stack 0
 21084  012E28                     _CANreceiveMessage:
 21085                           	opt stack 20
 21086                           
 21087                           ;inc\CANlib.h: 530: BYTE tamp;
 21088                           ;inc\CANlib.h: 531: BYTE error = 0;
 21089                           
 21090                           ; BSR set to: 15
 21091                           ;incstack = 0
 21092  012E28  0E00               	movlw	0
 21093  012E2A  6E45               	movwf	CANreceiveMessage@error,c
 21094                           
 21095                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 21096  012E2C  BE74               	btfsc	3956,7,c	;volatile
 21097                           
 21098                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 21099  012E2E  8045               	bsf	CANreceiveMessage@error,0,c
 21100                           
 21101                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 21102  012E30  BC74               	btfsc	3956,6,c	;volatile
 21103                           
 21104                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 21105  012E32  8245               	bsf	CANreceiveMessage@error,1,c
 21106                           
 21107                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 21108  012E34  010F               	movlb	15	; () banked
 21109  012E36  AF50               	btfss	80,7,b	;volatile
 21110  012E38  D143               	goto	i2l430
 21111                           
 21112                           ; BSR set to: 15
 21113                           ;inc\CANlib.h: 541: {
 21114                           ;inc\CANlib.h: 542: msg->identifier = 0;
 21115  012E3A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21116  012E3E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21117  012E42  6ADE               	clrf	postinc2,c
 21118  012E44  6ADE               	clrf	postinc2,c
 21119  012E46  6ADE               	clrf	postinc2,c
 21120  012E48  6ADD               	clrf	postdec2,c
 21121                           
 21122                           ; BSR set to: 15
 21123                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 21124  012E4A  EE20 F004          	lfsr	2,4
 21125  012E4E  503B               	movf	CANreceiveMessage@msg,w,c
 21126  012E50  26D9               	addwf	fsr2l,f,c
 21127  012E52  503C               	movf	CANreceiveMessage@msg+1,w,c
 21128  012E54  22DA               	addwfc	fsr2h,f,c
 21129  012E56  CF56 FFDF          	movff	3926,indf2	;volatile
 21130                           
 21131                           ; BSR set to: 15
 21132                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 21133  012E5A  EE20 F005          	lfsr	2,5
 21134  012E5E  503B               	movf	CANreceiveMessage@msg,w,c
 21135  012E60  26D9               	addwf	fsr2l,f,c
 21136  012E62  503C               	movf	CANreceiveMessage@msg+1,w,c
 21137  012E64  22DA               	addwfc	fsr2h,f,c
 21138  012E66  CF57 FFDF          	movff	3927,indf2	;volatile
 21139                           
 21140                           ; BSR set to: 15
 21141                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 21142  012E6A  EE20 F006          	lfsr	2,6
 21143  012E6E  503B               	movf	CANreceiveMessage@msg,w,c
 21144  012E70  26D9               	addwf	fsr2l,f,c
 21145  012E72  503C               	movf	CANreceiveMessage@msg+1,w,c
 21146  012E74  22DA               	addwfc	fsr2h,f,c
 21147  012E76  CF58 FFDF          	movff	3928,indf2	;volatile
 21148                           
 21149                           ; BSR set to: 15
 21150                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 21151  012E7A  EE20 F007          	lfsr	2,7
 21152  012E7E  503B               	movf	CANreceiveMessage@msg,w,c
 21153  012E80  26D9               	addwf	fsr2l,f,c
 21154  012E82  503C               	movf	CANreceiveMessage@msg+1,w,c
 21155  012E84  22DA               	addwfc	fsr2h,f,c
 21156  012E86  CF59 FFDF          	movff	3929,indf2	;volatile
 21157                           
 21158                           ; BSR set to: 15
 21159                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 21160  012E8A  EE20 F008          	lfsr	2,8
 21161  012E8E  503B               	movf	CANreceiveMessage@msg,w,c
 21162  012E90  26D9               	addwf	fsr2l,f,c
 21163  012E92  503C               	movf	CANreceiveMessage@msg+1,w,c
 21164  012E94  22DA               	addwfc	fsr2h,f,c
 21165  012E96  CF5A FFDF          	movff	3930,indf2	;volatile
 21166                           
 21167                           ; BSR set to: 15
 21168                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 21169  012E9A  EE20 F009          	lfsr	2,9
 21170  012E9E  503B               	movf	CANreceiveMessage@msg,w,c
 21171  012EA0  26D9               	addwf	fsr2l,f,c
 21172  012EA2  503C               	movf	CANreceiveMessage@msg+1,w,c
 21173  012EA4  22DA               	addwfc	fsr2h,f,c
 21174  012EA6  CF5B FFDF          	movff	3931,indf2	;volatile
 21175                           
 21176                           ; BSR set to: 15
 21177                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 21178  012EAA  EE20 F00A          	lfsr	2,10
 21179  012EAE  503B               	movf	CANreceiveMessage@msg,w,c
 21180  012EB0  26D9               	addwf	fsr2l,f,c
 21181  012EB2  503C               	movf	CANreceiveMessage@msg+1,w,c
 21182  012EB4  22DA               	addwfc	fsr2h,f,c
 21183  012EB6  CF5C FFDF          	movff	3932,indf2	;volatile
 21184                           
 21185                           ; BSR set to: 15
 21186                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 21187  012EBA  EE20 F00B          	lfsr	2,11
 21188  012EBE  503B               	movf	CANreceiveMessage@msg,w,c
 21189  012EC0  26D9               	addwf	fsr2l,f,c
 21190  012EC2  503C               	movf	CANreceiveMessage@msg+1,w,c
 21191  012EC4  22DA               	addwfc	fsr2h,f,c
 21192  012EC6  CF5D FFDF          	movff	3933,indf2	;volatile
 21193                           
 21194                           ; BSR set to: 15
 21195                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 21196  012ECA  EE20 F00E          	lfsr	2,14
 21197  012ECE  503B               	movf	CANreceiveMessage@msg,w,c
 21198  012ED0  26D9               	addwf	fsr2l,f,c
 21199  012ED2  503C               	movf	CANreceiveMessage@msg+1,w,c
 21200  012ED4  22DA               	addwfc	fsr2h,f,c
 21201  012ED6  010F               	movlb	15	; () banked
 21202  012ED8  AD55               	btfss	85,6,b	;volatile
 21203  012EDA  D002               	goto	i2u1204_40
 21204  012EDC  0E01               	movlw	1
 21205  012EDE  D001               	goto	i2u1204_46
 21206  012EE0                     i2u1204_40:
 21207  012EE0  0E00               	movlw	0
 21208  012EE2                     i2u1204_46:
 21209  012EE2  6EDF               	movwf	indf2,c
 21210                           
 21211                           ; BSR set to: 15
 21212                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 21213  012EE4  EE20 F00D          	lfsr	2,13
 21214  012EE8  503B               	movf	CANreceiveMessage@msg,w,c
 21215  012EEA  26D9               	addwf	fsr2l,f,c
 21216  012EEC  503C               	movf	CANreceiveMessage@msg+1,w,c
 21217  012EEE  22DA               	addwfc	fsr2h,f,c
 21218  012EF0  010F               	movlb	15	; () banked
 21219  012EF2  5155               	movf	85,w,b	;volatile
 21220  012EF4  0B0F               	andlw	15
 21221  012EF6  6EDF               	movwf	indf2,c
 21222                           
 21223                           ; BSR set to: 15
 21224                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 21225  012EF8  EE20 F00C          	lfsr	2,12
 21226  012EFC  503B               	movf	CANreceiveMessage@msg,w,c
 21227  012EFE  26D9               	addwf	fsr2l,f,c
 21228  012F00  503C               	movf	CANreceiveMessage@msg+1,w,c
 21229  012F02  22DA               	addwfc	fsr2h,f,c
 21230  012F04  010F               	movlb	15	; () banked
 21231  012F06  A752               	btfss	82,3,b	;volatile
 21232  012F08  D002               	goto	i2u1205_40
 21233  012F0A  0E01               	movlw	1
 21234  012F0C  D001               	goto	i2u1205_46
 21235  012F0E                     i2u1205_40:
 21236  012F0E  0E00               	movlw	0
 21237  012F10                     i2u1205_46:
 21238  012F10  6EDF               	movwf	indf2,c
 21239                           
 21240                           ; BSR set to: 15
 21241                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 21242  012F12  010F               	movlb	15	; () banked
 21243  012F14  B752               	btfsc	82,3,b	;volatile
 21244  012F16  D044               	goto	i2l9007
 21245                           
 21246                           ; BSR set to: 15
 21247                           ;inc\CANlib.h: 559: {
 21248                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 21249  012F18  CF51 F03D          	movff	3921,??_CANreceiveMessage	;volatile
 21250  012F1C  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21251  012F1E  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21252  012F20  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21253  012F22  0E03               	movlw	3
 21254  012F24                     i2u1207_45:
 21255  012F24  90D8               	bcf	status,0,c
 21256  012F26  363D               	rlcf	??_CANreceiveMessage,f,c
 21257  012F28  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21258  012F2A  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21259  012F2C  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21260  012F2E  2EE8               	decfsz	wreg,f,c
 21261  012F30  D7F9               	goto	i2u1207_45
 21262  012F32  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21263  012F36  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21264  012F3A  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21265  012F3E  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21266  012F42  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21267  012F46  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21268                           
 21269                           ; BSR set to: 15
 21270                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 21271  012F4A  010F               	movlb	15	; () banked
 21272  012F4C  3952               	swapf	82,w,b	;volatile
 21273  012F4E  42E8               	rrncf	wreg,f,c
 21274  012F50  0B07               	andlw	7
 21275  012F52  0B07               	andlw	7
 21276  012F54  6E46               	movwf	CANreceiveMessage@tamp,c
 21277                           
 21278                           ; BSR set to: 15
 21279                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 21280  012F56  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21281  012F5A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21282  012F5E  CFDE F03D          	movff	postinc2,??_CANreceiveMessage
 21283  012F62  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+1
 21284  012F66  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+2
 21285  012F6A  CFDE F040          	movff	postinc2,??_CANreceiveMessage+3
 21286  012F6E  5046               	movf	CANreceiveMessage@tamp,w,c
 21287  012F70  243D               	addwf	??_CANreceiveMessage,w,c
 21288  012F72  6E41               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21289  012F74  0E00               	movlw	0
 21290  012F76  203E               	addwfc	??_CANreceiveMessage+1,w,c
 21291  012F78  6E42               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21292  012F7A  0E00               	movlw	0
 21293  012F7C  203F               	addwfc	??_CANreceiveMessage+2,w,c
 21294  012F7E  6E43               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21295  012F80  0E00               	movlw	0
 21296  012F82  2040               	addwfc	??_CANreceiveMessage+3,w,c
 21297  012F84  6E44               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21298  012F86  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21299  012F8A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21300  012F8E  C041  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21301  012F92  C042  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21302  012F96  C043  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21303  012F9A  C044  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21304                           
 21305                           ;inc\CANlib.h: 563: }
 21306  012F9E  D08D               	goto	i2l9033
 21307  012FA0                     i2l9007:
 21308                           
 21309                           ; BSR set to: 15
 21310                           ;inc\CANlib.h: 564: else
 21311                           ;inc\CANlib.h: 565: {
 21312                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 21313  012FA0  CF54 F03D          	movff	3924,??_CANreceiveMessage	;volatile
 21314  012FA4  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21315  012FA6  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21316  012FA8  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21317  012FAA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21318  012FAE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21319  012FB2  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21320  012FB6  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21321  012FBA  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21322  012FBE  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21323                           
 21324                           ; BSR set to: 15
 21325                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 21326  012FC2  CF53 F03D          	movff	3923,??_CANreceiveMessage	;volatile
 21327  012FC6  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21328  012FC8  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21329  012FCA  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21330  012FCC  C03F  F040         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21331  012FD0  C03E  F03F         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21332  012FD4  C03D  F03E         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21333  012FD8  6A3D               	clrf	??_CANreceiveMessage,c
 21334  012FDA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21335  012FDE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21336  012FE2  503D               	movf	??_CANreceiveMessage,w,c
 21337  012FE4  26DE               	addwf	postinc2,f,c
 21338  012FE6  503E               	movf	??_CANreceiveMessage+1,w,c
 21339  012FE8  22DE               	addwfc	postinc2,f,c
 21340  012FEA  503F               	movf	??_CANreceiveMessage+2,w,c
 21341  012FEC  22DE               	addwfc	postinc2,f,c
 21342  012FEE  5040               	movf	??_CANreceiveMessage+3,w,c
 21343  012FF0  22DE               	addwfc	postinc2,f,c
 21344                           
 21345                           ; BSR set to: 15
 21346                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 21347  012FF2  010F               	movlb	15	; () banked
 21348  012FF4  A152               	btfss	82,0,b	;volatile
 21349  012FF6  D00C               	goto	i2l9015
 21350                           
 21351                           ; BSR set to: 15
 21352                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 21353  012FF8  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21354  012FFC  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21355  013000  0E00               	movlw	0
 21356  013002  12DE               	iorwf	postinc2,f,c
 21357  013004  0E00               	movlw	0
 21358  013006  12DE               	iorwf	postinc2,f,c
 21359  013008  0E01               	movlw	1
 21360  01300A  12DE               	iorwf	postinc2,f,c
 21361  01300C  0E00               	movlw	0
 21362  01300E  12DE               	iorwf	postinc2,f,c
 21363  013010                     i2l9015:
 21364                           
 21365                           ; BSR set to: 15
 21366                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 21367  013010  010F               	movlb	15	; () banked
 21368  013012  A352               	btfss	82,1,b	;volatile
 21369  013014  D00C               	goto	i2l9019
 21370                           
 21371                           ; BSR set to: 15
 21372                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 21373  013016  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21374  01301A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21375  01301E  0E00               	movlw	0
 21376  013020  12DE               	iorwf	postinc2,f,c
 21377  013022  0E00               	movlw	0
 21378  013024  12DE               	iorwf	postinc2,f,c
 21379  013026  0E02               	movlw	2
 21380  013028  12DE               	iorwf	postinc2,f,c
 21381  01302A  0E00               	movlw	0
 21382  01302C  12DE               	iorwf	postinc2,f,c
 21383  01302E                     i2l9019:
 21384                           
 21385                           ; BSR set to: 15
 21386                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 21387  01302E  010F               	movlb	15	; () banked
 21388  013030  AB52               	btfss	82,5,b	;volatile
 21389  013032  D00C               	goto	i2l9023
 21390                           
 21391                           ; BSR set to: 15
 21392                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21393  013034  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21394  013038  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21395  01303C  0E00               	movlw	0
 21396  01303E  12DE               	iorwf	postinc2,f,c
 21397  013040  0E00               	movlw	0
 21398  013042  12DE               	iorwf	postinc2,f,c
 21399  013044  0E04               	movlw	4
 21400  013046  12DE               	iorwf	postinc2,f,c
 21401  013048  0E00               	movlw	0
 21402  01304A  12DE               	iorwf	postinc2,f,c
 21403  01304C                     i2l9023:
 21404                           
 21405                           ; BSR set to: 15
 21406                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21407  01304C  010F               	movlb	15	; () banked
 21408  01304E  AD52               	btfss	82,6,b	;volatile
 21409  013050  D00C               	goto	i2l9027
 21410                           
 21411                           ; BSR set to: 15
 21412                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21413  013052  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21414  013056  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21415  01305A  0E00               	movlw	0
 21416  01305C  12DE               	iorwf	postinc2,f,c
 21417  01305E  0E00               	movlw	0
 21418  013060  12DE               	iorwf	postinc2,f,c
 21419  013062  0E08               	movlw	8
 21420  013064  12DE               	iorwf	postinc2,f,c
 21421  013066  0E00               	movlw	0
 21422  013068  12DE               	iorwf	postinc2,f,c
 21423  01306A                     i2l9027:
 21424                           
 21425                           ; BSR set to: 15
 21426                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21427  01306A  010F               	movlb	15	; () banked
 21428  01306C  AF52               	btfss	82,7,b	;volatile
 21429  01306E  D00C               	goto	i2l9031
 21430                           
 21431                           ; BSR set to: 15
 21432                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21433  013070  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21434  013074  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21435  013078  0E00               	movlw	0
 21436  01307A  12DE               	iorwf	postinc2,f,c
 21437  01307C  0E00               	movlw	0
 21438  01307E  12DE               	iorwf	postinc2,f,c
 21439  013080  0E10               	movlw	16
 21440  013082  12DE               	iorwf	postinc2,f,c
 21441  013084  0E00               	movlw	0
 21442  013086  12DE               	iorwf	postinc2,f,c
 21443  013088                     i2l9031:
 21444                           
 21445                           ; BSR set to: 15
 21446                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21447  013088  CF51 F03D          	movff	3921,??_CANreceiveMessage	;volatile
 21448  01308C  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21449  01308E  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21450  013090  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21451  013092  0E15               	movlw	21
 21452  013094                     i2u1213_45:
 21453  013094  90D8               	bcf	status,0,c
 21454  013096  363D               	rlcf	??_CANreceiveMessage,f,c
 21455  013098  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21456  01309A  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21457  01309C  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21458  01309E  2EE8               	decfsz	wreg,f,c
 21459  0130A0  D7F9               	goto	i2u1213_45
 21460  0130A2  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21461  0130A6  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21462  0130AA  503D               	movf	??_CANreceiveMessage,w,c
 21463  0130AC  12DE               	iorwf	postinc2,f,c
 21464  0130AE  503E               	movf	??_CANreceiveMessage+1,w,c
 21465  0130B0  12DE               	iorwf	postinc2,f,c
 21466  0130B2  503F               	movf	??_CANreceiveMessage+2,w,c
 21467  0130B4  12DE               	iorwf	postinc2,f,c
 21468  0130B6  5040               	movf	??_CANreceiveMessage+3,w,c
 21469  0130B8  12DE               	iorwf	postinc2,f,c
 21470  0130BA                     i2l9033:
 21471                           
 21472                           ; BSR set to: 15
 21473                           ;inc\CANlib.h: 581: }
 21474                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21475  0130BA  010F               	movlb	15	; () banked
 21476  0130BC  9F50               	bcf	80,7,b	;volatile
 21477                           
 21478                           ; BSR set to: 15
 21479                           ;inc\CANlib.h: 584: return (error);
 21480                           ;	Return value of _CANreceiveMessage is never used
 21481  0130BE  0012               	return	
 21482  0130C0                     i2l430:
 21483                           
 21484                           ; BSR set to: 15
 21485                           ;inc\CANlib.h: 585: }
 21486                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21487  0130C0  AE60               	btfss	3936,7,c	;volatile
 21488  0130C2  0012               	return	
 21489                           
 21490                           ; BSR set to: 15
 21491                           ;inc\CANlib.h: 588: {
 21492                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21493  0130C4  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21494  0130C8  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21495  0130CC  6ADE               	clrf	postinc2,c
 21496  0130CE  6ADE               	clrf	postinc2,c
 21497  0130D0  6ADE               	clrf	postinc2,c
 21498  0130D2  6ADD               	clrf	postdec2,c
 21499                           
 21500                           ; BSR set to: 15
 21501                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21502  0130D4  EE20 F004          	lfsr	2,4
 21503  0130D8  503B               	movf	CANreceiveMessage@msg,w,c
 21504  0130DA  26D9               	addwf	fsr2l,f,c
 21505  0130DC  503C               	movf	CANreceiveMessage@msg+1,w,c
 21506  0130DE  22DA               	addwfc	fsr2h,f,c
 21507  0130E0  CF66 FFDF          	movff	3942,indf2	;volatile
 21508                           
 21509                           ; BSR set to: 15
 21510                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21511  0130E4  EE20 F005          	lfsr	2,5
 21512  0130E8  503B               	movf	CANreceiveMessage@msg,w,c
 21513  0130EA  26D9               	addwf	fsr2l,f,c
 21514  0130EC  503C               	movf	CANreceiveMessage@msg+1,w,c
 21515  0130EE  22DA               	addwfc	fsr2h,f,c
 21516  0130F0  CF67 FFDF          	movff	3943,indf2	;volatile
 21517                           
 21518                           ; BSR set to: 15
 21519                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21520  0130F4  EE20 F006          	lfsr	2,6
 21521  0130F8  503B               	movf	CANreceiveMessage@msg,w,c
 21522  0130FA  26D9               	addwf	fsr2l,f,c
 21523  0130FC  503C               	movf	CANreceiveMessage@msg+1,w,c
 21524  0130FE  22DA               	addwfc	fsr2h,f,c
 21525  013100  CF68 FFDF          	movff	3944,indf2	;volatile
 21526                           
 21527                           ; BSR set to: 15
 21528                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21529  013104  EE20 F007          	lfsr	2,7
 21530  013108  503B               	movf	CANreceiveMessage@msg,w,c
 21531  01310A  26D9               	addwf	fsr2l,f,c
 21532  01310C  503C               	movf	CANreceiveMessage@msg+1,w,c
 21533  01310E  22DA               	addwfc	fsr2h,f,c
 21534  013110  CF69 FFDF          	movff	3945,indf2	;volatile
 21535                           
 21536                           ; BSR set to: 15
 21537                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21538  013114  EE20 F008          	lfsr	2,8
 21539  013118  503B               	movf	CANreceiveMessage@msg,w,c
 21540  01311A  26D9               	addwf	fsr2l,f,c
 21541  01311C  503C               	movf	CANreceiveMessage@msg+1,w,c
 21542  01311E  22DA               	addwfc	fsr2h,f,c
 21543  013120  CF6A FFDF          	movff	3946,indf2	;volatile
 21544                           
 21545                           ; BSR set to: 15
 21546                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21547  013124  EE20 F009          	lfsr	2,9
 21548  013128  503B               	movf	CANreceiveMessage@msg,w,c
 21549  01312A  26D9               	addwf	fsr2l,f,c
 21550  01312C  503C               	movf	CANreceiveMessage@msg+1,w,c
 21551  01312E  22DA               	addwfc	fsr2h,f,c
 21552  013130  CF6B FFDF          	movff	3947,indf2	;volatile
 21553                           
 21554                           ; BSR set to: 15
 21555                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21556  013134  EE20 F00A          	lfsr	2,10
 21557  013138  503B               	movf	CANreceiveMessage@msg,w,c
 21558  01313A  26D9               	addwf	fsr2l,f,c
 21559  01313C  503C               	movf	CANreceiveMessage@msg+1,w,c
 21560  01313E  22DA               	addwfc	fsr2h,f,c
 21561  013140  CF6C FFDF          	movff	3948,indf2	;volatile
 21562                           
 21563                           ; BSR set to: 15
 21564                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21565  013144  EE20 F00B          	lfsr	2,11
 21566  013148  503B               	movf	CANreceiveMessage@msg,w,c
 21567  01314A  26D9               	addwf	fsr2l,f,c
 21568  01314C  503C               	movf	CANreceiveMessage@msg+1,w,c
 21569  01314E  22DA               	addwfc	fsr2h,f,c
 21570  013150  CF6D FFDF          	movff	3949,indf2	;volatile
 21571                           
 21572                           ; BSR set to: 15
 21573                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21574  013154  EE20 F00E          	lfsr	2,14
 21575  013158  503B               	movf	CANreceiveMessage@msg,w,c
 21576  01315A  26D9               	addwf	fsr2l,f,c
 21577  01315C  503C               	movf	CANreceiveMessage@msg+1,w,c
 21578  01315E  22DA               	addwfc	fsr2h,f,c
 21579  013160  AC65               	btfss	3941,6,c	;volatile
 21580  013162  D002               	goto	i2u1215_40
 21581  013164  0E01               	movlw	1
 21582  013166  D001               	goto	i2u1215_46
 21583  013168                     i2u1215_40:
 21584  013168  0E00               	movlw	0
 21585  01316A                     i2u1215_46:
 21586  01316A  6EDF               	movwf	indf2,c
 21587                           
 21588                           ; BSR set to: 15
 21589                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21590  01316C  EE20 F00D          	lfsr	2,13
 21591  013170  503B               	movf	CANreceiveMessage@msg,w,c
 21592  013172  26D9               	addwf	fsr2l,f,c
 21593  013174  503C               	movf	CANreceiveMessage@msg+1,w,c
 21594  013176  22DA               	addwfc	fsr2h,f,c
 21595  013178  5065               	movf	3941,w,c	;volatile
 21596  01317A  0B0F               	andlw	15
 21597  01317C  6EDF               	movwf	indf2,c
 21598                           
 21599                           ; BSR set to: 15
 21600                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21601  01317E  EE20 F00C          	lfsr	2,12
 21602  013182  503B               	movf	CANreceiveMessage@msg,w,c
 21603  013184  26D9               	addwf	fsr2l,f,c
 21604  013186  503C               	movf	CANreceiveMessage@msg+1,w,c
 21605  013188  22DA               	addwfc	fsr2h,f,c
 21606  01318A  A662               	btfss	3938,3,c	;volatile
 21607  01318C  D002               	goto	i2u1216_40
 21608  01318E  0E01               	movlw	1
 21609  013190  D001               	goto	i2u1216_46
 21610  013192                     i2u1216_40:
 21611  013192  0E00               	movlw	0
 21612  013194                     i2u1216_46:
 21613  013194  6EDF               	movwf	indf2,c
 21614                           
 21615                           ; BSR set to: 15
 21616                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21617  013196  B662               	btfsc	3938,3,c	;volatile
 21618  013198  D043               	goto	i2l9069
 21619                           
 21620                           ; BSR set to: 15
 21621                           ;inc\CANlib.h: 606: {
 21622                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21623  01319A  CF61 F03D          	movff	3937,??_CANreceiveMessage	;volatile
 21624  01319E  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21625  0131A0  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21626  0131A2  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21627  0131A4  0E03               	movlw	3
 21628  0131A6                     i2u1218_45:
 21629  0131A6  90D8               	bcf	status,0,c
 21630  0131A8  363D               	rlcf	??_CANreceiveMessage,f,c
 21631  0131AA  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21632  0131AC  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21633  0131AE  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21634  0131B0  2EE8               	decfsz	wreg,f,c
 21635  0131B2  D7F9               	goto	i2u1218_45
 21636  0131B4  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21637  0131B8  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21638  0131BC  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21639  0131C0  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21640  0131C4  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21641  0131C8  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21642                           
 21643                           ; BSR set to: 15
 21644                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21645  0131CC  3862               	swapf	3938,w,c	;volatile
 21646  0131CE  42E8               	rrncf	wreg,f,c
 21647  0131D0  0B07               	andlw	7
 21648  0131D2  0B07               	andlw	7
 21649  0131D4  6E46               	movwf	CANreceiveMessage@tamp,c
 21650                           
 21651                           ; BSR set to: 15
 21652                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21653  0131D6  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21654  0131DA  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21655  0131DE  CFDE F03D          	movff	postinc2,??_CANreceiveMessage
 21656  0131E2  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+1
 21657  0131E6  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+2
 21658  0131EA  CFDE F040          	movff	postinc2,??_CANreceiveMessage+3
 21659  0131EE  5046               	movf	CANreceiveMessage@tamp,w,c
 21660  0131F0  243D               	addwf	??_CANreceiveMessage,w,c
 21661  0131F2  6E41               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21662  0131F4  0E00               	movlw	0
 21663  0131F6  203E               	addwfc	??_CANreceiveMessage+1,w,c
 21664  0131F8  6E42               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21665  0131FA  0E00               	movlw	0
 21666  0131FC  203F               	addwfc	??_CANreceiveMessage+2,w,c
 21667  0131FE  6E43               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21668  013200  0E00               	movlw	0
 21669  013202  2040               	addwfc	??_CANreceiveMessage+3,w,c
 21670  013204  6E44               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21671  013206  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21672  01320A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21673  01320E  C041  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21674  013212  C042  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21675  013216  C043  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21676  01321A  C044  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21677                           
 21678                           ;inc\CANlib.h: 610: }
 21679  01321E  D088               	goto	i2l9095
 21680  013220                     i2l9069:
 21681                           
 21682                           ; BSR set to: 15
 21683                           ;inc\CANlib.h: 611: else
 21684                           ;inc\CANlib.h: 612: {
 21685                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21686  013220  CF64 F03D          	movff	3940,??_CANreceiveMessage	;volatile
 21687  013224  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21688  013226  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21689  013228  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21690  01322A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21691  01322E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21692  013232  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21693  013236  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21694  01323A  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21695  01323E  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21696                           
 21697                           ; BSR set to: 15
 21698                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21699  013242  CF63 F03D          	movff	3939,??_CANreceiveMessage	;volatile
 21700  013246  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21701  013248  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21702  01324A  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21703  01324C  C03F  F040         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21704  013250  C03E  F03F         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21705  013254  C03D  F03E         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21706  013258  6A3D               	clrf	??_CANreceiveMessage,c
 21707  01325A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21708  01325E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21709  013262  503D               	movf	??_CANreceiveMessage,w,c
 21710  013264  26DE               	addwf	postinc2,f,c
 21711  013266  503E               	movf	??_CANreceiveMessage+1,w,c
 21712  013268  22DE               	addwfc	postinc2,f,c
 21713  01326A  503F               	movf	??_CANreceiveMessage+2,w,c
 21714  01326C  22DE               	addwfc	postinc2,f,c
 21715  01326E  5040               	movf	??_CANreceiveMessage+3,w,c
 21716  013270  22DE               	addwfc	postinc2,f,c
 21717                           
 21718                           ; BSR set to: 15
 21719                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21720  013272  A062               	btfss	3938,0,c	;volatile
 21721  013274  D00C               	goto	i2l9077
 21722                           
 21723                           ; BSR set to: 15
 21724                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21725  013276  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21726  01327A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21727  01327E  0E00               	movlw	0
 21728  013280  12DE               	iorwf	postinc2,f,c
 21729  013282  0E00               	movlw	0
 21730  013284  12DE               	iorwf	postinc2,f,c
 21731  013286  0E01               	movlw	1
 21732  013288  12DE               	iorwf	postinc2,f,c
 21733  01328A  0E00               	movlw	0
 21734  01328C  12DE               	iorwf	postinc2,f,c
 21735  01328E                     i2l9077:
 21736                           
 21737                           ; BSR set to: 15
 21738                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21739  01328E  A262               	btfss	3938,1,c	;volatile
 21740  013290  D00C               	goto	i2l9081
 21741                           
 21742                           ; BSR set to: 15
 21743                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21744  013292  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21745  013296  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21746  01329A  0E00               	movlw	0
 21747  01329C  12DE               	iorwf	postinc2,f,c
 21748  01329E  0E00               	movlw	0
 21749  0132A0  12DE               	iorwf	postinc2,f,c
 21750  0132A2  0E02               	movlw	2
 21751  0132A4  12DE               	iorwf	postinc2,f,c
 21752  0132A6  0E00               	movlw	0
 21753  0132A8  12DE               	iorwf	postinc2,f,c
 21754  0132AA                     i2l9081:
 21755                           
 21756                           ; BSR set to: 15
 21757                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21758  0132AA  AA62               	btfss	3938,5,c	;volatile
 21759  0132AC  D00C               	goto	i2l9085
 21760                           
 21761                           ; BSR set to: 15
 21762                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21763  0132AE  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21764  0132B2  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21765  0132B6  0E00               	movlw	0
 21766  0132B8  12DE               	iorwf	postinc2,f,c
 21767  0132BA  0E00               	movlw	0
 21768  0132BC  12DE               	iorwf	postinc2,f,c
 21769  0132BE  0E04               	movlw	4
 21770  0132C0  12DE               	iorwf	postinc2,f,c
 21771  0132C2  0E00               	movlw	0
 21772  0132C4  12DE               	iorwf	postinc2,f,c
 21773  0132C6                     i2l9085:
 21774                           
 21775                           ; BSR set to: 15
 21776                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21777  0132C6  AC62               	btfss	3938,6,c	;volatile
 21778  0132C8  D00C               	goto	i2l9089
 21779                           
 21780                           ; BSR set to: 15
 21781                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21782  0132CA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21783  0132CE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21784  0132D2  0E00               	movlw	0
 21785  0132D4  12DE               	iorwf	postinc2,f,c
 21786  0132D6  0E00               	movlw	0
 21787  0132D8  12DE               	iorwf	postinc2,f,c
 21788  0132DA  0E08               	movlw	8
 21789  0132DC  12DE               	iorwf	postinc2,f,c
 21790  0132DE  0E00               	movlw	0
 21791  0132E0  12DE               	iorwf	postinc2,f,c
 21792  0132E2                     i2l9089:
 21793                           
 21794                           ; BSR set to: 15
 21795                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21796  0132E2  AE62               	btfss	3938,7,c	;volatile
 21797  0132E4  D00C               	goto	i2l9093
 21798                           
 21799                           ; BSR set to: 15
 21800                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21801  0132E6  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21802  0132EA  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21803  0132EE  0E00               	movlw	0
 21804  0132F0  12DE               	iorwf	postinc2,f,c
 21805  0132F2  0E00               	movlw	0
 21806  0132F4  12DE               	iorwf	postinc2,f,c
 21807  0132F6  0E10               	movlw	16
 21808  0132F8  12DE               	iorwf	postinc2,f,c
 21809  0132FA  0E00               	movlw	0
 21810  0132FC  12DE               	iorwf	postinc2,f,c
 21811  0132FE                     i2l9093:
 21812                           
 21813                           ; BSR set to: 15
 21814                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21815  0132FE  CF61 F03D          	movff	3937,??_CANreceiveMessage	;volatile
 21816  013302  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21817  013304  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21818  013306  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21819  013308  0E15               	movlw	21
 21820  01330A                     i2u1224_45:
 21821  01330A  90D8               	bcf	status,0,c
 21822  01330C  363D               	rlcf	??_CANreceiveMessage,f,c
 21823  01330E  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21824  013310  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21825  013312  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21826  013314  2EE8               	decfsz	wreg,f,c
 21827  013316  D7F9               	goto	i2u1224_45
 21828  013318  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21829  01331C  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21830  013320  503D               	movf	??_CANreceiveMessage,w,c
 21831  013322  12DE               	iorwf	postinc2,f,c
 21832  013324  503E               	movf	??_CANreceiveMessage+1,w,c
 21833  013326  12DE               	iorwf	postinc2,f,c
 21834  013328  503F               	movf	??_CANreceiveMessage+2,w,c
 21835  01332A  12DE               	iorwf	postinc2,f,c
 21836  01332C  5040               	movf	??_CANreceiveMessage+3,w,c
 21837  01332E  12DE               	iorwf	postinc2,f,c
 21838  013330                     i2l9095:
 21839                           
 21840                           ; BSR set to: 15
 21841                           ;inc\CANlib.h: 629: }
 21842                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21843  013330  9E60               	bcf	3936,7,c	;volatile
 21844                           
 21845                           ; BSR set to: 15
 21846                           ;inc\CANlib.h: 632: return (error);
 21847                           ;	Return value of _CANreceiveMessage is never used
 21848  013332  0012               	return	
 21849  013334                     __end_of_CANreceiveMessage:
 21850                           	opt stack 0
 21851                           pclatu	equ	0xFFB
 21852                           pclath	equ	0xFFA
 21853                           tblptru	equ	0xFF8
 21854                           tblptrh	equ	0xFF7
 21855                           tblptrl	equ	0xFF6
 21856                           tablat	equ	0xFF5
 21857                           prodh	equ	0xFF4
 21858                           prodl	equ	0xFF3
 21859                           intcon	equ	0xFF2
 21860                           postinc0	equ	0xFEE
 21861                           fsr0h	equ	0xFEA
 21862                           fsr0l	equ	0xFE9
 21863                           wreg	equ	0xFE8
 21864                           indf1	equ	0xFE7
 21865                           plusw1	equ	0xFE3
 21866                           fsr1h	equ	0xFE2
 21867                           fsr1l	equ	0xFE1
 21868                           bsr	equ	0xFE0
 21869                           indf2	equ	0xFDF
 21870                           postinc2	equ	0xFDE
 21871                           postdec2	equ	0xFDD
 21872                           plusw2	equ	0xFDB
 21873                           fsr2h	equ	0xFDA
 21874                           fsr2l	equ	0xFD9
 21875                           status	equ	0xFD8
 21876                           
 21877 ;; *************** function _CANisRxReady *****************
 21878 ;; Defined at:
 21879 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21880 ;; Parameters:    Size  Location     Type
 21881 ;;		None
 21882 ;; Auto vars:     Size  Location     Type
 21883 ;;		None
 21884 ;; Return value:  Size  Location     Type
 21885 ;;                  1    wreg      unsigned char 
 21886 ;; Registers used:
 21887 ;;		wreg, status,2
 21888 ;; Tracked objects:
 21889 ;;		On entry : 0/0
 21890 ;;		On exit  : 0/0
 21891 ;;		Unchanged: 0/0
 21892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21897 ;;Total ram usage:        1 bytes
 21898 ;; Hardware stack levels used:    1
 21899 ;; This function calls:
 21900 ;;		Nothing
 21901 ;; This function is called by:
 21902 ;;		_ISR_alta
 21903 ;; This function uses a non-reentrant model
 21904 ;;
 21905                           
 21906                           	psect	text61
 21907  01649A                     __ptext61:
 21908                           	opt stack 0
 21909  01649A                     _CANisRxReady:
 21910                           	opt stack 20
 21911                           
 21912                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21913                           
 21914                           ; BSR set to: 15
 21915                           ;incstack = 0
 21916  01649A  0E01               	movlw	1
 21917  01649C  6E3B               	movwf	_CANisRxReady$3253,c
 21918  01649E  BE60               	btfsc	3936,7,c	;volatile
 21919  0164A0  D005               	goto	i2l581
 21920  0164A2  010F               	movlb	15	; () banked
 21921  0164A4  BF50               	btfsc	80,7,b	;volatile
 21922  0164A6  D002               	goto	i2l581
 21923                           
 21924                           ; BSR set to: 15
 21925  0164A8  0E00               	movlw	0
 21926  0164AA  6E3B               	movwf	_CANisRxReady$3253,c
 21927  0164AC                     i2l581:
 21928  0164AC  503B               	movf	_CANisRxReady$3253,w,c
 21929  0164AE  0012               	return	
 21930  0164B0                     __end_of_CANisRxReady:
 21931                           	opt stack 0
 21932                           pclatu	equ	0xFFB
 21933                           pclath	equ	0xFFA
 21934                           tblptru	equ	0xFF8
 21935                           tblptrh	equ	0xFF7
 21936                           tblptrl	equ	0xFF6
 21937                           tablat	equ	0xFF5
 21938                           prodh	equ	0xFF4
 21939                           prodl	equ	0xFF3
 21940                           intcon	equ	0xFF2
 21941                           postinc0	equ	0xFEE
 21942                           fsr0h	equ	0xFEA
 21943                           fsr0l	equ	0xFE9
 21944                           wreg	equ	0xFE8
 21945                           indf1	equ	0xFE7
 21946                           plusw1	equ	0xFE3
 21947                           fsr1h	equ	0xFE2
 21948                           fsr1l	equ	0xFE1
 21949                           bsr	equ	0xFE0
 21950                           indf2	equ	0xFDF
 21951                           postinc2	equ	0xFDE
 21952                           postdec2	equ	0xFDD
 21953                           plusw2	equ	0xFDB
 21954                           fsr2h	equ	0xFDA
 21955                           fsr2l	equ	0xFD9
 21956                           status	equ	0xFD8
 21957                           pclatu	equ	0xFFB
 21958                           pclath	equ	0xFFA
 21959                           tblptru	equ	0xFF8
 21960                           tblptrh	equ	0xFF7
 21961                           tblptrl	equ	0xFF6
 21962                           tablat	equ	0xFF5
 21963                           prodh	equ	0xFF4
 21964                           prodl	equ	0xFF3
 21965                           intcon	equ	0xFF2
 21966                           postinc0	equ	0xFEE
 21967                           fsr0h	equ	0xFEA
 21968                           fsr0l	equ	0xFE9
 21969                           wreg	equ	0xFE8
 21970                           indf1	equ	0xFE7
 21971                           plusw1	equ	0xFE3
 21972                           fsr1h	equ	0xFE2
 21973                           fsr1l	equ	0xFE1
 21974                           bsr	equ	0xFE0
 21975                           indf2	equ	0xFDF
 21976                           postinc2	equ	0xFDE
 21977                           postdec2	equ	0xFDD
 21978                           plusw2	equ	0xFDB
 21979                           fsr2h	equ	0xFDA
 21980                           fsr2l	equ	0xFD9
 21981                           status	equ	0xFD8
 21982                           
 21983                           	psect	rparam
 21984  0000                     pclatu	equ	0xFFB
 21985                           pclath	equ	0xFFA
 21986                           tblptru	equ	0xFF8
 21987                           tblptrh	equ	0xFF7
 21988                           tblptrl	equ	0xFF6
 21989                           tablat	equ	0xFF5
 21990                           prodh	equ	0xFF4
 21991                           prodl	equ	0xFF3
 21992                           intcon	equ	0xFF2
 21993                           postinc0	equ	0xFEE
 21994                           fsr0h	equ	0xFEA
 21995                           fsr0l	equ	0xFE9
 21996                           wreg	equ	0xFE8
 21997                           indf1	equ	0xFE7
 21998                           plusw1	equ	0xFE3
 21999                           fsr1h	equ	0xFE2
 22000                           fsr1l	equ	0xFE1
 22001                           bsr	equ	0xFE0
 22002                           indf2	equ	0xFDF
 22003                           postinc2	equ	0xFDE
 22004                           postdec2	equ	0xFDD
 22005                           plusw2	equ	0xFDB
 22006                           fsr2h	equ	0xFDA
 22007                           fsr2l	equ	0xFD9
 22008                           status	equ	0xFD8
 22009                           
 22010                           	psect	temp
 22011  00004E                     btemp:
 22012                           	opt stack 0
 22013  00004E                     	ds	1
 22014  0000                     int$flags	set	btemp
 22015                           pclatu	equ	0xFFB
 22016                           pclath	equ	0xFFA
 22017                           tblptru	equ	0xFF8
 22018                           tblptrh	equ	0xFF7
 22019                           tblptrl	equ	0xFF6
 22020                           tablat	equ	0xFF5
 22021                           prodh	equ	0xFF4
 22022                           prodl	equ	0xFF3
 22023                           intcon	equ	0xFF2
 22024                           postinc0	equ	0xFEE
 22025                           fsr0h	equ	0xFEA
 22026                           fsr0l	equ	0xFE9
 22027                           wreg	equ	0xFE8
 22028                           indf1	equ	0xFE7
 22029                           plusw1	equ	0xFE3
 22030                           fsr1h	equ	0xFE2
 22031                           fsr1l	equ	0xFE1
 22032                           bsr	equ	0xFE0
 22033                           indf2	equ	0xFDF
 22034                           postinc2	equ	0xFDE
 22035                           postdec2	equ	0xFDD
 22036                           plusw2	equ	0xFDB
 22037                           fsr2h	equ	0xFDA
 22038                           fsr2l	equ	0xFD9
 22039                           status	equ	0xFD8


Data Sizes:
    Strings     422
    Constant    144
    Data        1
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      77
    BANK0           160    109     142
    BANK1           256     33      81
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_steering(BANK0[1]), data_brake(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  491385
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             31 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  143974
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41008
                                             99 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             56 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             56 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             31 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             23 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             17 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             17 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             17 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             17 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             89 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             89 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             69 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             56 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             31 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             41 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             24 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             32 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             29 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   11675
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             29 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             31 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             29 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             29 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             25 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             23 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             17 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    4995
                                              0 BANK0     17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1594
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      51       7       31.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      8E       5       88.8%
BITCOMRAM           5E      0       3       0        3.2%
COMRAM              5E     21      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      20        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 07 21:45:07 2016

                     ___fldiv@aexp 0097                       ___fldiv@bexp 0096  
                                _x 0269                                  _y 026A  
                                _z 026B          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 002A  
                     ___fldiv@sign 008B                       ___awdiv@sign 007C  
                               _id 0005                                 bsr 000FE0  
              ___wmul@multiplicand 0073                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       ?_LCD_Parking 002A  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                              l400 1638                                l401 1730  
                              l410 17FE                                l402 16C0  
                              l403 16CA                                l404 16D4  
                              l500 063A                                l413 18B8  
                              l405 16DE                                l501 063E  
                              l422 1A72                                l414 18BC  
                              l510 074A                                l502 064A  
                              l423 1A76                                l415 19B4  
                              l511 0756                                l424 1A82  
                              l416 1944                                l408 17EE  
                              l520 0862                                l512 075A  
                              l417 194E                                l409 17F2  
                              l521 0866                                l513 0766  
                              l505 0726                                l418 1958  
                              l530 0972                                l522 0872  
                              l506 072A                                l419 1962  
                              l531 097E                                l523 0876  
                              l507 0736                                l540 0A8A  
                              l532 0982                                l524 0882  
                              l516 0842                                l508 073A  
                              l460 427C                                l452 423C  
                              l541 0A8E                                l533 098E  
                              l517 0846                                l509 0746  
                              l453 4240                                l390 145A  
                              l542 0A9A                                l534 0992  
                              l518 0852                                l470 4388  
                              l454 424C                                l383 161E  
                              l543 0A9E                                l535 099E  
                              l527 095E                                l519 0856  
                              l471 4394                                l463 4354  
                              l455 4250                                l384 13B0  
                              l544 0AAA                                l528 0962  
                              l464 4358                                l456 425C  
                              l393 156A                                l385 13B4  
                              l545 0AAE                                l529 096E  
                              l465 4364                                l457 4260  
                              l394 156E                                l386 14AC  
                              l546 0ABA                                l538 0A7A  
                              l490 0524                                l466 4368  
                              l458 426C                                l378 4B5C  
                              l395 157A                                l387 143C  
                              l539 0A7E                                l491 0530  
                              l483 04F0                                l467 4374  
                              l459 4270                                l379 4B66  
                              l388 1446                                l484 04F4  
                              l468 4378                                l804 1C98  
                              l389 1450                                l901 641C  
                              l485 0500                                l469 4384  
                              l813 1E4A                                l398 18A2  
                              l494 060A                                l486 0504  
                              l399 1634                                l495 060E  
                              l487 0510                                l576 63CE  
                              l920 6080                                l496 061A  
                              l488 0514                                l497 061E  
                              l489 0520                                l841 2014  
                              l825 1E1C                                l809 1CA4  
                              l922 6082                                l498 062A  
                              l834 200C                                l818 1D7C  
                              l915 6454                                l499 062E  
                              l827 1E46                                l908 6470  
                              l852 2166                                l589 624C  
                              l854 2162               ??_PWR_Button_Polling 0071  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007D                                _dir 00E5  
                              _msg 010D                                _str 011C  
                     ___awmod@sign 0076                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 008C  
                     ___flmul@bexp 0091                       ___flmul@sign 008B  
                     ___flmul@temp 0096                       ___flmul@prod 0092  
                  __end_of_LCD_Gap 5FAA                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 600E             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C2                       __CFG_WDT$OFF 000000  
                             l1029 10FA                               l1500 5E74  
                             l1421 593E                               l1510 6066  
                             l1254 5478                               l1351 509C  
                             l1600 3E58                               l1264 52B2  
                             l1352 50E0                               l1541 3514  
                             l1606 3EE8                               l1542 3508  
                             l1358 5160                               l1543 34D4  
                             l1447 5A16                               l1608 3F56  
                             l1457 5D5E                               l1634 3B2C  
                             l1627 3890                               l1644 3C3E  
                             l1636 3B9A                               l1558 3688  
                             l1567 371C                               l1663 4A24  
                             l1664 4A3C                               l1656 49C8  
                             l1649 491C                               l1597 3EB0  
                             l5307 58F8                               l7101 5AA8  
                             l6311 17E2                               l6215 1464  
                             l5327 648C                               l6241 157E  
                             l8001 3586                               l5601 0694  
                             l5361 41B0                               l5345 40FA  
                             l6235 155E                               l7107 6076  
                             l5515 03A4                               l5443 00BE  
                             l5419 4398                               l6171 4B6A  
                             l7125 5B0C                               l6317 1802  
                             l8005 3598                               l5533 045E  
                             l5461 0176                               l7135 5B1A  
                             l8023 36BA                               l8015 3668  
                             l5703 09E8                               l6175 4B72  
                             l4833 5E24                               l5297 58B6  
                             l8033 36DC                               l8041 36F6  
                             l8113 3878                               l5561 0534  
                             l5393 42C6                               l6177 4BB6  
                             l6169 4B54                               l7147 5B7C  
                             l6291 16E8                               l4835 5E30  
                             l8123 38B8                               l8115 387E  
                             l8107 3854                               l5731 0ABE  
                             l5635 07B0                               l5387 4280  
                             l4845 5E66                               l4837 5E36  
                             l4861 6058                               l4853 6022  
                             l8029 36D0                               l8221 580C  
                             l8205 3C5E                               l5629 076A  
                             l6367 196C                               l7087 5A28  
                             l8303 570A                               l8311 57D2  
                             l4855 602E                               l8071 37B2  
                             l8063 3784                               l8039 36F0  
                             l8207 3C68                               l8119 38A4  
                             l5663 0886                               l5567 057A  
                             l5479 0230                               l6393 1A86  
                             l7097 5A70                               l8305 573C  
                             l4857 6034                               l6801 3ED2  
                             l6721 3CA0                               l8073 37B6  
                             l8049 3716                               l8233 5840  
                             l5497 02EA                               l6387 1A66  
                             l8307 576E                               l8315 638C  
                             l6731 3CCE                               l8067 37A6  
                             l8059 3772                               l8403 500E  
                             l8235 584C                               l8227 5822  
                             l8171 3B40                               l5595 064E  
                             l8309 57A0                               l6741 3CFE  
                             l8253 58A4                               l8245 5882  
                             l8237 5852                               l8181 3B94  
                             l8165 3B16                               l5669 08CC  
                             l8319 63A0                               l5775 6182  
                             l6831 3FD4                               l6807 3EFC  
                             l6751 3D2C                               l6727 3CC4  
                             l8079 37CA                               l8511 546E  
                             l8503 5442                               l8191 3BEA  
                             l8095 381E                               l8343 467E  
                             l8335 4586                               l6841 401A  
                             l6833 3FE8                               l6817 3F50  
                             l8601 59AA                               l8409 5048  
                             l8249 5890                               l8281 5CAA  
                             l8273 5C74                               l8265 5C50  
                             l8097 3824                               l8089 37FA  
                             l9217 4E26                               l5697 09A2  
                             l6843 401E                               l6835 400A  
                             l6827 3FA6                               l6771 3DAE  
                             l6763 3D80                               l6747 3D22  
                             l8531 5260                               l8523 51C0  
                             l8611 5A04                               l8603 59B0  
                             l8451 5156                               l8443 512A  
                             l8275 5C80                               l8195 3C10  
                             l8099 3836                               l8363 2B70  
                             l6781 3E2C                               l8621 5D02  
                             l8509 545E                               l8277 5C86  
                             l8285 5CB8                               l8269 5C60  
                             l8197 3C24                               l8381 2DF6  
                             l8357 2A9E                               l9253 4F70  
                             l9245 4F42                               l8295 60D0  
                             l8703 4D5C                               l8527 520E  
                             l7911 33C0                               l8623 5D08  
                             l8439 5116                               l8375 2D24  
                             l8367 2BA2                               l9255 4F82  
                             l8713 4E14                               l8537 52FE  
                             l8545 6280                               l7921 33EE  
                             l7905 33AC                               l8465 534E  
                             l8449 5146                               l8289 5CCC  
                             l8393 6380                               l9257 4F92  
                             l8299 6102                               l6795 3EAC  
                             l8571 568C                               l8555 561E  
                             l8627 5D4C                               l8619 5CF2  
                             l8643 4954                               l8459 5328  
                             l8709 4D9C                               l6789 3E64  
                             l7917 33E4                               l8581 56BC  
                             l8645 495C                               l8637 492C  
                             l8901 10DC                               l8821 0CFA  
                             l8805 0C76                               l9701 1D24  
                             l7847 623E                               l8583 56CC  
                             l8575 56A0                               l8655 4A06  
                             l8647 496C                               l8487 53F6  
                             l8479 53A2                               l9711 1D3E  
                             l9631 1B54                               l8681 62E4  
                             l7929 3418                               l8585 56D6  
                             l8657 4A16                               l8649 49AA  
                             l8913 112E                               l8905 10FE  
                             l8833 0DB0                               l8691 4CBC  
                             l7971 34E8                               l8499 542E  
                             l8835 0DC6                               l9803 2188  
                             l9731 1E76                               l8677 62CA  
                             l8693 4CC4                               l7973 34EE  
                             l7893 3376                               l8589 56F2  
                             l8669 4A8E                               l8917 1190  
                             l8845 0E6A                               l8837 0E02  
                             l8829 0D7E                               l8773 0B66  
                             l8765 0B30                               l9821 223A  
                             l9741 1EB8                               l7959 3454  
                             l7887 3352                               l8599 599A  
                             l8951 1338                               l8943 12E0  
                             l8935 12AC                               l8927 1284  
                             l8863 0F7E                               l8839 0E18  
                             l8783 0BDA                               l8759 0B16  
                             l9807 219C                               l9743 1EBA  
                             l9719 1D7E                               l9671 1C7E  
                             l7977 34F8                               l7897 3380  
                             l8929 1292                               l8881 0FFC  
                             l8865 0F84                               l8849 0E9C  
                             l8937 12BA                               l8777 0BB0  
                             l9833 2260                               l9753 1F76  
                             l9681 1CB2                               l9665 1BE8  
                             l7995 3576                               l7987 3538  
                             l8955 1364                               l8947 1308  
                             l8883 1004                               l8891 10A0  
                             l8859 0F06                               l8795 0C24  
                             l8787 0BE0                               l8779 0BCA  
                             l9827 224C                               l9835 2266  
                             l9763 2004                               l9739 1EB6  
                             l9683 1CBE                               l9675 1C90  
                             l7997 357C                               l8893 10AE  
                             l8877 0FD0                               l8789 0C0A  
                             l8957 136A                               l9773 20A8  
                             l9757 1FDC                               l9693 1CE4  
                             l8959 138C                               l9783 20CE  
                             l9759 1FE2                               STR_1 FF7F  
                             STR_2 FF55                               STR_3 FE98  
                             STR_4 FF7F                               l8899 10C8  
                             l9795 20F6                               l9779 20C0  
                             l9787 20DE                               STR_5 FFFA  
                             STR_6 FF6A                               l9789 20EC  
                             STR_7 FFC8                               STR_8 FFA9  
                             STR_9 FFBA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u6030 4076                               u6035 406A  
                             u6045 40D6                               u6310 00F2  
                             u6070 412C                               u6240 43B8  
                             u6160 42A0                               u6315 00E6  
                             u6075 4120                               u6405 02C6  
                             u6325 0152                               u6245 43AC  
                             u6165 4294                               u6085 418C  
                             u6430 0320                               u6350 01AC  
                             u6270 003A                               u6435 0314  
                             u6355 01A0                               u6275 002E  
                             u9020 6462                  _F2_Button_Polling 644C  
                             u6445 0380                               u6365 020C  
                             u6285 009A                               u6470 03DA  
                             u6390 0266                               u6800 08A6  
                             u6720 078A                               u6640 066E  
                             u6560 0554                               u9035 6464  
                             u6475 03CE                               u6395 025A  
                             u6805 089A                               u6725 077E  
                             u6645 0662                               u6565 0548  
                             u6485 043A                               u7800 1754  
                             u8600 3FBA                               u9090 60A4  
                             u7660 1484                               u7805 1748  
                             u7670 14D0                               u7815 17B4  
                             u7920 198C                               u9096 60A6  
                             u6960 0ADE                               u6880 09C2  
                             u7665 1478                               u7930 19D8  
                             u7675 14C4                               u7925 1980  
                             u7685 1530                               u6965 0AD2  
                             u6885 09B6                               u7790 1708  
                             u7935 19CC                               u8920 642A  
                             u7945 1A38                               u7795 16FC  
                             u8935 642C                               u8970 647E  
                             u8985 6480                __size_of_CANSetMask 039E  
                     ?_LCD_goto_xy 0080                               _data 0029  
                             _main 1B26                               _itoa 6158  
               ?_F2_Button_Polling 002A          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 004E                               _utoa 58AE  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0090  
               __size_of_LCD_clear 0032                       _sprintf$4257 0130  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0071           __end_of_LCD_enable_pulse 63F6  
                 _CANOperationMode 6484                       _Can_Tx_Force 0259  
                 __end_of_LCD_Park 5F46                    _space_available 0263  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C1                    __end_of___fladd 37DC  
                            ?_main 002A                    __end_of___fldiv 4042  
                            ?_itoa 0081                    __end_of___awdiv 58AE  
                  __end_of___flneg 6292                              STR_10 FFE4  
                            STR_11 FFF0                              STR_20 FF40  
                            STR_12 FFF5                              STR_13 FFEB  
                            STR_21 FEEC                              STR_14 FFD4  
                            STR_22 FEC2                              STR_30 FE6E  
                            STR_15 FFDC                              STR_23 FE83  
                            STR_31 FE59                              STR_24 FF40  
                            STR_16 FF40                              STR_17 FF94  
                            STR_25 FF16                              STR_26 FF2B  
                            STR_18 FF01                              STR_27 FF7F  
                            STR_19 FEAD                              STR_28 FF40  
                  __end_of___awmod 5CD6                              STR_29 FED7  
                  __end_of___flmul 3C82                    __end_of___flsub 6158  
                  __end_of___fltol 5704                    __end_of___lldiv 5A28  
                            ?_utoa 0078                              u10315 61F4  
                            u10316 61F6                              u10325 6200  
                            u10326 6202                              u10335 620C  
                            u10336 620E                              u10440 349E  
                            u10345 6218                              u11161 4FEA  
                            u10346 621A                              u10450 34B6  
                            u10460 34B8                              u13100 1DE2  
                  ___awdiv@divisor 0079                              u11181 5024  
                            u13120 1DFE                    __end_of___llmod 5D70  
                            u13210 2000                              u10900 3BFE  
                            u10820 3AB8                              u13140 1E2A  
                            u11621 4C70                              u11390 563E  
                            u13126 1E00                              u10825 3AAC  
                            u13330 2214                              u13146 1E2C  
                            u11395 5632                              u11910 10F2  
                            u13280 215A                              _T3CON 000FB1  
                            u13397 6240                              u12960 1C4C  
                            u12970 1C64                              u12976 1C66  
                  __end_of___lwdiv 5E7E                    __end_of___lwmod 6070  
                            i2l400 24C6                              i1l800 0078  
                            i2l401 2596                              i2l410 2648  
                            i2l402 2534                              i2l403 253C  
                            i2l404 2544                              i2l413 26F2  
                            i2l405 254C                              i2l430 30C0  
                            i2l422 286A                              i2l414 26F6  
                            i2l423 286E                              i2l415 27C6  
                            i2l424 2878                              i2l416 2764  
                            i2l408 263A                              i2l417 276C  
                            i2l409 263E                              i2l418 2774  
                            i2l419 277C                              i2l390 231C  
                            i2l383 24AE                              i2l384 2292  
                            i2l393 240A                              i2l385 2296  
                            i2l394 240E                              i2l386 2366  
                            i2l395 2418                              i2l387 2304  
                            i2l388 230C                              i2l581 64AC  
                            i2l389 2314                              i2l398 26DE  
                            i2l399 24C2                              i2l576 6410  
                            i2l796 4896                    ___awdiv@counter 007B  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3253 003B                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A8                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0083  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                   __end_of_ISR_alta 48D2  
                   __CFG_EBTR5$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                            _check 00D5                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 6468                    __end_of_dpowers FE59  
                            _scale 290E                    __end_of_isdigit 638A  
        __size_of_LCD_shift_cursor 004C                     __pbitbssCOMRAM 0258  
             __end_of_CANisRxReady 64B0                              tablat 000FF5  
             __end_of_CANisTxReady 63D4                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 0080  
                            utoa@v 007E                              status 000FD8  
                  __end_of_sprintf 139A                __size_of_LCD_cursor 0032  
                  __initialization 61A0                       __end_of_main 227E  
                     __end_of_itoa 61A0      __size_of_board_initialization 00A4  
                    _LCD_goto_line 5704                       __end_of_utoa 596C  
                ?_Joystick_Polling 002A                 ??_Joystick_Polling 0071  
                ?_LCD_write_string 0082                             ??_main 0149  
                           ??_itoa 0087                             ??_utoa 007E  
        __size_ofi2_CANsendMessage 0690                      __activetblptr 000003  
                        ??_LCD_Gap 0084                          ??_LCD_End 0084  
                   _JoystickValues 00DD                 ??_LCD_write_string 0084  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3251 0071  
                __end_of_LCD_clear 6360              i2CANsendMessage@flags 0042  
           LCD_write_string@buffer 0082                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0071  
                           ?_scale 0098                             _ADRESH 000FC4  
                 ___awdiv@dividend 0077                             _CAN_Rx 5AE2  
                           _CAN_Tx 5A28                    __CFG_BBSIZ$1024 000000  
                           i2l9031 3088                             i2l9023 304C  
                           i2l9015 3010                             i2l9007 2FA0  
                           i2l9033 30BA                             i2l9027 306A  
                           i2l9019 302E                             i2l9081 32AA  
                           i2l9093 32FE                             i2l9085 32C6  
                           i2l9077 328E                             i2l9069 3220  
                           i2l9413 2630                             i2l9317 2324  
                           i2l9095 3330                             i2l9343 241C  
                           i2l9089 32E2                             i2l9337 2400  
                           i2l9419 264C                             i2l9605 4838  
                           i2l9615 4864                             i2l9393 2554  
                           i2l9563 4756                             i2l9555 4730  
                           i2l9619 4892                             i2l9469 2784  
                           i2l9581 47B4                             i2l9573 478E  
                           i2l9549 470E                             i2l9495 287C  
                           i2l9567 4760                             i2l9489 2860  
                           i2l9587 47CC                             i2l9595 47F6  
                           i2l9599 4814                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0075  
               CANsendMessage@tamp 007D                   __end_of___xxtofl 4AA0  
                  _switch_position 00E9                   __end_of_delay_ms 625A  
            __size_of_CANSetFilter 0B06                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00C0                   __end_of__powers_ FE31  
                       _MotoreFlag 025C                     ?_LCD_goto_line 002A  
                           ___flge 5172                          ??___fladd 00AD  
                 _delay_set_quartz 64B0                             ___wmul 6292  
                        ??___fldiv 0087                          ??___awdiv 007B  
                        ??___flneg 009C                     __CFG_STVREN$ON 000000  
                        ??___awmod 0075                          ??___flmul 0087  
                        ??___flsub 00C1                          ??___fltol 00BD  
                        ??___lldiv 0079                          ??___llmod 0079  
                        ??___lwdiv 0075                       ??_CANSetMask 0076  
                        ??___lwmod 0075            __size_of_LCD_write_char 0096  
                           _fround 43E0     LCD_initialize@quartz_frequency 007F  
                           clear_0 61A6                             clear_1 61B2  
                           clear_2 61C4                   ___awdiv@quotient 007D  
                  ___awmod@divisor 0073               __size_of_LCD_Handler 01AE  
                  ___awmod@counter 0075                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00CD                             itoa@cp 0087  
                        ??_isdigit 0071               __size_of_LCD_Parking 0064  
                     __mediumconst FDC8                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00CB  
                     _CANSetFilter 0000                         ___flge@ff1 0071  
                       ___flge@ff2 0075                       ___xxtofl@arg 007B  
                     ___xxtofl@exp 007A                       ___xxtofl@val 0071  
                       __accesstop 0060            __end_of__initialization 61DC  
               __end_of_CANSetMask 43E0                          ?_LCD_Park 002A  
                  __CFG_PBADEN$OFF 000000                         _SterzoFlag 025E  
                       ___flneg@f1 0098                   _LCD_send_command 61E6  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 008B  
                       ___fltol@f1 00B9               __size_of_LCD_goto_xy 001C  
                   __pcstackCOMRAM 002A                       __pidataBANK0 64BA  
                        ?_ISR_alta 002A                       LCD_goto_xy@x 0081  
                     LCD_goto_xy@y 0080                      __end_of_scale 2E28  
                   _LCD_initialize 548A                  _LCD_write_integer 4C66  
                _LCD_write_message 62C8              CANSetFilter@numBuffer 007A  
               ?_LCD_write_integer 0089             LCD_write_integer@index 0098  
               ?_LCD_write_message 0082                         __div_to_l_ 5302  
                     ??_LCD_cursor 007E             LCD_write_integer@value 0089  
    LCD_write_integer@convertedInt 0092                  _space_gap_reached 0264  
                    _newMessageCan 0260                       _actual_speed 00DF  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
              ??_LCD_write_integer 008D                    __div_to_l_@exp1 007E  
              ??_LCD_write_message 0084                    __div_to_l_@cntr 007D  
                          ??_scale 009C                   _LCD_shift_cursor 60C4  
                  __div_to_l_@quot 0079           __end_of_CANOperationMode 649A  
                          ?_CAN_Rx 002A                            ?_CAN_Tx 002A  
                       __pbssBANK0 00CD                         __pbssBANK1 0100  
                       _data_brake 00EA                         ??_LCD_Park 0084  
          __size_of_CANsendMessage 078C                         _data_speed 00EB  
                    __div_to_l_@f1 0071                      __div_to_l_@f2 0075  
                  ??_LCD_goto_line 007D                 __end_of_LCD_cursor 632E  
           __end_of_LCD_initialize 55F8                            ?___flge 0071  
                          ?___wmul 0071                         ??_ISR_alta 0060  
        __end_of_LCD_write_integer 4E26          __end_of_LCD_write_message 62FC  
                ?_LCD_enable_pulse 002A                            ?_fround 0098  
                     _CANisRxReady 649A                            _CANSTAT 000F6E  
               ??_LCD_enable_pulse 0079                       _CANisTxReady 63B0  
                        ISR_alta@i 0070                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 227E        __size_of_PWR_Button_Polling 001C  
                          _LCD_Gap 5F46                            _LCD_End 5FAA  
                        ?___xxtofl 0071            __size_ofi2_CANisTxReady 001E  
           __size_of_CANInitialize 01C6                   LCD_cursor@active 007E  
                        ?_delay_ms 0077                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0078                            _AbsFlag 0258  
                _parking_message_E 0261                    __size_of_CAN_Rx 00AE  
                  __size_of_CAN_Tx 00BA                  __end_of__npowers_ FDFD  
                          __Hparam 0000                         _left_speed 0021  
                       _scale$4256 009C                            __Lparam 0000  
                 delay_ms@value_ms 0077                    ?_LCD_initialize 002A  
                  __size_of___flge 0190                            ___fladd 3334  
                          ___fldiv 3C82                            ___awdiv 57F0  
                          ___flneg 625A                            ___awmod 5C34  
                          ___flmul 37DC                            ___flsub 6110  
                          ___fltol 55F8                            ___lldiv 596C  
                  __size_of___wmul 0036                     _LCD_write_char 5D70  
                          ___llmod 5CD6                            ___lwdiv 5E06  
                          ___lwmod 600E               CANInitialize@propSeg 0088  
                          __pcinit 61A0                            _battery 0027  
                  __size_of_fround 02F6                            __ramtop 0D00  
              LCD_write_char@value 0081                            __ptext0 1B26  
                          __ptext1 5B90                            __ptext2 4AA0  
                          __ptext3 4042                            __ptext4 0000  
                          __ptext5 6484                            __ptext6 6414  
                          __ptext7 5E7E                            __ptext8 5EE2  
                          __ptext9 4E26                        ?__div_to_l_ 0071  
                 LCD_write_char@D0 0080                   LCD_write_char@D1 007F  
                 LCD_write_char@D2 007E                   LCD_write_char@D3 007D  
                        _F1_switch 025A                            _dpowers FE31  
                        _F2_switch 025B                            _isdigit 6360  
                       ??___xxtofl 0075                   ___awmod@dividend 0071  
                       ??_delay_ms 0079             CANreceiveMessage@error 0045  
     __end_of_board_initialization 5C34          __size_of_Joystick_Polling 0054  
         __end_of_delay_set_quartz 64BA                            _sprintf 0B06  
                   __pintcode_body 46D6                          _LCD_clear 632E  
             end_of_initialization 61DC          __size_of_LCD_write_string 0026  
                          itoa@buf 0081                            itoa@val 0083  
                          int_func 46D6                          i2u1204_40 2EE0  
                        i2u1204_46 2EE2                          i2u1205_40 2F0E  
                        i2u1213_45 3094                          i2u1205_46 2F10  
                        i2u1215_40 3168                          i2u1207_45 2F24  
                        i2u1215_46 316A                          i2u1216_40 3192  
                        i2u1240_40 2342                          i2u1224_45 330A  
                        i2u1240_45 2338                          i2u1216_46 3194  
                        i2u1241_40 2388                          i2u1241_45 237E  
                        i2u1218_45 31A6                          i2u1242_45 23D4  
                        i2u1340_47 485E                          i2u1253_40 2572  
                        i2u1253_45 2568                          i2u1254_40 25B8  
                        i2u1254_45 25AE                          i2u1255_45 2604  
                        i2u1266_40 27A2                          i2u1266_45 2798  
                        i2u1290_45 4810                          i2u1267_40 27E8  
                        i2u1267_45 27DE                          i2u1268_45 2834  
                        i2u1279_40 472E                          i2u1289_40 480E  
                    _CANInitialize 4AA0                    ___lldiv@divisor 0075  
               LCD_cursor@blinking 007D                      _parking_state 00E7  
                  ___lldiv@counter 007D             __end_of_LCD_write_char 5E06  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0078  
                   __tdiv_to_l_@f1 0071                     __tdiv_to_l_@f2 0075  
                          utoa@val 007A                         _wait_low_1 0266  
                       _wait_low_2 0267                         _wait_low_3 0268  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0079  
          _steering_correction_dir 0265                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0071  
                        _PORTDbits 000F83                     CANSetMask@tamp 007B  
         __end_of_LCD_send_command 6220                     CANSetMask@type 0075  
                      ___fladd@grs 00B8                      ___xxtofl@sign 0079  
                      ___fldiv@grs 0092                        ___fldiv@rem 008C  
                _F1_Button_Polling 6468                         ?_LCD_clear 002A  
               ?_F1_Button_Polling 002A                     __end_of_CAN_Rx 5B90  
                   __end_of_CAN_Tx 5AE2            _clock_counter_reference 00E1  
                      ___flmul@grs 008D                     _CANsendMessage 139A  
                 CANInitialize@BRP 0082                   CANInitialize@SJW 0081  
                   ?_CANInitialize 007F                ??_F1_Button_Polling 0071  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0107                    ?_LCD_write_char 002A  
                    ??_LCD_Handler 00CD           __end_of_LCD_shift_cursor 6110  
                   __end_of___flge 5302                         ?_ISR_bassa 002A  
                   __end_of___wmul 62C8                  __size_of_ISR_alta 48CA  
                    ??_LCD_Parking 0084                  LCD_shift_cursor@i 007F  
                   __end_of_fround 46D6                     i2_CANisTxReady 63F6  
        __end_of_F1_Button_Polling 6484                start_initialization 61A0  
              __end_of__tdiv_to_l_ 5172                CANSetMask@numBuffer 007A  
                    _data_speed_rx 0100             __end_of_CANsendMessage 1B26  
                         ??_CAN_Rx 0071                           ??_CAN_Tx 0081  
                ?_CANOperationMode 002A                      _data_steering 00EC  
                    ??_LCD_goto_xy 0081         i2CANsendMessage@dataLength 0041  
             i2CANsendMessage@data 003F                 ??_CANOperationMode 0071  
             i2CANsendMessage@tamp 0047                    ___llmod@divisor 0075  
         __end_ofi2_CANsendMessage 290E         CANInitialize@FilterConfig1 0089  
       CANInitialize@FilterConfig2 008A                    ___llmod@counter 0079  
              _steering_correction 00E8                           ??___flge 0079  
             _board_initialization 5B90                           ??___wmul 0075  
                      __pdataBANK0 00ED                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009C             __end_ofi2_CANisTxReady 6414  
                    sprintf@tmpval 013E                          ___fladd@a 00A9  
                        ___fladd@b 00A5             CANInitialize@phaseSeg1 007F  
           CANInitialize@phaseSeg2 0080                         fround@prec 00A4  
              __end_of_LCD_Handler 4FD4                           ?_LCD_Gap 002A  
                         ?_LCD_End 002A                          ___fldiv@a 0083  
                        ___fldiv@b 007F                          ___flmul@a 0083  
                        ___flmul@b 007F                        __pbssCOMRAM 0001  
                        ___flsub@a 00BD                          ___flsub@b 00B9  
                    __pcstackBANK0 0060                      __pcstackBANK1 0130  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 5EE2  
                      _BRGCON3bits 000F72                   _Joystick_Polling 6070  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3840 0072         i2CANsendMessage@identifier 003B  
                _park_assist_state 0128                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007D                    ?_CANsendMessage 0071  
          LCD_write_message@buffer 0082                   _LCD_write_string 638A  
                  ??_CANInitialize 0084                        sprintf@flag 0136  
                      sprintf@fval 0144                        sprintf@prec 0142  
                 ??_LCD_initialize 007F                 CANSetFilter@filter 0071  
        delay_set_quartz@frequency 0071                   ___lwdiv@dividend 0071  
               LCD_send_command@D0 007B                 LCD_send_command@D1 007A  
               LCD_send_command@D2 0079                 LCD_send_command@D3 007C  
              __end_of_LCD_goto_xy 644C              __end_of_LCD_goto_line 57F0  
            ?_board_initialization 002A                          __pintcode 0008  
                    __pmediumconst FDC8                           ?___fladd 00A5  
                         ?___fldiv 007F                           ?___awdiv 0077  
                         ?___flneg 0098                           ?___awmod 0071  
                         ?___flmul 007F                           ?___flsub 00B9  
                         ?___fltol 00B9                           ?___lldiv 0071  
                         ?___llmod 0071                          __npowers_ FDC9  
                         ?___lwdiv 0071                           ?___lwmod 0071  
                      ??_ISR_bassa 002A                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 6430                    ?i2_CANisTxReady 002A  
                      __tdiv_to_l_ 4FD4                       ??__div_to_l_ 0079  
                      _COMSTATbits 000F74                           ?_isdigit 002A  
       __size_of_F1_Button_Polling 001C                   ___lwdiv@quotient 0075  
                         ?_sprintf 00C3                     __size_of_scale 051A  
                ?_delay_set_quartz 002A              CANreceiveMessage@tamp 0046  
               ??_delay_set_quartz 0071                           _LCD_Park 5EE2  
                   ___wmul@product 0075                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00ED  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 548A  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         _RXB1EIDH 000F53                          _pr_time_1 00D9  
                        _pr_time_2 0009                           _RXB1EIDL 000F54  
                        _pr_time_3 000D                          _pr_time_4 0011  
                        _pr_time_5 0015                          _pr_time_6 0019  
                        _set_speed 00E3                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 4E26                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008C                 _parking_message_ID 00E6  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                      _LCD_Parking 5E7E                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0071                           _RTR_Flag 025D  
                ?_LCD_send_command 0079                   _actual_speed_kmh 0001  
                        _user_data 0025                   __size_of_LCD_Gap 0064  
                 __size_of_LCD_End 0064                 ??_LCD_send_command 007C  
                    ?_CANSetFilter 0071                         _CANCONbits 000F6F  
                      _LCD_goto_xy 6430                   ??_LCD_write_char 007D  
                LCD_goto_line@line 007D                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008B  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 04A8                         _CANSetMask 4042  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007D  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4254 00A0                        _fround$4255 009C  
               ??_LCD_shift_cursor 007E                         sprintf@exp 013C  
                       sprintf@val 0138                           ___xxtofl 48D2  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 6220                    ___lwdiv@divisor 0073  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0077  
                   ??_CANSetFilter 0076                   _LCD_enable_pulse 63D4  
                         __ptext10 0B06                           __ptext11 290E  
                         __ptext20 5CD6                           __ptext12 6360  
                         __ptext21 596C                           __ptext13 43E0  
                         __ptext30 58AE                           __ptext22 55F8  
                         __ptext14 37DC                           __ptext31 600E  
                         __ptext23 6110                           __ptext15 5C34  
                         __ptext40 548A                           __ptext32 5E06  
                         __ptext24 3334                           __ptext16 57F0  
                         __ptext41 64B0                           __ptext33 638A  
                         __ptext25 625A                           __ptext17 4FD4  
                         __ptext50 644C                           __ptext42 62FC  
                         __ptext34 6430                           __ptext26 5172  
                         __ptext18 5302                           __ptext51 6468  
                         __ptext43 632E                           __ptext35 60C4  
                         __ptext27 3C82                           __ptext19 48D2  
                         __ptext60 2E28                           __ptext52 5A28  
                         __ptext44 5704                           __ptext36 5F46  
                         __ptext28 4C66                           __ptext61 649A  
                         __ptext53 139A                           __ptext45 61E6  
                         __ptext37 5FAA                           __ptext29 6158  
                         __ptext54 63B0                           __ptext46 63D4  
                         __ptext38 62C8                           __ptext55 5AE2  
                         __ptext47 6220                           __ptext39 5D70  
                         __ptext48 6292                           __ptext49 6070  
                         __ptext58 227E                           __ptext59 63F6  
                     _RXF2SIDLbits 000F09                           __powers_ FDFD  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 0894  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0077                      __size_of_main 0758  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                ?i2_CANsendMessage 003B               CANreceiveMessage@msg 003B  
            LCD_shift_cursor@shift 007E                i2_CANisTxReady$3251 003B  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 0072  
               ??i2_CANsendMessage 0043                       _TXB1SIDLbits 000F32  
         __end_of_Joystick_Polling 60C4                       _TXB2SIDLbits 000F22  
                         int$flags 004E          __size_of_CANOperationMode 0016  
                    ?_CANisRxReady 002A                      ?_CANisTxReady 002A  
         __end_of_LCD_write_string 63B0                        _RXB0DLCbits 000F65  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 62FC  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 2E28  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 0028                   ??_CANsendMessage 0079  
               ?_CANreceiveMessage 003B                           itoa@base 0085  
                         isdigit@c 0073                           scale@scl 00A0  
         CANsendMessage@identifier 0071                       _time_counter 001D  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0134                   __tdiv_to_l_@exp1 0081  
                        sprintf@sp 00C3                   __tdiv_to_l_@cntr 0080  
                 CANSetFilter@tamp 007B                   __tdiv_to_l_@quot 007C  
                 CANSetFilter@type 0075                ??_CANreceiveMessage 003D  
                 ___lwmod@dividend 0071                   ___lldiv@dividend 0071  
                      _TXB0DLCbits 000F45                        _right_speed 0023  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 025F  
                 ??i2_CANisTxReady 003B               CANOperationMode@mode 0071  
                   ??_CANisRxReady 003B                        ?_CANSetMask 0071  
                   ??_CANisTxReady 0071                       ?__tdiv_to_l_ 0071  
        __end_of_CANreceiveMessage 3334                           utoa@base 007C  
                         sprintf@c 0148                           sprintf@f 00C5  
                 ___lldiv@quotient 0079                    ___lwmod@divisor 0073  
  LCD_shift_cursor@number_of_shift 007D                    ___lwmod@counter 0075  
                    ___fladd@signs 00B5                 _PWR_Button_Polling 6414  
                     ___fladd@aexp 00B6                       ___fladd@bexp 00B7  
            __end_of_CANInitialize 4C66                ?_PWR_Button_Polling 002A  
                     _power_switch 0262  
