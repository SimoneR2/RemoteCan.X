

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 07 16:31:37 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           	psect	idataBANK0
    84  0164C0                     __pidataBANK0:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _delay_quartz_frequency_value
    88  0164C0  10                 	db	16
    89                           
    90                           	psect	mediumconst
    91  00FDC8                     __pmediumconst:
    92                           	opt stack 0
    93  00FDC8  00                 	db	0
    94  00FDC9                     __npowers_:
    95                           	opt stack 0
    96  00FDC9  0000               	dw	0
    97  00FDCB  3F80               	dw	16256
    98  00FDCD  CCCD               	dw	52429
    99  00FDCF  3DCC               	dw	15820
   100  00FDD1  D70A               	dw	55050
   101  00FDD3  3C23               	dw	15395
   102  00FDD5  126F               	dw	4719
   103  00FDD7  3A83               	dw	14979
   104  00FDD9  B717               	dw	46871
   105  00FDDB  38D1               	dw	14545
   106  00FDDD  C5AC               	dw	50604
   107  00FDDF  3727               	dw	14119
   108  00FDE1  37BD               	dw	14269
   109  00FDE3  3586               	dw	13702
   110  00FDE5  BF95               	dw	49045
   111  00FDE7  33D6               	dw	13270
   112  00FDE9  CC77               	dw	52343
   113  00FDEB  322B               	dw	12843
   114  00FDED  705F               	dw	28767
   115  00FDEF  3089               	dw	12425
   116  00FDF1  E6FF               	dw	59135
   117  00FDF3  2EDB               	dw	11995
   118  00FDF5  E508               	dw	58632
   119  00FDF7  1E3C               	dw	7740
   120  00FDF9  4260               	dw	16992
   121  00FDFB  0DA2               	dw	3490
   122  00FDFD                     __end_of__npowers_:
   123                           	opt stack 0
   124  00FDFD                     __powers_:
   125                           	opt stack 0
   126  00FDFD  0000               	dw	0
   127  00FDFF  3F80               	dw	16256
   128  00FE01  0000               	dw	0
   129  00FE03  4120               	dw	16672
   130  00FE05  0000               	dw	0
   131  00FE07  42C8               	dw	17096
   132  00FE09  0000               	dw	0
   133  00FE0B  447A               	dw	17530
   134  00FE0D  4000               	dw	16384
   135  00FE0F  461C               	dw	17948
   136  00FE11  5000               	dw	20480
   137  00FE13  47C3               	dw	18371
   138  00FE15  2400               	dw	9216
   139  00FE17  4974               	dw	18804
   140  00FE19  9680               	dw	38528
   141  00FE1B  4B18               	dw	19224
   142  00FE1D  BC20               	dw	48160
   143  00FE1F  4CBE               	dw	19646
   144  00FE21  6B28               	dw	27432
   145  00FE23  4E6E               	dw	20078
   146  00FE25  02F9               	dw	761
   147  00FE27  5015               	dw	20501
   148  00FE29  78EC               	dw	30956
   149  00FE2B  60AD               	dw	24749
   150  00FE2D  F2CA               	dw	62154
   151  00FE2F  7149               	dw	29001
   152  00FE31                     __end_of__powers_:
   153                           	opt stack 0
   154  00FE31                     _dpowers:
   155                           	opt stack 0
   156  00FE31  0001               	dw	1
   157  00FE33  0000               	dw	0
   158  00FE35  000A               	dw	10
   159  00FE37  0000               	dw	0
   160  00FE39  0064               	dw	100
   161  00FE3B  0000               	dw	0
   162  00FE3D  03E8               	dw	1000
   163  00FE3F  0000               	dw	0
   164  00FE41  2710               	dw	10000
   165  00FE43  0000               	dw	0
   166  00FE45  86A0               	dw	34464
   167  00FE47  0001               	dw	1
   168  00FE49  4240               	dw	16960
   169  00FE4B  000F               	dw	15
   170  00FE4D  9680               	dw	38528
   171  00FE4F  0098               	dw	152
   172  00FE51  E100               	dw	57600
   173  00FE53  05F5               	dw	1525
   174  00FE55  CA00               	dw	51712
   175  00FE57  3B9A               	dw	15258
   176  00FE59                     __end_of_dpowers:
   177                           	opt stack 0
   178  0000                     _RXB1CON	set	3920
   179  0000                     _RXB1CONbits	set	3920
   180  0000                     _RXB1D0	set	3926
   181  0000                     _RXB1D1	set	3927
   182  0000                     _RXB1D2	set	3928
   183  0000                     _RXB1D3	set	3929
   184  0000                     _RXB1D4	set	3930
   185  0000                     _RXB1D5	set	3931
   186  0000                     _RXB1D6	set	3932
   187  0000                     _RXB1D7	set	3933
   188  0000                     _RXB1DLC	set	3925
   189  0000                     _RXB1DLCbits	set	3925
   190  0000                     _RXB1EIDH	set	3923
   191  0000                     _RXB1EIDL	set	3924
   192  0000                     _RXB1SIDH	set	3921
   193  0000                     _RXB1SIDL	set	3922
   194  0000                     _RXB1SIDLbits	set	3922
   195  0000                     _RXF0EIDH	set	3842
   196  0000                     _RXF0EIDL	set	3843
   197  0000                     _RXF0SIDH	set	3840
   198  0000                     _RXF0SIDL	set	3841
   199  0000                     _RXF0SIDLbits	set	3841
   200  0000                     _RXF1EIDH	set	3846
   201  0000                     _RXF1EIDL	set	3847
   202  0000                     _RXF1SIDH	set	3844
   203  0000                     _RXF1SIDL	set	3845
   204  0000                     _RXF1SIDLbits	set	3845
   205  0000                     _RXF2EIDH	set	3850
   206  0000                     _RXF2EIDL	set	3851
   207  0000                     _RXF2SIDH	set	3848
   208  0000                     _RXF2SIDL	set	3849
   209  0000                     _RXF2SIDLbits	set	3849
   210  0000                     _RXF3EIDH	set	3854
   211  0000                     _RXF3EIDL	set	3855
   212  0000                     _RXF3SIDH	set	3852
   213  0000                     _RXF3SIDL	set	3853
   214  0000                     _RXF3SIDLbits	set	3853
   215  0000                     _RXF4EIDH	set	3858
   216  0000                     _RXF4EIDL	set	3859
   217  0000                     _RXF4SIDH	set	3856
   218  0000                     _RXF4SIDL	set	3857
   219  0000                     _RXF4SIDLbits	set	3857
   220  0000                     _RXF5EIDH	set	3862
   221  0000                     _RXF5EIDL	set	3863
   222  0000                     _RXF5SIDH	set	3860
   223  0000                     _RXF5SIDL	set	3861
   224  0000                     _RXF5SIDLbits	set	3861
   225  0000                     _RXM0EIDH	set	3866
   226  0000                     _RXM0EIDL	set	3867
   227  0000                     _RXM0SIDH	set	3864
   228  0000                     _RXM0SIDL	set	3865
   229  0000                     _RXM0SIDLbits	set	3865
   230  0000                     _RXM1EIDH	set	3870
   231  0000                     _RXM1EIDL	set	3871
   232  0000                     _RXM1SIDH	set	3868
   233  0000                     _RXM1SIDL	set	3869
   234  0000                     _RXM1SIDLbits	set	3869
   235  0000                     _TXB0CONbits	set	3904
   236  0000                     _TXB0D0	set	3910
   237  0000                     _TXB0D1	set	3911
   238  0000                     _TXB0D2	set	3912
   239  0000                     _TXB0D3	set	3913
   240  0000                     _TXB0D4	set	3914
   241  0000                     _TXB0D5	set	3915
   242  0000                     _TXB0D6	set	3916
   243  0000                     _TXB0D7	set	3917
   244  0000                     _TXB0DLC	set	3909
   245  0000                     _TXB0DLCbits	set	3909
   246  0000                     _TXB0EIDH	set	3907
   247  0000                     _TXB0EIDL	set	3908
   248  0000                     _TXB0SIDH	set	3905
   249  0000                     _TXB0SIDL	set	3906
   250  0000                     _TXB0SIDLbits	set	3906
   251  0000                     _TXB1CONbits	set	3888
   252  0000                     _TXB1D0	set	3894
   253  0000                     _TXB1D1	set	3895
   254  0000                     _TXB1D2	set	3896
   255  0000                     _TXB1D3	set	3897
   256  0000                     _TXB1D4	set	3898
   257  0000                     _TXB1D5	set	3899
   258  0000                     _TXB1D6	set	3900
   259  0000                     _TXB1D7	set	3901
   260  0000                     _TXB1DLC	set	3893
   261  0000                     _TXB1DLCbits	set	3893
   262  0000                     _TXB1EIDH	set	3891
   263  0000                     _TXB1EIDL	set	3892
   264  0000                     _TXB1SIDH	set	3889
   265  0000                     _TXB1SIDL	set	3890
   266  0000                     _TXB1SIDLbits	set	3890
   267  0000                     _TXB2CONbits	set	3872
   268  0000                     _TXB2D0	set	3878
   269  0000                     _TXB2D1	set	3879
   270  0000                     _TXB2D2	set	3880
   271  0000                     _TXB2D3	set	3881
   272  0000                     _TXB2D4	set	3882
   273  0000                     _TXB2D5	set	3883
   274  0000                     _TXB2D6	set	3884
   275  0000                     _TXB2D7	set	3885
   276  0000                     _TXB2DLC	set	3877
   277  0000                     _TXB2DLCbits	set	3877
   278  0000                     _TXB2EIDH	set	3875
   279  0000                     _TXB2EIDL	set	3876
   280  0000                     _TXB2SIDH	set	3873
   281  0000                     _TXB2SIDL	set	3874
   282  0000                     _TXB2SIDLbits	set	3874
   283  0000                     _ADCON0bits	set	4034
   284  0000                     _ADCON1	set	4033
   285  0000                     _ADCON2bits	set	4032
   286  0000                     _ADRESH	set	4036
   287  0000                     _BRGCON1	set	3952
   288  0000                     _BRGCON2	set	3953
   289  0000                     _BRGCON2bits	set	3953
   290  0000                     _BRGCON3	set	3954
   291  0000                     _BRGCON3bits	set	3954
   292  0000                     _CANCON	set	3951
   293  0000                     _CANCONbits	set	3951
   294  0000                     _CANSTAT	set	3950
   295  0000                     _COMSTATbits	set	3956
   296  0000                     _INTCONbits	set	4082
   297  0000                     _IPR2bits	set	4002
   298  0000                     _IPR3bits	set	4005
   299  0000                     _LATA	set	3977
   300  0000                     _LATB	set	3978
   301  0000                     _LATC	set	3979
   302  0000                     _LATCbits	set	3979
   303  0000                     _LATD	set	3980
   304  0000                     _LATDbits	set	3980
   305  0000                     _LATE	set	3981
   306  0000                     _LATEbits	set	3981
   307  0000                     _PIE2bits	set	4000
   308  0000                     _PIE3bits	set	4003
   309  0000                     _PIR2bits	set	4001
   310  0000                     _PIR3bits	set	4004
   311  0000                     _PORTAbits	set	3968
   312  0000                     _PORTBbits	set	3969
   313  0000                     _PORTDbits	set	3971
   314  0000                     _RCONbits	set	4048
   315  0000                     _RXB0CON	set	3936
   316  0000                     _RXB0CONbits	set	3936
   317  0000                     _RXB0D0	set	3942
   318  0000                     _RXB0D1	set	3943
   319  0000                     _RXB0D2	set	3944
   320  0000                     _RXB0D3	set	3945
   321  0000                     _RXB0D4	set	3946
   322  0000                     _RXB0D5	set	3947
   323  0000                     _RXB0D6	set	3948
   324  0000                     _RXB0D7	set	3949
   325  0000                     _RXB0DLC	set	3941
   326  0000                     _RXB0DLCbits	set	3941
   327  0000                     _RXB0EIDH	set	3939
   328  0000                     _RXB0EIDL	set	3940
   329  0000                     _RXB0SIDH	set	3937
   330  0000                     _RXB0SIDL	set	3938
   331  0000                     _RXB0SIDLbits	set	3938
   332  0000                     _RXERRCNT	set	3957
   333  0000                     _T3CON	set	4017
   334  0000                     _TMR3H	set	4019
   335  0000                     _TMR3L	set	4018
   336  0000                     _TRISA	set	3986
   337  0000                     _TRISB	set	3987
   338  0000                     _TRISC	set	3988
   339  0000                     _TRISD	set	3989
   340  0000                     _TRISE	set	3990
   341  0000                     _TXERRCNT	set	3958
   342  00FE59                     STR_31:
   343  00FE59  20                 	db	32
   344  00FE5A  20                 	db	32
   345  00FE5B  20                 	db	32
   346  00FE5C  20                 	db	32
   347  00FE5D  20                 	db	32
   348  00FE5E  43                 	db	67	;'C'
   349  00FE5F  4F                 	db	79	;'O'
   350  00FE60  4D                 	db	77	;'M'
   351  00FE61  50                 	db	80	;'P'
   352  00FE62  4C                 	db	76	;'L'
   353  00FE63  45                 	db	69	;'E'
   354  00FE64  54                 	db	84	;'T'
   355  00FE65  45                 	db	69	;'E'
   356  00FE66  44                 	db	68	;'D'
   357  00FE67  21                 	db	33
   358  00FE68  20                 	db	32
   359  00FE69  20                 	db	32
   360  00FE6A  20                 	db	32
   361  00FE6B  20                 	db	32
   362  00FE6C  20                 	db	32
   363  00FE6D  00                 	db	0
   364  00FE6E                     STR_30:
   365  00FE6E  20                 	db	32
   366  00FE6F  20                 	db	32
   367  00FE70  20                 	db	32
   368  00FE71  20                 	db	32
   369  00FE72  53                 	db	83	;'S'
   370  00FE73  55                 	db	85	;'U'
   371  00FE74  43                 	db	67	;'C'
   372  00FE75  43                 	db	67	;'C'
   373  00FE76  45                 	db	69	;'E'
   374  00FE77  53                 	db	83	;'S'
   375  00FE78  53                 	db	83	;'S'
   376  00FE79  46                 	db	70	;'F'
   377  00FE7A  55                 	db	85	;'U'
   378  00FE7B  4C                 	db	76	;'L'
   379  00FE7C  4C                 	db	76	;'L'
   380  00FE7D  59                 	db	89	;'Y'
   381  00FE7E  20                 	db	32
   382  00FE7F  20                 	db	32
   383  00FE80  20                 	db	32
   384  00FE81  20                 	db	32
   385  00FE82  00                 	db	0
   386  00FE83                     STR_23:
   387  00FE83  20                 	db	32
   388  00FE84  20                 	db	32
   389  00FE85  20                 	db	32
   390  00FE86  73                 	db	115	;'s'
   391  00FE87  74                 	db	116	;'t'
   392  00FE88  61                 	db	97	;'a'
   393  00FE89  72                 	db	114	;'r'
   394  00FE8A  74                 	db	116	;'t'
   395  00FE8B  20                 	db	32
   396  00FE8C  70                 	db	112	;'p'
   397  00FE8D  61                 	db	97	;'a'
   398  00FE8E  72                 	db	114	;'r'
   399  00FE8F  6B                 	db	107	;'k'
   400  00FE90  69                 	db	105	;'i'
   401  00FE91  6E                 	db	110	;'n'
   402  00FE92  67                 	db	103	;'g'
   403  00FE93  20                 	db	32
   404  00FE94  20                 	db	32
   405  00FE95  20                 	db	32
   406  00FE96  20                 	db	32
   407  00FE97  00                 	db	0
   408  00FE98                     STR_3:
   409  00FE98  20                 	db	32
   410  00FE99  20                 	db	32
   411  00FE9A  50                 	db	80	;'P'
   412  00FE9B  72                 	db	114	;'r'
   413  00FE9C  65                 	db	101	;'e'
   414  00FE9D  73                 	db	115	;'s'
   415  00FE9E  73                 	db	115	;'s'
   416  00FE9F  20                 	db	32
   417  00FEA0  74                 	db	116	;'t'
   418  00FEA1  68                 	db	104	;'h'
   419  00FEA2  65                 	db	101	;'e'
   420  00FEA3  20                 	db	32
   421  00FEA4  62                 	db	98	;'b'
   422  00FEA5  75                 	db	117	;'u'
   423  00FEA6  74                 	db	116	;'t'
   424  00FEA7  74                 	db	116	;'t'
   425  00FEA8  6F                 	db	111	;'o'
   426  00FEA9  6E                 	db	110	;'n'
   427  00FEAA  20                 	db	32
   428  00FEAB  20                 	db	32
   429  00FEAC  00                 	db	0
   430  00FEAD                     STR_19:
   431  00FEAD  20                 	db	32
   432  00FEAE  75                 	db	117	;'u'
   433  00FEAF  6E                 	db	110	;'n'
   434  00FEB0  74                 	db	116	;'t'
   435  00FEB1  69                 	db	105	;'i'
   436  00FEB2  6C                 	db	108	;'l'
   437  00FEB3  20                 	db	32
   438  00FEB4  6E                 	db	110	;'n'
   439  00FEB5  65                 	db	101	;'e'
   440  00FEB6  78                 	db	120	;'x'
   441  00FEB7  74                 	db	116	;'t'
   442  00FEB8  20                 	db	32
   443  00FEB9  6D                 	db	109	;'m'
   444  00FEBA  65                 	db	101	;'e'
   445  00FEBB  73                 	db	115	;'s'
   446  00FEBC  73                 	db	115	;'s'
   447  00FEBD  61                 	db	97	;'a'
   448  00FEBE  67                 	db	103	;'g'
   449  00FEBF  65                 	db	101	;'e'
   450  00FEC0  20                 	db	32
   451  00FEC1  00                 	db	0
   452  00FEC2                     STR_22:
   453  00FEC2  50                 	db	80	;'P'
   454  00FEC3  72                 	db	114	;'r'
   455  00FEC4  65                 	db	101	;'e'
   456  00FEC5  73                 	db	115	;'s'
   457  00FEC6  73                 	db	115	;'s'
   458  00FEC7  20                 	db	32
   459  00FEC8  74                 	db	116	;'t'
   460  00FEC9  68                 	db	104	;'h'
   461  00FECA  65                 	db	101	;'e'
   462  00FECB  20                 	db	32
   463  00FECC  42                 	db	66	;'B'
   464  00FECD  55                 	db	85	;'U'
   465  00FECE  54                 	db	84	;'T'
   466  00FECF  54                 	db	84	;'T'
   467  00FED0  4F                 	db	79	;'O'
   468  00FED1  4E                 	db	78	;'N'
   469  00FED2  20                 	db	32
   470  00FED3  74                 	db	116	;'t'
   471  00FED4  6F                 	db	111	;'o'
   472  00FED5  20                 	db	32
   473  00FED6  00                 	db	0
   474  00FED7                     STR_29:
   475  00FED7  20                 	db	32
   476  00FED8  50                 	db	80	;'P'
   477  00FED9  61                 	db	97	;'a'
   478  00FEDA  72                 	db	114	;'r'
   479  00FEDB  6B                 	db	107	;'k'
   480  00FEDC  69                 	db	105	;'i'
   481  00FEDD  6E                 	db	110	;'n'
   482  00FEDE  67                 	db	103	;'g'
   483  00FEDF  20                 	db	32
   484  00FEE0  70                 	db	112	;'p'
   485  00FEE1  72                 	db	114	;'r'
   486  00FEE2  6F                 	db	111	;'o'
   487  00FEE3  63                 	db	99	;'c'
   488  00FEE4  65                 	db	101	;'e'
   489  00FEE5  64                 	db	100	;'d'
   490  00FEE6  75                 	db	117	;'u'
   491  00FEE7  72                 	db	114	;'r'
   492  00FEE8  65                 	db	101	;'e'
   493  00FEE9  73                 	db	115	;'s'
   494  00FEEA  20                 	db	32
   495  00FEEB  00                 	db	0
   496  00FEEC                     STR_21:
   497  00FEEC  2D                 	db	45
   498  00FEED  20                 	db	32
   499  00FEEE  44                 	db	68	;'D'
   500  00FEEF  69                 	db	105	;'i'
   501  00FEF0  73                 	db	115	;'s'
   502  00FEF1  74                 	db	116	;'t'
   503  00FEF2  61                 	db	97	;'a'
   504  00FEF3  6E                 	db	110	;'n'
   505  00FEF4  63                 	db	99	;'c'
   506  00FEF5  65                 	db	101	;'e'
   507  00FEF6  20                 	db	32
   508  00FEF7  52                 	db	82	;'R'
   509  00FEF8  45                 	db	69	;'E'
   510  00FEF9  41                 	db	65	;'A'
   511  00FEFA  43                 	db	67	;'C'
   512  00FEFB  48                 	db	72	;'H'
   513  00FEFC  45                 	db	69	;'E'
   514  00FEFD  44                 	db	68	;'D'
   515  00FEFE  20                 	db	32
   516  00FEFF  2D                 	db	45
   517  00FF00  00                 	db	0
   518  00FF01                     STR_18:
   519  00FF01  2D                 	db	45
   520  00FF02  3E                 	db	62	;'>'
   521  00FF03  20                 	db	32
   522  00FF04  20                 	db	32
   523  00FF05  4B                 	db	75	;'K'
   524  00FF06  45                 	db	69	;'E'
   525  00FF07  45                 	db	69	;'E'
   526  00FF08  50                 	db	80	;'P'
   527  00FF09  20                 	db	32
   528  00FF0A  4D                 	db	77	;'M'
   529  00FF0B  4F                 	db	79	;'O'
   530  00FF0C  56                 	db	86	;'V'
   531  00FF0D  49                 	db	73	;'I'
   532  00FF0E  4E                 	db	78	;'N'
   533  00FF0F  47                 	db	71	;'G'
   534  00FF10  20                 	db	32
   535  00FF11  20                 	db	32
   536  00FF12  20                 	db	32
   537  00FF13  3C                 	db	60	;'<'
   538  00FF14  2D                 	db	45
   539  00FF15  00                 	db	0
   540  00FF16                     STR_25:
   541  00FF16  3D                 	db	61	;'='
   542  00FF17  20                 	db	32
   543  00FF18  20                 	db	32
   544  00FF19  20                 	db	32
   545  00FF1A  20                 	db	32
   546  00FF1B  50                 	db	80	;'P'
   547  00FF1C  61                 	db	97	;'a'
   548  00FF1D  72                 	db	114	;'r'
   549  00FF1E  6B                 	db	107	;'k'
   550  00FF1F  69                 	db	105	;'i'
   551  00FF20  6E                 	db	110	;'n'
   552  00FF21  67                 	db	103	;'g'
   553  00FF22  20                 	db	32
   554  00FF23  69                 	db	105	;'i'
   555  00FF24  6E                 	db	110	;'n'
   556  00FF25  20                 	db	32
   557  00FF26  20                 	db	32
   558  00FF27  20                 	db	32
   559  00FF28  20                 	db	32
   560  00FF29  3D                 	db	61	;'='
   561  00FF2A  00                 	db	0
   562  00FF2B                     STR_26:
   563  00FF2B  3D                 	db	61	;'='
   564  00FF2C  20                 	db	32
   565  00FF2D  20                 	db	32
   566  00FF2E  20                 	db	32
   567  00FF2F  20                 	db	32
   568  00FF30  70                 	db	112	;'p'
   569  00FF31  72                 	db	114	;'r'
   570  00FF32  6F                 	db	111	;'o'
   571  00FF33  67                 	db	103	;'g'
   572  00FF34  72                 	db	114	;'r'
   573  00FF35  65                 	db	101	;'e'
   574  00FF36  73                 	db	115	;'s'
   575  00FF37  73                 	db	115	;'s'
   576  00FF38  2E                 	db	46
   577  00FF39  2E                 	db	46
   578  00FF3A  2E                 	db	46
   579  00FF3B  20                 	db	32
   580  00FF3C  20                 	db	32
   581  00FF3D  20                 	db	32
   582  00FF3E  3D                 	db	61	;'='
   583  00FF3F  00                 	db	0
   584  00FF40                     STR_16:
   585  00FF40  3D                 	db	61	;'='
   586  00FF41  20                 	db	32
   587  00FF42  50                 	db	80	;'P'
   588  00FF43  41                 	db	65	;'A'
   589  00FF44  52                 	db	82	;'R'
   590  00FF45  4B                 	db	75	;'K'
   591  00FF46  49                 	db	73	;'I'
   592  00FF47  4E                 	db	78	;'N'
   593  00FF48  47                 	db	71	;'G'
   594  00FF49  20                 	db	32
   595  00FF4A  4D                 	db	77	;'M'
   596  00FF4B  45                 	db	69	;'E'
   597  00FF4C  53                 	db	83	;'S'
   598  00FF4D  53                 	db	83	;'S'
   599  00FF4E  41                 	db	65	;'A'
   600  00FF4F  47                 	db	71	;'G'
   601  00FF50  45                 	db	69	;'E'
   602  00FF51  53                 	db	83	;'S'
   603  00FF52  20                 	db	32
   604  00FF53  3D                 	db	61	;'='
   605  00FF54  00                 	db	0
   606  00FF55                     STR_2:
   607  00FF55  3D                 	db	61	;'='
   608  00FF56  3D                 	db	61	;'='
   609  00FF57  3E                 	db	62	;'>'
   610  00FF58  20                 	db	32
   611  00FF59  56                 	db	86	;'V'
   612  00FF5A  45                 	db	69	;'E'
   613  00FF5B  48                 	db	72	;'H'
   614  00FF5C  49                 	db	73	;'I'
   615  00FF5D  43                 	db	67	;'C'
   616  00FF5E  4C                 	db	76	;'L'
   617  00FF5F  45                 	db	69	;'E'
   618  00FF60  20                 	db	32
   619  00FF61  20                 	db	32
   620  00FF62  4F                 	db	79	;'O'
   621  00FF63  46                 	db	70	;'F'
   622  00FF64  46                 	db	70	;'F'
   623  00FF65  20                 	db	32
   624  00FF66  3C                 	db	60	;'<'
   625  00FF67  3D                 	db	61	;'='
   626  00FF68  3D                 	db	61	;'='
   627  00FF69  00                 	db	0
   628  00FF6A                     STR_6:
   629  00FF6A  3D                 	db	61	;'='
   630  00FF6B  3D                 	db	61	;'='
   631  00FF6C  3D                 	db	61	;'='
   632  00FF6D  20                 	db	32
   633  00FF6E  56                 	db	86	;'V'
   634  00FF6F  45                 	db	69	;'E'
   635  00FF70  48                 	db	72	;'H'
   636  00FF71  49                 	db	73	;'I'
   637  00FF72  43                 	db	67	;'C'
   638  00FF73  4C                 	db	76	;'L'
   639  00FF74  45                 	db	69	;'E'
   640  00FF75  20                 	db	32
   641  00FF76  44                 	db	68	;'D'
   642  00FF77  41                 	db	65	;'A'
   643  00FF78  54                 	db	84	;'T'
   644  00FF79  41                 	db	65	;'A'
   645  00FF7A  20                 	db	32
   646  00FF7B  3D                 	db	61	;'='
   647  00FF7C  3D                 	db	61	;'='
   648  00FF7D  3D                 	db	61	;'='
   649  00FF7E  00                 	db	0
   650  00FF7F                     STR_1:
   651  00FF7F  3D                 	db	61	;'='
   652  00FF80  3D                 	db	61	;'='
   653  00FF81  3D                 	db	61	;'='
   654  00FF82  3D                 	db	61	;'='
   655  00FF83  3D                 	db	61	;'='
   656  00FF84  3D                 	db	61	;'='
   657  00FF85  3D                 	db	61	;'='
   658  00FF86  3D                 	db	61	;'='
   659  00FF87  3D                 	db	61	;'='
   660  00FF88  3D                 	db	61	;'='
   661  00FF89  3D                 	db	61	;'='
   662  00FF8A  3D                 	db	61	;'='
   663  00FF8B  3D                 	db	61	;'='
   664  00FF8C  3D                 	db	61	;'='
   665  00FF8D  3D                 	db	61	;'='
   666  00FF8E  3D                 	db	61	;'='
   667  00FF8F  3D                 	db	61	;'='
   668  00FF90  3D                 	db	61	;'='
   669  00FF91  3D                 	db	61	;'='
   670  00FF92  3D                 	db	61	;'='
   671  00FF93  00                 	db	0
   672  00FF94                     STR_17:
   673  00FF94  20                 	db	32
   674  00FF95  50                 	db	80	;'P'
   675  00FF96  61                 	db	97	;'a'
   676  00FF97  72                 	db	114	;'r'
   677  00FF98  6B                 	db	107	;'k'
   678  00FF99  69                 	db	105	;'i'
   679  00FF9A  6E                 	db	110	;'n'
   680  00FF9B  67                 	db	103	;'g'
   681  00FF9C  20                 	db	32
   682  00FF9D  73                 	db	115	;'s'
   683  00FF9E  70                 	db	112	;'p'
   684  00FF9F  61                 	db	97	;'a'
   685  00FFA0  63                 	db	99	;'c'
   686  00FFA1  65                 	db	101	;'e'
   687  00FFA2  20                 	db	32
   688  00FFA3  46                 	db	70	;'F'
   689  00FFA4  4F                 	db	79	;'O'
   690  00FFA5  55                 	db	85	;'U'
   691  00FFA6  4E                 	db	78	;'N'
   692  00FFA7  44                 	db	68	;'D'
   693  00FFA8  00                 	db	0
   694  00FFA9                     STR_8:
   695  00FFA9  53                 	db	83	;'S'
   696  00FFAA  70                 	db	112	;'p'
   697  00FFAB  65                 	db	101	;'e'
   698  00FFAC  65                 	db	101	;'e'
   699  00FFAD  64                 	db	100	;'d'
   700  00FFAE  3A                 	db	58	;':'
   701  00FFAF  20                 	db	32
   702  00FFB0  30                 	db	48	;'0'
   703  00FFB1  2E                 	db	46
   704  00FFB2  30                 	db	48	;'0'
   705  00FFB3  30                 	db	48	;'0'
   706  00FFB4  20                 	db	32
   707  00FFB5  4B                 	db	75	;'K'
   708  00FFB6  6D                 	db	109	;'m'
   709  00FFB7  2F                 	db	47
   710  00FFB8  68                 	db	104	;'h'
   711  00FFB9  00                 	db	0
   712  00FFBA                     STR_9:
   713  00FFBA  50                 	db	80	;'P'
   714  00FFBB  61                 	db	97	;'a'
   715  00FFBC  72                 	db	114	;'r'
   716  00FFBD  6B                 	db	107	;'k'
   717  00FFBE  20                 	db	32
   718  00FFBF  61                 	db	97	;'a'
   719  00FFC0  73                 	db	115	;'s'
   720  00FFC1  73                 	db	115	;'s'
   721  00FFC2  69                 	db	105	;'i'
   722  00FFC3  73                 	db	115	;'s'
   723  00FFC4  74                 	db	116	;'t'
   724  00FFC5  3A                 	db	58	;':'
   725  00FFC6  20                 	db	32
   726  00FFC7  00                 	db	0
   727  00FFC8                     STR_7:
   728  00FFC8  44                 	db	68	;'D'
   729  00FFC9  69                 	db	105	;'i'
   730  00FFCA  72                 	db	114	;'r'
   731  00FFCB  65                 	db	101	;'e'
   732  00FFCC  63                 	db	99	;'c'
   733  00FFCD  74                 	db	116	;'t'
   734  00FFCE  69                 	db	105	;'i'
   735  00FFCF  6F                 	db	111	;'o'
   736  00FFD0  6E                 	db	110	;'n'
   737  00FFD1  3A                 	db	58	;':'
   738  00FFD2  20                 	db	32
   739  00FFD3  00                 	db	0
   740  00FFD4                     STR_14:
   741  00FFD4  4F                 	db	79	;'O'
   742  00FFD5  46                 	db	70	;'F'
   743  00FFD6  46                 	db	70	;'F'
   744  00FFD7  20                 	db	32
   745  00FFD8  20                 	db	32
   746  00FFD9  20                 	db	32
   747  00FFDA  20                 	db	32
   748  00FFDB  00                 	db	0
   749  00FFDC                     STR_15:
   750  00FFDC  53                 	db	83	;'S'
   751  00FFDD  45                 	db	69	;'E'
   752  00FFDE  41                 	db	65	;'A'
   753  00FFDF  52                 	db	82	;'R'
   754  00FFE0  43                 	db	67	;'C'
   755  00FFE1  48                 	db	72	;'H'
   756  00FFE2  20                 	db	32
   757  00FFE3  00                 	db	0
   758  00FFE4                     STR_10:
   759  00FFE4  44                 	db	68	;'D'
   760  00FFE5  61                 	db	97	;'a'
   761  00FFE6  74                 	db	116	;'t'
   762  00FFE7  61                 	db	97	;'a'
   763  00FFE8  3A                 	db	58	;':'
   764  00FFE9  20                 	db	32
   765  00FFEA  00                 	db	0
   766  00FFEB                     STR_13:
   767  00FFEB  50                 	db	80	;'P'
   768  00FFEC  20                 	db	32
   769  00FFED  20                 	db	32
   770  00FFEE  20                 	db	32
   771  00FFEF  00                 	db	0
   772  00FFF0                     STR_11:
   773  00FFF0  46                 	db	70	;'F'
   774  00FFF1  57                 	db	87	;'W'
   775  00FFF2  44                 	db	68	;'D'
   776  00FFF3  20                 	db	32
   777  00FFF4  00                 	db	0
   778  00FFF5                     STR_12:
   779  00FFF5  42                 	db	66	;'B'
   780  00FFF6  4B                 	db	75	;'K'
   781  00FFF7  57                 	db	87	;'W'
   782  00FFF8  44                 	db	68	;'D'
   783  00FFF9  00                 	db	0
   784  00FFFA                     STR_5:
   785  00FFFA  25                 	db	37
   786  00FFFB  2E                 	db	46
   787  00FFFC  32                 	db	50	;'2'
   788  00FFFD  66                 	db	102	;'f'
   789  00FFFE  00                 	db	0
   790  0000                     
   791                           ; #config settings
   792  00FFFF  00                 	db	0	; dummy byte at the end
   793  0000                     
   794                           	psect	cinit
   795  0161A6                     __pcinit:
   796                           	opt stack 0
   797  0161A6                     start_initialization:
   798                           	opt stack 0
   799  0161A6                     __initialization:
   800                           	opt stack 0
   801                           
   802                           ; Clear objects allocated to BANK1 (48 bytes)
   803  0161A6  EE01  F000         	lfsr	0,__pbssBANK1
   804  0161AA  0E30               	movlw	48
   805  0161AC                     clear_0:
   806  0161AC  6AEE               	clrf	postinc0,c
   807  0161AE  06E8               	decf	wreg,f,c
   808  0161B0  E1FD               	bnz	clear_0
   809                           
   810                           ; Clear objects allocated to BANK0 (32 bytes)
   811  0161B2  EE00  F0CD         	lfsr	0,__pbssBANK0
   812  0161B6  0E20               	movlw	32
   813  0161B8                     clear_1:
   814  0161B8  6AEE               	clrf	postinc0,c
   815  0161BA  06E8               	decf	wreg,f,c
   816  0161BC  E1FD               	bnz	clear_1
   817                           
   818                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   819  0161BE  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   820  0161C0  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   821  0161C2  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   822                           
   823                           ; Clear objects allocated to COMRAM (41 bytes)
   824  0161C4  EE00  F001         	lfsr	0,__pbssCOMRAM
   825  0161C8  0E29               	movlw	41
   826  0161CA                     clear_2:
   827  0161CA  6AEE               	clrf	postinc0,c
   828  0161CC  06E8               	decf	wreg,f,c
   829  0161CE  E1FD               	bnz	clear_2
   830                           
   831                           ; Initialize objects allocated to BANK0 (1 bytes)
   832                           ; load TBLPTR registers with __pidataBANK0
   833  0161D0  0EC0               	movlw	low __pidataBANK0
   834  0161D2  6EF6               	movwf	tblptrl,c
   835  0161D4  0E64               	movlw	high __pidataBANK0
   836  0161D6  6EF7               	movwf	tblptrh,c
   837  0161D8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   838  0161DA  6EF8               	movwf	tblptru,c
   839  0161DC  0009               	tblrd		*+	;fetch initializer
   840  0161DE  CFF5 F0ED          	movff	tablat,__pdataBANK0
   841  0161E2                     end_of_initialization:
   842                           	opt stack 0
   843  0161E2                     __end_of__initialization:
   844                           	opt stack 0
   845  0161E2  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   846  0161E4  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   847  0161E6  0100               	movlb	0
   848  0161E8  EF93  F08D         	goto	_main	;jump to C main() function
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           
   856                           	psect	bitbssCOMRAM
   857  000258                     __pbitbssCOMRAM:
   858                           	opt stack 0
   859  000258                     _AbsFlag:
   860                           	opt stack 0
   861  000258                     	ds	1
   862  000259                     _Can_Tx_Force:
   863                           	opt stack 0
   864  000259                     	ds	1
   865  00025A                     _F1_switch:
   866                           	opt stack 0
   867  00025A                     	ds	1
   868  00025B                     _F2_switch:
   869                           	opt stack 0
   870  00025B                     	ds	1
   871  00025C                     _MotoreFlag:
   872                           	opt stack 0
   873  00025C                     	ds	1
   874  00025D                     _RTR_Flag:
   875                           	opt stack 0
   876  00025D                     	ds	1
   877  00025E                     _SterzoFlag:
   878                           	opt stack 0
   879  00025E                     	ds	1
   880  00025F                     _display_refresh:
   881                           	opt stack 0
   882  00025F                     	ds	1
   883  000260                     _newMessageCan:
   884                           	opt stack 0
   885  000260                     	ds	1
   886  000261                     _parking_message_E:
   887                           	opt stack 0
   888  000261                     	ds	1
   889  000262                     _power_switch:
   890                           	opt stack 0
   891  000262                     	ds	1
   892  000263                     _space_available:
   893                           	opt stack 0
   894  000263                     	ds	1
   895  000264                     _space_gap_reached:
   896                           	opt stack 0
   897  000264                     	ds	1
   898  000265                     _steering_correction_dir:
   899                           	opt stack 0
   900  000265                     	ds	1
   901  000266                     _wait_low_1:
   902                           	opt stack 0
   903  000266                     	ds	1
   904  000267                     _wait_low_2:
   905                           	opt stack 0
   906  000267                     	ds	1
   907  000268                     _wait_low_3:
   908                           	opt stack 0
   909  000268                     	ds	1
   910  000269                     _x:
   911                           	opt stack 0
   912  000269                     	ds	1
   913  00026A                     _y:
   914                           	opt stack 0
   915  00026A                     	ds	1
   916  00026B                     _z:
   917                           	opt stack 0
   918  00026B                     	ds	1
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           
   926                           	psect	bssCOMRAM
   927  000001                     __pbssCOMRAM:
   928                           	opt stack 0
   929  000001                     _actual_speed_kmh:
   930                           	opt stack 0
   931  000001                     	ds	4
   932  000005                     _id:
   933                           	opt stack 0
   934  000005                     	ds	4
   935  000009                     _pr_time_2:
   936                           	opt stack 0
   937  000009                     	ds	4
   938  00000D                     _pr_time_3:
   939                           	opt stack 0
   940  00000D                     	ds	4
   941  000011                     _pr_time_4:
   942                           	opt stack 0
   943  000011                     	ds	4
   944  000015                     _pr_time_5:
   945                           	opt stack 0
   946  000015                     	ds	4
   947  000019                     _pr_time_6:
   948                           	opt stack 0
   949  000019                     	ds	4
   950  00001D                     _time_counter:
   951                           	opt stack 0
   952  00001D                     	ds	4
   953  000021                     _left_speed:
   954                           	opt stack 0
   955  000021                     	ds	2
   956  000023                     _right_speed:
   957                           	opt stack 0
   958  000023                     	ds	2
   959  000025                     _user_data:
   960                           	opt stack 0
   961  000025                     	ds	2
   962  000027                     _battery:
   963                           	opt stack 0
   964  000027                     	ds	1
   965  000028                     _set_steering:
   966                           	opt stack 0
   967  000028                     	ds	1
   968  000029                     _data:
   969                           	opt stack 0
   970  000029                     	ds	1
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           
   978                           	psect	bssBANK0
   979  0000CD                     __pbssBANK0:
   980                           	opt stack 0
   981  0000CD                     _JoystickConstants:
   982                           	opt stack 0
   983  0000CD                     	ds	8
   984  0000D5                     _check:
   985                           	opt stack 0
   986  0000D5                     	ds	4
   987  0000D9                     _pr_time_1:
   988                           	opt stack 0
   989  0000D9                     	ds	4
   990  0000DD                     _JoystickValues:
   991                           	opt stack 0
   992  0000DD                     	ds	2
   993  0000DF                     _actual_speed:
   994                           	opt stack 0
   995  0000DF                     	ds	2
   996  0000E1                     _clock_counter_reference:
   997                           	opt stack 0
   998  0000E1                     	ds	2
   999  0000E3                     _set_speed:
  1000                           	opt stack 0
  1001  0000E3                     	ds	2
  1002  0000E5                     _dir:
  1003                           	opt stack 0
  1004  0000E5                     	ds	1
  1005  0000E6                     _parking_message_ID:
  1006                           	opt stack 0
  1007  0000E6                     	ds	1
  1008  0000E7                     _parking_state:
  1009                           	opt stack 0
  1010  0000E7                     	ds	1
  1011  0000E8                     _steering_correction:
  1012                           	opt stack 0
  1013  0000E8                     	ds	1
  1014  0000E9                     _switch_position:
  1015                           	opt stack 0
  1016  0000E9                     	ds	1
  1017  0000EA                     _data_brake:
  1018                           	opt stack 0
  1019  0000EA                     	ds	1
  1020  0000EB                     _data_speed:
  1021                           	opt stack 0
  1022  0000EB                     	ds	1
  1023  0000EC                     _data_steering:
  1024                           	opt stack 0
  1025  0000EC                     	ds	1
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           
  1033                           	psect	dataBANK0
  1034  0000ED                     __pdataBANK0:
  1035                           	opt stack 0
  1036  0000ED                     _delay_quartz_frequency_value:
  1037                           	opt stack 0
  1038  0000ED                     	ds	1
  1039                           tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           
  1046                           	psect	bssBANK1
  1047  000100                     __pbssBANK1:
  1048                           	opt stack 0
  1049  000100                     _data_speed_rx:
  1050                           	opt stack 0
  1051  000100                     	ds	7
  1052  000107                     LCD_write_integer@F17272:
  1053                           	opt stack 0
  1054  000107                     	ds	6
  1055  00010D                     _msg:
  1056                           	opt stack 0
  1057  00010D                     	ds	15
  1058  00011C                     _str:
  1059                           	opt stack 0
  1060  00011C                     	ds	12
  1061  000128                     _park_assist_state:
  1062                           	opt stack 0
  1063  000128                     	ds	8
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           
  1071                           	psect	cstackBANK1
  1072  000130                     __pcstackBANK1:
  1073                           	opt stack 0
  1074  000130                     _sprintf$4257:
  1075                           	opt stack 0
  1076                           
  1077                           ; 4 bytes @ 0x0
  1078  000130                     	ds	4
  1079  000134                     sprintf@ap:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x4
  1083  000134                     	ds	2
  1084  000136                     sprintf@flag:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x6
  1088  000136                     	ds	2
  1089  000138                     sprintf@val:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x8
  1093  000138                     	ds	4
  1094  00013C                     sprintf@exp:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0xC
  1098  00013C                     	ds	2
  1099  00013E                     sprintf@tmpval:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0xE
  1103  00013E                     	ds	4
  1104  000142                     sprintf@prec:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x12
  1108  000142                     	ds	2
  1109  000144                     sprintf@fval:
  1110                           	opt stack 0
  1111                           
  1112                           ; 4 bytes @ 0x14
  1113  000144                     	ds	4
  1114  000148                     sprintf@c:
  1115                           	opt stack 0
  1116                           
  1117                           ; 1 bytes @ 0x18
  1118  000148                     	ds	1
  1119  000149                     ??_main:
  1120                           
  1121                           ; 0 bytes @ 0x19
  1122  000149                     	ds	8
  1123                           tblptru	equ	0xFF8
  1124                           tblptrh	equ	0xFF7
  1125                           tblptrl	equ	0xFF6
  1126                           tablat	equ	0xFF5
  1127                           postinc0	equ	0xFEE
  1128                           wreg	equ	0xFE8
  1129                           
  1130                           	psect	cstackBANK0
  1131  000060                     __pcstackBANK0:
  1132                           	opt stack 0
  1133  000060                     ??_ISR_alta:
  1134                           
  1135                           ; 0 bytes @ 0x0
  1136  000060                     	ds	16
  1137  000070                     ISR_alta@i:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x10
  1141  000070                     	ds	1
  1142  000071                     ??_Joystick_Polling:
  1143  000071                     ??_CAN_Rx:
  1144  000071                     ??_isdigit:
  1145  000071                     ?___wmul:
  1146                           	opt stack 0
  1147  000071                     ?___awmod:
  1148                           	opt stack 0
  1149  000071                     ?___lwdiv:
  1150                           	opt stack 0
  1151  000071                     ?___lwmod:
  1152                           	opt stack 0
  1153  000071                     ?__tdiv_to_l_:
  1154                           	opt stack 0
  1155  000071                     ?__div_to_l_:
  1156                           	opt stack 0
  1157  000071                     ?___lldiv:
  1158                           	opt stack 0
  1159  000071                     ?___llmod:
  1160                           	opt stack 0
  1161  000071                     ?___xxtofl:
  1162                           	opt stack 0
  1163  000071                     CANOperationMode@mode:
  1164                           	opt stack 0
  1165  000071                     _CANisTxReady$3251:
  1166                           	opt stack 0
  1167  000071                     delay_set_quartz@frequency:
  1168                           	opt stack 0
  1169  000071                     ___wmul@multiplier:
  1170                           	opt stack 0
  1171  000071                     ___awmod@dividend:
  1172                           	opt stack 0
  1173  000071                     ___lwdiv@dividend:
  1174                           	opt stack 0
  1175  000071                     ___lwmod@dividend:
  1176                           	opt stack 0
  1177  000071                     CANsendMessage@identifier:
  1178                           	opt stack 0
  1179  000071                     CANSetMask@mask:
  1180                           	opt stack 0
  1181  000071                     CANSetFilter@filter:
  1182                           	opt stack 0
  1183  000071                     __div_to_l_@f1:
  1184                           	opt stack 0
  1185  000071                     ___flge@ff1:
  1186                           	opt stack 0
  1187  000071                     __tdiv_to_l_@f1:
  1188                           	opt stack 0
  1189  000071                     ___lldiv@dividend:
  1190                           	opt stack 0
  1191  000071                     ___llmod@dividend:
  1192                           	opt stack 0
  1193  000071                     ___xxtofl@val:
  1194                           	opt stack 0
  1195                           
  1196                           ; 4 bytes @ 0x11
  1197  000071                     	ds	1
  1198  000072                     Joystick_Polling@i:
  1199                           	opt stack 0
  1200  000072                     _isdigit$3840:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x12
  1204  000072                     	ds	1
  1205  000073                     isdigit@c:
  1206                           	opt stack 0
  1207  000073                     ___wmul@multiplicand:
  1208                           	opt stack 0
  1209  000073                     ___awmod@divisor:
  1210                           	opt stack 0
  1211  000073                     ___lwdiv@divisor:
  1212                           	opt stack 0
  1213  000073                     ___lwmod@divisor:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x13
  1217  000073                     	ds	2
  1218  000075                     ??___xxtofl:
  1219  000075                     CANSetMask@type:
  1220                           	opt stack 0
  1221  000075                     CANSetFilter@type:
  1222                           	opt stack 0
  1223  000075                     ___awmod@counter:
  1224                           	opt stack 0
  1225  000075                     ___lwmod@counter:
  1226                           	opt stack 0
  1227  000075                     CANsendMessage@data:
  1228                           	opt stack 0
  1229  000075                     ___wmul@product:
  1230                           	opt stack 0
  1231  000075                     ___lwdiv@quotient:
  1232                           	opt stack 0
  1233  000075                     __div_to_l_@f2:
  1234                           	opt stack 0
  1235  000075                     ___flge@ff2:
  1236                           	opt stack 0
  1237  000075                     __tdiv_to_l_@f2:
  1238                           	opt stack 0
  1239  000075                     ___lldiv@divisor:
  1240                           	opt stack 0
  1241  000075                     ___llmod@divisor:
  1242                           	opt stack 0
  1243                           
  1244                           ; 4 bytes @ 0x15
  1245  000075                     	ds	1
  1246  000076                     ??_CANSetMask:
  1247  000076                     ??_CANSetFilter:
  1248  000076                     ___awmod@sign:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x16
  1252  000076                     	ds	1
  1253  000077                     ?___awdiv:
  1254                           	opt stack 0
  1255  000077                     CANsendMessage@dataLength:
  1256                           	opt stack 0
  1257  000077                     ___lwdiv@counter:
  1258                           	opt stack 0
  1259  000077                     delay_ms@value_ms:
  1260                           	opt stack 0
  1261  000077                     ___awdiv@dividend:
  1262                           	opt stack 0
  1263                           
  1264                           ; 2 bytes @ 0x17
  1265  000077                     	ds	1
  1266  000078                     CANsendMessage@flags:
  1267                           	opt stack 0
  1268  000078                     utoa@buf:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0x18
  1272  000078                     	ds	1
  1273  000079                     ??__tdiv_to_l_:
  1274  000079                     ??_CANsendMessage:
  1275  000079                     ??___flge:
  1276  000079                     LCD_send_command@D2:
  1277                           	opt stack 0
  1278  000079                     ___llmod@counter:
  1279                           	opt stack 0
  1280  000079                     ___xxtofl@sign:
  1281                           	opt stack 0
  1282  000079                     ___awdiv@divisor:
  1283                           	opt stack 0
  1284  000079                     __div_to_l_@quot:
  1285                           	opt stack 0
  1286  000079                     ___lldiv@quotient:
  1287                           	opt stack 0
  1288                           
  1289                           ; 4 bytes @ 0x19
  1290  000079                     	ds	1
  1291  00007A                     CANSetMask@numBuffer:
  1292                           	opt stack 0
  1293  00007A                     CANSetFilter@numBuffer:
  1294                           	opt stack 0
  1295  00007A                     LCD_send_command@D1:
  1296                           	opt stack 0
  1297  00007A                     ___xxtofl@exp:
  1298                           	opt stack 0
  1299  00007A                     utoa@val:
  1300                           	opt stack 0
  1301                           
  1302                           ; 2 bytes @ 0x1A
  1303  00007A                     	ds	1
  1304  00007B                     LCD_send_command@D0:
  1305                           	opt stack 0
  1306  00007B                     ___awdiv@counter:
  1307                           	opt stack 0
  1308  00007B                     CANSetMask@tamp:
  1309                           	opt stack 0
  1310  00007B                     CANSetFilter@tamp:
  1311                           	opt stack 0
  1312  00007B                     ___xxtofl@arg:
  1313                           	opt stack 0
  1314                           
  1315                           ; 4 bytes @ 0x1B
  1316  00007B                     	ds	1
  1317  00007C                     LCD_send_command@D3:
  1318                           	opt stack 0
  1319  00007C                     ___awdiv@sign:
  1320                           	opt stack 0
  1321  00007C                     utoa@base:
  1322                           	opt stack 0
  1323  00007C                     __tdiv_to_l_@quot:
  1324                           	opt stack 0
  1325                           
  1326                           ; 4 bytes @ 0x1C
  1327  00007C                     	ds	1
  1328  00007D                     LCD_shift_cursor@number_of_shift:
  1329                           	opt stack 0
  1330  00007D                     LCD_goto_line@line:
  1331                           	opt stack 0
  1332  00007D                     LCD_write_char@D3:
  1333                           	opt stack 0
  1334  00007D                     LCD_cursor@blinking:
  1335                           	opt stack 0
  1336  00007D                     __div_to_l_@cntr:
  1337                           	opt stack 0
  1338  00007D                     ___lldiv@counter:
  1339                           	opt stack 0
  1340  00007D                     ___awdiv@quotient:
  1341                           	opt stack 0
  1342  00007D                     CANsendMessage@tamp:
  1343                           	opt stack 0
  1344                           
  1345                           ; 4 bytes @ 0x1D
  1346  00007D                     	ds	1
  1347  00007E                     LCD_shift_cursor@shift:
  1348                           	opt stack 0
  1349  00007E                     LCD_write_char@D2:
  1350                           	opt stack 0
  1351  00007E                     LCD_cursor@active:
  1352                           	opt stack 0
  1353  00007E                     __div_to_l_@exp1:
  1354                           	opt stack 0
  1355  00007E                     utoa@v:
  1356                           	opt stack 0
  1357                           
  1358                           ; 2 bytes @ 0x1E
  1359  00007E                     	ds	1
  1360  00007F                     ?___fldiv:
  1361                           	opt stack 0
  1362  00007F                     ?___flmul:
  1363                           	opt stack 0
  1364  00007F                     CANInitialize@phaseSeg1:
  1365                           	opt stack 0
  1366  00007F                     LCD_shift_cursor@i:
  1367                           	opt stack 0
  1368  00007F                     LCD_write_char@D1:
  1369                           	opt stack 0
  1370  00007F                     LCD_initialize@quartz_frequency:
  1371                           	opt stack 0
  1372  00007F                     ___fldiv@b:
  1373                           	opt stack 0
  1374  00007F                     ___flmul@b:
  1375                           	opt stack 0
  1376                           
  1377                           ; 4 bytes @ 0x1F
  1378  00007F                     	ds	1
  1379  000080                     CANInitialize@phaseSeg2:
  1380                           	opt stack 0
  1381  000080                     LCD_goto_xy@y:
  1382                           	opt stack 0
  1383  000080                     LCD_write_char@D0:
  1384                           	opt stack 0
  1385  000080                     __tdiv_to_l_@cntr:
  1386                           	opt stack 0
  1387  000080                     utoa@c:
  1388                           	opt stack 0
  1389                           
  1390                           ; 1 bytes @ 0x20
  1391  000080                     	ds	1
  1392  000081                     CANInitialize@SJW:
  1393                           	opt stack 0
  1394  000081                     LCD_goto_xy@x:
  1395                           	opt stack 0
  1396  000081                     LCD_write_char@value:
  1397                           	opt stack 0
  1398  000081                     __tdiv_to_l_@exp1:
  1399                           	opt stack 0
  1400  000081                     itoa@buf:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x21
  1404  000081                     	ds	1
  1405  000082                     CANInitialize@BRP:
  1406                           	opt stack 0
  1407  000082                     LCD_write_message@buffer:
  1408                           	opt stack 0
  1409  000082                     LCD_write_string@buffer:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x22
  1413  000082                     	ds	1
  1414  000083                     CANInitialize@flags:
  1415                           	opt stack 0
  1416  000083                     itoa@val:
  1417                           	opt stack 0
  1418  000083                     ___fldiv@a:
  1419                           	opt stack 0
  1420  000083                     ___flmul@a:
  1421                           	opt stack 0
  1422                           
  1423                           ; 4 bytes @ 0x23
  1424  000083                     	ds	1
  1425  000084                     ??_CANInitialize:
  1426  000084                     
  1427                           ; 0 bytes @ 0x24
  1428  000084                     	ds	1
  1429  000085                     itoa@base:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x25
  1433  000085                     	ds	2
  1434  000087                     ??___fldiv:
  1435  000087                     ??___flmul:
  1436  000087                     itoa@cp:
  1437                           	opt stack 0
  1438                           
  1439                           ; 2 bytes @ 0x27
  1440  000087                     	ds	1
  1441  000088                     CANInitialize@propSeg:
  1442                           	opt stack 0
  1443                           
  1444                           ; 1 bytes @ 0x28
  1445  000088                     	ds	1
  1446  000089                     CANInitialize@FilterConfig1:
  1447                           	opt stack 0
  1448  000089                     LCD_write_integer@value:
  1449                           	opt stack 0
  1450                           
  1451                           ; 2 bytes @ 0x29
  1452  000089                     	ds	1
  1453  00008A                     CANInitialize@FilterConfig2:
  1454                           	opt stack 0
  1455                           
  1456                           ; 1 bytes @ 0x2A
  1457  00008A                     	ds	1
  1458  00008B                     LCD_write_integer@number_of_digits:
  1459                           	opt stack 0
  1460  00008B                     ___fldiv@sign:
  1461                           	opt stack 0
  1462  00008B                     ___flmul@sign:
  1463                           	opt stack 0
  1464                           
  1465                           ; 1 bytes @ 0x2B
  1466  00008B                     	ds	1
  1467  00008C                     LCD_write_integer@zero_cleaning:
  1468                           	opt stack 0
  1469  00008C                     ___flmul@aexp:
  1470                           	opt stack 0
  1471  00008C                     ___fldiv@rem:
  1472                           	opt stack 0
  1473                           
  1474                           ; 4 bytes @ 0x2C
  1475  00008C                     	ds	1
  1476  00008D                     ??_LCD_write_integer:
  1477  00008D                     ___flmul@grs:
  1478                           	opt stack 0
  1479                           
  1480                           ; 4 bytes @ 0x2D
  1481  00008D                     	ds	3
  1482  000090                     ___fldiv@new_exp:
  1483                           	opt stack 0
  1484                           
  1485                           ; 2 bytes @ 0x30
  1486  000090                     	ds	1
  1487  000091                     ___flmul@bexp:
  1488                           	opt stack 0
  1489                           
  1490                           ; 1 bytes @ 0x31
  1491  000091                     	ds	1
  1492  000092                     ___fldiv@grs:
  1493                           	opt stack 0
  1494  000092                     ___flmul@prod:
  1495                           	opt stack 0
  1496  000092                     LCD_write_integer@convertedInt:
  1497                           	opt stack 0
  1498                           
  1499                           ; 6 bytes @ 0x32
  1500  000092                     	ds	4
  1501  000096                     ___fldiv@bexp:
  1502                           	opt stack 0
  1503  000096                     ___flmul@temp:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x36
  1507  000096                     	ds	1
  1508  000097                     ___fldiv@aexp:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x37
  1512  000097                     	ds	1
  1513  000098                     ?_fround:
  1514                           	opt stack 0
  1515  000098                     ?_scale:
  1516                           	opt stack 0
  1517  000098                     ?___flneg:
  1518                           	opt stack 0
  1519  000098                     LCD_write_integer@index:
  1520                           	opt stack 0
  1521  000098                     ___flneg@f1:
  1522                           	opt stack 0
  1523                           
  1524                           ; 4 bytes @ 0x38
  1525  000098                     	ds	4
  1526  00009C                     _fround$4255:
  1527                           	opt stack 0
  1528  00009C                     _scale$4256:
  1529                           	opt stack 0
  1530                           
  1531                           ; 4 bytes @ 0x3C
  1532  00009C                     	ds	4
  1533  0000A0                     scale@scl:
  1534                           	opt stack 0
  1535  0000A0                     _fround$4254:
  1536                           	opt stack 0
  1537                           
  1538                           ; 4 bytes @ 0x40
  1539  0000A0                     	ds	4
  1540  0000A4                     fround@prec:
  1541                           	opt stack 0
  1542                           
  1543                           ; 1 bytes @ 0x44
  1544  0000A4                     	ds	1
  1545  0000A5                     ?___fladd:
  1546                           	opt stack 0
  1547  0000A5                     ___fladd@b:
  1548                           	opt stack 0
  1549                           
  1550                           ; 4 bytes @ 0x45
  1551  0000A5                     	ds	4
  1552  0000A9                     ___fladd@a:
  1553                           	opt stack 0
  1554                           
  1555                           ; 4 bytes @ 0x49
  1556  0000A9                     	ds	4
  1557  0000AD                     ??___fladd:
  1558                           
  1559                           ; 0 bytes @ 0x4D
  1560  0000AD                     	ds	8
  1561  0000B5                     ___fladd@signs:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x55
  1565  0000B5                     	ds	1
  1566  0000B6                     ___fladd@aexp:
  1567                           	opt stack 0
  1568                           
  1569                           ; 1 bytes @ 0x56
  1570  0000B6                     	ds	1
  1571  0000B7                     ___fladd@bexp:
  1572                           	opt stack 0
  1573                           
  1574                           ; 1 bytes @ 0x57
  1575  0000B7                     	ds	1
  1576  0000B8                     ___fladd@grs:
  1577                           	opt stack 0
  1578                           
  1579                           ; 1 bytes @ 0x58
  1580  0000B8                     	ds	1
  1581  0000B9                     ?___flsub:
  1582                           	opt stack 0
  1583  0000B9                     ?___fltol:
  1584                           	opt stack 0
  1585  0000B9                     ___fltol@f1:
  1586                           	opt stack 0
  1587  0000B9                     ___flsub@b:
  1588                           	opt stack 0
  1589                           
  1590                           ; 4 bytes @ 0x59
  1591  0000B9                     	ds	4
  1592  0000BD                     ??___fltol:
  1593  0000BD                     ___flsub@a:
  1594                           	opt stack 0
  1595                           
  1596                           ; 4 bytes @ 0x5D
  1597  0000BD                     	ds	4
  1598  0000C1                     ___fltol@sign1:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x61
  1602  0000C1                     	ds	1
  1603  0000C2                     ___fltol@exp1:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0x62
  1607  0000C2                     	ds	1
  1608  0000C3                     ?_sprintf:
  1609                           	opt stack 0
  1610  0000C3                     sprintf@sp:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x63
  1614  0000C3                     	ds	2
  1615  0000C5                     sprintf@f:
  1616                           	opt stack 0
  1617                           
  1618                           ; 2 bytes @ 0x65
  1619  0000C5                     	ds	6
  1620  0000CB                     ??_sprintf:
  1621                           
  1622                           ; 0 bytes @ 0x6B
  1623  0000CB                     	ds	2
  1624  0000CD                     tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           
  1631                           ; 0 bytes @ 0x6D
  1632                           
  1633                           	psect	cstackCOMRAM
  1634  00002A                     __pcstackCOMRAM:
  1635                           	opt stack 0
  1636  00002A                     ??_ISR_bassa:
  1637  00002A                     
  1638                           ; 1 bytes @ 0x0
  1639  00002A                     	ds	17
  1640  00003B                     _CANisRxReady$3253:
  1641                           	opt stack 0
  1642  00003B                     i2_CANisTxReady$3251:
  1643                           	opt stack 0
  1644  00003B                     CANreceiveMessage@msg:
  1645                           	opt stack 0
  1646  00003B                     i2CANsendMessage@identifier:
  1647                           	opt stack 0
  1648                           
  1649                           ; 4 bytes @ 0x11
  1650  00003B                     	ds	2
  1651  00003D                     ??_CANreceiveMessage:
  1652                           
  1653                           ; 0 bytes @ 0x13
  1654  00003D                     	ds	2
  1655  00003F                     i2CANsendMessage@data:
  1656                           	opt stack 0
  1657                           
  1658                           ; 2 bytes @ 0x15
  1659  00003F                     	ds	2
  1660  000041                     i2CANsendMessage@dataLength:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x17
  1664  000041                     	ds	1
  1665  000042                     i2CANsendMessage@flags:
  1666                           	opt stack 0
  1667                           
  1668                           ; 1 bytes @ 0x18
  1669  000042                     	ds	1
  1670  000043                     ??i2_CANsendMessage:
  1671                           
  1672                           ; 0 bytes @ 0x19
  1673  000043                     	ds	2
  1674  000045                     CANreceiveMessage@error:
  1675                           	opt stack 0
  1676                           
  1677                           ; 1 bytes @ 0x1B
  1678  000045                     	ds	1
  1679  000046                     CANreceiveMessage@tamp:
  1680                           	opt stack 0
  1681                           
  1682                           ; 1 bytes @ 0x1C
  1683  000046                     	ds	1
  1684  000047                     i2CANsendMessage@tamp:
  1685                           	opt stack 0
  1686                           
  1687                           ; 4 bytes @ 0x1D
  1688  000047                     	ds	4
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 196 in file "RemoteCan.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;Total ram usage:        8 bytes
  1720 ;; Hardware stack levels required when called:   11
  1721 ;; This function calls:
  1722 ;;		_CAN_Rx
  1723 ;;		_CAN_Tx
  1724 ;;		_CANisTxReady
  1725 ;;		_CANsendMessage
  1726 ;;		_F1_Button_Polling
  1727 ;;		_F2_Button_Polling
  1728 ;;		_Joystick_Polling
  1729 ;;		_LCD_End
  1730 ;;		_LCD_Gap
  1731 ;;		_LCD_Handler
  1732 ;;		_LCD_Park
  1733 ;;		_LCD_Parking
  1734 ;;		_LCD_goto_line
  1735 ;;		_LCD_initialize
  1736 ;;		_LCD_write_message
  1737 ;;		_PWR_Button_Polling
  1738 ;;		___fladd
  1739 ;;		___flmul
  1740 ;;		___flneg
  1741 ;;		___fltol
  1742 ;;		___xxtofl
  1743 ;;		_board_initialization
  1744 ;;		_delay_ms
  1745 ;; This function is called by:
  1746 ;;		Startup code after reset
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text0
  1751  011B26                     __ptext0:
  1752                           	opt stack 0
  1753  011B26                     _main:
  1754                           	opt stack 20
  1755                           
  1756                           ;RemoteCan.c: 197: board_initialization();
  1757                           
  1758                           ;incstack = 0
  1759  011B26  ECCB  F0AD         	call	_board_initialization	;wreg free
  1760                           
  1761                           ;RemoteCan.c: 205: JoystickConstants[0] = 0.703;
  1762  011B2A  0ECF               	movlw	207
  1763  011B2C  0100               	movlb	0	; () banked
  1764  011B2E  6FCD               	movwf	_JoystickConstants& (0+255),b	;volatile
  1765  011B30  0EF7               	movlw	247
  1766  011B32  6FCE               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1767  011B34  0E33               	movlw	51
  1768  011B36  6FCF               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1769  011B38  0E3F               	movlw	63
  1770  011B3A  6FD0               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;RemoteCan.c: 206: JoystickConstants[1] = 15;
  1774  011B3C  0E00               	movlw	0
  1775  011B3E  0100               	movlb	0	; () banked
  1776  011B40  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1777  011B42  0E00               	movlw	0
  1778  011B44  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1779  011B46  0E70               	movlw	112
  1780  011B48  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1781  011B4A  0E41               	movlw	65
  1782  011B4C  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;RemoteCan.c: 208: data_brake [1] = 0;
  1786  011B4E  0E00               	movlw	0
  1787  011B50  0100               	movlb	0	; () banked
  1788  011B52  6FEB               	movwf	(_data_brake+1)& (0+255),b
  1789  011B54                     l9631:
  1790                           
  1791                           ;RemoteCan.c: 213: PWR_Button_Polling();
  1792  011B54  EC0D  F0B2         	call	_PWR_Button_Polling	;wreg free
  1793                           
  1794                           ;RemoteCan.c: 214: F1_Button_Polling();
  1795  011B58  EC37  F0B2         	call	_F1_Button_Polling	;wreg free
  1796                           
  1797                           ;RemoteCan.c: 215: F2_Button_Polling();
  1798  011B5C  EC29  F0B2         	call	_F2_Button_Polling	;wreg free
  1799                           
  1800                           ;RemoteCan.c: 218: if (power_switch == 0) {
  1801  011B60  B44C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1802  011B62  D09A               	goto	l804
  1803                           
  1804                           ;RemoteCan.c: 219: dir = 1;
  1805  011B64  0E01               	movlw	1
  1806  011B66  0100               	movlb	0	; () banked
  1807  011B68  6FE5               	movwf	_dir& (0+255),b	;volatile
  1808                           
  1809                           ;RemoteCan.c: 220: set_speed = 0;
  1810  011B6A  0E00               	movlw	0
  1811  011B6C  0100               	movlb	0	; () banked
  1812  011B6E  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1813  011B70  0E00               	movlw	0
  1814  011B72  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  1815                           
  1816                           ;RemoteCan.c: 221: data_steering [0] = 90;
  1817  011B74  0E5A               	movlw	90
  1818  011B76  0100               	movlb	0	; () banked
  1819  011B78  6FEC               	movwf	_data_steering& (0+255),b
  1820                           
  1821                           ;RemoteCan.c: 222: data_brake [0] = 3;
  1822  011B7A  0E03               	movlw	3
  1823  011B7C  0100               	movlb	0	; () banked
  1824  011B7E  6FEA               	movwf	_data_brake& (0+255),b
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;RemoteCan.c: 223: CAN_Tx();
  1828  011B80  EC17  F0AD         	call	_CAN_Tx	;wreg free
  1829                           
  1830                           ;RemoteCan.c: 224: PORTDbits.RD6 = 0;
  1831  011B84  9C83               	bcf	3971,6,c	;volatile
  1832                           
  1833                           ;RemoteCan.c: 225: PORTDbits.RD5 = 0;
  1834  011B86  9A83               	bcf	3971,5,c	;volatile
  1835                           
  1836                           ;RemoteCan.c: 226: LCD_initialize(16);
  1837  011B88  0E10               	movlw	16
  1838  011B8A  EC48  F0AA         	call	_LCD_initialize
  1839                           
  1840                           ;RemoteCan.c: 227: LCD_goto_line(1);
  1841  011B8E  0E01               	movlw	1
  1842  011B90  EC85  F0AB         	call	_LCD_goto_line
  1843                           
  1844                           ;RemoteCan.c: 228: LCD_write_message("====================");
  1845  011B94  0E7F               	movlw	low STR_1
  1846  011B96  0100               	movlb	0	; () banked
  1847  011B98  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1848  011B9A  0EFF               	movlw	high STR_1
  1849  011B9C  0100               	movlb	0	; () banked
  1850  011B9E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1851  011BA0  EC67  F0B1         	call	_LCD_write_message	;wreg free
  1852                           
  1853                           ;RemoteCan.c: 229: LCD_goto_line(2);
  1854  011BA4  0E02               	movlw	2
  1855  011BA6  EC85  F0AB         	call	_LCD_goto_line
  1856                           
  1857                           ;RemoteCan.c: 230: LCD_write_message("==> VEHICLE  OFF <==");
  1858  011BAA  0E55               	movlw	low STR_2
  1859  011BAC  0100               	movlb	0	; () banked
  1860  011BAE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1861  011BB0  0EFF               	movlw	high STR_2
  1862  011BB2  0100               	movlb	0	; () banked
  1863  011BB4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1864  011BB6  EC67  F0B1         	call	_LCD_write_message	;wreg free
  1865                           
  1866                           ;RemoteCan.c: 231: LCD_goto_line(3);
  1867  011BBA  0E03               	movlw	3
  1868  011BBC  EC85  F0AB         	call	_LCD_goto_line
  1869                           
  1870                           ;RemoteCan.c: 232: LCD_write_message("  Press the button  ");
  1871  011BC0  0E98               	movlw	low STR_3
  1872  011BC2  0100               	movlb	0	; () banked
  1873  011BC4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1874  011BC6  0EFE               	movlw	high STR_3
  1875  011BC8  0100               	movlb	0	; () banked
  1876  011BCA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1877  011BCC  EC67  F0B1         	call	_LCD_write_message	;wreg free
  1878                           
  1879                           ;RemoteCan.c: 233: LCD_goto_line(4);
  1880  011BD0  0E04               	movlw	4
  1881  011BD2  EC85  F0AB         	call	_LCD_goto_line
  1882                           
  1883                           ;RemoteCan.c: 234: LCD_write_message("====================");
  1884  011BD6  0E7F               	movlw	low STR_1
  1885  011BD8  0100               	movlb	0	; () banked
  1886  011BDA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1887  011BDC  0EFF               	movlw	high STR_1
  1888  011BDE  0100               	movlb	0	; () banked
  1889  011BE0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1890  011BE2  EC67  F0B1         	call	_LCD_write_message	;wreg free
  1891                           
  1892                           ;RemoteCan.c: 235: while (power_switch == 0) {
  1893  011BE6  D054               	goto	l9675
  1894  011BE8                     l9665:
  1895                           
  1896                           ;RemoteCan.c: 236: if ((time_counter - pr_time_1) >= 30) {
  1897  011BE8  C0D9  F149         	movff	_pr_time_1,??_main	;volatile
  1898  011BEC  C0DA  F14A         	movff	_pr_time_1+1,??_main+1	;volatile
  1899  011BF0  C0DB  F14B         	movff	_pr_time_1+2,??_main+2	;volatile
  1900  011BF4  C0DC  F14C         	movff	_pr_time_1+3,??_main+3	;volatile
  1901  011BF8  0101               	movlb	1	; () banked
  1902  011BFA  1F49               	comf	??_main& (0+255),f,b
  1903  011BFC  1F4A               	comf	(??_main+1)& (0+255),f,b
  1904  011BFE  1F4B               	comf	(??_main+2)& (0+255),f,b
  1905  011C00  1F4C               	comf	(??_main+3)& (0+255),f,b
  1906  011C02  2B49               	incf	??_main& (0+255),f,b
  1907  011C04  0E00               	movlw	0
  1908  011C06  234A               	addwfc	(??_main+1)& (0+255),f,b
  1909  011C08  234B               	addwfc	(??_main+2)& (0+255),f,b
  1910  011C0A  234C               	addwfc	(??_main+3)& (0+255),f,b
  1911  011C0C  501D               	movf	_time_counter,w,c	;volatile
  1912  011C0E  0101               	movlb	1	; () banked
  1913  011C10  2549               	addwf	??_main& (0+255),w,b
  1914  011C12  0101               	movlb	1	; () banked
  1915  011C14  6F4D               	movwf	(??_main+4)& (0+255),b
  1916  011C16  501E               	movf	_time_counter+1,w,c	;volatile
  1917  011C18  0101               	movlb	1	; () banked
  1918  011C1A  214A               	addwfc	(??_main+1)& (0+255),w,b
  1919  011C1C  0101               	movlb	1	; () banked
  1920  011C1E  6F4E               	movwf	(??_main+5)& (0+255),b
  1921  011C20  501F               	movf	_time_counter+2,w,c	;volatile
  1922  011C22  0101               	movlb	1	; () banked
  1923  011C24  214B               	addwfc	(??_main+2)& (0+255),w,b
  1924  011C26  0101               	movlb	1	; () banked
  1925  011C28  6F4F               	movwf	(??_main+6)& (0+255),b
  1926  011C2A  5020               	movf	_time_counter+3,w,c	;volatile
  1927  011C2C  0101               	movlb	1	; () banked
  1928  011C2E  214C               	addwfc	(??_main+3)& (0+255),w,b
  1929  011C30  0101               	movlb	1	; () banked
  1930  011C32  6F50               	movwf	(??_main+7)& (0+255),b
  1931  011C34  0101               	movlb	1	; () banked
  1932  011C36  5150               	movf	(??_main+7)& (0+255),w,b
  1933  011C38  0101               	movlb	1	; () banked
  1934  011C3A  114F               	iorwf	(??_main+6)& (0+255),w,b
  1935  011C3C  0101               	movlb	1	; () banked
  1936  011C3E  114E               	iorwf	(??_main+5)& (0+255),w,b
  1937  011C40  E105               	bnz	u12960
  1938  011C42  0E1E               	movlw	30
  1939  011C44  0101               	movlb	1	; () banked
  1940  011C46  5D4D               	subwf	(??_main+4)& (0+255),w,b
  1941  011C48  A0D8               	btfss	status,0,c
  1942  011C4A  D019               	goto	l9671
  1943  011C4C                     u12960:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;RemoteCan.c: 237: pr_time_1 = time_counter;
  1947  011C4C  C01D  F0D9         	movff	_time_counter,_pr_time_1	;volatile
  1948  011C50  C01E  F0DA         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1949  011C54  C01F  F0DB         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1950  011C58  C020  F0DC         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;RemoteCan.c: 238: PORTDbits.RD7 = ~PORTDbits.RD7;
  1954  011C5C  AE83               	btfss	3971,7,c	;volatile
  1955  011C5E  D002               	goto	u12970
  1956  011C60  0E01               	movlw	1
  1957  011C62  D001               	goto	u12976
  1958  011C64                     u12970:
  1959  011C64  0E00               	movlw	0
  1960  011C66                     u12976:
  1961  011C66  0AFF               	xorlw	255
  1962  011C68  0101               	movlb	1	; () banked
  1963  011C6A  6F49               	movwf	??_main& (0+255),b
  1964  011C6C  0101               	movlb	1	; () banked
  1965  011C6E  3349               	rrcf	??_main& (0+255),f,b
  1966  011C70  3349               	rrcf	??_main& (0+255),f,b
  1967  011C72  5083               	movf	3971,w,c	;volatile
  1968  011C74  0101               	movlb	1	; () banked
  1969  011C76  1949               	xorwf	??_main& (0+255),w,b
  1970  011C78  0B7F               	andlw	-129
  1971  011C7A  1949               	xorwf	??_main& (0+255),w,b
  1972  011C7C  6E83               	movwf	3971,c	;volatile
  1973  011C7E                     l9671:
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;RemoteCan.c: 239: }
  1977                           ;RemoteCan.c: 240: PWR_Button_Polling();
  1978  011C7E  EC0D  F0B2         	call	_PWR_Button_Polling	;wreg free
  1979                           
  1980                           ;RemoteCan.c: 241: delay_ms(10);
  1981  011C82  0E00               	movlw	0
  1982  011C84  0100               	movlb	0	; () banked
  1983  011C86  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1984  011C88  0E0A               	movlw	10
  1985  011C8A  6F77               	movwf	delay_ms@value_ms& (0+255),b
  1986  011C8C  EC13  F0B1         	call	_delay_ms	;wreg free
  1987  011C90                     l9675:
  1988  011C90  A44C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1989  011C92  D7AA               	goto	l9665
  1990                           
  1991                           ;RemoteCan.c: 242: }
  1992                           ;RemoteCan.c: 243: PORTDbits.RD7 = 0;
  1993  011C94  9E83               	bcf	3971,7,c	;volatile
  1994                           
  1995                           ;RemoteCan.c: 244: display_refresh = 1;
  1996  011C96  8E4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1997  011C98                     l804:
  1998                           
  1999                           ;RemoteCan.c: 245: }
  2000                           ;RemoteCan.c: 248: if (PORTAbits.RA2 == 1) {
  2001  011C98  A480               	btfss	3968,2,c	;volatile
  2002  011C9A  D004               	goto	l809
  2003                           
  2004                           ;RemoteCan.c: 249: switch_position = 0;
  2005  011C9C  0E00               	movlw	0
  2006  011C9E  0100               	movlb	0	; () banked
  2007  011CA0  6FE9               	movwf	_switch_position& (0+255),b	;volatile
  2008                           
  2009                           ;RemoteCan.c: 250: } else {
  2010  011CA2  D00D               	goto	l9683
  2011  011CA4                     l809:
  2012                           
  2013                           ;RemoteCan.c: 251: if (PORTAbits.RA3 == 0) {
  2014  011CA4  B680               	btfsc	3968,3,c	;volatile
  2015  011CA6  D005               	goto	l9681
  2016                           
  2017                           ;RemoteCan.c: 252: switch_position = 1;
  2018  011CA8  0E01               	movlw	1
  2019  011CAA  0100               	movlb	0	; () banked
  2020  011CAC  6FE9               	movwf	_switch_position& (0+255),b	;volatile
  2021                           
  2022                           ;RemoteCan.c: 253: dir = 1;
  2023  011CAE  0E01               	movlw	1
  2024  011CB0  D004               	goto	L1
  2025  011CB2                     l9681:
  2026                           
  2027                           ;RemoteCan.c: 255: switch_position = 2;
  2028  011CB2  0E02               	movlw	2
  2029  011CB4  0100               	movlb	0	; () banked
  2030  011CB6  6FE9               	movwf	_switch_position& (0+255),b	;volatile
  2031                           
  2032                           ;RemoteCan.c: 256: dir = 0;
  2033  011CB8  0E00               	movlw	0
  2034  011CBA                     L1:
  2035  011CBA  0100               	movlb	0	; () banked
  2036  011CBC  6FE5               	movwf	_dir& (0+255),b	;volatile
  2037  011CBE                     l9683:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;RemoteCan.c: 257: }
  2041                           ;RemoteCan.c: 258: }
  2042                           ;RemoteCan.c: 261: if (F1_switch == 1) {
  2043  011CBE  A44B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2044  011CC0  D0C4               	goto	l813
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;RemoteCan.c: 262: y = 0;
  2048  011CC2  944D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2049                           
  2050                           ;RemoteCan.c: 263: if ((x == 0)&&(F2_switch == 0)) {
  2051  011CC4  A24D               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054  011CC6  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2055  011CC8  D02D               	goto	l9701
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;RemoteCan.c: 264: space_available = 0;
  2059  011CCA  964C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;RemoteCan.c: 265: parking_state = 1;
  2063  011CCC  0E01               	movlw	1
  2064  011CCE  0100               	movlb	0	; () banked
  2065  011CD0  6FE7               	movwf	_parking_state& (0+255),b	;volatile
  2066                           
  2067                           ;RemoteCan.c: 266: JoystickConstants[1] = 1;
  2068  011CD2  0E00               	movlw	0
  2069  011CD4  0100               	movlb	0	; () banked
  2070  011CD6  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2071  011CD8  0E00               	movlw	0
  2072  011CDA  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2073  011CDC  0E80               	movlw	128
  2074  011CDE  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2075  011CE0  0E3F               	movlw	63
  2076  011CE2  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2077  011CE4                     l9693:
  2078  011CE4  ECDB  F0B1         	call	_CANisTxReady	;wreg free
  2079  011CE8  0900               	iorlw	0
  2080  011CEA  B4D8               	btfsc	status,2,c
  2081  011CEC  D7FB               	goto	l9693
  2082                           
  2083                           ;RemoteCan.c: 268: park_assist_state[0] = 0b00000001;
  2084  011CEE  0E01               	movlw	1
  2085  011CF0  0101               	movlb	1	; () banked
  2086  011CF2  6F28               	movwf	_park_assist_state& (0+255),b
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;RemoteCan.c: 269: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2090  011CF4  0E0A               	movlw	10
  2091  011CF6  0100               	movlb	0	; () banked
  2092  011CF8  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2093  011CFA  0E00               	movlw	0
  2094  011CFC  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2095  011CFE  0E00               	movlw	0
  2096  011D00  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2097  011D02  0E00               	movlw	0
  2098  011D04  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2099  011D06  0E28               	movlw	low _park_assist_state
  2100  011D08  0100               	movlb	0	; () banked
  2101  011D0A  6F75               	movwf	CANsendMessage@data& (0+255),b
  2102  011D0C  0E01               	movlw	high _park_assist_state
  2103  011D0E  0100               	movlb	0	; () banked
  2104  011D10  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2105  011D12  0E08               	movlw	8
  2106  011D14  0100               	movlb	0	; () banked
  2107  011D16  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2108  011D18  0EBC               	movlw	188
  2109  011D1A  0100               	movlb	0	; () banked
  2110  011D1C  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2111  011D1E  ECCD  F089         	call	_CANsendMessage	;wreg free
  2112                           
  2113                           ;RemoteCan.c: 270: x = 1;
  2114  011D22  824D               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2115  011D24                     l9701:
  2116                           
  2117                           ;RemoteCan.c: 271: }
  2118                           ;RemoteCan.c: 273: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2119  011D24  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2120  011D26  A64C               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2121  011D28  D029               	goto	l818
  2122  011D2A  A84C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2123  011D2C  D027               	goto	l818
  2124                           
  2125                           ;RemoteCan.c: 274: if (z == 0) {
  2126  011D2E  B64D               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2127  011D30  D026               	goto	l9719
  2128                           
  2129                           ;RemoteCan.c: 275: parking_message_ID = 4;
  2130  011D32  0E04               	movlw	4
  2131  011D34  0100               	movlb	0	; () banked
  2132  011D36  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
  2133                           
  2134                           ;RemoteCan.c: 276: parking_state = 2;
  2135  011D38  0E02               	movlw	2
  2136  011D3A  0100               	movlb	0	; () banked
  2137  011D3C  6FE7               	movwf	_parking_state& (0+255),b	;volatile
  2138  011D3E                     l9711:
  2139  011D3E  ECDB  F0B1         	call	_CANisTxReady	;wreg free
  2140  011D42  0900               	iorlw	0
  2141  011D44  B4D8               	btfsc	status,2,c
  2142  011D46  D7FB               	goto	l9711
  2143                           
  2144                           ;RemoteCan.c: 278: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2145  011D48  0E0C               	movlw	12
  2146  011D4A  0100               	movlb	0	; () banked
  2147  011D4C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2148  011D4E  0E00               	movlw	0
  2149  011D50  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2150  011D52  0E00               	movlw	0
  2151  011D54  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2152  011D56  0E00               	movlw	0
  2153  011D58  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2154  011D5A  0E29               	movlw	low _data
  2155  011D5C  0100               	movlb	0	; () banked
  2156  011D5E  6F75               	movwf	CANsendMessage@data& (0+255),b
  2157  011D60  0E00               	movlw	high _data
  2158  011D62  0100               	movlb	0	; () banked
  2159  011D64  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2160  011D66  0E08               	movlw	8
  2161  011D68  0100               	movlb	0	; () banked
  2162  011D6A  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2163  011D6C  0EBC               	movlw	188
  2164  011D6E  0100               	movlb	0	; () banked
  2165  011D70  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2166  011D72  ECCD  F089         	call	_CANsendMessage	;wreg free
  2167                           
  2168                           ;RemoteCan.c: 279: x = 0;
  2169  011D76  924D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2170                           
  2171                           ;RemoteCan.c: 280: z = 1;
  2172  011D78  864D               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2173                           
  2174                           ;RemoteCan.c: 281: }
  2175                           ;RemoteCan.c: 282: } else {
  2176  011D7A  D001               	goto	l9719
  2177  011D7C                     l818:
  2178                           
  2179                           ;RemoteCan.c: 283: z = 0;
  2180  011D7C  964D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2181  011D7E                     l9719:
  2182                           
  2183                           ;RemoteCan.c: 284: }
  2184                           ;RemoteCan.c: 286: if ((time_counter - pr_time_5) >= 30) {
  2185  011D7E  C015  F149         	movff	_pr_time_5,??_main	;volatile
  2186  011D82  C016  F14A         	movff	_pr_time_5+1,??_main+1	;volatile
  2187  011D86  C017  F14B         	movff	_pr_time_5+2,??_main+2	;volatile
  2188  011D8A  C018  F14C         	movff	_pr_time_5+3,??_main+3	;volatile
  2189  011D8E  0101               	movlb	1	; () banked
  2190  011D90  1F49               	comf	??_main& (0+255),f,b
  2191  011D92  1F4A               	comf	(??_main+1)& (0+255),f,b
  2192  011D94  1F4B               	comf	(??_main+2)& (0+255),f,b
  2193  011D96  1F4C               	comf	(??_main+3)& (0+255),f,b
  2194  011D98  2B49               	incf	??_main& (0+255),f,b
  2195  011D9A  0E00               	movlw	0
  2196  011D9C  234A               	addwfc	(??_main+1)& (0+255),f,b
  2197  011D9E  234B               	addwfc	(??_main+2)& (0+255),f,b
  2198  011DA0  234C               	addwfc	(??_main+3)& (0+255),f,b
  2199  011DA2  501D               	movf	_time_counter,w,c	;volatile
  2200  011DA4  0101               	movlb	1	; () banked
  2201  011DA6  2549               	addwf	??_main& (0+255),w,b
  2202  011DA8  0101               	movlb	1	; () banked
  2203  011DAA  6F4D               	movwf	(??_main+4)& (0+255),b
  2204  011DAC  501E               	movf	_time_counter+1,w,c	;volatile
  2205  011DAE  0101               	movlb	1	; () banked
  2206  011DB0  214A               	addwfc	(??_main+1)& (0+255),w,b
  2207  011DB2  0101               	movlb	1	; () banked
  2208  011DB4  6F4E               	movwf	(??_main+5)& (0+255),b
  2209  011DB6  501F               	movf	_time_counter+2,w,c	;volatile
  2210  011DB8  0101               	movlb	1	; () banked
  2211  011DBA  214B               	addwfc	(??_main+2)& (0+255),w,b
  2212  011DBC  0101               	movlb	1	; () banked
  2213  011DBE  6F4F               	movwf	(??_main+6)& (0+255),b
  2214  011DC0  5020               	movf	_time_counter+3,w,c	;volatile
  2215  011DC2  0101               	movlb	1	; () banked
  2216  011DC4  214C               	addwfc	(??_main+3)& (0+255),w,b
  2217  011DC6  0101               	movlb	1	; () banked
  2218  011DC8  6F50               	movwf	(??_main+7)& (0+255),b
  2219  011DCA  0101               	movlb	1	; () banked
  2220  011DCC  5150               	movf	(??_main+7)& (0+255),w,b
  2221  011DCE  0101               	movlb	1	; () banked
  2222  011DD0  114F               	iorwf	(??_main+6)& (0+255),w,b
  2223  011DD2  0101               	movlb	1	; () banked
  2224  011DD4  114E               	iorwf	(??_main+5)& (0+255),w,b
  2225  011DD6  E105               	bnz	u13100
  2226  011DD8  0E1E               	movlw	30
  2227  011DDA  0101               	movlb	1	; () banked
  2228  011DDC  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2229  011DDE  A0D8               	btfss	status,0,c
  2230  011DE0  D06C               	goto	l9743
  2231  011DE2                     u13100:
  2232                           
  2233                           ; BSR set to: 1
  2234                           ;RemoteCan.c: 287: pr_time_5 = time_counter;
  2235  011DE2  C01D  F015         	movff	_time_counter,_pr_time_5	;volatile
  2236  011DE6  C01E  F016         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2237  011DEA  C01F  F017         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2238  011DEE  C020  F018         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2239                           
  2240                           ;RemoteCan.c: 288: if (space_available == 0) {
  2241  011DF2  B64C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2242  011DF4  D013               	goto	l825
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;RemoteCan.c: 289: PORTDbits.RD6 = ~PORTDbits.RD6;
  2246  011DF6  AC83               	btfss	3971,6,c	;volatile
  2247  011DF8  D002               	goto	u13120
  2248  011DFA  0E01               	movlw	1
  2249  011DFC  D001               	goto	u13126
  2250  011DFE                     u13120:
  2251  011DFE  0E00               	movlw	0
  2252  011E00                     u13126:
  2253  011E00  0AFF               	xorlw	255
  2254  011E02  0101               	movlb	1	; () banked
  2255  011E04  6F49               	movwf	??_main& (0+255),b
  2256  011E06  0101               	movlb	1	; () banked
  2257  011E08  3B49               	swapf	??_main& (0+255),f,b
  2258  011E0A  4749               	rlncf	??_main& (0+255),f,b
  2259  011E0C  4749               	rlncf	??_main& (0+255),f,b
  2260  011E0E  5083               	movf	3971,w,c	;volatile
  2261  011E10  0101               	movlb	1	; () banked
  2262  011E12  1949               	xorwf	??_main& (0+255),w,b
  2263  011E14  0BBF               	andlw	-65
  2264  011E16  1949               	xorwf	??_main& (0+255),w,b
  2265  011E18  6E83               	movwf	3971,c	;volatile
  2266  011E1A  D04E               	goto	l9741
  2267  011E1C                     l825:
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;RemoteCan.c: 292: PORTDbits.RD6 = 1;
  2271  011E1C  8C83               	bsf	3971,6,c	;volatile
  2272                           
  2273                           ;RemoteCan.c: 293: if (F2_switch == 0) {
  2274  011E1E  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2275  011E20  D012               	goto	l827
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;RemoteCan.c: 294: PORTDbits.RD5 = ~PORTDbits.RD5;
  2279  011E22  AA83               	btfss	3971,5,c	;volatile
  2280  011E24  D002               	goto	u13140
  2281  011E26  0E01               	movlw	1
  2282  011E28  D001               	goto	u13146
  2283  011E2A                     u13140:
  2284  011E2A  0E00               	movlw	0
  2285  011E2C                     u13146:
  2286  011E2C  0AFF               	xorlw	255
  2287  011E2E  0101               	movlb	1	; () banked
  2288  011E30  6F49               	movwf	??_main& (0+255),b
  2289  011E32  0101               	movlb	1	; () banked
  2290  011E34  3B49               	swapf	??_main& (0+255),f,b
  2291  011E36  4749               	rlncf	??_main& (0+255),f,b
  2292  011E38  5083               	movf	3971,w,c	;volatile
  2293  011E3A  0101               	movlb	1	; () banked
  2294  011E3C  1949               	xorwf	??_main& (0+255),w,b
  2295  011E3E  0BDF               	andlw	-33
  2296  011E40  1949               	xorwf	??_main& (0+255),w,b
  2297  011E42  6E83               	movwf	3971,c	;volatile
  2298                           
  2299                           ;RemoteCan.c: 295: } else {
  2300  011E44  D03A               	goto	l9743
  2301  011E46                     l827:
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;RemoteCan.c: 296: PORTDbits.RD5 = 1;
  2305  011E46  8A83               	bsf	3971,5,c	;volatile
  2306                           
  2307                           ; BSR set to: 1
  2308                           ;RemoteCan.c: 298: }
  2309                           ;RemoteCan.c: 299: }
  2310                           ;RemoteCan.c: 300: }
  2311                           ;RemoteCan.c: 301: } else {
  2312                           
  2313                           ; BSR set to: 1
  2314                           
  2315                           ; BSR set to: 1
  2316  011E48  D038               	goto	l9743
  2317  011E4A                     l813:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;RemoteCan.c: 302: x = 0;
  2321  011E4A  924D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2322                           
  2323                           ;RemoteCan.c: 303: z = 0;
  2324  011E4C  964D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2325                           
  2326                           ;RemoteCan.c: 304: parking_message_E = 0;
  2327  011E4E  924C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2328                           
  2329                           ;RemoteCan.c: 305: F2_switch = 0;
  2330  011E50  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2331                           
  2332                           ;RemoteCan.c: 306: space_available = 0;
  2333  011E52  964C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2334                           
  2335                           ;RemoteCan.c: 307: space_gap_reached = 0;
  2336  011E54  984C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2337                           
  2338                           ;RemoteCan.c: 308: PORTDbits.RD5 = 0;
  2339  011E56  9A83               	bcf	3971,5,c	;volatile
  2340                           
  2341                           ;RemoteCan.c: 309: PORTDbits.RD6 = 0;
  2342  011E58  9C83               	bcf	3971,6,c	;volatile
  2343                           
  2344                           ;RemoteCan.c: 310: if (y == 0) {
  2345  011E5A  B44D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2346  011E5C  D02C               	goto	l9739
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;RemoteCan.c: 311: parking_state = 0;
  2350  011E5E  0E00               	movlw	0
  2351  011E60  0100               	movlb	0	; () banked
  2352  011E62  6FE7               	movwf	_parking_state& (0+255),b	;volatile
  2353                           
  2354                           ;RemoteCan.c: 312: JoystickConstants[1] = 15;
  2355  011E64  0E00               	movlw	0
  2356  011E66  0100               	movlb	0	; () banked
  2357  011E68  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2358  011E6A  0E00               	movlw	0
  2359  011E6C  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2360  011E6E  0E70               	movlw	112
  2361  011E70  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2362  011E72  0E41               	movlw	65
  2363  011E74  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2364  011E76                     l9731:
  2365  011E76  ECDB  F0B1         	call	_CANisTxReady	;wreg free
  2366  011E7A  0900               	iorlw	0
  2367  011E7C  B4D8               	btfsc	status,2,c
  2368  011E7E  D7FB               	goto	l9731
  2369                           
  2370                           ;RemoteCan.c: 314: park_assist_state[0] = 0b00000000;
  2371  011E80  0E00               	movlw	0
  2372  011E82  0101               	movlb	1	; () banked
  2373  011E84  6F28               	movwf	_park_assist_state& (0+255),b
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;RemoteCan.c: 315: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2377  011E86  0E0A               	movlw	10
  2378  011E88  0100               	movlb	0	; () banked
  2379  011E8A  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2380  011E8C  0E00               	movlw	0
  2381  011E8E  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2382  011E90  0E00               	movlw	0
  2383  011E92  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2384  011E94  0E00               	movlw	0
  2385  011E96  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2386  011E98  0E28               	movlw	low _park_assist_state
  2387  011E9A  0100               	movlb	0	; () banked
  2388  011E9C  6F75               	movwf	CANsendMessage@data& (0+255),b
  2389  011E9E  0E01               	movlw	high _park_assist_state
  2390  011EA0  0100               	movlb	0	; () banked
  2391  011EA2  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2392  011EA4  0E08               	movlw	8
  2393  011EA6  0100               	movlb	0	; () banked
  2394  011EA8  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2395  011EAA  0EBC               	movlw	188
  2396  011EAC  0100               	movlb	0	; () banked
  2397  011EAE  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2398  011EB0  ECCD  F089         	call	_CANsendMessage	;wreg free
  2399                           
  2400                           ;RemoteCan.c: 316: y = 1;
  2401  011EB4  844D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2402  011EB6                     l9739:
  2403                           
  2404                           ;RemoteCan.c: 317: }
  2405                           ;RemoteCan.c: 318: PORTDbits.RD6 = 0;
  2406  011EB6  9C83               	bcf	3971,6,c	;volatile
  2407  011EB8                     l9741:
  2408                           
  2409                           ;RemoteCan.c: 319: PORTDbits.RD5 = 0;
  2410  011EB8  9A83               	bcf	3971,5,c	;volatile
  2411  011EBA                     l9743:
  2412                           
  2413                           ;RemoteCan.c: 320: }
  2414                           ;RemoteCan.c: 322: Joystick_Polling();
  2415  011EBA  EC3B  F0B0         	call	_Joystick_Polling	;wreg free
  2416                           
  2417                           ;RemoteCan.c: 325: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2418  011EBE  0E00               	movlw	0
  2419  011EC0  0100               	movlb	0	; () banked
  2420  011EC2  6FA9               	movwf	___fladd@a& (0+255),b
  2421  011EC4  0E00               	movlw	0
  2422  011EC6  6FAA               	movwf	(___fladd@a+1)& (0+255),b
  2423  011EC8  0E34               	movlw	52
  2424  011ECA  6FAB               	movwf	(___fladd@a+2)& (0+255),b
  2425  011ECC  0E43               	movlw	67
  2426  011ECE  6FAC               	movwf	(___fladd@a+3)& (0+255),b
  2427  011ED0  C0CD  F083         	movff	_JoystickConstants,___flmul@a	;volatile
  2428  011ED4  C0CE  F084         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2429  011ED8  C0CF  F085         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2430  011EDC  C0D0  F086         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2431  011EE0  0100               	movlb	0	; () banked
  2432  011EE2  51DD               	movf	_JoystickValues& (0+255),w,b	;volatile
  2433  011EE4  0100               	movlb	0	; () banked
  2434  011EE6  6F71               	movwf	___xxtofl@val& (0+255),b
  2435  011EE8  6B72               	clrf	(___xxtofl@val+1)& (0+255),b
  2436  011EEA  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  2437  011EEC  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  2438  011EEE  0E00               	movlw	0
  2439  011EF0  EC6C  F0A4         	call	___xxtofl
  2440  011EF4  C071  F07F         	movff	?___xxtofl,___flmul@b
  2441  011EF8  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2442  011EFC  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2443  011F00  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2444  011F04  ECF1  F09B         	call	___flmul	;wreg free
  2445  011F08  C07F  F098         	movff	?___flmul,___flneg@f1
  2446  011F0C  C080  F099         	movff	?___flmul+1,___flneg@f1+1
  2447  011F10  C081  F09A         	movff	?___flmul+2,___flneg@f1+2
  2448  011F14  C082  F09B         	movff	?___flmul+3,___flneg@f1+3
  2449  011F18  EC30  F0B1         	call	___flneg	;wreg free
  2450  011F1C  C098  F0A5         	movff	?___flneg,___fladd@b
  2451  011F20  C099  F0A6         	movff	?___flneg+1,___fladd@b+1
  2452  011F24  C09A  F0A7         	movff	?___flneg+2,___fladd@b+2
  2453  011F28  C09B  F0A8         	movff	?___flneg+3,___fladd@b+3
  2454  011F2C  EC9D  F099         	call	___fladd	;wreg free
  2455  011F30  C0A5  F0B9         	movff	?___fladd,___fltol@f1
  2456  011F34  C0A6  F0BA         	movff	?___fladd+1,___fltol@f1+1
  2457  011F38  C0A7  F0BB         	movff	?___fladd+2,___fltol@f1+2
  2458  011F3C  C0A8  F0BC         	movff	?___fladd+3,___fltol@f1+3
  2459  011F40  ECFF  F0AA         	call	___fltol	;wreg free
  2460  011F44  0100               	movlb	0	; () banked
  2461  011F46  51B9               	movf	?___fltol& (0+255),w,b
  2462  011F48  0100               	movlb	0	; () banked
  2463  011F4A  6FEC               	movwf	_data_steering& (0+255),b
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;RemoteCan.c: 326: if (parking_state == 1) {
  2467  011F4C  0100               	movlb	0	; () banked
  2468  011F4E  05E7               	decf	_parking_state& (0+255),w,b	;volatile
  2469  011F50  A4D8               	btfss	status,2,c
  2470  011F52  D05C               	goto	l834
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;RemoteCan.c: 327: if (steering_correction_dir == 1) {
  2474  011F54  AA4C               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2475  011F56  D00F               	goto	l9753
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;RemoteCan.c: 328: check = data_steering[0] + steering_correction;
  2479  011F58  0100               	movlb	0	; () banked
  2480  011F5A  51E8               	movf	_steering_correction& (0+255),w,b	;volatile
  2481  011F5C  C0EC  F149         	movff	_data_steering,??_main
  2482  011F60  0101               	movlb	1	; () banked
  2483  011F62  6B4A               	clrf	(??_main+1)& (0+255),b
  2484  011F64  0101               	movlb	1	; () banked
  2485  011F66  2749               	addwf	??_main& (0+255),f,b
  2486  011F68  0E00               	movlw	0
  2487  011F6A  234A               	addwfc	(??_main+1)& (0+255),f,b
  2488  011F6C  C149  F0D5         	movff	??_main,_check	;volatile
  2489  011F70  C14A  F0D6         	movff	??_main+1,_check+1	;volatile
  2490  011F74  D01B               	goto	L2
  2491  011F76                     l9753:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;RemoteCan.c: 330: check = data_steering[0] - steering_correction;
  2495  011F76  0100               	movlb	0	; () banked
  2496  011F78  51E8               	movf	_steering_correction& (0+255),w,b	;volatile
  2497  011F7A  0101               	movlb	1	; () banked
  2498  011F7C  6F49               	movwf	??_main& (0+255),b
  2499  011F7E  6B4A               	clrf	(??_main+1)& (0+255),b
  2500  011F80  0101               	movlb	1	; () banked
  2501  011F82  1F49               	comf	??_main& (0+255),f,b
  2502  011F84  1F4A               	comf	(??_main+1)& (0+255),f,b
  2503  011F86  4B49               	infsnz	??_main& (0+255),f,b
  2504  011F88  2B4A               	incf	(??_main+1)& (0+255),f,b
  2505  011F8A  0100               	movlb	0	; () banked
  2506  011F8C  51EC               	movf	_data_steering& (0+255),w,b
  2507  011F8E  0101               	movlb	1	; () banked
  2508  011F90  6F4B               	movwf	(??_main+2)& (0+255),b
  2509  011F92  6B4C               	clrf	(??_main+3)& (0+255),b
  2510  011F94  0101               	movlb	1	; () banked
  2511  011F96  5149               	movf	??_main& (0+255),w,b
  2512  011F98  0101               	movlb	1	; () banked
  2513  011F9A  274B               	addwf	(??_main+2)& (0+255),f,b
  2514  011F9C  0101               	movlb	1	; () banked
  2515  011F9E  514A               	movf	(??_main+1)& (0+255),w,b
  2516  011FA0  0101               	movlb	1	; () banked
  2517  011FA2  234C               	addwfc	(??_main+3)& (0+255),f,b
  2518  011FA4  C14B  F0D5         	movff	??_main+2,_check	;volatile
  2519  011FA8  C14C  F0D6         	movff	??_main+3,_check+1	;volatile
  2520  011FAC                     L2:
  2521  011FAC  0100               	movlb	0	; () banked
  2522  011FAE  0E00               	movlw	0
  2523  011FB0  BFD6               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2524  011FB2  0EFF               	movlw	-1
  2525  011FB4  6FD7               	movwf	(_check+2)& (0+255),b	;volatile
  2526  011FB6  6FD8               	movwf	(_check+3)& (0+255),b	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;RemoteCan.c: 331: }
  2530                           ;RemoteCan.c: 332: if ((check >= 0)&&(check <= 180)) {
  2531  011FB8  0100               	movlb	0	; () banked
  2532  011FBA  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2533  011FBC  D012               	goto	l9759
  2534                           
  2535                           ; BSR set to: 0
  2536  011FBE  0100               	movlb	0	; () banked
  2537  011FC0  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2538  011FC2  D00C               	goto	l9757
  2539  011FC4  0100               	movlb	0	; () banked
  2540  011FC6  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  2541  011FC8  0100               	movlb	0	; () banked
  2542  011FCA  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2543  011FCC  0100               	movlb	0	; () banked
  2544  011FCE  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2545  011FD0  E108               	bnz	l9759
  2546  011FD2  0EB5               	movlw	181
  2547  011FD4  0100               	movlb	0	; () banked
  2548  011FD6  5DD5               	subwf	_check& (0+255),w,b	;volatile
  2549  011FD8  B0D8               	btfsc	status,0,c
  2550  011FDA  D003               	goto	l9759
  2551  011FDC                     l9757:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;RemoteCan.c: 333: data_steering[0] = check;
  2555  011FDC  C0D5  F0EC         	movff	_check,_data_steering	;volatile
  2556                           
  2557                           ;RemoteCan.c: 334: } else {
  2558  011FE0  D019               	goto	l841
  2559  011FE2                     l9759:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;RemoteCan.c: 335: if (check > 180) {
  2563  011FE2  0100               	movlb	0	; () banked
  2564  011FE4  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2565  011FE6  D00E               	goto	l9763
  2566  011FE8  0100               	movlb	0	; () banked
  2567  011FEA  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  2568  011FEC  0100               	movlb	0	; () banked
  2569  011FEE  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2570  011FF0  0100               	movlb	0	; () banked
  2571  011FF2  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2572  011FF4  E105               	bnz	u13210
  2573  011FF6  0EB5               	movlw	181
  2574  011FF8  0100               	movlb	0	; () banked
  2575  011FFA  5DD5               	subwf	_check& (0+255),w,b	;volatile
  2576  011FFC  A0D8               	btfss	status,0,c
  2577  011FFE  D002               	goto	l9763
  2578  012000                     u13210:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;RemoteCan.c: 336: data_steering[0] = 180;
  2582  012000  0EB4               	movlw	180
  2583  012002  D001               	goto	L3
  2584  012004                     l9763:
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;RemoteCan.c: 338: data_steering[0] = 0;
  2588  012004  0E00               	movlw	0
  2589  012006                     L3:
  2590  012006  0100               	movlb	0	; () banked
  2591  012008  6FEC               	movwf	_data_steering& (0+255),b
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;RemoteCan.c: 339: }
  2595                           ;RemoteCan.c: 340: }
  2596                           ;RemoteCan.c: 341: } else {
  2597                           
  2598                           ; BSR set to: 0
  2599  01200A  D004               	goto	l841
  2600  01200C                     l834:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;RemoteCan.c: 342: steering_correction_dir = 0;
  2604  01200C  9A4C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;RemoteCan.c: 343: steering_correction = 0;
  2608  01200E  0E00               	movlw	0
  2609  012010  0100               	movlb	0	; () banked
  2610  012012  6FE8               	movwf	_steering_correction& (0+255),b	;volatile
  2611  012014                     l841:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;RemoteCan.c: 344: }
  2615                           ;RemoteCan.c: 347: if (switch_position != 0) {
  2616  012014  0100               	movlb	0	; () banked
  2617  012016  51E9               	movf	_switch_position& (0+255),w,b	;volatile
  2618  012018  B4D8               	btfsc	status,2,c
  2619  01201A  D061               	goto	l9787
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;RemoteCan.c: 348: if (JoystickValues[1] > 132) {
  2623  01201C  0E84               	movlw	132
  2624  01201E  0100               	movlb	0	; () banked
  2625  012020  65DE               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2626  012022  D042               	goto	l9773
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;RemoteCan.c: 349: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2630  012024  C0D1  F083         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2631  012028  C0D2  F084         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2632  01202C  C0D3  F085         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2633  012030  C0D4  F086         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2634  012034  0E7E               	movlw	126
  2635  012036  0101               	movlb	1	; () banked
  2636  012038  6F49               	movwf	??_main& (0+255),b
  2637  01203A  0EFF               	movlw	255
  2638  01203C  0101               	movlb	1	; () banked
  2639  01203E  6F4A               	movwf	(??_main+1)& (0+255),b
  2640  012040  0100               	movlb	0	; () banked
  2641  012042  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2642  012044  0101               	movlb	1	; () banked
  2643  012046  6F4B               	movwf	(??_main+2)& (0+255),b
  2644  012048  6B4C               	clrf	(??_main+3)& (0+255),b
  2645  01204A  0101               	movlb	1	; () banked
  2646  01204C  5149               	movf	??_main& (0+255),w,b
  2647  01204E  0101               	movlb	1	; () banked
  2648  012050  274B               	addwf	(??_main+2)& (0+255),f,b
  2649  012052  0101               	movlb	1	; () banked
  2650  012054  514A               	movf	(??_main+1)& (0+255),w,b
  2651  012056  0101               	movlb	1	; () banked
  2652  012058  234C               	addwfc	(??_main+3)& (0+255),f,b
  2653  01205A  C14B  F071         	movff	??_main+2,___xxtofl@val
  2654  01205E  C14C  F072         	movff	??_main+3,___xxtofl@val+1
  2655  012062  0100               	movlb	0	; () banked
  2656  012064  0E00               	movlw	0
  2657  012066  BF72               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2658  012068  0EFF               	movlw	-1
  2659  01206A  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
  2660  01206C  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
  2661  01206E  0E01               	movlw	1
  2662  012070  EC6C  F0A4         	call	___xxtofl
  2663  012074  C071  F07F         	movff	?___xxtofl,___flmul@b
  2664  012078  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2665  01207C  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2666  012080  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2667  012084  ECF1  F09B         	call	___flmul	;wreg free
  2668  012088  C07F  F0B9         	movff	?___flmul,___fltol@f1
  2669  01208C  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  2670  012090  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  2671  012094  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  2672  012098  ECFF  F0AA         	call	___fltol	;wreg free
  2673  01209C  C0B9  F0E3         	movff	?___fltol,_set_speed	;volatile
  2674  0120A0  C0BA  F0E4         	movff	?___fltol+1,_set_speed+1	;volatile
  2675                           
  2676                           ;RemoteCan.c: 350: data_brake [0] = 3;
  2677  0120A4  0E03               	movlw	3
  2678  0120A6  D018               	goto	L4
  2679  0120A8                     l9773:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;RemoteCan.c: 352: set_speed = 0;
  2683  0120A8  0E00               	movlw	0
  2684  0120AA  0100               	movlb	0	; () banked
  2685  0120AC  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2686  0120AE  0E00               	movlw	0
  2687  0120B0  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;RemoteCan.c: 353: if (JoystickValues[1] <= 65) {
  2691  0120B2  0E42               	movlw	66
  2692  0120B4  0100               	movlb	0	; () banked
  2693  0120B6  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2694  0120B8  D003               	goto	l9779
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;RemoteCan.c: 354: data_brake [0] = 2;
  2698  0120BA  0E02               	movlw	2
  2699  0120BC  0100               	movlb	0	; () banked
  2700  0120BE  6FEA               	movwf	_data_brake& (0+255),b
  2701  0120C0                     l9779:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;RemoteCan.c: 355: }
  2705                           ;RemoteCan.c: 356: if (JoystickValues[1] <= 20) {
  2706  0120C0  0E15               	movlw	21
  2707  0120C2  0100               	movlb	0	; () banked
  2708  0120C4  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2709  0120C6  D003               	goto	l9783
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;RemoteCan.c: 357: data_brake [0] = 1;
  2713  0120C8  0E01               	movlw	1
  2714  0120CA  0100               	movlb	0	; () banked
  2715  0120CC  6FEA               	movwf	_data_brake& (0+255),b
  2716  0120CE                     l9783:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;RemoteCan.c: 358: }
  2720                           ;RemoteCan.c: 359: if (JoystickValues[1] <= 5) {
  2721  0120CE  0E06               	movlw	6
  2722  0120D0  0100               	movlb	0	; () banked
  2723  0120D2  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2724  0120D4  D00B               	goto	l9789
  2725  0120D6  D008               	goto	L5
  2726  0120D8                     L4:
  2727  0120D8  0100               	movlb	0	; () banked
  2728  0120DA  6FEA               	movwf	_data_brake& (0+255),b
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;RemoteCan.c: 361: }
  2732                           ;RemoteCan.c: 362: }
  2733                           ;RemoteCan.c: 363: } else {
  2734                           
  2735                           ; BSR set to: 0
  2736  0120DC  D007               	goto	l9789
  2737  0120DE                     l9787:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;RemoteCan.c: 364: set_speed = 0;
  2741  0120DE  0E00               	movlw	0
  2742  0120E0  0100               	movlb	0	; () banked
  2743  0120E2  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2744  0120E4  0E00               	movlw	0
  2745  0120E6  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2746  0120E8                     L5:
  2747                           
  2748                           ;RemoteCan.c: 365: data_brake [0] = 0;
  2749  0120E8  0E00               	movlw	0
  2750  0120EA  D7F6               	goto	L4
  2751  0120EC                     l9789:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;RemoteCan.c: 366: }
  2755                           ;RemoteCan.c: 368: if (newMessageCan == 1) {
  2756  0120EC  A04C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2757  0120EE  D003               	goto	l9795
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;RemoteCan.c: 369: CAN_Rx();
  2761  0120F0  EC74  F0AD         	call	_CAN_Rx	;wreg free
  2762                           
  2763                           ;RemoteCan.c: 370: newMessageCan = 0;
  2764  0120F4  904C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2765  0120F6                     l9795:
  2766                           
  2767                           ;RemoteCan.c: 371: }
  2768                           ;RemoteCan.c: 373: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2769  0120F6  C009  F149         	movff	_pr_time_2,??_main	;volatile
  2770  0120FA  C00A  F14A         	movff	_pr_time_2+1,??_main+1	;volatile
  2771  0120FE  C00B  F14B         	movff	_pr_time_2+2,??_main+2	;volatile
  2772  012102  C00C  F14C         	movff	_pr_time_2+3,??_main+3	;volatile
  2773  012106  0101               	movlb	1	; () banked
  2774  012108  1F49               	comf	??_main& (0+255),f,b
  2775  01210A  1F4A               	comf	(??_main+1)& (0+255),f,b
  2776  01210C  1F4B               	comf	(??_main+2)& (0+255),f,b
  2777  01210E  1F4C               	comf	(??_main+3)& (0+255),f,b
  2778  012110  2B49               	incf	??_main& (0+255),f,b
  2779  012112  0E00               	movlw	0
  2780  012114  234A               	addwfc	(??_main+1)& (0+255),f,b
  2781  012116  234B               	addwfc	(??_main+2)& (0+255),f,b
  2782  012118  234C               	addwfc	(??_main+3)& (0+255),f,b
  2783  01211A  501D               	movf	_time_counter,w,c	;volatile
  2784  01211C  0101               	movlb	1	; () banked
  2785  01211E  2549               	addwf	??_main& (0+255),w,b
  2786  012120  0101               	movlb	1	; () banked
  2787  012122  6F4D               	movwf	(??_main+4)& (0+255),b
  2788  012124  501E               	movf	_time_counter+1,w,c	;volatile
  2789  012126  0101               	movlb	1	; () banked
  2790  012128  214A               	addwfc	(??_main+1)& (0+255),w,b
  2791  01212A  0101               	movlb	1	; () banked
  2792  01212C  6F4E               	movwf	(??_main+5)& (0+255),b
  2793  01212E  501F               	movf	_time_counter+2,w,c	;volatile
  2794  012130  0101               	movlb	1	; () banked
  2795  012132  214B               	addwfc	(??_main+2)& (0+255),w,b
  2796  012134  0101               	movlb	1	; () banked
  2797  012136  6F4F               	movwf	(??_main+6)& (0+255),b
  2798  012138  5020               	movf	_time_counter+3,w,c	;volatile
  2799  01213A  0101               	movlb	1	; () banked
  2800  01213C  214C               	addwfc	(??_main+3)& (0+255),w,b
  2801  01213E  0101               	movlb	1	; () banked
  2802  012140  6F50               	movwf	(??_main+7)& (0+255),b
  2803  012142  0101               	movlb	1	; () banked
  2804  012144  5150               	movf	(??_main+7)& (0+255),w,b
  2805  012146  0101               	movlb	1	; () banked
  2806  012148  114F               	iorwf	(??_main+6)& (0+255),w,b
  2807  01214A  0101               	movlb	1	; () banked
  2808  01214C  114E               	iorwf	(??_main+5)& (0+255),w,b
  2809  01214E  E105               	bnz	u13280
  2810  012150  0E02               	movlw	2
  2811  012152  0101               	movlb	1	; () banked
  2812  012154  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2813  012156  A0D8               	btfss	status,0,c
  2814  012158  D004               	goto	l854
  2815  01215A                     u13280:
  2816                           
  2817                           ; BSR set to: 1
  2818  01215A  0E01               	movlw	1
  2819  01215C  0100               	movlb	0	; () banked
  2820  01215E  65E6               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  2821  012160  D002               	goto	l852
  2822  012162                     l854:
  2823  012162  A24B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2824  012164  D01E               	goto	l9807
  2825  012166                     l852:
  2826                           
  2827                           ;RemoteCan.c: 374: if (Can_Tx_Force == 1) {
  2828  012166  A24B               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2829  012168  D012               	goto	l9803
  2830                           
  2831                           ;RemoteCan.c: 375: dir = 1;
  2832  01216A  0E01               	movlw	1
  2833  01216C  0100               	movlb	0	; () banked
  2834  01216E  6FE5               	movwf	_dir& (0+255),b	;volatile
  2835                           
  2836                           ;RemoteCan.c: 376: set_speed = 0;
  2837  012170  0E00               	movlw	0
  2838  012172  0100               	movlb	0	; () banked
  2839  012174  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2840  012176  0E00               	movlw	0
  2841  012178  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2842                           
  2843                           ;RemoteCan.c: 377: data_steering [0] = 90;
  2844  01217A  0E5A               	movlw	90
  2845  01217C  0100               	movlb	0	; () banked
  2846  01217E  6FEC               	movwf	_data_steering& (0+255),b
  2847                           
  2848                           ;RemoteCan.c: 378: data_brake [0] = 0;
  2849  012180  0E00               	movlw	0
  2850  012182  0100               	movlb	0	; () banked
  2851  012184  6FEA               	movwf	_data_brake& (0+255),b
  2852                           
  2853                           ;RemoteCan.c: 379: data_brake [1] = 0;
  2854  012186  0E00               	movlw	0
  2855  012188  0100               	movlb	0	; () banked
  2856  01218A  6FEB               	movwf	(_data_brake+1)& (0+255),b
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;RemoteCan.c: 380: Can_Tx_Force = 0;
  2860  01218C  924B               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2861  01218E                     l9803:
  2862                           
  2863                           ;RemoteCan.c: 381: }
  2864                           ;RemoteCan.c: 382: pr_time_2 = time_counter;
  2865  01218E  C01D  F009         	movff	_time_counter,_pr_time_2	;volatile
  2866  012192  C01E  F00A         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2867  012196  C01F  F00B         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2868  01219A  C020  F00C         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2869                           
  2870                           ;RemoteCan.c: 383: CAN_Tx();
  2871  01219E  EC17  F0AD         	call	_CAN_Tx	;wreg free
  2872  0121A2                     l9807:
  2873                           
  2874                           ;RemoteCan.c: 384: }
  2875                           ;RemoteCan.c: 387: if (time_counter >= pr_time_6) {
  2876  0121A2  5019               	movf	_pr_time_6,w,c	;volatile
  2877  0121A4  5C1D               	subwf	_time_counter,w,c	;volatile
  2878  0121A6  501A               	movf	_pr_time_6+1,w,c	;volatile
  2879  0121A8  581E               	subwfb	_time_counter+1,w,c	;volatile
  2880  0121AA  501B               	movf	_pr_time_6+2,w,c	;volatile
  2881  0121AC  581F               	subwfb	_time_counter+2,w,c	;volatile
  2882  0121AE  501C               	movf	_pr_time_6+3,w,c	;volatile
  2883  0121B0  5820               	subwfb	_time_counter+3,w,c	;volatile
  2884  0121B2  A0D8               	btfss	status,0,c
  2885  0121B4  D05B               	goto	l9835
  2886                           
  2887                           ;RemoteCan.c: 388: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2888  0121B6  C00D  F149         	movff	_pr_time_3,??_main	;volatile
  2889  0121BA  C00E  F14A         	movff	_pr_time_3+1,??_main+1	;volatile
  2890  0121BE  C00F  F14B         	movff	_pr_time_3+2,??_main+2	;volatile
  2891  0121C2  C010  F14C         	movff	_pr_time_3+3,??_main+3	;volatile
  2892  0121C6  0101               	movlb	1	; () banked
  2893  0121C8  1F49               	comf	??_main& (0+255),f,b
  2894  0121CA  1F4A               	comf	(??_main+1)& (0+255),f,b
  2895  0121CC  1F4B               	comf	(??_main+2)& (0+255),f,b
  2896  0121CE  1F4C               	comf	(??_main+3)& (0+255),f,b
  2897  0121D0  2B49               	incf	??_main& (0+255),f,b
  2898  0121D2  0E00               	movlw	0
  2899  0121D4  234A               	addwfc	(??_main+1)& (0+255),f,b
  2900  0121D6  234B               	addwfc	(??_main+2)& (0+255),f,b
  2901  0121D8  234C               	addwfc	(??_main+3)& (0+255),f,b
  2902  0121DA  501D               	movf	_time_counter,w,c	;volatile
  2903  0121DC  0101               	movlb	1	; () banked
  2904  0121DE  2549               	addwf	??_main& (0+255),w,b
  2905  0121E0  0101               	movlb	1	; () banked
  2906  0121E2  6F4D               	movwf	(??_main+4)& (0+255),b
  2907  0121E4  501E               	movf	_time_counter+1,w,c	;volatile
  2908  0121E6  0101               	movlb	1	; () banked
  2909  0121E8  214A               	addwfc	(??_main+1)& (0+255),w,b
  2910  0121EA  0101               	movlb	1	; () banked
  2911  0121EC  6F4E               	movwf	(??_main+5)& (0+255),b
  2912  0121EE  501F               	movf	_time_counter+2,w,c	;volatile
  2913  0121F0  0101               	movlb	1	; () banked
  2914  0121F2  214B               	addwfc	(??_main+2)& (0+255),w,b
  2915  0121F4  0101               	movlb	1	; () banked
  2916  0121F6  6F4F               	movwf	(??_main+6)& (0+255),b
  2917  0121F8  5020               	movf	_time_counter+3,w,c	;volatile
  2918  0121FA  0101               	movlb	1	; () banked
  2919  0121FC  214C               	addwfc	(??_main+3)& (0+255),w,b
  2920  0121FE  0101               	movlb	1	; () banked
  2921  012200  6F50               	movwf	(??_main+7)& (0+255),b
  2922  012202  0101               	movlb	1	; () banked
  2923  012204  5150               	movf	(??_main+7)& (0+255),w,b
  2924  012206  0101               	movlb	1	; () banked
  2925  012208  114F               	iorwf	(??_main+6)& (0+255),w,b
  2926  01220A  0101               	movlb	1	; () banked
  2927  01220C  114E               	iorwf	(??_main+5)& (0+255),w,b
  2928  01220E  E105               	bnz	u13330
  2929  012210  0E0A               	movlw	10
  2930  012212  0101               	movlb	1	; () banked
  2931  012214  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2932  012216  A0D8               	btfss	status,0,c
  2933  012218  D49D               	goto	l9631
  2934  01221A                     u13330:
  2935                           
  2936                           ; BSR set to: 1
  2937                           ;RemoteCan.c: 389: pr_time_3 = time_counter;
  2938  01221A  C01D  F00D         	movff	_time_counter,_pr_time_3	;volatile
  2939  01221E  C01E  F00E         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2940  012222  C01F  F00F         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2941  012226  C020  F010         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2942                           
  2943                           ;RemoteCan.c: 390: if (parking_message_E == 1) {
  2944  01222A  A24C               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2945  01222C  D01C               	goto	l9833
  2946                           
  2947                           ; BSR set to: 1
  2948                           ;RemoteCan.c: 391: display_refresh = 1;
  2949  01222E  8E4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2950                           
  2951                           ; BSR set to: 1
  2952                           ;RemoteCan.c: 392: if (parking_message_ID == 0) {
  2953  012230  0100               	movlb	0	; () banked
  2954  012232  51E6               	movf	_parking_message_ID& (0+255),w,b	;volatile
  2955  012234  A4D8               	btfss	status,2,c
  2956  012236  D004               	goto	l9821
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;RemoteCan.c: 393: LCD_Gap();
  2960  012238  ECA6  F0AF         	call	_LCD_Gap	;wreg free
  2961                           
  2962                           ;RemoteCan.c: 394: parking_message_ID++;
  2963  01223C  0100               	movlb	0	; () banked
  2964  01223E  2BE6               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2965  012240                     l9821:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;RemoteCan.c: 395: }
  2969                           ;RemoteCan.c: 396: if (parking_message_ID == 2) {
  2970  012240  0E02               	movlw	2
  2971  012242  0100               	movlb	0	; () banked
  2972  012244  19E6               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  2973  012246  A4D8               	btfss	status,2,c
  2974  012248  D004               	goto	l9827
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;RemoteCan.c: 397: LCD_Park();
  2978  01224A  EC74  F0AF         	call	_LCD_Park	;wreg free
  2979                           
  2980                           ;RemoteCan.c: 398: parking_message_ID++;
  2981  01224E  0100               	movlb	0	; () banked
  2982  012250  2BE6               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2983  012252                     l9827:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;RemoteCan.c: 399: }
  2987                           ;RemoteCan.c: 400: if (parking_message_ID == 4) {
  2988  012252  0E04               	movlw	4
  2989  012254  0100               	movlb	0	; () banked
  2990  012256  19E6               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  2991  012258  A4D8               	btfss	status,2,c
  2992  01225A  D47C               	goto	l9631
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;RemoteCan.c: 401: LCD_Parking();
  2996  01225C  EC42  F0AF         	call	_LCD_Parking	;wreg free
  2997                           
  2998                           ;RemoteCan.c: 402: parking_message_ID++;
  2999  012260  0100               	movlb	0	; () banked
  3000  012262  2BE6               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;RemoteCan.c: 403: }
  3004                           ;RemoteCan.c: 404: } else {
  3005  012264  D477               	goto	l9631
  3006  012266                     l9833:
  3007                           
  3008                           ;RemoteCan.c: 405: LCD_Handler();
  3009  012266  EC16  F0A7         	call	_LCD_Handler	;wreg free
  3010                           
  3011                           ;RemoteCan.c: 406: }
  3012                           ;RemoteCan.c: 407: }
  3013                           ;RemoteCan.c: 408: } else {
  3014  01226A  D474               	goto	l9631
  3015  01226C                     l9835:
  3016                           
  3017                           ;RemoteCan.c: 409: if (parking_message_ID == 6) {
  3018  01226C  0E06               	movlw	6
  3019  01226E  0100               	movlb	0	; () banked
  3020  012270  19E6               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3021  012272  A4D8               	btfss	status,2,c
  3022  012274  D46F               	goto	l9631
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;RemoteCan.c: 410: LCD_End();
  3026  012276  ECD8  F0AF         	call	_LCD_End	;wreg free
  3027                           
  3028                           ;RemoteCan.c: 411: parking_message_ID = 0;
  3029  01227A  0E00               	movlw	0
  3030  01227C  0100               	movlb	0	; () banked
  3031  01227E  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;RemoteCan.c: 412: parking_message_E = 0;
  3035  012280  924C               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3036                           
  3037                           ; BSR set to: 0
  3038                           
  3039                           ; BSR set to: 0
  3040                           
  3041                           ; BSR set to: 0
  3042  012282  D468               	goto	l9631
  3043  012284                     __end_of_main:
  3044                           	opt stack 0
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           status	equ	0xFD8
  3052                           
  3053 ;; *************** function _board_initialization *****************
  3054 ;; Defined at:
  3055 ;;		line 619 in file "RemoteCan.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;		None               void
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    9
  3076 ;; This function calls:
  3077 ;;		_CANInitialize
  3078 ;;		_LCD_clear
  3079 ;;		_LCD_goto_line
  3080 ;;		_LCD_initialize
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text1
  3087  015B96                     __ptext1:
  3088                           	opt stack 0
  3089  015B96                     _board_initialization:
  3090                           	opt stack 21
  3091                           
  3092                           ;RemoteCan.c: 621: LATA = 0x00;
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;incstack = 0
  3096  015B96  0E00               	movlw	0
  3097  015B98  6E89               	movwf	3977,c	;volatile
  3098                           
  3099                           ;RemoteCan.c: 622: TRISA = 0b00011111;
  3100  015B9A  0E1F               	movlw	31
  3101  015B9C  6E92               	movwf	3986,c	;volatile
  3102                           
  3103                           ;RemoteCan.c: 623: LATB = 0x00;
  3104  015B9E  0E00               	movlw	0
  3105  015BA0  6E8A               	movwf	3978,c	;volatile
  3106                           
  3107                           ;RemoteCan.c: 624: TRISB = 0b11111011;
  3108  015BA2  0EFB               	movlw	251
  3109  015BA4  6E93               	movwf	3987,c	;volatile
  3110                           
  3111                           ;RemoteCan.c: 625: LATC = 0x00;
  3112  015BA6  0E00               	movlw	0
  3113  015BA8  6E8B               	movwf	3979,c	;volatile
  3114                           
  3115                           ;RemoteCan.c: 626: TRISC = 0b11110000;
  3116  015BAA  0EF0               	movlw	240
  3117  015BAC  6E94               	movwf	3988,c	;volatile
  3118                           
  3119                           ;RemoteCan.c: 627: LATD = 0x00;
  3120  015BAE  0E00               	movlw	0
  3121  015BB0  6E8C               	movwf	3980,c	;volatile
  3122                           
  3123                           ;RemoteCan.c: 628: TRISD = 0x00;
  3124  015BB2  0E00               	movlw	0
  3125  015BB4  6E95               	movwf	3989,c	;volatile
  3126                           
  3127                           ;RemoteCan.c: 629: LATE = 0x00;
  3128  015BB6  0E00               	movlw	0
  3129  015BB8  6E8D               	movwf	3981,c	;volatile
  3130                           
  3131                           ;RemoteCan.c: 630: TRISE = 0x00;
  3132  015BBA  0E00               	movlw	0
  3133  015BBC  6E96               	movwf	3990,c	;volatile
  3134                           
  3135                           ;RemoteCan.c: 632: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3136  015BBE  0E06               	movlw	6
  3137  015BC0  0100               	movlb	0	; () banked
  3138  015BC2  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3139  015BC4  0E05               	movlw	5
  3140  015BC6  0100               	movlb	0	; () banked
  3141  015BC8  6F80               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3142  015BCA  0E01               	movlw	1
  3143  015BCC  0100               	movlb	0	; () banked
  3144  015BCE  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3145  015BD0  0E03               	movlw	3
  3146  015BD2  0100               	movlb	0	; () banked
  3147  015BD4  6F82               	movwf	CANInitialize@BRP& (0+255),b
  3148  015BD6  0E9D               	movlw	157
  3149  015BD8  0100               	movlb	0	; () banked
  3150  015BDA  6F83               	movwf	CANInitialize@flags& (0+255),b
  3151  015BDC  0E04               	movlw	4
  3152  015BDE  EC53  F0A5         	call	_CANInitialize
  3153                           
  3154                           ;RemoteCan.c: 636: PIR2bits.TMR3IF = 0;
  3155  015BE2  92A1               	bcf	4001,1,c	;volatile
  3156                           
  3157                           ;RemoteCan.c: 637: PIR3bits.RXB1IF = 0;
  3158  015BE4  92A4               	bcf	4004,1,c	;volatile
  3159                           
  3160                           ;RemoteCan.c: 638: PIR3bits.RXB0IF = 0;
  3161  015BE6  90A4               	bcf	4004,0,c	;volatile
  3162                           
  3163                           ;RemoteCan.c: 641: RCONbits.IPEN = 1;
  3164  015BE8  8ED0               	bsf	4048,7,c	;volatile
  3165                           
  3166                           ;RemoteCan.c: 642: IPR3bits.RXB1IP = 1;
  3167  015BEA  82A5               	bsf	4005,1,c	;volatile
  3168                           
  3169                           ;RemoteCan.c: 643: IPR3bits.RXB0IP = 1;
  3170  015BEC  80A5               	bsf	4005,0,c	;volatile
  3171                           
  3172                           ;RemoteCan.c: 644: IPR2bits.TMR3IP = 0;
  3173  015BEE  92A2               	bcf	4002,1,c	;volatile
  3174                           
  3175                           ;RemoteCan.c: 647: ADCON1 = 0b00001101;
  3176  015BF0  0E0D               	movlw	13
  3177  015BF2  6EC1               	movwf	4033,c	;volatile
  3178                           
  3179                           ;RemoteCan.c: 648: ADCON0bits.CHS2 = 0;
  3180  015BF4  98C2               	bcf	4034,4,c	;volatile
  3181                           
  3182                           ;RemoteCan.c: 649: ADCON0bits.CHS1 = 0;
  3183  015BF6  96C2               	bcf	4034,3,c	;volatile
  3184                           
  3185                           ;RemoteCan.c: 650: ADCON0bits.CHS0 = 0;
  3186  015BF8  94C2               	bcf	4034,2,c	;volatile
  3187                           
  3188                           ;RemoteCan.c: 651: ADCON2bits.ACQT2 = 1;
  3189  015BFA  8AC0               	bsf	4032,5,c	;volatile
  3190                           
  3191                           ;RemoteCan.c: 652: ADCON2bits.ACQT1 = 1;
  3192  015BFC  88C0               	bsf	4032,4,c	;volatile
  3193                           
  3194                           ;RemoteCan.c: 653: ADCON2bits.ACQT0 = 0;
  3195  015BFE  96C0               	bcf	4032,3,c	;volatile
  3196                           
  3197                           ;RemoteCan.c: 654: ADCON2bits.ADCS2 = 1;
  3198  015C00  84C0               	bsf	4032,2,c	;volatile
  3199                           
  3200                           ;RemoteCan.c: 655: ADCON2bits.ADCS1 = 0;
  3201  015C02  92C0               	bcf	4032,1,c	;volatile
  3202                           
  3203                           ;RemoteCan.c: 656: ADCON2bits.ADCS0 = 1;
  3204  015C04  80C0               	bsf	4032,0,c	;volatile
  3205                           
  3206                           ;RemoteCan.c: 657: ADCON2bits.ADFM = 0;
  3207  015C06  9EC0               	bcf	4032,7,c	;volatile
  3208                           
  3209                           ;RemoteCan.c: 658: ADCON0bits.ADON = 1;
  3210  015C08  80C2               	bsf	4034,0,c	;volatile
  3211                           
  3212                           ;RemoteCan.c: 661: LCD_initialize(16);
  3213  015C0A  0E10               	movlw	16
  3214  015C0C  EC48  F0AA         	call	_LCD_initialize
  3215                           
  3216                           ;RemoteCan.c: 663: LCD_clear();
  3217  015C10  EC9A  F0B1         	call	_LCD_clear	;wreg free
  3218                           
  3219                           ;RemoteCan.c: 664: LCD_goto_line(1);
  3220  015C14  0E01               	movlw	1
  3221  015C16  EC85  F0AB         	call	_LCD_goto_line
  3222                           
  3223                           ;RemoteCan.c: 668: PORTDbits.RD2 = 0;
  3224  015C1A  9483               	bcf	3971,2,c	;volatile
  3225                           
  3226                           ;RemoteCan.c: 669: PORTDbits.RD3 = 0;
  3227  015C1C  9683               	bcf	3971,3,c	;volatile
  3228                           
  3229                           ;RemoteCan.c: 672: TMR3H = 0x63;
  3230  015C1E  0E63               	movlw	99
  3231  015C20  6EB3               	movwf	4019,c	;volatile
  3232                           
  3233                           ;RemoteCan.c: 673: TMR3L = 0xC0;
  3234  015C22  0EC0               	movlw	192
  3235  015C24  6EB2               	movwf	4018,c	;volatile
  3236                           
  3237                           ;RemoteCan.c: 676: PIE3bits.RXB1IE = 1;
  3238  015C26  82A3               	bsf	4003,1,c	;volatile
  3239                           
  3240                           ;RemoteCan.c: 677: PIE3bits.RXB0IE = 1;
  3241  015C28  80A3               	bsf	4003,0,c	;volatile
  3242                           
  3243                           ;RemoteCan.c: 678: PIE2bits.TMR3IE = 1;
  3244  015C2A  82A0               	bsf	4000,1,c	;volatile
  3245                           
  3246                           ;RemoteCan.c: 681: T3CON = 0x01;
  3247  015C2C  0E01               	movlw	1
  3248  015C2E  6EB1               	movwf	4017,c	;volatile
  3249                           
  3250                           ;RemoteCan.c: 682: LCD_clear();
  3251  015C30  EC9A  F0B1         	call	_LCD_clear	;wreg free
  3252                           
  3253                           ;RemoteCan.c: 683: INTCONbits.GIEH = 1;
  3254  015C34  8EF2               	bsf	intcon,7,c	;volatile
  3255                           
  3256                           ;RemoteCan.c: 684: INTCONbits.GIEL = 1;
  3257  015C36  8CF2               	bsf	intcon,6,c	;volatile
  3258  015C38  0012               	return		;funcret
  3259  015C3A                     __end_of_board_initialization:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _CANInitialize *****************
  3271 ;; Defined at:
  3272 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  propSeg         1    wreg     unsigned char 
  3275 ;;  phaseSeg1       1   31[BANK0 ] unsigned char 
  3276 ;;  phaseSeg2       1   32[BANK0 ] unsigned char 
  3277 ;;  SJW             1   33[BANK0 ] unsigned char 
  3278 ;;  BRP             1   34[BANK0 ] unsigned char 
  3279 ;;  flags           1   35[BANK0 ] enum E16887
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  propSeg         1   40[BANK0 ] unsigned char 
  3282 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3283 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;		None               void
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3293 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;Total ram usage:       12 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		_CANOperationMode
  3302 ;;		_CANSetFilter
  3303 ;;		_CANSetMask
  3304 ;; This function is called by:
  3305 ;;		_board_initialization
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text2
  3310  014AA6                     __ptext2:
  3311                           	opt stack 0
  3312  014AA6                     _CANInitialize:
  3313                           	opt stack 25
  3314                           
  3315                           ;incstack = 0
  3316                           ;CANInitialize@propSeg stored from wreg
  3317  014AA6  0100               	movlb	0	; () banked
  3318  014AA8  6F88               	movwf	CANInitialize@propSeg& (0+255),b
  3319                           
  3320                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3321                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3322                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3323  014AAA  0E80               	movlw	128
  3324  014AAC  EC45  F0B2         	call	_CANOperationMode
  3325                           
  3326                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3327  014AB0  0E00               	movlw	0
  3328  014AB2  6E70               	movwf	3952,c	;volatile
  3329                           
  3330                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3331  014AB4  0E00               	movlw	0
  3332  014AB6  6E71               	movwf	3953,c	;volatile
  3333                           
  3334                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3335  014AB8  0E00               	movlw	0
  3336  014ABA  6E72               	movwf	3954,c	;volatile
  3337                           
  3338                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3339  014ABC  0100               	movlb	0	; () banked
  3340  014ABE  4181               	rrncf	CANInitialize@SJW& (0+255),w,b
  3341  014AC0  42E8               	rrncf	wreg,f,c
  3342  014AC2  0BC0               	andlw	192
  3343  014AC4  0100               	movlb	0	; () banked
  3344  014AC6  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3348  014AC8  0100               	movlb	0	; () banked
  3349  014ACA  5181               	movf	CANInitialize@SJW& (0+255),w,b
  3350  014ACC  1270               	iorwf	3952,f,c	;volatile
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3354  014ACE  0100               	movlb	0	; () banked
  3355  014AD0  5182               	movf	CANInitialize@BRP& (0+255),w,b
  3356  014AD2  1270               	iorwf	3952,f,c	;volatile
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3360  014AD4  0100               	movlb	0	; () banked
  3361  014AD6  5188               	movf	CANInitialize@propSeg& (0+255),w,b
  3362  014AD8  1271               	iorwf	3953,f,c	;volatile
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3366  014ADA  0100               	movlb	0	; () banked
  3367  014ADC  397F               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3368  014ADE  42E8               	rrncf	wreg,f,c
  3369  014AE0  0BF8               	andlw	248
  3370  014AE2  0100               	movlb	0	; () banked
  3371  014AE4  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3375  014AE6  0100               	movlb	0	; () banked
  3376  014AE8  517F               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3377  014AEA  1271               	iorwf	3953,f,c	;volatile
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3381  014AEC  0100               	movlb	0	; () banked
  3382  014AEE  A583               	btfss	CANInitialize@flags& (0+255),2,b
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3386  014AF0  8C71               	bsf	3953,6,c	;volatile
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3390  014AF2  0100               	movlb	0	; () banked
  3391  014AF4  B183               	btfsc	CANInitialize@flags& (0+255),0,b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3395  014AF6  8E71               	bsf	3953,7,c	;volatile
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3399                           
  3400                           ; BSR set to: 0
  3401  014AF8  0100               	movlb	0	; () banked
  3402  014AFA  5180               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3403  014AFC  1272               	iorwf	3954,f,c	;volatile
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3407  014AFE  0100               	movlb	0	; () banked
  3408  014B00  B383               	btfsc	CANInitialize@flags& (0+255),1,b
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3412  014B02  8C72               	bsf	3954,6,c	;volatile
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3416                           
  3417                           ; BSR set to: 0
  3418  014B04  0100               	movlb	0	; () banked
  3419  014B06  5183               	movf	CANInitialize@flags& (0+255),w,b
  3420  014B08  0B60               	andlw	96
  3421  014B0A  6E60               	movwf	3936,c	;volatile
  3422                           
  3423                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3424  014B0C  0100               	movlb	0	; () banked
  3425  014B0E  5183               	movf	CANInitialize@flags& (0+255),w,b
  3426  014B10  0B10               	andlw	16
  3427  014B12  0AFF               	xorlw	255
  3428  014B14  B4D8               	btfsc	status,2,c
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3432  014B16  8460               	bsf	3936,2,c	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3436  014B18  CF60 FF50          	movff	3936,3920	;volatile
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3440  014B1C  0E00               	movlw	0
  3441  014B1E  0100               	movlb	0	; () banked
  3442  014B20  6F71               	movwf	CANSetMask@mask& (0+255),b
  3443  014B22  0E00               	movlw	0
  3444  014B24  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3445  014B26  0E00               	movlw	0
  3446  014B28  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3447  014B2A  0E00               	movlw	0
  3448  014B2C  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3449  014B2E  0EF7               	movlw	247
  3450  014B30  0100               	movlb	0	; () banked
  3451  014B32  6F75               	movwf	CANSetMask@type& (0+255),b
  3452  014B34  0E01               	movlw	1
  3453  014B36  EC24  F0A0         	call	_CANSetMask
  3454                           
  3455                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3456  014B3A  0E00               	movlw	0
  3457  014B3C  0100               	movlb	0	; () banked
  3458  014B3E  6F71               	movwf	CANSetMask@mask& (0+255),b
  3459  014B40  0E00               	movlw	0
  3460  014B42  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3461  014B44  0E00               	movlw	0
  3462  014B46  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3463  014B48  0E00               	movlw	0
  3464  014B4A  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3465  014B4C  0EF7               	movlw	247
  3466  014B4E  0100               	movlb	0	; () banked
  3467  014B50  6F75               	movwf	CANSetMask@type& (0+255),b
  3468  014B52  0E02               	movlw	2
  3469  014B54  EC24  F0A0         	call	_CANSetMask
  3470                           
  3471                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3472  014B58  D00F               	goto	l6175
  3473  014B5A                     l6169:
  3474                           
  3475                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3476  014B5A  0EF7               	movlw	247
  3477  014B5C  0100               	movlb	0	; () banked
  3478  014B5E  6F89               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3479  014B60  D007               	goto	l6171
  3480  014B62                     l378:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3484  014B62  0100               	movlb	0	; () banked
  3485  014B64  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3486                           
  3487                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3488  014B66  0100               	movlb	0	; () banked
  3489  014B68  698A               	setf	CANInitialize@FilterConfig2& (0+255),b
  3490                           
  3491                           ;inc\CANlib.h: 273: break;
  3492  014B6A  D028               	goto	l6177
  3493  014B6C                     l379:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3497  014B6C  0100               	movlb	0	; () banked
  3498  014B6E  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3499  014B70                     l6171:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3503  014B70  0EF7               	movlw	247
  3504  014B72  0100               	movlb	0	; () banked
  3505  014B74  6F8A               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 278: }
  3509                           
  3510                           ;inc\CANlib.h: 277: break;
  3511  014B76  D022               	goto	l6177
  3512  014B78                     l6175:
  3513  014B78  0E9F               	movlw	159
  3514  014B7A  0100               	movlb	0	; () banked
  3515  014B7C  6F84               	movwf	??_CANInitialize& (0+255),b
  3516  014B7E  0EFF               	movlw	255
  3517  014B80  0100               	movlb	0	; () banked
  3518  014B82  6F85               	movwf	(??_CANInitialize+1)& (0+255),b
  3519  014B84  0100               	movlb	0	; () banked
  3520  014B86  5183               	movf	CANInitialize@flags& (0+255),w,b
  3521  014B88  0B60               	andlw	96
  3522  014B8A  0100               	movlb	0	; () banked
  3523  014B8C  6F86               	movwf	(??_CANInitialize+2)& (0+255),b
  3524  014B8E  6B87               	clrf	(??_CANInitialize+3)& (0+255),b
  3525  014B90  0100               	movlb	0	; () banked
  3526  014B92  5184               	movf	??_CANInitialize& (0+255),w,b
  3527  014B94  0100               	movlb	0	; () banked
  3528  014B96  1386               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3529  014B98  0100               	movlb	0	; () banked
  3530  014B9A  5185               	movf	(??_CANInitialize+1)& (0+255),w,b
  3531  014B9C  0100               	movlb	0	; () banked
  3532  014B9E  1387               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3533                           
  3534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3535                           ; Switch size 1, requested type "space"
  3536                           ; Number of cases is 1, Range of values is 0 to 0
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte            4     3 (average)
  3540                           ;	Chosen strategy is simple_byte
  3541  014BA0  0100               	movlb	0	; () banked
  3542  014BA2  5187               	movf	(??_CANInitialize+3)& (0+255),w,b
  3543  014BA4  0A00               	xorlw	0	; case 0
  3544  014BA6  A4D8               	btfss	status,2,c
  3545  014BA8  D7E1               	goto	l379
  3546                           
  3547                           ; BSR set to: 0
  3548                           ; Switch size 1, requested type "space"
  3549                           ; Number of cases is 2, Range of values is 191 to 223
  3550                           ; switch strategies available:
  3551                           ; Name         Instructions Cycles
  3552                           ; simple_byte            7     4 (average)
  3553                           ;	Chosen strategy is simple_byte
  3554  014BAA  0100               	movlb	0	; () banked
  3555  014BAC  5186               	movf	(??_CANInitialize+2)& (0+255),w,b
  3556  014BAE  0ABF               	xorlw	191	; case 191
  3557  014BB0  B4D8               	btfsc	status,2,c
  3558  014BB2  D7D7               	goto	l378
  3559  014BB4  0A60               	xorlw	96	; case 223
  3560  014BB6  B4D8               	btfsc	status,2,c
  3561  014BB8  D7D0               	goto	l6169
  3562  014BBA  D7D8               	goto	l379
  3563  014BBC                     l6177:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3567  014BBC  0E00               	movlw	0
  3568  014BBE  0100               	movlb	0	; () banked
  3569  014BC0  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3570  014BC2  0E00               	movlw	0
  3571  014BC4  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3572  014BC6  0E00               	movlw	0
  3573  014BC8  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3574  014BCA  0E00               	movlw	0
  3575  014BCC  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3576  014BCE  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3577  014BD2  0E00               	movlw	0
  3578  014BD4  EC00  F080         	call	_CANSetFilter
  3579                           
  3580                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3581  014BD8  0E00               	movlw	0
  3582  014BDA  0100               	movlb	0	; () banked
  3583  014BDC  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3584  014BDE  0E00               	movlw	0
  3585  014BE0  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3586  014BE2  0E00               	movlw	0
  3587  014BE4  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3588  014BE6  0E00               	movlw	0
  3589  014BE8  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3590  014BEA  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3591  014BEE  0E01               	movlw	1
  3592  014BF0  EC00  F080         	call	_CANSetFilter
  3593                           
  3594                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3595  014BF4  0E00               	movlw	0
  3596  014BF6  0100               	movlb	0	; () banked
  3597  014BF8  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3598  014BFA  0E00               	movlw	0
  3599  014BFC  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3600  014BFE  0E00               	movlw	0
  3601  014C00  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3602  014C02  0E00               	movlw	0
  3603  014C04  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3604  014C06  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3605  014C0A  0E02               	movlw	2
  3606  014C0C  EC00  F080         	call	_CANSetFilter
  3607                           
  3608                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3609  014C10  0E00               	movlw	0
  3610  014C12  0100               	movlb	0	; () banked
  3611  014C14  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3612  014C16  0E00               	movlw	0
  3613  014C18  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3614  014C1A  0E00               	movlw	0
  3615  014C1C  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3616  014C1E  0E00               	movlw	0
  3617  014C20  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3618  014C22  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3619  014C26  0E03               	movlw	3
  3620  014C28  EC00  F080         	call	_CANSetFilter
  3621                           
  3622                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3623  014C2C  0E00               	movlw	0
  3624  014C2E  0100               	movlb	0	; () banked
  3625  014C30  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3626  014C32  0E00               	movlw	0
  3627  014C34  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3628  014C36  0E00               	movlw	0
  3629  014C38  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3630  014C3A  0E00               	movlw	0
  3631  014C3C  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3632  014C3E  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3633  014C42  0E04               	movlw	4
  3634  014C44  EC00  F080         	call	_CANSetFilter
  3635                           
  3636                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3637  014C48  0E00               	movlw	0
  3638  014C4A  0100               	movlb	0	; () banked
  3639  014C4C  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3640  014C4E  0E00               	movlw	0
  3641  014C50  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3642  014C52  0E00               	movlw	0
  3643  014C54  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3644  014C56  0E00               	movlw	0
  3645  014C58  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3646  014C5A  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3647  014C5E  0E05               	movlw	5
  3648  014C60  EC00  F080         	call	_CANSetFilter
  3649                           
  3650                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3651  014C64  0E00               	movlw	0
  3652  014C66  EC45  F0B2         	call	_CANOperationMode
  3653  014C6A  0012               	return		;funcret
  3654  014C6C                     __end_of_CANInitialize:
  3655                           	opt stack 0
  3656                           tblptru	equ	0xFF8
  3657                           tblptrh	equ	0xFF7
  3658                           tblptrl	equ	0xFF6
  3659                           tablat	equ	0xFF5
  3660                           intcon	equ	0xFF2
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           status	equ	0xFD8
  3664                           
  3665 ;; *************** function _CANSetMask *****************
  3666 ;; Defined at:
  3667 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  numBuffer       1    wreg     enum E16921
  3670 ;;  mask            4   17[BANK0 ] unsigned long 
  3671 ;;  type            1   21[BANK0 ] enum E16887
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  numBuffer       1   26[BANK0 ] enum E16921
  3674 ;;  tamp            4   27[BANK0 ] unsigned long 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;		None               void
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3684 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3687 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3688 ;;Total ram usage:       14 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    3
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_CANInitialize
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text3
  3699  014048                     __ptext3:
  3700                           	opt stack 0
  3701  014048                     _CANSetMask:
  3702                           	opt stack 25
  3703                           
  3704                           ;incstack = 0
  3705                           ;CANSetMask@numBuffer stored from wreg
  3706  014048  0100               	movlb	0	; () banked
  3707  01404A  6F7A               	movwf	CANSetMask@numBuffer& (0+255),b
  3708                           
  3709                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3710  01404C  0100               	movlb	0	; () banked
  3711  01404E  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  3712  014050  A4D8               	btfss	status,2,c
  3713  014052  D056               	goto	l5345
  3714                           
  3715                           ; BSR set to: 0
  3716  014054  0100               	movlb	0	; () banked
  3717  014056  2975               	incf	CANSetMask@type& (0+255),w,b
  3718  014058  A4D8               	btfss	status,2,c
  3719  01405A  D052               	goto	l5345
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;inc\CANlib.h: 644: {
  3723                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3724  01405C  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3725  014060  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3726  014064  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3727  014068  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3728  01406C  0E04               	movlw	4
  3729  01406E  D006               	goto	u6030
  3730  014070                     u6035:
  3731  014070  0100               	movlb	0	; () banked
  3732  014072  90D8               	bcf	status,0,c
  3733  014074  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3734  014076  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3735  014078  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3736  01407A  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3737  01407C                     u6030:
  3738  01407C  2EE8               	decfsz	wreg,f,c
  3739  01407E  D7F8               	goto	u6035
  3740  014080  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3741  014084  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3742  014088  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3743  01408C  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3747  014090  0100               	movlb	0	; () banked
  3748  014092  517B               	movf	CANSetMask@tamp& (0+255),w,b
  3749  014094  0100               	movlb	0	; () banked
  3750  014096  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3751  014098  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3752  01409A  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3753  01409C  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3757  01409E  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3761  0140A2  0E07               	movlw	7
  3762  0140A4  0100               	movlb	0	; () banked
  3763  0140A6  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3764  0140A8  0100               	movlb	0	; () banked
  3765  0140AA  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3766  0140AC  0E00               	movlw	0
  3767  0140AE  0100               	movlb	0	; () banked
  3768  0140B0  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3769  0140B2  0100               	movlb	0	; () banked
  3770  0140B4  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3771  0140B6  0E00               	movlw	0
  3772  0140B8  0100               	movlb	0	; () banked
  3773  0140BA  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3774  0140BC  0100               	movlb	0	; () banked
  3775  0140BE  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3776  0140C0  0E00               	movlw	0
  3777  0140C2  0100               	movlb	0	; () banked
  3778  0140C4  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3779  0140C6  0100               	movlb	0	; () banked
  3780  0140C8  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3784  0140CA  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3785  0140CE  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3786  0140D2  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3787  0140D6  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3788  0140DA  0E05               	movlw	5
  3789  0140DC                     u6045:
  3790  0140DC  90D8               	bcf	status,0,c
  3791  0140DE  0100               	movlb	0	; () banked
  3792  0140E0  3776               	rlcf	??_CANSetMask& (0+255),f,b
  3793  0140E2  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3794  0140E4  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3795  0140E6  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3796  0140E8  2EE8               	decfsz	wreg,f,c
  3797  0140EA  D7F8               	goto	u6045
  3798  0140EC  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3799  0140F0  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3800  0140F4  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3801  0140F8  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3805  0140FC  C07B  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3806  014100                     l5345:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;inc\CANlib.h: 652: }
  3810                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3811  014100  0E02               	movlw	2
  3812  014102  0100               	movlb	0	; () banked
  3813  014104  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3814  014106  A4D8               	btfss	status,2,c
  3815  014108  D056               	goto	l5361
  3816                           
  3817                           ; BSR set to: 0
  3818  01410A  0100               	movlb	0	; () banked
  3819  01410C  2975               	incf	CANSetMask@type& (0+255),w,b
  3820  01410E  A4D8               	btfss	status,2,c
  3821  014110  D052               	goto	l5361
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;inc\CANlib.h: 655: {
  3825                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3826  014112  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3827  014116  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3828  01411A  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3829  01411E  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3830  014122  0E04               	movlw	4
  3831  014124  D006               	goto	u6070
  3832  014126                     u6075:
  3833  014126  0100               	movlb	0	; () banked
  3834  014128  90D8               	bcf	status,0,c
  3835  01412A  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3836  01412C  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3837  01412E  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3838  014130  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3839  014132                     u6070:
  3840  014132  2EE8               	decfsz	wreg,f,c
  3841  014134  D7F8               	goto	u6075
  3842  014136  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3843  01413A  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3844  01413E  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3845  014142  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3849  014146  0100               	movlb	0	; () banked
  3850  014148  517B               	movf	CANSetMask@tamp& (0+255),w,b
  3851  01414A  0100               	movlb	0	; () banked
  3852  01414C  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3853  01414E  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3854  014150  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3855  014152  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3859  014154  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3863  014158  0E07               	movlw	7
  3864  01415A  0100               	movlb	0	; () banked
  3865  01415C  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3866  01415E  0100               	movlb	0	; () banked
  3867  014160  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3868  014162  0E00               	movlw	0
  3869  014164  0100               	movlb	0	; () banked
  3870  014166  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3871  014168  0100               	movlb	0	; () banked
  3872  01416A  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3873  01416C  0E00               	movlw	0
  3874  01416E  0100               	movlb	0	; () banked
  3875  014170  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3876  014172  0100               	movlb	0	; () banked
  3877  014174  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3878  014176  0E00               	movlw	0
  3879  014178  0100               	movlb	0	; () banked
  3880  01417A  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3881  01417C  0100               	movlb	0	; () banked
  3882  01417E  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3886  014180  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3887  014184  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3888  014188  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3889  01418C  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3890  014190  0E05               	movlw	5
  3891  014192                     u6085:
  3892  014192  90D8               	bcf	status,0,c
  3893  014194  0100               	movlb	0	; () banked
  3894  014196  3776               	rlcf	??_CANSetMask& (0+255),f,b
  3895  014198  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3896  01419A  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3897  01419C  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3898  01419E  2EE8               	decfsz	wreg,f,c
  3899  0141A0  D7F8               	goto	u6085
  3900  0141A2  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3901  0141A6  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3902  0141AA  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3903  0141AE  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3907  0141B2  C07B  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3908  0141B6                     l5361:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;inc\CANlib.h: 663: }
  3912                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3913  0141B6  0100               	movlb	0	; () banked
  3914  0141B8  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  3915  0141BA  A4D8               	btfss	status,2,c
  3916  0141BC  D087               	goto	l5393
  3917                           
  3918                           ; BSR set to: 0
  3919  0141BE  0EF7               	movlw	247
  3920  0141C0  0100               	movlb	0	; () banked
  3921  0141C2  1975               	xorwf	CANSetMask@type& (0+255),w,b
  3922  0141C4  A4D8               	btfss	status,2,c
  3923  0141C6  D082               	goto	l5393
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;inc\CANlib.h: 666: {
  3927                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3928  0141C8  0100               	movlb	0	; () banked
  3929  0141CA  5171               	movf	CANSetMask@mask& (0+255),w,b
  3930  0141CC  0100               	movlb	0	; () banked
  3931  0141CE  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3932  0141D0  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3933  0141D2  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3934  0141D4  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3938  0141D6  C07B  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3942  0141DA  0E00               	movlw	0
  3943  0141DC  0100               	movlb	0	; () banked
  3944  0141DE  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3945  0141E0  0100               	movlb	0	; () banked
  3946  0141E2  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3947  0141E4  0EFF               	movlw	255
  3948  0141E6  0100               	movlb	0	; () banked
  3949  0141E8  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3950  0141EA  0100               	movlb	0	; () banked
  3951  0141EC  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3952  0141EE  0E00               	movlw	0
  3953  0141F0  0100               	movlb	0	; () banked
  3954  0141F2  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3955  0141F4  0100               	movlb	0	; () banked
  3956  0141F6  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3957  0141F8  0E00               	movlw	0
  3958  0141FA  0100               	movlb	0	; () banked
  3959  0141FC  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3960  0141FE  0100               	movlb	0	; () banked
  3961  014200  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3965  014202  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3966  014206  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3967  01420A  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3968  01420E  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3969  014212  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  3970  014216  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  3971  01421A  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  3972  01421E  0100               	movlb	0	; () banked
  3973  014220  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  3974  014222  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3975  014226  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3976  01422A  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3977  01422E  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3981  014232  C07B  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3985  014236  0100               	movlb	0	; () banked
  3986  014238  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3987  01423A  D003               	goto	l452
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3991  01423C  010F               	movlb	15	; () banked
  3992  01423E  8119               	bsf	25,0,b	;volatile
  3993  014240  D002               	goto	l453
  3994  014242                     l452:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;inc\CANlib.h: 676: else
  3998                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3999  014242  010F               	movlb	15	; () banked
  4000  014244  9119               	bcf	25,0,b	;volatile
  4001  014246                     l453:
  4002                           
  4003                           ; BSR set to: 15
  4004                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4005  014246  0100               	movlb	0	; () banked
  4006  014248  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4007  01424A  D003               	goto	l454
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4011  01424C  010F               	movlb	15	; () banked
  4012  01424E  8319               	bsf	25,1,b	;volatile
  4013  014250  D002               	goto	l455
  4014  014252                     l454:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;inc\CANlib.h: 681: else
  4018                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4019  014252  010F               	movlb	15	; () banked
  4020  014254  9319               	bcf	25,1,b	;volatile
  4021  014256                     l455:
  4022                           
  4023                           ; BSR set to: 15
  4024                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4025  014256  0100               	movlb	0	; () banked
  4026  014258  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4027  01425A  D003               	goto	l456
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4031  01425C  010F               	movlb	15	; () banked
  4032  01425E  8B19               	bsf	25,5,b	;volatile
  4033  014260  D002               	goto	l457
  4034  014262                     l456:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 686: else
  4038                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4039  014262  010F               	movlb	15	; () banked
  4040  014264  9B19               	bcf	25,5,b	;volatile
  4041  014266                     l457:
  4042                           
  4043                           ; BSR set to: 15
  4044                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4045  014266  0100               	movlb	0	; () banked
  4046  014268  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4047  01426A  D003               	goto	l458
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4051  01426C  010F               	movlb	15	; () banked
  4052  01426E  8D19               	bsf	25,6,b	;volatile
  4053  014270  D002               	goto	l459
  4054  014272                     l458:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 691: else
  4058                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4059  014272  010F               	movlb	15	; () banked
  4060  014274  9D19               	bcf	25,6,b	;volatile
  4061  014276                     l459:
  4062                           
  4063                           ; BSR set to: 15
  4064                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4065  014276  0100               	movlb	0	; () banked
  4066  014278  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4067  01427A  D003               	goto	l460
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4071  01427C  010F               	movlb	15	; () banked
  4072  01427E  8F19               	bsf	25,7,b	;volatile
  4073  014280  D002               	goto	l5387
  4074  014282                     l460:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;inc\CANlib.h: 696: else
  4078                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4079  014282  010F               	movlb	15	; () banked
  4080  014284  9F19               	bcf	25,7,b	;volatile
  4081  014286                     l5387:
  4082                           
  4083                           ; BSR set to: 15
  4084                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4085  014286  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4086  01428A  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4087  01428E  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4088  014292  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4089  014296  0E16               	movlw	22
  4090  014298  D006               	goto	u6160
  4091  01429A                     u6165:
  4092  01429A  0100               	movlb	0	; () banked
  4093  01429C  90D8               	bcf	status,0,c
  4094  01429E  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4095  0142A0  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4096  0142A2  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4097  0142A4  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4098  0142A6                     u6160:
  4099  0142A6  2EE8               	decfsz	wreg,f,c
  4100  0142A8  D7F8               	goto	u6165
  4101  0142AA  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4102  0142AE  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4103  0142B2  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4104  0142B6  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4108  0142BA  0100               	movlb	0	; () banked
  4109  0142BC  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4110  0142BE  0100               	movlb	0	; () banked
  4111  0142C0  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4112  0142C2  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4113  0142C4  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4114  0142C6  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4118  0142C8  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4119  0142CC                     l5393:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;inc\CANlib.h: 702: }
  4123                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4124  0142CC  0E02               	movlw	2
  4125  0142CE  0100               	movlb	0	; () banked
  4126  0142D0  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4127  0142D2  A4D8               	btfss	status,2,c
  4128  0142D4  0012               	return	
  4129                           
  4130                           ; BSR set to: 0
  4131  0142D6  0EF7               	movlw	247
  4132  0142D8  0100               	movlb	0	; () banked
  4133  0142DA  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4134  0142DC  A4D8               	btfss	status,2,c
  4135  0142DE  0012               	return	
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;inc\CANlib.h: 705: {
  4139                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4140  0142E0  0100               	movlb	0	; () banked
  4141  0142E2  5171               	movf	CANSetMask@mask& (0+255),w,b
  4142  0142E4  0100               	movlb	0	; () banked
  4143  0142E6  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4144  0142E8  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4145  0142EA  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4146  0142EC  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4150  0142EE  C07B  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4154  0142F2  0E00               	movlw	0
  4155  0142F4  0100               	movlb	0	; () banked
  4156  0142F6  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4157  0142F8  0100               	movlb	0	; () banked
  4158  0142FA  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4159  0142FC  0EFF               	movlw	255
  4160  0142FE  0100               	movlb	0	; () banked
  4161  014300  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4162  014302  0100               	movlb	0	; () banked
  4163  014304  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4164  014306  0E00               	movlw	0
  4165  014308  0100               	movlb	0	; () banked
  4166  01430A  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4167  01430C  0100               	movlb	0	; () banked
  4168  01430E  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4169  014310  0E00               	movlw	0
  4170  014312  0100               	movlb	0	; () banked
  4171  014314  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4172  014316  0100               	movlb	0	; () banked
  4173  014318  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4177  01431A  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4178  01431E  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4179  014322  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4180  014326  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4181  01432A  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4182  01432E  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4183  014332  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4184  014336  0100               	movlb	0	; () banked
  4185  014338  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4186  01433A  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4187  01433E  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4188  014342  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4189  014346  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4193  01434A  C07B  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4197  01434E  0100               	movlb	0	; () banked
  4198  014350  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4199  014352  D003               	goto	l463
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4203  014354  010F               	movlb	15	; () banked
  4204  014356  811D               	bsf	29,0,b	;volatile
  4205  014358  D002               	goto	l464
  4206  01435A                     l463:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;inc\CANlib.h: 715: else
  4210                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4211  01435A  010F               	movlb	15	; () banked
  4212  01435C  911D               	bcf	29,0,b	;volatile
  4213  01435E                     l464:
  4214                           
  4215                           ; BSR set to: 15
  4216                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4217  01435E  0100               	movlb	0	; () banked
  4218  014360  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4219  014362  D003               	goto	l465
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4223  014364  010F               	movlb	15	; () banked
  4224  014366  831D               	bsf	29,1,b	;volatile
  4225  014368  D002               	goto	l466
  4226  01436A                     l465:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;inc\CANlib.h: 720: else
  4230                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4231  01436A  010F               	movlb	15	; () banked
  4232  01436C  931D               	bcf	29,1,b	;volatile
  4233  01436E                     l466:
  4234                           
  4235                           ; BSR set to: 15
  4236                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4237  01436E  0100               	movlb	0	; () banked
  4238  014370  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4239  014372  D003               	goto	l467
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4243  014374  010F               	movlb	15	; () banked
  4244  014376  8B1D               	bsf	29,5,b	;volatile
  4245  014378  D002               	goto	l468
  4246  01437A                     l467:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;inc\CANlib.h: 725: else
  4250                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4251  01437A  010F               	movlb	15	; () banked
  4252  01437C  9B1D               	bcf	29,5,b	;volatile
  4253  01437E                     l468:
  4254                           
  4255                           ; BSR set to: 15
  4256                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4257  01437E  0100               	movlb	0	; () banked
  4258  014380  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4259  014382  D003               	goto	l469
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4263  014384  010F               	movlb	15	; () banked
  4264  014386  8D1D               	bsf	29,6,b	;volatile
  4265  014388  D002               	goto	l470
  4266  01438A                     l469:
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 730: else
  4270                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4271  01438A  010F               	movlb	15	; () banked
  4272  01438C  9D1D               	bcf	29,6,b	;volatile
  4273  01438E                     l470:
  4274                           
  4275                           ; BSR set to: 15
  4276                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4277  01438E  0100               	movlb	0	; () banked
  4278  014390  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4279  014392  D003               	goto	l471
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4283  014394  010F               	movlb	15	; () banked
  4284  014396  8F1D               	bsf	29,7,b	;volatile
  4285  014398  D002               	goto	l5419
  4286  01439A                     l471:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 735: else
  4290                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4291  01439A  010F               	movlb	15	; () banked
  4292  01439C  9F1D               	bcf	29,7,b	;volatile
  4293  01439E                     l5419:
  4294                           
  4295                           ; BSR set to: 15
  4296                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4297  01439E  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4298  0143A2  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4299  0143A6  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4300  0143AA  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4301  0143AE  0E16               	movlw	22
  4302  0143B0  D006               	goto	u6240
  4303  0143B2                     u6245:
  4304  0143B2  0100               	movlb	0	; () banked
  4305  0143B4  90D8               	bcf	status,0,c
  4306  0143B6  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4307  0143B8  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4308  0143BA  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4309  0143BC  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4310  0143BE                     u6240:
  4311  0143BE  2EE8               	decfsz	wreg,f,c
  4312  0143C0  D7F8               	goto	u6245
  4313  0143C2  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4314  0143C6  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4315  0143CA  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4316  0143CE  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4320  0143D2  0100               	movlb	0	; () banked
  4321  0143D4  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4322  0143D6  0100               	movlb	0	; () banked
  4323  0143D8  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4324  0143DA  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4325  0143DC  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4326  0143DE  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4330  0143E0  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4331  0143E4  0012               	return	
  4332  0143E6                     __end_of_CANSetMask:
  4333                           	opt stack 0
  4334                           tblptru	equ	0xFF8
  4335                           tblptrh	equ	0xFF7
  4336                           tblptrl	equ	0xFF6
  4337                           tablat	equ	0xFF5
  4338                           intcon	equ	0xFF2
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           status	equ	0xFD8
  4342                           
  4343 ;; *************** function _CANSetFilter *****************
  4344 ;; Defined at:
  4345 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  numBuffer       1    wreg     enum E16924
  4348 ;;  filter          4   17[BANK0 ] unsigned long 
  4349 ;;  type            1   21[BANK0 ] enum E16887
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  numBuffer       1   26[BANK0 ] enum E16924
  4352 ;;  tamp            4   27[BANK0 ] unsigned long 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;		None               void
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4362 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4363 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;Total ram usage:       14 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    3
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_CANInitialize
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text4
  4377  010000                     __ptext4:
  4378                           	opt stack 0
  4379  010000                     _CANSetFilter:
  4380                           	opt stack 25
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;incstack = 0
  4384                           ;CANSetFilter@numBuffer stored from wreg
  4385  010000  0100               	movlb	0	; () banked
  4386  010002  6F7A               	movwf	CANSetFilter@numBuffer& (0+255),b
  4387                           
  4388                           ;inc\CANlib.h: 750: unsigned long tamp;
  4389                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4390  010004  0100               	movlb	0	; () banked
  4391  010006  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4392  010008  0100               	movlb	0	; () banked
  4393  01000A  A4D8               	btfss	status,2,c
  4394  01000C  D058               	goto	l5443
  4395                           
  4396                           ; BSR set to: 0
  4397  01000E  0100               	movlb	0	; () banked
  4398  010010  2975               	incf	CANSetFilter@type& (0+255),w,b
  4399  010012  A4D8               	btfss	status,2,c
  4400  010014  D054               	goto	l5443
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 753: {
  4404                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4405  010016  010F               	movlb	15	; () banked
  4406  010018  9701               	bcf	1,3,b	;volatile
  4407                           
  4408                           ; BSR set to: 15
  4409                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4410  01001A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4411  01001E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4412  010022  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4413  010026  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4414  01002A  0E04               	movlw	4
  4415  01002C  D006               	goto	u6270
  4416  01002E                     u6275:
  4417  01002E  0100               	movlb	0	; () banked
  4418  010030  90D8               	bcf	status,0,c
  4419  010032  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4420  010034  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4421  010036  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4422  010038  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4423  01003A                     u6270:
  4424  01003A  2EE8               	decfsz	wreg,f,c
  4425  01003C  D7F8               	goto	u6275
  4426  01003E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4427  010042  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4428  010046  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4429  01004A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4433  01004E  0100               	movlb	0	; () banked
  4434  010050  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4435  010052  0100               	movlb	0	; () banked
  4436  010054  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4437  010056  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4438  010058  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4439  01005A  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4443  01005C  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4447  010060  0E07               	movlw	7
  4448  010062  0100               	movlb	0	; () banked
  4449  010064  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4450  010066  0100               	movlb	0	; () banked
  4451  010068  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4452  01006A  0E00               	movlw	0
  4453  01006C  0100               	movlb	0	; () banked
  4454  01006E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4455  010070  0100               	movlb	0	; () banked
  4456  010072  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4457  010074  0E00               	movlw	0
  4458  010076  0100               	movlb	0	; () banked
  4459  010078  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4460  01007A  0100               	movlb	0	; () banked
  4461  01007C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4462  01007E  0E00               	movlw	0
  4463  010080  0100               	movlb	0	; () banked
  4464  010082  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4465  010084  0100               	movlb	0	; () banked
  4466  010086  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4470  010088  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4471  01008C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4472  010090  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4473  010094  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4474  010098  0E05               	movlw	5
  4475  01009A                     u6285:
  4476  01009A  90D8               	bcf	status,0,c
  4477  01009C  0100               	movlb	0	; () banked
  4478  01009E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4479  0100A0  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4480  0100A2  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4481  0100A4  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4482  0100A6  2EE8               	decfsz	wreg,f,c
  4483  0100A8  D7F8               	goto	u6285
  4484  0100AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4485  0100AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4486  0100B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4487  0100B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4491  0100BA  C07B  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4492  0100BE                     l5443:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;inc\CANlib.h: 763: }
  4496                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4497  0100BE  0100               	movlb	0	; () banked
  4498  0100C0  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4499  0100C2  A4D8               	btfss	status,2,c
  4500  0100C4  D058               	goto	l5461
  4501                           
  4502                           ; BSR set to: 0
  4503  0100C6  0100               	movlb	0	; () banked
  4504  0100C8  2975               	incf	CANSetFilter@type& (0+255),w,b
  4505  0100CA  A4D8               	btfss	status,2,c
  4506  0100CC  D054               	goto	l5461
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;inc\CANlib.h: 766: {
  4510                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4511  0100CE  010F               	movlb	15	; () banked
  4512  0100D0  9705               	bcf	5,3,b	;volatile
  4513                           
  4514                           ; BSR set to: 15
  4515                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4516  0100D2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4517  0100D6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4518  0100DA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4519  0100DE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4520  0100E2  0E04               	movlw	4
  4521  0100E4  D006               	goto	u6310
  4522  0100E6                     u6315:
  4523  0100E6  0100               	movlb	0	; () banked
  4524  0100E8  90D8               	bcf	status,0,c
  4525  0100EA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4526  0100EC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4527  0100EE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4528  0100F0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4529  0100F2                     u6310:
  4530  0100F2  2EE8               	decfsz	wreg,f,c
  4531  0100F4  D7F8               	goto	u6315
  4532  0100F6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4533  0100FA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4534  0100FE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4535  010102  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4539  010106  0100               	movlb	0	; () banked
  4540  010108  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4541  01010A  0100               	movlb	0	; () banked
  4542  01010C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4543  01010E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4544  010110  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4545  010112  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4549  010114  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4553  010118  0E07               	movlw	7
  4554  01011A  0100               	movlb	0	; () banked
  4555  01011C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4556  01011E  0100               	movlb	0	; () banked
  4557  010120  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4558  010122  0E00               	movlw	0
  4559  010124  0100               	movlb	0	; () banked
  4560  010126  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4561  010128  0100               	movlb	0	; () banked
  4562  01012A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4563  01012C  0E00               	movlw	0
  4564  01012E  0100               	movlb	0	; () banked
  4565  010130  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4566  010132  0100               	movlb	0	; () banked
  4567  010134  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4568  010136  0E00               	movlw	0
  4569  010138  0100               	movlb	0	; () banked
  4570  01013A  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4571  01013C  0100               	movlb	0	; () banked
  4572  01013E  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4576  010140  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4577  010144  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4578  010148  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4579  01014C  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4580  010150  0E05               	movlw	5
  4581  010152                     u6325:
  4582  010152  90D8               	bcf	status,0,c
  4583  010154  0100               	movlb	0	; () banked
  4584  010156  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4585  010158  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4586  01015A  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4587  01015C  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4588  01015E  2EE8               	decfsz	wreg,f,c
  4589  010160  D7F8               	goto	u6325
  4590  010162  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4591  010166  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4592  01016A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4593  01016E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4597  010172  C07B  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4598  010176                     l5461:
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;inc\CANlib.h: 776: }
  4602                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4603  010176  0E02               	movlw	2
  4604  010178  0100               	movlb	0	; () banked
  4605  01017A  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4606  01017C  A4D8               	btfss	status,2,c
  4607  01017E  D058               	goto	l5479
  4608                           
  4609                           ; BSR set to: 0
  4610  010180  0100               	movlb	0	; () banked
  4611  010182  2975               	incf	CANSetFilter@type& (0+255),w,b
  4612  010184  A4D8               	btfss	status,2,c
  4613  010186  D054               	goto	l5479
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;inc\CANlib.h: 779: {
  4617                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4618  010188  010F               	movlb	15	; () banked
  4619  01018A  9709               	bcf	9,3,b	;volatile
  4620                           
  4621                           ; BSR set to: 15
  4622                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4623  01018C  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4624  010190  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4625  010194  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4626  010198  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4627  01019C  0E04               	movlw	4
  4628  01019E  D006               	goto	u6350
  4629  0101A0                     u6355:
  4630  0101A0  0100               	movlb	0	; () banked
  4631  0101A2  90D8               	bcf	status,0,c
  4632  0101A4  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4633  0101A6  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4634  0101A8  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4635  0101AA  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4636  0101AC                     u6350:
  4637  0101AC  2EE8               	decfsz	wreg,f,c
  4638  0101AE  D7F8               	goto	u6355
  4639  0101B0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4640  0101B4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4641  0101B8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4642  0101BC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4646  0101C0  0100               	movlb	0	; () banked
  4647  0101C2  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4648  0101C4  0100               	movlb	0	; () banked
  4649  0101C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4650  0101C8  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4651  0101CA  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4652  0101CC  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4656  0101CE  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4660  0101D2  0E07               	movlw	7
  4661  0101D4  0100               	movlb	0	; () banked
  4662  0101D6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4663  0101D8  0100               	movlb	0	; () banked
  4664  0101DA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4665  0101DC  0E00               	movlw	0
  4666  0101DE  0100               	movlb	0	; () banked
  4667  0101E0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4668  0101E2  0100               	movlb	0	; () banked
  4669  0101E4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4670  0101E6  0E00               	movlw	0
  4671  0101E8  0100               	movlb	0	; () banked
  4672  0101EA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4673  0101EC  0100               	movlb	0	; () banked
  4674  0101EE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4675  0101F0  0E00               	movlw	0
  4676  0101F2  0100               	movlb	0	; () banked
  4677  0101F4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4678  0101F6  0100               	movlb	0	; () banked
  4679  0101F8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4683  0101FA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4684  0101FE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4685  010202  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4686  010206  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4687  01020A  0E05               	movlw	5
  4688  01020C                     u6365:
  4689  01020C  90D8               	bcf	status,0,c
  4690  01020E  0100               	movlb	0	; () banked
  4691  010210  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4692  010212  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4693  010214  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4694  010216  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4695  010218  2EE8               	decfsz	wreg,f,c
  4696  01021A  D7F8               	goto	u6365
  4697  01021C  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4698  010220  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4699  010224  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4700  010228  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4704  01022C  C07B  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4705  010230                     l5479:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;inc\CANlib.h: 789: }
  4709                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4710  010230  0E03               	movlw	3
  4711  010232  0100               	movlb	0	; () banked
  4712  010234  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4713  010236  A4D8               	btfss	status,2,c
  4714  010238  D058               	goto	l5497
  4715                           
  4716                           ; BSR set to: 0
  4717  01023A  0100               	movlb	0	; () banked
  4718  01023C  2975               	incf	CANSetFilter@type& (0+255),w,b
  4719  01023E  A4D8               	btfss	status,2,c
  4720  010240  D054               	goto	l5497
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;inc\CANlib.h: 792: {
  4724                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4725  010242  010F               	movlb	15	; () banked
  4726  010244  970D               	bcf	13,3,b	;volatile
  4727                           
  4728                           ; BSR set to: 15
  4729                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4730  010246  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4731  01024A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4732  01024E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4733  010252  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4734  010256  0E04               	movlw	4
  4735  010258  D006               	goto	u6390
  4736  01025A                     u6395:
  4737  01025A  0100               	movlb	0	; () banked
  4738  01025C  90D8               	bcf	status,0,c
  4739  01025E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4740  010260  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4741  010262  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4742  010264  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4743  010266                     u6390:
  4744  010266  2EE8               	decfsz	wreg,f,c
  4745  010268  D7F8               	goto	u6395
  4746  01026A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4747  01026E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4748  010272  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4749  010276  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4753  01027A  0100               	movlb	0	; () banked
  4754  01027C  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4755  01027E  0100               	movlb	0	; () banked
  4756  010280  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4757  010282  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4758  010284  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4759  010286  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4763  010288  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4767  01028C  0E07               	movlw	7
  4768  01028E  0100               	movlb	0	; () banked
  4769  010290  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4770  010292  0100               	movlb	0	; () banked
  4771  010294  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4772  010296  0E00               	movlw	0
  4773  010298  0100               	movlb	0	; () banked
  4774  01029A  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4775  01029C  0100               	movlb	0	; () banked
  4776  01029E  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4777  0102A0  0E00               	movlw	0
  4778  0102A2  0100               	movlb	0	; () banked
  4779  0102A4  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4780  0102A6  0100               	movlb	0	; () banked
  4781  0102A8  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4782  0102AA  0E00               	movlw	0
  4783  0102AC  0100               	movlb	0	; () banked
  4784  0102AE  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4785  0102B0  0100               	movlb	0	; () banked
  4786  0102B2  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4790  0102B4  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4791  0102B8  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4792  0102BC  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4793  0102C0  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4794  0102C4  0E05               	movlw	5
  4795  0102C6                     u6405:
  4796  0102C6  90D8               	bcf	status,0,c
  4797  0102C8  0100               	movlb	0	; () banked
  4798  0102CA  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4799  0102CC  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4800  0102CE  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4801  0102D0  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4802  0102D2  2EE8               	decfsz	wreg,f,c
  4803  0102D4  D7F8               	goto	u6405
  4804  0102D6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4805  0102DA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4806  0102DE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4807  0102E2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4811  0102E6  C07B  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4812  0102EA                     l5497:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;inc\CANlib.h: 802: }
  4816                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4817  0102EA  0E04               	movlw	4
  4818  0102EC  0100               	movlb	0	; () banked
  4819  0102EE  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4820  0102F0  A4D8               	btfss	status,2,c
  4821  0102F2  D058               	goto	l5515
  4822                           
  4823                           ; BSR set to: 0
  4824  0102F4  0100               	movlb	0	; () banked
  4825  0102F6  2975               	incf	CANSetFilter@type& (0+255),w,b
  4826  0102F8  A4D8               	btfss	status,2,c
  4827  0102FA  D054               	goto	l5515
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;inc\CANlib.h: 805: {
  4831                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4832  0102FC  010F               	movlb	15	; () banked
  4833  0102FE  9711               	bcf	17,3,b	;volatile
  4834                           
  4835                           ; BSR set to: 15
  4836                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4837  010300  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4838  010304  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4839  010308  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4840  01030C  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4841  010310  0E04               	movlw	4
  4842  010312  D006               	goto	u6430
  4843  010314                     u6435:
  4844  010314  0100               	movlb	0	; () banked
  4845  010316  90D8               	bcf	status,0,c
  4846  010318  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4847  01031A  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4848  01031C  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4849  01031E  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4850  010320                     u6430:
  4851  010320  2EE8               	decfsz	wreg,f,c
  4852  010322  D7F8               	goto	u6435
  4853  010324  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4854  010328  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4855  01032C  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4856  010330  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4860  010334  0100               	movlb	0	; () banked
  4861  010336  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4862  010338  0100               	movlb	0	; () banked
  4863  01033A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4864  01033C  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4865  01033E  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4866  010340  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4870  010342  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4874  010346  0E07               	movlw	7
  4875  010348  0100               	movlb	0	; () banked
  4876  01034A  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4877  01034C  0100               	movlb	0	; () banked
  4878  01034E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4879  010350  0E00               	movlw	0
  4880  010352  0100               	movlb	0	; () banked
  4881  010354  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4882  010356  0100               	movlb	0	; () banked
  4883  010358  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4884  01035A  0E00               	movlw	0
  4885  01035C  0100               	movlb	0	; () banked
  4886  01035E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4887  010360  0100               	movlb	0	; () banked
  4888  010362  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4889  010364  0E00               	movlw	0
  4890  010366  0100               	movlb	0	; () banked
  4891  010368  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4892  01036A  0100               	movlb	0	; () banked
  4893  01036C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4897  01036E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4898  010372  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4899  010376  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4900  01037A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4901  01037E  0E05               	movlw	5
  4902  010380                     u6445:
  4903  010380  90D8               	bcf	status,0,c
  4904  010382  0100               	movlb	0	; () banked
  4905  010384  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4906  010386  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4907  010388  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4908  01038A  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4909  01038C  2EE8               	decfsz	wreg,f,c
  4910  01038E  D7F8               	goto	u6445
  4911  010390  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4912  010394  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4913  010398  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4914  01039C  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4918  0103A0  C07B  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4919  0103A4                     l5515:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;inc\CANlib.h: 815: }
  4923                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4924  0103A4  0E05               	movlw	5
  4925  0103A6  0100               	movlb	0	; () banked
  4926  0103A8  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4927  0103AA  A4D8               	btfss	status,2,c
  4928  0103AC  D058               	goto	l5533
  4929                           
  4930                           ; BSR set to: 0
  4931  0103AE  0100               	movlb	0	; () banked
  4932  0103B0  2975               	incf	CANSetFilter@type& (0+255),w,b
  4933  0103B2  A4D8               	btfss	status,2,c
  4934  0103B4  D054               	goto	l5533
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;inc\CANlib.h: 818: {
  4938                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4939  0103B6  010F               	movlb	15	; () banked
  4940  0103B8  9715               	bcf	21,3,b	;volatile
  4941                           
  4942                           ; BSR set to: 15
  4943                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4944  0103BA  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4945  0103BE  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4946  0103C2  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4947  0103C6  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4948  0103CA  0E04               	movlw	4
  4949  0103CC  D006               	goto	u6470
  4950  0103CE                     u6475:
  4951  0103CE  0100               	movlb	0	; () banked
  4952  0103D0  90D8               	bcf	status,0,c
  4953  0103D2  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4954  0103D4  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4955  0103D6  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4956  0103D8  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4957  0103DA                     u6470:
  4958  0103DA  2EE8               	decfsz	wreg,f,c
  4959  0103DC  D7F8               	goto	u6475
  4960  0103DE  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4961  0103E2  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4962  0103E6  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4963  0103EA  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4967  0103EE  0100               	movlb	0	; () banked
  4968  0103F0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4969  0103F2  0100               	movlb	0	; () banked
  4970  0103F4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4971  0103F6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4972  0103F8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4973  0103FA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4977  0103FC  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4981  010400  0E07               	movlw	7
  4982  010402  0100               	movlb	0	; () banked
  4983  010404  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4984  010406  0100               	movlb	0	; () banked
  4985  010408  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4986  01040A  0E00               	movlw	0
  4987  01040C  0100               	movlb	0	; () banked
  4988  01040E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4989  010410  0100               	movlb	0	; () banked
  4990  010412  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4991  010414  0E00               	movlw	0
  4992  010416  0100               	movlb	0	; () banked
  4993  010418  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4994  01041A  0100               	movlb	0	; () banked
  4995  01041C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4996  01041E  0E00               	movlw	0
  4997  010420  0100               	movlb	0	; () banked
  4998  010422  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4999  010424  0100               	movlb	0	; () banked
  5000  010426  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5004  010428  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5005  01042C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5006  010430  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5007  010434  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5008  010438  0E05               	movlw	5
  5009  01043A                     u6485:
  5010  01043A  90D8               	bcf	status,0,c
  5011  01043C  0100               	movlb	0	; () banked
  5012  01043E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5013  010440  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5014  010442  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5015  010444  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5016  010446  2EE8               	decfsz	wreg,f,c
  5017  010448  D7F8               	goto	u6485
  5018  01044A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5019  01044E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5020  010452  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5021  010456  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5025  01045A  C07B  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5026  01045E                     l5533:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;inc\CANlib.h: 828: }
  5030                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5031  01045E  0100               	movlb	0	; () banked
  5032  010460  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5033  010462  0100               	movlb	0	; () banked
  5034  010464  A4D8               	btfss	status,2,c
  5035  010466  D089               	goto	l5567
  5036                           
  5037                           ; BSR set to: 0
  5038  010468  0EF7               	movlw	247
  5039  01046A  0100               	movlb	0	; () banked
  5040  01046C  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5041  01046E  A4D8               	btfss	status,2,c
  5042  010470  D084               	goto	l5567
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;inc\CANlib.h: 832: {
  5046                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5047  010472  010F               	movlb	15	; () banked
  5048  010474  8701               	bsf	1,3,b	;volatile
  5049                           
  5050                           ; BSR set to: 15
  5051                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5052  010476  0100               	movlb	0	; () banked
  5053  010478  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5054  01047A  0100               	movlb	0	; () banked
  5055  01047C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5056  01047E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5057  010480  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5058  010482  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5062  010484  C07B  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5066  010488  0E00               	movlw	0
  5067  01048A  0100               	movlb	0	; () banked
  5068  01048C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5069  01048E  0100               	movlb	0	; () banked
  5070  010490  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5071  010492  0EFF               	movlw	255
  5072  010494  0100               	movlb	0	; () banked
  5073  010496  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5074  010498  0100               	movlb	0	; () banked
  5075  01049A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5076  01049C  0E00               	movlw	0
  5077  01049E  0100               	movlb	0	; () banked
  5078  0104A0  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5079  0104A2  0100               	movlb	0	; () banked
  5080  0104A4  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5081  0104A6  0E00               	movlw	0
  5082  0104A8  0100               	movlb	0	; () banked
  5083  0104AA  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5084  0104AC  0100               	movlb	0	; () banked
  5085  0104AE  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5089  0104B0  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5090  0104B4  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5091  0104B8  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5092  0104BC  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5093  0104C0  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5094  0104C4  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5095  0104C8  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5096  0104CC  0100               	movlb	0	; () banked
  5097  0104CE  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5098  0104D0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5099  0104D4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5100  0104D8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5101  0104DC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5105  0104E0  C07B  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5109  0104E4  0100               	movlb	0	; () banked
  5110  0104E6  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5111  0104E8  D003               	goto	l483
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5115  0104EA  010F               	movlb	15	; () banked
  5116  0104EC  8101               	bsf	1,0,b	;volatile
  5117  0104EE  D002               	goto	l484
  5118  0104F0                     l483:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;inc\CANlib.h: 844: else
  5122                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5123  0104F0  010F               	movlb	15	; () banked
  5124  0104F2  9101               	bcf	1,0,b	;volatile
  5125  0104F4                     l484:
  5126                           
  5127                           ; BSR set to: 15
  5128                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5129  0104F4  0100               	movlb	0	; () banked
  5130  0104F6  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5131  0104F8  D003               	goto	l485
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5135  0104FA  010F               	movlb	15	; () banked
  5136  0104FC  8301               	bsf	1,1,b	;volatile
  5137  0104FE  D002               	goto	l486
  5138  010500                     l485:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;inc\CANlib.h: 849: else
  5142                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5143  010500  010F               	movlb	15	; () banked
  5144  010502  9301               	bcf	1,1,b	;volatile
  5145  010504                     l486:
  5146                           
  5147                           ; BSR set to: 15
  5148                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5149  010504  0100               	movlb	0	; () banked
  5150  010506  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5151  010508  D003               	goto	l487
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5155  01050A  010F               	movlb	15	; () banked
  5156  01050C  8B01               	bsf	1,5,b	;volatile
  5157  01050E  D002               	goto	l488
  5158  010510                     l487:
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;inc\CANlib.h: 854: else
  5162                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5163  010510  010F               	movlb	15	; () banked
  5164  010512  9B01               	bcf	1,5,b	;volatile
  5165  010514                     l488:
  5166                           
  5167                           ; BSR set to: 15
  5168                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5169  010514  0100               	movlb	0	; () banked
  5170  010516  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5171  010518  D003               	goto	l489
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5175  01051A  010F               	movlb	15	; () banked
  5176  01051C  8D01               	bsf	1,6,b	;volatile
  5177  01051E  D002               	goto	l490
  5178  010520                     l489:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;inc\CANlib.h: 859: else
  5182                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5183  010520  010F               	movlb	15	; () banked
  5184  010522  9D01               	bcf	1,6,b	;volatile
  5185  010524                     l490:
  5186                           
  5187                           ; BSR set to: 15
  5188                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5189  010524  0100               	movlb	0	; () banked
  5190  010526  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5191  010528  D003               	goto	l491
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5195  01052A  010F               	movlb	15	; () banked
  5196  01052C  8F01               	bsf	1,7,b	;volatile
  5197  01052E  D002               	goto	l5561
  5198  010530                     l491:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;inc\CANlib.h: 864: else
  5202                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5203  010530  010F               	movlb	15	; () banked
  5204  010532  9F01               	bcf	1,7,b	;volatile
  5205  010534                     l5561:
  5206                           
  5207                           ; BSR set to: 15
  5208                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5209  010534  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5210  010538  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5211  01053C  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5212  010540  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5213  010544  0E16               	movlw	22
  5214  010546  D006               	goto	u6560
  5215  010548                     u6565:
  5216  010548  0100               	movlb	0	; () banked
  5217  01054A  90D8               	bcf	status,0,c
  5218  01054C  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5219  01054E  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5220  010550  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5221  010552  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5222  010554                     u6560:
  5223  010554  2EE8               	decfsz	wreg,f,c
  5224  010556  D7F8               	goto	u6565
  5225  010558  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5226  01055C  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5227  010560  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5228  010564  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5232  010568  0100               	movlb	0	; () banked
  5233  01056A  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5234  01056C  0100               	movlb	0	; () banked
  5235  01056E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5236  010570  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5237  010572  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5238  010574  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5242  010576  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5243  01057A                     l5567:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;inc\CANlib.h: 870: }
  5247                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5248  01057A  0100               	movlb	0	; () banked
  5249  01057C  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5250  01057E  A4D8               	btfss	status,2,c
  5251  010580  D089               	goto	l5601
  5252                           
  5253                           ; BSR set to: 0
  5254  010582  0EF7               	movlw	247
  5255  010584  0100               	movlb	0	; () banked
  5256  010586  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5257  010588  A4D8               	btfss	status,2,c
  5258  01058A  D084               	goto	l5601
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 873: {
  5262                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5263  01058C  010F               	movlb	15	; () banked
  5264  01058E  8705               	bsf	5,3,b	;volatile
  5265                           
  5266                           ; BSR set to: 15
  5267                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5268  010590  0100               	movlb	0	; () banked
  5269  010592  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5270  010594  0100               	movlb	0	; () banked
  5271  010596  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5272  010598  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5273  01059A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5274  01059C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5278  01059E  C07B  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5282  0105A2  0E00               	movlw	0
  5283  0105A4  0100               	movlb	0	; () banked
  5284  0105A6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5285  0105A8  0100               	movlb	0	; () banked
  5286  0105AA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5287  0105AC  0EFF               	movlw	255
  5288  0105AE  0100               	movlb	0	; () banked
  5289  0105B0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5290  0105B2  0100               	movlb	0	; () banked
  5291  0105B4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5292  0105B6  0E00               	movlw	0
  5293  0105B8  0100               	movlb	0	; () banked
  5294  0105BA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5295  0105BC  0100               	movlb	0	; () banked
  5296  0105BE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5297  0105C0  0E00               	movlw	0
  5298  0105C2  0100               	movlb	0	; () banked
  5299  0105C4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5300  0105C6  0100               	movlb	0	; () banked
  5301  0105C8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5305  0105CA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5306  0105CE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5307  0105D2  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5308  0105D6  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5309  0105DA  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5310  0105DE  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5311  0105E2  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5312  0105E6  0100               	movlb	0	; () banked
  5313  0105E8  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5314  0105EA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5315  0105EE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5316  0105F2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5317  0105F6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5321  0105FA  C07B  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5325  0105FE  0100               	movlb	0	; () banked
  5326  010600  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5327  010602  D003               	goto	l494
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5331  010604  010F               	movlb	15	; () banked
  5332  010606  8105               	bsf	5,0,b	;volatile
  5333  010608  D002               	goto	l495
  5334  01060A                     l494:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;inc\CANlib.h: 885: else
  5338                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5339  01060A  010F               	movlb	15	; () banked
  5340  01060C  9105               	bcf	5,0,b	;volatile
  5341  01060E                     l495:
  5342                           
  5343                           ; BSR set to: 15
  5344                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5345  01060E  0100               	movlb	0	; () banked
  5346  010610  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5347  010612  D003               	goto	l496
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5351  010614  010F               	movlb	15	; () banked
  5352  010616  8305               	bsf	5,1,b	;volatile
  5353  010618  D002               	goto	l497
  5354  01061A                     l496:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 890: else
  5358                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5359  01061A  010F               	movlb	15	; () banked
  5360  01061C  9305               	bcf	5,1,b	;volatile
  5361  01061E                     l497:
  5362                           
  5363                           ; BSR set to: 15
  5364                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5365  01061E  0100               	movlb	0	; () banked
  5366  010620  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5367  010622  D003               	goto	l498
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5371  010624  010F               	movlb	15	; () banked
  5372  010626  8B05               	bsf	5,5,b	;volatile
  5373  010628  D002               	goto	l499
  5374  01062A                     l498:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 895: else
  5378                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5379  01062A  010F               	movlb	15	; () banked
  5380  01062C  9B05               	bcf	5,5,b	;volatile
  5381  01062E                     l499:
  5382                           
  5383                           ; BSR set to: 15
  5384                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5385  01062E  0100               	movlb	0	; () banked
  5386  010630  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5387  010632  D003               	goto	l500
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5391  010634  010F               	movlb	15	; () banked
  5392  010636  8D05               	bsf	5,6,b	;volatile
  5393  010638  D002               	goto	l501
  5394  01063A                     l500:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;inc\CANlib.h: 900: else
  5398                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5399  01063A  010F               	movlb	15	; () banked
  5400  01063C  9D05               	bcf	5,6,b	;volatile
  5401  01063E                     l501:
  5402                           
  5403                           ; BSR set to: 15
  5404                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5405  01063E  0100               	movlb	0	; () banked
  5406  010640  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5407  010642  D003               	goto	l502
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5411  010644  010F               	movlb	15	; () banked
  5412  010646  8F05               	bsf	5,7,b	;volatile
  5413  010648  D002               	goto	l5595
  5414  01064A                     l502:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;inc\CANlib.h: 905: else
  5418                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5419  01064A  010F               	movlb	15	; () banked
  5420  01064C  9F05               	bcf	5,7,b	;volatile
  5421  01064E                     l5595:
  5422                           
  5423                           ; BSR set to: 15
  5424                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5425  01064E  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5426  010652  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5427  010656  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5428  01065A  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5429  01065E  0E16               	movlw	22
  5430  010660  D006               	goto	u6640
  5431  010662                     u6645:
  5432  010662  0100               	movlb	0	; () banked
  5433  010664  90D8               	bcf	status,0,c
  5434  010666  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5435  010668  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5436  01066A  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5437  01066C  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5438  01066E                     u6640:
  5439  01066E  2EE8               	decfsz	wreg,f,c
  5440  010670  D7F8               	goto	u6645
  5441  010672  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5442  010676  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5443  01067A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5444  01067E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5448  010682  0100               	movlb	0	; () banked
  5449  010684  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5450  010686  0100               	movlb	0	; () banked
  5451  010688  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5452  01068A  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5453  01068C  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5454  01068E  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5458  010690  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5459  010694                     l5601:
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;inc\CANlib.h: 911: }
  5463                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5464  010694  0E02               	movlw	2
  5465  010696  0100               	movlb	0	; () banked
  5466  010698  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5467  01069A  A4D8               	btfss	status,2,c
  5468  01069C  D089               	goto	l5635
  5469                           
  5470                           ; BSR set to: 0
  5471  01069E  0EF7               	movlw	247
  5472  0106A0  0100               	movlb	0	; () banked
  5473  0106A2  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5474  0106A4  A4D8               	btfss	status,2,c
  5475  0106A6  D084               	goto	l5635
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 915: {
  5479                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5480  0106A8  010F               	movlb	15	; () banked
  5481  0106AA  8709               	bsf	9,3,b	;volatile
  5482                           
  5483                           ; BSR set to: 15
  5484                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5485  0106AC  0100               	movlb	0	; () banked
  5486  0106AE  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5487  0106B0  0100               	movlb	0	; () banked
  5488  0106B2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5489  0106B4  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5490  0106B6  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5491  0106B8  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5495  0106BA  C07B  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5499  0106BE  0E00               	movlw	0
  5500  0106C0  0100               	movlb	0	; () banked
  5501  0106C2  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5502  0106C4  0100               	movlb	0	; () banked
  5503  0106C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5504  0106C8  0EFF               	movlw	255
  5505  0106CA  0100               	movlb	0	; () banked
  5506  0106CC  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5507  0106CE  0100               	movlb	0	; () banked
  5508  0106D0  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5509  0106D2  0E00               	movlw	0
  5510  0106D4  0100               	movlb	0	; () banked
  5511  0106D6  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5512  0106D8  0100               	movlb	0	; () banked
  5513  0106DA  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5514  0106DC  0E00               	movlw	0
  5515  0106DE  0100               	movlb	0	; () banked
  5516  0106E0  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5517  0106E2  0100               	movlb	0	; () banked
  5518  0106E4  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5522  0106E6  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5523  0106EA  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5524  0106EE  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5525  0106F2  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5526  0106F6  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5527  0106FA  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5528  0106FE  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5529  010702  0100               	movlb	0	; () banked
  5530  010704  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5531  010706  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5532  01070A  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5533  01070E  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5534  010712  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5538  010716  C07B  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5542  01071A  0100               	movlb	0	; () banked
  5543  01071C  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5544  01071E  D003               	goto	l505
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5548  010720  010F               	movlb	15	; () banked
  5549  010722  8109               	bsf	9,0,b	;volatile
  5550  010724  D002               	goto	l506
  5551  010726                     l505:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 927: else
  5555                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5556  010726  010F               	movlb	15	; () banked
  5557  010728  9109               	bcf	9,0,b	;volatile
  5558  01072A                     l506:
  5559                           
  5560                           ; BSR set to: 15
  5561                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5562  01072A  0100               	movlb	0	; () banked
  5563  01072C  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5564  01072E  D003               	goto	l507
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5568  010730  010F               	movlb	15	; () banked
  5569  010732  8309               	bsf	9,1,b	;volatile
  5570  010734  D002               	goto	l508
  5571  010736                     l507:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 932: else
  5575                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5576  010736  010F               	movlb	15	; () banked
  5577  010738  9309               	bcf	9,1,b	;volatile
  5578  01073A                     l508:
  5579                           
  5580                           ; BSR set to: 15
  5581                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5582  01073A  0100               	movlb	0	; () banked
  5583  01073C  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5584  01073E  D003               	goto	l509
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5588  010740  010F               	movlb	15	; () banked
  5589  010742  8B09               	bsf	9,5,b	;volatile
  5590  010744  D002               	goto	l510
  5591  010746                     l509:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 937: else
  5595                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5596  010746  010F               	movlb	15	; () banked
  5597  010748  9B09               	bcf	9,5,b	;volatile
  5598  01074A                     l510:
  5599                           
  5600                           ; BSR set to: 15
  5601                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5602  01074A  0100               	movlb	0	; () banked
  5603  01074C  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5604  01074E  D003               	goto	l511
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5608  010750  010F               	movlb	15	; () banked
  5609  010752  8D09               	bsf	9,6,b	;volatile
  5610  010754  D002               	goto	l512
  5611  010756                     l511:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 942: else
  5615                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5616  010756  010F               	movlb	15	; () banked
  5617  010758  9D09               	bcf	9,6,b	;volatile
  5618  01075A                     l512:
  5619                           
  5620                           ; BSR set to: 15
  5621                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5622  01075A  0100               	movlb	0	; () banked
  5623  01075C  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5624  01075E  D003               	goto	l513
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5628  010760  010F               	movlb	15	; () banked
  5629  010762  8F09               	bsf	9,7,b	;volatile
  5630  010764  D002               	goto	l5629
  5631  010766                     l513:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 947: else
  5635                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5636  010766  010F               	movlb	15	; () banked
  5637  010768  9F09               	bcf	9,7,b	;volatile
  5638  01076A                     l5629:
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5642  01076A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5643  01076E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5644  010772  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5645  010776  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5646  01077A  0E16               	movlw	22
  5647  01077C  D006               	goto	u6720
  5648  01077E                     u6725:
  5649  01077E  0100               	movlb	0	; () banked
  5650  010780  90D8               	bcf	status,0,c
  5651  010782  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5652  010784  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5653  010786  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5654  010788  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5655  01078A                     u6720:
  5656  01078A  2EE8               	decfsz	wreg,f,c
  5657  01078C  D7F8               	goto	u6725
  5658  01078E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5659  010792  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5660  010796  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5661  01079A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5665  01079E  0100               	movlb	0	; () banked
  5666  0107A0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5667  0107A2  0100               	movlb	0	; () banked
  5668  0107A4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5669  0107A6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5670  0107A8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5671  0107AA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5675  0107AC  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5676  0107B0                     l5635:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;inc\CANlib.h: 953: }
  5680                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5681  0107B0  0E03               	movlw	3
  5682  0107B2  0100               	movlb	0	; () banked
  5683  0107B4  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5684  0107B6  A4D8               	btfss	status,2,c
  5685  0107B8  D089               	goto	l5669
  5686                           
  5687                           ; BSR set to: 0
  5688  0107BA  0EF7               	movlw	247
  5689  0107BC  0100               	movlb	0	; () banked
  5690  0107BE  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5691  0107C0  A4D8               	btfss	status,2,c
  5692  0107C2  D084               	goto	l5669
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 956: {
  5696                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5697  0107C4  010F               	movlb	15	; () banked
  5698  0107C6  870D               	bsf	13,3,b	;volatile
  5699                           
  5700                           ; BSR set to: 15
  5701                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5702  0107C8  0100               	movlb	0	; () banked
  5703  0107CA  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5704  0107CC  0100               	movlb	0	; () banked
  5705  0107CE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5706  0107D0  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5707  0107D2  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5708  0107D4  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5712  0107D6  C07B  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5716  0107DA  0E00               	movlw	0
  5717  0107DC  0100               	movlb	0	; () banked
  5718  0107DE  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5719  0107E0  0100               	movlb	0	; () banked
  5720  0107E2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5721  0107E4  0EFF               	movlw	255
  5722  0107E6  0100               	movlb	0	; () banked
  5723  0107E8  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5724  0107EA  0100               	movlb	0	; () banked
  5725  0107EC  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5726  0107EE  0E00               	movlw	0
  5727  0107F0  0100               	movlb	0	; () banked
  5728  0107F2  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5729  0107F4  0100               	movlb	0	; () banked
  5730  0107F6  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5731  0107F8  0E00               	movlw	0
  5732  0107FA  0100               	movlb	0	; () banked
  5733  0107FC  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5734  0107FE  0100               	movlb	0	; () banked
  5735  010800  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5739  010802  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5740  010806  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5741  01080A  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5742  01080E  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5743  010812  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5744  010816  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5745  01081A  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5746  01081E  0100               	movlb	0	; () banked
  5747  010820  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5748  010822  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5749  010826  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5750  01082A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5751  01082E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5755  010832  C07B  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5759  010836  0100               	movlb	0	; () banked
  5760  010838  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5761  01083A  D003               	goto	l516
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5765  01083C  010F               	movlb	15	; () banked
  5766  01083E  810D               	bsf	13,0,b	;volatile
  5767  010840  D002               	goto	l517
  5768  010842                     l516:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;inc\CANlib.h: 968: else
  5772                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5773  010842  010F               	movlb	15	; () banked
  5774  010844  910D               	bcf	13,0,b	;volatile
  5775  010846                     l517:
  5776                           
  5777                           ; BSR set to: 15
  5778                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5779  010846  0100               	movlb	0	; () banked
  5780  010848  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5781  01084A  D003               	goto	l518
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5785  01084C  010F               	movlb	15	; () banked
  5786  01084E  830D               	bsf	13,1,b	;volatile
  5787  010850  D002               	goto	l519
  5788  010852                     l518:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 973: else
  5792                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5793  010852  010F               	movlb	15	; () banked
  5794  010854  930D               	bcf	13,1,b	;volatile
  5795  010856                     l519:
  5796                           
  5797                           ; BSR set to: 15
  5798                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5799  010856  0100               	movlb	0	; () banked
  5800  010858  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5801  01085A  D003               	goto	l520
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5805  01085C  010F               	movlb	15	; () banked
  5806  01085E  8B0D               	bsf	13,5,b	;volatile
  5807  010860  D002               	goto	l521
  5808  010862                     l520:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 978: else
  5812                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5813  010862  010F               	movlb	15	; () banked
  5814  010864  9B0D               	bcf	13,5,b	;volatile
  5815  010866                     l521:
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5819  010866  0100               	movlb	0	; () banked
  5820  010868  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5821  01086A  D003               	goto	l522
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5825  01086C  010F               	movlb	15	; () banked
  5826  01086E  8D0D               	bsf	13,6,b	;volatile
  5827  010870  D002               	goto	l523
  5828  010872                     l522:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 983: else
  5832                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5833  010872  010F               	movlb	15	; () banked
  5834  010874  9D0D               	bcf	13,6,b	;volatile
  5835  010876                     l523:
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5839  010876  0100               	movlb	0	; () banked
  5840  010878  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5841  01087A  D003               	goto	l524
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5845  01087C  010F               	movlb	15	; () banked
  5846  01087E  8F0D               	bsf	13,7,b	;volatile
  5847  010880  D002               	goto	l5663
  5848  010882                     l524:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;inc\CANlib.h: 988: else
  5852                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5853  010882  010F               	movlb	15	; () banked
  5854  010884  9F0D               	bcf	13,7,b	;volatile
  5855  010886                     l5663:
  5856                           
  5857                           ; BSR set to: 15
  5858                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5859  010886  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5860  01088A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5861  01088E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5862  010892  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5863  010896  0E16               	movlw	22
  5864  010898  D006               	goto	u6800
  5865  01089A                     u6805:
  5866  01089A  0100               	movlb	0	; () banked
  5867  01089C  90D8               	bcf	status,0,c
  5868  01089E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5869  0108A0  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5870  0108A2  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5871  0108A4  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5872  0108A6                     u6800:
  5873  0108A6  2EE8               	decfsz	wreg,f,c
  5874  0108A8  D7F8               	goto	u6805
  5875  0108AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5876  0108AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5877  0108B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5878  0108B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5882  0108BA  0100               	movlb	0	; () banked
  5883  0108BC  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5884  0108BE  0100               	movlb	0	; () banked
  5885  0108C0  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5886  0108C2  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5887  0108C4  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5888  0108C6  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5892  0108C8  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5893  0108CC                     l5669:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;inc\CANlib.h: 994: }
  5897                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5898  0108CC  0E04               	movlw	4
  5899  0108CE  0100               	movlb	0	; () banked
  5900  0108D0  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5901  0108D2  A4D8               	btfss	status,2,c
  5902  0108D4  D089               	goto	l5703
  5903                           
  5904                           ; BSR set to: 0
  5905  0108D6  0EF7               	movlw	247
  5906  0108D8  0100               	movlb	0	; () banked
  5907  0108DA  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5908  0108DC  A4D8               	btfss	status,2,c
  5909  0108DE  D084               	goto	l5703
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 997: {
  5913                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5914  0108E0  010F               	movlb	15	; () banked
  5915  0108E2  8711               	bsf	17,3,b	;volatile
  5916                           
  5917                           ; BSR set to: 15
  5918                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5919  0108E4  0100               	movlb	0	; () banked
  5920  0108E6  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5921  0108E8  0100               	movlb	0	; () banked
  5922  0108EA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5923  0108EC  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5924  0108EE  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5925  0108F0  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5929  0108F2  C07B  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5933  0108F6  0E00               	movlw	0
  5934  0108F8  0100               	movlb	0	; () banked
  5935  0108FA  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5936  0108FC  0100               	movlb	0	; () banked
  5937  0108FE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5938  010900  0EFF               	movlw	255
  5939  010902  0100               	movlb	0	; () banked
  5940  010904  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5941  010906  0100               	movlb	0	; () banked
  5942  010908  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5943  01090A  0E00               	movlw	0
  5944  01090C  0100               	movlb	0	; () banked
  5945  01090E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5946  010910  0100               	movlb	0	; () banked
  5947  010912  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5948  010914  0E00               	movlw	0
  5949  010916  0100               	movlb	0	; () banked
  5950  010918  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5951  01091A  0100               	movlb	0	; () banked
  5952  01091C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5956  01091E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5957  010922  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5958  010926  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5959  01092A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5960  01092E  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5961  010932  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5962  010936  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5963  01093A  0100               	movlb	0	; () banked
  5964  01093C  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5965  01093E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5966  010942  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5967  010946  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5968  01094A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5972  01094E  C07B  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5976  010952  0100               	movlb	0	; () banked
  5977  010954  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5978  010956  D003               	goto	l527
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5982  010958  010F               	movlb	15	; () banked
  5983  01095A  8111               	bsf	17,0,b	;volatile
  5984  01095C  D002               	goto	l528
  5985  01095E                     l527:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;inc\CANlib.h: 1009: else
  5989                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5990  01095E  010F               	movlb	15	; () banked
  5991  010960  9111               	bcf	17,0,b	;volatile
  5992  010962                     l528:
  5993                           
  5994                           ; BSR set to: 15
  5995                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5996  010962  0100               	movlb	0	; () banked
  5997  010964  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5998  010966  D003               	goto	l529
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6002  010968  010F               	movlb	15	; () banked
  6003  01096A  8311               	bsf	17,1,b	;volatile
  6004  01096C  D002               	goto	l530
  6005  01096E                     l529:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;inc\CANlib.h: 1014: else
  6009                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6010  01096E  010F               	movlb	15	; () banked
  6011  010970  9311               	bcf	17,1,b	;volatile
  6012  010972                     l530:
  6013                           
  6014                           ; BSR set to: 15
  6015                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6016  010972  0100               	movlb	0	; () banked
  6017  010974  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6018  010976  D003               	goto	l531
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6022  010978  010F               	movlb	15	; () banked
  6023  01097A  8B11               	bsf	17,5,b	;volatile
  6024  01097C  D002               	goto	l532
  6025  01097E                     l531:
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;inc\CANlib.h: 1019: else
  6029                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6030  01097E  010F               	movlb	15	; () banked
  6031  010980  9B11               	bcf	17,5,b	;volatile
  6032  010982                     l532:
  6033                           
  6034                           ; BSR set to: 15
  6035                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6036  010982  0100               	movlb	0	; () banked
  6037  010984  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6038  010986  D003               	goto	l533
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6042  010988  010F               	movlb	15	; () banked
  6043  01098A  8D11               	bsf	17,6,b	;volatile
  6044  01098C  D002               	goto	l534
  6045  01098E                     l533:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;inc\CANlib.h: 1024: else
  6049                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6050  01098E  010F               	movlb	15	; () banked
  6051  010990  9D11               	bcf	17,6,b	;volatile
  6052  010992                     l534:
  6053                           
  6054                           ; BSR set to: 15
  6055                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6056  010992  0100               	movlb	0	; () banked
  6057  010994  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6058  010996  D003               	goto	l535
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6062  010998  010F               	movlb	15	; () banked
  6063  01099A  8F11               	bsf	17,7,b	;volatile
  6064  01099C  D002               	goto	l5697
  6065  01099E                     l535:
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;inc\CANlib.h: 1029: else
  6069                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6070  01099E  010F               	movlb	15	; () banked
  6071  0109A0  9F11               	bcf	17,7,b	;volatile
  6072  0109A2                     l5697:
  6073                           
  6074                           ; BSR set to: 15
  6075                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6076  0109A2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6077  0109A6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6078  0109AA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6079  0109AE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6080  0109B2  0E16               	movlw	22
  6081  0109B4  D006               	goto	u6880
  6082  0109B6                     u6885:
  6083  0109B6  0100               	movlb	0	; () banked
  6084  0109B8  90D8               	bcf	status,0,c
  6085  0109BA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6086  0109BC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6087  0109BE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6088  0109C0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6089  0109C2                     u6880:
  6090  0109C2  2EE8               	decfsz	wreg,f,c
  6091  0109C4  D7F8               	goto	u6885
  6092  0109C6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6093  0109CA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6094  0109CE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6095  0109D2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6099  0109D6  0100               	movlb	0	; () banked
  6100  0109D8  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6101  0109DA  0100               	movlb	0	; () banked
  6102  0109DC  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6103  0109DE  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6104  0109E0  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6105  0109E2  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6109  0109E4  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6110  0109E8                     l5703:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;inc\CANlib.h: 1035: }
  6114                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6115  0109E8  0E05               	movlw	5
  6116  0109EA  0100               	movlb	0	; () banked
  6117  0109EC  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6118  0109EE  A4D8               	btfss	status,2,c
  6119  0109F0  0012               	return	
  6120                           
  6121                           ; BSR set to: 0
  6122  0109F2  0EF7               	movlw	247
  6123  0109F4  0100               	movlb	0	; () banked
  6124  0109F6  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6125  0109F8  A4D8               	btfss	status,2,c
  6126  0109FA  0012               	return	
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;inc\CANlib.h: 1038: {
  6130                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6131  0109FC  010F               	movlb	15	; () banked
  6132  0109FE  8715               	bsf	21,3,b	;volatile
  6133                           
  6134                           ; BSR set to: 15
  6135                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6136  010A00  0100               	movlb	0	; () banked
  6137  010A02  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6138  010A04  0100               	movlb	0	; () banked
  6139  010A06  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6140  010A08  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6141  010A0A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6142  010A0C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6146  010A0E  C07B  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6150  010A12  0E00               	movlw	0
  6151  010A14  0100               	movlb	0	; () banked
  6152  010A16  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6153  010A18  0100               	movlb	0	; () banked
  6154  010A1A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6155  010A1C  0EFF               	movlw	255
  6156  010A1E  0100               	movlb	0	; () banked
  6157  010A20  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6158  010A22  0100               	movlb	0	; () banked
  6159  010A24  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6160  010A26  0E00               	movlw	0
  6161  010A28  0100               	movlb	0	; () banked
  6162  010A2A  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6163  010A2C  0100               	movlb	0	; () banked
  6164  010A2E  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6165  010A30  0E00               	movlw	0
  6166  010A32  0100               	movlb	0	; () banked
  6167  010A34  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6168  010A36  0100               	movlb	0	; () banked
  6169  010A38  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6173  010A3A  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6174  010A3E  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6175  010A42  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6176  010A46  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6177  010A4A  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6178  010A4E  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6179  010A52  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6180  010A56  0100               	movlb	0	; () banked
  6181  010A58  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6182  010A5A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6183  010A5E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6184  010A62  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6185  010A66  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6189  010A6A  C07B  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6193  010A6E  0100               	movlb	0	; () banked
  6194  010A70  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6195  010A72  D003               	goto	l538
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6199  010A74  010F               	movlb	15	; () banked
  6200  010A76  8115               	bsf	21,0,b	;volatile
  6201  010A78  D002               	goto	l539
  6202  010A7A                     l538:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;inc\CANlib.h: 1050: else
  6206                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6207  010A7A  010F               	movlb	15	; () banked
  6208  010A7C  9115               	bcf	21,0,b	;volatile
  6209  010A7E                     l539:
  6210                           
  6211                           ; BSR set to: 15
  6212                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6213  010A7E  0100               	movlb	0	; () banked
  6214  010A80  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6215  010A82  D003               	goto	l540
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6219  010A84  010F               	movlb	15	; () banked
  6220  010A86  8315               	bsf	21,1,b	;volatile
  6221  010A88  D002               	goto	l541
  6222  010A8A                     l540:
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;inc\CANlib.h: 1055: else
  6226                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6227  010A8A  010F               	movlb	15	; () banked
  6228  010A8C  9315               	bcf	21,1,b	;volatile
  6229  010A8E                     l541:
  6230                           
  6231                           ; BSR set to: 15
  6232                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6233  010A8E  0100               	movlb	0	; () banked
  6234  010A90  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6235  010A92  D003               	goto	l542
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6239  010A94  010F               	movlb	15	; () banked
  6240  010A96  8B15               	bsf	21,5,b	;volatile
  6241  010A98  D002               	goto	l543
  6242  010A9A                     l542:
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;inc\CANlib.h: 1060: else
  6246                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6247  010A9A  010F               	movlb	15	; () banked
  6248  010A9C  9B15               	bcf	21,5,b	;volatile
  6249  010A9E                     l543:
  6250                           
  6251                           ; BSR set to: 15
  6252                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6253  010A9E  0100               	movlb	0	; () banked
  6254  010AA0  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6255  010AA2  D003               	goto	l544
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6259  010AA4  010F               	movlb	15	; () banked
  6260  010AA6  8D15               	bsf	21,6,b	;volatile
  6261  010AA8  D002               	goto	l545
  6262  010AAA                     l544:
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;inc\CANlib.h: 1065: else
  6266                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6267  010AAA  010F               	movlb	15	; () banked
  6268  010AAC  9D15               	bcf	21,6,b	;volatile
  6269  010AAE                     l545:
  6270                           
  6271                           ; BSR set to: 15
  6272                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6273  010AAE  0100               	movlb	0	; () banked
  6274  010AB0  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6275  010AB2  D003               	goto	l546
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6279  010AB4  010F               	movlb	15	; () banked
  6280  010AB6  8F15               	bsf	21,7,b	;volatile
  6281  010AB8  D002               	goto	l5731
  6282  010ABA                     l546:
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;inc\CANlib.h: 1070: else
  6286                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6287  010ABA  010F               	movlb	15	; () banked
  6288  010ABC  9F15               	bcf	21,7,b	;volatile
  6289  010ABE                     l5731:
  6290                           
  6291                           ; BSR set to: 15
  6292                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6293  010ABE  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6294  010AC2  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6295  010AC6  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6296  010ACA  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6297  010ACE  0E16               	movlw	22
  6298  010AD0  D006               	goto	u6960
  6299  010AD2                     u6965:
  6300  010AD2  0100               	movlb	0	; () banked
  6301  010AD4  90D8               	bcf	status,0,c
  6302  010AD6  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6303  010AD8  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6304  010ADA  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6305  010ADC  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6306  010ADE                     u6960:
  6307  010ADE  2EE8               	decfsz	wreg,f,c
  6308  010AE0  D7F8               	goto	u6965
  6309  010AE2  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6310  010AE6  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6311  010AEA  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6312  010AEE  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6316  010AF2  0100               	movlb	0	; () banked
  6317  010AF4  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6318  010AF6  0100               	movlb	0	; () banked
  6319  010AF8  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6320  010AFA  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6321  010AFC  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6322  010AFE  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6326  010B00  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6327  010B04  0012               	return	
  6328  010B06                     __end_of_CANSetFilter:
  6329                           	opt stack 0
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           intcon	equ	0xFF2
  6335                           postinc0	equ	0xFEE
  6336                           wreg	equ	0xFE8
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function _CANOperationMode *****************
  6340 ;; Defined at:
  6341 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  mode            1    wreg     enum E16881
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  mode            1   17[BANK0 ] enum E16881
  6346 ;; Return value:  Size  Location     Type
  6347 ;;		None               void
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;Total ram usage:        1 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    3
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_CANInitialize
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text5
  6370  01648A                     __ptext5:
  6371                           	opt stack 0
  6372  01648A                     _CANOperationMode:
  6373                           	opt stack 25
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;incstack = 0
  6377                           ;CANOperationMode@mode stored from wreg
  6378  01648A  0100               	movlb	0	; () banked
  6379  01648C  6F71               	movwf	CANOperationMode@mode& (0+255),b
  6380                           
  6381                           ;inc\CANlib.h: 208: CANCON = mode;
  6382  01648E  C071  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6383  016492                     l5327:
  6384  016492  506E               	movf	3950,w,c	;volatile
  6385  016494  0BE0               	andlw	224
  6386  016496  0100               	movlb	0	; () banked
  6387  016498  1971               	xorwf	CANOperationMode@mode& (0+255),w,b
  6388  01649A  B4D8               	btfsc	status,2,c
  6389  01649C  0012               	return	
  6390  01649E  D7F9               	goto	l5327
  6391  0164A0                     __end_of_CANOperationMode:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           intcon	equ	0xFF2
  6398                           postinc0	equ	0xFEE
  6399                           wreg	equ	0xFE8
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function _PWR_Button_Polling *****************
  6403 ;; Defined at:
  6404 ;;		line 528 in file "RemoteCan.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;		None               void
  6411 ;; Registers used:
  6412 ;;		None
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    3
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_main
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text6
  6433  01641A                     __ptext6:
  6434                           	opt stack 0
  6435  01641A                     _PWR_Button_Polling:
  6436                           	opt stack 27
  6437                           
  6438                           ;RemoteCan.c: 529: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;incstack = 0
  6442  01641A  AA81               	btfss	3969,5,c	;volatile
  6443  01641C  D002               	goto	l901
  6444  01641E  BC4C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6445  016420  0012               	return	
  6446  016422                     l901:
  6447                           
  6448                           ;RemoteCan.c: 530: wait_low_1 = 0;
  6449  016422  9C4C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6450                           
  6451                           ;RemoteCan.c: 531: if (PORTBbits.RB5 == 1) {
  6452  016424  AA81               	btfss	3969,5,c	;volatile
  6453  016426  0012               	return	
  6454                           
  6455                           ;RemoteCan.c: 532: power_switch = ~power_switch;
  6456  016428  B44C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6457  01642A  D002               	goto	u8920
  6458  01642C  844C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6459  01642E  D001               	goto	u8935
  6460  016430                     u8920:
  6461  016430  944C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6462  016432                     u8935:
  6463                           
  6464                           ;RemoteCan.c: 533: wait_low_1 = 1;
  6465  016432  8C4C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6466  016434  0012               	return	
  6467  016436                     __end_of_PWR_Button_Polling:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           intcon	equ	0xFF2
  6474                           postinc0	equ	0xFEE
  6475                           wreg	equ	0xFE8
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _LCD_Parking *****************
  6479 ;; Defined at:
  6480 ;;		line 502 in file "RemoteCan.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;		None
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;		None
  6485 ;; Return value:  Size  Location     Type
  6486 ;;		None               void
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;Total ram usage:        0 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    9
  6501 ;; This function calls:
  6502 ;;		_LCD_clear
  6503 ;;		_LCD_goto_line
  6504 ;;		_LCD_initialize
  6505 ;;		_LCD_write_message
  6506 ;; This function is called by:
  6507 ;;		_main
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text7
  6512  015E84                     __ptext7:
  6513                           	opt stack 0
  6514  015E84                     _LCD_Parking:
  6515                           	opt stack 21
  6516                           
  6517                           ;RemoteCan.c: 503: LCD_initialize(16);
  6518                           
  6519                           ;incstack = 0
  6520  015E84  0E10               	movlw	16
  6521  015E86  EC48  F0AA         	call	_LCD_initialize
  6522                           
  6523                           ;RemoteCan.c: 504: LCD_clear();
  6524  015E8A  EC9A  F0B1         	call	_LCD_clear	;wreg free
  6525                           
  6526                           ;RemoteCan.c: 505: LCD_goto_line(1);
  6527  015E8E  0E01               	movlw	1
  6528  015E90  EC85  F0AB         	call	_LCD_goto_line
  6529                           
  6530                           ;RemoteCan.c: 506: LCD_write_message("= PARKING MESSAGES =");
  6531  015E94  0E40               	movlw	low STR_16
  6532  015E96  0100               	movlb	0	; () banked
  6533  015E98  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6534  015E9A  0EFF               	movlw	high STR_16
  6535  015E9C  0100               	movlb	0	; () banked
  6536  015E9E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6537  015EA0  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6538                           
  6539                           ;RemoteCan.c: 507: LCD_goto_line(2);
  6540  015EA4  0E02               	movlw	2
  6541  015EA6  EC85  F0AB         	call	_LCD_goto_line
  6542                           
  6543                           ;RemoteCan.c: 508: LCD_write_message("=    Parking in    =");
  6544  015EAA  0E16               	movlw	low STR_25
  6545  015EAC  0100               	movlb	0	; () banked
  6546  015EAE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6547  015EB0  0EFF               	movlw	high STR_25
  6548  015EB2  0100               	movlb	0	; () banked
  6549  015EB4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6550  015EB6  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6551                           
  6552                           ;RemoteCan.c: 509: LCD_goto_line(3);
  6553  015EBA  0E03               	movlw	3
  6554  015EBC  EC85  F0AB         	call	_LCD_goto_line
  6555                           
  6556                           ;RemoteCan.c: 510: LCD_write_message("=    progress...   =");
  6557  015EC0  0E2B               	movlw	low STR_26
  6558  015EC2  0100               	movlb	0	; () banked
  6559  015EC4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6560  015EC6  0EFF               	movlw	high STR_26
  6561  015EC8  0100               	movlb	0	; () banked
  6562  015ECA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6563  015ECC  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6564                           
  6565                           ;RemoteCan.c: 511: LCD_goto_line(4);
  6566  015ED0  0E04               	movlw	4
  6567  015ED2  EC85  F0AB         	call	_LCD_goto_line
  6568                           
  6569                           ;RemoteCan.c: 512: LCD_write_message("====================");
  6570  015ED6  0E7F               	movlw	low STR_1
  6571  015ED8  0100               	movlb	0	; () banked
  6572  015EDA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6573  015EDC  0EFF               	movlw	high STR_1
  6574  015EDE  0100               	movlb	0	; () banked
  6575  015EE0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6576  015EE2  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6577  015EE6  0012               	return		;funcret
  6578  015EE8                     __end_of_LCD_Parking:
  6579                           	opt stack 0
  6580                           tblptru	equ	0xFF8
  6581                           tblptrh	equ	0xFF7
  6582                           tblptrl	equ	0xFF6
  6583                           tablat	equ	0xFF5
  6584                           intcon	equ	0xFF2
  6585                           postinc0	equ	0xFEE
  6586                           wreg	equ	0xFE8
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _LCD_Park *****************
  6590 ;; Defined at:
  6591 ;;		line 489 in file "RemoteCan.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;		None
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;		None
  6596 ;; Return value:  Size  Location     Type
  6597 ;;		None               void
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;Total ram usage:        0 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    9
  6612 ;; This function calls:
  6613 ;;		_LCD_clear
  6614 ;;		_LCD_goto_line
  6615 ;;		_LCD_initialize
  6616 ;;		_LCD_write_message
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text8
  6623  015EE8                     __ptext8:
  6624                           	opt stack 0
  6625  015EE8                     _LCD_Park:
  6626                           	opt stack 21
  6627                           
  6628                           ;RemoteCan.c: 490: LCD_initialize(16);
  6629                           
  6630                           ;incstack = 0
  6631  015EE8  0E10               	movlw	16
  6632  015EEA  EC48  F0AA         	call	_LCD_initialize
  6633                           
  6634                           ;RemoteCan.c: 491: LCD_clear();
  6635  015EEE  EC9A  F0B1         	call	_LCD_clear	;wreg free
  6636                           
  6637                           ;RemoteCan.c: 492: LCD_goto_line(1);
  6638  015EF2  0E01               	movlw	1
  6639  015EF4  EC85  F0AB         	call	_LCD_goto_line
  6640                           
  6641                           ;RemoteCan.c: 493: LCD_write_message("= PARKING MESSAGES =");
  6642  015EF8  0E40               	movlw	low STR_16
  6643  015EFA  0100               	movlb	0	; () banked
  6644  015EFC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6645  015EFE  0EFF               	movlw	high STR_16
  6646  015F00  0100               	movlb	0	; () banked
  6647  015F02  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6648  015F04  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6649                           
  6650                           ;RemoteCan.c: 494: LCD_goto_line(2);
  6651  015F08  0E02               	movlw	2
  6652  015F0A  EC85  F0AB         	call	_LCD_goto_line
  6653                           
  6654                           ;RemoteCan.c: 495: LCD_write_message("- Distance REACHED -");
  6655  015F0E  0EEC               	movlw	low STR_21
  6656  015F10  0100               	movlb	0	; () banked
  6657  015F12  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6658  015F14  0EFE               	movlw	high STR_21
  6659  015F16  0100               	movlb	0	; () banked
  6660  015F18  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6661  015F1A  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6662                           
  6663                           ;RemoteCan.c: 496: LCD_goto_line(3);
  6664  015F1E  0E03               	movlw	3
  6665  015F20  EC85  F0AB         	call	_LCD_goto_line
  6666                           
  6667                           ;RemoteCan.c: 497: LCD_write_message("Press the BUTTON to ");
  6668  015F24  0EC2               	movlw	low STR_22
  6669  015F26  0100               	movlb	0	; () banked
  6670  015F28  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6671  015F2A  0EFE               	movlw	high STR_22
  6672  015F2C  0100               	movlb	0	; () banked
  6673  015F2E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6674  015F30  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6675                           
  6676                           ;RemoteCan.c: 498: LCD_goto_line(4);
  6677  015F34  0E04               	movlw	4
  6678  015F36  EC85  F0AB         	call	_LCD_goto_line
  6679                           
  6680                           ;RemoteCan.c: 499: LCD_write_message("   start parking    ");
  6681  015F3A  0E83               	movlw	low STR_23
  6682  015F3C  0100               	movlb	0	; () banked
  6683  015F3E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6684  015F40  0EFE               	movlw	high STR_23
  6685  015F42  0100               	movlb	0	; () banked
  6686  015F44  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6687  015F46  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6688  015F4A  0012               	return		;funcret
  6689  015F4C                     __end_of_LCD_Park:
  6690                           	opt stack 0
  6691                           tblptru	equ	0xFF8
  6692                           tblptrh	equ	0xFF7
  6693                           tblptrl	equ	0xFF6
  6694                           tablat	equ	0xFF5
  6695                           intcon	equ	0xFF2
  6696                           postinc0	equ	0xFEE
  6697                           wreg	equ	0xFE8
  6698                           status	equ	0xFD8
  6699                           
  6700 ;; *************** function _LCD_Handler *****************
  6701 ;; Defined at:
  6702 ;;		line 418 in file "RemoteCan.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;		None
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;		None
  6707 ;; Return value:  Size  Location     Type
  6708 ;;		None               void
  6709 ;; Registers used:
  6710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;Total ram usage:        0 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:   10
  6723 ;; This function calls:
  6724 ;;		_CANisTxReady
  6725 ;;		_CANsendMessage
  6726 ;;		_LCD_clear
  6727 ;;		_LCD_goto_line
  6728 ;;		_LCD_goto_xy
  6729 ;;		_LCD_initialize
  6730 ;;		_LCD_write_integer
  6731 ;;		_LCD_write_message
  6732 ;;		_LCD_write_string
  6733 ;;		___fldiv
  6734 ;;		___xxtofl
  6735 ;;		_sprintf
  6736 ;; This function is called by:
  6737 ;;		_main
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text9
  6742  014E2C                     __ptext9:
  6743                           	opt stack 0
  6744  014E2C                     _LCD_Handler:
  6745                           	opt stack 20
  6746  014E2C                     l9217:
  6747  014E2C  ECDB  F0B1         	call	_CANisTxReady	;wreg free
  6748  014E30  06E8               	decf	wreg,f,c
  6749  014E32  A4D8               	btfss	status,2,c
  6750  014E34  D7FB               	goto	l9217
  6751                           
  6752                           ;RemoteCan.c: 421: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  6753  014E36  0E06               	movlw	6
  6754  014E38  0100               	movlb	0	; () banked
  6755  014E3A  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  6756  014E3C  0E00               	movlw	0
  6757  014E3E  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6758  014E40  0E00               	movlw	0
  6759  014E42  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6760  014E44  0E00               	movlw	0
  6761  014E46  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6762  014E48  0EEB               	movlw	low _data_speed
  6763  014E4A  0100               	movlb	0	; () banked
  6764  014E4C  6F75               	movwf	CANsendMessage@data& (0+255),b
  6765  014E4E  0E00               	movlw	high _data_speed
  6766  014E50  0100               	movlb	0	; () banked
  6767  014E52  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  6768  014E54  0E08               	movlw	8
  6769  014E56  0100               	movlb	0	; () banked
  6770  014E58  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  6771  014E5A  0EFC               	movlw	252
  6772  014E5C  0100               	movlb	0	; () banked
  6773  014E5E  6F78               	movwf	CANsendMessage@flags& (0+255),b
  6774  014E60  ECCD  F089         	call	_CANsendMessage	;wreg free
  6775                           
  6776                           ;RemoteCan.c: 423: actual_speed_kmh = ((actual_speed) / 278.0);
  6777  014E64  C0DF  F071         	movff	_actual_speed,___xxtofl@val	;volatile
  6778  014E68  C0E0  F072         	movff	_actual_speed+1,___xxtofl@val+1	;volatile
  6779  014E6C  0100               	movlb	0	; () banked
  6780  014E6E  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  6781  014E70  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  6782  014E72  0E00               	movlw	0
  6783  014E74  EC6C  F0A4         	call	___xxtofl
  6784  014E78  C071  F07F         	movff	?___xxtofl,___fldiv@b
  6785  014E7C  C072  F080         	movff	?___xxtofl+1,___fldiv@b+1
  6786  014E80  C073  F081         	movff	?___xxtofl+2,___fldiv@b+2
  6787  014E84  C074  F082         	movff	?___xxtofl+3,___fldiv@b+3
  6788  014E88  0E00               	movlw	0
  6789  014E8A  0100               	movlb	0	; () banked
  6790  014E8C  6F83               	movwf	___fldiv@a& (0+255),b
  6791  014E8E  0E00               	movlw	0
  6792  014E90  6F84               	movwf	(___fldiv@a+1)& (0+255),b
  6793  014E92  0E8B               	movlw	139
  6794  014E94  6F85               	movwf	(___fldiv@a+2)& (0+255),b
  6795  014E96  0E43               	movlw	67
  6796  014E98  6F86               	movwf	(___fldiv@a+3)& (0+255),b
  6797  014E9A  EC44  F09E         	call	___fldiv	;wreg free
  6798  014E9E  C07F  F001         	movff	?___fldiv,_actual_speed_kmh	;volatile
  6799  014EA2  C080  F002         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  6800  014EA6  C081  F003         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  6801  014EAA  C082  F004         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  6802                           
  6803                           ;RemoteCan.c: 424: sprintf(str, "%.2f", actual_speed_kmh);
  6804  014EAE  0E1C               	movlw	low _str
  6805  014EB0  0100               	movlb	0	; () banked
  6806  014EB2  6FC3               	movwf	sprintf@sp& (0+255),b
  6807  014EB4  0E01               	movlw	high _str
  6808  014EB6  0100               	movlb	0	; () banked
  6809  014EB8  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  6810  014EBA  0EFA               	movlw	low STR_5
  6811  014EBC  0100               	movlb	0	; () banked
  6812  014EBE  6FC5               	movwf	sprintf@f& (0+255),b
  6813  014EC0  0EFF               	movlw	high STR_5
  6814  014EC2  0100               	movlb	0	; () banked
  6815  014EC4  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  6816  014EC6  C001  F0C7         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  6817  014ECA  C002  F0C8         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  6818  014ECE  C003  F0C9         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  6819  014ED2  C004  F0CA         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  6820  014ED6  EC83  F085         	call	_sprintf	;wreg free
  6821                           
  6822                           ;RemoteCan.c: 425: str[11] = '\0';
  6823  014EDA  0E00               	movlw	0
  6824  014EDC  0101               	movlb	1	; () banked
  6825  014EDE  6F27               	movwf	(_str+11)& (0+255),b	;volatile
  6826                           
  6827                           ; BSR set to: 1
  6828                           ;RemoteCan.c: 427: if (display_refresh == 1) {
  6829  014EE0  AE4B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6830  014EE2  D032               	goto	l9245
  6831                           
  6832                           ; BSR set to: 1
  6833                           ;RemoteCan.c: 428: LCD_initialize(16);
  6834  014EE4  0E10               	movlw	16
  6835  014EE6  EC48  F0AA         	call	_LCD_initialize
  6836                           
  6837                           ;RemoteCan.c: 429: LCD_clear();
  6838  014EEA  EC9A  F0B1         	call	_LCD_clear	;wreg free
  6839                           
  6840                           ;RemoteCan.c: 430: LCD_goto_line(1);
  6841  014EEE  0E01               	movlw	1
  6842  014EF0  EC85  F0AB         	call	_LCD_goto_line
  6843                           
  6844                           ;RemoteCan.c: 431: LCD_write_message("=== VEHICLE DATA ===");
  6845  014EF4  0E6A               	movlw	low STR_6
  6846  014EF6  0100               	movlb	0	; () banked
  6847  014EF8  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6848  014EFA  0EFF               	movlw	high STR_6
  6849  014EFC  0100               	movlb	0	; () banked
  6850  014EFE  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6851  014F00  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6852                           
  6853                           ;RemoteCan.c: 432: LCD_goto_line(2);
  6854  014F04  0E02               	movlw	2
  6855  014F06  EC85  F0AB         	call	_LCD_goto_line
  6856                           
  6857                           ;RemoteCan.c: 433: LCD_write_message("Direction: ");
  6858  014F0A  0EC8               	movlw	low STR_7
  6859  014F0C  0100               	movlb	0	; () banked
  6860  014F0E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6861  014F10  0EFF               	movlw	high STR_7
  6862  014F12  0100               	movlb	0	; () banked
  6863  014F14  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6864  014F16  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6865                           
  6866                           ;RemoteCan.c: 434: LCD_goto_line(3);
  6867  014F1A  0E03               	movlw	3
  6868  014F1C  EC85  F0AB         	call	_LCD_goto_line
  6869                           
  6870                           ;RemoteCan.c: 435: LCD_write_message("Speed: 0.00 Km/h");
  6871  014F20  0EA9               	movlw	low STR_8
  6872  014F22  0100               	movlb	0	; () banked
  6873  014F24  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6874  014F26  0EFF               	movlw	high STR_8
  6875  014F28  0100               	movlb	0	; () banked
  6876  014F2A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6877  014F2C  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6878                           
  6879                           ;RemoteCan.c: 436: LCD_goto_line(4);
  6880  014F30  0E04               	movlw	4
  6881  014F32  EC85  F0AB         	call	_LCD_goto_line
  6882                           
  6883                           ;RemoteCan.c: 440: LCD_write_message("Data: ");
  6884                           
  6885                           ;RemoteCan.c: 439: } else {
  6886                           
  6887                           ;RemoteCan.c: 438: LCD_write_message("Park assist: ");
  6888                           
  6889                           ;RemoteCan.c: 437: if (1 == 0) {
  6890  014F36  0EE4               	movlw	low STR_10
  6891  014F38  0100               	movlb	0	; () banked
  6892  014F3A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6893  014F3C  0EFF               	movlw	high STR_10
  6894  014F3E  0100               	movlb	0	; () banked
  6895  014F40  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6896  014F42  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6897                           
  6898                           ;RemoteCan.c: 441: }
  6899                           ;RemoteCan.c: 442: display_refresh = 0;
  6900  014F46  9E4B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6901  014F48                     l9245:
  6902                           
  6903                           ;RemoteCan.c: 443: }
  6904                           ;RemoteCan.c: 446: LCD_goto_xy(12, 2);
  6905  014F48  0E02               	movlw	2
  6906  014F4A  0100               	movlb	0	; () banked
  6907  014F4C  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6908  014F4E  0E0C               	movlw	12
  6909  014F50  EC1B  F0B2         	call	_LCD_goto_xy
  6910                           
  6911                           ;RemoteCan.c: 447: if (switch_position != 0) {
  6912  014F54  0100               	movlb	0	; () banked
  6913  014F56  51E9               	movf	_switch_position& (0+255),w,b	;volatile
  6914  014F58  B4D8               	btfsc	status,2,c
  6915  014F5A  D016               	goto	l9255
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;RemoteCan.c: 448: if (dir == 1) {
  6919  014F5C  0100               	movlb	0	; () banked
  6920  014F5E  05E5               	decf	_dir& (0+255),w,b	;volatile
  6921  014F60  A4D8               	btfss	status,2,c
  6922  014F62  D009               	goto	l9253
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;RemoteCan.c: 449: LCD_write_message("FWD ");
  6926  014F64  0EF0               	movlw	low STR_11
  6927  014F66  0100               	movlb	0	; () banked
  6928  014F68  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6929  014F6A  0EFF               	movlw	high STR_11
  6930  014F6C  0100               	movlb	0	; () banked
  6931  014F6E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6932  014F70  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6933                           
  6934                           ;RemoteCan.c: 450: } else {
  6935  014F74  D011               	goto	l9257
  6936  014F76                     l9253:
  6937                           
  6938                           ;RemoteCan.c: 451: LCD_write_message("BKWD");
  6939  014F76  0EF5               	movlw	low STR_12
  6940  014F78  0100               	movlb	0	; () banked
  6941  014F7A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6942  014F7C  0EFF               	movlw	high STR_12
  6943  014F7E  0100               	movlb	0	; () banked
  6944  014F80  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6945  014F82  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6946                           
  6947                           ;RemoteCan.c: 452: }
  6948                           ;RemoteCan.c: 453: } else {
  6949  014F86  D008               	goto	l9257
  6950  014F88                     l9255:
  6951                           
  6952                           ;RemoteCan.c: 454: LCD_write_message("P   ");
  6953  014F88  0EEB               	movlw	low STR_13
  6954  014F8A  0100               	movlb	0	; () banked
  6955  014F8C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6956  014F8E  0EFF               	movlw	high STR_13
  6957  014F90  0100               	movlb	0	; () banked
  6958  014F92  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6959  014F94  EC67  F0B1         	call	_LCD_write_message	;wreg free
  6960  014F98                     l9257:
  6961                           
  6962                           ;RemoteCan.c: 455: }
  6963                           ;RemoteCan.c: 458: LCD_goto_xy(8, 3);
  6964  014F98  0E03               	movlw	3
  6965  014F9A  0100               	movlb	0	; () banked
  6966  014F9C  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6967  014F9E  0E08               	movlw	8
  6968  014FA0  EC1B  F0B2         	call	_LCD_goto_xy
  6969                           
  6970                           ;RemoteCan.c: 459: LCD_write_string(str);
  6971  014FA4  0E1C               	movlw	low _str
  6972  014FA6  0100               	movlb	0	; () banked
  6973  014FA8  6F82               	movwf	LCD_write_string@buffer& (0+255),b
  6974  014FAA  0E01               	movlw	high _str
  6975  014FAC  0100               	movlb	0	; () banked
  6976  014FAE  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6977  014FB0  ECC8  F0B1         	call	_LCD_write_string	;wreg free
  6978                           
  6979                           ;RemoteCan.c: 471: LCD_goto_xy(7, 4);
  6980                           
  6981                           ;RemoteCan.c: 468: }
  6982                           ;RemoteCan.c: 469: } else {
  6983                           
  6984                           ;RemoteCan.c: 467: LCD_write_message("SEARCH ");
  6985                           
  6986                           ;RemoteCan.c: 466: } else {
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;RemoteCan.c: 465: LCD_write_message("OFF    ");
  6990                           
  6991                           ;RemoteCan.c: 464: if (parking_state == 0) {
  6992                           
  6993                           ;RemoteCan.c: 463: LCD_goto_xy(14, 4);
  6994                           
  6995                           ;RemoteCan.c: 461: if (1 == 0) {
  6996  014FB4  0E04               	movlw	4
  6997  014FB6  0100               	movlb	0	; () banked
  6998  014FB8  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6999  014FBA  0E07               	movlw	7
  7000  014FBC  EC1B  F0B2         	call	_LCD_goto_xy
  7001                           
  7002                           ;RemoteCan.c: 472: LCD_write_integer(user_data, 0, 0x01);
  7003  014FC0  C025  F089         	movff	_user_data,LCD_write_integer@value	;volatile
  7004  014FC4  C026  F08A         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7005  014FC8  0E00               	movlw	0
  7006  014FCA  0100               	movlb	0	; () banked
  7007  014FCC  6F8B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7008  014FCE  0E01               	movlw	1
  7009  014FD0  0100               	movlb	0	; () banked
  7010  014FD2  6F8C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7011  014FD4  EC36  F0A6         	call	_LCD_write_integer	;wreg free
  7012  014FD8  0012               	return	
  7013  014FDA                     __end_of_LCD_Handler:
  7014                           	opt stack 0
  7015                           tblptru	equ	0xFF8
  7016                           tblptrh	equ	0xFF7
  7017                           tblptrl	equ	0xFF6
  7018                           tablat	equ	0xFF5
  7019                           intcon	equ	0xFF2
  7020                           postinc0	equ	0xFEE
  7021                           wreg	equ	0xFE8
  7022                           status	equ	0xFD8
  7023                           
  7024 ;; *************** function _sprintf *****************
  7025 ;; Defined at:
  7026 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  sp              2   99[BANK0 ] PTR unsigned char 
  7029 ;;		 -> str(12), 
  7030 ;;  f               2  101[BANK0 ] PTR const unsigned char 
  7031 ;;		 -> STR_5(5), 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  7034 ;;  tmpval          4   14[BANK1 ] struct .
  7035 ;;  val             4    8[BANK1 ] unsigned long 
  7036 ;;  cp              3    0        PTR const unsigned char 
  7037 ;;  prec            2   18[BANK1 ] int 
  7038 ;;  exp             2   12[BANK1 ] int 
  7039 ;;  flag            2    6[BANK1 ] unsigned short 
  7040 ;;  ap              2    4[BANK1 ] PTR void [1]
  7041 ;;		 -> ?_sprintf(2), 
  7042 ;;  len             2    0        unsigned int 
  7043 ;;  width           2    0        int 
  7044 ;;  c               1   24[BANK1 ] char 
  7045 ;;  d               1    0        unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  2   99[BANK0 ] int 
  7048 ;; Registers used:
  7049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7055 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;Total ram usage:       35 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    5
  7062 ;; This function calls:
  7063 ;;		___awdiv
  7064 ;;		___fladd
  7065 ;;		___flge
  7066 ;;		___flmul
  7067 ;;		___flneg
  7068 ;;		___flsub
  7069 ;;		___fltol
  7070 ;;		___lldiv
  7071 ;;		___llmod
  7072 ;;		___wmul
  7073 ;;		___xxtofl
  7074 ;;		__div_to_l_
  7075 ;;		__tdiv_to_l_
  7076 ;;		_fround
  7077 ;;		_isdigit
  7078 ;;		_scale
  7079 ;; This function is called by:
  7080 ;;		_LCD_Handler
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text10
  7085  010B06                     __ptext10:
  7086                           	opt stack 0
  7087  010B06                     _sprintf:
  7088                           	opt stack 24
  7089                           
  7090                           ;doprnt.c: 494: va_list ap;
  7091                           ;doprnt.c: 499: signed char c;
  7092                           ;doprnt.c: 501: int width;
  7093                           ;doprnt.c: 504: int prec;
  7094                           ;doprnt.c: 508: unsigned short flag;
  7095                           ;doprnt.c: 515: char d;
  7096                           ;doprnt.c: 516: double fval;
  7097                           ;doprnt.c: 517: int exp;
  7098                           ;doprnt.c: 523: union {
  7099                           ;doprnt.c: 524: unsigned long vd;
  7100                           ;doprnt.c: 525: double integ;
  7101                           ;doprnt.c: 526: } tmpval;
  7102                           ;doprnt.c: 528: unsigned long val;
  7103                           ;doprnt.c: 529: unsigned len;
  7104                           ;doprnt.c: 530: const char * cp;
  7105                           ;doprnt.c: 533: *ap = __va_start();
  7106                           
  7107                           ;incstack = 0
  7108  010B06  0EC7               	movlw	low (?_sprintf+4)
  7109  010B08  0101               	movlb	1	; () banked
  7110  010B0A  6F34               	movwf	sprintf@ap& (0+255),b
  7111  010B0C  0E00               	movlw	high (?_sprintf+4)
  7112  010B0E  0101               	movlb	1	; () banked
  7113  010B10  6F35               	movwf	(sprintf@ap+1)& (0+255),b
  7114                           
  7115                           ;doprnt.c: 536: while(c = *f++) {
  7116  010B12  EFB5  F089         	goto	l8957
  7117  010B16                     l8759:
  7118                           
  7119                           ; BSR set to: 1
  7120                           ;doprnt.c: 538: if(c != '%')
  7121  010B16  0E25               	movlw	37
  7122  010B18  0101               	movlb	1	; () banked
  7123  010B1A  1948               	xorwf	sprintf@c& (0+255),w,b
  7124  010B1C  B4D8               	btfsc	status,2,c
  7125  010B1E  D008               	goto	l8765
  7126                           
  7127                           ; BSR set to: 1
  7128                           ;doprnt.c: 540: {
  7129                           ;doprnt.c: 541: ((*sp++ = (c)));
  7130  010B20  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7131  010B24  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7132  010B28  C148  FFDF         	movff	sprintf@c,indf2
  7133  010B2C  EFB2  F089         	goto	l8955
  7134  010B30                     l8765:
  7135                           
  7136                           ;doprnt.c: 543: }
  7137                           ;doprnt.c: 548: flag = 0;
  7138  010B30  0E00               	movlw	0
  7139  010B32  0101               	movlb	1	; () banked
  7140  010B34  6F37               	movwf	(sprintf@flag+1)& (0+255),b
  7141  010B36  0E00               	movlw	0
  7142  010B38  6F36               	movwf	sprintf@flag& (0+255),b
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;doprnt.c: 611: if(*f == '.') {
  7146  010B3A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7147  010B3E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7148  010B42                     	if	0	;tblptru may be non-zero
  7149  010B42                     	endif
  7150  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7151  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  7152  010B44  6EF8               	movwf	tblptru,c
  7153  010B46                     	endif
  7154  010B46  0008               	tblrd		*
  7155  010B48  50F5               	movf	tablat,w,c
  7156  010B4A  0A2E               	xorlw	46
  7157  010B4C  A4D8               	btfss	status,2,c
  7158  010B4E  D03D               	goto	l8779
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;doprnt.c: 612: flag |= 0x4000;
  7162  010B50  0101               	movlb	1	; () banked
  7163  010B52  8D37               	bsf	(sprintf@flag+1)& (0+255),6,b
  7164                           
  7165                           ;doprnt.c: 613: f++;
  7166  010B54  0100               	movlb	0	; () banked
  7167  010B56  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7168  010B58  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;doprnt.c: 620: {
  7172                           ;doprnt.c: 621: prec = 0;
  7173  010B5A  0E00               	movlw	0
  7174  010B5C  0101               	movlb	1	; () banked
  7175  010B5E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7176  010B60  0E00               	movlw	0
  7177  010B62  6F42               	movwf	sprintf@prec& (0+255),b
  7178                           
  7179                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7180  010B64  D025               	goto	l8777
  7181  010B66                     l8773:
  7182                           
  7183                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7184  010B66  C142  F071         	movff	sprintf@prec,___wmul@multiplier
  7185  010B6A  C143  F072         	movff	sprintf@prec+1,___wmul@multiplier+1
  7186  010B6E  0E00               	movlw	0
  7187  010B70  0100               	movlb	0	; () banked
  7188  010B72  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7189  010B74  0E0A               	movlw	10
  7190  010B76  6F73               	movwf	___wmul@multiplicand& (0+255),b
  7191  010B78  EC4C  F0B1         	call	___wmul	;wreg free
  7192  010B7C  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7193  010B80  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7194  010B84                     	if	0	;tblptru may be non-zero
  7195  010B84                     	endif
  7196  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7197  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  7198  010B86  6EF8               	movwf	tblptru,c
  7199  010B88                     	endif
  7200  010B88  0008               	tblrd		*
  7201  010B8A  50F5               	movf	tablat,w,c
  7202  010B8C  0100               	movlb	0	; () banked
  7203  010B8E  2771               	addwf	?___wmul& (0+255),f,b
  7204  010B90  0E00               	movlw	0
  7205  010B92  0100               	movlb	0	; () banked
  7206  010B94  2372               	addwfc	(?___wmul+1)& (0+255),f,b
  7207  010B96  0ED0               	movlw	208
  7208  010B98  0100               	movlb	0	; () banked
  7209  010B9A  2571               	addwf	?___wmul& (0+255),w,b
  7210  010B9C  0101               	movlb	1	; () banked
  7211  010B9E  6F42               	movwf	sprintf@prec& (0+255),b
  7212  010BA0  0EFF               	movlw	255
  7213  010BA2  0100               	movlb	0	; () banked
  7214  010BA4  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  7215  010BA6  0101               	movlb	1	; () banked
  7216  010BA8  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7217                           
  7218                           ; BSR set to: 1
  7219  010BAA  0100               	movlb	0	; () banked
  7220  010BAC  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7221  010BAE  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7222  010BB0                     l8777:
  7223  010BB0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7224  010BB4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7225  010BB8                     	if	0	;tblptru may be non-zero
  7226  010BB8                     	endif
  7227  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7228  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  7229  010BBA  6EF8               	movwf	tblptru,c
  7230  010BBC                     	endif
  7231  010BBC  0008               	tblrd		*
  7232  010BBE  50F5               	movf	tablat,w,c
  7233  010BC0  ECB3  F0B1         	call	_isdigit
  7234  010BC4  A0D8               	btfss	status,0,c
  7235  010BC6  D00C               	goto	l8787
  7236  010BC8  D7CE               	goto	l8773
  7237  010BCA                     l8779:
  7238                           
  7239                           ;doprnt.c: 626: prec = 0;
  7240  010BCA  0E00               	movlw	0
  7241  010BCC  0101               	movlb	1	; () banked
  7242  010BCE  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7243  010BD0  0E00               	movlw	0
  7244  010BD2  6F42               	movwf	sprintf@prec& (0+255),b
  7245                           
  7246                           ; BSR set to: 1
  7247                           ;doprnt.c: 628: flag |= 0x1000;
  7248  010BD4  0101               	movlb	1	; () banked
  7249  010BD6  8937               	bsf	(sprintf@flag+1)& (0+255),4,b
  7250                           
  7251                           ; BSR set to: 1
  7252                           ;doprnt.c: 630: }
  7253                           ;doprnt.c: 635: switch(c = *f++) {
  7254  010BD8  D003               	goto	l8787
  7255  010BDA                     l8783:
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;doprnt.c: 663: flag |= 0x400;
  7259  010BDA  0101               	movlb	1	; () banked
  7260  010BDC  8537               	bsf	(sprintf@flag+1)& (0+255),2,b
  7261                           
  7262                           ;doprnt.c: 664: break;
  7263  010BDE  D015               	goto	l8789
  7264  010BE0                     l8787:
  7265  010BE0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7266  010BE4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7267  010BE8  0100               	movlb	0	; () banked
  7268  010BEA  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7269  010BEC  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7270  010BEE                     	if	0	;tblptru may be non-zero
  7271  010BEE                     	endif
  7272  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7273  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7274  010BF0  6EF8               	movwf	tblptru,c
  7275  010BF2                     	endif
  7276  010BF2  0008               	tblrd		*
  7277  010BF4  CFF5 F148          	movff	tablat,sprintf@c
  7278  010BF8  0101               	movlb	1	; () banked
  7279  010BFA  5148               	movf	sprintf@c& (0+255),w,b
  7280                           
  7281                           ; Switch size 1, requested type "space"
  7282                           ; Number of cases is 2, Range of values is 0 to 102
  7283                           ; switch strategies available:
  7284                           ; Name         Instructions Cycles
  7285                           ; simple_byte            7     4 (average)
  7286                           ;	Chosen strategy is simple_byte
  7287  010BFC  0A00               	xorlw	0	; case 0
  7288  010BFE  B4D8               	btfsc	status,2,c
  7289  010C00  D3C5               	goto	l8959
  7290  010C02  0A66               	xorlw	102	; case 102
  7291  010C04  B4D8               	btfsc	status,2,c
  7292  010C06  D7E9               	goto	l8783
  7293  010C08  D3B0               	goto	l8957
  7294  010C0A                     l8789:
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;doprnt.c: 825: if(flag & (0x700)) {
  7298  010C0A  0E07               	movlw	7
  7299  010C0C  0101               	movlb	1	; () banked
  7300  010C0E  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7301  010C10  B4D8               	btfsc	status,2,c
  7302  010C12  D353               	goto	l8937
  7303                           
  7304                           ; BSR set to: 1
  7305                           ;doprnt.c: 827: if(flag & 0x1000)
  7306  010C14  0101               	movlb	1	; () banked
  7307  010C16  A937               	btfss	(sprintf@flag+1)& (0+255),4,b
  7308  010C18  D005               	goto	l8795
  7309                           
  7310                           ; BSR set to: 1
  7311                           ;doprnt.c: 829: prec = 6;
  7312  010C1A  0E00               	movlw	0
  7313  010C1C  0101               	movlb	1	; () banked
  7314  010C1E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  7315  010C20  0E06               	movlw	6
  7316  010C22  6F42               	movwf	sprintf@prec& (0+255),b
  7317  010C24                     l8795:
  7318                           
  7319                           ; BSR set to: 1
  7320                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7321  010C24  C134  FFD9         	movff	sprintf@ap,fsr2l
  7322  010C28  C135  FFDA         	movff	sprintf@ap+1,fsr2h
  7323  010C2C  CFDE F144          	movff	postinc2,sprintf@fval
  7324  010C30  CFDE F145          	movff	postinc2,sprintf@fval+1
  7325  010C34  CFDE F146          	movff	postinc2,sprintf@fval+2
  7326  010C38  CFDE F147          	movff	postinc2,sprintf@fval+3
  7327                           
  7328                           ; BSR set to: 1
  7329  010C3C  0E04               	movlw	4
  7330  010C3E  0101               	movlb	1	; () banked
  7331  010C40  2734               	addwf	sprintf@ap& (0+255),f,b
  7332  010C42  0E00               	movlw	0
  7333  010C44  2335               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;doprnt.c: 831: if(fval < 0.0) {
  7337  010C46  0101               	movlb	1	; () banked
  7338  010C48  AF47               	btfss	(sprintf@fval+3)& (0+255),7,b
  7339  010C4A  D015               	goto	l8805
  7340                           
  7341                           ; BSR set to: 1
  7342                           ;doprnt.c: 832: fval = -fval;
  7343  010C4C  C144  F098         	movff	sprintf@fval,___flneg@f1
  7344  010C50  C145  F099         	movff	sprintf@fval+1,___flneg@f1+1
  7345  010C54  C146  F09A         	movff	sprintf@fval+2,___flneg@f1+2
  7346  010C58  C147  F09B         	movff	sprintf@fval+3,___flneg@f1+3
  7347  010C5C  EC30  F0B1         	call	___flneg	;wreg free
  7348  010C60  C098  F144         	movff	?___flneg,sprintf@fval
  7349  010C64  C099  F145         	movff	?___flneg+1,sprintf@fval+1
  7350  010C68  C09A  F146         	movff	?___flneg+2,sprintf@fval+2
  7351  010C6C  C09B  F147         	movff	?___flneg+3,sprintf@fval+3
  7352                           
  7353                           ;doprnt.c: 833: flag |= 0x03;
  7354  010C70  0E03               	movlw	3
  7355  010C72  0101               	movlb	1	; () banked
  7356  010C74  1336               	iorwf	sprintf@flag& (0+255),f,b
  7357  010C76                     l8805:
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;doprnt.c: 834: }
  7361                           ;doprnt.c: 835: exp = 0;
  7362  010C76  0E00               	movlw	0
  7363  010C78  0101               	movlb	1	; () banked
  7364  010C7A  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  7365  010C7C  0E00               	movlw	0
  7366  010C7E  6F3C               	movwf	sprintf@exp& (0+255),b
  7367                           
  7368                           ; BSR set to: 1
  7369                           ;doprnt.c: 836: if( fval!=0) {
  7370  010C80  0101               	movlb	1	; () banked
  7371  010C82  5144               	movf	sprintf@fval& (0+255),w,b
  7372  010C84  0101               	movlb	1	; () banked
  7373  010C86  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7374  010C88  0101               	movlb	1	; () banked
  7375  010C8A  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7376  010C8C  0101               	movlb	1	; () banked
  7377  010C8E  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7378  010C90  B4D8               	btfsc	status,2,c
  7379  010C92  D08E               	goto	l8833
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7383  010C94  0101               	movlb	1	; () banked
  7384  010C96  3546               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7385  010C98  3547               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7386  010C9A  0F82               	addlw	130
  7387  010C9C  0101               	movlb	1	; () banked
  7388  010C9E  6F3C               	movwf	sprintf@exp& (0+255),b
  7389  010CA0  0101               	movlb	1	; () banked
  7390  010CA2  6B3D               	clrf	(sprintf@exp+1)& (0+255),b
  7391  010CA4  0EFF               	movlw	255
  7392  010CA6  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7393                           
  7394                           ; BSR set to: 1
  7395                           ;doprnt.c: 838: exp--;
  7396  010CA8  0101               	movlb	1	; () banked
  7397  010CAA  073C               	decf	sprintf@exp& (0+255),f,b
  7398  010CAC  A0D8               	btfss	status,0,c
  7399  010CAE  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7400                           
  7401                           ; BSR set to: 1
  7402                           ;doprnt.c: 839: exp *= 3;
  7403  010CB0  C13C  F071         	movff	sprintf@exp,___wmul@multiplier
  7404  010CB4  C13D  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
  7405  010CB8  0E00               	movlw	0
  7406  010CBA  0100               	movlb	0	; () banked
  7407  010CBC  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7408  010CBE  0E03               	movlw	3
  7409  010CC0  6F73               	movwf	___wmul@multiplicand& (0+255),b
  7410  010CC2  EC4C  F0B1         	call	___wmul	;wreg free
  7411  010CC6  C071  F13C         	movff	?___wmul,sprintf@exp
  7412  010CCA  C072  F13D         	movff	?___wmul+1,sprintf@exp+1
  7413                           
  7414                           ;doprnt.c: 840: exp /= 10;
  7415  010CCE  C13C  F077         	movff	sprintf@exp,___awdiv@dividend
  7416  010CD2  C13D  F078         	movff	sprintf@exp+1,___awdiv@dividend+1
  7417  010CD6  0E00               	movlw	0
  7418  010CD8  0100               	movlb	0	; () banked
  7419  010CDA  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  7420  010CDC  0E0A               	movlw	10
  7421  010CDE  6F79               	movwf	___awdiv@divisor& (0+255),b
  7422  010CE0  ECFB  F0AB         	call	___awdiv	;wreg free
  7423  010CE4  C077  F13C         	movff	?___awdiv,sprintf@exp
  7424  010CE8  C078  F13D         	movff	?___awdiv+1,sprintf@exp+1
  7425                           
  7426                           ;doprnt.c: 841: if(exp < 0)
  7427  010CEC  0101               	movlb	1	; () banked
  7428  010CEE  AF3D               	btfss	(sprintf@exp+1)& (0+255),7,b
  7429  010CF0  D004               	goto	l8821
  7430                           
  7431                           ; BSR set to: 1
  7432                           ;doprnt.c: 842: exp--;
  7433  010CF2  0101               	movlb	1	; () banked
  7434  010CF4  073C               	decf	sprintf@exp& (0+255),f,b
  7435  010CF6  A0D8               	btfss	status,0,c
  7436  010CF8  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7437  010CFA                     l8821:
  7438                           
  7439                           ; BSR set to: 1
  7440                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7441  010CFA  0101               	movlb	1	; () banked
  7442  010CFC  513C               	movf	sprintf@exp& (0+255),w,b
  7443  010CFE  0800               	sublw	0
  7444  010D00  EC8A  F094         	call	_scale
  7445  010D04  C098  F13E         	movff	?_scale,sprintf@tmpval
  7446  010D08  C099  F13F         	movff	?_scale+1,sprintf@tmpval+1
  7447  010D0C  C09A  F140         	movff	?_scale+2,sprintf@tmpval+2
  7448  010D10  C09B  F141         	movff	?_scale+3,sprintf@tmpval+3
  7449                           
  7450                           ;doprnt.c: 847: tmpval.integ *= fval;
  7451  010D14  C13E  F07F         	movff	sprintf@tmpval,___flmul@b
  7452  010D18  C13F  F080         	movff	sprintf@tmpval+1,___flmul@b+1
  7453  010D1C  C140  F081         	movff	sprintf@tmpval+2,___flmul@b+2
  7454  010D20  C141  F082         	movff	sprintf@tmpval+3,___flmul@b+3
  7455  010D24  C144  F083         	movff	sprintf@fval,___flmul@a
  7456  010D28  C145  F084         	movff	sprintf@fval+1,___flmul@a+1
  7457  010D2C  C146  F085         	movff	sprintf@fval+2,___flmul@a+2
  7458  010D30  C147  F086         	movff	sprintf@fval+3,___flmul@a+3
  7459  010D34  ECF1  F09B         	call	___flmul	;wreg free
  7460  010D38  C07F  F13E         	movff	?___flmul,sprintf@tmpval
  7461  010D3C  C080  F13F         	movff	?___flmul+1,sprintf@tmpval+1
  7462  010D40  C081  F140         	movff	?___flmul+2,sprintf@tmpval+2
  7463  010D44  C082  F141         	movff	?___flmul+3,sprintf@tmpval+3
  7464                           
  7465                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7466  010D48  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7467  010D4C  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7468  010D50  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7469  010D54  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7470  010D58  0E00               	movlw	0
  7471  010D5A  0100               	movlb	0	; () banked
  7472  010D5C  6F75               	movwf	___flge@ff2& (0+255),b
  7473  010D5E  0E00               	movlw	0
  7474  010D60  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7475  010D62  0E80               	movlw	128
  7476  010D64  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7477  010D66  0E3F               	movlw	63
  7478  010D68  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7479  010D6A  ECBC  F0A8         	call	___flge	;wreg free
  7480  010D6E  0100               	movlb	0	; () banked
  7481  010D70  B0D8               	btfsc	status,0,c
  7482  010D72  D005               	goto	l8829
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;doprnt.c: 849: exp--;
  7486  010D74  0101               	movlb	1	; () banked
  7487  010D76  073C               	decf	sprintf@exp& (0+255),f,b
  7488  010D78  A0D8               	btfss	status,0,c
  7489  010D7A  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7490  010D7C  D019               	goto	l8833
  7491  010D7E                     l8829:
  7492                           
  7493                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7494  010D7E  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7495  010D82  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7496  010D86  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7497  010D8A  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7498  010D8E  0E00               	movlw	0
  7499  010D90  0100               	movlb	0	; () banked
  7500  010D92  6F75               	movwf	___flge@ff2& (0+255),b
  7501  010D94  0E00               	movlw	0
  7502  010D96  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7503  010D98  0E20               	movlw	32
  7504  010D9A  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7505  010D9C  0E41               	movlw	65
  7506  010D9E  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7507  010DA0  ECBC  F0A8         	call	___flge	;wreg free
  7508  010DA4  0100               	movlb	0	; () banked
  7509  010DA6  A0D8               	btfss	status,0,c
  7510  010DA8  D003               	goto	l8833
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;doprnt.c: 851: exp++;
  7514  010DAA  0101               	movlb	1	; () banked
  7515  010DAC  4B3C               	infsnz	sprintf@exp& (0+255),f,b
  7516  010DAE  2B3D               	incf	(sprintf@exp+1)& (0+255),f,b
  7517  010DB0                     l8833:
  7518                           
  7519                           ;doprnt.c: 852: }
  7520                           ;doprnt.c: 1112: if(prec <= 12)
  7521  010DB0  0101               	movlb	1	; () banked
  7522  010DB2  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7523  010DB4  D008               	goto	l8835
  7524  010DB6  0101               	movlb	1	; () banked
  7525  010DB8  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7526  010DBA  E123               	bnz	l8837
  7527  010DBC  0E0D               	movlw	13
  7528  010DBE  0101               	movlb	1	; () banked
  7529  010DC0  5D42               	subwf	sprintf@prec& (0+255),w,b
  7530  010DC2  B0D8               	btfsc	status,0,c
  7531  010DC4  D01E               	goto	l8837
  7532  010DC6                     l8835:
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;doprnt.c: 1113: fval += fround(prec);
  7536  010DC6  C144  F0A5         	movff	sprintf@fval,___fladd@b
  7537  010DCA  C145  F0A6         	movff	sprintf@fval+1,___fladd@b+1
  7538  010DCE  C146  F0A7         	movff	sprintf@fval+2,___fladd@b+2
  7539  010DD2  C147  F0A8         	movff	sprintf@fval+3,___fladd@b+3
  7540  010DD6  0101               	movlb	1	; () banked
  7541  010DD8  5142               	movf	sprintf@prec& (0+255),w,b
  7542  010DDA  ECF3  F0A1         	call	_fround
  7543  010DDE  C098  F0A9         	movff	?_fround,___fladd@a
  7544  010DE2  C099  F0AA         	movff	?_fround+1,___fladd@a+1
  7545  010DE6  C09A  F0AB         	movff	?_fround+2,___fladd@a+2
  7546  010DEA  C09B  F0AC         	movff	?_fround+3,___fladd@a+3
  7547  010DEE  EC9D  F099         	call	___fladd	;wreg free
  7548  010DF2  C0A5  F144         	movff	?___fladd,sprintf@fval
  7549  010DF6  C0A6  F145         	movff	?___fladd+1,sprintf@fval+1
  7550  010DFA  C0A7  F146         	movff	?___fladd+2,sprintf@fval+2
  7551  010DFE  C0A8  F147         	movff	?___fladd+3,sprintf@fval+3
  7552  010E02                     l8837:
  7553                           
  7554                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7555  010E02  0101               	movlb	1	; () banked
  7556  010E04  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7557  010E06  D008               	goto	l8839
  7558  010E08  0101               	movlb	1	; () banked
  7559  010E0A  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7560  010E0C  E12E               	bnz	l8845
  7561  010E0E  0E0A               	movlw	10
  7562  010E10  0101               	movlb	1	; () banked
  7563  010E12  5D3C               	subwf	sprintf@exp& (0+255),w,b
  7564  010E14  B0D8               	btfsc	status,0,c
  7565  010E16  D029               	goto	l8845
  7566  010E18                     l8839:
  7567                           
  7568                           ; BSR set to: 1
  7569  010E18  0101               	movlb	1	; () banked
  7570  010E1A  5144               	movf	sprintf@fval& (0+255),w,b
  7571  010E1C  0101               	movlb	1	; () banked
  7572  010E1E  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7573  010E20  0101               	movlb	1	; () banked
  7574  010E22  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7575  010E24  0101               	movlb	1	; () banked
  7576  010E26  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7577  010E28  B4D8               	btfsc	status,2,c
  7578  010E2A  D06D               	goto	l8859
  7579                           
  7580                           ; BSR set to: 1
  7581  010E2C  C144  F0B9         	movff	sprintf@fval,___fltol@f1
  7582  010E30  C145  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  7583  010E34  C146  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  7584  010E38  C147  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  7585  010E3C  ECFF  F0AA         	call	___fltol	;wreg free
  7586  010E40  0100               	movlb	0	; () banked
  7587  010E42  51B9               	movf	?___fltol& (0+255),w,b
  7588  010E44  0100               	movlb	0	; () banked
  7589  010E46  11BA               	iorwf	(?___fltol+1)& (0+255),w,b
  7590  010E48  0100               	movlb	0	; () banked
  7591  010E4A  11BB               	iorwf	(?___fltol+2)& (0+255),w,b
  7592  010E4C  0100               	movlb	0	; () banked
  7593  010E4E  11BC               	iorwf	(?___fltol+3)& (0+255),w,b
  7594  010E50  A4D8               	btfss	status,2,c
  7595  010E52  D059               	goto	l8859
  7596                           
  7597                           ; BSR set to: 0
  7598  010E54  0101               	movlb	1	; () banked
  7599  010E56  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7600  010E58  D056               	goto	l8859
  7601  010E5A  0101               	movlb	1	; () banked
  7602  010E5C  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7603  010E5E  E105               	bnz	l8845
  7604  010E60  0E02               	movlw	2
  7605  010E62  0101               	movlb	1	; () banked
  7606  010E64  5D3C               	subwf	sprintf@exp& (0+255),w,b
  7607  010E66  A0D8               	btfss	status,0,c
  7608  010E68  D04E               	goto	l8859
  7609  010E6A                     l8845:
  7610                           
  7611                           ; BSR set to: 1
  7612                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7613  010E6A  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7614  010E6E  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7615  010E72  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7616  010E76  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7617  010E7A  0E5F               	movlw	95
  7618  010E7C  0100               	movlb	0	; () banked
  7619  010E7E  6F75               	movwf	___flge@ff2& (0+255),b
  7620  010E80  0E70               	movlw	112
  7621  010E82  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7622  010E84  0E89               	movlw	137
  7623  010E86  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7624  010E88  0E40               	movlw	64
  7625  010E8A  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7626  010E8C  ECBC  F0A8         	call	___flge	;wreg free
  7627  010E90  0100               	movlb	0	; () banked
  7628  010E92  B0D8               	btfsc	status,0,c
  7629  010E94  D003               	goto	l8849
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7633  010E96  0101               	movlb	1	; () banked
  7634  010E98  0EF7               	movlw	247
  7635  010E9A  D002               	goto	L6
  7636  010E9C                     l8849:
  7637                           
  7638                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7639  010E9C  0101               	movlb	1	; () banked
  7640  010E9E  0EF8               	movlw	248
  7641  010EA0                     L6:
  7642  010EA0  273C               	addwf	sprintf@exp& (0+255),f,b
  7643  010EA2  0EFF               	movlw	255
  7644  010EA4  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7645                           
  7646                           ; BSR set to: 1
  7647                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7648                           
  7649                           ; BSR set to: 1
  7650  010EA6  0101               	movlb	1	; () banked
  7651  010EA8  513C               	movf	sprintf@exp& (0+255),w,b
  7652  010EAA  EC8A  F094         	call	_scale
  7653  010EAE  C098  F13E         	movff	?_scale,sprintf@tmpval
  7654  010EB2  C099  F13F         	movff	?_scale+1,sprintf@tmpval+1
  7655  010EB6  C09A  F140         	movff	?_scale+2,sprintf@tmpval+2
  7656  010EBA  C09B  F141         	movff	?_scale+3,sprintf@tmpval+3
  7657  010EBE  C144  F071         	movff	sprintf@fval,__div_to_l_@f1
  7658  010EC2  C145  F072         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7659  010EC6  C146  F073         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7660  010ECA  C147  F074         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7661  010ECE  C13E  F075         	movff	sprintf@tmpval,__div_to_l_@f2
  7662  010ED2  C13F  F076         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7663  010ED6  C140  F077         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7664  010EDA  C141  F078         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7665  010EDE  EC84  F0A9         	call	__div_to_l_	;wreg free
  7666  010EE2  C071  F138         	movff	?__div_to_l_,sprintf@val
  7667  010EE6  C072  F139         	movff	?__div_to_l_+1,sprintf@val+1
  7668  010EEA  C073  F13A         	movff	?__div_to_l_+2,sprintf@val+2
  7669  010EEE  C074  F13B         	movff	?__div_to_l_+3,sprintf@val+3
  7670                           
  7671                           ;doprnt.c: 1129: fval = 0.0;
  7672  010EF2  0E00               	movlw	0
  7673  010EF4  0101               	movlb	1	; () banked
  7674  010EF6  6F44               	movwf	sprintf@fval& (0+255),b
  7675  010EF8  0E00               	movlw	0
  7676  010EFA  6F45               	movwf	(sprintf@fval+1)& (0+255),b
  7677  010EFC  0E00               	movlw	0
  7678  010EFE  6F46               	movwf	(sprintf@fval+2)& (0+255),b
  7679  010F00  0E00               	movlw	0
  7680  010F02  6F47               	movwf	(sprintf@fval+3)& (0+255),b
  7681                           
  7682                           ;doprnt.c: 1130: } else {
  7683  010F04  D03C               	goto	l8863
  7684  010F06                     l8859:
  7685                           
  7686                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7687  010F06  C144  F0B9         	movff	sprintf@fval,___fltol@f1
  7688  010F0A  C145  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  7689  010F0E  C146  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  7690  010F12  C147  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  7691  010F16  ECFF  F0AA         	call	___fltol	;wreg free
  7692  010F1A  C0B9  F138         	movff	?___fltol,sprintf@val
  7693  010F1E  C0BA  F139         	movff	?___fltol+1,sprintf@val+1
  7694  010F22  C0BB  F13A         	movff	?___fltol+2,sprintf@val+2
  7695  010F26  C0BC  F13B         	movff	?___fltol+3,sprintf@val+3
  7696                           
  7697                           ;doprnt.c: 1132: fval -= (double)val;
  7698  010F2A  C144  F0B9         	movff	sprintf@fval,___flsub@b
  7699  010F2E  C145  F0BA         	movff	sprintf@fval+1,___flsub@b+1
  7700  010F32  C146  F0BB         	movff	sprintf@fval+2,___flsub@b+2
  7701  010F36  C147  F0BC         	movff	sprintf@fval+3,___flsub@b+3
  7702  010F3A  C138  F071         	movff	sprintf@val,___xxtofl@val
  7703  010F3E  C139  F072         	movff	sprintf@val+1,___xxtofl@val+1
  7704  010F42  C13A  F073         	movff	sprintf@val+2,___xxtofl@val+2
  7705  010F46  C13B  F074         	movff	sprintf@val+3,___xxtofl@val+3
  7706  010F4A  0E00               	movlw	0
  7707  010F4C  EC6C  F0A4         	call	___xxtofl
  7708  010F50  C071  F0BD         	movff	?___xxtofl,___flsub@a
  7709  010F54  C072  F0BE         	movff	?___xxtofl+1,___flsub@a+1
  7710  010F58  C073  F0BF         	movff	?___xxtofl+2,___flsub@a+2
  7711  010F5C  C074  F0C0         	movff	?___xxtofl+3,___flsub@a+3
  7712  010F60  EC8B  F0B0         	call	___flsub	;wreg free
  7713  010F64  C0B9  F144         	movff	?___flsub,sprintf@fval
  7714  010F68  C0BA  F145         	movff	?___flsub+1,sprintf@fval+1
  7715  010F6C  C0BB  F146         	movff	?___flsub+2,sprintf@fval+2
  7716  010F70  C0BC  F147         	movff	?___flsub+3,sprintf@fval+3
  7717                           
  7718                           ;doprnt.c: 1133: exp = 0;
  7719  010F74  0E00               	movlw	0
  7720  010F76  0101               	movlb	1	; () banked
  7721  010F78  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  7722  010F7A  0E00               	movlw	0
  7723  010F7C  6F3C               	movwf	sprintf@exp& (0+255),b
  7724  010F7E                     l8863:
  7725                           
  7726                           ; BSR set to: 1
  7727                           ;doprnt.c: 1134: }
  7728                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7729  010F7E  0E01               	movlw	1
  7730  010F80  0101               	movlb	1	; () banked
  7731  010F82  6F48               	movwf	sprintf@c& (0+255),b
  7732  010F84                     l8865:
  7733                           
  7734                           ; BSR set to: 1
  7735  010F84  0E0A               	movlw	10
  7736  010F86  0101               	movlb	1	; () banked
  7737  010F88  1948               	xorwf	sprintf@c& (0+255),w,b
  7738  010F8A  B4D8               	btfsc	status,2,c
  7739  010F8C  D021               	goto	l8877
  7740                           
  7741                           ; BSR set to: 1
  7742                           ;doprnt.c: 1137: if(val < dpowers[c])
  7743                           
  7744                           ; BSR set to: 1
  7745                           
  7746                           ; BSR set to: 1
  7747  010F8E  0101               	movlb	1	; () banked
  7748  010F90  5148               	movf	sprintf@c& (0+255),w,b
  7749  010F92  0D04               	mullw	4
  7750  010F94  0E31               	movlw	low _dpowers
  7751  010F96  24F3               	addwf	prodl,w,c
  7752  010F98  6EF6               	movwf	tblptrl,c
  7753  010F9A  0EFE               	movlw	high _dpowers
  7754  010F9C  20F4               	addwfc	prodh,w,c
  7755  010F9E  6EF7               	movwf	tblptrh,c
  7756  010FA0                     	if	1	;There are 3 active tblptr bytes
  7757  010FA0  6AF8               	clrf	tblptru,c
  7758  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7759  010FA4  22F8               	addwfc	tblptru,f,c
  7760  010FA6                     	endif
  7761  010FA6  0009               	tblrd		*+
  7762  010FA8  50F5               	movf	tablat,w,c
  7763  010FAA  0101               	movlb	1	; () banked
  7764  010FAC  5D38               	subwf	sprintf@val& (0+255),w,b
  7765  010FAE  0009               	tblrd		*+
  7766  010FB0  50F5               	movf	tablat,w,c
  7767  010FB2  0101               	movlb	1	; () banked
  7768  010FB4  5939               	subwfb	(sprintf@val+1)& (0+255),w,b
  7769  010FB6  0009               	tblrd		*+
  7770  010FB8  50F5               	movf	tablat,w,c
  7771  010FBA  0101               	movlb	1	; () banked
  7772  010FBC  593A               	subwfb	(sprintf@val+2)& (0+255),w,b
  7773  010FBE  0009               	tblrd		*+
  7774  010FC0  50F5               	movf	tablat,w,c
  7775  010FC2  0101               	movlb	1	; () banked
  7776  010FC4  593B               	subwfb	(sprintf@val+3)& (0+255),w,b
  7777  010FC6  A0D8               	btfss	status,0,c
  7778  010FC8  D003               	goto	l8877
  7779                           
  7780                           ; BSR set to: 1
  7781                           
  7782                           ; BSR set to: 1
  7783                           
  7784                           ; BSR set to: 1
  7785                           ;doprnt.c: 1138: break;
  7786  010FCA  0101               	movlb	1	; () banked
  7787  010FCC  2B48               	incf	sprintf@c& (0+255),f,b
  7788  010FCE  D7DA               	goto	l8865
  7789  010FD0                     l8877:
  7790                           
  7791                           ; BSR set to: 1
  7792                           ;doprnt.c: 1175: {
  7793                           ;doprnt.c: 1188: if(flag & 0x03)
  7794  010FD0  0E03               	movlw	3
  7795  010FD2  0101               	movlb	1	; () banked
  7796  010FD4  1536               	andwf	sprintf@flag& (0+255),w,b
  7797  010FD6  0100               	movlb	0	; () banked
  7798  010FD8  6FCB               	movwf	??_sprintf& (0+255),b
  7799  010FDA  0E00               	movlw	0
  7800  010FDC  0101               	movlb	1	; () banked
  7801  010FDE  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7802  010FE0  0100               	movlb	0	; () banked
  7803  010FE2  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  7804  010FE4  0100               	movlb	0	; () banked
  7805  010FE6  51CB               	movf	??_sprintf& (0+255),w,b
  7806  010FE8  0100               	movlb	0	; () banked
  7807  010FEA  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  7808  010FEC  B4D8               	btfsc	status,2,c
  7809  010FEE  D058               	goto	l8891
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7813  010FF0  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7814  010FF4  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7815  010FF8  0E2D               	movlw	45
  7816  010FFA  D050               	goto	L7
  7817  010FFC                     l8881:
  7818                           
  7819                           ; BSR set to: 0
  7820  010FFC  0100               	movlb	0	; () banked
  7821  010FFE  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7822  011000  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;doprnt.c: 1195: }
  7826                           ;doprnt.c: 1196: while(c--) {
  7827  011002  D04E               	goto	l8891
  7828  011004                     l8883:
  7829                           
  7830                           ;doprnt.c: 1200: {
  7831                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7832  011004  C138  F071         	movff	sprintf@val,___lldiv@dividend
  7833  011008  C139  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7834  01100C  C13A  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7835  011010  C13B  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7836  011014  0101               	movlb	1	; () banked
  7837  011016  5148               	movf	sprintf@c& (0+255),w,b
  7838  011018  0D04               	mullw	4
  7839  01101A  0E31               	movlw	low _dpowers
  7840  01101C  24F3               	addwf	prodl,w,c
  7841  01101E  6EF6               	movwf	tblptrl,c
  7842  011020  0EFE               	movlw	high _dpowers
  7843  011022  20F4               	addwfc	prodh,w,c
  7844  011024  6EF7               	movwf	tblptrh,c
  7845  011026                     	if	1	;There are 3 active tblptr bytes
  7846  011026  6AF8               	clrf	tblptru,c
  7847  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7848  01102A  22F8               	addwfc	tblptru,f,c
  7849  01102C                     	endif
  7850  01102C  0009               	tblrd		*+
  7851  01102E  CFF5 F075          	movff	tablat,___lldiv@divisor
  7852  011032  0009               	tblrd		*+
  7853  011034  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7854  011038  0009               	tblrd		*+
  7855  01103A  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7856  01103E  000A               	tblrd		*-
  7857  011040  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7858  011044  ECB9  F0AC         	call	___lldiv	;wreg free
  7859  011048  C071  F13E         	movff	?___lldiv,sprintf@tmpval
  7860  01104C  C072  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  7861  011050  C073  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  7862  011054  C074  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  7863                           
  7864                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7865  011058  C13E  F071         	movff	sprintf@tmpval,___llmod@dividend
  7866  01105C  C13F  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7867  011060  C140  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7868  011064  C141  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7869  011068  0E0A               	movlw	10
  7870  01106A  0100               	movlb	0	; () banked
  7871  01106C  6F75               	movwf	___llmod@divisor& (0+255),b
  7872  01106E  0E00               	movlw	0
  7873  011070  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  7874  011072  0E00               	movlw	0
  7875  011074  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  7876  011076  0E00               	movlw	0
  7877  011078  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  7878  01107A  EC6E  F0AE         	call	___llmod	;wreg free
  7879  01107E  C071  F13E         	movff	?___llmod,sprintf@tmpval
  7880  011082  C072  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  7881  011086  C073  F140         	movff	?___llmod+2,sprintf@tmpval+2
  7882  01108A  C074  F141         	movff	?___llmod+3,sprintf@tmpval+3
  7883                           
  7884                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7885  01108E  0101               	movlb	1	; () banked
  7886  011090  513E               	movf	sprintf@tmpval& (0+255),w,b
  7887  011092  0F30               	addlw	48
  7888  011094  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7889  011098  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7890  01109C                     L7:
  7891  01109C  6EDF               	movwf	indf2,c
  7892  01109E  D7AE               	goto	l8881
  7893  0110A0                     l8891:
  7894                           
  7895                           ; BSR set to: 0
  7896  0110A0  0101               	movlb	1	; () banked
  7897  0110A2  0748               	decf	sprintf@c& (0+255),f,b
  7898  0110A4  0101               	movlb	1	; () banked
  7899  0110A6  2948               	incf	sprintf@c& (0+255),w,b
  7900  0110A8  B4D8               	btfsc	status,2,c
  7901  0110AA  D00E               	goto	l8899
  7902  0110AC  D7AB               	goto	l8883
  7903  0110AE                     l8893:
  7904                           
  7905                           ; BSR set to: 1
  7906                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7907  0110AE  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7908  0110B2  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7909  0110B6  0E30               	movlw	48
  7910  0110B8  6EDF               	movwf	indf2,c
  7911                           
  7912                           ; BSR set to: 1
  7913  0110BA  0100               	movlb	0	; () banked
  7914  0110BC  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7915  0110BE  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;doprnt.c: 1209: exp--;
  7919  0110C0  0101               	movlb	1	; () banked
  7920  0110C2  073C               	decf	sprintf@exp& (0+255),f,b
  7921  0110C4  A0D8               	btfss	status,0,c
  7922  0110C6  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7923  0110C8                     l8899:
  7924                           
  7925                           ; BSR set to: 1
  7926  0110C8  0101               	movlb	1	; () banked
  7927  0110CA  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7928  0110CC  D007               	goto	l8901
  7929  0110CE  0101               	movlb	1	; () banked
  7930  0110D0  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7931  0110D2  E1ED               	bnz	l8893
  7932  0110D4  0101               	movlb	1	; () banked
  7933  0110D6  053C               	decf	sprintf@exp& (0+255),w,b
  7934  0110D8  B0D8               	btfsc	status,0,c
  7935  0110DA  D7E9               	goto	l8893
  7936  0110DC                     l8901:
  7937                           
  7938                           ; BSR set to: 1
  7939                           ;doprnt.c: 1210: }
  7940                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7941  0110DC  0101               	movlb	1	; () banked
  7942  0110DE  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7943  0110E0  D00C               	goto	l1029
  7944  0110E2  0101               	movlb	1	; () banked
  7945  0110E4  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7946  0110E6  E105               	bnz	u11910
  7947  0110E8  0E09               	movlw	9
  7948  0110EA  0101               	movlb	1	; () banked
  7949  0110EC  5D42               	subwf	sprintf@prec& (0+255),w,b
  7950  0110EE  A0D8               	btfss	status,0,c
  7951  0110F0  D004               	goto	l1029
  7952  0110F2                     u11910:
  7953                           
  7954                           ; BSR set to: 1
  7955                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7956  0110F2  0E08               	movlw	8
  7957  0110F4  0101               	movlb	1	; () banked
  7958  0110F6  6F48               	movwf	sprintf@c& (0+255),b
  7959  0110F8  D002               	goto	l8905
  7960  0110FA                     l1029:
  7961                           
  7962                           ; BSR set to: 1
  7963                           ;doprnt.c: 1213: else
  7964                           ;doprnt.c: 1214: c = prec;
  7965  0110FA  C142  F148         	movff	sprintf@prec,sprintf@c
  7966  0110FE                     l8905:
  7967                           
  7968                           ; BSR set to: 1
  7969                           ;doprnt.c: 1215: prec -= c;
  7970  0110FE  0101               	movlb	1	; () banked
  7971  011100  5148               	movf	sprintf@c& (0+255),w,b
  7972  011102  0101               	movlb	1	; () banked
  7973  011104  5F42               	subwf	sprintf@prec& (0+255),f,b
  7974  011106  0E00               	movlw	0
  7975  011108  0101               	movlb	1	; () banked
  7976  01110A  BF48               	btfsc	sprintf@c& (0+255),7,b
  7977  01110C  0EFF               	movlw	255
  7978  01110E  0101               	movlb	1	; () banked
  7979  011110  5B43               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7980                           
  7981                           ; BSR set to: 1
  7982                           ;doprnt.c: 1219: if(c)
  7983  011112  0101               	movlb	1	; () banked
  7984  011114  5148               	movf	sprintf@c& (0+255),w,b
  7985  011116  0101               	movlb	1	; () banked
  7986  011118  B4D8               	btfsc	status,2,c
  7987  01111A  D009               	goto	l8913
  7988                           
  7989                           ; BSR set to: 1
  7990                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7991  01111C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7992  011120  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7993  011124  0E2E               	movlw	46
  7994  011126  6EDF               	movwf	indf2,c
  7995                           
  7996                           ; BSR set to: 1
  7997  011128  0100               	movlb	0	; () banked
  7998  01112A  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7999  01112C  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8000  01112E                     l8913:
  8001                           
  8002                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8003  01112E  0101               	movlb	1	; () banked
  8004  011130  5148               	movf	sprintf@c& (0+255),w,b
  8005  011132  EC8A  F094         	call	_scale
  8006  011136  C098  F130         	movff	?_scale,_sprintf$4257
  8007  01113A  C099  F131         	movff	?_scale+1,_sprintf$4257+1
  8008  01113E  C09A  F132         	movff	?_scale+2,_sprintf$4257+2
  8009  011142  C09B  F133         	movff	?_scale+3,_sprintf$4257+3
  8010                           
  8011                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8012  011146  C144  F083         	movff	sprintf@fval,___flmul@a
  8013  01114A  C145  F084         	movff	sprintf@fval+1,___flmul@a+1
  8014  01114E  C146  F085         	movff	sprintf@fval+2,___flmul@a+2
  8015  011152  C147  F086         	movff	sprintf@fval+3,___flmul@a+3
  8016  011156  C130  F07F         	movff	_sprintf$4257,___flmul@b
  8017  01115A  C131  F080         	movff	_sprintf$4257+1,___flmul@b+1
  8018  01115E  C132  F081         	movff	_sprintf$4257+2,___flmul@b+2
  8019  011162  C133  F082         	movff	_sprintf$4257+3,___flmul@b+3
  8020  011166  ECF1  F09B         	call	___flmul	;wreg free
  8021  01116A  C07F  F0B9         	movff	?___flmul,___fltol@f1
  8022  01116E  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  8023  011172  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  8024  011176  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  8025  01117A  ECFF  F0AA         	call	___fltol	;wreg free
  8026  01117E  C0B9  F138         	movff	?___fltol,sprintf@val
  8027  011182  C0BA  F139         	movff	?___fltol+1,sprintf@val+1
  8028  011186  C0BB  F13A         	movff	?___fltol+2,sprintf@val+2
  8029  01118A  C0BC  F13B         	movff	?___fltol+3,sprintf@val+3
  8030                           
  8031                           ;doprnt.c: 1228: while(c--) {
  8032  01118E  D07A               	goto	l8927
  8033  011190                     l8917:
  8034                           
  8035                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8036  011190  C138  F071         	movff	sprintf@val,___lldiv@dividend
  8037  011194  C139  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8038  011198  C13A  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8039  01119C  C13B  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8040  0111A0  0101               	movlb	1	; () banked
  8041  0111A2  5148               	movf	sprintf@c& (0+255),w,b
  8042  0111A4  0D04               	mullw	4
  8043  0111A6  0E31               	movlw	low _dpowers
  8044  0111A8  24F3               	addwf	prodl,w,c
  8045  0111AA  6EF6               	movwf	tblptrl,c
  8046  0111AC  0EFE               	movlw	high _dpowers
  8047  0111AE  20F4               	addwfc	prodh,w,c
  8048  0111B0  6EF7               	movwf	tblptrh,c
  8049  0111B2                     	if	1	;There are 3 active tblptr bytes
  8050  0111B2  6AF8               	clrf	tblptru,c
  8051  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  8052  0111B6  22F8               	addwfc	tblptru,f,c
  8053  0111B8                     	endif
  8054  0111B8  0009               	tblrd		*+
  8055  0111BA  CFF5 F075          	movff	tablat,___lldiv@divisor
  8056  0111BE  0009               	tblrd		*+
  8057  0111C0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8058  0111C4  0009               	tblrd		*+
  8059  0111C6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8060  0111CA  000A               	tblrd		*-
  8061  0111CC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8062  0111D0  ECB9  F0AC         	call	___lldiv	;wreg free
  8063  0111D4  C071  F13E         	movff	?___lldiv,sprintf@tmpval
  8064  0111D8  C072  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  8065  0111DC  C073  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  8066  0111E0  C074  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  8067                           
  8068                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8069  0111E4  C13E  F071         	movff	sprintf@tmpval,___llmod@dividend
  8070  0111E8  C13F  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8071  0111EC  C140  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8072  0111F0  C141  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8073  0111F4  0E0A               	movlw	10
  8074  0111F6  0100               	movlb	0	; () banked
  8075  0111F8  6F75               	movwf	___llmod@divisor& (0+255),b
  8076  0111FA  0E00               	movlw	0
  8077  0111FC  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8078  0111FE  0E00               	movlw	0
  8079  011200  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8080  011202  0E00               	movlw	0
  8081  011204  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8082  011206  EC6E  F0AE         	call	___llmod	;wreg free
  8083  01120A  C071  F13E         	movff	?___llmod,sprintf@tmpval
  8084  01120E  C072  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  8085  011212  C073  F140         	movff	?___llmod+2,sprintf@tmpval+2
  8086  011216  C074  F141         	movff	?___llmod+3,sprintf@tmpval+3
  8087                           
  8088                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8089  01121A  0101               	movlb	1	; () banked
  8090  01121C  513E               	movf	sprintf@tmpval& (0+255),w,b
  8091  01121E  0F30               	addlw	48
  8092  011220  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8093  011224  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8094  011228  6EDF               	movwf	indf2,c
  8095                           
  8096                           ; BSR set to: 1
  8097  01122A  0100               	movlb	0	; () banked
  8098  01122C  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8099  01122E  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;doprnt.c: 1232: val %= dpowers[c];
  8103  011230  C138  F071         	movff	sprintf@val,___llmod@dividend
  8104  011234  C139  F072         	movff	sprintf@val+1,___llmod@dividend+1
  8105  011238  C13A  F073         	movff	sprintf@val+2,___llmod@dividend+2
  8106  01123C  C13B  F074         	movff	sprintf@val+3,___llmod@dividend+3
  8107  011240  0101               	movlb	1	; () banked
  8108  011242  5148               	movf	sprintf@c& (0+255),w,b
  8109  011244  0D04               	mullw	4
  8110  011246  0E31               	movlw	low _dpowers
  8111  011248  24F3               	addwf	prodl,w,c
  8112  01124A  6EF6               	movwf	tblptrl,c
  8113  01124C  0EFE               	movlw	high _dpowers
  8114  01124E  20F4               	addwfc	prodh,w,c
  8115  011250  6EF7               	movwf	tblptrh,c
  8116  011252                     	if	1	;There are 3 active tblptr bytes
  8117  011252  6AF8               	clrf	tblptru,c
  8118  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  8119  011256  22F8               	addwfc	tblptru,f,c
  8120  011258                     	endif
  8121  011258  0009               	tblrd		*+
  8122  01125A  CFF5 F075          	movff	tablat,___llmod@divisor
  8123  01125E  0009               	tblrd		*+
  8124  011260  CFF5 F076          	movff	tablat,___llmod@divisor+1
  8125  011264  0009               	tblrd		*+
  8126  011266  CFF5 F077          	movff	tablat,___llmod@divisor+2
  8127  01126A  000A               	tblrd		*-
  8128  01126C  CFF5 F078          	movff	tablat,___llmod@divisor+3
  8129  011270  EC6E  F0AE         	call	___llmod	;wreg free
  8130  011274  C071  F138         	movff	?___llmod,sprintf@val
  8131  011278  C072  F139         	movff	?___llmod+1,sprintf@val+1
  8132  01127C  C073  F13A         	movff	?___llmod+2,sprintf@val+2
  8133  011280  C074  F13B         	movff	?___llmod+3,sprintf@val+3
  8134  011284                     l8927:
  8135  011284  0101               	movlb	1	; () banked
  8136  011286  0748               	decf	sprintf@c& (0+255),f,b
  8137  011288  0101               	movlb	1	; () banked
  8138  01128A  2948               	incf	sprintf@c& (0+255),w,b
  8139  01128C  B4D8               	btfsc	status,2,c
  8140  01128E  D00E               	goto	l8935
  8141  011290  D77F               	goto	l8917
  8142  011292                     l8929:
  8143                           
  8144                           ; BSR set to: 1
  8145                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8146  011292  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8147  011296  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8148  01129A  0E30               	movlw	48
  8149  01129C  6EDF               	movwf	indf2,c
  8150                           
  8151                           ; BSR set to: 1
  8152  01129E  0100               	movlb	0	; () banked
  8153  0112A0  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8154  0112A2  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;doprnt.c: 1237: prec--;
  8158  0112A4  0101               	movlb	1	; () banked
  8159  0112A6  0742               	decf	sprintf@prec& (0+255),f,b
  8160  0112A8  A0D8               	btfss	status,0,c
  8161  0112AA  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  8162  0112AC                     l8935:
  8163                           
  8164                           ; BSR set to: 1
  8165  0112AC  0101               	movlb	1	; () banked
  8166  0112AE  5142               	movf	sprintf@prec& (0+255),w,b
  8167  0112B0  0101               	movlb	1	; () banked
  8168  0112B2  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8169  0112B4  B4D8               	btfsc	status,2,c
  8170  0112B6  D059               	goto	l8957
  8171  0112B8  D7EC               	goto	l8929
  8172  0112BA                     l8937:
  8173                           
  8174                           ; BSR set to: 1
  8175                           ;doprnt.c: 1246: }
  8176                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8177  0112BA  0101               	movlb	1	; () banked
  8178  0112BC  5142               	movf	sprintf@prec& (0+255),w,b
  8179  0112BE  0101               	movlb	1	; () banked
  8180  0112C0  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8181  0112C2  A4D8               	btfss	status,2,c
  8182  0112C4  D00D               	goto	l8943
  8183                           
  8184                           ; BSR set to: 1
  8185  0112C6  0101               	movlb	1	; () banked
  8186  0112C8  5138               	movf	sprintf@val& (0+255),w,b
  8187  0112CA  0101               	movlb	1	; () banked
  8188  0112CC  1139               	iorwf	(sprintf@val+1)& (0+255),w,b
  8189  0112CE  0101               	movlb	1	; () banked
  8190  0112D0  113A               	iorwf	(sprintf@val+2)& (0+255),w,b
  8191  0112D2  0101               	movlb	1	; () banked
  8192  0112D4  113B               	iorwf	(sprintf@val+3)& (0+255),w,b
  8193  0112D6  A4D8               	btfss	status,2,c
  8194  0112D8  D003               	goto	l8943
  8195                           
  8196                           ; BSR set to: 1
  8197                           ;doprnt.c: 1291: prec++;
  8198  0112DA  0101               	movlb	1	; () banked
  8199  0112DC  4B42               	infsnz	sprintf@prec& (0+255),f,b
  8200  0112DE  2B43               	incf	(sprintf@prec+1)& (0+255),f,b
  8201  0112E0                     l8943:
  8202                           
  8203                           ; BSR set to: 1
  8204                           ;doprnt.c: 1339: if(c < prec)
  8205  0112E0  0E80               	movlw	128
  8206  0112E2  0101               	movlb	1	; () banked
  8207  0112E4  BF48               	btfsc	sprintf@c& (0+255),7,b
  8208  0112E6  0E7F               	movlw	127
  8209  0112E8  0100               	movlb	0	; () banked
  8210  0112EA  6FCB               	movwf	??_sprintf& (0+255),b
  8211  0112EC  0101               	movlb	1	; () banked
  8212  0112EE  5142               	movf	sprintf@prec& (0+255),w,b
  8213  0112F0  0101               	movlb	1	; () banked
  8214  0112F2  5D48               	subwf	sprintf@c& (0+255),w,b
  8215  0112F4  0101               	movlb	1	; () banked
  8216  0112F6  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  8217  0112F8  0A80               	xorlw	128
  8218  0112FA  0100               	movlb	0	; () banked
  8219  0112FC  59CB               	subwfb	??_sprintf& (0+255),w,b
  8220  0112FE  B0D8               	btfsc	status,0,c
  8221  011300  D003               	goto	l8947
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;doprnt.c: 1340: c = prec;
  8225  011302  C142  F148         	movff	sprintf@prec,sprintf@c
  8226  011306  D018               	goto	l8951
  8227  011308                     l8947:
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;doprnt.c: 1341: else if(prec < c)
  8231  011308  0101               	movlb	1	; () banked
  8232  01130A  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  8233  01130C  0A80               	xorlw	128
  8234  01130E  0100               	movlb	0	; () banked
  8235  011310  6FCB               	movwf	??_sprintf& (0+255),b
  8236  011312  0101               	movlb	1	; () banked
  8237  011314  5148               	movf	sprintf@c& (0+255),w,b
  8238  011316  0101               	movlb	1	; () banked
  8239  011318  5D42               	subwf	sprintf@prec& (0+255),w,b
  8240  01131A  0E80               	movlw	128
  8241  01131C  0101               	movlb	1	; () banked
  8242  01131E  BF48               	btfsc	sprintf@c& (0+255),7,b
  8243  011320  0E7F               	movlw	127
  8244  011322  0100               	movlb	0	; () banked
  8245  011324  59CB               	subwfb	??_sprintf& (0+255),w,b
  8246  011326  B0D8               	btfsc	status,0,c
  8247  011328  D007               	goto	l8951
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;doprnt.c: 1342: prec = c;
  8251  01132A  0101               	movlb	1	; () banked
  8252  01132C  5148               	movf	sprintf@c& (0+255),w,b
  8253  01132E  0101               	movlb	1	; () banked
  8254  011330  6F42               	movwf	sprintf@prec& (0+255),b
  8255  011332  6B43               	clrf	(sprintf@prec+1)& (0+255),b
  8256  011334  BF42               	btfsc	sprintf@prec& (0+255),7,b
  8257  011336  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  8258  011338                     l8951:
  8259                           
  8260                           ;doprnt.c: 1422: {
  8261                           ;doprnt.c: 1438: if(flag & 0x03)
  8262  011338  0E03               	movlw	3
  8263  01133A  0101               	movlb	1	; () banked
  8264  01133C  1536               	andwf	sprintf@flag& (0+255),w,b
  8265  01133E  0100               	movlb	0	; () banked
  8266  011340  6FCB               	movwf	??_sprintf& (0+255),b
  8267  011342  0E00               	movlw	0
  8268  011344  0101               	movlb	1	; () banked
  8269  011346  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  8270  011348  0100               	movlb	0	; () banked
  8271  01134A  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  8272  01134C  0100               	movlb	0	; () banked
  8273  01134E  51CB               	movf	??_sprintf& (0+255),w,b
  8274  011350  0100               	movlb	0	; () banked
  8275  011352  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  8276  011354  B4D8               	btfsc	status,2,c
  8277  011356  D009               	goto	l8957
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8281  011358  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8282  01135C  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8283  011360  0E2D               	movlw	45
  8284  011362  6EDF               	movwf	indf2,c
  8285  011364                     l8955:
  8286                           
  8287                           ; BSR set to: 0
  8288  011364  0100               	movlb	0	; () banked
  8289  011366  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8290  011368  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8291  01136A                     l8957:
  8292  01136A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8293  01136E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8294  011372  0100               	movlb	0	; () banked
  8295  011374  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8296  011376  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8297  011378                     	if	0	;tblptru may be non-zero
  8298  011378                     	endif
  8299  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8300  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  8301  01137A  6EF8               	movwf	tblptru,c
  8302  01137C                     	endif
  8303  01137C  0008               	tblrd		*
  8304  01137E  CFF5 F148          	movff	tablat,sprintf@c
  8305  011382  0101               	movlb	1	; () banked
  8306  011384  5148               	movf	sprintf@c& (0+255),w,b
  8307  011386  A4D8               	btfss	status,2,c
  8308  011388  EF8B  F085         	goto	l8759
  8309  01138C                     l8959:
  8310                           
  8311                           ; BSR set to: 1
  8312                           ;doprnt.c: 1538: *sp = 0;
  8313  01138C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8314  011390  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8315  011394  0E00               	movlw	0
  8316  011396  6EDF               	movwf	indf2,c
  8317  011398  0012               	return	
  8318  01139A                     __end_of_sprintf:
  8319                           	opt stack 0
  8320                           tblptru	equ	0xFF8
  8321                           tblptrh	equ	0xFF7
  8322                           tblptrl	equ	0xFF6
  8323                           tablat	equ	0xFF5
  8324                           prodh	equ	0xFF4
  8325                           prodl	equ	0xFF3
  8326                           intcon	equ	0xFF2
  8327                           postinc0	equ	0xFEE
  8328                           wreg	equ	0xFE8
  8329                           indf2	equ	0xFDF
  8330                           postinc2	equ	0xFDE
  8331                           fsr2h	equ	0xFDA
  8332                           fsr2l	equ	0xFD9
  8333                           status	equ	0xFD8
  8334                           
  8335 ;; *************** function _scale *****************
  8336 ;; Defined at:
  8337 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  scl             1    wreg     char 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  scl             1   64[BANK0 ] char 
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  4   56[BANK0 ] char 
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;Total ram usage:        9 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:    4
  8358 ;; This function calls:
  8359 ;;		___awdiv
  8360 ;;		___awmod
  8361 ;;		___flmul
  8362 ;; This function is called by:
  8363 ;;		_sprintf
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text11
  8368  012914                     __ptext11:
  8369                           	opt stack 0
  8370  012914                     _scale:
  8371                           	opt stack 24
  8372                           
  8373                           ; BSR set to: 1
  8374                           ;incstack = 0
  8375                           ;scale@scl stored from wreg
  8376  012914  0100               	movlb	0	; () banked
  8377  012916  6FA0               	movwf	scale@scl& (0+255),b
  8378                           
  8379                           ;doprnt.c: 428: if(scl < 0) {
  8380  012918  0100               	movlb	0	; () banked
  8381  01291A  AFA0               	btfss	scale@scl& (0+255),7,b
  8382  01291C  D145               	goto	l8367
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;doprnt.c: 429: scl = -scl;
  8386  01291E  0100               	movlb	0	; () banked
  8387  012920  6DA0               	negf	scale@scl& (0+255),b
  8388                           
  8389                           ;doprnt.c: 430: if(scl>=110)
  8390  012922  0100               	movlb	0	; () banked
  8391  012924  51A0               	movf	scale@scl& (0+255),w,b
  8392  012926  0A80               	xorlw	128
  8393  012928  0F12               	addlw	-238
  8394  01292A  A0D8               	btfss	status,0,c
  8395  01292C  D0BB               	goto	l8357
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8399  01292E  0E00               	movlw	0
  8400  012930  0100               	movlb	0	; () banked
  8401  012932  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8402  012934  0E0A               	movlw	10
  8403  012936  6F79               	movwf	___awdiv@divisor& (0+255),b
  8404  012938  0E00               	movlw	0
  8405  01293A  0100               	movlb	0	; () banked
  8406  01293C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8407  01293E  0E64               	movlw	100
  8408  012940  6F73               	movwf	___awmod@divisor& (0+255),b
  8409  012942  0100               	movlb	0	; () banked
  8410  012944  51A0               	movf	scale@scl& (0+255),w,b
  8411  012946  0100               	movlb	0	; () banked
  8412  012948  6F71               	movwf	___awmod@dividend& (0+255),b
  8413  01294A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8414  01294C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8415  01294E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8416  012950  EC1D  F0AE         	call	___awmod	;wreg free
  8417  012954  C071  F077         	movff	?___awmod,___awdiv@dividend
  8418  012958  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8419  01295C  ECFB  F0AB         	call	___awdiv	;wreg free
  8420  012960  0100               	movlb	0	; () banked
  8421  012962  90D8               	bcf	status,0,c
  8422  012964  3777               	rlcf	?___awdiv& (0+255),f,b
  8423  012966  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8424  012968  0100               	movlb	0	; () banked
  8425  01296A  90D8               	bcf	status,0,c
  8426  01296C  3777               	rlcf	?___awdiv& (0+255),f,b
  8427  01296E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8428  012970  0E24               	movlw	36
  8429  012972  0100               	movlb	0	; () banked
  8430  012974  2777               	addwf	?___awdiv& (0+255),f,b
  8431  012976  0E00               	movlw	0
  8432  012978  0100               	movlb	0	; () banked
  8433  01297A  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8434  01297C  0EC9               	movlw	low __npowers_
  8435  01297E  0100               	movlb	0	; () banked
  8436  012980  2577               	addwf	?___awdiv& (0+255),w,b
  8437  012982  6EF6               	movwf	tblptrl,c
  8438  012984  0EFD               	movlw	high __npowers_
  8439  012986  0100               	movlb	0	; () banked
  8440  012988  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8441  01298A  6EF7               	movwf	tblptrh,c
  8442  01298C                     	if	1	;There are 3 active tblptr bytes
  8443  01298C  6AF8               	clrf	tblptru,c
  8444  01298E  0E00               	movlw	low (__mediumconst shr (0+16))
  8445  012990  22F8               	addwfc	tblptru,f,c
  8446  012992                     	endif
  8447  012992  0009               	tblrd		*+
  8448  012994  CFF5 F083          	movff	tablat,___flmul@a
  8449  012998  0009               	tblrd		*+
  8450  01299A  CFF5 F084          	movff	tablat,___flmul@a+1
  8451  01299E  0009               	tblrd		*+
  8452  0129A0  CFF5 F085          	movff	tablat,___flmul@a+2
  8453  0129A4  000A               	tblrd		*-
  8454  0129A6  CFF5 F086          	movff	tablat,___flmul@a+3
  8455  0129AA  0E00               	movlw	0
  8456  0129AC  0100               	movlb	0	; () banked
  8457  0129AE  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8458  0129B0  0E64               	movlw	100
  8459  0129B2  6F79               	movwf	___awdiv@divisor& (0+255),b
  8460  0129B4  0100               	movlb	0	; () banked
  8461  0129B6  51A0               	movf	scale@scl& (0+255),w,b
  8462  0129B8  0100               	movlb	0	; () banked
  8463  0129BA  6F77               	movwf	___awdiv@dividend& (0+255),b
  8464  0129BC  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8465  0129BE  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8466  0129C0  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8467  0129C2  ECFB  F0AB         	call	___awdiv	;wreg free
  8468  0129C6  0100               	movlb	0	; () banked
  8469  0129C8  90D8               	bcf	status,0,c
  8470  0129CA  3777               	rlcf	?___awdiv& (0+255),f,b
  8471  0129CC  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8472  0129CE  0100               	movlb	0	; () banked
  8473  0129D0  90D8               	bcf	status,0,c
  8474  0129D2  3777               	rlcf	?___awdiv& (0+255),f,b
  8475  0129D4  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8476  0129D6  0E48               	movlw	72
  8477  0129D8  0100               	movlb	0	; () banked
  8478  0129DA  2777               	addwf	?___awdiv& (0+255),f,b
  8479  0129DC  0E00               	movlw	0
  8480  0129DE  0100               	movlb	0	; () banked
  8481  0129E0  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8482  0129E2  0EC9               	movlw	low __npowers_
  8483  0129E4  0100               	movlb	0	; () banked
  8484  0129E6  2577               	addwf	?___awdiv& (0+255),w,b
  8485  0129E8  6EF6               	movwf	tblptrl,c
  8486  0129EA  0EFD               	movlw	high __npowers_
  8487  0129EC  0100               	movlb	0	; () banked
  8488  0129EE  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8489  0129F0  6EF7               	movwf	tblptrh,c
  8490  0129F2                     	if	1	;There are 3 active tblptr bytes
  8491  0129F2  6AF8               	clrf	tblptru,c
  8492  0129F4  0E00               	movlw	low (__mediumconst shr (0+16))
  8493  0129F6  22F8               	addwfc	tblptru,f,c
  8494  0129F8                     	endif
  8495  0129F8  0009               	tblrd		*+
  8496  0129FA  CFF5 F07F          	movff	tablat,___flmul@b
  8497  0129FE  0009               	tblrd		*+
  8498  012A00  CFF5 F080          	movff	tablat,___flmul@b+1
  8499  012A04  0009               	tblrd		*+
  8500  012A06  CFF5 F081          	movff	tablat,___flmul@b+2
  8501  012A0A  000A               	tblrd		*-
  8502  012A0C  CFF5 F082          	movff	tablat,___flmul@b+3
  8503  012A10  ECF1  F09B         	call	___flmul	;wreg free
  8504  012A14  C07F  F09C         	movff	?___flmul,_scale$4256
  8505  012A18  C080  F09D         	movff	?___flmul+1,_scale$4256+1
  8506  012A1C  C081  F09E         	movff	?___flmul+2,_scale$4256+2
  8507  012A20  C082  F09F         	movff	?___flmul+3,_scale$4256+3
  8508                           
  8509                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8510  012A24  C09C  F07F         	movff	_scale$4256,___flmul@b
  8511  012A28  C09D  F080         	movff	_scale$4256+1,___flmul@b+1
  8512  012A2C  C09E  F081         	movff	_scale$4256+2,___flmul@b+2
  8513  012A30  C09F  F082         	movff	_scale$4256+3,___flmul@b+3
  8514  012A34  0E00               	movlw	0
  8515  012A36  0100               	movlb	0	; () banked
  8516  012A38  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8517  012A3A  0E0A               	movlw	10
  8518  012A3C  6F73               	movwf	___awmod@divisor& (0+255),b
  8519  012A3E  0100               	movlb	0	; () banked
  8520  012A40  51A0               	movf	scale@scl& (0+255),w,b
  8521  012A42  0100               	movlb	0	; () banked
  8522  012A44  6F71               	movwf	___awmod@dividend& (0+255),b
  8523  012A46  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8524  012A48  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8525  012A4A  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8526  012A4C  EC1D  F0AE         	call	___awmod	;wreg free
  8527  012A50  0100               	movlb	0	; () banked
  8528  012A52  90D8               	bcf	status,0,c
  8529  012A54  3771               	rlcf	?___awmod& (0+255),f,b
  8530  012A56  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8531  012A58  0100               	movlb	0	; () banked
  8532  012A5A  90D8               	bcf	status,0,c
  8533  012A5C  3771               	rlcf	?___awmod& (0+255),f,b
  8534  012A5E  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8535  012A60  0EC9               	movlw	low __npowers_
  8536  012A62  0100               	movlb	0	; () banked
  8537  012A64  2571               	addwf	?___awmod& (0+255),w,b
  8538  012A66  6EF6               	movwf	tblptrl,c
  8539  012A68  0EFD               	movlw	high __npowers_
  8540  012A6A  0100               	movlb	0	; () banked
  8541  012A6C  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8542  012A6E  6EF7               	movwf	tblptrh,c
  8543  012A70                     	if	1	;There are 3 active tblptr bytes
  8544  012A70  6AF8               	clrf	tblptru,c
  8545  012A72  0E00               	movlw	low (__mediumconst shr (0+16))
  8546  012A74  22F8               	addwfc	tblptru,f,c
  8547  012A76                     	endif
  8548  012A76  0009               	tblrd		*+
  8549  012A78  CFF5 F083          	movff	tablat,___flmul@a
  8550  012A7C  0009               	tblrd		*+
  8551  012A7E  CFF5 F084          	movff	tablat,___flmul@a+1
  8552  012A82  0009               	tblrd		*+
  8553  012A84  CFF5 F085          	movff	tablat,___flmul@a+2
  8554  012A88  000A               	tblrd		*-
  8555  012A8A  CFF5 F086          	movff	tablat,___flmul@a+3
  8556  012A8E  ECF1  F09B         	call	___flmul	;wreg free
  8557  012A92  C07F  F098         	movff	?___flmul,?_scale
  8558  012A96  C080  F099         	movff	?___flmul+1,?_scale+1
  8559  012A9A  C081  F09A         	movff	?___flmul+2,?_scale+2
  8560  012A9E  C082  F09B         	movff	?___flmul+3,?_scale+3
  8561  012AA2  0012               	return	
  8562  012AA4                     l8357:
  8563                           
  8564                           ;doprnt.c: 432: else if(scl > 10)
  8565  012AA4  0100               	movlb	0	; () banked
  8566  012AA6  51A0               	movf	scale@scl& (0+255),w,b
  8567  012AA8  0A80               	xorlw	128
  8568  012AAA  0F75               	addlw	-139
  8569  012AAC  A0D8               	btfss	status,0,c
  8570  012AAE  D063               	goto	l8363
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8574  012AB0  0E00               	movlw	0
  8575  012AB2  0100               	movlb	0	; () banked
  8576  012AB4  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8577  012AB6  0E0A               	movlw	10
  8578  012AB8  6F79               	movwf	___awdiv@divisor& (0+255),b
  8579  012ABA  0100               	movlb	0	; () banked
  8580  012ABC  51A0               	movf	scale@scl& (0+255),w,b
  8581  012ABE  0100               	movlb	0	; () banked
  8582  012AC0  6F77               	movwf	___awdiv@dividend& (0+255),b
  8583  012AC2  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8584  012AC4  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8585  012AC6  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8586  012AC8  ECFB  F0AB         	call	___awdiv	;wreg free
  8587  012ACC  0100               	movlb	0	; () banked
  8588  012ACE  90D8               	bcf	status,0,c
  8589  012AD0  3777               	rlcf	?___awdiv& (0+255),f,b
  8590  012AD2  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8591  012AD4  0100               	movlb	0	; () banked
  8592  012AD6  90D8               	bcf	status,0,c
  8593  012AD8  3777               	rlcf	?___awdiv& (0+255),f,b
  8594  012ADA  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8595  012ADC  0E24               	movlw	36
  8596  012ADE  0100               	movlb	0	; () banked
  8597  012AE0  2777               	addwf	?___awdiv& (0+255),f,b
  8598  012AE2  0E00               	movlw	0
  8599  012AE4  0100               	movlb	0	; () banked
  8600  012AE6  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8601  012AE8  0EC9               	movlw	low __npowers_
  8602  012AEA  0100               	movlb	0	; () banked
  8603  012AEC  2577               	addwf	?___awdiv& (0+255),w,b
  8604  012AEE  6EF6               	movwf	tblptrl,c
  8605  012AF0  0EFD               	movlw	high __npowers_
  8606  012AF2  0100               	movlb	0	; () banked
  8607  012AF4  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8608  012AF6  6EF7               	movwf	tblptrh,c
  8609  012AF8                     	if	1	;There are 3 active tblptr bytes
  8610  012AF8  6AF8               	clrf	tblptru,c
  8611  012AFA  0E00               	movlw	low (__mediumconst shr (0+16))
  8612  012AFC  22F8               	addwfc	tblptru,f,c
  8613  012AFE                     	endif
  8614  012AFE  0009               	tblrd		*+
  8615  012B00  CFF5 F07F          	movff	tablat,___flmul@b
  8616  012B04  0009               	tblrd		*+
  8617  012B06  CFF5 F080          	movff	tablat,___flmul@b+1
  8618  012B0A  0009               	tblrd		*+
  8619  012B0C  CFF5 F081          	movff	tablat,___flmul@b+2
  8620  012B10  000A               	tblrd		*-
  8621  012B12  CFF5 F082          	movff	tablat,___flmul@b+3
  8622  012B16  0E00               	movlw	0
  8623  012B18  0100               	movlb	0	; () banked
  8624  012B1A  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8625  012B1C  0E0A               	movlw	10
  8626  012B1E  6F73               	movwf	___awmod@divisor& (0+255),b
  8627  012B20  0100               	movlb	0	; () banked
  8628  012B22  51A0               	movf	scale@scl& (0+255),w,b
  8629  012B24  0100               	movlb	0	; () banked
  8630  012B26  6F71               	movwf	___awmod@dividend& (0+255),b
  8631  012B28  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8632  012B2A  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8633  012B2C  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8634  012B2E  EC1D  F0AE         	call	___awmod	;wreg free
  8635  012B32  0100               	movlb	0	; () banked
  8636  012B34  90D8               	bcf	status,0,c
  8637  012B36  3771               	rlcf	?___awmod& (0+255),f,b
  8638  012B38  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8639  012B3A  0100               	movlb	0	; () banked
  8640  012B3C  90D8               	bcf	status,0,c
  8641  012B3E  3771               	rlcf	?___awmod& (0+255),f,b
  8642  012B40  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8643  012B42  0EC9               	movlw	low __npowers_
  8644  012B44  0100               	movlb	0	; () banked
  8645  012B46  2571               	addwf	?___awmod& (0+255),w,b
  8646  012B48  6EF6               	movwf	tblptrl,c
  8647  012B4A  0EFD               	movlw	high __npowers_
  8648  012B4C  0100               	movlb	0	; () banked
  8649  012B4E  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8650  012B50  6EF7               	movwf	tblptrh,c
  8651  012B52                     	if	1	;There are 3 active tblptr bytes
  8652  012B52  6AF8               	clrf	tblptru,c
  8653  012B54  0E00               	movlw	low (__mediumconst shr (0+16))
  8654  012B56  22F8               	addwfc	tblptru,f,c
  8655  012B58                     	endif
  8656  012B58  0009               	tblrd		*+
  8657  012B5A  CFF5 F083          	movff	tablat,___flmul@a
  8658  012B5E  0009               	tblrd		*+
  8659  012B60  CFF5 F084          	movff	tablat,___flmul@a+1
  8660  012B64  0009               	tblrd		*+
  8661  012B66  CFF5 F085          	movff	tablat,___flmul@a+2
  8662  012B6A  000A               	tblrd		*-
  8663  012B6C  CFF5 F086          	movff	tablat,___flmul@a+3
  8664  012B70  ECF1  F09B         	call	___flmul	;wreg free
  8665  012B74  D78E               	goto	L8
  8666  012B76                     l8363:
  8667                           
  8668                           ;doprnt.c: 434: return _npowers_[scl];
  8669  012B76  0100               	movlb	0	; () banked
  8670  012B78  51A0               	movf	scale@scl& (0+255),w,b
  8671  012B7A  0D04               	mullw	4
  8672  012B7C  0EC9               	movlw	low __npowers_
  8673  012B7E  24F3               	addwf	prodl,w,c
  8674  012B80  6EF6               	movwf	tblptrl,c
  8675  012B82  0EFD               	movlw	high __npowers_
  8676  012B84  20F4               	addwfc	prodh,w,c
  8677  012B86  6EF7               	movwf	tblptrh,c
  8678  012B88                     	if	1	;There are 3 active tblptr bytes
  8679  012B88  6AF8               	clrf	tblptru,c
  8680  012B8A  0E00               	movlw	low (__mediumconst shr (0+16))
  8681  012B8C  22F8               	addwfc	tblptru,f,c
  8682  012B8E                     	endif
  8683  012B8E  0009               	tblrd		*+
  8684  012B90  CFF5 F098          	movff	tablat,?_scale
  8685  012B94  0009               	tblrd		*+
  8686  012B96  CFF5 F099          	movff	tablat,?_scale+1
  8687  012B9A  0009               	tblrd		*+
  8688  012B9C  CFF5 F09A          	movff	tablat,?_scale+2
  8689  012BA0  000A               	tblrd		*-
  8690  012BA2  CFF5 F09B          	movff	tablat,?_scale+3
  8691                           
  8692                           ; BSR set to: 0
  8693  012BA6  0012               	return	
  8694  012BA8                     l8367:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;doprnt.c: 435: }
  8698                           ;doprnt.c: 436: if(scl>=110)
  8699  012BA8  0100               	movlb	0	; () banked
  8700  012BAA  51A0               	movf	scale@scl& (0+255),w,b
  8701  012BAC  0A80               	xorlw	128
  8702  012BAE  0F12               	addlw	-238
  8703  012BB0  A0D8               	btfss	status,0,c
  8704  012BB2  D0BB               	goto	l8375
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8708  012BB4  0E00               	movlw	0
  8709  012BB6  0100               	movlb	0	; () banked
  8710  012BB8  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8711  012BBA  0E0A               	movlw	10
  8712  012BBC  6F79               	movwf	___awdiv@divisor& (0+255),b
  8713  012BBE  0E00               	movlw	0
  8714  012BC0  0100               	movlb	0	; () banked
  8715  012BC2  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8716  012BC4  0E64               	movlw	100
  8717  012BC6  6F73               	movwf	___awmod@divisor& (0+255),b
  8718  012BC8  0100               	movlb	0	; () banked
  8719  012BCA  51A0               	movf	scale@scl& (0+255),w,b
  8720  012BCC  0100               	movlb	0	; () banked
  8721  012BCE  6F71               	movwf	___awmod@dividend& (0+255),b
  8722  012BD0  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8723  012BD2  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8724  012BD4  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8725  012BD6  EC1D  F0AE         	call	___awmod	;wreg free
  8726  012BDA  C071  F077         	movff	?___awmod,___awdiv@dividend
  8727  012BDE  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8728  012BE2  ECFB  F0AB         	call	___awdiv	;wreg free
  8729  012BE6  0100               	movlb	0	; () banked
  8730  012BE8  90D8               	bcf	status,0,c
  8731  012BEA  3777               	rlcf	?___awdiv& (0+255),f,b
  8732  012BEC  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8733  012BEE  0100               	movlb	0	; () banked
  8734  012BF0  90D8               	bcf	status,0,c
  8735  012BF2  3777               	rlcf	?___awdiv& (0+255),f,b
  8736  012BF4  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8737  012BF6  0E24               	movlw	36
  8738  012BF8  0100               	movlb	0	; () banked
  8739  012BFA  2777               	addwf	?___awdiv& (0+255),f,b
  8740  012BFC  0E00               	movlw	0
  8741  012BFE  0100               	movlb	0	; () banked
  8742  012C00  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8743  012C02  0EFD               	movlw	low __powers_
  8744  012C04  0100               	movlb	0	; () banked
  8745  012C06  2577               	addwf	?___awdiv& (0+255),w,b
  8746  012C08  6EF6               	movwf	tblptrl,c
  8747  012C0A  0EFD               	movlw	high __powers_
  8748  012C0C  0100               	movlb	0	; () banked
  8749  012C0E  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8750  012C10  6EF7               	movwf	tblptrh,c
  8751  012C12                     	if	1	;There are 3 active tblptr bytes
  8752  012C12  6AF8               	clrf	tblptru,c
  8753  012C14  0E00               	movlw	low (__mediumconst shr (0+16))
  8754  012C16  22F8               	addwfc	tblptru,f,c
  8755  012C18                     	endif
  8756  012C18  0009               	tblrd		*+
  8757  012C1A  CFF5 F083          	movff	tablat,___flmul@a
  8758  012C1E  0009               	tblrd		*+
  8759  012C20  CFF5 F084          	movff	tablat,___flmul@a+1
  8760  012C24  0009               	tblrd		*+
  8761  012C26  CFF5 F085          	movff	tablat,___flmul@a+2
  8762  012C2A  000A               	tblrd		*-
  8763  012C2C  CFF5 F086          	movff	tablat,___flmul@a+3
  8764  012C30  0E00               	movlw	0
  8765  012C32  0100               	movlb	0	; () banked
  8766  012C34  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8767  012C36  0E64               	movlw	100
  8768  012C38  6F79               	movwf	___awdiv@divisor& (0+255),b
  8769  012C3A  0100               	movlb	0	; () banked
  8770  012C3C  51A0               	movf	scale@scl& (0+255),w,b
  8771  012C3E  0100               	movlb	0	; () banked
  8772  012C40  6F77               	movwf	___awdiv@dividend& (0+255),b
  8773  012C42  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8774  012C44  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8775  012C46  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8776  012C48  ECFB  F0AB         	call	___awdiv	;wreg free
  8777  012C4C  0100               	movlb	0	; () banked
  8778  012C4E  90D8               	bcf	status,0,c
  8779  012C50  3777               	rlcf	?___awdiv& (0+255),f,b
  8780  012C52  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8781  012C54  0100               	movlb	0	; () banked
  8782  012C56  90D8               	bcf	status,0,c
  8783  012C58  3777               	rlcf	?___awdiv& (0+255),f,b
  8784  012C5A  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8785  012C5C  0E48               	movlw	72
  8786  012C5E  0100               	movlb	0	; () banked
  8787  012C60  2777               	addwf	?___awdiv& (0+255),f,b
  8788  012C62  0E00               	movlw	0
  8789  012C64  0100               	movlb	0	; () banked
  8790  012C66  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8791  012C68  0EFD               	movlw	low __powers_
  8792  012C6A  0100               	movlb	0	; () banked
  8793  012C6C  2577               	addwf	?___awdiv& (0+255),w,b
  8794  012C6E  6EF6               	movwf	tblptrl,c
  8795  012C70  0EFD               	movlw	high __powers_
  8796  012C72  0100               	movlb	0	; () banked
  8797  012C74  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8798  012C76  6EF7               	movwf	tblptrh,c
  8799  012C78                     	if	1	;There are 3 active tblptr bytes
  8800  012C78  6AF8               	clrf	tblptru,c
  8801  012C7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8802  012C7C  22F8               	addwfc	tblptru,f,c
  8803  012C7E                     	endif
  8804  012C7E  0009               	tblrd		*+
  8805  012C80  CFF5 F07F          	movff	tablat,___flmul@b
  8806  012C84  0009               	tblrd		*+
  8807  012C86  CFF5 F080          	movff	tablat,___flmul@b+1
  8808  012C8A  0009               	tblrd		*+
  8809  012C8C  CFF5 F081          	movff	tablat,___flmul@b+2
  8810  012C90  000A               	tblrd		*-
  8811  012C92  CFF5 F082          	movff	tablat,___flmul@b+3
  8812  012C96  ECF1  F09B         	call	___flmul	;wreg free
  8813  012C9A  C07F  F09C         	movff	?___flmul,_scale$4256
  8814  012C9E  C080  F09D         	movff	?___flmul+1,_scale$4256+1
  8815  012CA2  C081  F09E         	movff	?___flmul+2,_scale$4256+2
  8816  012CA6  C082  F09F         	movff	?___flmul+3,_scale$4256+3
  8817                           
  8818                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8819  012CAA  C09C  F07F         	movff	_scale$4256,___flmul@b
  8820  012CAE  C09D  F080         	movff	_scale$4256+1,___flmul@b+1
  8821  012CB2  C09E  F081         	movff	_scale$4256+2,___flmul@b+2
  8822  012CB6  C09F  F082         	movff	_scale$4256+3,___flmul@b+3
  8823  012CBA  0E00               	movlw	0
  8824  012CBC  0100               	movlb	0	; () banked
  8825  012CBE  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8826  012CC0  0E0A               	movlw	10
  8827  012CC2  6F73               	movwf	___awmod@divisor& (0+255),b
  8828  012CC4  0100               	movlb	0	; () banked
  8829  012CC6  51A0               	movf	scale@scl& (0+255),w,b
  8830  012CC8  0100               	movlb	0	; () banked
  8831  012CCA  6F71               	movwf	___awmod@dividend& (0+255),b
  8832  012CCC  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8833  012CCE  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8834  012CD0  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8835  012CD2  EC1D  F0AE         	call	___awmod	;wreg free
  8836  012CD6  0100               	movlb	0	; () banked
  8837  012CD8  90D8               	bcf	status,0,c
  8838  012CDA  3771               	rlcf	?___awmod& (0+255),f,b
  8839  012CDC  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8840  012CDE  0100               	movlb	0	; () banked
  8841  012CE0  90D8               	bcf	status,0,c
  8842  012CE2  3771               	rlcf	?___awmod& (0+255),f,b
  8843  012CE4  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8844  012CE6  0EFD               	movlw	low __powers_
  8845  012CE8  0100               	movlb	0	; () banked
  8846  012CEA  2571               	addwf	?___awmod& (0+255),w,b
  8847  012CEC  6EF6               	movwf	tblptrl,c
  8848  012CEE  0EFD               	movlw	high __powers_
  8849  012CF0  0100               	movlb	0	; () banked
  8850  012CF2  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8851  012CF4  6EF7               	movwf	tblptrh,c
  8852  012CF6                     	if	1	;There are 3 active tblptr bytes
  8853  012CF6  6AF8               	clrf	tblptru,c
  8854  012CF8  0E00               	movlw	low (__mediumconst shr (0+16))
  8855  012CFA  22F8               	addwfc	tblptru,f,c
  8856  012CFC                     	endif
  8857  012CFC  0009               	tblrd		*+
  8858  012CFE  CFF5 F083          	movff	tablat,___flmul@a
  8859  012D02  0009               	tblrd		*+
  8860  012D04  CFF5 F084          	movff	tablat,___flmul@a+1
  8861  012D08  0009               	tblrd		*+
  8862  012D0A  CFF5 F085          	movff	tablat,___flmul@a+2
  8863  012D0E  000A               	tblrd		*-
  8864  012D10  CFF5 F086          	movff	tablat,___flmul@a+3
  8865  012D14  ECF1  F09B         	call	___flmul	;wreg free
  8866  012D18  C07F  F098         	movff	?___flmul,?_scale
  8867  012D1C  C080  F099         	movff	?___flmul+1,?_scale+1
  8868  012D20  C081  F09A         	movff	?___flmul+2,?_scale+2
  8869  012D24  C082  F09B         	movff	?___flmul+3,?_scale+3
  8870  012D28  0012               	return	
  8871  012D2A                     l8375:
  8872                           
  8873                           ;doprnt.c: 438: else if(scl > 10)
  8874  012D2A  0100               	movlb	0	; () banked
  8875  012D2C  51A0               	movf	scale@scl& (0+255),w,b
  8876  012D2E  0A80               	xorlw	128
  8877  012D30  0F75               	addlw	-139
  8878  012D32  A0D8               	btfss	status,0,c
  8879  012D34  D063               	goto	l8381
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8883  012D36  0E00               	movlw	0
  8884  012D38  0100               	movlb	0	; () banked
  8885  012D3A  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8886  012D3C  0E0A               	movlw	10
  8887  012D3E  6F79               	movwf	___awdiv@divisor& (0+255),b
  8888  012D40  0100               	movlb	0	; () banked
  8889  012D42  51A0               	movf	scale@scl& (0+255),w,b
  8890  012D44  0100               	movlb	0	; () banked
  8891  012D46  6F77               	movwf	___awdiv@dividend& (0+255),b
  8892  012D48  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8893  012D4A  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8894  012D4C  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8895  012D4E  ECFB  F0AB         	call	___awdiv	;wreg free
  8896  012D52  0100               	movlb	0	; () banked
  8897  012D54  90D8               	bcf	status,0,c
  8898  012D56  3777               	rlcf	?___awdiv& (0+255),f,b
  8899  012D58  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8900  012D5A  0100               	movlb	0	; () banked
  8901  012D5C  90D8               	bcf	status,0,c
  8902  012D5E  3777               	rlcf	?___awdiv& (0+255),f,b
  8903  012D60  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8904  012D62  0E24               	movlw	36
  8905  012D64  0100               	movlb	0	; () banked
  8906  012D66  2777               	addwf	?___awdiv& (0+255),f,b
  8907  012D68  0E00               	movlw	0
  8908  012D6A  0100               	movlb	0	; () banked
  8909  012D6C  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8910  012D6E  0EFD               	movlw	low __powers_
  8911  012D70  0100               	movlb	0	; () banked
  8912  012D72  2577               	addwf	?___awdiv& (0+255),w,b
  8913  012D74  6EF6               	movwf	tblptrl,c
  8914  012D76  0EFD               	movlw	high __powers_
  8915  012D78  0100               	movlb	0	; () banked
  8916  012D7A  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8917  012D7C  6EF7               	movwf	tblptrh,c
  8918  012D7E                     	if	1	;There are 3 active tblptr bytes
  8919  012D7E  6AF8               	clrf	tblptru,c
  8920  012D80  0E00               	movlw	low (__mediumconst shr (0+16))
  8921  012D82  22F8               	addwfc	tblptru,f,c
  8922  012D84                     	endif
  8923  012D84  0009               	tblrd		*+
  8924  012D86  CFF5 F07F          	movff	tablat,___flmul@b
  8925  012D8A  0009               	tblrd		*+
  8926  012D8C  CFF5 F080          	movff	tablat,___flmul@b+1
  8927  012D90  0009               	tblrd		*+
  8928  012D92  CFF5 F081          	movff	tablat,___flmul@b+2
  8929  012D96  000A               	tblrd		*-
  8930  012D98  CFF5 F082          	movff	tablat,___flmul@b+3
  8931  012D9C  0E00               	movlw	0
  8932  012D9E  0100               	movlb	0	; () banked
  8933  012DA0  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8934  012DA2  0E0A               	movlw	10
  8935  012DA4  6F73               	movwf	___awmod@divisor& (0+255),b
  8936  012DA6  0100               	movlb	0	; () banked
  8937  012DA8  51A0               	movf	scale@scl& (0+255),w,b
  8938  012DAA  0100               	movlb	0	; () banked
  8939  012DAC  6F71               	movwf	___awmod@dividend& (0+255),b
  8940  012DAE  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8941  012DB0  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8942  012DB2  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8943  012DB4  EC1D  F0AE         	call	___awmod	;wreg free
  8944  012DB8  0100               	movlb	0	; () banked
  8945  012DBA  90D8               	bcf	status,0,c
  8946  012DBC  3771               	rlcf	?___awmod& (0+255),f,b
  8947  012DBE  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8948  012DC0  0100               	movlb	0	; () banked
  8949  012DC2  90D8               	bcf	status,0,c
  8950  012DC4  3771               	rlcf	?___awmod& (0+255),f,b
  8951  012DC6  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8952  012DC8  0EFD               	movlw	low __powers_
  8953  012DCA  0100               	movlb	0	; () banked
  8954  012DCC  2571               	addwf	?___awmod& (0+255),w,b
  8955  012DCE  6EF6               	movwf	tblptrl,c
  8956  012DD0  0EFD               	movlw	high __powers_
  8957  012DD2  0100               	movlb	0	; () banked
  8958  012DD4  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8959  012DD6  6EF7               	movwf	tblptrh,c
  8960  012DD8                     	if	1	;There are 3 active tblptr bytes
  8961  012DD8  6AF8               	clrf	tblptru,c
  8962  012DDA  0E00               	movlw	low (__mediumconst shr (0+16))
  8963  012DDC  22F8               	addwfc	tblptru,f,c
  8964  012DDE                     	endif
  8965  012DDE  0009               	tblrd		*+
  8966  012DE0  CFF5 F083          	movff	tablat,___flmul@a
  8967  012DE4  0009               	tblrd		*+
  8968  012DE6  CFF5 F084          	movff	tablat,___flmul@a+1
  8969  012DEA  0009               	tblrd		*+
  8970  012DEC  CFF5 F085          	movff	tablat,___flmul@a+2
  8971  012DF0  000A               	tblrd		*-
  8972  012DF2  CFF5 F086          	movff	tablat,___flmul@a+3
  8973  012DF6  ECF1  F09B         	call	___flmul	;wreg free
  8974  012DFA  D78E               	goto	L9
  8975  012DFC                     l8381:
  8976                           
  8977                           ;doprnt.c: 440: return _powers_[scl];
  8978  012DFC  0100               	movlb	0	; () banked
  8979  012DFE  51A0               	movf	scale@scl& (0+255),w,b
  8980  012E00  0D04               	mullw	4
  8981  012E02  0EFD               	movlw	low __powers_
  8982  012E04  24F3               	addwf	prodl,w,c
  8983  012E06  6EF6               	movwf	tblptrl,c
  8984  012E08  0EFD               	movlw	high __powers_
  8985  012E0A  20F4               	addwfc	prodh,w,c
  8986  012E0C  6EF7               	movwf	tblptrh,c
  8987  012E0E                     	if	1	;There are 3 active tblptr bytes
  8988  012E0E  6AF8               	clrf	tblptru,c
  8989  012E10  0E00               	movlw	low (__mediumconst shr (0+16))
  8990  012E12  22F8               	addwfc	tblptru,f,c
  8991  012E14                     	endif
  8992  012E14  0009               	tblrd		*+
  8993  012E16  CFF5 F098          	movff	tablat,?_scale
  8994  012E1A  0009               	tblrd		*+
  8995  012E1C  CFF5 F099          	movff	tablat,?_scale+1
  8996  012E20  0009               	tblrd		*+
  8997  012E22  CFF5 F09A          	movff	tablat,?_scale+2
  8998  012E26  000A               	tblrd		*-
  8999  012E28  CFF5 F09B          	movff	tablat,?_scale+3
  9000  012E2C  0012               	return	
  9001  012E2E                     __end_of_scale:
  9002                           	opt stack 0
  9003                           tblptru	equ	0xFF8
  9004                           tblptrh	equ	0xFF7
  9005                           tblptrl	equ	0xFF6
  9006                           tablat	equ	0xFF5
  9007                           prodh	equ	0xFF4
  9008                           prodl	equ	0xFF3
  9009                           intcon	equ	0xFF2
  9010                           postinc0	equ	0xFEE
  9011                           wreg	equ	0xFE8
  9012                           indf2	equ	0xFDF
  9013                           postinc2	equ	0xFDE
  9014                           fsr2h	equ	0xFDA
  9015                           fsr2l	equ	0xFD9
  9016                           status	equ	0xFD8
  9017                           
  9018 ;; *************** function _isdigit *****************
  9019 ;; Defined at:
  9020 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  c               1    wreg     unsigned char 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  c               1   19[BANK0 ] unsigned char 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;		None               void
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;Total ram usage:        3 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; Hardware stack levels required when called:    3
  9041 ;; This function calls:
  9042 ;;		Nothing
  9043 ;; This function is called by:
  9044 ;;		_sprintf
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text12
  9049  016366                     __ptext12:
  9050                           	opt stack 0
  9051  016366                     _isdigit:
  9052                           	opt stack 25
  9053                           
  9054                           ;incstack = 0
  9055                           ;isdigit@c stored from wreg
  9056  016366  0100               	movlb	0	; () banked
  9057  016368  6F73               	movwf	isdigit@c& (0+255),b
  9058  01636A  0E00               	movlw	0
  9059  01636C  0100               	movlb	0	; () banked
  9060  01636E  6F72               	movwf	_isdigit$3840& (0+255),b
  9061                           
  9062                           ; BSR set to: 0
  9063  016370  0E3A               	movlw	58
  9064  016372  0100               	movlb	0	; () banked
  9065  016374  6173               	cpfslt	isdigit@c& (0+255),b
  9066  016376  D007               	goto	l8393
  9067                           
  9068                           ; BSR set to: 0
  9069  016378  0E2F               	movlw	47
  9070  01637A  0100               	movlb	0	; () banked
  9071  01637C  6573               	cpfsgt	isdigit@c& (0+255),b
  9072  01637E  D003               	goto	l8393
  9073                           
  9074                           ; BSR set to: 0
  9075  016380  0E01               	movlw	1
  9076  016382  0100               	movlb	0	; () banked
  9077  016384  6F72               	movwf	_isdigit$3840& (0+255),b
  9078  016386                     l8393:
  9079                           
  9080                           ; BSR set to: 0
  9081  016386  C072  F071         	movff	_isdigit$3840,??_isdigit
  9082  01638A  0100               	movlb	0	; () banked
  9083  01638C  3171               	rrcf	??_isdigit& (0+255),w,b
  9084  01638E  0012               	return	
  9085  016390                     __end_of_isdigit:
  9086                           	opt stack 0
  9087                           tblptru	equ	0xFF8
  9088                           tblptrh	equ	0xFF7
  9089                           tblptrl	equ	0xFF6
  9090                           tablat	equ	0xFF5
  9091                           prodh	equ	0xFF4
  9092                           prodl	equ	0xFF3
  9093                           intcon	equ	0xFF2
  9094                           postinc0	equ	0xFEE
  9095                           wreg	equ	0xFE8
  9096                           indf2	equ	0xFDF
  9097                           postinc2	equ	0xFDE
  9098                           fsr2h	equ	0xFDA
  9099                           fsr2l	equ	0xFD9
  9100                           status	equ	0xFD8
  9101                           
  9102 ;; *************** function _fround *****************
  9103 ;; Defined at:
  9104 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  prec            1    wreg     unsigned char 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  prec            1   68[BANK0 ] unsigned char 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  4   56[BANK0 ] unsigned char 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9118 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;Total ram usage:       13 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    4
  9125 ;; This function calls:
  9126 ;;		___awdiv
  9127 ;;		___awmod
  9128 ;;		___flmul
  9129 ;; This function is called by:
  9130 ;;		_sprintf
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134                           	psect	text13
  9135  0143E6                     __ptext13:
  9136                           	opt stack 0
  9137  0143E6                     _fround:
  9138                           	opt stack 24
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;incstack = 0
  9142                           ;fround@prec stored from wreg
  9143  0143E6  0100               	movlb	0	; () banked
  9144  0143E8  6FA4               	movwf	fround@prec& (0+255),b
  9145                           
  9146                           ;doprnt.c: 413: if(prec>=110)
  9147  0143EA  0E6D               	movlw	109
  9148  0143EC  0100               	movlb	0	; () banked
  9149  0143EE  65A4               	cpfsgt	fround@prec& (0+255),b
  9150  0143F0  D0CD               	goto	l8335
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9154  0143F2  0E00               	movlw	0
  9155  0143F4  0100               	movlb	0	; () banked
  9156  0143F6  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9157  0143F8  0E0A               	movlw	10
  9158  0143FA  6F79               	movwf	___awdiv@divisor& (0+255),b
  9159  0143FC  0E00               	movlw	0
  9160  0143FE  0100               	movlb	0	; () banked
  9161  014400  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9162  014402  0E64               	movlw	100
  9163  014404  6F73               	movwf	___awmod@divisor& (0+255),b
  9164  014406  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9165  01440A  0100               	movlb	0	; () banked
  9166  01440C  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9167  01440E  EC1D  F0AE         	call	___awmod	;wreg free
  9168  014412  C071  F077         	movff	?___awmod,___awdiv@dividend
  9169  014416  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9170  01441A  ECFB  F0AB         	call	___awdiv	;wreg free
  9171  01441E  0100               	movlb	0	; () banked
  9172  014420  90D8               	bcf	status,0,c
  9173  014422  3777               	rlcf	?___awdiv& (0+255),f,b
  9174  014424  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9175  014426  0100               	movlb	0	; () banked
  9176  014428  90D8               	bcf	status,0,c
  9177  01442A  3777               	rlcf	?___awdiv& (0+255),f,b
  9178  01442C  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9179  01442E  0E24               	movlw	36
  9180  014430  0100               	movlb	0	; () banked
  9181  014432  2777               	addwf	?___awdiv& (0+255),f,b
  9182  014434  0E00               	movlw	0
  9183  014436  0100               	movlb	0	; () banked
  9184  014438  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9185  01443A  0EC9               	movlw	low __npowers_
  9186  01443C  0100               	movlb	0	; () banked
  9187  01443E  2577               	addwf	?___awdiv& (0+255),w,b
  9188  014440  6EF6               	movwf	tblptrl,c
  9189  014442  0EFD               	movlw	high __npowers_
  9190  014444  0100               	movlb	0	; () banked
  9191  014446  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9192  014448  6EF7               	movwf	tblptrh,c
  9193  01444A                     	if	1	;There are 3 active tblptr bytes
  9194  01444A  6AF8               	clrf	tblptru,c
  9195  01444C  0E00               	movlw	low (__mediumconst shr (0+16))
  9196  01444E  22F8               	addwfc	tblptru,f,c
  9197  014450                     	endif
  9198  014450  0009               	tblrd		*+
  9199  014452  CFF5 F083          	movff	tablat,___flmul@a
  9200  014456  0009               	tblrd		*+
  9201  014458  CFF5 F084          	movff	tablat,___flmul@a+1
  9202  01445C  0009               	tblrd		*+
  9203  01445E  CFF5 F085          	movff	tablat,___flmul@a+2
  9204  014462  000A               	tblrd		*-
  9205  014464  CFF5 F086          	movff	tablat,___flmul@a+3
  9206  014468  0E00               	movlw	0
  9207  01446A  0100               	movlb	0	; () banked
  9208  01446C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9209  01446E  0E64               	movlw	100
  9210  014470  6F79               	movwf	___awdiv@divisor& (0+255),b
  9211  014472  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  9212  014476  0100               	movlb	0	; () banked
  9213  014478  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9214  01447A  ECFB  F0AB         	call	___awdiv	;wreg free
  9215  01447E  0100               	movlb	0	; () banked
  9216  014480  90D8               	bcf	status,0,c
  9217  014482  3777               	rlcf	?___awdiv& (0+255),f,b
  9218  014484  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9219  014486  0100               	movlb	0	; () banked
  9220  014488  90D8               	bcf	status,0,c
  9221  01448A  3777               	rlcf	?___awdiv& (0+255),f,b
  9222  01448C  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9223  01448E  0E48               	movlw	72
  9224  014490  0100               	movlb	0	; () banked
  9225  014492  2777               	addwf	?___awdiv& (0+255),f,b
  9226  014494  0E00               	movlw	0
  9227  014496  0100               	movlb	0	; () banked
  9228  014498  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9229  01449A  0EC9               	movlw	low __npowers_
  9230  01449C  0100               	movlb	0	; () banked
  9231  01449E  2577               	addwf	?___awdiv& (0+255),w,b
  9232  0144A0  6EF6               	movwf	tblptrl,c
  9233  0144A2  0EFD               	movlw	high __npowers_
  9234  0144A4  0100               	movlb	0	; () banked
  9235  0144A6  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9236  0144A8  6EF7               	movwf	tblptrh,c
  9237  0144AA                     	if	1	;There are 3 active tblptr bytes
  9238  0144AA  6AF8               	clrf	tblptru,c
  9239  0144AC  0E00               	movlw	low (__mediumconst shr (0+16))
  9240  0144AE  22F8               	addwfc	tblptru,f,c
  9241  0144B0                     	endif
  9242  0144B0  0009               	tblrd		*+
  9243  0144B2  CFF5 F07F          	movff	tablat,___flmul@b
  9244  0144B6  0009               	tblrd		*+
  9245  0144B8  CFF5 F080          	movff	tablat,___flmul@b+1
  9246  0144BC  0009               	tblrd		*+
  9247  0144BE  CFF5 F081          	movff	tablat,___flmul@b+2
  9248  0144C2  000A               	tblrd		*-
  9249  0144C4  CFF5 F082          	movff	tablat,___flmul@b+3
  9250  0144C8  ECF1  F09B         	call	___flmul	;wreg free
  9251  0144CC  C07F  F0A0         	movff	?___flmul,_fround$4254
  9252  0144D0  C080  F0A1         	movff	?___flmul+1,_fround$4254+1
  9253  0144D4  C081  F0A2         	movff	?___flmul+2,_fround$4254+2
  9254  0144D8  C082  F0A3         	movff	?___flmul+3,_fround$4254+3
  9255                           
  9256                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9257  0144DC  0E00               	movlw	0
  9258  0144DE  0100               	movlb	0	; () banked
  9259  0144E0  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9260  0144E2  0E0A               	movlw	10
  9261  0144E4  6F73               	movwf	___awmod@divisor& (0+255),b
  9262  0144E6  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9263  0144EA  0100               	movlb	0	; () banked
  9264  0144EC  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9265  0144EE  EC1D  F0AE         	call	___awmod	;wreg free
  9266  0144F2  0100               	movlb	0	; () banked
  9267  0144F4  90D8               	bcf	status,0,c
  9268  0144F6  3771               	rlcf	?___awmod& (0+255),f,b
  9269  0144F8  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9270  0144FA  0100               	movlb	0	; () banked
  9271  0144FC  90D8               	bcf	status,0,c
  9272  0144FE  3771               	rlcf	?___awmod& (0+255),f,b
  9273  014500  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9274  014502  0EC9               	movlw	low __npowers_
  9275  014504  0100               	movlb	0	; () banked
  9276  014506  2571               	addwf	?___awmod& (0+255),w,b
  9277  014508  6EF6               	movwf	tblptrl,c
  9278  01450A  0EFD               	movlw	high __npowers_
  9279  01450C  0100               	movlb	0	; () banked
  9280  01450E  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9281  014510  6EF7               	movwf	tblptrh,c
  9282  014512                     	if	1	;There are 3 active tblptr bytes
  9283  014512  6AF8               	clrf	tblptru,c
  9284  014514  0E00               	movlw	low (__mediumconst shr (0+16))
  9285  014516  22F8               	addwfc	tblptru,f,c
  9286  014518                     	endif
  9287  014518  0009               	tblrd		*+
  9288  01451A  CFF5 F083          	movff	tablat,___flmul@a
  9289  01451E  0009               	tblrd		*+
  9290  014520  CFF5 F084          	movff	tablat,___flmul@a+1
  9291  014524  0009               	tblrd		*+
  9292  014526  CFF5 F085          	movff	tablat,___flmul@a+2
  9293  01452A  000A               	tblrd		*-
  9294  01452C  CFF5 F086          	movff	tablat,___flmul@a+3
  9295  014530  C0A0  F07F         	movff	_fround$4254,___flmul@b
  9296  014534  C0A1  F080         	movff	_fround$4254+1,___flmul@b+1
  9297  014538  C0A2  F081         	movff	_fround$4254+2,___flmul@b+2
  9298  01453C  C0A3  F082         	movff	_fround$4254+3,___flmul@b+3
  9299  014540  ECF1  F09B         	call	___flmul	;wreg free
  9300  014544  C07F  F09C         	movff	?___flmul,_fround$4255
  9301  014548  C080  F09D         	movff	?___flmul+1,_fround$4255+1
  9302  01454C  C081  F09E         	movff	?___flmul+2,_fround$4255+2
  9303  014550  C082  F09F         	movff	?___flmul+3,_fround$4255+3
  9304                           
  9305                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9306  014554  C09C  F07F         	movff	_fround$4255,___flmul@b
  9307  014558  C09D  F080         	movff	_fround$4255+1,___flmul@b+1
  9308  01455C  C09E  F081         	movff	_fround$4255+2,___flmul@b+2
  9309  014560  C09F  F082         	movff	_fround$4255+3,___flmul@b+3
  9310  014564  0E00               	movlw	0
  9311  014566  0100               	movlb	0	; () banked
  9312  014568  6F83               	movwf	___flmul@a& (0+255),b
  9313  01456A  0E00               	movlw	0
  9314  01456C  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9315  01456E  0E00               	movlw	0
  9316  014570  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9317  014572  0E3F               	movlw	63
  9318  014574  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9319  014576  ECF1  F09B         	call	___flmul	;wreg free
  9320  01457A  C07F  F098         	movff	?___flmul,?_fround
  9321  01457E  C080  F099         	movff	?___flmul+1,?_fround+1
  9322  014582  C081  F09A         	movff	?___flmul+2,?_fround+2
  9323  014586  C082  F09B         	movff	?___flmul+3,?_fround+3
  9324  01458A  0012               	return	
  9325  01458C                     l8335:
  9326                           
  9327                           ;doprnt.c: 415: else if(prec > 10)
  9328  01458C  0E0A               	movlw	10
  9329  01458E  0100               	movlb	0	; () banked
  9330  014590  65A4               	cpfsgt	fround@prec& (0+255),b
  9331  014592  D078               	goto	l8343
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9335  014594  0E00               	movlw	0
  9336  014596  0100               	movlb	0	; () banked
  9337  014598  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9338  01459A  0E0A               	movlw	10
  9339  01459C  6F73               	movwf	___awmod@divisor& (0+255),b
  9340  01459E  C0A4  F071         	movff	fround@prec,___awmod@dividend
  9341  0145A2  0100               	movlb	0	; () banked
  9342  0145A4  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9343  0145A6  EC1D  F0AE         	call	___awmod	;wreg free
  9344  0145AA  0100               	movlb	0	; () banked
  9345  0145AC  90D8               	bcf	status,0,c
  9346  0145AE  3771               	rlcf	?___awmod& (0+255),f,b
  9347  0145B0  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9348  0145B2  0100               	movlb	0	; () banked
  9349  0145B4  90D8               	bcf	status,0,c
  9350  0145B6  3771               	rlcf	?___awmod& (0+255),f,b
  9351  0145B8  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9352  0145BA  0EC9               	movlw	low __npowers_
  9353  0145BC  0100               	movlb	0	; () banked
  9354  0145BE  2571               	addwf	?___awmod& (0+255),w,b
  9355  0145C0  6EF6               	movwf	tblptrl,c
  9356  0145C2  0EFD               	movlw	high __npowers_
  9357  0145C4  0100               	movlb	0	; () banked
  9358  0145C6  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9359  0145C8  6EF7               	movwf	tblptrh,c
  9360  0145CA                     	if	1	;There are 3 active tblptr bytes
  9361  0145CA  6AF8               	clrf	tblptru,c
  9362  0145CC  0E00               	movlw	low (__mediumconst shr (0+16))
  9363  0145CE  22F8               	addwfc	tblptru,f,c
  9364  0145D0                     	endif
  9365  0145D0  0009               	tblrd		*+
  9366  0145D2  CFF5 F083          	movff	tablat,___flmul@a
  9367  0145D6  0009               	tblrd		*+
  9368  0145D8  CFF5 F084          	movff	tablat,___flmul@a+1
  9369  0145DC  0009               	tblrd		*+
  9370  0145DE  CFF5 F085          	movff	tablat,___flmul@a+2
  9371  0145E2  000A               	tblrd		*-
  9372  0145E4  CFF5 F086          	movff	tablat,___flmul@a+3
  9373  0145E8  0E00               	movlw	0
  9374  0145EA  0100               	movlb	0	; () banked
  9375  0145EC  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9376  0145EE  0E0A               	movlw	10
  9377  0145F0  6F79               	movwf	___awdiv@divisor& (0+255),b
  9378  0145F2  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  9379  0145F6  0100               	movlb	0	; () banked
  9380  0145F8  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9381  0145FA  ECFB  F0AB         	call	___awdiv	;wreg free
  9382  0145FE  0100               	movlb	0	; () banked
  9383  014600  90D8               	bcf	status,0,c
  9384  014602  3777               	rlcf	?___awdiv& (0+255),f,b
  9385  014604  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9386  014606  0100               	movlb	0	; () banked
  9387  014608  90D8               	bcf	status,0,c
  9388  01460A  3777               	rlcf	?___awdiv& (0+255),f,b
  9389  01460C  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9390  01460E  0E24               	movlw	36
  9391  014610  0100               	movlb	0	; () banked
  9392  014612  2777               	addwf	?___awdiv& (0+255),f,b
  9393  014614  0E00               	movlw	0
  9394  014616  0100               	movlb	0	; () banked
  9395  014618  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9396  01461A  0EC9               	movlw	low __npowers_
  9397  01461C  0100               	movlb	0	; () banked
  9398  01461E  2577               	addwf	?___awdiv& (0+255),w,b
  9399  014620  6EF6               	movwf	tblptrl,c
  9400  014622  0EFD               	movlw	high __npowers_
  9401  014624  0100               	movlb	0	; () banked
  9402  014626  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9403  014628  6EF7               	movwf	tblptrh,c
  9404  01462A                     	if	1	;There are 3 active tblptr bytes
  9405  01462A  6AF8               	clrf	tblptru,c
  9406  01462C  0E00               	movlw	low (__mediumconst shr (0+16))
  9407  01462E  22F8               	addwfc	tblptru,f,c
  9408  014630                     	endif
  9409  014630  0009               	tblrd		*+
  9410  014632  CFF5 F07F          	movff	tablat,___flmul@b
  9411  014636  0009               	tblrd		*+
  9412  014638  CFF5 F080          	movff	tablat,___flmul@b+1
  9413  01463C  0009               	tblrd		*+
  9414  01463E  CFF5 F081          	movff	tablat,___flmul@b+2
  9415  014642  000A               	tblrd		*-
  9416  014644  CFF5 F082          	movff	tablat,___flmul@b+3
  9417  014648  ECF1  F09B         	call	___flmul	;wreg free
  9418  01464C  C07F  F0A0         	movff	?___flmul,_fround$4254
  9419  014650  C080  F0A1         	movff	?___flmul+1,_fround$4254+1
  9420  014654  C081  F0A2         	movff	?___flmul+2,_fround$4254+2
  9421  014658  C082  F0A3         	movff	?___flmul+3,_fround$4254+3
  9422                           
  9423                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9424  01465C  C0A0  F07F         	movff	_fround$4254,___flmul@b
  9425  014660  C0A1  F080         	movff	_fround$4254+1,___flmul@b+1
  9426  014664  C0A2  F081         	movff	_fround$4254+2,___flmul@b+2
  9427  014668  C0A3  F082         	movff	_fround$4254+3,___flmul@b+3
  9428  01466C  0E00               	movlw	0
  9429  01466E  0100               	movlb	0	; () banked
  9430  014670  6F83               	movwf	___flmul@a& (0+255),b
  9431  014672  0E00               	movlw	0
  9432  014674  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9433  014676  0E00               	movlw	0
  9434  014678  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9435  01467A  0E3F               	movlw	63
  9436  01467C  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9437  01467E  ECF1  F09B         	call	___flmul	;wreg free
  9438  014682  D77B               	goto	L10
  9439  014684                     l8343:
  9440                           
  9441                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9442  014684  0100               	movlb	0	; () banked
  9443  014686  51A4               	movf	fround@prec& (0+255),w,b
  9444  014688  0D04               	mullw	4
  9445  01468A  0EC9               	movlw	low __npowers_
  9446  01468C  24F3               	addwf	prodl,w,c
  9447  01468E  6EF6               	movwf	tblptrl,c
  9448  014690  0EFD               	movlw	high __npowers_
  9449  014692  20F4               	addwfc	prodh,w,c
  9450  014694  6EF7               	movwf	tblptrh,c
  9451  014696                     	if	1	;There are 3 active tblptr bytes
  9452  014696  6AF8               	clrf	tblptru,c
  9453  014698  0E00               	movlw	low (__mediumconst shr (0+16))
  9454  01469A  22F8               	addwfc	tblptru,f,c
  9455  01469C                     	endif
  9456  01469C  0009               	tblrd		*+
  9457  01469E  CFF5 F07F          	movff	tablat,___flmul@b
  9458  0146A2  0009               	tblrd		*+
  9459  0146A4  CFF5 F080          	movff	tablat,___flmul@b+1
  9460  0146A8  0009               	tblrd		*+
  9461  0146AA  CFF5 F081          	movff	tablat,___flmul@b+2
  9462  0146AE  000A               	tblrd		*-
  9463  0146B0  CFF5 F082          	movff	tablat,___flmul@b+3
  9464  0146B4  0E00               	movlw	0
  9465  0146B6  0100               	movlb	0	; () banked
  9466  0146B8  6F83               	movwf	___flmul@a& (0+255),b
  9467  0146BA  0E00               	movlw	0
  9468  0146BC  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9469  0146BE  0E00               	movlw	0
  9470  0146C0  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9471  0146C2  0E3F               	movlw	63
  9472  0146C4  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9473  0146C6  ECF1  F09B         	call	___flmul	;wreg free
  9474  0146CA  C07F  F098         	movff	?___flmul,?_fround
  9475  0146CE  C080  F099         	movff	?___flmul+1,?_fround+1
  9476  0146D2  C081  F09A         	movff	?___flmul+2,?_fround+2
  9477  0146D6  C082  F09B         	movff	?___flmul+3,?_fround+3
  9478  0146DA  0012               	return	
  9479  0146DC                     __end_of_fround:
  9480                           	opt stack 0
  9481                           tblptru	equ	0xFF8
  9482                           tblptrh	equ	0xFF7
  9483                           tblptrl	equ	0xFF6
  9484                           tablat	equ	0xFF5
  9485                           prodh	equ	0xFF4
  9486                           prodl	equ	0xFF3
  9487                           intcon	equ	0xFF2
  9488                           postinc0	equ	0xFEE
  9489                           wreg	equ	0xFE8
  9490                           indf2	equ	0xFDF
  9491                           postinc2	equ	0xFDE
  9492                           fsr2h	equ	0xFDA
  9493                           fsr2l	equ	0xFD9
  9494                           status	equ	0xFD8
  9495                           
  9496 ;; *************** function ___flmul *****************
  9497 ;; Defined at:
  9498 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  b               4   31[BANK0 ] unsigned char 
  9501 ;;  a               4   35[BANK0 ] unsigned char 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  prod            4   50[BANK0 ] struct .
  9504 ;;  grs             4   45[BANK0 ] unsigned long 
  9505 ;;  temp            2   54[BANK0 ] struct .
  9506 ;;  bexp            1   49[BANK0 ] unsigned char 
  9507 ;;  aexp            1   44[BANK0 ] unsigned char 
  9508 ;;  sign            1   43[BANK0 ] unsigned char 
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  4   31[BANK0 ] unsigned char 
  9511 ;; Registers used:
  9512 ;;		wreg, status,2, status,0, prodl, prodh
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9518 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;Total ram usage:       25 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; Hardware stack levels required when called:    3
  9525 ;; This function calls:
  9526 ;;		Nothing
  9527 ;; This function is called by:
  9528 ;;		_main
  9529 ;;		_fround
  9530 ;;		_scale
  9531 ;;		_sprintf
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text14
  9536  0137E2                     __ptext14:
  9537                           	opt stack 0
  9538  0137E2                     ___flmul:
  9539                           	opt stack 27
  9540                           
  9541                           ;incstack = 0
  9542  0137E2  0100               	movlb	0	; () banked
  9543  0137E4  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9544  0137E6  0B80               	andlw	128
  9545  0137E8  0100               	movlb	0	; () banked
  9546  0137EA  6F8B               	movwf	___flmul@sign& (0+255),b
  9547  0137EC  0100               	movlb	0	; () banked
  9548  0137EE  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9549  0137F0  2582               	addwf	(___flmul@b+3)& (0+255),w,b
  9550  0137F2  0100               	movlb	0	; () banked
  9551  0137F4  6F91               	movwf	___flmul@bexp& (0+255),b
  9552                           
  9553                           ; BSR set to: 0
  9554  0137F6  0100               	movlb	0	; () banked
  9555  0137F8  AF81               	btfss	(___flmul@b+2)& (0+255),7,b
  9556  0137FA  D002               	goto	l8089
  9557                           
  9558                           ; BSR set to: 0
  9559  0137FC  0100               	movlb	0	; () banked
  9560  0137FE  8191               	bsf	___flmul@bexp& (0+255),0,b
  9561  013800                     l8089:
  9562                           
  9563                           ; BSR set to: 0
  9564  013800  0100               	movlb	0	; () banked
  9565  013802  5191               	movf	___flmul@bexp& (0+255),w,b
  9566  013804  0100               	movlb	0	; () banked
  9567  013806  B4D8               	btfsc	status,2,c
  9568  013808  D010               	goto	l8097
  9569                           
  9570                           ; BSR set to: 0
  9571  01380A  0100               	movlb	0	; () banked
  9572  01380C  2991               	incf	___flmul@bexp& (0+255),w,b
  9573  01380E  A4D8               	btfss	status,2,c
  9574  013810  D009               	goto	l8095
  9575                           
  9576                           ; BSR set to: 0
  9577  013812  0E00               	movlw	0
  9578  013814  0100               	movlb	0	; () banked
  9579  013816  6F7F               	movwf	___flmul@b& (0+255),b
  9580  013818  0E00               	movlw	0
  9581  01381A  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9582  01381C  0E00               	movlw	0
  9583  01381E  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9584  013820  0E00               	movlw	0
  9585  013822  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9586  013824                     l8095:
  9587                           
  9588                           ; BSR set to: 0
  9589  013824  0100               	movlb	0	; () banked
  9590  013826  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
  9591  013828  D009               	goto	l8099
  9592  01382A                     l8097:
  9593                           
  9594                           ; BSR set to: 0
  9595  01382A  0E00               	movlw	0
  9596  01382C  0100               	movlb	0	; () banked
  9597  01382E  6F7F               	movwf	___flmul@b& (0+255),b
  9598  013830  0E00               	movlw	0
  9599  013832  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9600  013834  0E00               	movlw	0
  9601  013836  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9602  013838  0E00               	movlw	0
  9603  01383A  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9604  01383C                     l8099:
  9605                           
  9606                           ; BSR set to: 0
  9607  01383C  0100               	movlb	0	; () banked
  9608  01383E  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9609  013840  0B80               	andlw	128
  9610  013842  0100               	movlb	0	; () banked
  9611  013844  1B8B               	xorwf	___flmul@sign& (0+255),f,b
  9612                           
  9613                           ; BSR set to: 0
  9614  013846  0100               	movlb	0	; () banked
  9615  013848  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9616  01384A  2586               	addwf	(___flmul@a+3)& (0+255),w,b
  9617  01384C  0100               	movlb	0	; () banked
  9618  01384E  6F8C               	movwf	___flmul@aexp& (0+255),b
  9619                           
  9620                           ; BSR set to: 0
  9621  013850  0100               	movlb	0	; () banked
  9622  013852  AF85               	btfss	(___flmul@a+2)& (0+255),7,b
  9623  013854  D002               	goto	l8107
  9624                           
  9625                           ; BSR set to: 0
  9626  013856  0100               	movlb	0	; () banked
  9627  013858  818C               	bsf	___flmul@aexp& (0+255),0,b
  9628  01385A                     l8107:
  9629                           
  9630                           ; BSR set to: 0
  9631  01385A  0100               	movlb	0	; () banked
  9632  01385C  518C               	movf	___flmul@aexp& (0+255),w,b
  9633  01385E  0100               	movlb	0	; () banked
  9634  013860  B4D8               	btfsc	status,2,c
  9635  013862  D010               	goto	l8115
  9636                           
  9637                           ; BSR set to: 0
  9638  013864  0100               	movlb	0	; () banked
  9639  013866  298C               	incf	___flmul@aexp& (0+255),w,b
  9640  013868  A4D8               	btfss	status,2,c
  9641  01386A  D009               	goto	l8113
  9642                           
  9643                           ; BSR set to: 0
  9644  01386C  0E00               	movlw	0
  9645  01386E  0100               	movlb	0	; () banked
  9646  013870  6F83               	movwf	___flmul@a& (0+255),b
  9647  013872  0E00               	movlw	0
  9648  013874  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9649  013876  0E00               	movlw	0
  9650  013878  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9651  01387A  0E00               	movlw	0
  9652  01387C  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9653  01387E                     l8113:
  9654                           
  9655                           ; BSR set to: 0
  9656  01387E  0100               	movlb	0	; () banked
  9657  013880  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
  9658  013882  D009               	goto	l1627
  9659  013884                     l8115:
  9660                           
  9661                           ; BSR set to: 0
  9662  013884  0E00               	movlw	0
  9663  013886  0100               	movlb	0	; () banked
  9664  013888  6F83               	movwf	___flmul@a& (0+255),b
  9665  01388A  0E00               	movlw	0
  9666  01388C  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9667  01388E  0E00               	movlw	0
  9668  013890  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9669  013892  0E00               	movlw	0
  9670  013894  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9671  013896                     l1627:
  9672                           
  9673                           ; BSR set to: 0
  9674  013896  0100               	movlb	0	; () banked
  9675  013898  518C               	movf	___flmul@aexp& (0+255),w,b
  9676  01389A  0100               	movlb	0	; () banked
  9677  01389C  B4D8               	btfsc	status,2,c
  9678  01389E  D005               	goto	l8119
  9679                           
  9680                           ; BSR set to: 0
  9681  0138A0  0100               	movlb	0	; () banked
  9682  0138A2  5191               	movf	___flmul@bexp& (0+255),w,b
  9683  0138A4  0100               	movlb	0	; () banked
  9684  0138A6  A4D8               	btfss	status,2,c
  9685  0138A8  D00A               	goto	l8123
  9686  0138AA                     l8119:
  9687                           
  9688                           ; BSR set to: 0
  9689  0138AA  0E00               	movlw	0
  9690  0138AC  0100               	movlb	0	; () banked
  9691  0138AE  6F7F               	movwf	?___flmul& (0+255),b
  9692  0138B0  0E00               	movlw	0
  9693  0138B2  6F80               	movwf	(?___flmul+1)& (0+255),b
  9694  0138B4  0E00               	movlw	0
  9695  0138B6  6F81               	movwf	(?___flmul+2)& (0+255),b
  9696  0138B8  0E00               	movlw	0
  9697  0138BA  6F82               	movwf	(?___flmul+3)& (0+255),b
  9698                           
  9699                           ; BSR set to: 0
  9700  0138BC  0012               	return	
  9701  0138BE                     l8123:
  9702                           
  9703                           ; BSR set to: 0
  9704  0138BE  0100               	movlb	0	; () banked
  9705  0138C0  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9706  0138C2  0100               	movlb	0	; () banked
  9707  0138C4  037F               	mulwf	___flmul@b& (0+255),b
  9708  0138C6  CFF3 F096          	movff	prodl,___flmul@temp
  9709  0138CA  CFF4 F097          	movff	prodh,___flmul@temp+1
  9710                           
  9711                           ; BSR set to: 0
  9712  0138CE  0100               	movlb	0	; () banked
  9713  0138D0  5196               	movf	___flmul@temp& (0+255),w,b
  9714  0138D2  0100               	movlb	0	; () banked
  9715  0138D4  6F8D               	movwf	___flmul@grs& (0+255),b
  9716  0138D6  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
  9717  0138D8  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
  9718  0138DA  6B90               	clrf	(___flmul@grs+3)& (0+255),b
  9719                           
  9720                           ; BSR set to: 0
  9721  0138DC  0100               	movlb	0	; () banked
  9722  0138DE  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9723  0138E0  0100               	movlb	0	; () banked
  9724  0138E2  6F92               	movwf	___flmul@prod& (0+255),b
  9725  0138E4  6B93               	clrf	(___flmul@prod+1)& (0+255),b
  9726  0138E6  6B94               	clrf	(___flmul@prod+2)& (0+255),b
  9727  0138E8  6B95               	clrf	(___flmul@prod+3)& (0+255),b
  9728  0138EA  0100               	movlb	0	; () banked
  9729  0138EC  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9730  0138EE  0100               	movlb	0	; () banked
  9731  0138F0  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9732  0138F2  CFF3 F096          	movff	prodl,___flmul@temp
  9733  0138F6  CFF4 F097          	movff	prodh,___flmul@temp+1
  9734                           
  9735                           ; BSR set to: 0
  9736  0138FA  0100               	movlb	0	; () banked
  9737  0138FC  5196               	movf	___flmul@temp& (0+255),w,b
  9738  0138FE  0100               	movlb	0	; () banked
  9739  013900  278D               	addwf	___flmul@grs& (0+255),f,b
  9740  013902  0E00               	movlw	0
  9741  013904  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9742  013906  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9743  013908  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9744                           
  9745                           ; BSR set to: 0
  9746  01390A  0100               	movlb	0	; () banked
  9747  01390C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9748  01390E  0100               	movlb	0	; () banked
  9749  013910  2792               	addwf	___flmul@prod& (0+255),f,b
  9750  013912  0E00               	movlw	0
  9751  013914  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9752  013916  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9753  013918  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9754  01391A  0100               	movlb	0	; () banked
  9755  01391C  5183               	movf	___flmul@a& (0+255),w,b
  9756  01391E  0100               	movlb	0	; () banked
  9757  013920  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9758  013922  CFF3 F096          	movff	prodl,___flmul@temp
  9759  013926  CFF4 F097          	movff	prodh,___flmul@temp+1
  9760                           
  9761                           ; BSR set to: 0
  9762  01392A  0100               	movlb	0	; () banked
  9763  01392C  5196               	movf	___flmul@temp& (0+255),w,b
  9764  01392E  0100               	movlb	0	; () banked
  9765  013930  278D               	addwf	___flmul@grs& (0+255),f,b
  9766  013932  0E00               	movlw	0
  9767  013934  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9768  013936  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9769  013938  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9770                           
  9771                           ; BSR set to: 0
  9772  01393A  0100               	movlb	0	; () banked
  9773  01393C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9774  01393E  0100               	movlb	0	; () banked
  9775  013940  2792               	addwf	___flmul@prod& (0+255),f,b
  9776  013942  0E00               	movlw	0
  9777  013944  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9778  013946  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9779  013948  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9780                           
  9781                           ; BSR set to: 0
  9782  01394A  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9783  01394E  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9784  013952  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9785  013956  0100               	movlb	0	; () banked
  9786  013958  6B8D               	clrf	___flmul@grs& (0+255),b
  9787                           
  9788                           ; BSR set to: 0
  9789  01395A  0100               	movlb	0	; () banked
  9790  01395C  5183               	movf	___flmul@a& (0+255),w,b
  9791  01395E  0100               	movlb	0	; () banked
  9792  013960  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9793  013962  CFF3 F096          	movff	prodl,___flmul@temp
  9794  013966  CFF4 F097          	movff	prodh,___flmul@temp+1
  9795                           
  9796                           ; BSR set to: 0
  9797  01396A  0100               	movlb	0	; () banked
  9798  01396C  5196               	movf	___flmul@temp& (0+255),w,b
  9799  01396E  0100               	movlb	0	; () banked
  9800  013970  278D               	addwf	___flmul@grs& (0+255),f,b
  9801  013972  0100               	movlb	0	; () banked
  9802  013974  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9803  013976  0100               	movlb	0	; () banked
  9804  013978  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9805  01397A  0E00               	movlw	0
  9806  01397C  0100               	movlb	0	; () banked
  9807  01397E  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9808  013980  0E00               	movlw	0
  9809  013982  0100               	movlb	0	; () banked
  9810  013984  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813  013986  0100               	movlb	0	; () banked
  9814  013988  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9815  01398A  0100               	movlb	0	; () banked
  9816  01398C  037F               	mulwf	___flmul@b& (0+255),b
  9817  01398E  CFF3 F096          	movff	prodl,___flmul@temp
  9818  013992  CFF4 F097          	movff	prodh,___flmul@temp+1
  9819                           
  9820                           ; BSR set to: 0
  9821  013996  0100               	movlb	0	; () banked
  9822  013998  5196               	movf	___flmul@temp& (0+255),w,b
  9823  01399A  0100               	movlb	0	; () banked
  9824  01399C  278D               	addwf	___flmul@grs& (0+255),f,b
  9825  01399E  0100               	movlb	0	; () banked
  9826  0139A0  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9827  0139A2  0100               	movlb	0	; () banked
  9828  0139A4  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9829  0139A6  0E00               	movlw	0
  9830  0139A8  0100               	movlb	0	; () banked
  9831  0139AA  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9832  0139AC  0E00               	movlw	0
  9833  0139AE  0100               	movlb	0	; () banked
  9834  0139B0  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9835                           
  9836                           ; BSR set to: 0
  9837  0139B2  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9838  0139B6  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9839  0139BA  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9840  0139BE  0100               	movlb	0	; () banked
  9841  0139C0  6B8D               	clrf	___flmul@grs& (0+255),b
  9842  0139C2  0100               	movlb	0	; () banked
  9843  0139C4  5183               	movf	___flmul@a& (0+255),w,b
  9844  0139C6  0100               	movlb	0	; () banked
  9845  0139C8  037F               	mulwf	___flmul@b& (0+255),b
  9846  0139CA  CFF3 F096          	movff	prodl,___flmul@temp
  9847  0139CE  CFF4 F097          	movff	prodh,___flmul@temp+1
  9848                           
  9849                           ; BSR set to: 0
  9850  0139D2  0100               	movlb	0	; () banked
  9851  0139D4  5196               	movf	___flmul@temp& (0+255),w,b
  9852  0139D6  0100               	movlb	0	; () banked
  9853  0139D8  278D               	addwf	___flmul@grs& (0+255),f,b
  9854  0139DA  0100               	movlb	0	; () banked
  9855  0139DC  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9856  0139DE  0100               	movlb	0	; () banked
  9857  0139E0  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9858  0139E2  0E00               	movlw	0
  9859  0139E4  0100               	movlb	0	; () banked
  9860  0139E6  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9861  0139E8  0E00               	movlw	0
  9862  0139EA  0100               	movlb	0	; () banked
  9863  0139EC  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9864                           
  9865                           ; BSR set to: 0
  9866  0139EE  0100               	movlb	0	; () banked
  9867  0139F0  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9868  0139F2  0100               	movlb	0	; () banked
  9869  0139F4  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9870  0139F6  CFF3 F096          	movff	prodl,___flmul@temp
  9871  0139FA  CFF4 F097          	movff	prodh,___flmul@temp+1
  9872  0139FE  0100               	movlb	0	; () banked
  9873  013A00  5196               	movf	___flmul@temp& (0+255),w,b
  9874  013A02  0100               	movlb	0	; () banked
  9875  013A04  2792               	addwf	___flmul@prod& (0+255),f,b
  9876  013A06  0100               	movlb	0	; () banked
  9877  013A08  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9878  013A0A  0100               	movlb	0	; () banked
  9879  013A0C  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9880  013A0E  0E00               	movlw	0
  9881  013A10  0100               	movlb	0	; () banked
  9882  013A12  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9883  013A14  0E00               	movlw	0
  9884  013A16  0100               	movlb	0	; () banked
  9885  013A18  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9886                           
  9887                           ; BSR set to: 0
  9888  013A1A  0100               	movlb	0	; () banked
  9889  013A1C  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9890  013A1E  0100               	movlb	0	; () banked
  9891  013A20  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9892  013A22  CFF3 F096          	movff	prodl,___flmul@temp
  9893  013A26  CFF4 F097          	movff	prodh,___flmul@temp+1
  9894                           
  9895                           ; BSR set to: 0
  9896  013A2A  0100               	movlb	0	; () banked
  9897  013A2C  5196               	movf	___flmul@temp& (0+255),w,b
  9898  013A2E  0100               	movlb	0	; () banked
  9899  013A30  2792               	addwf	___flmul@prod& (0+255),f,b
  9900  013A32  0100               	movlb	0	; () banked
  9901  013A34  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9902  013A36  0100               	movlb	0	; () banked
  9903  013A38  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9904  013A3A  0E00               	movlw	0
  9905  013A3C  0100               	movlb	0	; () banked
  9906  013A3E  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9907  013A40  0E00               	movlw	0
  9908  013A42  0100               	movlb	0	; () banked
  9909  013A44  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9910  013A46  0100               	movlb	0	; () banked
  9911  013A48  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9912  013A4A  0100               	movlb	0	; () banked
  9913  013A4C  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9914  013A4E  CFF3 F096          	movff	prodl,___flmul@temp
  9915  013A52  CFF4 F097          	movff	prodh,___flmul@temp+1
  9916                           
  9917                           ; BSR set to: 0
  9918  013A56  0100               	movlb	0	; () banked
  9919  013A58  5196               	movf	___flmul@temp& (0+255),w,b
  9920  013A5A  0100               	movlb	0	; () banked
  9921  013A5C  6F87               	movwf	??___flmul& (0+255),b
  9922  013A5E  0100               	movlb	0	; () banked
  9923  013A60  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9924  013A62  0100               	movlb	0	; () banked
  9925  013A64  6F88               	movwf	(??___flmul+1)& (0+255),b
  9926  013A66  0100               	movlb	0	; () banked
  9927  013A68  6B89               	clrf	(??___flmul+2)& (0+255),b
  9928  013A6A  0100               	movlb	0	; () banked
  9929  013A6C  6B8A               	clrf	(??___flmul+3)& (0+255),b
  9930  013A6E  C089  F08A         	movff	??___flmul+2,??___flmul+3
  9931  013A72  C088  F089         	movff	??___flmul+1,??___flmul+2
  9932  013A76  C087  F088         	movff	??___flmul,??___flmul+1
  9933  013A7A  0100               	movlb	0	; () banked
  9934  013A7C  6B87               	clrf	??___flmul& (0+255),b
  9935  013A7E  0100               	movlb	0	; () banked
  9936  013A80  5187               	movf	??___flmul& (0+255),w,b
  9937  013A82  0100               	movlb	0	; () banked
  9938  013A84  2792               	addwf	___flmul@prod& (0+255),f,b
  9939  013A86  0100               	movlb	0	; () banked
  9940  013A88  5188               	movf	(??___flmul+1)& (0+255),w,b
  9941  013A8A  0100               	movlb	0	; () banked
  9942  013A8C  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9943  013A8E  0100               	movlb	0	; () banked
  9944  013A90  5189               	movf	(??___flmul+2)& (0+255),w,b
  9945  013A92  0100               	movlb	0	; () banked
  9946  013A94  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9947  013A96  0100               	movlb	0	; () banked
  9948  013A98  518A               	movf	(??___flmul+3)& (0+255),w,b
  9949  013A9A  0100               	movlb	0	; () banked
  9950  013A9C  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9951                           
  9952                           ; BSR set to: 0
  9953  013A9E  C08D  F087         	movff	___flmul@grs,??___flmul
  9954  013AA2  C08E  F088         	movff	___flmul@grs+1,??___flmul+1
  9955  013AA6  C08F  F089         	movff	___flmul@grs+2,??___flmul+2
  9956  013AAA  C090  F08A         	movff	___flmul@grs+3,??___flmul+3
  9957  013AAE  0E19               	movlw	25
  9958  013AB0  D006               	goto	u10820
  9959  013AB2                     u10825:
  9960  013AB2  0100               	movlb	0	; () banked
  9961  013AB4  90D8               	bcf	status,0,c
  9962  013AB6  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  9963  013AB8  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  9964  013ABA  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  9965  013ABC  3387               	rrcf	??___flmul& (0+255),f,b
  9966  013ABE                     u10820:
  9967  013ABE  2EE8               	decfsz	wreg,f,c
  9968  013AC0  D7F8               	goto	u10825
  9969  013AC2  0100               	movlb	0	; () banked
  9970  013AC4  5187               	movf	??___flmul& (0+255),w,b
  9971  013AC6  0100               	movlb	0	; () banked
  9972  013AC8  2792               	addwf	___flmul@prod& (0+255),f,b
  9973  013ACA  0100               	movlb	0	; () banked
  9974  013ACC  5188               	movf	(??___flmul+1)& (0+255),w,b
  9975  013ACE  0100               	movlb	0	; () banked
  9976  013AD0  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9977  013AD2  0100               	movlb	0	; () banked
  9978  013AD4  5189               	movf	(??___flmul+2)& (0+255),w,b
  9979  013AD6  0100               	movlb	0	; () banked
  9980  013AD8  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9981  013ADA  0100               	movlb	0	; () banked
  9982  013ADC  518A               	movf	(??___flmul+3)& (0+255),w,b
  9983  013ADE  0100               	movlb	0	; () banked
  9984  013AE0  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9985                           
  9986                           ; BSR set to: 0
  9987  013AE2  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9988  013AE6  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9989  013AEA  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9990  013AEE  0100               	movlb	0	; () banked
  9991  013AF0  6B8D               	clrf	___flmul@grs& (0+255),b
  9992                           
  9993                           ; BSR set to: 0
  9994  013AF2  0100               	movlb	0	; () banked
  9995  013AF4  518C               	movf	___flmul@aexp& (0+255),w,b
  9996  013AF6  C091  F087         	movff	___flmul@bexp,??___flmul
  9997  013AFA  0100               	movlb	0	; () banked
  9998  013AFC  6B88               	clrf	(??___flmul+1)& (0+255),b
  9999  013AFE  0100               	movlb	0	; () banked
 10000  013B00  2787               	addwf	??___flmul& (0+255),f,b
 10001  013B02  0E00               	movlw	0
 10002  013B04  2388               	addwfc	(??___flmul+1)& (0+255),f,b
 10003  013B06  0E82               	movlw	130
 10004  013B08  0100               	movlb	0	; () banked
 10005  013B0A  2587               	addwf	??___flmul& (0+255),w,b
 10006  013B0C  0100               	movlb	0	; () banked
 10007  013B0E  6F96               	movwf	___flmul@temp& (0+255),b
 10008  013B10  0EFF               	movlw	255
 10009  013B12  0100               	movlb	0	; () banked
 10010  013B14  2188               	addwfc	(??___flmul+1)& (0+255),w,b
 10011  013B16  0100               	movlb	0	; () banked
 10012  013B18  6F97               	movwf	(___flmul@temp+1)& (0+255),b
 10013  013B1A  D015               	goto	l8171
 10014  013B1C                     l8165:
 10015                           
 10016                           ; BSR set to: 0
 10017  013B1C  0100               	movlb	0	; () banked
 10018  013B1E  90D8               	bcf	status,0,c
 10019  013B20  3792               	rlcf	___flmul@prod& (0+255),f,b
 10020  013B22  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10021  013B24  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10022  013B26  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10023                           
 10024                           ; BSR set to: 0
 10025  013B28  0100               	movlb	0	; () banked
 10026  013B2A  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10027  013B2C  D002               	goto	l1634
 10028                           
 10029                           ; BSR set to: 0
 10030  013B2E  0100               	movlb	0	; () banked
 10031  013B30  8192               	bsf	___flmul@prod& (0+255),0,b
 10032  013B32                     l1634:
 10033                           
 10034                           ; BSR set to: 0
 10035  013B32  0100               	movlb	0	; () banked
 10036  013B34  90D8               	bcf	status,0,c
 10037  013B36  378D               	rlcf	___flmul@grs& (0+255),f,b
 10038  013B38  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10039  013B3A  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10040  013B3C  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10041  013B3E  0100               	movlb	0	; () banked
 10042  013B40  0796               	decf	___flmul@temp& (0+255),f,b
 10043  013B42  A0D8               	btfss	status,0,c
 10044  013B44  0797               	decf	(___flmul@temp+1)& (0+255),f,b
 10045  013B46                     l8171:
 10046                           
 10047                           ; BSR set to: 0
 10048  013B46  0100               	movlb	0	; () banked
 10049  013B48  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
 10050  013B4A  D7E8               	goto	l8165
 10051                           
 10052                           ; BSR set to: 0
 10053                           
 10054                           ; BSR set to: 0
 10055  013B4C  0E00               	movlw	0
 10056  013B4E  0100               	movlb	0	; () banked
 10057  013B50  6F8C               	movwf	___flmul@aexp& (0+255),b
 10058                           
 10059                           ; BSR set to: 0
 10060  013B52  0100               	movlb	0	; () banked
 10061  013B54  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10062  013B56  D024               	goto	l1636
 10063                           
 10064                           ; BSR set to: 0
 10065  013B58  0EFF               	movlw	255
 10066  013B5A  0100               	movlb	0	; () banked
 10067  013B5C  158D               	andwf	___flmul@grs& (0+255),w,b
 10068  013B5E  0100               	movlb	0	; () banked
 10069  013B60  6F87               	movwf	??___flmul& (0+255),b
 10070  013B62  0EFF               	movlw	255
 10071  013B64  0100               	movlb	0	; () banked
 10072  013B66  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
 10073  013B68  0100               	movlb	0	; () banked
 10074  013B6A  6F88               	movwf	(??___flmul+1)& (0+255),b
 10075  013B6C  0EFF               	movlw	255
 10076  013B6E  0100               	movlb	0	; () banked
 10077  013B70  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
 10078  013B72  0100               	movlb	0	; () banked
 10079  013B74  6F89               	movwf	(??___flmul+2)& (0+255),b
 10080  013B76  0E7F               	movlw	127
 10081  013B78  0100               	movlb	0	; () banked
 10082  013B7A  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
 10083  013B7C  0100               	movlb	0	; () banked
 10084  013B7E  6F8A               	movwf	(??___flmul+3)& (0+255),b
 10085  013B80  0100               	movlb	0	; () banked
 10086  013B82  5187               	movf	??___flmul& (0+255),w,b
 10087  013B84  0100               	movlb	0	; () banked
 10088  013B86  1188               	iorwf	(??___flmul+1)& (0+255),w,b
 10089  013B88  0100               	movlb	0	; () banked
 10090  013B8A  1189               	iorwf	(??___flmul+2)& (0+255),w,b
 10091  013B8C  0100               	movlb	0	; () banked
 10092  013B8E  118A               	iorwf	(??___flmul+3)& (0+255),w,b
 10093  013B90  A4D8               	btfss	status,2,c
 10094  013B92  D003               	goto	l8181
 10095                           
 10096                           ; BSR set to: 0
 10097                           
 10098                           ; BSR set to: 0
 10099  013B94  0100               	movlb	0	; () banked
 10100  013B96  A192               	btfss	___flmul@prod& (0+255),0,b
 10101  013B98  D003               	goto	l1636
 10102  013B9A                     l8181:
 10103                           
 10104                           ; BSR set to: 0
 10105  013B9A  0E01               	movlw	1
 10106  013B9C  0100               	movlb	0	; () banked
 10107  013B9E  6F8C               	movwf	___flmul@aexp& (0+255),b
 10108  013BA0                     l1636:
 10109                           
 10110                           ; BSR set to: 0
 10111  013BA0  0100               	movlb	0	; () banked
 10112  013BA2  518C               	movf	___flmul@aexp& (0+255),w,b
 10113  013BA4  0100               	movlb	0	; () banked
 10114  013BA6  B4D8               	btfsc	status,2,c
 10115  013BA8  D023               	goto	l8191
 10116                           
 10117                           ; BSR set to: 0
 10118  013BAA  0E01               	movlw	1
 10119  013BAC  0100               	movlb	0	; () banked
 10120  013BAE  2792               	addwf	___flmul@prod& (0+255),f,b
 10121  013BB0  0E00               	movlw	0
 10122  013BB2  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10123  013BB4  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10124  013BB6  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10125                           
 10126                           ; BSR set to: 0
 10127  013BB8  0100               	movlb	0	; () banked
 10128  013BBA  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
 10129  013BBC  D019               	goto	l8191
 10130                           
 10131                           ; BSR set to: 0
 10132  013BBE  C092  F087         	movff	___flmul@prod,??___flmul
 10133  013BC2  C093  F088         	movff	___flmul@prod+1,??___flmul+1
 10134  013BC6  C094  F089         	movff	___flmul@prod+2,??___flmul+2
 10135  013BCA  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
 10136  013BCE  0100               	movlb	0	; () banked
 10137  013BD0  358A               	rlcf	(??___flmul+3)& (0+255),w,b
 10138  013BD2  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 10139  013BD4  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 10140  013BD6  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 10141  013BD8  3387               	rrcf	??___flmul& (0+255),f,b
 10142  013BDA  C087  F092         	movff	??___flmul,___flmul@prod
 10143  013BDE  C088  F093         	movff	??___flmul+1,___flmul@prod+1
 10144  013BE2  C089  F094         	movff	??___flmul+2,___flmul@prod+2
 10145  013BE6  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
 10146                           
 10147                           ; BSR set to: 0
 10148  013BEA  0100               	movlb	0	; () banked
 10149  013BEC  4B96               	infsnz	___flmul@temp& (0+255),f,b
 10150  013BEE  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
 10151  013BF0                     l8191:
 10152                           
 10153                           ; BSR set to: 0
 10154  013BF0  0100               	movlb	0	; () banked
 10155  013BF2  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10156  013BF4  D010               	goto	l8195
 10157  013BF6  0100               	movlb	0	; () banked
 10158  013BF8  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10159  013BFA  E104               	bnz	u10900
 10160  013BFC  0100               	movlb	0	; () banked
 10161  013BFE  2996               	incf	___flmul@temp& (0+255),w,b
 10162  013C00  A0D8               	btfss	status,0,c
 10163  013C02  D009               	goto	l8195
 10164  013C04                     u10900:
 10165                           
 10166                           ; BSR set to: 0
 10167  013C04  0E00               	movlw	0
 10168  013C06  0100               	movlb	0	; () banked
 10169  013C08  6F92               	movwf	___flmul@prod& (0+255),b
 10170  013C0A  0E00               	movlw	0
 10171  013C0C  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 10172  013C0E  0E80               	movlw	128
 10173  013C10  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 10174  013C12  0E7F               	movlw	127
 10175  013C14  D02B               	goto	L11
 10176  013C16                     l8195:
 10177                           
 10178                           ; BSR set to: 0
 10179  013C16  0100               	movlb	0	; () banked
 10180  013C18  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10181  013C1A  D007               	goto	l8197
 10182  013C1C  0100               	movlb	0	; () banked
 10183  013C1E  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10184  013C20  E111               	bnz	l1644
 10185  013C22  0100               	movlb	0	; () banked
 10186  013C24  0596               	decf	___flmul@temp& (0+255),w,b
 10187  013C26  B0D8               	btfsc	status,0,c
 10188  013C28  D00D               	goto	l1644
 10189  013C2A                     l8197:
 10190                           
 10191                           ; BSR set to: 0
 10192  013C2A  0E00               	movlw	0
 10193  013C2C  0100               	movlb	0	; () banked
 10194  013C2E  6F92               	movwf	___flmul@prod& (0+255),b
 10195  013C30  0E00               	movlw	0
 10196  013C32  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 10197  013C34  0E00               	movlw	0
 10198  013C36  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 10199  013C38  0E00               	movlw	0
 10200  013C3A  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 10201  013C3C  0E00               	movlw	0
 10202  013C3E  0100               	movlb	0	; () banked
 10203  013C40  6F8B               	movwf	___flmul@sign& (0+255),b
 10204  013C42  D015               	goto	l8207
 10205  013C44                     l1644:
 10206                           
 10207                           ; BSR set to: 0
 10208  013C44  C096  F091         	movff	___flmul@temp,___flmul@bexp
 10209                           
 10210                           ; BSR set to: 0
 10211  013C48  0EFF               	movlw	255
 10212  013C4A  0100               	movlb	0	; () banked
 10213  013C4C  1792               	andwf	___flmul@prod& (0+255),f,b
 10214  013C4E  0EFF               	movlw	255
 10215  013C50  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
 10216  013C52  0E7F               	movlw	127
 10217  013C54  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
 10218  013C56  0E00               	movlw	0
 10219  013C58  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
 10220                           
 10221                           ; BSR set to: 0
 10222  013C5A  0100               	movlb	0	; () banked
 10223  013C5C  A191               	btfss	___flmul@bexp& (0+255),0,b
 10224  013C5E  D002               	goto	l8205
 10225                           
 10226                           ; BSR set to: 0
 10227  013C60  0100               	movlb	0	; () banked
 10228  013C62  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
 10229  013C64                     l8205:
 10230                           
 10231                           ; BSR set to: 0
 10232  013C64  0100               	movlb	0	; () banked
 10233  013C66  90D8               	bcf	status,0,c
 10234  013C68  3191               	rrcf	___flmul@bexp& (0+255),w,b
 10235  013C6A  0100               	movlb	0	; () banked
 10236  013C6C                     L11:
 10237  013C6C  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 10238  013C6E                     l8207:
 10239                           
 10240                           ; BSR set to: 0
 10241  013C6E  0100               	movlb	0	; () banked
 10242  013C70  518B               	movf	___flmul@sign& (0+255),w,b
 10243  013C72  0100               	movlb	0	; () banked
 10244  013C74  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10245                           
 10246                           ; BSR set to: 0
 10247  013C76  C092  F07F         	movff	___flmul@prod,?___flmul
 10248  013C7A  C093  F080         	movff	___flmul@prod+1,?___flmul+1
 10249  013C7E  C094  F081         	movff	___flmul@prod+2,?___flmul+2
 10250  013C82  C095  F082         	movff	___flmul@prod+3,?___flmul+3
 10251  013C86  0012               	return	
 10252  013C88                     __end_of___flmul:
 10253                           	opt stack 0
 10254                           tblptru	equ	0xFF8
 10255                           tblptrh	equ	0xFF7
 10256                           tblptrl	equ	0xFF6
 10257                           tablat	equ	0xFF5
 10258                           prodh	equ	0xFF4
 10259                           prodl	equ	0xFF3
 10260                           intcon	equ	0xFF2
 10261                           postinc0	equ	0xFEE
 10262                           wreg	equ	0xFE8
 10263                           indf2	equ	0xFDF
 10264                           postinc2	equ	0xFDE
 10265                           fsr2h	equ	0xFDA
 10266                           fsr2l	equ	0xFD9
 10267                           status	equ	0xFD8
 10268                           
 10269 ;; *************** function ___awmod *****************
 10270 ;; Defined at:
 10271 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  dividend        2   17[BANK0 ] int 
 10274 ;;  divisor         2   19[BANK0 ] int 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  sign            1   22[BANK0 ] unsigned char 
 10277 ;;  counter         1   21[BANK0 ] unsigned char 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  2   17[BANK0 ] int 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10287 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10291 ;;Total ram usage:        6 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    3
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_fround
 10298 ;;		_scale
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text15
 10303  015C3A                     __ptext15:
 10304                           	opt stack 0
 10305  015C3A                     ___awmod:
 10306                           	opt stack 24
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;incstack = 0
 10310  015C3A  0E00               	movlw	0
 10311  015C3C  0100               	movlb	0	; () banked
 10312  015C3E  6F76               	movwf	___awmod@sign& (0+255),b
 10313                           
 10314                           ; BSR set to: 0
 10315  015C40  0100               	movlb	0	; () banked
 10316  015C42  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10317  015C44  D008               	goto	l8265
 10318                           
 10319                           ; BSR set to: 0
 10320  015C46  0100               	movlb	0	; () banked
 10321  015C48  6D71               	negf	___awmod@dividend& (0+255),b
 10322  015C4A  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10323  015C4C  B0D8               	btfsc	status,0,c
 10324  015C4E  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10325                           
 10326                           ; BSR set to: 0
 10327  015C50  0E01               	movlw	1
 10328  015C52  0100               	movlb	0	; () banked
 10329  015C54  6F76               	movwf	___awmod@sign& (0+255),b
 10330  015C56                     l8265:
 10331                           
 10332                           ; BSR set to: 0
 10333  015C56  0100               	movlb	0	; () banked
 10334  015C58  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10335  015C5A  D005               	goto	l8269
 10336                           
 10337                           ; BSR set to: 0
 10338  015C5C  0100               	movlb	0	; () banked
 10339  015C5E  6D73               	negf	___awmod@divisor& (0+255),b
 10340  015C60  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 10341  015C62  B0D8               	btfsc	status,0,c
 10342  015C64  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 10343  015C66                     l8269:
 10344                           
 10345                           ; BSR set to: 0
 10346  015C66  0100               	movlb	0	; () banked
 10347  015C68  5173               	movf	___awmod@divisor& (0+255),w,b
 10348  015C6A  0100               	movlb	0	; () banked
 10349  015C6C  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10350  015C6E  B4D8               	btfsc	status,2,c
 10351  015C70  D026               	goto	l8285
 10352                           
 10353                           ; BSR set to: 0
 10354  015C72  0E01               	movlw	1
 10355  015C74  0100               	movlb	0	; () banked
 10356  015C76  6F75               	movwf	___awmod@counter& (0+255),b
 10357  015C78  D006               	goto	l8275
 10358  015C7A                     l8273:
 10359                           
 10360                           ; BSR set to: 0
 10361  015C7A  0100               	movlb	0	; () banked
 10362  015C7C  90D8               	bcf	status,0,c
 10363  015C7E  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10364  015C80  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10365  015C82  0100               	movlb	0	; () banked
 10366  015C84  2B75               	incf	___awmod@counter& (0+255),f,b
 10367  015C86                     l8275:
 10368                           
 10369                           ; BSR set to: 0
 10370  015C86  0100               	movlb	0	; () banked
 10371  015C88  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10372  015C8A  D7F7               	goto	l8273
 10373  015C8C                     l8277:
 10374                           
 10375                           ; BSR set to: 0
 10376  015C8C  0100               	movlb	0	; () banked
 10377  015C8E  5173               	movf	___awmod@divisor& (0+255),w,b
 10378  015C90  0100               	movlb	0	; () banked
 10379  015C92  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10380  015C94  0100               	movlb	0	; () banked
 10381  015C96  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10382  015C98  0100               	movlb	0	; () banked
 10383  015C9A  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10384  015C9C  A0D8               	btfss	status,0,c
 10385  015C9E  D008               	goto	l8281
 10386                           
 10387                           ; BSR set to: 0
 10388  015CA0  0100               	movlb	0	; () banked
 10389  015CA2  5173               	movf	___awmod@divisor& (0+255),w,b
 10390  015CA4  0100               	movlb	0	; () banked
 10391  015CA6  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10392  015CA8  0100               	movlb	0	; () banked
 10393  015CAA  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10394  015CAC  0100               	movlb	0	; () banked
 10395  015CAE  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10396  015CB0                     l8281:
 10397                           
 10398                           ; BSR set to: 0
 10399  015CB0  0100               	movlb	0	; () banked
 10400  015CB2  90D8               	bcf	status,0,c
 10401  015CB4  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10402  015CB6  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10403                           
 10404                           ; BSR set to: 0
 10405  015CB8  0100               	movlb	0	; () banked
 10406  015CBA  2F75               	decfsz	___awmod@counter& (0+255),f,b
 10407  015CBC  D7E7               	goto	l8277
 10408  015CBE                     l8285:
 10409                           
 10410                           ; BSR set to: 0
 10411  015CBE  0100               	movlb	0	; () banked
 10412  015CC0  5176               	movf	___awmod@sign& (0+255),w,b
 10413  015CC2  0100               	movlb	0	; () banked
 10414  015CC4  B4D8               	btfsc	status,2,c
 10415  015CC6  D005               	goto	l8289
 10416                           
 10417                           ; BSR set to: 0
 10418  015CC8  0100               	movlb	0	; () banked
 10419  015CCA  6D71               	negf	___awmod@dividend& (0+255),b
 10420  015CCC  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10421  015CCE  B0D8               	btfsc	status,0,c
 10422  015CD0  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10423  015CD2                     l8289:
 10424                           
 10425                           ; BSR set to: 0
 10426  015CD2  C071  F071         	movff	___awmod@dividend,?___awmod
 10427  015CD6  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10428  015CDA  0012               	return	
 10429  015CDC                     __end_of___awmod:
 10430                           	opt stack 0
 10431                           tblptru	equ	0xFF8
 10432                           tblptrh	equ	0xFF7
 10433                           tblptrl	equ	0xFF6
 10434                           tablat	equ	0xFF5
 10435                           prodh	equ	0xFF4
 10436                           prodl	equ	0xFF3
 10437                           intcon	equ	0xFF2
 10438                           postinc0	equ	0xFEE
 10439                           wreg	equ	0xFE8
 10440                           indf2	equ	0xFDF
 10441                           postinc2	equ	0xFDE
 10442                           fsr2h	equ	0xFDA
 10443                           fsr2l	equ	0xFD9
 10444                           status	equ	0xFD8
 10445                           
 10446 ;; *************** function ___awdiv *****************
 10447 ;; Defined at:
 10448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  dividend        2   23[BANK0 ] int 
 10451 ;;  divisor         2   25[BANK0 ] int 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;  quotient        2   29[BANK0 ] int 
 10454 ;;  sign            1   28[BANK0 ] unsigned char 
 10455 ;;  counter         1   27[BANK0 ] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  2   23[BANK0 ] int 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2, status,0
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;Total ram usage:        8 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    3
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_fround
 10476 ;;		_scale
 10477 ;;		_sprintf
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text16
 10482  0157F6                     __ptext16:
 10483                           	opt stack 0
 10484  0157F6                     ___awdiv:
 10485                           	opt stack 24
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;incstack = 0
 10489  0157F6  0E00               	movlw	0
 10490  0157F8  0100               	movlb	0	; () banked
 10491  0157FA  6F7C               	movwf	___awdiv@sign& (0+255),b
 10492                           
 10493                           ; BSR set to: 0
 10494  0157FC  0100               	movlb	0	; () banked
 10495  0157FE  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10496  015800  D008               	goto	l8221
 10497                           
 10498                           ; BSR set to: 0
 10499  015802  0100               	movlb	0	; () banked
 10500  015804  6D79               	negf	___awdiv@divisor& (0+255),b
 10501  015806  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10502  015808  B0D8               	btfsc	status,0,c
 10503  01580A  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10504                           
 10505                           ; BSR set to: 0
 10506  01580C  0E01               	movlw	1
 10507  01580E  0100               	movlb	0	; () banked
 10508  015810  6F7C               	movwf	___awdiv@sign& (0+255),b
 10509  015812                     l8221:
 10510                           
 10511                           ; BSR set to: 0
 10512  015812  0100               	movlb	0	; () banked
 10513  015814  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10514  015816  D008               	goto	l8227
 10515                           
 10516                           ; BSR set to: 0
 10517  015818  0100               	movlb	0	; () banked
 10518  01581A  6D77               	negf	___awdiv@dividend& (0+255),b
 10519  01581C  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10520  01581E  B0D8               	btfsc	status,0,c
 10521  015820  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10522                           
 10523                           ; BSR set to: 0
 10524  015822  0E01               	movlw	1
 10525  015824  0100               	movlb	0	; () banked
 10526  015826  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
 10527  015828                     l8227:
 10528                           
 10529                           ; BSR set to: 0
 10530  015828  0E00               	movlw	0
 10531  01582A  0100               	movlb	0	; () banked
 10532  01582C  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
 10533  01582E  0E00               	movlw	0
 10534  015830  6F7D               	movwf	___awdiv@quotient& (0+255),b
 10535                           
 10536                           ; BSR set to: 0
 10537  015832  0100               	movlb	0	; () banked
 10538  015834  5179               	movf	___awdiv@divisor& (0+255),w,b
 10539  015836  0100               	movlb	0	; () banked
 10540  015838  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10541  01583A  B4D8               	btfsc	status,2,c
 10542  01583C  D02C               	goto	l8249
 10543                           
 10544                           ; BSR set to: 0
 10545  01583E  0E01               	movlw	1
 10546  015840  0100               	movlb	0	; () banked
 10547  015842  6F7B               	movwf	___awdiv@counter& (0+255),b
 10548  015844  D006               	goto	l8235
 10549  015846                     l8233:
 10550                           
 10551                           ; BSR set to: 0
 10552  015846  0100               	movlb	0	; () banked
 10553  015848  90D8               	bcf	status,0,c
 10554  01584A  3779               	rlcf	___awdiv@divisor& (0+255),f,b
 10555  01584C  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10556  01584E  0100               	movlb	0	; () banked
 10557  015850  2B7B               	incf	___awdiv@counter& (0+255),f,b
 10558  015852                     l8235:
 10559                           
 10560                           ; BSR set to: 0
 10561  015852  0100               	movlb	0	; () banked
 10562  015854  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10563  015856  D7F7               	goto	l8233
 10564  015858                     l8237:
 10565                           
 10566                           ; BSR set to: 0
 10567  015858  0100               	movlb	0	; () banked
 10568  01585A  90D8               	bcf	status,0,c
 10569  01585C  377D               	rlcf	___awdiv@quotient& (0+255),f,b
 10570  01585E  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10571                           
 10572                           ; BSR set to: 0
 10573  015860  0100               	movlb	0	; () banked
 10574  015862  5179               	movf	___awdiv@divisor& (0+255),w,b
 10575  015864  0100               	movlb	0	; () banked
 10576  015866  5D77               	subwf	___awdiv@dividend& (0+255),w,b
 10577  015868  0100               	movlb	0	; () banked
 10578  01586A  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10579  01586C  0100               	movlb	0	; () banked
 10580  01586E  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10581  015870  A0D8               	btfss	status,0,c
 10582  015872  D00A               	goto	l8245
 10583                           
 10584                           ; BSR set to: 0
 10585  015874  0100               	movlb	0	; () banked
 10586  015876  5179               	movf	___awdiv@divisor& (0+255),w,b
 10587  015878  0100               	movlb	0	; () banked
 10588  01587A  5F77               	subwf	___awdiv@dividend& (0+255),f,b
 10589  01587C  0100               	movlb	0	; () banked
 10590  01587E  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10591  015880  0100               	movlb	0	; () banked
 10592  015882  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10593                           
 10594                           ; BSR set to: 0
 10595  015884  0100               	movlb	0	; () banked
 10596  015886  817D               	bsf	___awdiv@quotient& (0+255),0,b
 10597  015888                     l8245:
 10598                           
 10599                           ; BSR set to: 0
 10600  015888  0100               	movlb	0	; () banked
 10601  01588A  90D8               	bcf	status,0,c
 10602  01588C  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10603  01588E  3379               	rrcf	___awdiv@divisor& (0+255),f,b
 10604                           
 10605                           ; BSR set to: 0
 10606  015890  0100               	movlb	0	; () banked
 10607  015892  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
 10608  015894  D7E1               	goto	l8237
 10609  015896                     l8249:
 10610                           
 10611                           ; BSR set to: 0
 10612  015896  0100               	movlb	0	; () banked
 10613  015898  517C               	movf	___awdiv@sign& (0+255),w,b
 10614  01589A  0100               	movlb	0	; () banked
 10615  01589C  B4D8               	btfsc	status,2,c
 10616  01589E  D005               	goto	l8253
 10617                           
 10618                           ; BSR set to: 0
 10619  0158A0  0100               	movlb	0	; () banked
 10620  0158A2  6D7D               	negf	___awdiv@quotient& (0+255),b
 10621  0158A4  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10622  0158A6  B0D8               	btfsc	status,0,c
 10623  0158A8  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10624  0158AA                     l8253:
 10625                           
 10626                           ; BSR set to: 0
 10627  0158AA  C07D  F077         	movff	___awdiv@quotient,?___awdiv
 10628  0158AE  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
 10629  0158B2  0012               	return	
 10630  0158B4                     __end_of___awdiv:
 10631                           	opt stack 0
 10632                           tblptru	equ	0xFF8
 10633                           tblptrh	equ	0xFF7
 10634                           tblptrl	equ	0xFF6
 10635                           tablat	equ	0xFF5
 10636                           prodh	equ	0xFF4
 10637                           prodl	equ	0xFF3
 10638                           intcon	equ	0xFF2
 10639                           postinc0	equ	0xFEE
 10640                           wreg	equ	0xFE8
 10641                           indf2	equ	0xFDF
 10642                           postinc2	equ	0xFDE
 10643                           fsr2h	equ	0xFDA
 10644                           fsr2l	equ	0xFD9
 10645                           status	equ	0xFD8
 10646                           
 10647 ;; *************** function __tdiv_to_l_ *****************
 10648 ;; Defined at:
 10649 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  f1              4   17[BANK0 ] float 
 10652 ;;  f2              4   21[BANK0 ] float 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;  quot            4   28[BANK0 ] unsigned long 
 10655 ;;  exp1            1   33[BANK0 ] unsigned char 
 10656 ;;  cntr            1   32[BANK0 ] unsigned char 
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  4   17[BANK0 ] unsigned long 
 10659 ;; Registers used:
 10660 ;;		wreg, status,2, status,0
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10666 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;Total ram usage:       17 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:    3
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_sprintf
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text17
 10681  014FDA                     __ptext17:
 10682                           	opt stack 0
 10683  014FDA                     __tdiv_to_l_:
 10684                           	opt stack 25
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;incstack = 0
 10688  014FDA  C073  F079         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10689  014FDE  0100               	movlb	0	; () banked
 10690  014FE0  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10691  014FE2  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10692  014FE4  0100               	movlb	0	; () banked
 10693  014FE6  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10694  014FE8  0100               	movlb	0	; () banked
 10695  014FEA  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10696  014FEC  E301               	bnc	u11161
 10697  014FEE  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10698  014FF0                     u11161:
 10699  014FF0  0100               	movlb	0	; () banked
 10700  014FF2  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 10701  014FF4  0100               	movlb	0	; () banked
 10702  014FF6  6F81               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10703  014FF8  0100               	movlb	0	; () banked
 10704  014FFA  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10705  014FFC  A4D8               	btfss	status,2,c
 10706  014FFE  D00A               	goto	l8403
 10707                           
 10708                           ; BSR set to: 0
 10709  015000  0E00               	movlw	0
 10710  015002  0100               	movlb	0	; () banked
 10711  015004  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10712  015006  0E00               	movlw	0
 10713  015008  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10714  01500A  0E00               	movlw	0
 10715  01500C  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10716  01500E  0E00               	movlw	0
 10717  015010  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10718                           
 10719                           ; BSR set to: 0
 10720  015012  0012               	return	
 10721  015014                     l8403:
 10722                           
 10723                           ; BSR set to: 0
 10724  015014  C077  F079         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10725  015018  0100               	movlb	0	; () banked
 10726  01501A  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10727  01501C  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10728  01501E  0100               	movlb	0	; () banked
 10729  015020  3576               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10730  015022  0100               	movlb	0	; () banked
 10731  015024  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10732  015026  E301               	bnc	u11181
 10733  015028  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10734  01502A                     u11181:
 10735  01502A  0100               	movlb	0	; () banked
 10736  01502C  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 10737  01502E  0100               	movlb	0	; () banked
 10738  015030  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10739  015032  0100               	movlb	0	; () banked
 10740  015034  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10741  015036  A4D8               	btfss	status,2,c
 10742  015038  D00A               	goto	l8409
 10743                           
 10744                           ; BSR set to: 0
 10745  01503A  0E00               	movlw	0
 10746  01503C  0100               	movlb	0	; () banked
 10747  01503E  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10748  015040  0E00               	movlw	0
 10749  015042  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10750  015044  0E00               	movlw	0
 10751  015046  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10752  015048  0E00               	movlw	0
 10753  01504A  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10754                           
 10755                           ; BSR set to: 0
 10756  01504C  0012               	return	
 10757  01504E                     l8409:
 10758                           
 10759                           ; BSR set to: 0
 10760  01504E  0100               	movlb	0	; () banked
 10761  015050  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10762                           
 10763                           ; BSR set to: 0
 10764  015052  0EFF               	movlw	255
 10765  015054  0100               	movlb	0	; () banked
 10766  015056  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10767  015058  0EFF               	movlw	255
 10768  01505A  0100               	movlb	0	; () banked
 10769  01505C  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10770  01505E  0E00               	movlw	0
 10771  015060  0100               	movlb	0	; () banked
 10772  015062  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10773  015064  0100               	movlb	0	; () banked
 10774  015066  8F76               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10775                           
 10776                           ; BSR set to: 0
 10777  015068  0EFF               	movlw	255
 10778  01506A  0100               	movlb	0	; () banked
 10779  01506C  1775               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10780  01506E  0EFF               	movlw	255
 10781  015070  0100               	movlb	0	; () banked
 10782  015072  1776               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10783  015074  0E00               	movlw	0
 10784  015076  0100               	movlb	0	; () banked
 10785  015078  1777               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10786                           
 10787                           ; BSR set to: 0
 10788  01507A  0E00               	movlw	0
 10789  01507C  0100               	movlb	0	; () banked
 10790  01507E  6F7C               	movwf	__tdiv_to_l_@quot& (0+255),b
 10791  015080  0E00               	movlw	0
 10792  015082  6F7D               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10793  015084  0E00               	movlw	0
 10794  015086  6F7E               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10795  015088  0E00               	movlw	0
 10796  01508A  6F7F               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10797                           
 10798                           ; BSR set to: 0
 10799  01508C  0E7F               	movlw	127
 10800  01508E  0100               	movlb	0	; () banked
 10801  015090  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10802                           
 10803                           ; BSR set to: 0
 10804  015092  0100               	movlb	0	; () banked
 10805  015094  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10806  015096  0F98               	addlw	152
 10807  015098  0100               	movlb	0	; () banked
 10808  01509A  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10809                           
 10810                           ; BSR set to: 0
 10811  01509C  0E18               	movlw	24
 10812  01509E  0100               	movlb	0	; () banked
 10813  0150A0  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10814  0150A2                     l1351:
 10815                           
 10816                           ; BSR set to: 0
 10817  0150A2  0100               	movlb	0	; () banked
 10818  0150A4  90D8               	bcf	status,0,c
 10819  0150A6  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10820  0150A8  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10821  0150AA  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10822  0150AC  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10823                           
 10824                           ; BSR set to: 0
 10825  0150AE  0100               	movlb	0	; () banked
 10826  0150B0  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10827  0150B2  0100               	movlb	0	; () banked
 10828  0150B4  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10829  0150B6  0100               	movlb	0	; () banked
 10830  0150B8  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10831  0150BA  0100               	movlb	0	; () banked
 10832  0150BC  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10833  0150BE  0100               	movlb	0	; () banked
 10834  0150C0  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10835  0150C2  0100               	movlb	0	; () banked
 10836  0150C4  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10837  0150C6  A0D8               	btfss	status,0,c
 10838  0150C8  D00E               	goto	l1352
 10839                           
 10840                           ; BSR set to: 0
 10841  0150CA  0100               	movlb	0	; () banked
 10842  0150CC  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10843  0150CE  0100               	movlb	0	; () banked
 10844  0150D0  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10845  0150D2  0100               	movlb	0	; () banked
 10846  0150D4  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10847  0150D6  0100               	movlb	0	; () banked
 10848  0150D8  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10849  0150DA  0100               	movlb	0	; () banked
 10850  0150DC  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10851  0150DE  0100               	movlb	0	; () banked
 10852  0150E0  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10853                           
 10854                           ; BSR set to: 0
 10855  0150E2  0100               	movlb	0	; () banked
 10856  0150E4  817C               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10857  0150E6                     l1352:
 10858                           
 10859                           ; BSR set to: 0
 10860  0150E6  0100               	movlb	0	; () banked
 10861  0150E8  90D8               	bcf	status,0,c
 10862  0150EA  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10863  0150EC  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10864  0150EE  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10865                           
 10866                           ; BSR set to: 0
 10867  0150F0  0100               	movlb	0	; () banked
 10868  0150F2  2F80               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10869  0150F4  D7D6               	goto	l1351
 10870                           
 10871                           ; BSR set to: 0
 10872                           
 10873                           ; BSR set to: 0
 10874  0150F6  0100               	movlb	0	; () banked
 10875  0150F8  AF81               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10876  0150FA  D01A               	goto	l8443
 10877                           
 10878                           ; BSR set to: 0
 10879  0150FC  0100               	movlb	0	; () banked
 10880  0150FE  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10881  015100  0A80               	xorlw	128
 10882  015102  0F97               	addlw	151
 10883  015104  B0D8               	btfsc	status,0,c
 10884  015106  D00A               	goto	l8439
 10885                           
 10886                           ; BSR set to: 0
 10887  015108  0E00               	movlw	0
 10888  01510A  0100               	movlb	0	; () banked
 10889  01510C  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10890  01510E  0E00               	movlw	0
 10891  015110  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10892  015112  0E00               	movlw	0
 10893  015114  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10894  015116  0E00               	movlw	0
 10895  015118  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10896                           
 10897                           ; BSR set to: 0
 10898  01511A  0012               	return	
 10899  01511C                     l8439:
 10900                           
 10901                           ; BSR set to: 0
 10902  01511C  0100               	movlb	0	; () banked
 10903  01511E  90D8               	bcf	status,0,c
 10904  015120  337F               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10905  015122  337E               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10906  015124  337D               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10907  015126  337C               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10908                           
 10909                           ; BSR set to: 0
 10910  015128  0100               	movlb	0	; () banked
 10911  01512A  3F81               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10912  01512C  D7F7               	goto	l8439
 10913                           
 10914                           ; BSR set to: 0
 10915  01512E  D01B               	goto	l1358
 10916  015130                     l8443:
 10917                           
 10918                           ; BSR set to: 0
 10919  015130  0E17               	movlw	23
 10920  015132  0100               	movlb	0	; () banked
 10921  015134  6581               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10922  015136  D012               	goto	l8451
 10923                           
 10924                           ; BSR set to: 0
 10925  015138  0E00               	movlw	0
 10926  01513A  0100               	movlb	0	; () banked
 10927  01513C  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10928  01513E  0E00               	movlw	0
 10929  015140  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10930  015142  0E00               	movlw	0
 10931  015144  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10932  015146  0E00               	movlw	0
 10933  015148  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10934                           
 10935                           ; BSR set to: 0
 10936  01514A  0012               	return	
 10937  01514C                     l8449:
 10938                           
 10939                           ; BSR set to: 0
 10940  01514C  0100               	movlb	0	; () banked
 10941  01514E  90D8               	bcf	status,0,c
 10942  015150  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10943  015152  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10944  015154  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10945  015156  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10946  015158  0100               	movlb	0	; () banked
 10947  01515A  0781               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10948  01515C                     l8451:
 10949                           
 10950                           ; BSR set to: 0
 10951  01515C  0100               	movlb	0	; () banked
 10952  01515E  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10953  015160  0100               	movlb	0	; () banked
 10954  015162  A4D8               	btfss	status,2,c
 10955  015164  D7F3               	goto	l8449
 10956  015166                     l1358:
 10957                           
 10958                           ; BSR set to: 0
 10959  015166  C07C  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10960  01516A  C07D  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10961  01516E  C07E  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10962  015172  C07F  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10963                           
 10964                           ; BSR set to: 0
 10965  015176  0012               	return		;funcret
 10966  015178                     __end_of__tdiv_to_l_:
 10967                           	opt stack 0
 10968                           tblptru	equ	0xFF8
 10969                           tblptrh	equ	0xFF7
 10970                           tblptrl	equ	0xFF6
 10971                           tablat	equ	0xFF5
 10972                           prodh	equ	0xFF4
 10973                           prodl	equ	0xFF3
 10974                           intcon	equ	0xFF2
 10975                           postinc0	equ	0xFEE
 10976                           wreg	equ	0xFE8
 10977                           indf2	equ	0xFDF
 10978                           postinc2	equ	0xFDE
 10979                           fsr2h	equ	0xFDA
 10980                           fsr2l	equ	0xFD9
 10981                           status	equ	0xFD8
 10982                           
 10983 ;; *************** function __div_to_l_ *****************
 10984 ;; Defined at:
 10985 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  f1              4   17[BANK0 ] unsigned long 
 10988 ;;  f2              4   21[BANK0 ] unsigned long 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  quot            4   25[BANK0 ] unsigned long 
 10991 ;;  exp1            1   30[BANK0 ] unsigned char 
 10992 ;;  cntr            1   29[BANK0 ] unsigned char 
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  4   17[BANK0 ] unsigned long 
 10995 ;; Registers used:
 10996 ;;		wreg, status,2, status,0
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11002 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;Total ram usage:       14 bytes
 11007 ;; Hardware stack levels used:    1
 11008 ;; Hardware stack levels required when called:    3
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_sprintf
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text18
 11017  015308                     __ptext18:
 11018                           	opt stack 0
 11019  015308                     __div_to_l_:
 11020                           	opt stack 25
 11021                           
 11022                           ; BSR set to: 0
 11023                           ;incstack = 0
 11024  015308  0100               	movlb	0	; () banked
 11025  01530A  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11026  01530C  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11027  01530E  0100               	movlb	0	; () banked
 11028  015310  6F7E               	movwf	__div_to_l_@exp1& (0+255),b
 11029  015312  0100               	movlb	0	; () banked
 11030  015314  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11031  015316  A4D8               	btfss	status,2,c
 11032  015318  D00A               	goto	l8459
 11033                           
 11034                           ; BSR set to: 0
 11035  01531A  0E00               	movlw	0
 11036  01531C  0100               	movlb	0	; () banked
 11037  01531E  6F71               	movwf	?__div_to_l_& (0+255),b
 11038  015320  0E00               	movlw	0
 11039  015322  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11040  015324  0E00               	movlw	0
 11041  015326  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11042  015328  0E00               	movlw	0
 11043  01532A  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11044                           
 11045                           ; BSR set to: 0
 11046  01532C  0012               	return	
 11047  01532E                     l8459:
 11048                           
 11049                           ; BSR set to: 0
 11050  01532E  0100               	movlb	0	; () banked
 11051  015330  3577               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11052  015332  3578               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11053  015334  0100               	movlb	0	; () banked
 11054  015336  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11055  015338  0100               	movlb	0	; () banked
 11056  01533A  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11057  01533C  A4D8               	btfss	status,2,c
 11058  01533E  D00A               	goto	l8465
 11059                           
 11060                           ; BSR set to: 0
 11061  015340  0E00               	movlw	0
 11062  015342  0100               	movlb	0	; () banked
 11063  015344  6F71               	movwf	?__div_to_l_& (0+255),b
 11064  015346  0E00               	movlw	0
 11065  015348  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11066  01534A  0E00               	movlw	0
 11067  01534C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11068  01534E  0E00               	movlw	0
 11069  015350  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11070                           
 11071                           ; BSR set to: 0
 11072  015352  0012               	return	
 11073  015354                     l8465:
 11074                           
 11075                           ; BSR set to: 0
 11076  015354  0100               	movlb	0	; () banked
 11077  015356  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11078                           
 11079                           ; BSR set to: 0
 11080  015358  0EFF               	movlw	255
 11081  01535A  0100               	movlb	0	; () banked
 11082  01535C  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 11083  01535E  0EFF               	movlw	255
 11084  015360  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11085  015362  0EFF               	movlw	255
 11086  015364  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11087  015366  0E00               	movlw	0
 11088  015368  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11089                           
 11090                           ; BSR set to: 0
 11091  01536A  0100               	movlb	0	; () banked
 11092  01536C  8F77               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11093  01536E  0EFF               	movlw	255
 11094  015370  0100               	movlb	0	; () banked
 11095  015372  1775               	andwf	__div_to_l_@f2& (0+255),f,b
 11096  015374  0EFF               	movlw	255
 11097  015376  1776               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11098  015378  0EFF               	movlw	255
 11099  01537A  1777               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11100  01537C  0E00               	movlw	0
 11101  01537E  1778               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11102                           
 11103                           ; BSR set to: 0
 11104  015380  0E00               	movlw	0
 11105  015382  0100               	movlb	0	; () banked
 11106  015384  6F79               	movwf	__div_to_l_@quot& (0+255),b
 11107  015386  0E00               	movlw	0
 11108  015388  6F7A               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11109  01538A  0E00               	movlw	0
 11110  01538C  6F7B               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11111  01538E  0E00               	movlw	0
 11112  015390  6F7C               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11113                           
 11114                           ; BSR set to: 0
 11115  015392  0E7F               	movlw	127
 11116  015394  0100               	movlb	0	; () banked
 11117  015396  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11118                           
 11119                           ; BSR set to: 0
 11120  015398  0100               	movlb	0	; () banked
 11121  01539A  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11122  01539C  0FA0               	addlw	160
 11123  01539E  0100               	movlb	0	; () banked
 11124  0153A0  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 11125                           
 11126                           ; BSR set to: 0
 11127  0153A2  0E20               	movlw	32
 11128  0153A4  0100               	movlb	0	; () banked
 11129  0153A6  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11130  0153A8                     l8479:
 11131                           
 11132                           ; BSR set to: 0
 11133  0153A8  0100               	movlb	0	; () banked
 11134  0153AA  90D8               	bcf	status,0,c
 11135  0153AC  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 11136  0153AE  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11137  0153B0  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11138  0153B2  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11139                           
 11140                           ; BSR set to: 0
 11141  0153B4  0100               	movlb	0	; () banked
 11142  0153B6  5175               	movf	__div_to_l_@f2& (0+255),w,b
 11143  0153B8  0100               	movlb	0	; () banked
 11144  0153BA  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 11145  0153BC  0100               	movlb	0	; () banked
 11146  0153BE  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11147  0153C0  0100               	movlb	0	; () banked
 11148  0153C2  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11149  0153C4  0100               	movlb	0	; () banked
 11150  0153C6  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11151  0153C8  0100               	movlb	0	; () banked
 11152  0153CA  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11153  0153CC  0100               	movlb	0	; () banked
 11154  0153CE  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11155  0153D0  0100               	movlb	0	; () banked
 11156  0153D2  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11157  0153D4  A0D8               	btfss	status,0,c
 11158  0153D6  D012               	goto	l8487
 11159                           
 11160                           ; BSR set to: 0
 11161  0153D8  0100               	movlb	0	; () banked
 11162  0153DA  5175               	movf	__div_to_l_@f2& (0+255),w,b
 11163  0153DC  0100               	movlb	0	; () banked
 11164  0153DE  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 11165  0153E0  0100               	movlb	0	; () banked
 11166  0153E2  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11167  0153E4  0100               	movlb	0	; () banked
 11168  0153E6  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11169  0153E8  0100               	movlb	0	; () banked
 11170  0153EA  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11171  0153EC  0100               	movlb	0	; () banked
 11172  0153EE  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11173  0153F0  0100               	movlb	0	; () banked
 11174  0153F2  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11175  0153F4  0100               	movlb	0	; () banked
 11176  0153F6  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11177                           
 11178                           ; BSR set to: 0
 11179  0153F8  0100               	movlb	0	; () banked
 11180  0153FA  8179               	bsf	__div_to_l_@quot& (0+255),0,b
 11181  0153FC                     l8487:
 11182                           
 11183                           ; BSR set to: 0
 11184  0153FC  0100               	movlb	0	; () banked
 11185  0153FE  90D8               	bcf	status,0,c
 11186  015400  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 11187  015402  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11188  015404  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11189  015406  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11190                           
 11191                           ; BSR set to: 0
 11192  015408  0100               	movlb	0	; () banked
 11193  01540A  2F7D               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11194  01540C  D7CD               	goto	l8479
 11195                           
 11196                           ; BSR set to: 0
 11197                           
 11198                           ; BSR set to: 0
 11199  01540E  0100               	movlb	0	; () banked
 11200  015410  AF7E               	btfss	__div_to_l_@exp1& (0+255),7,b
 11201  015412  D01A               	goto	l8503
 11202                           
 11203                           ; BSR set to: 0
 11204  015414  0100               	movlb	0	; () banked
 11205  015416  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11206  015418  0A80               	xorlw	128
 11207  01541A  0F9F               	addlw	159
 11208  01541C  B0D8               	btfsc	status,0,c
 11209  01541E  D00A               	goto	l8499
 11210                           
 11211                           ; BSR set to: 0
 11212  015420  0E00               	movlw	0
 11213  015422  0100               	movlb	0	; () banked
 11214  015424  6F71               	movwf	?__div_to_l_& (0+255),b
 11215  015426  0E00               	movlw	0
 11216  015428  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11217  01542A  0E00               	movlw	0
 11218  01542C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11219  01542E  0E00               	movlw	0
 11220  015430  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11221                           
 11222                           ; BSR set to: 0
 11223  015432  0012               	return	
 11224  015434                     l8499:
 11225                           
 11226                           ; BSR set to: 0
 11227  015434  0100               	movlb	0	; () banked
 11228  015436  90D8               	bcf	status,0,c
 11229  015438  337C               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11230  01543A  337B               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11231  01543C  337A               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11232  01543E  3379               	rrcf	__div_to_l_@quot& (0+255),f,b
 11233                           
 11234                           ; BSR set to: 0
 11235  015440  0100               	movlb	0	; () banked
 11236  015442  3F7E               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11237  015444  D7F7               	goto	l8499
 11238                           
 11239                           ; BSR set to: 0
 11240  015446  D01B               	goto	l1254
 11241  015448                     l8503:
 11242                           
 11243                           ; BSR set to: 0
 11244  015448  0E1F               	movlw	31
 11245  01544A  0100               	movlb	0	; () banked
 11246  01544C  657E               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11247  01544E  D012               	goto	l8511
 11248                           
 11249                           ; BSR set to: 0
 11250  015450  0E00               	movlw	0
 11251  015452  0100               	movlb	0	; () banked
 11252  015454  6F71               	movwf	?__div_to_l_& (0+255),b
 11253  015456  0E00               	movlw	0
 11254  015458  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11255  01545A  0E00               	movlw	0
 11256  01545C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11257  01545E  0E00               	movlw	0
 11258  015460  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11259                           
 11260                           ; BSR set to: 0
 11261  015462  0012               	return	
 11262  015464                     l8509:
 11263                           
 11264                           ; BSR set to: 0
 11265  015464  0100               	movlb	0	; () banked
 11266  015466  90D8               	bcf	status,0,c
 11267  015468  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 11268  01546A  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11269  01546C  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11270  01546E  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11271  015470  0100               	movlb	0	; () banked
 11272  015472  077E               	decf	__div_to_l_@exp1& (0+255),f,b
 11273  015474                     l8511:
 11274                           
 11275                           ; BSR set to: 0
 11276  015474  0100               	movlb	0	; () banked
 11277  015476  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11278  015478  0100               	movlb	0	; () banked
 11279  01547A  A4D8               	btfss	status,2,c
 11280  01547C  D7F3               	goto	l8509
 11281  01547E                     l1254:
 11282                           
 11283                           ; BSR set to: 0
 11284  01547E  C079  F071         	movff	__div_to_l_@quot,?__div_to_l_
 11285  015482  C07A  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11286  015486  C07B  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11287  01548A  C07C  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11288                           
 11289                           ; BSR set to: 0
 11290  01548E  0012               	return		;funcret
 11291  015490                     __end_of__div_to_l_:
 11292                           	opt stack 0
 11293                           tblptru	equ	0xFF8
 11294                           tblptrh	equ	0xFF7
 11295                           tblptrl	equ	0xFF6
 11296                           tablat	equ	0xFF5
 11297                           prodh	equ	0xFF4
 11298                           prodl	equ	0xFF3
 11299                           intcon	equ	0xFF2
 11300                           postinc0	equ	0xFEE
 11301                           wreg	equ	0xFE8
 11302                           indf2	equ	0xFDF
 11303                           postinc2	equ	0xFDE
 11304                           fsr2h	equ	0xFDA
 11305                           fsr2l	equ	0xFD9
 11306                           status	equ	0xFD8
 11307                           
 11308 ;; *************** function ___xxtofl *****************
 11309 ;; Defined at:
 11310 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  sign            1    wreg     unsigned char 
 11313 ;;  val             4   17[BANK0 ] long 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  sign            1   25[BANK0 ] unsigned char 
 11316 ;;  arg             4   27[BANK0 ] unsigned long 
 11317 ;;  exp             1   26[BANK0 ] unsigned char 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  4   17[BANK0 ] unsigned char 
 11320 ;; Registers used:
 11321 ;;		wreg, status,2, status,0
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;Total ram usage:       14 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:    3
 11334 ;; This function calls:
 11335 ;;		Nothing
 11336 ;; This function is called by:
 11337 ;;		_main
 11338 ;;		_LCD_Handler
 11339 ;;		_sprintf
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text19
 11344  0148D8                     __ptext19:
 11345                           	opt stack 0
 11346  0148D8                     ___xxtofl:
 11347                           	opt stack 27
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;incstack = 0
 11351                           ;___xxtofl@sign stored from wreg
 11352  0148D8  0100               	movlb	0	; () banked
 11353  0148DA  6F79               	movwf	___xxtofl@sign& (0+255),b
 11354  0148DC  0100               	movlb	0	; () banked
 11355  0148DE  5179               	movf	___xxtofl@sign& (0+255),w,b
 11356  0148E0  0100               	movlb	0	; () banked
 11357  0148E2  B4D8               	btfsc	status,2,c
 11358  0148E4  D01E               	goto	l1649
 11359                           
 11360                           ; BSR set to: 0
 11361  0148E6  0100               	movlb	0	; () banked
 11362  0148E8  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11363  0148EA  D01B               	goto	l1649
 11364                           
 11365                           ; BSR set to: 0
 11366  0148EC  C071  F075         	movff	___xxtofl@val,??___xxtofl
 11367  0148F0  C072  F076         	movff	___xxtofl@val+1,??___xxtofl+1
 11368  0148F4  C073  F077         	movff	___xxtofl@val+2,??___xxtofl+2
 11369  0148F8  C074  F078         	movff	___xxtofl@val+3,??___xxtofl+3
 11370  0148FC  0100               	movlb	0	; () banked
 11371  0148FE  1F75               	comf	??___xxtofl& (0+255),f,b
 11372  014900  1F76               	comf	(??___xxtofl+1)& (0+255),f,b
 11373  014902  1F77               	comf	(??___xxtofl+2)& (0+255),f,b
 11374  014904  1F78               	comf	(??___xxtofl+3)& (0+255),f,b
 11375  014906  2B75               	incf	??___xxtofl& (0+255),f,b
 11376  014908  0E00               	movlw	0
 11377  01490A  2376               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11378  01490C  2377               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11379  01490E  2378               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11380  014910  C075  F07B         	movff	??___xxtofl,___xxtofl@arg
 11381  014914  C076  F07C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11382  014918  C077  F07D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11383  01491C  C078  F07E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11384  014920  D008               	goto	l8637
 11385  014922                     l1649:
 11386                           
 11387                           ; BSR set to: 0
 11388  014922  C071  F07B         	movff	___xxtofl@val,___xxtofl@arg
 11389  014926  C072  F07C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11390  01492A  C073  F07D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11391  01492E  C074  F07E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11392  014932                     l8637:
 11393                           
 11394                           ; BSR set to: 0
 11395  014932  0100               	movlb	0	; () banked
 11396  014934  5171               	movf	___xxtofl@val& (0+255),w,b
 11397  014936  0100               	movlb	0	; () banked
 11398  014938  1172               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11399  01493A  0100               	movlb	0	; () banked
 11400  01493C  1173               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11401  01493E  0100               	movlb	0	; () banked
 11402  014940  1174               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11403  014942  A4D8               	btfss	status,2,c
 11404  014944  D00A               	goto	l8643
 11405                           
 11406                           ; BSR set to: 0
 11407  014946  0E00               	movlw	0
 11408  014948  0100               	movlb	0	; () banked
 11409  01494A  6F71               	movwf	?___xxtofl& (0+255),b
 11410  01494C  0E00               	movlw	0
 11411  01494E  6F72               	movwf	(?___xxtofl+1)& (0+255),b
 11412  014950  0E00               	movlw	0
 11413  014952  6F73               	movwf	(?___xxtofl+2)& (0+255),b
 11414  014954  0E00               	movlw	0
 11415  014956  6F74               	movwf	(?___xxtofl+3)& (0+255),b
 11416                           
 11417                           ; BSR set to: 0
 11418  014958  0012               	return	
 11419  01495A                     l8643:
 11420                           
 11421                           ; BSR set to: 0
 11422  01495A  0E96               	movlw	150
 11423  01495C  0100               	movlb	0	; () banked
 11424  01495E  6F7A               	movwf	___xxtofl@exp& (0+255),b
 11425  014960  D008               	goto	l8647
 11426  014962                     l8645:
 11427                           
 11428                           ; BSR set to: 0
 11429  014962  0100               	movlb	0	; () banked
 11430  014964  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11431  014966  0100               	movlb	0	; () banked
 11432  014968  90D8               	bcf	status,0,c
 11433  01496A  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11434  01496C  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11435  01496E  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11436  014970  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11437  014972                     l8647:
 11438                           
 11439                           ; BSR set to: 0
 11440  014972  0E00               	movlw	0
 11441  014974  0100               	movlb	0	; () banked
 11442  014976  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11443  014978  0100               	movlb	0	; () banked
 11444  01497A  6F75               	movwf	??___xxtofl& (0+255),b
 11445  01497C  0E00               	movlw	0
 11446  01497E  0100               	movlb	0	; () banked
 11447  014980  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11448  014982  0100               	movlb	0	; () banked
 11449  014984  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11450  014986  0E00               	movlw	0
 11451  014988  0100               	movlb	0	; () banked
 11452  01498A  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11453  01498C  0100               	movlb	0	; () banked
 11454  01498E  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11455  014990  0EFE               	movlw	254
 11456  014992  0100               	movlb	0	; () banked
 11457  014994  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11458  014996  0100               	movlb	0	; () banked
 11459  014998  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11460  01499A  0100               	movlb	0	; () banked
 11461  01499C  5175               	movf	??___xxtofl& (0+255),w,b
 11462  01499E  0100               	movlb	0	; () banked
 11463  0149A0  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11464  0149A2  0100               	movlb	0	; () banked
 11465  0149A4  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11466  0149A6  0100               	movlb	0	; () banked
 11467  0149A8  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11468  0149AA  B4D8               	btfsc	status,2,c
 11469  0149AC  D010               	goto	l1656
 11470  0149AE  D7D9               	goto	l8645
 11471  0149B0                     l8649:
 11472                           
 11473                           ; BSR set to: 0
 11474  0149B0  0100               	movlb	0	; () banked
 11475  0149B2  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11476                           
 11477                           ; BSR set to: 0
 11478  0149B4  0E01               	movlw	1
 11479  0149B6  0100               	movlb	0	; () banked
 11480  0149B8  277B               	addwf	___xxtofl@arg& (0+255),f,b
 11481  0149BA  0E00               	movlw	0
 11482  0149BC  237C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11483  0149BE  237D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11484  0149C0  237E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11485                           
 11486                           ; BSR set to: 0
 11487  0149C2  0100               	movlb	0	; () banked
 11488  0149C4  90D8               	bcf	status,0,c
 11489  0149C6  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11490  0149C8  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11491  0149CA  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11492  0149CC  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11493  0149CE                     l1656:
 11494                           
 11495                           ; BSR set to: 0
 11496  0149CE  0E00               	movlw	0
 11497  0149D0  0100               	movlb	0	; () banked
 11498  0149D2  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11499  0149D4  0100               	movlb	0	; () banked
 11500  0149D6  6F75               	movwf	??___xxtofl& (0+255),b
 11501  0149D8  0E00               	movlw	0
 11502  0149DA  0100               	movlb	0	; () banked
 11503  0149DC  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11504  0149DE  0100               	movlb	0	; () banked
 11505  0149E0  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11506  0149E2  0E00               	movlw	0
 11507  0149E4  0100               	movlb	0	; () banked
 11508  0149E6  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11509  0149E8  0100               	movlb	0	; () banked
 11510  0149EA  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11511  0149EC  0EFF               	movlw	255
 11512  0149EE  0100               	movlb	0	; () banked
 11513  0149F0  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11514  0149F2  0100               	movlb	0	; () banked
 11515  0149F4  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11516  0149F6  0100               	movlb	0	; () banked
 11517  0149F8  5175               	movf	??___xxtofl& (0+255),w,b
 11518  0149FA  0100               	movlb	0	; () banked
 11519  0149FC  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11520  0149FE  0100               	movlb	0	; () banked
 11521  014A00  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11522  014A02  0100               	movlb	0	; () banked
 11523  014A04  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11524  014A06  B4D8               	btfsc	status,2,c
 11525  014A08  D009               	goto	l8657
 11526  014A0A  D7D2               	goto	l8649
 11527  014A0C                     l8655:
 11528                           
 11529                           ; BSR set to: 0
 11530  014A0C  0100               	movlb	0	; () banked
 11531  014A0E  077A               	decf	___xxtofl@exp& (0+255),f,b
 11532  014A10  0100               	movlb	0	; () banked
 11533  014A12  90D8               	bcf	status,0,c
 11534  014A14  377B               	rlcf	___xxtofl@arg& (0+255),f,b
 11535  014A16  377C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11536  014A18  377D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11537  014A1A  377E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11538  014A1C                     l8657:
 11539                           
 11540                           ; BSR set to: 0
 11541  014A1C  0100               	movlb	0	; () banked
 11542  014A1E  BF7D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11543  014A20  D004               	goto	l1663
 11544                           
 11545                           ; BSR set to: 0
 11546  014A22  0E02               	movlw	2
 11547  014A24  0100               	movlb	0	; () banked
 11548  014A26  617A               	cpfslt	___xxtofl@exp& (0+255),b
 11549  014A28  D7F1               	goto	l8655
 11550  014A2A                     l1663:
 11551                           
 11552                           ; BSR set to: 0
 11553  014A2A  0100               	movlb	0	; () banked
 11554  014A2C  B17A               	btfsc	___xxtofl@exp& (0+255),0,b
 11555  014A2E  D009               	goto	l1664
 11556                           
 11557                           ; BSR set to: 0
 11558  014A30  0EFF               	movlw	255
 11559  014A32  0100               	movlb	0	; () banked
 11560  014A34  177B               	andwf	___xxtofl@arg& (0+255),f,b
 11561  014A36  0EFF               	movlw	255
 11562  014A38  177C               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 11563  014A3A  0E7F               	movlw	127
 11564  014A3C  177D               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 11565  014A3E  0EFF               	movlw	255
 11566  014A40  177E               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 11567  014A42                     l1664:
 11568                           
 11569                           ; BSR set to: 0
 11570  014A42  0100               	movlb	0	; () banked
 11571  014A44  90D8               	bcf	status,0,c
 11572  014A46  337A               	rrcf	___xxtofl@exp& (0+255),f,b
 11573  014A48  C07A  F075         	movff	___xxtofl@exp,??___xxtofl
 11574  014A4C  0100               	movlb	0	; () banked
 11575  014A4E  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11576  014A50  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11577  014A52  6B78               	clrf	(??___xxtofl+3)& (0+255),b
 11578  014A54  C075  F078         	movff	??___xxtofl,??___xxtofl+3
 11579  014A58  0100               	movlb	0	; () banked
 11580  014A5A  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11581  014A5C  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11582  014A5E  6B75               	clrf	??___xxtofl& (0+255),b
 11583  014A60  0100               	movlb	0	; () banked
 11584  014A62  5175               	movf	??___xxtofl& (0+255),w,b
 11585  014A64  0100               	movlb	0	; () banked
 11586  014A66  137B               	iorwf	___xxtofl@arg& (0+255),f,b
 11587  014A68  0100               	movlb	0	; () banked
 11588  014A6A  5176               	movf	(??___xxtofl+1)& (0+255),w,b
 11589  014A6C  0100               	movlb	0	; () banked
 11590  014A6E  137C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11591  014A70  0100               	movlb	0	; () banked
 11592  014A72  5177               	movf	(??___xxtofl+2)& (0+255),w,b
 11593  014A74  0100               	movlb	0	; () banked
 11594  014A76  137D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11595  014A78  0100               	movlb	0	; () banked
 11596  014A7A  5178               	movf	(??___xxtofl+3)& (0+255),w,b
 11597  014A7C  0100               	movlb	0	; () banked
 11598  014A7E  137E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11599                           
 11600                           ; BSR set to: 0
 11601  014A80  0100               	movlb	0	; () banked
 11602  014A82  5179               	movf	___xxtofl@sign& (0+255),w,b
 11603  014A84  0100               	movlb	0	; () banked
 11604  014A86  B4D8               	btfsc	status,2,c
 11605  014A88  D005               	goto	l8669
 11606                           
 11607                           ; BSR set to: 0
 11608  014A8A  0100               	movlb	0	; () banked
 11609  014A8C  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11610  014A8E  D002               	goto	l8669
 11611                           
 11612                           ; BSR set to: 0
 11613  014A90  0100               	movlb	0	; () banked
 11614  014A92  8F7E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11615  014A94                     l8669:
 11616                           
 11617                           ; BSR set to: 0
 11618  014A94  C07B  F071         	movff	___xxtofl@arg,?___xxtofl
 11619  014A98  C07C  F072         	movff	___xxtofl@arg+1,?___xxtofl+1
 11620  014A9C  C07D  F073         	movff	___xxtofl@arg+2,?___xxtofl+2
 11621  014AA0  C07E  F074         	movff	___xxtofl@arg+3,?___xxtofl+3
 11622  014AA4  0012               	return	
 11623  014AA6                     __end_of___xxtofl:
 11624                           	opt stack 0
 11625                           tblptru	equ	0xFF8
 11626                           tblptrh	equ	0xFF7
 11627                           tblptrl	equ	0xFF6
 11628                           tablat	equ	0xFF5
 11629                           prodh	equ	0xFF4
 11630                           prodl	equ	0xFF3
 11631                           intcon	equ	0xFF2
 11632                           postinc0	equ	0xFEE
 11633                           wreg	equ	0xFE8
 11634                           indf2	equ	0xFDF
 11635                           postinc2	equ	0xFDE
 11636                           fsr2h	equ	0xFDA
 11637                           fsr2l	equ	0xFD9
 11638                           status	equ	0xFD8
 11639                           
 11640 ;; *************** function ___llmod *****************
 11641 ;; Defined at:
 11642 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;  dividend        4   17[BANK0 ] unsigned long 
 11645 ;;  divisor         4   21[BANK0 ] unsigned long 
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;  counter         1   25[BANK0 ] unsigned char 
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  4   17[BANK0 ] unsigned long 
 11650 ;; Registers used:
 11651 ;;		wreg, status,2, status,0
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11657 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;Total ram usage:        9 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    3
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_sprintf
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text20
 11672  015CDC                     __ptext20:
 11673                           	opt stack 0
 11674  015CDC                     ___llmod:
 11675                           	opt stack 25
 11676                           
 11677                           ; BSR set to: 0
 11678                           ;incstack = 0
 11679  015CDC  0100               	movlb	0	; () banked
 11680  015CDE  5175               	movf	___llmod@divisor& (0+255),w,b
 11681  015CE0  0100               	movlb	0	; () banked
 11682  015CE2  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11683  015CE4  0100               	movlb	0	; () banked
 11684  015CE6  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11685  015CE8  0100               	movlb	0	; () banked
 11686  015CEA  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11687  015CEC  B4D8               	btfsc	status,2,c
 11688  015CEE  D03A               	goto	l1457
 11689                           
 11690                           ; BSR set to: 0
 11691  015CF0  0E01               	movlw	1
 11692  015CF2  0100               	movlb	0	; () banked
 11693  015CF4  6F79               	movwf	___llmod@counter& (0+255),b
 11694  015CF6  D008               	goto	l8621
 11695  015CF8                     l8619:
 11696                           
 11697                           ; BSR set to: 0
 11698  015CF8  0100               	movlb	0	; () banked
 11699  015CFA  90D8               	bcf	status,0,c
 11700  015CFC  3775               	rlcf	___llmod@divisor& (0+255),f,b
 11701  015CFE  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11702  015D00  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11703  015D02  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11704  015D04  0100               	movlb	0	; () banked
 11705  015D06  2B79               	incf	___llmod@counter& (0+255),f,b
 11706  015D08                     l8621:
 11707                           
 11708                           ; BSR set to: 0
 11709  015D08  0100               	movlb	0	; () banked
 11710  015D0A  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11711  015D0C  D7F5               	goto	l8619
 11712  015D0E                     l8623:
 11713                           
 11714                           ; BSR set to: 0
 11715  015D0E  0100               	movlb	0	; () banked
 11716  015D10  5175               	movf	___llmod@divisor& (0+255),w,b
 11717  015D12  0100               	movlb	0	; () banked
 11718  015D14  5D71               	subwf	___llmod@dividend& (0+255),w,b
 11719  015D16  0100               	movlb	0	; () banked
 11720  015D18  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 11721  015D1A  0100               	movlb	0	; () banked
 11722  015D1C  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11723  015D1E  0100               	movlb	0	; () banked
 11724  015D20  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 11725  015D22  0100               	movlb	0	; () banked
 11726  015D24  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11727  015D26  0100               	movlb	0	; () banked
 11728  015D28  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 11729  015D2A  0100               	movlb	0	; () banked
 11730  015D2C  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11731  015D2E  A0D8               	btfss	status,0,c
 11732  015D30  D010               	goto	l8627
 11733                           
 11734                           ; BSR set to: 0
 11735  015D32  0100               	movlb	0	; () banked
 11736  015D34  5175               	movf	___llmod@divisor& (0+255),w,b
 11737  015D36  0100               	movlb	0	; () banked
 11738  015D38  5F71               	subwf	___llmod@dividend& (0+255),f,b
 11739  015D3A  0100               	movlb	0	; () banked
 11740  015D3C  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 11741  015D3E  0100               	movlb	0	; () banked
 11742  015D40  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11743  015D42  0100               	movlb	0	; () banked
 11744  015D44  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 11745  015D46  0100               	movlb	0	; () banked
 11746  015D48  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11747  015D4A  0100               	movlb	0	; () banked
 11748  015D4C  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 11749  015D4E  0100               	movlb	0	; () banked
 11750  015D50  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11751  015D52                     l8627:
 11752                           
 11753                           ; BSR set to: 0
 11754  015D52  0100               	movlb	0	; () banked
 11755  015D54  90D8               	bcf	status,0,c
 11756  015D56  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11757  015D58  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11758  015D5A  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11759  015D5C  3375               	rrcf	___llmod@divisor& (0+255),f,b
 11760                           
 11761                           ; BSR set to: 0
 11762  015D5E  0100               	movlb	0	; () banked
 11763  015D60  2F79               	decfsz	___llmod@counter& (0+255),f,b
 11764  015D62  D7D5               	goto	l8623
 11765  015D64                     l1457:
 11766                           
 11767                           ; BSR set to: 0
 11768  015D64  C071  F071         	movff	___llmod@dividend,?___llmod
 11769  015D68  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 11770  015D6C  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 11771  015D70  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 11772                           
 11773                           ; BSR set to: 0
 11774  015D74  0012               	return		;funcret
 11775  015D76                     __end_of___llmod:
 11776                           	opt stack 0
 11777                           tblptru	equ	0xFF8
 11778                           tblptrh	equ	0xFF7
 11779                           tblptrl	equ	0xFF6
 11780                           tablat	equ	0xFF5
 11781                           prodh	equ	0xFF4
 11782                           prodl	equ	0xFF3
 11783                           intcon	equ	0xFF2
 11784                           postinc0	equ	0xFEE
 11785                           wreg	equ	0xFE8
 11786                           indf2	equ	0xFDF
 11787                           postinc2	equ	0xFDE
 11788                           fsr2h	equ	0xFDA
 11789                           fsr2l	equ	0xFD9
 11790                           status	equ	0xFD8
 11791                           
 11792 ;; *************** function ___lldiv *****************
 11793 ;; Defined at:
 11794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11795 ;; Parameters:    Size  Location     Type
 11796 ;;  dividend        4   17[BANK0 ] unsigned long 
 11797 ;;  divisor         4   21[BANK0 ] unsigned long 
 11798 ;; Auto vars:     Size  Location     Type
 11799 ;;  quotient        4   25[BANK0 ] unsigned long 
 11800 ;;  counter         1   29[BANK0 ] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  4   17[BANK0 ] unsigned long 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11810 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11811 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;Total ram usage:       13 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    3
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_sprintf
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text21
 11825  015972                     __ptext21:
 11826                           	opt stack 0
 11827  015972                     ___lldiv:
 11828                           	opt stack 25
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;incstack = 0
 11832  015972  0E00               	movlw	0
 11833  015974  0100               	movlb	0	; () banked
 11834  015976  6F79               	movwf	___lldiv@quotient& (0+255),b
 11835  015978  0E00               	movlw	0
 11836  01597A  6F7A               	movwf	(___lldiv@quotient+1)& (0+255),b
 11837  01597C  0E00               	movlw	0
 11838  01597E  6F7B               	movwf	(___lldiv@quotient+2)& (0+255),b
 11839  015980  0E00               	movlw	0
 11840  015982  6F7C               	movwf	(___lldiv@quotient+3)& (0+255),b
 11841                           
 11842                           ; BSR set to: 0
 11843  015984  0100               	movlb	0	; () banked
 11844  015986  5175               	movf	___lldiv@divisor& (0+255),w,b
 11845  015988  0100               	movlb	0	; () banked
 11846  01598A  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11847  01598C  0100               	movlb	0	; () banked
 11848  01598E  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11849  015990  0100               	movlb	0	; () banked
 11850  015992  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11851  015994  B4D8               	btfsc	status,2,c
 11852  015996  D042               	goto	l1447
 11853                           
 11854                           ; BSR set to: 0
 11855  015998  0E01               	movlw	1
 11856  01599A  0100               	movlb	0	; () banked
 11857  01599C  6F7D               	movwf	___lldiv@counter& (0+255),b
 11858  01599E  D008               	goto	l8601
 11859  0159A0                     l8599:
 11860                           
 11861                           ; BSR set to: 0
 11862  0159A0  0100               	movlb	0	; () banked
 11863  0159A2  90D8               	bcf	status,0,c
 11864  0159A4  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11865  0159A6  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11866  0159A8  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11867  0159AA  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11868  0159AC  0100               	movlb	0	; () banked
 11869  0159AE  2B7D               	incf	___lldiv@counter& (0+255),f,b
 11870  0159B0                     l8601:
 11871                           
 11872                           ; BSR set to: 0
 11873  0159B0  0100               	movlb	0	; () banked
 11874  0159B2  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11875  0159B4  D7F5               	goto	l8599
 11876  0159B6                     l8603:
 11877                           
 11878                           ; BSR set to: 0
 11879  0159B6  0100               	movlb	0	; () banked
 11880  0159B8  90D8               	bcf	status,0,c
 11881  0159BA  3779               	rlcf	___lldiv@quotient& (0+255),f,b
 11882  0159BC  377A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11883  0159BE  377B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11884  0159C0  377C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11885                           
 11886                           ; BSR set to: 0
 11887  0159C2  0100               	movlb	0	; () banked
 11888  0159C4  5175               	movf	___lldiv@divisor& (0+255),w,b
 11889  0159C6  0100               	movlb	0	; () banked
 11890  0159C8  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11891  0159CA  0100               	movlb	0	; () banked
 11892  0159CC  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11893  0159CE  0100               	movlb	0	; () banked
 11894  0159D0  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11895  0159D2  0100               	movlb	0	; () banked
 11896  0159D4  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11897  0159D6  0100               	movlb	0	; () banked
 11898  0159D8  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11899  0159DA  0100               	movlb	0	; () banked
 11900  0159DC  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11901  0159DE  0100               	movlb	0	; () banked
 11902  0159E0  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11903  0159E2  A0D8               	btfss	status,0,c
 11904  0159E4  D012               	goto	l8611
 11905                           
 11906                           ; BSR set to: 0
 11907  0159E6  0100               	movlb	0	; () banked
 11908  0159E8  5175               	movf	___lldiv@divisor& (0+255),w,b
 11909  0159EA  0100               	movlb	0	; () banked
 11910  0159EC  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11911  0159EE  0100               	movlb	0	; () banked
 11912  0159F0  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11913  0159F2  0100               	movlb	0	; () banked
 11914  0159F4  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11915  0159F6  0100               	movlb	0	; () banked
 11916  0159F8  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11917  0159FA  0100               	movlb	0	; () banked
 11918  0159FC  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11919  0159FE  0100               	movlb	0	; () banked
 11920  015A00  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11921  015A02  0100               	movlb	0	; () banked
 11922  015A04  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11923                           
 11924                           ; BSR set to: 0
 11925  015A06  0100               	movlb	0	; () banked
 11926  015A08  8179               	bsf	___lldiv@quotient& (0+255),0,b
 11927  015A0A                     l8611:
 11928                           
 11929                           ; BSR set to: 0
 11930  015A0A  0100               	movlb	0	; () banked
 11931  015A0C  90D8               	bcf	status,0,c
 11932  015A0E  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11933  015A10  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11934  015A12  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11935  015A14  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11936                           
 11937                           ; BSR set to: 0
 11938  015A16  0100               	movlb	0	; () banked
 11939  015A18  2F7D               	decfsz	___lldiv@counter& (0+255),f,b
 11940  015A1A  D7CD               	goto	l8603
 11941  015A1C                     l1447:
 11942                           
 11943                           ; BSR set to: 0
 11944  015A1C  C079  F071         	movff	___lldiv@quotient,?___lldiv
 11945  015A20  C07A  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11946  015A24  C07B  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11947  015A28  C07C  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11948                           
 11949                           ; BSR set to: 0
 11950  015A2C  0012               	return		;funcret
 11951  015A2E                     __end_of___lldiv:
 11952                           	opt stack 0
 11953                           tblptru	equ	0xFF8
 11954                           tblptrh	equ	0xFF7
 11955                           tblptrl	equ	0xFF6
 11956                           tablat	equ	0xFF5
 11957                           prodh	equ	0xFF4
 11958                           prodl	equ	0xFF3
 11959                           intcon	equ	0xFF2
 11960                           postinc0	equ	0xFEE
 11961                           wreg	equ	0xFE8
 11962                           indf2	equ	0xFDF
 11963                           postinc2	equ	0xFDE
 11964                           fsr2h	equ	0xFDA
 11965                           fsr2l	equ	0xFD9
 11966                           status	equ	0xFD8
 11967                           
 11968 ;; *************** function ___fltol *****************
 11969 ;; Defined at:
 11970 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11971 ;; Parameters:    Size  Location     Type
 11972 ;;  f1              4   89[BANK0 ] unsigned long 
 11973 ;; Auto vars:     Size  Location     Type
 11974 ;;  exp1            1   98[BANK0 ] unsigned char 
 11975 ;;  sign1           1   97[BANK0 ] unsigned char 
 11976 ;; Return value:  Size  Location     Type
 11977 ;;                  4   89[BANK0 ] long 
 11978 ;; Registers used:
 11979 ;;		wreg, status,2, status,0
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;Total ram usage:       10 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; Hardware stack levels required when called:    3
 11992 ;; This function calls:
 11993 ;;		Nothing
 11994 ;; This function is called by:
 11995 ;;		_main
 11996 ;;		_sprintf
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000                           	psect	text22
 12001  0155FE                     __ptext22:
 12002                           	opt stack 0
 12003  0155FE                     ___fltol:
 12004                           	opt stack 27
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;incstack = 0
 12008  0155FE  0100               	movlb	0	; () banked
 12009  015600  35BB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12010  015602  35BC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12011  015604  0100               	movlb	0	; () banked
 12012  015606  6FC2               	movwf	___fltol@exp1& (0+255),b
 12013  015608  0100               	movlb	0	; () banked
 12014  01560A  51C2               	movf	___fltol@exp1& (0+255),w,b
 12015  01560C  A4D8               	btfss	status,2,c
 12016  01560E  D00A               	goto	l8555
 12017                           
 12018                           ; BSR set to: 0
 12019  015610  0E00               	movlw	0
 12020  015612  0100               	movlb	0	; () banked
 12021  015614  6FB9               	movwf	?___fltol& (0+255),b
 12022  015616  0E00               	movlw	0
 12023  015618  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12024  01561A  0E00               	movlw	0
 12025  01561C  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12026  01561E  0E00               	movlw	0
 12027  015620  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12028                           
 12029                           ; BSR set to: 0
 12030  015622  0012               	return	
 12031  015624                     l8555:
 12032                           
 12033                           ; BSR set to: 0
 12034  015624  C0B9  F0BD         	movff	___fltol@f1,??___fltol
 12035  015628  C0BA  F0BE         	movff	___fltol@f1+1,??___fltol+1
 12036  01562C  C0BB  F0BF         	movff	___fltol@f1+2,??___fltol+2
 12037  015630  C0BC  F0C0         	movff	___fltol@f1+3,??___fltol+3
 12038  015634  0E20               	movlw	32
 12039  015636  D006               	goto	u11390
 12040  015638                     u11395:
 12041  015638  0100               	movlb	0	; () banked
 12042  01563A  90D8               	bcf	status,0,c
 12043  01563C  33C0               	rrcf	(??___fltol+3)& (0+255),f,b
 12044  01563E  33BF               	rrcf	(??___fltol+2)& (0+255),f,b
 12045  015640  33BE               	rrcf	(??___fltol+1)& (0+255),f,b
 12046  015642  33BD               	rrcf	??___fltol& (0+255),f,b
 12047  015644                     u11390:
 12048  015644  2EE8               	decfsz	wreg,f,c
 12049  015646  D7F8               	goto	u11395
 12050  015648  0100               	movlb	0	; () banked
 12051  01564A  51BD               	movf	??___fltol& (0+255),w,b
 12052  01564C  0100               	movlb	0	; () banked
 12053  01564E  6FC1               	movwf	___fltol@sign1& (0+255),b
 12054                           
 12055                           ; BSR set to: 0
 12056  015650  0100               	movlb	0	; () banked
 12057  015652  8FBB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12058                           
 12059                           ; BSR set to: 0
 12060  015654  0EFF               	movlw	255
 12061  015656  0100               	movlb	0	; () banked
 12062  015658  17B9               	andwf	___fltol@f1& (0+255),f,b
 12063  01565A  0EFF               	movlw	255
 12064  01565C  17BA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12065  01565E  0EFF               	movlw	255
 12066  015660  17BB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12067  015662  0E00               	movlw	0
 12068  015664  17BC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12069                           
 12070                           ; BSR set to: 0
 12071  015666  0E96               	movlw	150
 12072  015668  0100               	movlb	0	; () banked
 12073  01566A  5FC2               	subwf	___fltol@exp1& (0+255),f,b
 12074                           
 12075                           ; BSR set to: 0
 12076  01566C  0100               	movlb	0	; () banked
 12077  01566E  AFC2               	btfss	___fltol@exp1& (0+255),7,b
 12078  015670  D01A               	goto	l8575
 12079                           
 12080                           ; BSR set to: 0
 12081  015672  0100               	movlb	0	; () banked
 12082  015674  51C2               	movf	___fltol@exp1& (0+255),w,b
 12083  015676  0A80               	xorlw	128
 12084  015678  0F97               	addlw	151
 12085  01567A  B0D8               	btfsc	status,0,c
 12086  01567C  D00A               	goto	l8571
 12087                           
 12088                           ; BSR set to: 0
 12089  01567E  0E00               	movlw	0
 12090  015680  0100               	movlb	0	; () banked
 12091  015682  6FB9               	movwf	?___fltol& (0+255),b
 12092  015684  0E00               	movlw	0
 12093  015686  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12094  015688  0E00               	movlw	0
 12095  01568A  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12096  01568C  0E00               	movlw	0
 12097  01568E  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12098                           
 12099                           ; BSR set to: 0
 12100  015690  0012               	return	
 12101  015692                     l8571:
 12102                           
 12103                           ; BSR set to: 0
 12104  015692  0100               	movlb	0	; () banked
 12105  015694  90D8               	bcf	status,0,c
 12106  015696  33BC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12107  015698  33BB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12108  01569A  33BA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12109  01569C  33B9               	rrcf	___fltol@f1& (0+255),f,b
 12110                           
 12111                           ; BSR set to: 0
 12112  01569E  0100               	movlb	0	; () banked
 12113  0156A0  3FC2               	incfsz	___fltol@exp1& (0+255),f,b
 12114  0156A2  D7F7               	goto	l8571
 12115                           
 12116                           ; BSR set to: 0
 12117  0156A4  D01B               	goto	l8585
 12118  0156A6                     l8575:
 12119                           
 12120                           ; BSR set to: 0
 12121  0156A6  0E1F               	movlw	31
 12122  0156A8  0100               	movlb	0	; () banked
 12123  0156AA  65C2               	cpfsgt	___fltol@exp1& (0+255),b
 12124  0156AC  D012               	goto	l8583
 12125                           
 12126                           ; BSR set to: 0
 12127  0156AE  0E00               	movlw	0
 12128  0156B0  0100               	movlb	0	; () banked
 12129  0156B2  6FB9               	movwf	?___fltol& (0+255),b
 12130  0156B4  0E00               	movlw	0
 12131  0156B6  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12132  0156B8  0E00               	movlw	0
 12133  0156BA  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12134  0156BC  0E00               	movlw	0
 12135  0156BE  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12136                           
 12137                           ; BSR set to: 0
 12138  0156C0  0012               	return	
 12139  0156C2                     l8581:
 12140                           
 12141                           ; BSR set to: 0
 12142  0156C2  0100               	movlb	0	; () banked
 12143  0156C4  90D8               	bcf	status,0,c
 12144  0156C6  37B9               	rlcf	___fltol@f1& (0+255),f,b
 12145  0156C8  37BA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12146  0156CA  37BB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12147  0156CC  37BC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12148  0156CE  0100               	movlb	0	; () banked
 12149  0156D0  07C2               	decf	___fltol@exp1& (0+255),f,b
 12150  0156D2                     l8583:
 12151                           
 12152                           ; BSR set to: 0
 12153  0156D2  0100               	movlb	0	; () banked
 12154  0156D4  51C2               	movf	___fltol@exp1& (0+255),w,b
 12155  0156D6  0100               	movlb	0	; () banked
 12156  0156D8  A4D8               	btfss	status,2,c
 12157  0156DA  D7F3               	goto	l8581
 12158  0156DC                     l8585:
 12159                           
 12160                           ; BSR set to: 0
 12161  0156DC  0100               	movlb	0	; () banked
 12162  0156DE  51C1               	movf	___fltol@sign1& (0+255),w,b
 12163  0156E0  0100               	movlb	0	; () banked
 12164  0156E2  B4D8               	btfsc	status,2,c
 12165  0156E4  D009               	goto	l8589
 12166                           
 12167                           ; BSR set to: 0
 12168  0156E6  0100               	movlb	0	; () banked
 12169  0156E8  1FBC               	comf	(___fltol@f1+3)& (0+255),f,b
 12170  0156EA  1FBB               	comf	(___fltol@f1+2)& (0+255),f,b
 12171  0156EC  1FBA               	comf	(___fltol@f1+1)& (0+255),f,b
 12172  0156EE  6DB9               	negf	___fltol@f1& (0+255),b
 12173  0156F0  0E00               	movlw	0
 12174  0156F2  23BA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12175  0156F4  23BB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12176  0156F6  23BC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12177  0156F8                     l8589:
 12178                           
 12179                           ; BSR set to: 0
 12180  0156F8  C0B9  F0B9         	movff	___fltol@f1,?___fltol
 12181  0156FC  C0BA  F0BA         	movff	___fltol@f1+1,?___fltol+1
 12182  015700  C0BB  F0BB         	movff	___fltol@f1+2,?___fltol+2
 12183  015704  C0BC  F0BC         	movff	___fltol@f1+3,?___fltol+3
 12184  015708  0012               	return	
 12185  01570A                     __end_of___fltol:
 12186                           	opt stack 0
 12187                           tblptru	equ	0xFF8
 12188                           tblptrh	equ	0xFF7
 12189                           tblptrl	equ	0xFF6
 12190                           tablat	equ	0xFF5
 12191                           prodh	equ	0xFF4
 12192                           prodl	equ	0xFF3
 12193                           intcon	equ	0xFF2
 12194                           postinc0	equ	0xFEE
 12195                           wreg	equ	0xFE8
 12196                           indf2	equ	0xFDF
 12197                           postinc2	equ	0xFDE
 12198                           fsr2h	equ	0xFDA
 12199                           fsr2l	equ	0xFD9
 12200                           status	equ	0xFD8
 12201                           
 12202 ;; *************** function ___flsub *****************
 12203 ;; Defined at:
 12204 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  b               4   89[BANK0 ] long 
 12207 ;;  a               4   93[BANK0 ] long 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;		None
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  4   89[BANK0 ] long 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12219 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;Total ram usage:        8 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    4
 12226 ;; This function calls:
 12227 ;;		___fladd
 12228 ;; This function is called by:
 12229 ;;		_sprintf
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           	psect	text23
 12234  016116                     __ptext23:
 12235                           	opt stack 0
 12236  016116                     ___flsub:
 12237                           	opt stack 24
 12238                           
 12239                           ; BSR set to: 0
 12240                           ;incstack = 0
 12241  016116  0E00               	movlw	0
 12242  016118  0100               	movlb	0	; () banked
 12243  01611A  1BBD               	xorwf	___flsub@a& (0+255),f,b
 12244  01611C  0E00               	movlw	0
 12245  01611E  1BBE               	xorwf	(___flsub@a+1)& (0+255),f,b
 12246  016120  0E00               	movlw	0
 12247  016122  1BBF               	xorwf	(___flsub@a+2)& (0+255),f,b
 12248  016124  0E80               	movlw	128
 12249  016126  1BC0               	xorwf	(___flsub@a+3)& (0+255),f,b
 12250                           
 12251                           ; BSR set to: 0
 12252  016128  C0B9  F0A5         	movff	___flsub@b,___fladd@b
 12253  01612C  C0BA  F0A6         	movff	___flsub@b+1,___fladd@b+1
 12254  016130  C0BB  F0A7         	movff	___flsub@b+2,___fladd@b+2
 12255  016134  C0BC  F0A8         	movff	___flsub@b+3,___fladd@b+3
 12256  016138  C0BD  F0A9         	movff	___flsub@a,___fladd@a
 12257  01613C  C0BE  F0AA         	movff	___flsub@a+1,___fladd@a+1
 12258  016140  C0BF  F0AB         	movff	___flsub@a+2,___fladd@a+2
 12259  016144  C0C0  F0AC         	movff	___flsub@a+3,___fladd@a+3
 12260  016148  EC9D  F099         	call	___fladd	;wreg free
 12261  01614C  C0A5  F0B9         	movff	?___fladd,?___flsub
 12262  016150  C0A6  F0BA         	movff	?___fladd+1,?___flsub+1
 12263  016154  C0A7  F0BB         	movff	?___fladd+2,?___flsub+2
 12264  016158  C0A8  F0BC         	movff	?___fladd+3,?___flsub+3
 12265  01615C  0012               	return	
 12266  01615E                     __end_of___flsub:
 12267                           	opt stack 0
 12268                           tblptru	equ	0xFF8
 12269                           tblptrh	equ	0xFF7
 12270                           tblptrl	equ	0xFF6
 12271                           tablat	equ	0xFF5
 12272                           prodh	equ	0xFF4
 12273                           prodl	equ	0xFF3
 12274                           intcon	equ	0xFF2
 12275                           postinc0	equ	0xFEE
 12276                           wreg	equ	0xFE8
 12277                           indf2	equ	0xFDF
 12278                           postinc2	equ	0xFDE
 12279                           fsr2h	equ	0xFDA
 12280                           fsr2l	equ	0xFD9
 12281                           status	equ	0xFD8
 12282                           
 12283 ;; *************** function ___fladd *****************
 12284 ;; Defined at:
 12285 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  b               4   69[BANK0 ] long 
 12288 ;;  a               4   73[BANK0 ] long 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;  grs             1   88[BANK0 ] unsigned char 
 12291 ;;  bexp            1   87[BANK0 ] unsigned char 
 12292 ;;  aexp            1   86[BANK0 ] unsigned char 
 12293 ;;  signs           1   85[BANK0 ] unsigned char 
 12294 ;; Return value:  Size  Location     Type
 12295 ;;                  4   69[BANK0 ] unsigned char 
 12296 ;; Registers used:
 12297 ;;		wreg, status,2, status,0
 12298 ;; Tracked objects:
 12299 ;;		On entry : 0/0
 12300 ;;		On exit  : 0/0
 12301 ;;		Unchanged: 0/0
 12302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12303 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12304 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12305 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;Total ram usage:       20 bytes
 12308 ;; Hardware stack levels used:    1
 12309 ;; Hardware stack levels required when called:    3
 12310 ;; This function calls:
 12311 ;;		Nothing
 12312 ;; This function is called by:
 12313 ;;		_main
 12314 ;;		_sprintf
 12315 ;;		___flsub
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           	psect	text24
 12320  01333A                     __ptext24:
 12321                           	opt stack 0
 12322  01333A                     ___fladd:
 12323                           	opt stack 27
 12324                           
 12325                           ;incstack = 0
 12326  01333A  0100               	movlb	0	; () banked
 12327  01333C  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12328  01333E  0B80               	andlw	128
 12329  013340  0100               	movlb	0	; () banked
 12330  013342  6FB5               	movwf	___fladd@signs& (0+255),b
 12331  013344  0100               	movlb	0	; () banked
 12332  013346  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12333  013348  25A8               	addwf	(___fladd@b+3)& (0+255),w,b
 12334  01334A  0100               	movlb	0	; () banked
 12335  01334C  6FB7               	movwf	___fladd@bexp& (0+255),b
 12336                           
 12337                           ; BSR set to: 0
 12338  01334E  0100               	movlb	0	; () banked
 12339  013350  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 12340  013352  D002               	goto	l7887
 12341                           
 12342                           ; BSR set to: 0
 12343  013354  0100               	movlb	0	; () banked
 12344  013356  81B7               	bsf	___fladd@bexp& (0+255),0,b
 12345  013358                     l7887:
 12346                           
 12347                           ; BSR set to: 0
 12348  013358  0100               	movlb	0	; () banked
 12349  01335A  51B7               	movf	___fladd@bexp& (0+255),w,b
 12350  01335C  0100               	movlb	0	; () banked
 12351  01335E  B4D8               	btfsc	status,2,c
 12352  013360  D012               	goto	l7897
 12353                           
 12354                           ; BSR set to: 0
 12355  013362  0100               	movlb	0	; () banked
 12356  013364  29B7               	incf	___fladd@bexp& (0+255),w,b
 12357  013366  A4D8               	btfss	status,2,c
 12358  013368  D009               	goto	l7893
 12359                           
 12360                           ; BSR set to: 0
 12361  01336A  0E00               	movlw	0
 12362  01336C  0100               	movlb	0	; () banked
 12363  01336E  6FA5               	movwf	___fladd@b& (0+255),b
 12364  013370  0E00               	movlw	0
 12365  013372  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12366  013374  0E00               	movlw	0
 12367  013376  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12368  013378  0E00               	movlw	0
 12369  01337A  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12370  01337C                     l7893:
 12371                           
 12372                           ; BSR set to: 0
 12373  01337C  0100               	movlb	0	; () banked
 12374  01337E  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 12375                           
 12376                           ; BSR set to: 0
 12377  013380  0E00               	movlw	0
 12378  013382  0100               	movlb	0	; () banked
 12379  013384  D008               	goto	L12
 12380  013386                     l7897:
 12381                           
 12382                           ; BSR set to: 0
 12383  013386  0E00               	movlw	0
 12384  013388  0100               	movlb	0	; () banked
 12385  01338A  6FA5               	movwf	___fladd@b& (0+255),b
 12386  01338C  0E00               	movlw	0
 12387  01338E  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12388  013390  0E00               	movlw	0
 12389  013392  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12390  013394  0E00               	movlw	0
 12391  013396                     L12:
 12392  013396  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12393                           
 12394                           ; BSR set to: 0
 12395                           
 12396                           ; BSR set to: 0
 12397  013398  0100               	movlb	0	; () banked
 12398  01339A  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12399  01339C  0B80               	andlw	128
 12400  01339E  0100               	movlb	0	; () banked
 12401  0133A0  6FB6               	movwf	___fladd@aexp& (0+255),b
 12402                           
 12403                           ; BSR set to: 0
 12404  0133A2  0100               	movlb	0	; () banked
 12405  0133A4  51B5               	movf	___fladd@signs& (0+255),w,b
 12406  0133A6  0100               	movlb	0	; () banked
 12407  0133A8  19B6               	xorwf	___fladd@aexp& (0+255),w,b
 12408  0133AA  B4D8               	btfsc	status,2,c
 12409  0133AC  D002               	goto	l7905
 12410                           
 12411                           ; BSR set to: 0
 12412  0133AE  0100               	movlb	0	; () banked
 12413  0133B0  8DB5               	bsf	___fladd@signs& (0+255),6,b
 12414  0133B2                     l7905:
 12415                           
 12416                           ; BSR set to: 0
 12417  0133B2  0100               	movlb	0	; () banked
 12418  0133B4  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12419  0133B6  25AC               	addwf	(___fladd@a+3)& (0+255),w,b
 12420  0133B8  0100               	movlb	0	; () banked
 12421  0133BA  6FB6               	movwf	___fladd@aexp& (0+255),b
 12422                           
 12423                           ; BSR set to: 0
 12424  0133BC  0100               	movlb	0	; () banked
 12425  0133BE  AFAB               	btfss	(___fladd@a+2)& (0+255),7,b
 12426  0133C0  D002               	goto	l7911
 12427                           
 12428                           ; BSR set to: 0
 12429  0133C2  0100               	movlb	0	; () banked
 12430  0133C4  81B6               	bsf	___fladd@aexp& (0+255),0,b
 12431  0133C6                     l7911:
 12432                           
 12433                           ; BSR set to: 0
 12434  0133C6  0100               	movlb	0	; () banked
 12435  0133C8  51B6               	movf	___fladd@aexp& (0+255),w,b
 12436  0133CA  0100               	movlb	0	; () banked
 12437  0133CC  B4D8               	btfsc	status,2,c
 12438  0133CE  D012               	goto	l7921
 12439                           
 12440                           ; BSR set to: 0
 12441  0133D0  0100               	movlb	0	; () banked
 12442  0133D2  29B6               	incf	___fladd@aexp& (0+255),w,b
 12443  0133D4  A4D8               	btfss	status,2,c
 12444  0133D6  D009               	goto	l7917
 12445                           
 12446                           ; BSR set to: 0
 12447  0133D8  0E00               	movlw	0
 12448  0133DA  0100               	movlb	0	; () banked
 12449  0133DC  6FA9               	movwf	___fladd@a& (0+255),b
 12450  0133DE  0E00               	movlw	0
 12451  0133E0  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12452  0133E2  0E00               	movlw	0
 12453  0133E4  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12454  0133E6  0E00               	movlw	0
 12455  0133E8  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12456  0133EA                     l7917:
 12457                           
 12458                           ; BSR set to: 0
 12459  0133EA  0100               	movlb	0	; () banked
 12460  0133EC  8FAB               	bsf	(___fladd@a+2)& (0+255),7,b
 12461                           
 12462                           ; BSR set to: 0
 12463  0133EE  0E00               	movlw	0
 12464  0133F0  0100               	movlb	0	; () banked
 12465  0133F2  D008               	goto	L13
 12466  0133F4                     l7921:
 12467                           
 12468                           ; BSR set to: 0
 12469  0133F4  0E00               	movlw	0
 12470  0133F6  0100               	movlb	0	; () banked
 12471  0133F8  6FA9               	movwf	___fladd@a& (0+255),b
 12472  0133FA  0E00               	movlw	0
 12473  0133FC  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12474  0133FE  0E00               	movlw	0
 12475  013400  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12476  013402  0E00               	movlw	0
 12477  013404                     L13:
 12478  013404  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12479                           
 12480                           ; BSR set to: 0
 12481                           
 12482                           ; BSR set to: 0
 12483  013406  0100               	movlb	0	; () banked
 12484  013408  51B7               	movf	___fladd@bexp& (0+255),w,b
 12485  01340A  0100               	movlb	0	; () banked
 12486  01340C  5DB6               	subwf	___fladd@aexp& (0+255),w,b
 12487  01340E  B0D8               	btfsc	status,0,c
 12488  013410  D024               	goto	l7959
 12489                           
 12490                           ; BSR set to: 0
 12491  013412  0100               	movlb	0	; () banked
 12492  013414  ADB5               	btfss	___fladd@signs& (0+255),6,b
 12493  013416  D003               	goto	l7929
 12494                           
 12495                           ; BSR set to: 0
 12496  013418  0E80               	movlw	128
 12497  01341A  0100               	movlb	0	; () banked
 12498  01341C  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 12499  01341E                     l7929:
 12500                           
 12501                           ; BSR set to: 0
 12502  01341E  C0B7  F0B8         	movff	___fladd@bexp,___fladd@grs
 12503                           
 12504                           ; BSR set to: 0
 12505  013422  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12506                           
 12507                           ; BSR set to: 0
 12508  013426  C0B8  F0B6         	movff	___fladd@grs,___fladd@aexp
 12509                           
 12510                           ; BSR set to: 0
 12511  01342A  C0A5  F0B8         	movff	___fladd@b,___fladd@grs
 12512                           
 12513                           ; BSR set to: 0
 12514  01342E  C0A9  F0A5         	movff	___fladd@a,___fladd@b
 12515                           
 12516                           ; BSR set to: 0
 12517  013432  C0B8  F0A9         	movff	___fladd@grs,___fladd@a
 12518                           
 12519                           ; BSR set to: 0
 12520  013436  C0A6  F0B8         	movff	___fladd@b+1,___fladd@grs
 12521                           
 12522                           ; BSR set to: 0
 12523  01343A  C0AA  F0A6         	movff	___fladd@a+1,___fladd@b+1
 12524                           
 12525                           ; BSR set to: 0
 12526  01343E  C0B8  F0AA         	movff	___fladd@grs,___fladd@a+1
 12527                           
 12528                           ; BSR set to: 0
 12529  013442  C0A7  F0B8         	movff	___fladd@b+2,___fladd@grs
 12530                           
 12531                           ; BSR set to: 0
 12532  013446  C0AB  F0A7         	movff	___fladd@a+2,___fladd@b+2
 12533                           
 12534                           ; BSR set to: 0
 12535  01344A  C0B8  F0AB         	movff	___fladd@grs,___fladd@a+2
 12536                           
 12537                           ; BSR set to: 0
 12538  01344E  C0A8  F0B8         	movff	___fladd@b+3,___fladd@grs
 12539                           
 12540                           ; BSR set to: 0
 12541  013452  C0AC  F0A8         	movff	___fladd@a+3,___fladd@b+3
 12542                           
 12543                           ; BSR set to: 0
 12544  013456  C0B8  F0AC         	movff	___fladd@grs,___fladd@a+3
 12545  01345A                     l7959:
 12546                           
 12547                           ; BSR set to: 0
 12548  01345A  0E00               	movlw	0
 12549  01345C  0100               	movlb	0	; () banked
 12550  01345E  6FB8               	movwf	___fladd@grs& (0+255),b
 12551                           
 12552                           ; BSR set to: 0
 12553  013460  0100               	movlb	0	; () banked
 12554  013462  51B7               	movf	___fladd@bexp& (0+255),w,b
 12555  013464  0100               	movlb	0	; () banked
 12556  013466  6FAD               	movwf	??___fladd& (0+255),b
 12557  013468  6BAE               	clrf	(??___fladd+1)& (0+255),b
 12558  01346A  0100               	movlb	0	; () banked
 12559  01346C  1FAD               	comf	??___fladd& (0+255),f,b
 12560  01346E  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 12561  013470  4BAD               	infsnz	??___fladd& (0+255),f,b
 12562  013472  2BAE               	incf	(??___fladd+1)& (0+255),f,b
 12563  013474  0100               	movlb	0	; () banked
 12564  013476  51B6               	movf	___fladd@aexp& (0+255),w,b
 12565  013478  0100               	movlb	0	; () banked
 12566  01347A  6FAF               	movwf	(??___fladd+2)& (0+255),b
 12567  01347C  6BB0               	clrf	(??___fladd+3)& (0+255),b
 12568  01347E  0100               	movlb	0	; () banked
 12569  013480  51AD               	movf	??___fladd& (0+255),w,b
 12570  013482  0100               	movlb	0	; () banked
 12571  013484  27AF               	addwf	(??___fladd+2)& (0+255),f,b
 12572  013486  0100               	movlb	0	; () banked
 12573  013488  51AE               	movf	(??___fladd+1)& (0+255),w,b
 12574  01348A  0100               	movlb	0	; () banked
 12575  01348C  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 12576  01348E  0100               	movlb	0	; () banked
 12577  013490  BFB0               	btfsc	(??___fladd+3)& (0+255),7,b
 12578  013492  D03D               	goto	l1542
 12579  013494  0100               	movlb	0	; () banked
 12580  013496  51B0               	movf	(??___fladd+3)& (0+255),w,b
 12581  013498  E105               	bnz	u10440
 12582  01349A  0E1A               	movlw	26
 12583  01349C  0100               	movlb	0	; () banked
 12584  01349E  5DAF               	subwf	(??___fladd+2)& (0+255),w,b
 12585  0134A0  A0D8               	btfss	status,0,c
 12586  0134A2  D035               	goto	l1542
 12587  0134A4                     u10440:
 12588                           
 12589                           ; BSR set to: 0
 12590  0134A4  0100               	movlb	0	; () banked
 12591  0134A6  51A5               	movf	___fladd@b& (0+255),w,b
 12592  0134A8  0100               	movlb	0	; () banked
 12593  0134AA  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 12594  0134AC  0100               	movlb	0	; () banked
 12595  0134AE  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 12596  0134B0  0100               	movlb	0	; () banked
 12597  0134B2  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 12598  0134B4  B4D8               	btfsc	status,2,c
 12599  0134B6  D002               	goto	u10450
 12600  0134B8  0E01               	movlw	1
 12601  0134BA  D001               	goto	u10460
 12602  0134BC                     u10450:
 12603  0134BC  0E00               	movlw	0
 12604  0134BE                     u10460:
 12605  0134BE  0100               	movlb	0	; () banked
 12606  0134C0  6FB8               	movwf	___fladd@grs& (0+255),b
 12607                           
 12608                           ; BSR set to: 0
 12609  0134C2  0E00               	movlw	0
 12610  0134C4  0100               	movlb	0	; () banked
 12611  0134C6  6FA5               	movwf	___fladd@b& (0+255),b
 12612  0134C8  0E00               	movlw	0
 12613  0134CA  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12614  0134CC  0E00               	movlw	0
 12615  0134CE  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12616  0134D0  0E00               	movlw	0
 12617  0134D2  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12618                           
 12619                           ; BSR set to: 0
 12620  0134D4  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12621  0134D8  D020               	goto	l1541
 12622  0134DA                     l1543:
 12623                           
 12624                           ; BSR set to: 0
 12625  0134DA  0100               	movlb	0	; () banked
 12626  0134DC  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12627  0134DE  D007               	goto	l7971
 12628                           
 12629                           ; BSR set to: 0
 12630  0134E0  0100               	movlb	0	; () banked
 12631  0134E2  90D8               	bcf	status,0,c
 12632  0134E4  31B8               	rrcf	___fladd@grs& (0+255),w,b
 12633  0134E6  0901               	iorlw	1
 12634  0134E8  0100               	movlb	0	; () banked
 12635  0134EA  6FB8               	movwf	___fladd@grs& (0+255),b
 12636  0134EC  D003               	goto	l7973
 12637  0134EE                     l7971:
 12638                           
 12639                           ; BSR set to: 0
 12640  0134EE  0100               	movlb	0	; () banked
 12641  0134F0  90D8               	bcf	status,0,c
 12642  0134F2  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12643  0134F4                     l7973:
 12644                           
 12645                           ; BSR set to: 0
 12646  0134F4  0100               	movlb	0	; () banked
 12647  0134F6  A1A5               	btfss	___fladd@b& (0+255),0,b
 12648  0134F8  D002               	goto	l7977
 12649                           
 12650                           ; BSR set to: 0
 12651  0134FA  0100               	movlb	0	; () banked
 12652  0134FC  8FB8               	bsf	___fladd@grs& (0+255),7,b
 12653  0134FE                     l7977:
 12654                           
 12655                           ; BSR set to: 0
 12656  0134FE  0100               	movlb	0	; () banked
 12657  013500  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 12658  013502  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 12659  013504  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 12660  013506  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 12661  013508  33A5               	rrcf	___fladd@b& (0+255),f,b
 12662                           
 12663                           ; BSR set to: 0
 12664  01350A  0100               	movlb	0	; () banked
 12665  01350C  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12666  01350E                     l1542:
 12667                           
 12668                           ; BSR set to: 0
 12669  01350E  0100               	movlb	0	; () banked
 12670  013510  51B6               	movf	___fladd@aexp& (0+255),w,b
 12671  013512  0100               	movlb	0	; () banked
 12672  013514  5DB7               	subwf	___fladd@bexp& (0+255),w,b
 12673  013516  A0D8               	btfss	status,0,c
 12674  013518  D7E0               	goto	l1543
 12675  01351A                     l1541:
 12676                           
 12677                           ; BSR set to: 0
 12678  01351A  0100               	movlb	0	; () banked
 12679  01351C  BDB5               	btfsc	___fladd@signs& (0+255),6,b
 12680  01351E  D03F               	goto	l8005
 12681                           
 12682                           ; BSR set to: 0
 12683  013520  0100               	movlb	0	; () banked
 12684  013522  51B7               	movf	___fladd@bexp& (0+255),w,b
 12685  013524  0100               	movlb	0	; () banked
 12686  013526  A4D8               	btfss	status,2,c
 12687  013528  D00A               	goto	l7987
 12688                           
 12689                           ; BSR set to: 0
 12690  01352A  0E00               	movlw	0
 12691  01352C  0100               	movlb	0	; () banked
 12692  01352E  6FA5               	movwf	?___fladd& (0+255),b
 12693  013530  0E00               	movlw	0
 12694  013532  6FA6               	movwf	(?___fladd+1)& (0+255),b
 12695  013534  0E00               	movlw	0
 12696  013536  6FA7               	movwf	(?___fladd+2)& (0+255),b
 12697  013538  0E00               	movlw	0
 12698  01353A  6FA8               	movwf	(?___fladd+3)& (0+255),b
 12699                           
 12700                           ; BSR set to: 0
 12701  01353C  0012               	return	
 12702  01353E                     l7987:
 12703                           
 12704                           ; BSR set to: 0
 12705  01353E  0100               	movlb	0	; () banked
 12706  013540  51A9               	movf	___fladd@a& (0+255),w,b
 12707  013542  0100               	movlb	0	; () banked
 12708  013544  27A5               	addwf	___fladd@b& (0+255),f,b
 12709  013546  0100               	movlb	0	; () banked
 12710  013548  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12711  01354A  0100               	movlb	0	; () banked
 12712  01354C  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 12713  01354E  0100               	movlb	0	; () banked
 12714  013550  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12715  013552  0100               	movlb	0	; () banked
 12716  013554  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 12717  013556  0100               	movlb	0	; () banked
 12718  013558  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12719  01355A  0100               	movlb	0	; () banked
 12720  01355C  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 12721                           
 12722                           ; BSR set to: 0
 12723  01355E  0100               	movlb	0	; () banked
 12724  013560  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 12725  013562  D0CC               	goto	l8041
 12726                           
 12727                           ; BSR set to: 0
 12728  013564  0100               	movlb	0	; () banked
 12729  013566  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12730  013568  D009               	goto	l7995
 12731                           
 12732                           ; BSR set to: 0
 12733  01356A  0100               	movlb	0	; () banked
 12734  01356C  90D8               	bcf	status,0,c
 12735  01356E  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12736  013570  0100               	movlb	0	; () banked
 12737  013572  51B8               	movf	___fladd@grs& (0+255),w,b
 12738  013574  0901               	iorlw	1
 12739  013576  0100               	movlb	0	; () banked
 12740  013578  6FB8               	movwf	___fladd@grs& (0+255),b
 12741  01357A  D003               	goto	l7997
 12742  01357C                     l7995:
 12743                           
 12744                           ; BSR set to: 0
 12745  01357C  0100               	movlb	0	; () banked
 12746  01357E  90D8               	bcf	status,0,c
 12747  013580  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12748  013582                     l7997:
 12749                           
 12750                           ; BSR set to: 0
 12751  013582  0100               	movlb	0	; () banked
 12752  013584  A1A5               	btfss	___fladd@b& (0+255),0,b
 12753  013586  D002               	goto	l8001
 12754                           
 12755                           ; BSR set to: 0
 12756  013588  0100               	movlb	0	; () banked
 12757  01358A  8FB8               	bsf	___fladd@grs& (0+255),7,b
 12758  01358C                     l8001:
 12759                           
 12760                           ; BSR set to: 0
 12761  01358C  0100               	movlb	0	; () banked
 12762  01358E  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 12763  013590  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 12764  013592  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 12765  013594  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 12766  013596  33A5               	rrcf	___fladd@b& (0+255),f,b
 12767                           
 12768                           ; BSR set to: 0
 12769  013598  0100               	movlb	0	; () banked
 12770  01359A  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12771                           
 12772                           ; BSR set to: 0
 12773  01359C  D0AF               	goto	l8041
 12774  01359E                     l8005:
 12775                           
 12776                           ; BSR set to: 0
 12777  01359E  0100               	movlb	0	; () banked
 12778  0135A0  51A9               	movf	___fladd@a& (0+255),w,b
 12779  0135A2  0100               	movlb	0	; () banked
 12780  0135A4  5DA5               	subwf	___fladd@b& (0+255),w,b
 12781  0135A6  0100               	movlb	0	; () banked
 12782  0135A8  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12783  0135AA  0100               	movlb	0	; () banked
 12784  0135AC  59A6               	subwfb	(___fladd@b+1)& (0+255),w,b
 12785  0135AE  0100               	movlb	0	; () banked
 12786  0135B0  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12787  0135B2  0100               	movlb	0	; () banked
 12788  0135B4  59A7               	subwfb	(___fladd@b+2)& (0+255),w,b
 12789  0135B6  0100               	movlb	0	; () banked
 12790  0135B8  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12791  0135BA  0A80               	xorlw	128
 12792  0135BC  0100               	movlb	0	; () banked
 12793  0135BE  6FAD               	movwf	??___fladd& (0+255),b
 12794  0135C0  0100               	movlb	0	; () banked
 12795  0135C2  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12796  0135C4  0A80               	xorlw	128
 12797  0135C6  0100               	movlb	0	; () banked
 12798  0135C8  59AD               	subwfb	??___fladd& (0+255),w,b
 12799  0135CA  B0D8               	btfsc	status,0,c
 12800  0135CC  D050               	goto	l8015
 12801                           
 12802                           ; BSR set to: 0
 12803  0135CE  C0A5  F0AD         	movff	___fladd@b,??___fladd
 12804  0135D2  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 12805  0135D6  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 12806  0135DA  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 12807  0135DE  0100               	movlb	0	; () banked
 12808  0135E0  1FAD               	comf	??___fladd& (0+255),f,b
 12809  0135E2  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 12810  0135E4  1FAF               	comf	(??___fladd+2)& (0+255),f,b
 12811  0135E6  1FB0               	comf	(??___fladd+3)& (0+255),f,b
 12812  0135E8  2BAD               	incf	??___fladd& (0+255),f,b
 12813  0135EA  0E00               	movlw	0
 12814  0135EC  23AE               	addwfc	(??___fladd+1)& (0+255),f,b
 12815  0135EE  23AF               	addwfc	(??___fladd+2)& (0+255),f,b
 12816  0135F0  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 12817  0135F2  0100               	movlb	0	; () banked
 12818  0135F4  51A9               	movf	___fladd@a& (0+255),w,b
 12819  0135F6  0100               	movlb	0	; () banked
 12820  0135F8  25AD               	addwf	??___fladd& (0+255),w,b
 12821  0135FA  0100               	movlb	0	; () banked
 12822  0135FC  6FB1               	movwf	(??___fladd+4)& (0+255),b
 12823  0135FE  0100               	movlb	0	; () banked
 12824  013600  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12825  013602  0100               	movlb	0	; () banked
 12826  013604  21AE               	addwfc	(??___fladd+1)& (0+255),w,b
 12827  013606  0100               	movlb	0	; () banked
 12828  013608  6FB2               	movwf	(??___fladd+5)& (0+255),b
 12829  01360A  0100               	movlb	0	; () banked
 12830  01360C  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12831  01360E  0100               	movlb	0	; () banked
 12832  013610  21AF               	addwfc	(??___fladd+2)& (0+255),w,b
 12833  013612  0100               	movlb	0	; () banked
 12834  013614  6FB3               	movwf	(??___fladd+6)& (0+255),b
 12835  013616  0100               	movlb	0	; () banked
 12836  013618  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12837  01361A  0100               	movlb	0	; () banked
 12838  01361C  21B0               	addwfc	(??___fladd+3)& (0+255),w,b
 12839  01361E  0100               	movlb	0	; () banked
 12840  013620  6FB4               	movwf	(??___fladd+7)& (0+255),b
 12841  013622  0EFF               	movlw	255
 12842  013624  0100               	movlb	0	; () banked
 12843  013626  25B1               	addwf	(??___fladd+4)& (0+255),w,b
 12844  013628  0100               	movlb	0	; () banked
 12845  01362A  6FA5               	movwf	___fladd@b& (0+255),b
 12846  01362C  0EFF               	movlw	255
 12847  01362E  0100               	movlb	0	; () banked
 12848  013630  21B2               	addwfc	(??___fladd+5)& (0+255),w,b
 12849  013632  0100               	movlb	0	; () banked
 12850  013634  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12851  013636  0EFF               	movlw	255
 12852  013638  0100               	movlb	0	; () banked
 12853  01363A  21B3               	addwfc	(??___fladd+6)& (0+255),w,b
 12854  01363C  0100               	movlb	0	; () banked
 12855  01363E  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12856  013640  0EFF               	movlw	255
 12857  013642  0100               	movlb	0	; () banked
 12858  013644  21B4               	addwfc	(??___fladd+7)& (0+255),w,b
 12859  013646  0100               	movlb	0	; () banked
 12860  013648  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12861  01364A  0E80               	movlw	128
 12862  01364C  0100               	movlb	0	; () banked
 12863  01364E  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 12864                           
 12865                           ; BSR set to: 0
 12866  013650  0100               	movlb	0	; () banked
 12867  013652  6DB8               	negf	___fladd@grs& (0+255),b
 12868                           
 12869                           ; BSR set to: 0
 12870  013654  0100               	movlb	0	; () banked
 12871  013656  51B8               	movf	___fladd@grs& (0+255),w,b
 12872  013658  0100               	movlb	0	; () banked
 12873  01365A  A4D8               	btfss	status,2,c
 12874  01365C  D018               	goto	l1558
 12875                           
 12876                           ; BSR set to: 0
 12877  01365E  0E01               	movlw	1
 12878  013660  0100               	movlb	0	; () banked
 12879  013662  27A5               	addwf	___fladd@b& (0+255),f,b
 12880  013664  0E00               	movlw	0
 12881  013666  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 12882  013668  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 12883  01366A  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 12884                           
 12885                           ; BSR set to: 0
 12886  01366C  D010               	goto	l1558
 12887  01366E                     l8015:
 12888                           
 12889                           ; BSR set to: 0
 12890  01366E  0100               	movlb	0	; () banked
 12891  013670  51A9               	movf	___fladd@a& (0+255),w,b
 12892  013672  0100               	movlb	0	; () banked
 12893  013674  5FA5               	subwf	___fladd@b& (0+255),f,b
 12894  013676  0100               	movlb	0	; () banked
 12895  013678  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12896  01367A  0100               	movlb	0	; () banked
 12897  01367C  5BA6               	subwfb	(___fladd@b+1)& (0+255),f,b
 12898  01367E  0100               	movlb	0	; () banked
 12899  013680  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12900  013682  0100               	movlb	0	; () banked
 12901  013684  5BA7               	subwfb	(___fladd@b+2)& (0+255),f,b
 12902  013686  0100               	movlb	0	; () banked
 12903  013688  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12904  01368A  0100               	movlb	0	; () banked
 12905  01368C  5BA8               	subwfb	(___fladd@b+3)& (0+255),f,b
 12906  01368E                     l1558:
 12907                           
 12908                           ; BSR set to: 0
 12909  01368E  0100               	movlb	0	; () banked
 12910  013690  51A5               	movf	___fladd@b& (0+255),w,b
 12911  013692  0100               	movlb	0	; () banked
 12912  013694  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 12913  013696  0100               	movlb	0	; () banked
 12914  013698  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 12915  01369A  0100               	movlb	0	; () banked
 12916  01369C  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 12917  01369E  A4D8               	btfss	status,2,c
 12918  0136A0  D02A               	goto	l8039
 12919                           
 12920                           ; BSR set to: 0
 12921  0136A2  0100               	movlb	0	; () banked
 12922  0136A4  51B8               	movf	___fladd@grs& (0+255),w,b
 12923  0136A6  0100               	movlb	0	; () banked
 12924  0136A8  A4D8               	btfss	status,2,c
 12925  0136AA  D025               	goto	l8039
 12926                           
 12927                           ; BSR set to: 0
 12928  0136AC  0E00               	movlw	0
 12929  0136AE  0100               	movlb	0	; () banked
 12930  0136B0  6FA5               	movwf	?___fladd& (0+255),b
 12931  0136B2  0E00               	movlw	0
 12932  0136B4  6FA6               	movwf	(?___fladd+1)& (0+255),b
 12933  0136B6  0E00               	movlw	0
 12934  0136B8  6FA7               	movwf	(?___fladd+2)& (0+255),b
 12935  0136BA  0E00               	movlw	0
 12936  0136BC  6FA8               	movwf	(?___fladd+3)& (0+255),b
 12937                           
 12938                           ; BSR set to: 0
 12939  0136BE  0012               	return	
 12940  0136C0                     l8023:
 12941                           
 12942                           ; BSR set to: 0
 12943  0136C0  0100               	movlb	0	; () banked
 12944  0136C2  90D8               	bcf	status,0,c
 12945  0136C4  37A5               	rlcf	___fladd@b& (0+255),f,b
 12946  0136C6  37A6               	rlcf	(___fladd@b+1)& (0+255),f,b
 12947  0136C8  37A7               	rlcf	(___fladd@b+2)& (0+255),f,b
 12948  0136CA  37A8               	rlcf	(___fladd@b+3)& (0+255),f,b
 12949                           
 12950                           ; BSR set to: 0
 12951  0136CC  0100               	movlb	0	; () banked
 12952  0136CE  AFB8               	btfss	___fladd@grs& (0+255),7,b
 12953  0136D0  D002               	goto	l8029
 12954                           
 12955                           ; BSR set to: 0
 12956  0136D2  0100               	movlb	0	; () banked
 12957  0136D4  81A5               	bsf	___fladd@b& (0+255),0,b
 12958  0136D6                     l8029:
 12959                           
 12960                           ; BSR set to: 0
 12961  0136D6  0100               	movlb	0	; () banked
 12962  0136D8  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12963  0136DA  D003               	goto	l8033
 12964                           
 12965                           ; BSR set to: 0
 12966  0136DC  80D8               	bsf	status,0,c
 12967  0136DE  0100               	movlb	0	; () banked
 12968  0136E0  D002               	goto	L14
 12969  0136E2                     l8033:
 12970                           
 12971                           ; BSR set to: 0
 12972  0136E2  0100               	movlb	0	; () banked
 12973  0136E4  90D8               	bcf	status,0,c
 12974  0136E6                     L14:
 12975  0136E6  37B8               	rlcf	___fladd@grs& (0+255),f,b
 12976                           
 12977                           ; BSR set to: 0
 12978                           
 12979                           ; BSR set to: 0
 12980  0136E8  0100               	movlb	0	; () banked
 12981  0136EA  51B7               	movf	___fladd@bexp& (0+255),w,b
 12982  0136EC  0100               	movlb	0	; () banked
 12983  0136EE  B4D8               	btfsc	status,2,c
 12984  0136F0  D002               	goto	l8039
 12985                           
 12986                           ; BSR set to: 0
 12987  0136F2  0100               	movlb	0	; () banked
 12988  0136F4  07B7               	decf	___fladd@bexp& (0+255),f,b
 12989  0136F6                     l8039:
 12990                           
 12991                           ; BSR set to: 0
 12992  0136F6  0100               	movlb	0	; () banked
 12993  0136F8  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 12994  0136FA  D7E2               	goto	l8023
 12995  0136FC                     l8041:
 12996                           
 12997                           ; BSR set to: 0
 12998  0136FC  0E00               	movlw	0
 12999  0136FE  0100               	movlb	0	; () banked
 13000  013700  6FB6               	movwf	___fladd@aexp& (0+255),b
 13001                           
 13002                           ; BSR set to: 0
 13003  013702  0100               	movlb	0	; () banked
 13004  013704  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13005  013706  D00D               	goto	l1567
 13006                           
 13007                           ; BSR set to: 0
 13008  013708  C0B8  F0AD         	movff	___fladd@grs,??___fladd
 13009  01370C  0E7F               	movlw	127
 13010  01370E  0100               	movlb	0	; () banked
 13011  013710  17AD               	andwf	??___fladd& (0+255),f,b
 13012  013712  A4D8               	btfss	status,2,c
 13013  013714  D003               	goto	l8049
 13014                           
 13015                           ; BSR set to: 0
 13016                           
 13017                           ; BSR set to: 0
 13018  013716  0100               	movlb	0	; () banked
 13019  013718  A1A5               	btfss	___fladd@b& (0+255),0,b
 13020  01371A  D003               	goto	l1567
 13021  01371C                     l8049:
 13022                           
 13023                           ; BSR set to: 0
 13024  01371C  0E01               	movlw	1
 13025  01371E  0100               	movlb	0	; () banked
 13026  013720  6FB6               	movwf	___fladd@aexp& (0+255),b
 13027  013722                     l1567:
 13028                           
 13029                           ; BSR set to: 0
 13030  013722  0100               	movlb	0	; () banked
 13031  013724  51B6               	movf	___fladd@aexp& (0+255),w,b
 13032  013726  0100               	movlb	0	; () banked
 13033  013728  B4D8               	btfsc	status,2,c
 13034  01372A  D026               	goto	l8059
 13035                           
 13036                           ; BSR set to: 0
 13037  01372C  0E01               	movlw	1
 13038  01372E  0100               	movlb	0	; () banked
 13039  013730  27A5               	addwf	___fladd@b& (0+255),f,b
 13040  013732  0E00               	movlw	0
 13041  013734  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13042  013736  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13043  013738  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13044                           
 13045                           ; BSR set to: 0
 13046  01373A  0100               	movlb	0	; () banked
 13047  01373C  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13048  01373E  D01C               	goto	l8059
 13049                           
 13050                           ; BSR set to: 0
 13051  013740  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13052  013744  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13053  013748  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13054  01374C  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13055  013750  0100               	movlb	0	; () banked
 13056  013752  35B0               	rlcf	(??___fladd+3)& (0+255),w,b
 13057  013754  33B0               	rrcf	(??___fladd+3)& (0+255),f,b
 13058  013756  33AF               	rrcf	(??___fladd+2)& (0+255),f,b
 13059  013758  33AE               	rrcf	(??___fladd+1)& (0+255),f,b
 13060  01375A  33AD               	rrcf	??___fladd& (0+255),f,b
 13061  01375C  C0AD  F0A5         	movff	??___fladd,___fladd@b
 13062  013760  C0AE  F0A6         	movff	??___fladd+1,___fladd@b+1
 13063  013764  C0AF  F0A7         	movff	??___fladd+2,___fladd@b+2
 13064  013768  C0B0  F0A8         	movff	??___fladd+3,___fladd@b+3
 13065  01376C  0100               	movlb	0	; () banked
 13066  01376E  29B7               	incf	___fladd@bexp& (0+255),w,b
 13067  013770  B4D8               	btfsc	status,2,c
 13068  013772  D002               	goto	l8059
 13069                           
 13070                           ; BSR set to: 0
 13071  013774  0100               	movlb	0	; () banked
 13072  013776  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13073  013778                     l8059:
 13074                           
 13075                           ; BSR set to: 0
 13076  013778  0100               	movlb	0	; () banked
 13077  01377A  29B7               	incf	___fladd@bexp& (0+255),w,b
 13078  01377C  B4D8               	btfsc	status,2,c
 13079  01377E  D005               	goto	l8063
 13080                           
 13081                           ; BSR set to: 0
 13082  013780  0100               	movlb	0	; () banked
 13083  013782  51B7               	movf	___fladd@bexp& (0+255),w,b
 13084  013784  0100               	movlb	0	; () banked
 13085  013786  A4D8               	btfss	status,2,c
 13086  013788  D011               	goto	l8067
 13087  01378A                     l8063:
 13088                           
 13089                           ; BSR set to: 0
 13090  01378A  0E00               	movlw	0
 13091  01378C  0100               	movlb	0	; () banked
 13092  01378E  6FA5               	movwf	___fladd@b& (0+255),b
 13093  013790  0E00               	movlw	0
 13094  013792  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13095  013794  0E00               	movlw	0
 13096  013796  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13097  013798  0E00               	movlw	0
 13098  01379A  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13099  01379C  0100               	movlb	0	; () banked
 13100  01379E  51B7               	movf	___fladd@bexp& (0+255),w,b
 13101  0137A0  0100               	movlb	0	; () banked
 13102  0137A2  A4D8               	btfss	status,2,c
 13103  0137A4  D003               	goto	l8067
 13104                           
 13105                           ; BSR set to: 0
 13106  0137A6  0E00               	movlw	0
 13107  0137A8  0100               	movlb	0	; () banked
 13108  0137AA  6FB5               	movwf	___fladd@signs& (0+255),b
 13109  0137AC                     l8067:
 13110                           
 13111                           ; BSR set to: 0
 13112  0137AC  0100               	movlb	0	; () banked
 13113  0137AE  A1B7               	btfss	___fladd@bexp& (0+255),0,b
 13114  0137B0  D003               	goto	l8071
 13115                           
 13116                           ; BSR set to: 0
 13117  0137B2  0100               	movlb	0	; () banked
 13118  0137B4  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 13119  0137B6  D002               	goto	l8073
 13120  0137B8                     l8071:
 13121                           
 13122                           ; BSR set to: 0
 13123  0137B8  0100               	movlb	0	; () banked
 13124  0137BA  9FA7               	bcf	(___fladd@b+2)& (0+255),7,b
 13125  0137BC                     l8073:
 13126                           
 13127                           ; BSR set to: 0
 13128  0137BC  0100               	movlb	0	; () banked
 13129  0137BE  90D8               	bcf	status,0,c
 13130  0137C0  31B7               	rrcf	___fladd@bexp& (0+255),w,b
 13131  0137C2  0100               	movlb	0	; () banked
 13132  0137C4  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13133                           
 13134                           ; BSR set to: 0
 13135  0137C6  0100               	movlb	0	; () banked
 13136  0137C8  AFB5               	btfss	___fladd@signs& (0+255),7,b
 13137  0137CA  D002               	goto	l8079
 13138                           
 13139                           ; BSR set to: 0
 13140  0137CC  0100               	movlb	0	; () banked
 13141  0137CE  8FA8               	bsf	(___fladd@b+3)& (0+255),7,b
 13142  0137D0                     l8079:
 13143                           
 13144                           ; BSR set to: 0
 13145  0137D0  C0A5  F0A5         	movff	___fladd@b,?___fladd
 13146  0137D4  C0A6  F0A6         	movff	___fladd@b+1,?___fladd+1
 13147  0137D8  C0A7  F0A7         	movff	___fladd@b+2,?___fladd+2
 13148  0137DC  C0A8  F0A8         	movff	___fladd@b+3,?___fladd+3
 13149  0137E0  0012               	return	
 13150  0137E2                     __end_of___fladd:
 13151                           	opt stack 0
 13152                           tblptru	equ	0xFF8
 13153                           tblptrh	equ	0xFF7
 13154                           tblptrl	equ	0xFF6
 13155                           tablat	equ	0xFF5
 13156                           prodh	equ	0xFF4
 13157                           prodl	equ	0xFF3
 13158                           intcon	equ	0xFF2
 13159                           postinc0	equ	0xFEE
 13160                           wreg	equ	0xFE8
 13161                           indf2	equ	0xFDF
 13162                           postinc2	equ	0xFDE
 13163                           fsr2h	equ	0xFDA
 13164                           fsr2l	equ	0xFD9
 13165                           status	equ	0xFD8
 13166                           
 13167 ;; *************** function ___flneg *****************
 13168 ;; Defined at:
 13169 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;  f1              4   56[BANK0 ] unsigned char 
 13172 ;; Auto vars:     Size  Location     Type
 13173 ;;		None
 13174 ;; Return value:  Size  Location     Type
 13175 ;;                  4   56[BANK0 ] unsigned char 
 13176 ;; Registers used:
 13177 ;;		wreg, status,2, status,0
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13183 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13186 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;Total ram usage:        4 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; Hardware stack levels required when called:    3
 13190 ;; This function calls:
 13191 ;;		Nothing
 13192 ;; This function is called by:
 13193 ;;		_main
 13194 ;;		_sprintf
 13195 ;; This function uses a non-reentrant model
 13196 ;;
 13197                           
 13198                           	psect	text25
 13199  016260                     __ptext25:
 13200                           	opt stack 0
 13201  016260                     ___flneg:
 13202                           	opt stack 27
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;incstack = 0
 13206  016260  0100               	movlb	0	; () banked
 13207  016262  5198               	movf	___flneg@f1& (0+255),w,b
 13208  016264  0100               	movlb	0	; () banked
 13209  016266  1199               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13210  016268  0100               	movlb	0	; () banked
 13211  01626A  119A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13212  01626C  0100               	movlb	0	; () banked
 13213  01626E  119B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13214  016270  B4D8               	btfsc	status,2,c
 13215  016272  D009               	goto	l8545
 13216                           
 13217                           ; BSR set to: 0
 13218  016274  0E00               	movlw	0
 13219  016276  0100               	movlb	0	; () banked
 13220  016278  1B98               	xorwf	___flneg@f1& (0+255),f,b
 13221  01627A  0E00               	movlw	0
 13222  01627C  1B99               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13223  01627E  0E00               	movlw	0
 13224  016280  1B9A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13225  016282  0E80               	movlw	128
 13226  016284  1B9B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13227  016286                     l8545:
 13228                           
 13229                           ; BSR set to: 0
 13230  016286  C098  F098         	movff	___flneg@f1,?___flneg
 13231  01628A  C099  F099         	movff	___flneg@f1+1,?___flneg+1
 13232  01628E  C09A  F09A         	movff	___flneg@f1+2,?___flneg+2
 13233  016292  C09B  F09B         	movff	___flneg@f1+3,?___flneg+3
 13234  016296  0012               	return	
 13235  016298                     __end_of___flneg:
 13236                           	opt stack 0
 13237                           tblptru	equ	0xFF8
 13238                           tblptrh	equ	0xFF7
 13239                           tblptrl	equ	0xFF6
 13240                           tablat	equ	0xFF5
 13241                           prodh	equ	0xFF4
 13242                           prodl	equ	0xFF3
 13243                           intcon	equ	0xFF2
 13244                           postinc0	equ	0xFEE
 13245                           wreg	equ	0xFE8
 13246                           indf2	equ	0xFDF
 13247                           postinc2	equ	0xFDE
 13248                           fsr2h	equ	0xFDA
 13249                           fsr2l	equ	0xFD9
 13250                           status	equ	0xFD8
 13251                           
 13252 ;; *************** function ___flge *****************
 13253 ;; Defined at:
 13254 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;  ff1             4   17[BANK0 ] unsigned char 
 13257 ;;  ff2             4   21[BANK0 ] unsigned char 
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;		None
 13260 ;; Return value:  Size  Location     Type
 13261 ;;		None               void
 13262 ;; Registers used:
 13263 ;;		wreg, status,2, status,0
 13264 ;; Tracked objects:
 13265 ;;		On entry : 0/0
 13266 ;;		On exit  : 0/0
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13269 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13272 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13273 ;;Total ram usage:       12 bytes
 13274 ;; Hardware stack levels used:    1
 13275 ;; Hardware stack levels required when called:    3
 13276 ;; This function calls:
 13277 ;;		Nothing
 13278 ;; This function is called by:
 13279 ;;		_sprintf
 13280 ;; This function uses a non-reentrant model
 13281 ;;
 13282                           
 13283                           	psect	text26
 13284  015178                     __ptext26:
 13285                           	opt stack 0
 13286  015178                     ___flge:
 13287                           	opt stack 25
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;incstack = 0
 13291  015178  0E00               	movlw	0
 13292  01517A  0100               	movlb	0	; () banked
 13293  01517C  1571               	andwf	___flge@ff1& (0+255),w,b
 13294  01517E  0100               	movlb	0	; () banked
 13295  015180  6F79               	movwf	??___flge& (0+255),b
 13296  015182  0E00               	movlw	0
 13297  015184  0100               	movlb	0	; () banked
 13298  015186  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
 13299  015188  0100               	movlb	0	; () banked
 13300  01518A  6F7A               	movwf	(??___flge+1)& (0+255),b
 13301  01518C  0E80               	movlw	128
 13302  01518E  0100               	movlb	0	; () banked
 13303  015190  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
 13304  015192  0100               	movlb	0	; () banked
 13305  015194  6F7B               	movwf	(??___flge+2)& (0+255),b
 13306  015196  0E7F               	movlw	127
 13307  015198  0100               	movlb	0	; () banked
 13308  01519A  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
 13309  01519C  0100               	movlb	0	; () banked
 13310  01519E  6F7C               	movwf	(??___flge+3)& (0+255),b
 13311  0151A0  0100               	movlb	0	; () banked
 13312  0151A2  5179               	movf	??___flge& (0+255),w,b
 13313  0151A4  0100               	movlb	0	; () banked
 13314  0151A6  117A               	iorwf	(??___flge+1)& (0+255),w,b
 13315  0151A8  0100               	movlb	0	; () banked
 13316  0151AA  117B               	iorwf	(??___flge+2)& (0+255),w,b
 13317  0151AC  0100               	movlb	0	; () banked
 13318  0151AE  117C               	iorwf	(??___flge+3)& (0+255),w,b
 13319  0151B0  A4D8               	btfss	status,2,c
 13320  0151B2  D009               	goto	l8523
 13321                           
 13322                           ; BSR set to: 0
 13323  0151B4  0E00               	movlw	0
 13324  0151B6  0100               	movlb	0	; () banked
 13325  0151B8  6F71               	movwf	___flge@ff1& (0+255),b
 13326  0151BA  0E00               	movlw	0
 13327  0151BC  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 13328  0151BE  0E00               	movlw	0
 13329  0151C0  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 13330  0151C2  0E00               	movlw	0
 13331  0151C4  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 13332  0151C6                     l8523:
 13333                           
 13334                           ; BSR set to: 0
 13335  0151C6  0E00               	movlw	0
 13336  0151C8  0100               	movlb	0	; () banked
 13337  0151CA  1575               	andwf	___flge@ff2& (0+255),w,b
 13338  0151CC  0100               	movlb	0	; () banked
 13339  0151CE  6F79               	movwf	??___flge& (0+255),b
 13340  0151D0  0E00               	movlw	0
 13341  0151D2  0100               	movlb	0	; () banked
 13342  0151D4  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
 13343  0151D6  0100               	movlb	0	; () banked
 13344  0151D8  6F7A               	movwf	(??___flge+1)& (0+255),b
 13345  0151DA  0E80               	movlw	128
 13346  0151DC  0100               	movlb	0	; () banked
 13347  0151DE  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
 13348  0151E0  0100               	movlb	0	; () banked
 13349  0151E2  6F7B               	movwf	(??___flge+2)& (0+255),b
 13350  0151E4  0E7F               	movlw	127
 13351  0151E6  0100               	movlb	0	; () banked
 13352  0151E8  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
 13353  0151EA  0100               	movlb	0	; () banked
 13354  0151EC  6F7C               	movwf	(??___flge+3)& (0+255),b
 13355  0151EE  0100               	movlb	0	; () banked
 13356  0151F0  5179               	movf	??___flge& (0+255),w,b
 13357  0151F2  0100               	movlb	0	; () banked
 13358  0151F4  117A               	iorwf	(??___flge+1)& (0+255),w,b
 13359  0151F6  0100               	movlb	0	; () banked
 13360  0151F8  117B               	iorwf	(??___flge+2)& (0+255),w,b
 13361  0151FA  0100               	movlb	0	; () banked
 13362  0151FC  117C               	iorwf	(??___flge+3)& (0+255),w,b
 13363  0151FE  A4D8               	btfss	status,2,c
 13364  015200  D009               	goto	l8527
 13365                           
 13366                           ; BSR set to: 0
 13367  015202  0E00               	movlw	0
 13368  015204  0100               	movlb	0	; () banked
 13369  015206  6F75               	movwf	___flge@ff2& (0+255),b
 13370  015208  0E00               	movlw	0
 13371  01520A  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 13372  01520C  0E00               	movlw	0
 13373  01520E  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 13374  015210  0E00               	movlw	0
 13375  015212  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 13376  015214                     l8527:
 13377                           
 13378                           ; BSR set to: 0
 13379  015214  0100               	movlb	0	; () banked
 13380  015216  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
 13381  015218  D026               	goto	l8531
 13382                           
 13383                           ; BSR set to: 0
 13384  01521A  C071  F079         	movff	___flge@ff1,??___flge
 13385  01521E  C072  F07A         	movff	___flge@ff1+1,??___flge+1
 13386  015222  C073  F07B         	movff	___flge@ff1+2,??___flge+2
 13387  015226  C074  F07C         	movff	___flge@ff1+3,??___flge+3
 13388  01522A  0100               	movlb	0	; () banked
 13389  01522C  1F79               	comf	??___flge& (0+255),f,b
 13390  01522E  1F7A               	comf	(??___flge+1)& (0+255),f,b
 13391  015230  1F7B               	comf	(??___flge+2)& (0+255),f,b
 13392  015232  1F7C               	comf	(??___flge+3)& (0+255),f,b
 13393  015234  2B79               	incf	??___flge& (0+255),f,b
 13394  015236  0E00               	movlw	0
 13395  015238  237A               	addwfc	(??___flge+1)& (0+255),f,b
 13396  01523A  237B               	addwfc	(??___flge+2)& (0+255),f,b
 13397  01523C  237C               	addwfc	(??___flge+3)& (0+255),f,b
 13398  01523E  0E00               	movlw	0
 13399  015240  0100               	movlb	0	; () banked
 13400  015242  2579               	addwf	??___flge& (0+255),w,b
 13401  015244  0100               	movlb	0	; () banked
 13402  015246  6F71               	movwf	___flge@ff1& (0+255),b
 13403  015248  0E00               	movlw	0
 13404  01524A  0100               	movlb	0	; () banked
 13405  01524C  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13406  01524E  0100               	movlb	0	; () banked
 13407  015250  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 13408  015252  0E00               	movlw	0
 13409  015254  0100               	movlb	0	; () banked
 13410  015256  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13411  015258  0100               	movlb	0	; () banked
 13412  01525A  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 13413  01525C  0E80               	movlw	128
 13414  01525E  0100               	movlb	0	; () banked
 13415  015260  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13416  015262  0100               	movlb	0	; () banked
 13417  015264  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 13418  015266                     l8531:
 13419                           
 13420                           ; BSR set to: 0
 13421  015266  0100               	movlb	0	; () banked
 13422  015268  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
 13423  01526A  D026               	goto	l1264
 13424                           
 13425                           ; BSR set to: 0
 13426  01526C  C075  F079         	movff	___flge@ff2,??___flge
 13427  015270  C076  F07A         	movff	___flge@ff2+1,??___flge+1
 13428  015274  C077  F07B         	movff	___flge@ff2+2,??___flge+2
 13429  015278  C078  F07C         	movff	___flge@ff2+3,??___flge+3
 13430  01527C  0100               	movlb	0	; () banked
 13431  01527E  1F79               	comf	??___flge& (0+255),f,b
 13432  015280  1F7A               	comf	(??___flge+1)& (0+255),f,b
 13433  015282  1F7B               	comf	(??___flge+2)& (0+255),f,b
 13434  015284  1F7C               	comf	(??___flge+3)& (0+255),f,b
 13435  015286  2B79               	incf	??___flge& (0+255),f,b
 13436  015288  0E00               	movlw	0
 13437  01528A  237A               	addwfc	(??___flge+1)& (0+255),f,b
 13438  01528C  237B               	addwfc	(??___flge+2)& (0+255),f,b
 13439  01528E  237C               	addwfc	(??___flge+3)& (0+255),f,b
 13440  015290  0E00               	movlw	0
 13441  015292  0100               	movlb	0	; () banked
 13442  015294  2579               	addwf	??___flge& (0+255),w,b
 13443  015296  0100               	movlb	0	; () banked
 13444  015298  6F75               	movwf	___flge@ff2& (0+255),b
 13445  01529A  0E00               	movlw	0
 13446  01529C  0100               	movlb	0	; () banked
 13447  01529E  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13448  0152A0  0100               	movlb	0	; () banked
 13449  0152A2  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 13450  0152A4  0E00               	movlw	0
 13451  0152A6  0100               	movlb	0	; () banked
 13452  0152A8  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13453  0152AA  0100               	movlb	0	; () banked
 13454  0152AC  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 13455  0152AE  0E80               	movlw	128
 13456  0152B0  0100               	movlb	0	; () banked
 13457  0152B2  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13458  0152B4  0100               	movlb	0	; () banked
 13459  0152B6  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 13460  0152B8                     l1264:
 13461                           
 13462                           ; BSR set to: 0
 13463  0152B8  0E00               	movlw	0
 13464  0152BA  0100               	movlb	0	; () banked
 13465  0152BC  1B71               	xorwf	___flge@ff1& (0+255),f,b
 13466  0152BE  0E00               	movlw	0
 13467  0152C0  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13468  0152C2  0E00               	movlw	0
 13469  0152C4  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13470  0152C6  0E80               	movlw	128
 13471  0152C8  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13472  0152CA  0E00               	movlw	0
 13473  0152CC  0100               	movlb	0	; () banked
 13474  0152CE  1B75               	xorwf	___flge@ff2& (0+255),f,b
 13475  0152D0  0E00               	movlw	0
 13476  0152D2  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13477  0152D4  0E00               	movlw	0
 13478  0152D6  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13479  0152D8  0E80               	movlw	128
 13480  0152DA  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13481  0152DC  0100               	movlb	0	; () banked
 13482  0152DE  5175               	movf	___flge@ff2& (0+255),w,b
 13483  0152E0  0100               	movlb	0	; () banked
 13484  0152E2  5D71               	subwf	___flge@ff1& (0+255),w,b
 13485  0152E4  0100               	movlb	0	; () banked
 13486  0152E6  5176               	movf	(___flge@ff2+1)& (0+255),w,b
 13487  0152E8  0100               	movlb	0	; () banked
 13488  0152EA  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13489  0152EC  0100               	movlb	0	; () banked
 13490  0152EE  5177               	movf	(___flge@ff2+2)& (0+255),w,b
 13491  0152F0  0100               	movlb	0	; () banked
 13492  0152F2  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13493  0152F4  0100               	movlb	0	; () banked
 13494  0152F6  5178               	movf	(___flge@ff2+3)& (0+255),w,b
 13495  0152F8  0100               	movlb	0	; () banked
 13496  0152FA  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13497  0152FC  B0D8               	btfsc	status,0,c
 13498  0152FE  D002               	goto	l8537
 13499                           
 13500                           ; BSR set to: 0
 13501  015300  90D8               	bcf	status,0,c
 13502  015302  0012               	return	
 13503  015304                     l8537:
 13504                           
 13505                           ; BSR set to: 0
 13506  015304  80D8               	bsf	status,0,c
 13507                           
 13508                           ; BSR set to: 0
 13509  015306  0012               	return	
 13510  015308                     __end_of___flge:
 13511                           	opt stack 0
 13512                           tblptru	equ	0xFF8
 13513                           tblptrh	equ	0xFF7
 13514                           tblptrl	equ	0xFF6
 13515                           tablat	equ	0xFF5
 13516                           prodh	equ	0xFF4
 13517                           prodl	equ	0xFF3
 13518                           intcon	equ	0xFF2
 13519                           postinc0	equ	0xFEE
 13520                           wreg	equ	0xFE8
 13521                           indf2	equ	0xFDF
 13522                           postinc2	equ	0xFDE
 13523                           fsr2h	equ	0xFDA
 13524                           fsr2l	equ	0xFD9
 13525                           status	equ	0xFD8
 13526                           
 13527 ;; *************** function ___fldiv *****************
 13528 ;; Defined at:
 13529 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 13530 ;; Parameters:    Size  Location     Type
 13531 ;;  b               4   31[BANK0 ] unsigned char 
 13532 ;;  a               4   35[BANK0 ] unsigned char 
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;  grs             4   50[BANK0 ] unsigned long 
 13535 ;;  rem             4   44[BANK0 ] unsigned long 
 13536 ;;  new_exp         2   48[BANK0 ] int 
 13537 ;;  aexp            1   55[BANK0 ] unsigned char 
 13538 ;;  bexp            1   54[BANK0 ] unsigned char 
 13539 ;;  sign            1   43[BANK0 ] unsigned char 
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  4   31[BANK0 ] unsigned char 
 13542 ;; Registers used:
 13543 ;;		wreg, status,2, status,0
 13544 ;; Tracked objects:
 13545 ;;		On entry : 0/0
 13546 ;;		On exit  : 0/0
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13549 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13551 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13553 ;;Total ram usage:       25 bytes
 13554 ;; Hardware stack levels used:    1
 13555 ;; Hardware stack levels required when called:    3
 13556 ;; This function calls:
 13557 ;;		Nothing
 13558 ;; This function is called by:
 13559 ;;		_LCD_Handler
 13560 ;; This function uses a non-reentrant model
 13561 ;;
 13562                           
 13563                           	psect	text27
 13564  013C88                     __ptext27:
 13565                           	opt stack 0
 13566  013C88                     ___fldiv:
 13567                           	opt stack 26
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;incstack = 0
 13571  013C88  0100               	movlb	0	; () banked
 13572  013C8A  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13573  013C8C  0B80               	andlw	128
 13574  013C8E  0100               	movlb	0	; () banked
 13575  013C90  6F8B               	movwf	___fldiv@sign& (0+255),b
 13576  013C92  0100               	movlb	0	; () banked
 13577  013C94  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13578  013C96  2582               	addwf	(___fldiv@b+3)& (0+255),w,b
 13579  013C98  0100               	movlb	0	; () banked
 13580  013C9A  6F96               	movwf	___fldiv@bexp& (0+255),b
 13581                           
 13582                           ; BSR set to: 0
 13583  013C9C  0100               	movlb	0	; () banked
 13584  013C9E  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 13585  013CA0  D002               	goto	l6721
 13586                           
 13587                           ; BSR set to: 0
 13588  013CA2  0100               	movlb	0	; () banked
 13589  013CA4  8196               	bsf	___fldiv@bexp& (0+255),0,b
 13590  013CA6                     l6721:
 13591                           
 13592                           ; BSR set to: 0
 13593  013CA6  0100               	movlb	0	; () banked
 13594  013CA8  5196               	movf	___fldiv@bexp& (0+255),w,b
 13595  013CAA  0100               	movlb	0	; () banked
 13596  013CAC  B4D8               	btfsc	status,2,c
 13597  013CAE  D012               	goto	l6731
 13598                           
 13599                           ; BSR set to: 0
 13600  013CB0  0100               	movlb	0	; () banked
 13601  013CB2  2996               	incf	___fldiv@bexp& (0+255),w,b
 13602  013CB4  A4D8               	btfss	status,2,c
 13603  013CB6  D009               	goto	l6727
 13604                           
 13605                           ; BSR set to: 0
 13606  013CB8  0E00               	movlw	0
 13607  013CBA  0100               	movlb	0	; () banked
 13608  013CBC  6F7F               	movwf	___fldiv@b& (0+255),b
 13609  013CBE  0E00               	movlw	0
 13610  013CC0  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13611  013CC2  0E00               	movlw	0
 13612  013CC4  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13613  013CC6  0E00               	movlw	0
 13614  013CC8  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13615  013CCA                     l6727:
 13616                           
 13617                           ; BSR set to: 0
 13618  013CCA  0100               	movlb	0	; () banked
 13619  013CCC  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 13620                           
 13621                           ; BSR set to: 0
 13622  013CCE  0E00               	movlw	0
 13623  013CD0  0100               	movlb	0	; () banked
 13624  013CD2  D008               	goto	L15
 13625  013CD4                     l6731:
 13626                           
 13627                           ; BSR set to: 0
 13628  013CD4  0E00               	movlw	0
 13629  013CD6  0100               	movlb	0	; () banked
 13630  013CD8  6F7F               	movwf	___fldiv@b& (0+255),b
 13631  013CDA  0E00               	movlw	0
 13632  013CDC  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13633  013CDE  0E00               	movlw	0
 13634  013CE0  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13635  013CE2  0E00               	movlw	0
 13636  013CE4                     L15:
 13637  013CE4  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13638                           
 13639                           ; BSR set to: 0
 13640                           
 13641                           ; BSR set to: 0
 13642  013CE6  0100               	movlb	0	; () banked
 13643  013CE8  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13644  013CEA  0B80               	andlw	128
 13645  013CEC  0100               	movlb	0	; () banked
 13646  013CEE  1B8B               	xorwf	___fldiv@sign& (0+255),f,b
 13647                           
 13648                           ; BSR set to: 0
 13649  013CF0  0100               	movlb	0	; () banked
 13650  013CF2  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13651  013CF4  2586               	addwf	(___fldiv@a+3)& (0+255),w,b
 13652  013CF6  0100               	movlb	0	; () banked
 13653  013CF8  6F97               	movwf	___fldiv@aexp& (0+255),b
 13654                           
 13655                           ; BSR set to: 0
 13656  013CFA  0100               	movlb	0	; () banked
 13657  013CFC  AF85               	btfss	(___fldiv@a+2)& (0+255),7,b
 13658  013CFE  D002               	goto	l6741
 13659                           
 13660                           ; BSR set to: 0
 13661  013D00  0100               	movlb	0	; () banked
 13662  013D02  8197               	bsf	___fldiv@aexp& (0+255),0,b
 13663  013D04                     l6741:
 13664                           
 13665                           ; BSR set to: 0
 13666  013D04  0100               	movlb	0	; () banked
 13667  013D06  5197               	movf	___fldiv@aexp& (0+255),w,b
 13668  013D08  0100               	movlb	0	; () banked
 13669  013D0A  B4D8               	btfsc	status,2,c
 13670  013D0C  D012               	goto	l6751
 13671                           
 13672                           ; BSR set to: 0
 13673  013D0E  0100               	movlb	0	; () banked
 13674  013D10  2997               	incf	___fldiv@aexp& (0+255),w,b
 13675  013D12  A4D8               	btfss	status,2,c
 13676  013D14  D009               	goto	l6747
 13677                           
 13678                           ; BSR set to: 0
 13679  013D16  0E00               	movlw	0
 13680  013D18  0100               	movlb	0	; () banked
 13681  013D1A  6F83               	movwf	___fldiv@a& (0+255),b
 13682  013D1C  0E00               	movlw	0
 13683  013D1E  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 13684  013D20  0E00               	movlw	0
 13685  013D22  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 13686  013D24  0E00               	movlw	0
 13687  013D26  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 13688  013D28                     l6747:
 13689                           
 13690                           ; BSR set to: 0
 13691  013D28  0100               	movlb	0	; () banked
 13692  013D2A  8F85               	bsf	(___fldiv@a+2)& (0+255),7,b
 13693                           
 13694                           ; BSR set to: 0
 13695  013D2C  0E00               	movlw	0
 13696  013D2E  0100               	movlb	0	; () banked
 13697  013D30  D008               	goto	L16
 13698  013D32                     l6751:
 13699                           
 13700                           ; BSR set to: 0
 13701  013D32  0E00               	movlw	0
 13702  013D34  0100               	movlb	0	; () banked
 13703  013D36  6F83               	movwf	___fldiv@a& (0+255),b
 13704  013D38  0E00               	movlw	0
 13705  013D3A  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 13706  013D3C  0E00               	movlw	0
 13707  013D3E  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 13708  013D40  0E00               	movlw	0
 13709  013D42                     L16:
 13710  013D42  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 13711                           
 13712                           ; BSR set to: 0
 13713                           
 13714                           ; BSR set to: 0
 13715  013D44  0100               	movlb	0	; () banked
 13716  013D46  5183               	movf	___fldiv@a& (0+255),w,b
 13717  013D48  0100               	movlb	0	; () banked
 13718  013D4A  1184               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13719  013D4C  0100               	movlb	0	; () banked
 13720  013D4E  1185               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13721  013D50  0100               	movlb	0	; () banked
 13722  013D52  1186               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13723  013D54  A4D8               	btfss	status,2,c
 13724  013D56  D017               	goto	l6763
 13725                           
 13726                           ; BSR set to: 0
 13727  013D58  0E00               	movlw	0
 13728  013D5A  0100               	movlb	0	; () banked
 13729  013D5C  6F7F               	movwf	___fldiv@b& (0+255),b
 13730  013D5E  0E00               	movlw	0
 13731  013D60  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13732  013D62  0E00               	movlw	0
 13733  013D64  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13734  013D66  0E00               	movlw	0
 13735  013D68  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13736                           
 13737                           ; BSR set to: 0
 13738  013D6A  0100               	movlb	0	; () banked
 13739  013D6C  0E80               	movlw	128
 13740  013D6E  1381               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13741  013D70  0E7F               	movlw	127
 13742  013D72  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13743                           
 13744                           ; BSR set to: 0
 13745  013D74  C07F  F07F         	movff	___fldiv@b,?___fldiv
 13746  013D78  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 13747  013D7C  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 13748  013D80  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 13749                           
 13750                           ; BSR set to: 0
 13751  013D84  0012               	return	
 13752  013D86                     l6763:
 13753                           
 13754                           ; BSR set to: 0
 13755  013D86  0100               	movlb	0	; () banked
 13756  013D88  5196               	movf	___fldiv@bexp& (0+255),w,b
 13757  013D8A  0100               	movlb	0	; () banked
 13758  013D8C  A4D8               	btfss	status,2,c
 13759  013D8E  D012               	goto	l6771
 13760                           
 13761                           ; BSR set to: 0
 13762  013D90  0E00               	movlw	0
 13763  013D92  0100               	movlb	0	; () banked
 13764  013D94  6F7F               	movwf	___fldiv@b& (0+255),b
 13765  013D96  0E00               	movlw	0
 13766  013D98  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13767  013D9A  0E00               	movlw	0
 13768  013D9C  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13769  013D9E  0E00               	movlw	0
 13770  013DA0  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13771                           
 13772                           ; BSR set to: 0
 13773  013DA2  C07F  F07F         	movff	___fldiv@b,?___fldiv
 13774  013DA6  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 13775  013DAA  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 13776  013DAE  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 13777                           
 13778                           ; BSR set to: 0
 13779  013DB2  0012               	return	
 13780  013DB4                     l6771:
 13781                           
 13782                           ; BSR set to: 0
 13783  013DB4  0100               	movlb	0	; () banked
 13784  013DB6  5197               	movf	___fldiv@aexp& (0+255),w,b
 13785  013DB8  0100               	movlb	0	; () banked
 13786  013DBA  6F87               	movwf	??___fldiv& (0+255),b
 13787  013DBC  6B88               	clrf	(??___fldiv+1)& (0+255),b
 13788  013DBE  0100               	movlb	0	; () banked
 13789  013DC0  1F87               	comf	??___fldiv& (0+255),f,b
 13790  013DC2  1F88               	comf	(??___fldiv+1)& (0+255),f,b
 13791  013DC4  4B87               	infsnz	??___fldiv& (0+255),f,b
 13792  013DC6  2B88               	incf	(??___fldiv+1)& (0+255),f,b
 13793  013DC8  0100               	movlb	0	; () banked
 13794  013DCA  5196               	movf	___fldiv@bexp& (0+255),w,b
 13795  013DCC  0100               	movlb	0	; () banked
 13796  013DCE  6F89               	movwf	(??___fldiv+2)& (0+255),b
 13797  013DD0  6B8A               	clrf	(??___fldiv+3)& (0+255),b
 13798  013DD2  0100               	movlb	0	; () banked
 13799  013DD4  5187               	movf	??___fldiv& (0+255),w,b
 13800  013DD6  0100               	movlb	0	; () banked
 13801  013DD8  2789               	addwf	(??___fldiv+2)& (0+255),f,b
 13802  013DDA  0100               	movlb	0	; () banked
 13803  013DDC  5188               	movf	(??___fldiv+1)& (0+255),w,b
 13804  013DDE  0100               	movlb	0	; () banked
 13805  013DE0  238A               	addwfc	(??___fldiv+3)& (0+255),f,b
 13806  013DE2  0E7F               	movlw	127
 13807  013DE4  0100               	movlb	0	; () banked
 13808  013DE6  2589               	addwf	(??___fldiv+2)& (0+255),w,b
 13809  013DE8  0100               	movlb	0	; () banked
 13810  013DEA  6F90               	movwf	___fldiv@new_exp& (0+255),b
 13811  013DEC  0E00               	movlw	0
 13812  013DEE  0100               	movlb	0	; () banked
 13813  013DF0  218A               	addwfc	(??___fldiv+3)& (0+255),w,b
 13814  013DF2  0100               	movlb	0	; () banked
 13815  013DF4  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13816                           
 13817                           ; BSR set to: 0
 13818  013DF6  C07F  F08C         	movff	___fldiv@b,___fldiv@rem
 13819  013DFA  C080  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
 13820  013DFE  C081  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
 13821  013E02  C082  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
 13822                           
 13823                           ; BSR set to: 0
 13824  013E06  0E00               	movlw	0
 13825  013E08  0100               	movlb	0	; () banked
 13826  013E0A  6F7F               	movwf	___fldiv@b& (0+255),b
 13827  013E0C  0E00               	movlw	0
 13828  013E0E  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13829  013E10  0E00               	movlw	0
 13830  013E12  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13831  013E14  0E00               	movlw	0
 13832  013E16  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13833                           
 13834                           ; BSR set to: 0
 13835  013E18  0E00               	movlw	0
 13836  013E1A  0100               	movlb	0	; () banked
 13837  013E1C  6F92               	movwf	___fldiv@grs& (0+255),b
 13838  013E1E  0E00               	movlw	0
 13839  013E20  6F93               	movwf	(___fldiv@grs+1)& (0+255),b
 13840  013E22  0E00               	movlw	0
 13841  013E24  6F94               	movwf	(___fldiv@grs+2)& (0+255),b
 13842  013E26  0E00               	movlw	0
 13843  013E28  6F95               	movwf	(___fldiv@grs+3)& (0+255),b
 13844                           
 13845                           ; BSR set to: 0
 13846  013E2A  0E00               	movlw	0
 13847  013E2C  0100               	movlb	0	; () banked
 13848  013E2E  6F97               	movwf	___fldiv@aexp& (0+255),b
 13849  013E30  D042               	goto	l1597
 13850  013E32                     l6781:
 13851                           
 13852                           ; BSR set to: 0
 13853  013E32  0100               	movlb	0	; () banked
 13854  013E34  5197               	movf	___fldiv@aexp& (0+255),w,b
 13855  013E36  0100               	movlb	0	; () banked
 13856  013E38  B4D8               	btfsc	status,2,c
 13857  013E3A  D017               	goto	l6789
 13858                           
 13859                           ; BSR set to: 0
 13860  013E3C  0100               	movlb	0	; () banked
 13861  013E3E  90D8               	bcf	status,0,c
 13862  013E40  378C               	rlcf	___fldiv@rem& (0+255),f,b
 13863  013E42  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13864  013E44  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13865  013E46  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13866  013E48  0100               	movlb	0	; () banked
 13867  013E4A  90D8               	bcf	status,0,c
 13868  013E4C  377F               	rlcf	___fldiv@b& (0+255),f,b
 13869  013E4E  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13870  013E50  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13871  013E52  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13872                           
 13873                           ; BSR set to: 0
 13874  013E54  0100               	movlb	0	; () banked
 13875  013E56  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13876  013E58  D002               	goto	l1600
 13877                           
 13878                           ; BSR set to: 0
 13879  013E5A  0100               	movlb	0	; () banked
 13880  013E5C  817F               	bsf	___fldiv@b& (0+255),0,b
 13881  013E5E                     l1600:
 13882                           
 13883                           ; BSR set to: 0
 13884  013E5E  0100               	movlb	0	; () banked
 13885  013E60  90D8               	bcf	status,0,c
 13886  013E62  3792               	rlcf	___fldiv@grs& (0+255),f,b
 13887  013E64  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13888  013E66  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13889  013E68  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13890  013E6A                     l6789:
 13891                           
 13892                           ; BSR set to: 0
 13893  013E6A  0100               	movlb	0	; () banked
 13894  013E6C  5183               	movf	___fldiv@a& (0+255),w,b
 13895  013E6E  0100               	movlb	0	; () banked
 13896  013E70  5D8C               	subwf	___fldiv@rem& (0+255),w,b
 13897  013E72  0100               	movlb	0	; () banked
 13898  013E74  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 13899  013E76  0100               	movlb	0	; () banked
 13900  013E78  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13901  013E7A  0100               	movlb	0	; () banked
 13902  013E7C  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 13903  013E7E  0100               	movlb	0	; () banked
 13904  013E80  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13905  013E82  0100               	movlb	0	; () banked
 13906  013E84  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13907  013E86  0100               	movlb	0	; () banked
 13908  013E88  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13909  013E8A  A0D8               	btfss	status,0,c
 13910  013E8C  D012               	goto	l6795
 13911                           
 13912                           ; BSR set to: 0
 13913  013E8E  0100               	movlb	0	; () banked
 13914  013E90  8D95               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13915                           
 13916                           ; BSR set to: 0
 13917  013E92  0100               	movlb	0	; () banked
 13918  013E94  5183               	movf	___fldiv@a& (0+255),w,b
 13919  013E96  0100               	movlb	0	; () banked
 13920  013E98  5F8C               	subwf	___fldiv@rem& (0+255),f,b
 13921  013E9A  0100               	movlb	0	; () banked
 13922  013E9C  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 13923  013E9E  0100               	movlb	0	; () banked
 13924  013EA0  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13925  013EA2  0100               	movlb	0	; () banked
 13926  013EA4  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 13927  013EA6  0100               	movlb	0	; () banked
 13928  013EA8  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13929  013EAA  0100               	movlb	0	; () banked
 13930  013EAC  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13931  013EAE  0100               	movlb	0	; () banked
 13932  013EB0  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13933  013EB2                     l6795:
 13934                           
 13935                           ; BSR set to: 0
 13936  013EB2  0100               	movlb	0	; () banked
 13937  013EB4  2B97               	incf	___fldiv@aexp& (0+255),f,b
 13938  013EB6                     l1597:
 13939                           
 13940                           ; BSR set to: 0
 13941  013EB6  0E19               	movlw	25
 13942  013EB8  0100               	movlb	0	; () banked
 13943  013EBA  6597               	cpfsgt	___fldiv@aexp& (0+255),b
 13944  013EBC  D7BA               	goto	l6781
 13945                           
 13946                           ; BSR set to: 0
 13947                           
 13948                           ; BSR set to: 0
 13949  013EBE  0100               	movlb	0	; () banked
 13950  013EC0  518C               	movf	___fldiv@rem& (0+255),w,b
 13951  013EC2  0100               	movlb	0	; () banked
 13952  013EC4  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13953  013EC6  0100               	movlb	0	; () banked
 13954  013EC8  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13955  013ECA  0100               	movlb	0	; () banked
 13956  013ECC  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13957  013ECE  B4D8               	btfsc	status,2,c
 13958  013ED0  D018               	goto	l6807
 13959                           
 13960                           ; BSR set to: 0
 13961  013ED2  0100               	movlb	0	; () banked
 13962  013ED4  8192               	bsf	___fldiv@grs& (0+255),0,b
 13963                           
 13964                           ; BSR set to: 0
 13965  013ED6  D015               	goto	l6807
 13966  013ED8                     l6801:
 13967                           
 13968                           ; BSR set to: 0
 13969  013ED8  0100               	movlb	0	; () banked
 13970  013EDA  90D8               	bcf	status,0,c
 13971  013EDC  377F               	rlcf	___fldiv@b& (0+255),f,b
 13972  013EDE  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13973  013EE0  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13974  013EE2  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13975                           
 13976                           ; BSR set to: 0
 13977  013EE4  0100               	movlb	0	; () banked
 13978  013EE6  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13979  013EE8  D002               	goto	l1606
 13980                           
 13981                           ; BSR set to: 0
 13982  013EEA  0100               	movlb	0	; () banked
 13983  013EEC  817F               	bsf	___fldiv@b& (0+255),0,b
 13984  013EEE                     l1606:
 13985                           
 13986                           ; BSR set to: 0
 13987  013EEE  0100               	movlb	0	; () banked
 13988  013EF0  90D8               	bcf	status,0,c
 13989  013EF2  3792               	rlcf	___fldiv@grs& (0+255),f,b
 13990  013EF4  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13991  013EF6  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13992  013EF8  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13993  013EFA  0100               	movlb	0	; () banked
 13994  013EFC  0790               	decf	___fldiv@new_exp& (0+255),f,b
 13995  013EFE  A0D8               	btfss	status,0,c
 13996  013F00  0791               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13997  013F02                     l6807:
 13998                           
 13999                           ; BSR set to: 0
 14000  013F02  0100               	movlb	0	; () banked
 14001  013F04  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 14002  013F06  D7E8               	goto	l6801
 14003                           
 14004                           ; BSR set to: 0
 14005                           
 14006                           ; BSR set to: 0
 14007  013F08  0E00               	movlw	0
 14008  013F0A  0100               	movlb	0	; () banked
 14009  013F0C  6F97               	movwf	___fldiv@aexp& (0+255),b
 14010                           
 14011                           ; BSR set to: 0
 14012  013F0E  0100               	movlb	0	; () banked
 14013  013F10  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14014  013F12  D024               	goto	l1608
 14015                           
 14016                           ; BSR set to: 0
 14017  013F14  0EFF               	movlw	255
 14018  013F16  0100               	movlb	0	; () banked
 14019  013F18  1592               	andwf	___fldiv@grs& (0+255),w,b
 14020  013F1A  0100               	movlb	0	; () banked
 14021  013F1C  6F87               	movwf	??___fldiv& (0+255),b
 14022  013F1E  0EFF               	movlw	255
 14023  013F20  0100               	movlb	0	; () banked
 14024  013F22  1593               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14025  013F24  0100               	movlb	0	; () banked
 14026  013F26  6F88               	movwf	(??___fldiv+1)& (0+255),b
 14027  013F28  0EFF               	movlw	255
 14028  013F2A  0100               	movlb	0	; () banked
 14029  013F2C  1594               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14030  013F2E  0100               	movlb	0	; () banked
 14031  013F30  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14032  013F32  0E7F               	movlw	127
 14033  013F34  0100               	movlb	0	; () banked
 14034  013F36  1595               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14035  013F38  0100               	movlb	0	; () banked
 14036  013F3A  6F8A               	movwf	(??___fldiv+3)& (0+255),b
 14037  013F3C  0100               	movlb	0	; () banked
 14038  013F3E  5187               	movf	??___fldiv& (0+255),w,b
 14039  013F40  0100               	movlb	0	; () banked
 14040  013F42  1188               	iorwf	(??___fldiv+1)& (0+255),w,b
 14041  013F44  0100               	movlb	0	; () banked
 14042  013F46  1189               	iorwf	(??___fldiv+2)& (0+255),w,b
 14043  013F48  0100               	movlb	0	; () banked
 14044  013F4A  118A               	iorwf	(??___fldiv+3)& (0+255),w,b
 14045  013F4C  A4D8               	btfss	status,2,c
 14046  013F4E  D003               	goto	l6817
 14047                           
 14048                           ; BSR set to: 0
 14049                           
 14050                           ; BSR set to: 0
 14051  013F50  0100               	movlb	0	; () banked
 14052  013F52  A17F               	btfss	___fldiv@b& (0+255),0,b
 14053  013F54  D003               	goto	l1608
 14054  013F56                     l6817:
 14055                           
 14056                           ; BSR set to: 0
 14057  013F56  0E01               	movlw	1
 14058  013F58  0100               	movlb	0	; () banked
 14059  013F5A  6F97               	movwf	___fldiv@aexp& (0+255),b
 14060  013F5C                     l1608:
 14061                           
 14062                           ; BSR set to: 0
 14063  013F5C  0100               	movlb	0	; () banked
 14064  013F5E  5197               	movf	___fldiv@aexp& (0+255),w,b
 14065  013F60  0100               	movlb	0	; () banked
 14066  013F62  B4D8               	btfsc	status,2,c
 14067  013F64  D023               	goto	l6827
 14068                           
 14069                           ; BSR set to: 0
 14070  013F66  0E01               	movlw	1
 14071  013F68  0100               	movlb	0	; () banked
 14072  013F6A  277F               	addwf	___fldiv@b& (0+255),f,b
 14073  013F6C  0E00               	movlw	0
 14074  013F6E  2380               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14075  013F70  2381               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14076  013F72  2382               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14077                           
 14078                           ; BSR set to: 0
 14079  013F74  0100               	movlb	0	; () banked
 14080  013F76  A182               	btfss	(___fldiv@b+3)& (0+255),0,b
 14081  013F78  D019               	goto	l6827
 14082                           
 14083                           ; BSR set to: 0
 14084  013F7A  C07F  F087         	movff	___fldiv@b,??___fldiv
 14085  013F7E  C080  F088         	movff	___fldiv@b+1,??___fldiv+1
 14086  013F82  C081  F089         	movff	___fldiv@b+2,??___fldiv+2
 14087  013F86  C082  F08A         	movff	___fldiv@b+3,??___fldiv+3
 14088  013F8A  0100               	movlb	0	; () banked
 14089  013F8C  358A               	rlcf	(??___fldiv+3)& (0+255),w,b
 14090  013F8E  338A               	rrcf	(??___fldiv+3)& (0+255),f,b
 14091  013F90  3389               	rrcf	(??___fldiv+2)& (0+255),f,b
 14092  013F92  3388               	rrcf	(??___fldiv+1)& (0+255),f,b
 14093  013F94  3387               	rrcf	??___fldiv& (0+255),f,b
 14094  013F96  C087  F07F         	movff	??___fldiv,___fldiv@b
 14095  013F9A  C088  F080         	movff	??___fldiv+1,___fldiv@b+1
 14096  013F9E  C089  F081         	movff	??___fldiv+2,___fldiv@b+2
 14097  013FA2  C08A  F082         	movff	??___fldiv+3,___fldiv@b+3
 14098                           
 14099                           ; BSR set to: 0
 14100  013FA6  0100               	movlb	0	; () banked
 14101  013FA8  4B90               	infsnz	___fldiv@new_exp& (0+255),f,b
 14102  013FAA  2B91               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14103  013FAC                     l6827:
 14104                           
 14105                           ; BSR set to: 0
 14106  013FAC  0100               	movlb	0	; () banked
 14107  013FAE  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14108  013FB0  D014               	goto	l6831
 14109  013FB2  0100               	movlb	0	; () banked
 14110  013FB4  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14111  013FB6  E104               	bnz	u8600
 14112  013FB8  0100               	movlb	0	; () banked
 14113  013FBA  2990               	incf	___fldiv@new_exp& (0+255),w,b
 14114  013FBC  A0D8               	btfss	status,0,c
 14115  013FBE  D00D               	goto	l6831
 14116  013FC0                     u8600:
 14117                           
 14118                           ; BSR set to: 0
 14119  013FC0  0E00               	movlw	0
 14120  013FC2  0100               	movlb	0	; () banked
 14121  013FC4  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14122  013FC6  6990               	setf	___fldiv@new_exp& (0+255),b
 14123  013FC8  0E00               	movlw	0
 14124  013FCA  0100               	movlb	0	; () banked
 14125  013FCC  6F7F               	movwf	___fldiv@b& (0+255),b
 14126  013FCE  0E00               	movlw	0
 14127  013FD0  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14128  013FD2  0E00               	movlw	0
 14129  013FD4  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14130  013FD6  0E00               	movlw	0
 14131  013FD8  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14132  013FDA                     l6831:
 14133                           
 14134                           ; BSR set to: 0
 14135  013FDA  0100               	movlb	0	; () banked
 14136  013FDC  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14137  013FDE  D007               	goto	l6833
 14138  013FE0  0100               	movlb	0	; () banked
 14139  013FE2  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14140  013FE4  E115               	bnz	l6835
 14141  013FE6  0100               	movlb	0	; () banked
 14142  013FE8  0590               	decf	___fldiv@new_exp& (0+255),w,b
 14143  013FEA  B0D8               	btfsc	status,0,c
 14144  013FEC  D011               	goto	l6835
 14145  013FEE                     l6833:
 14146                           
 14147                           ; BSR set to: 0
 14148  013FEE  0E00               	movlw	0
 14149  013FF0  0100               	movlb	0	; () banked
 14150  013FF2  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14151  013FF4  0E00               	movlw	0
 14152  013FF6  6F90               	movwf	___fldiv@new_exp& (0+255),b
 14153  013FF8  0E00               	movlw	0
 14154  013FFA  0100               	movlb	0	; () banked
 14155  013FFC  6F7F               	movwf	___fldiv@b& (0+255),b
 14156  013FFE  0E00               	movlw	0
 14157  014000  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14158  014002  0E00               	movlw	0
 14159  014004  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14160  014006  0E00               	movlw	0
 14161  014008  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14162  01400A  0E00               	movlw	0
 14163  01400C  0100               	movlb	0	; () banked
 14164  01400E  6F8B               	movwf	___fldiv@sign& (0+255),b
 14165  014010                     l6835:
 14166                           
 14167                           ; BSR set to: 0
 14168  014010  C090  F096         	movff	___fldiv@new_exp,___fldiv@bexp
 14169                           
 14170                           ; BSR set to: 0
 14171  014014  0100               	movlb	0	; () banked
 14172  014016  A196               	btfss	___fldiv@bexp& (0+255),0,b
 14173  014018  D003               	goto	l6841
 14174                           
 14175                           ; BSR set to: 0
 14176  01401A  0100               	movlb	0	; () banked
 14177  01401C  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 14178  01401E  D002               	goto	l6843
 14179  014020                     l6841:
 14180                           
 14181                           ; BSR set to: 0
 14182  014020  0100               	movlb	0	; () banked
 14183  014022  9F81               	bcf	(___fldiv@b+2)& (0+255),7,b
 14184  014024                     l6843:
 14185                           
 14186                           ; BSR set to: 0
 14187  014024  0100               	movlb	0	; () banked
 14188  014026  90D8               	bcf	status,0,c
 14189  014028  3196               	rrcf	___fldiv@bexp& (0+255),w,b
 14190  01402A  0100               	movlb	0	; () banked
 14191  01402C  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14192                           
 14193                           ; BSR set to: 0
 14194  01402E  0100               	movlb	0	; () banked
 14195  014030  518B               	movf	___fldiv@sign& (0+255),w,b
 14196  014032  0100               	movlb	0	; () banked
 14197  014034  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14198                           
 14199                           ; BSR set to: 0
 14200  014036  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14201  01403A  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14202  01403E  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14203  014042  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14204  014046  0012               	return	
 14205  014048                     __end_of___fldiv:
 14206                           	opt stack 0
 14207                           tblptru	equ	0xFF8
 14208                           tblptrh	equ	0xFF7
 14209                           tblptrl	equ	0xFF6
 14210                           tablat	equ	0xFF5
 14211                           prodh	equ	0xFF4
 14212                           prodl	equ	0xFF3
 14213                           intcon	equ	0xFF2
 14214                           postinc0	equ	0xFEE
 14215                           wreg	equ	0xFE8
 14216                           indf2	equ	0xFDF
 14217                           postinc2	equ	0xFDE
 14218                           fsr2h	equ	0xFDA
 14219                           fsr2l	equ	0xFD9
 14220                           status	equ	0xFD8
 14221                           
 14222 ;; *************** function _LCD_write_integer *****************
 14223 ;; Defined at:
 14224 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;  value           2   41[BANK0 ] int 
 14227 ;;  number_of_di    1   43[BANK0 ] unsigned char 
 14228 ;;  zero_cleanin    1   44[BANK0 ] unsigned char 
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;  convertedInt    6   50[BANK0 ] unsigned char [6]
 14231 ;;  index           1   56[BANK0 ] unsigned char 
 14232 ;; Return value:  Size  Location     Type
 14233 ;;		None               void
 14234 ;; Registers used:
 14235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14242 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14243 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14244 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14245 ;;Total ram usage:       16 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:    9
 14248 ;; This function calls:
 14249 ;;		_LCD_write_string
 14250 ;;		_itoa
 14251 ;; This function is called by:
 14252 ;;		_LCD_Handler
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text28
 14257  014C6C                     __ptext28:
 14258                           	opt stack 0
 14259  014C6C                     _LCD_write_integer:
 14260                           	opt stack 20
 14261                           
 14262                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;incstack = 0
 14266  014C6C  EE21  F007         	lfsr	2,LCD_write_integer@F17272
 14267  014C70  EE10  F092         	lfsr	1,LCD_write_integer@convertedInt
 14268  014C74  0E05               	movlw	5
 14269  014C76                     u11621:
 14270  014C76  CFDB FFE3          	movff	plusw2,plusw1
 14271  014C7A  06E8               	decf	wreg,f,c
 14272  014C7C  E2FC               	bc	u11621
 14273                           
 14274                           ;src\LCD_44780.c: 216: unsigned char index;
 14275                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 14276  014C7E  0E92               	movlw	low LCD_write_integer@convertedInt
 14277  014C80  0100               	movlb	0	; () banked
 14278  014C82  6F81               	movwf	itoa@buf& (0+255),b
 14279  014C84  0E00               	movlw	high LCD_write_integer@convertedInt
 14280  014C86  0100               	movlb	0	; () banked
 14281  014C88  6F82               	movwf	(itoa@buf+1)& (0+255),b
 14282  014C8A  C089  F083         	movff	LCD_write_integer@value,itoa@val
 14283  014C8E  C08A  F084         	movff	LCD_write_integer@value+1,itoa@val+1
 14284  014C92  0E00               	movlw	0
 14285  014C94  0100               	movlb	0	; () banked
 14286  014C96  6F86               	movwf	(itoa@base+1)& (0+255),b
 14287  014C98  0E0A               	movlw	10
 14288  014C9A  6F85               	movwf	itoa@base& (0+255),b
 14289  014C9C  ECAF  F0B0         	call	_itoa	;wreg free
 14290                           
 14291                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 14292  014CA0  0100               	movlb	0	; () banked
 14293  014CA2  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14294  014CA4  0100               	movlb	0	; () banked
 14295  014CA6  B4D8               	btfsc	status,2,c
 14296  014CA8  D0B8               	goto	l8713
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 14300  014CAA  0100               	movlb	0	; () banked
 14301  014CAC  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14302  014CAE  0D01               	mullw	1
 14303  014CB0  0E92               	movlw	low LCD_write_integer@convertedInt
 14304  014CB2  24F3               	addwf	prodl,w,c
 14305  014CB4  6ED9               	movwf	fsr2l,c
 14306  014CB6  0E00               	movlw	high LCD_write_integer@convertedInt
 14307  014CB8  20F4               	addwfc	prodh,w,c
 14308  014CBA  6EDA               	movwf	fsr2h,c
 14309  014CBC  0E00               	movlw	0
 14310  014CBE  6EDF               	movwf	indf2,c
 14311                           
 14312                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14313  014CC0  D070               	goto	l8709
 14314  014CC2                     l8691:
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14318  014CC2  0100               	movlb	0	; () banked
 14319  014CC4  058B               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14320  014CC6  0100               	movlb	0	; () banked
 14321  014CC8  6F98               	movwf	LCD_write_integer@index& (0+255),b
 14322  014CCA                     l8693:
 14323                           
 14324                           ; BSR set to: 0
 14325  014CCA  0100               	movlb	0	; () banked
 14326  014CCC  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14327  014CCE  0100               	movlb	0	; () banked
 14328  014CD0  B4D8               	btfsc	status,2,c
 14329  014CD2  D067               	goto	l8709
 14330                           
 14331                           ; BSR set to: 0
 14332                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14333                           
 14334                           ; BSR set to: 0
 14335                           
 14336                           ; BSR set to: 0
 14337  014CD4  0EFF               	movlw	255
 14338  014CD6  0100               	movlb	0	; () banked
 14339  014CD8  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14340  014CDA  0EFF               	movlw	255
 14341  014CDC  0100               	movlb	0	; () banked
 14342  014CDE  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14343  014CE0  0100               	movlb	0	; () banked
 14344  014CE2  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14345  014CE4  0100               	movlb	0	; () banked
 14346  014CE6  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14347  014CE8  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14348  014CEA  0100               	movlb	0	; () banked
 14349  014CEC  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14350  014CEE  0100               	movlb	0	; () banked
 14351  014CF0  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14352  014CF2  0100               	movlb	0	; () banked
 14353  014CF4  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14354  014CF6  0100               	movlb	0	; () banked
 14355  014CF8  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14356  014CFA  0E92               	movlw	low LCD_write_integer@convertedInt
 14357  014CFC  0100               	movlb	0	; () banked
 14358  014CFE  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14359  014D00  6ED9               	movwf	fsr2l,c
 14360  014D02  0E00               	movlw	high LCD_write_integer@convertedInt
 14361  014D04  0100               	movlb	0	; () banked
 14362  014D06  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14363  014D08  6EDA               	movwf	fsr2h,c
 14364  014D0A  0100               	movlb	0	; () banked
 14365  014D0C  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14366  014D0E  0D01               	mullw	1
 14367  014D10  0E92               	movlw	low LCD_write_integer@convertedInt
 14368  014D12  24F3               	addwf	prodl,w,c
 14369  014D14  6EE1               	movwf	fsr1l,c
 14370  014D16  0E00               	movlw	high LCD_write_integer@convertedInt
 14371  014D18  20F4               	addwfc	prodh,w,c
 14372  014D1A  6EE2               	movwf	fsr1h,c
 14373  014D1C  CFDF FFE7          	movff	indf2,indf1
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14377  014D20  0100               	movlb	0	; () banked
 14378  014D22  058C               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14379  014D24  A4D8               	btfss	status,2,c
 14380  014D26  D01D               	goto	l8703
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14384  014D28  0EFF               	movlw	255
 14385  014D2A  0100               	movlb	0	; () banked
 14386  014D2C  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14387  014D2E  0EFF               	movlw	255
 14388  014D30  0100               	movlb	0	; () banked
 14389  014D32  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14390  014D34  0100               	movlb	0	; () banked
 14391  014D36  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14392  014D38  0100               	movlb	0	; () banked
 14393  014D3A  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14394  014D3C  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14395  014D3E  0100               	movlb	0	; () banked
 14396  014D40  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14397  014D42  0100               	movlb	0	; () banked
 14398  014D44  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14399  014D46  0100               	movlb	0	; () banked
 14400  014D48  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14401  014D4A  0100               	movlb	0	; () banked
 14402  014D4C  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14403  014D4E  0E92               	movlw	low LCD_write_integer@convertedInt
 14404  014D50  0100               	movlb	0	; () banked
 14405  014D52  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14406  014D54  6ED9               	movwf	fsr2l,c
 14407  014D56  0E00               	movlw	high LCD_write_integer@convertedInt
 14408  014D58  0100               	movlb	0	; () banked
 14409  014D5A  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14410  014D5C  6EDA               	movwf	fsr2h,c
 14411  014D5E  0E20               	movlw	32
 14412  014D60  D01C               	goto	L17
 14413  014D62                     l8703:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14417  014D62  0EFF               	movlw	255
 14418  014D64  0100               	movlb	0	; () banked
 14419  014D66  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14420  014D68  0EFF               	movlw	255
 14421  014D6A  0100               	movlb	0	; () banked
 14422  014D6C  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14423  014D6E  0100               	movlb	0	; () banked
 14424  014D70  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14425  014D72  0100               	movlb	0	; () banked
 14426  014D74  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14427  014D76  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14428  014D78  0100               	movlb	0	; () banked
 14429  014D7A  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14430  014D7C  0100               	movlb	0	; () banked
 14431  014D7E  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14432  014D80  0100               	movlb	0	; () banked
 14433  014D82  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14434  014D84  0100               	movlb	0	; () banked
 14435  014D86  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14436  014D88  0E92               	movlw	low LCD_write_integer@convertedInt
 14437  014D8A  0100               	movlb	0	; () banked
 14438  014D8C  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14439  014D8E  6ED9               	movwf	fsr2l,c
 14440  014D90  0E00               	movlw	high LCD_write_integer@convertedInt
 14441  014D92  0100               	movlb	0	; () banked
 14442  014D94  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14443  014D96  6EDA               	movwf	fsr2h,c
 14444  014D98  0E30               	movlw	48
 14445  014D9A                     L17:
 14446  014D9A  6EDF               	movwf	indf2,c
 14447                           
 14448                           ; BSR set to: 0
 14449                           
 14450                           ; BSR set to: 0
 14451  014D9C  0100               	movlb	0	; () banked
 14452  014D9E  0798               	decf	LCD_write_integer@index& (0+255),f,b
 14453  014DA0  D794               	goto	l8693
 14454  014DA2                     l8709:
 14455                           
 14456                           ; BSR set to: 0
 14457  014DA2  0EFF               	movlw	255
 14458  014DA4  0100               	movlb	0	; () banked
 14459  014DA6  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14460  014DA8  0EFF               	movlw	255
 14461  014DAA  0100               	movlb	0	; () banked
 14462  014DAC  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14463  014DAE  0100               	movlb	0	; () banked
 14464  014DB0  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14465  014DB2  0100               	movlb	0	; () banked
 14466  014DB4  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14467  014DB6  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14468  014DB8  0100               	movlb	0	; () banked
 14469  014DBA  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14470  014DBC  0100               	movlb	0	; () banked
 14471  014DBE  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14472  014DC0  0100               	movlb	0	; () banked
 14473  014DC2  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14474  014DC4  0100               	movlb	0	; () banked
 14475  014DC6  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14476  014DC8  0E92               	movlw	low LCD_write_integer@convertedInt
 14477  014DCA  0100               	movlb	0	; () banked
 14478  014DCC  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14479  014DCE  6ED9               	movwf	fsr2l,c
 14480  014DD0  0E00               	movlw	high LCD_write_integer@convertedInt
 14481  014DD2  0100               	movlb	0	; () banked
 14482  014DD4  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14483  014DD6  6EDA               	movwf	fsr2h,c
 14484  014DD8  0E3A               	movlw	58
 14485  014DDA  60DF               	cpfslt	indf2,c
 14486  014DDC  D772               	goto	l8691
 14487                           
 14488                           ; BSR set to: 0
 14489  014DDE  0EFF               	movlw	255
 14490  014DE0  0100               	movlb	0	; () banked
 14491  014DE2  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14492  014DE4  0EFF               	movlw	255
 14493  014DE6  0100               	movlb	0	; () banked
 14494  014DE8  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14495  014DEA  0100               	movlb	0	; () banked
 14496  014DEC  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14497  014DEE  0100               	movlb	0	; () banked
 14498  014DF0  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14499  014DF2  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14500  014DF4  0100               	movlb	0	; () banked
 14501  014DF6  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14502  014DF8  0100               	movlb	0	; () banked
 14503  014DFA  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14504  014DFC  0100               	movlb	0	; () banked
 14505  014DFE  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14506  014E00  0100               	movlb	0	; () banked
 14507  014E02  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14508  014E04  0E92               	movlw	low LCD_write_integer@convertedInt
 14509  014E06  0100               	movlb	0	; () banked
 14510  014E08  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14511  014E0A  6ED9               	movwf	fsr2l,c
 14512  014E0C  0E00               	movlw	high LCD_write_integer@convertedInt
 14513  014E0E  0100               	movlb	0	; () banked
 14514  014E10  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14515  014E12  6EDA               	movwf	fsr2h,c
 14516  014E14  0E2F               	movlw	47
 14517  014E16  64DF               	cpfsgt	indf2,c
 14518  014E18  D754               	goto	l8691
 14519  014E1A                     l8713:
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;src\LCD_44780.c: 243: }
 14523                           ;src\LCD_44780.c: 245: }
 14524                           ;src\LCD_44780.c: 246: }
 14525                           ;src\LCD_44780.c: 247: }
 14526                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14527  014E1A  0E92               	movlw	low LCD_write_integer@convertedInt
 14528  014E1C  0100               	movlb	0	; () banked
 14529  014E1E  6F82               	movwf	LCD_write_string@buffer& (0+255),b
 14530  014E20  0E00               	movlw	high LCD_write_integer@convertedInt
 14531  014E22  0100               	movlb	0	; () banked
 14532  014E24  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14533  014E26  ECC8  F0B1         	call	_LCD_write_string	;wreg free
 14534  014E2A  0012               	return		;funcret
 14535  014E2C                     __end_of_LCD_write_integer:
 14536                           	opt stack 0
 14537                           tblptru	equ	0xFF8
 14538                           tblptrh	equ	0xFF7
 14539                           tblptrl	equ	0xFF6
 14540                           tablat	equ	0xFF5
 14541                           prodh	equ	0xFF4
 14542                           prodl	equ	0xFF3
 14543                           intcon	equ	0xFF2
 14544                           postinc0	equ	0xFEE
 14545                           wreg	equ	0xFE8
 14546                           indf1	equ	0xFE7
 14547                           plusw1	equ	0xFE3
 14548                           fsr1h	equ	0xFE2
 14549                           fsr1l	equ	0xFE1
 14550                           indf2	equ	0xFDF
 14551                           postinc2	equ	0xFDE
 14552                           plusw2	equ	0xFDB
 14553                           fsr2h	equ	0xFDA
 14554                           fsr2l	equ	0xFD9
 14555                           status	equ	0xFD8
 14556                           
 14557 ;; *************** function _itoa *****************
 14558 ;; Defined at:
 14559 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;  buf             2   33[BANK0 ] PTR unsigned char 
 14562 ;;		 -> LCD_write_integer@convertedInt(6), 
 14563 ;;  val             2   35[BANK0 ] int 
 14564 ;;  base            2   37[BANK0 ] int 
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;  cp              2   39[BANK0 ] PTR unsigned char 
 14567 ;;		 -> LCD_write_integer@convertedInt(6), 
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  2   33[BANK0 ] PTR unsigned char 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14577 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14581 ;;Total ram usage:        8 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:    5
 14584 ;; This function calls:
 14585 ;;		_utoa
 14586 ;; This function is called by:
 14587 ;;		_LCD_write_integer
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           	psect	text29
 14592  01615E                     __ptext29:
 14593                           	opt stack 0
 14594  01615E                     _itoa:
 14595                           	opt stack 23
 14596                           
 14597                           ;incstack = 0
 14598  01615E  C081  F087         	movff	itoa@buf,itoa@cp
 14599  016162  C082  F088         	movff	itoa@buf+1,itoa@cp+1
 14600  016166  0100               	movlb	0	; () banked
 14601  016168  AF84               	btfss	(itoa@val+1)& (0+255),7,b
 14602  01616A  D00E               	goto	l5775
 14603                           
 14604                           ; BSR set to: 0
 14605  01616C  C081  FFD9         	movff	itoa@buf,fsr2l
 14606  016170  C082  FFDA         	movff	itoa@buf+1,fsr2h
 14607  016174  0E2D               	movlw	45
 14608  016176  6EDF               	movwf	indf2,c
 14609                           
 14610                           ; BSR set to: 0
 14611  016178  0100               	movlb	0	; () banked
 14612  01617A  4B81               	infsnz	itoa@buf& (0+255),f,b
 14613  01617C  2B82               	incf	(itoa@buf+1)& (0+255),f,b
 14614                           
 14615                           ; BSR set to: 0
 14616  01617E  0100               	movlb	0	; () banked
 14617  016180  6D83               	negf	itoa@val& (0+255),b
 14618  016182  1F84               	comf	(itoa@val+1)& (0+255),f,b
 14619  016184  B0D8               	btfsc	status,0,c
 14620  016186  2B84               	incf	(itoa@val+1)& (0+255),f,b
 14621  016188                     l5775:
 14622                           
 14623                           ; BSR set to: 0
 14624  016188  C081  F078         	movff	itoa@buf,utoa@buf
 14625  01618C  C082  F079         	movff	itoa@buf+1,utoa@buf+1
 14626  016190  C083  F07A         	movff	itoa@val,utoa@val
 14627  016194  C084  F07B         	movff	itoa@val+1,utoa@val+1
 14628  016198  C085  F07C         	movff	itoa@base,utoa@base
 14629  01619C  C086  F07D         	movff	itoa@base+1,utoa@base+1
 14630  0161A0  EC5A  F0AC         	call	_utoa	;wreg free
 14631  0161A4  0012               	return	
 14632  0161A6                     __end_of_itoa:
 14633                           	opt stack 0
 14634                           tblptru	equ	0xFF8
 14635                           tblptrh	equ	0xFF7
 14636                           tblptrl	equ	0xFF6
 14637                           tablat	equ	0xFF5
 14638                           prodh	equ	0xFF4
 14639                           prodl	equ	0xFF3
 14640                           intcon	equ	0xFF2
 14641                           postinc0	equ	0xFEE
 14642                           wreg	equ	0xFE8
 14643                           indf1	equ	0xFE7
 14644                           plusw1	equ	0xFE3
 14645                           fsr1h	equ	0xFE2
 14646                           fsr1l	equ	0xFE1
 14647                           indf2	equ	0xFDF
 14648                           postinc2	equ	0xFDE
 14649                           plusw2	equ	0xFDB
 14650                           fsr2h	equ	0xFDA
 14651                           fsr2l	equ	0xFD9
 14652                           status	equ	0xFD8
 14653                           
 14654 ;; *************** function _utoa *****************
 14655 ;; Defined at:
 14656 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;  buf             2   24[BANK0 ] PTR unsigned char 
 14659 ;;		 -> LCD_write_integer@convertedInt(6), 
 14660 ;;  val             2   26[BANK0 ] unsigned int 
 14661 ;;  base            2   28[BANK0 ] int 
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;  v               2   30[BANK0 ] unsigned int 
 14664 ;;  c               1   32[BANK0 ] unsigned char 
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  2   24[BANK0 ] PTR unsigned char 
 14667 ;; Registers used:
 14668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14674 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14677 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;Total ram usage:        9 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:    4
 14681 ;; This function calls:
 14682 ;;		___lwdiv
 14683 ;;		___lwmod
 14684 ;; This function is called by:
 14685 ;;		_itoa
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text30
 14690  0158B4                     __ptext30:
 14691                           	opt stack 0
 14692  0158B4                     _utoa:
 14693                           	opt stack 23
 14694                           
 14695                           ;incstack = 0
 14696  0158B4  C07A  F07E         	movff	utoa@val,utoa@v
 14697  0158B8  C07B  F07F         	movff	utoa@val+1,utoa@v+1
 14698  0158BC                     l5297:
 14699  0158BC  C07E  F071         	movff	utoa@v,___lwdiv@dividend
 14700  0158C0  C07F  F072         	movff	utoa@v+1,___lwdiv@dividend+1
 14701  0158C4  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 14702  0158C8  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 14703  0158CC  EC06  F0AF         	call	___lwdiv	;wreg free
 14704  0158D0  C071  F07E         	movff	?___lwdiv,utoa@v
 14705  0158D4  C072  F07F         	movff	?___lwdiv+1,utoa@v+1
 14706  0158D8  0100               	movlb	0	; () banked
 14707  0158DA  4B78               	infsnz	utoa@buf& (0+255),f,b
 14708  0158DC  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 14709                           
 14710                           ; BSR set to: 0
 14711  0158DE  0100               	movlb	0	; () banked
 14712  0158E0  517E               	movf	utoa@v& (0+255),w,b
 14713  0158E2  0100               	movlb	0	; () banked
 14714  0158E4  117F               	iorwf	(utoa@v+1)& (0+255),w,b
 14715  0158E6  A4D8               	btfss	status,2,c
 14716  0158E8  D7E9               	goto	l5297
 14717                           
 14718                           ; BSR set to: 0
 14719                           
 14720                           ; BSR set to: 0
 14721  0158EA  C078  FFD9         	movff	utoa@buf,fsr2l
 14722  0158EE  C079  FFDA         	movff	utoa@buf+1,fsr2h
 14723  0158F2  0E00               	movlw	0
 14724  0158F4  6EDF               	movwf	indf2,c
 14725                           
 14726                           ; BSR set to: 0
 14727  0158F6  0100               	movlb	0	; () banked
 14728  0158F8  0778               	decf	utoa@buf& (0+255),f,b
 14729  0158FA  A0D8               	btfss	status,0,c
 14730  0158FC  0779               	decf	(utoa@buf+1)& (0+255),f,b
 14731  0158FE                     l5307:
 14732                           
 14733                           ; BSR set to: 0
 14734  0158FE  C07A  F071         	movff	utoa@val,___lwmod@dividend
 14735  015902  C07B  F072         	movff	utoa@val+1,___lwmod@dividend+1
 14736  015906  C07C  F073         	movff	utoa@base,___lwmod@divisor
 14737  01590A  C07D  F074         	movff	utoa@base+1,___lwmod@divisor+1
 14738  01590E  EC0A  F0B0         	call	___lwmod	;wreg free
 14739  015912  0100               	movlb	0	; () banked
 14740  015914  5171               	movf	?___lwmod& (0+255),w,b
 14741  015916  0100               	movlb	0	; () banked
 14742  015918  6F80               	movwf	utoa@c& (0+255),b
 14743                           
 14744                           ; BSR set to: 0
 14745  01591A  C07A  F071         	movff	utoa@val,___lwdiv@dividend
 14746  01591E  C07B  F072         	movff	utoa@val+1,___lwdiv@dividend+1
 14747  015922  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 14748  015926  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 14749  01592A  EC06  F0AF         	call	___lwdiv	;wreg free
 14750  01592E  C071  F07A         	movff	?___lwdiv,utoa@val
 14751  015932  C072  F07B         	movff	?___lwdiv+1,utoa@val+1
 14752  015936  0E09               	movlw	9
 14753  015938  0100               	movlb	0	; () banked
 14754  01593A  6580               	cpfsgt	utoa@c& (0+255),b
 14755  01593C  D003               	goto	l1421
 14756                           
 14757                           ; BSR set to: 0
 14758  01593E  0E07               	movlw	7
 14759  015940  0100               	movlb	0	; () banked
 14760  015942  2780               	addwf	utoa@c& (0+255),f,b
 14761  015944                     l1421:
 14762                           
 14763                           ; BSR set to: 0
 14764  015944  0E30               	movlw	48
 14765  015946  0100               	movlb	0	; () banked
 14766  015948  2780               	addwf	utoa@c& (0+255),f,b
 14767                           
 14768                           ; BSR set to: 0
 14769  01594A  C078  FFD9         	movff	utoa@buf,fsr2l
 14770  01594E  C079  FFDA         	movff	utoa@buf+1,fsr2h
 14771  015952  C080  FFDF         	movff	utoa@c,indf2
 14772                           
 14773                           ; BSR set to: 0
 14774  015956  0100               	movlb	0	; () banked
 14775  015958  0778               	decf	utoa@buf& (0+255),f,b
 14776  01595A  A0D8               	btfss	status,0,c
 14777  01595C  0779               	decf	(utoa@buf+1)& (0+255),f,b
 14778                           
 14779                           ; BSR set to: 0
 14780  01595E  0100               	movlb	0	; () banked
 14781  015960  517A               	movf	utoa@val& (0+255),w,b
 14782  015962  0100               	movlb	0	; () banked
 14783  015964  117B               	iorwf	(utoa@val+1)& (0+255),w,b
 14784  015966  A4D8               	btfss	status,2,c
 14785  015968  D7CA               	goto	l5307
 14786                           
 14787                           ; BSR set to: 0
 14788                           ;	Return value of _utoa is never used
 14789                           
 14790                           ; BSR set to: 0
 14791  01596A  0100               	movlb	0	; () banked
 14792  01596C  4B78               	infsnz	utoa@buf& (0+255),f,b
 14793  01596E  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 14794  015970  0012               	return	
 14795  015972                     __end_of_utoa:
 14796                           	opt stack 0
 14797                           tblptru	equ	0xFF8
 14798                           tblptrh	equ	0xFF7
 14799                           tblptrl	equ	0xFF6
 14800                           tablat	equ	0xFF5
 14801                           prodh	equ	0xFF4
 14802                           prodl	equ	0xFF3
 14803                           intcon	equ	0xFF2
 14804                           postinc0	equ	0xFEE
 14805                           wreg	equ	0xFE8
 14806                           indf1	equ	0xFE7
 14807                           plusw1	equ	0xFE3
 14808                           fsr1h	equ	0xFE2
 14809                           fsr1l	equ	0xFE1
 14810                           indf2	equ	0xFDF
 14811                           postinc2	equ	0xFDE
 14812                           plusw2	equ	0xFDB
 14813                           fsr2h	equ	0xFDA
 14814                           fsr2l	equ	0xFD9
 14815                           status	equ	0xFD8
 14816                           
 14817 ;; *************** function ___lwmod *****************
 14818 ;; Defined at:
 14819 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14820 ;; Parameters:    Size  Location     Type
 14821 ;;  dividend        2   17[BANK0 ] unsigned int 
 14822 ;;  divisor         2   19[BANK0 ] unsigned int 
 14823 ;; Auto vars:     Size  Location     Type
 14824 ;;  counter         1   21[BANK0 ] unsigned char 
 14825 ;; Return value:  Size  Location     Type
 14826 ;;                  2   17[BANK0 ] unsigned int 
 14827 ;; Registers used:
 14828 ;;		wreg, status,2, status,0
 14829 ;; Tracked objects:
 14830 ;;		On entry : 0/0
 14831 ;;		On exit  : 0/0
 14832 ;;		Unchanged: 0/0
 14833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14834 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14837 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14838 ;;Total ram usage:        5 bytes
 14839 ;; Hardware stack levels used:    1
 14840 ;; Hardware stack levels required when called:    3
 14841 ;; This function calls:
 14842 ;;		Nothing
 14843 ;; This function is called by:
 14844 ;;		_utoa
 14845 ;; This function uses a non-reentrant model
 14846 ;;
 14847                           
 14848                           	psect	text31
 14849  016014                     __ptext31:
 14850                           	opt stack 0
 14851  016014                     ___lwmod:
 14852                           	opt stack 23
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;incstack = 0
 14856  016014  0100               	movlb	0	; () banked
 14857  016016  5173               	movf	___lwmod@divisor& (0+255),w,b
 14858  016018  0100               	movlb	0	; () banked
 14859  01601A  1174               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14860  01601C  B4D8               	btfsc	status,2,c
 14861  01601E  D026               	goto	l1510
 14862                           
 14863                           ; BSR set to: 0
 14864  016020  0E01               	movlw	1
 14865  016022  0100               	movlb	0	; () banked
 14866  016024  6F75               	movwf	___lwmod@counter& (0+255),b
 14867  016026  D006               	goto	l4855
 14868  016028                     l4853:
 14869                           
 14870                           ; BSR set to: 0
 14871  016028  0100               	movlb	0	; () banked
 14872  01602A  90D8               	bcf	status,0,c
 14873  01602C  3773               	rlcf	___lwmod@divisor& (0+255),f,b
 14874  01602E  3774               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14875  016030  0100               	movlb	0	; () banked
 14876  016032  2B75               	incf	___lwmod@counter& (0+255),f,b
 14877  016034                     l4855:
 14878                           
 14879                           ; BSR set to: 0
 14880  016034  0100               	movlb	0	; () banked
 14881  016036  AF74               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14882  016038  D7F7               	goto	l4853
 14883  01603A                     l4857:
 14884                           
 14885                           ; BSR set to: 0
 14886  01603A  0100               	movlb	0	; () banked
 14887  01603C  5173               	movf	___lwmod@divisor& (0+255),w,b
 14888  01603E  0100               	movlb	0	; () banked
 14889  016040  5D71               	subwf	___lwmod@dividend& (0+255),w,b
 14890  016042  0100               	movlb	0	; () banked
 14891  016044  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14892  016046  0100               	movlb	0	; () banked
 14893  016048  5972               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14894  01604A  A0D8               	btfss	status,0,c
 14895  01604C  D008               	goto	l4861
 14896                           
 14897                           ; BSR set to: 0
 14898  01604E  0100               	movlb	0	; () banked
 14899  016050  5173               	movf	___lwmod@divisor& (0+255),w,b
 14900  016052  0100               	movlb	0	; () banked
 14901  016054  5F71               	subwf	___lwmod@dividend& (0+255),f,b
 14902  016056  0100               	movlb	0	; () banked
 14903  016058  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14904  01605A  0100               	movlb	0	; () banked
 14905  01605C  5B72               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14906  01605E                     l4861:
 14907                           
 14908                           ; BSR set to: 0
 14909  01605E  0100               	movlb	0	; () banked
 14910  016060  90D8               	bcf	status,0,c
 14911  016062  3374               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14912  016064  3373               	rrcf	___lwmod@divisor& (0+255),f,b
 14913                           
 14914                           ; BSR set to: 0
 14915  016066  0100               	movlb	0	; () banked
 14916  016068  2F75               	decfsz	___lwmod@counter& (0+255),f,b
 14917  01606A  D7E7               	goto	l4857
 14918  01606C                     l1510:
 14919                           
 14920                           ; BSR set to: 0
 14921  01606C  C071  F071         	movff	___lwmod@dividend,?___lwmod
 14922  016070  C072  F072         	movff	___lwmod@dividend+1,?___lwmod+1
 14923                           
 14924                           ; BSR set to: 0
 14925  016074  0012               	return		;funcret
 14926  016076                     __end_of___lwmod:
 14927                           	opt stack 0
 14928                           tblptru	equ	0xFF8
 14929                           tblptrh	equ	0xFF7
 14930                           tblptrl	equ	0xFF6
 14931                           tablat	equ	0xFF5
 14932                           prodh	equ	0xFF4
 14933                           prodl	equ	0xFF3
 14934                           intcon	equ	0xFF2
 14935                           postinc0	equ	0xFEE
 14936                           wreg	equ	0xFE8
 14937                           indf1	equ	0xFE7
 14938                           plusw1	equ	0xFE3
 14939                           fsr1h	equ	0xFE2
 14940                           fsr1l	equ	0xFE1
 14941                           indf2	equ	0xFDF
 14942                           postinc2	equ	0xFDE
 14943                           plusw2	equ	0xFDB
 14944                           fsr2h	equ	0xFDA
 14945                           fsr2l	equ	0xFD9
 14946                           status	equ	0xFD8
 14947                           
 14948 ;; *************** function ___lwdiv *****************
 14949 ;; Defined at:
 14950 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;  dividend        2   17[BANK0 ] unsigned int 
 14953 ;;  divisor         2   19[BANK0 ] unsigned int 
 14954 ;; Auto vars:     Size  Location     Type
 14955 ;;  quotient        2   21[BANK0 ] unsigned int 
 14956 ;;  counter         1   23[BANK0 ] unsigned char 
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  2   17[BANK0 ] unsigned int 
 14959 ;; Registers used:
 14960 ;;		wreg, status,2, status,0
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14966 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14970 ;;Total ram usage:        7 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:    3
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_utoa
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text32
 14981  015E0C                     __ptext32:
 14982                           	opt stack 0
 14983  015E0C                     ___lwdiv:
 14984                           	opt stack 23
 14985                           
 14986                           ; BSR set to: 0
 14987                           ;incstack = 0
 14988  015E0C  0E00               	movlw	0
 14989  015E0E  0100               	movlb	0	; () banked
 14990  015E10  6F76               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14991  015E12  0E00               	movlw	0
 14992  015E14  6F75               	movwf	___lwdiv@quotient& (0+255),b
 14993                           
 14994                           ; BSR set to: 0
 14995  015E16  0100               	movlb	0	; () banked
 14996  015E18  5173               	movf	___lwdiv@divisor& (0+255),w,b
 14997  015E1A  0100               	movlb	0	; () banked
 14998  015E1C  1174               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14999  015E1E  B4D8               	btfsc	status,2,c
 15000  015E20  D02C               	goto	l1500
 15001                           
 15002                           ; BSR set to: 0
 15003  015E22  0E01               	movlw	1
 15004  015E24  0100               	movlb	0	; () banked
 15005  015E26  6F77               	movwf	___lwdiv@counter& (0+255),b
 15006  015E28  D006               	goto	l4835
 15007  015E2A                     l4833:
 15008                           
 15009                           ; BSR set to: 0
 15010  015E2A  0100               	movlb	0	; () banked
 15011  015E2C  90D8               	bcf	status,0,c
 15012  015E2E  3773               	rlcf	___lwdiv@divisor& (0+255),f,b
 15013  015E30  3774               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15014  015E32  0100               	movlb	0	; () banked
 15015  015E34  2B77               	incf	___lwdiv@counter& (0+255),f,b
 15016  015E36                     l4835:
 15017                           
 15018                           ; BSR set to: 0
 15019  015E36  0100               	movlb	0	; () banked
 15020  015E38  AF74               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15021  015E3A  D7F7               	goto	l4833
 15022  015E3C                     l4837:
 15023                           
 15024                           ; BSR set to: 0
 15025  015E3C  0100               	movlb	0	; () banked
 15026  015E3E  90D8               	bcf	status,0,c
 15027  015E40  3775               	rlcf	___lwdiv@quotient& (0+255),f,b
 15028  015E42  3776               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15029                           
 15030                           ; BSR set to: 0
 15031  015E44  0100               	movlb	0	; () banked
 15032  015E46  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15033  015E48  0100               	movlb	0	; () banked
 15034  015E4A  5D71               	subwf	___lwdiv@dividend& (0+255),w,b
 15035  015E4C  0100               	movlb	0	; () banked
 15036  015E4E  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15037  015E50  0100               	movlb	0	; () banked
 15038  015E52  5972               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15039  015E54  A0D8               	btfss	status,0,c
 15040  015E56  D00A               	goto	l4845
 15041                           
 15042                           ; BSR set to: 0
 15043  015E58  0100               	movlb	0	; () banked
 15044  015E5A  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15045  015E5C  0100               	movlb	0	; () banked
 15046  015E5E  5F71               	subwf	___lwdiv@dividend& (0+255),f,b
 15047  015E60  0100               	movlb	0	; () banked
 15048  015E62  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15049  015E64  0100               	movlb	0	; () banked
 15050  015E66  5B72               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15051                           
 15052                           ; BSR set to: 0
 15053  015E68  0100               	movlb	0	; () banked
 15054  015E6A  8175               	bsf	___lwdiv@quotient& (0+255),0,b
 15055  015E6C                     l4845:
 15056                           
 15057                           ; BSR set to: 0
 15058  015E6C  0100               	movlb	0	; () banked
 15059  015E6E  90D8               	bcf	status,0,c
 15060  015E70  3374               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15061  015E72  3373               	rrcf	___lwdiv@divisor& (0+255),f,b
 15062                           
 15063                           ; BSR set to: 0
 15064  015E74  0100               	movlb	0	; () banked
 15065  015E76  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 15066  015E78  D7E1               	goto	l4837
 15067  015E7A                     l1500:
 15068                           
 15069                           ; BSR set to: 0
 15070  015E7A  C075  F071         	movff	___lwdiv@quotient,?___lwdiv
 15071  015E7E  C076  F072         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15072                           
 15073                           ; BSR set to: 0
 15074  015E82  0012               	return		;funcret
 15075  015E84                     __end_of___lwdiv:
 15076                           	opt stack 0
 15077                           tblptru	equ	0xFF8
 15078                           tblptrh	equ	0xFF7
 15079                           tblptrl	equ	0xFF6
 15080                           tablat	equ	0xFF5
 15081                           prodh	equ	0xFF4
 15082                           prodl	equ	0xFF3
 15083                           intcon	equ	0xFF2
 15084                           postinc0	equ	0xFEE
 15085                           wreg	equ	0xFE8
 15086                           indf1	equ	0xFE7
 15087                           plusw1	equ	0xFE3
 15088                           fsr1h	equ	0xFE2
 15089                           fsr1l	equ	0xFE1
 15090                           indf2	equ	0xFDF
 15091                           postinc2	equ	0xFDE
 15092                           plusw2	equ	0xFDB
 15093                           fsr2h	equ	0xFDA
 15094                           fsr2l	equ	0xFD9
 15095                           status	equ	0xFD8
 15096                           
 15097 ;; *************** function _LCD_write_string *****************
 15098 ;; Defined at:
 15099 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15100 ;; Parameters:    Size  Location     Type
 15101 ;;  buffer          2   34[BANK0 ] PTR unsigned char 
 15102 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;		None
 15105 ;; Return value:  Size  Location     Type
 15106 ;;		None               void
 15107 ;; Registers used:
 15108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15117 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15118 ;;Total ram usage:        2 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:    8
 15121 ;; This function calls:
 15122 ;;		_LCD_write_char
 15123 ;; This function is called by:
 15124 ;;		_LCD_write_integer
 15125 ;;		_LCD_Handler
 15126 ;; This function uses a non-reentrant model
 15127 ;;
 15128                           
 15129                           	psect	text33
 15130  016390                     __ptext33:
 15131                           	opt stack 0
 15132  016390                     _LCD_write_string:
 15133                           	opt stack 21
 15134                           
 15135                           ;src\LCD_44780.c: 197: while(*buffer){
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;incstack = 0
 15139  016390  D00A               	goto	l8319
 15140  016392                     l8315:
 15141                           
 15142                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 15143  016392  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15144  016396  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15145  01639A  50DF               	movf	indf2,w,c
 15146  01639C  ECBB  F0AE         	call	_LCD_write_char
 15147                           
 15148                           ;src\LCD_44780.c: 202: buffer++;
 15149  0163A0  0100               	movlb	0	; () banked
 15150  0163A2  4B82               	infsnz	LCD_write_string@buffer& (0+255),f,b
 15151  0163A4  2B83               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 15152  0163A6                     l8319:
 15153  0163A6  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15154  0163AA  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15155  0163AE  50DF               	movf	indf2,w,c
 15156  0163B0  B4D8               	btfsc	status,2,c
 15157  0163B2  0012               	return	
 15158  0163B4  D7EE               	goto	l8315
 15159  0163B6                     __end_of_LCD_write_string:
 15160                           	opt stack 0
 15161                           tblptru	equ	0xFF8
 15162                           tblptrh	equ	0xFF7
 15163                           tblptrl	equ	0xFF6
 15164                           tablat	equ	0xFF5
 15165                           prodh	equ	0xFF4
 15166                           prodl	equ	0xFF3
 15167                           intcon	equ	0xFF2
 15168                           postinc0	equ	0xFEE
 15169                           wreg	equ	0xFE8
 15170                           indf1	equ	0xFE7
 15171                           plusw1	equ	0xFE3
 15172                           fsr1h	equ	0xFE2
 15173                           fsr1l	equ	0xFE1
 15174                           indf2	equ	0xFDF
 15175                           postinc2	equ	0xFDE
 15176                           plusw2	equ	0xFDB
 15177                           fsr2h	equ	0xFDA
 15178                           fsr2l	equ	0xFD9
 15179                           status	equ	0xFD8
 15180                           
 15181 ;; *************** function _LCD_goto_xy *****************
 15182 ;; Defined at:
 15183 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15184 ;; Parameters:    Size  Location     Type
 15185 ;;  x               1    wreg     unsigned char 
 15186 ;;  y               1   32[BANK0 ] unsigned char 
 15187 ;; Auto vars:     Size  Location     Type
 15188 ;;  x               1   33[BANK0 ] unsigned char 
 15189 ;; Return value:  Size  Location     Type
 15190 ;;		None               void
 15191 ;; Registers used:
 15192 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15193 ;; Tracked objects:
 15194 ;;		On entry : 0/0
 15195 ;;		On exit  : 0/0
 15196 ;;		Unchanged: 0/0
 15197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15202 ;;Total ram usage:        2 bytes
 15203 ;; Hardware stack levels used:    1
 15204 ;; Hardware stack levels required when called:    8
 15205 ;; This function calls:
 15206 ;;		_LCD_goto_line
 15207 ;;		_LCD_shift_cursor
 15208 ;; This function is called by:
 15209 ;;		_LCD_Handler
 15210 ;; This function uses a non-reentrant model
 15211 ;;
 15212                           
 15213                           	psect	text34
 15214  016436                     __ptext34:
 15215                           	opt stack 0
 15216  016436                     _LCD_goto_xy:
 15217                           	opt stack 21
 15218                           
 15219                           ;incstack = 0
 15220                           ;LCD_goto_xy@x stored from wreg
 15221  016436  0100               	movlb	0	; () banked
 15222  016438  6F81               	movwf	LCD_goto_xy@x& (0+255),b
 15223                           
 15224                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15225  01643A  0100               	movlb	0	; () banked
 15226  01643C  5180               	movf	LCD_goto_xy@y& (0+255),w,b
 15227  01643E  EC85  F0AB         	call	_LCD_goto_line
 15228                           
 15229                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15230  016442  0100               	movlb	0	; () banked
 15231  016444  0581               	decf	LCD_goto_xy@x& (0+255),w,b
 15232  016446  0100               	movlb	0	; () banked
 15233  016448  6F7D               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15234  01644A  0E01               	movlw	1
 15235  01644C  EC65  F0B0         	call	_LCD_shift_cursor
 15236  016450  0012               	return		;funcret
 15237  016452                     __end_of_LCD_goto_xy:
 15238                           	opt stack 0
 15239                           tblptru	equ	0xFF8
 15240                           tblptrh	equ	0xFF7
 15241                           tblptrl	equ	0xFF6
 15242                           tablat	equ	0xFF5
 15243                           prodh	equ	0xFF4
 15244                           prodl	equ	0xFF3
 15245                           intcon	equ	0xFF2
 15246                           postinc0	equ	0xFEE
 15247                           wreg	equ	0xFE8
 15248                           indf1	equ	0xFE7
 15249                           plusw1	equ	0xFE3
 15250                           fsr1h	equ	0xFE2
 15251                           fsr1l	equ	0xFE1
 15252                           indf2	equ	0xFDF
 15253                           postinc2	equ	0xFDE
 15254                           plusw2	equ	0xFDB
 15255                           fsr2h	equ	0xFDA
 15256                           fsr2l	equ	0xFD9
 15257                           status	equ	0xFD8
 15258                           
 15259 ;; *************** function _LCD_shift_cursor *****************
 15260 ;; Defined at:
 15261 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;  shift           1    wreg     unsigned char 
 15264 ;;  number_of_sh    1   29[BANK0 ] unsigned char 
 15265 ;; Auto vars:     Size  Location     Type
 15266 ;;  shift           1   30[BANK0 ] unsigned char 
 15267 ;;  i               1   31[BANK0 ] unsigned char 
 15268 ;; Return value:  Size  Location     Type
 15269 ;;		None               void
 15270 ;; Registers used:
 15271 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15272 ;; Tracked objects:
 15273 ;;		On entry : 0/0
 15274 ;;		On exit  : 0/0
 15275 ;;		Unchanged: 0/0
 15276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15277 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15280 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15281 ;;Total ram usage:        3 bytes
 15282 ;; Hardware stack levels used:    1
 15283 ;; Hardware stack levels required when called:    7
 15284 ;; This function calls:
 15285 ;;		_LCD_send_command
 15286 ;; This function is called by:
 15287 ;;		_LCD_goto_xy
 15288 ;; This function uses a non-reentrant model
 15289 ;;
 15290                           
 15291                           	psect	text35
 15292  0160CA                     __ptext35:
 15293                           	opt stack 0
 15294  0160CA                     _LCD_shift_cursor:
 15295                           	opt stack 21
 15296                           
 15297                           ;incstack = 0
 15298                           ;LCD_shift_cursor@shift stored from wreg
 15299  0160CA  0100               	movlb	0	; () banked
 15300  0160CC  6F7E               	movwf	LCD_shift_cursor@shift& (0+255),b
 15301                           
 15302                           ;src\LCD_44780.c: 100: unsigned char i;
 15303                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15304  0160CE  0E00               	movlw	0
 15305  0160D0  0100               	movlb	0	; () banked
 15306  0160D2  6F7F               	movwf	LCD_shift_cursor@i& (0+255),b
 15307  0160D4  D019               	goto	l8299
 15308  0160D6                     l8295:
 15309                           
 15310                           ; BSR set to: 0
 15311                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15312  0160D6  0E00               	movlw	0
 15313  0160D8  0100               	movlb	0	; () banked
 15314  0160DA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15315  0160DC  0E00               	movlw	0
 15316  0160DE  0100               	movlb	0	; () banked
 15317  0160E0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15318  0160E2  0E01               	movlw	1
 15319  0160E4  0100               	movlb	0	; () banked
 15320  0160E6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15321  0160E8  0E00               	movlw	0
 15322  0160EA  ECF6  F0B0         	call	_LCD_send_command
 15323                           
 15324                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15325  0160EE  C07E  F079         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15326  0160F2  0E00               	movlw	0
 15327  0160F4  0100               	movlb	0	; () banked
 15328  0160F6  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15329  0160F8  0E00               	movlw	0
 15330  0160FA  0100               	movlb	0	; () banked
 15331  0160FC  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15332  0160FE  0E00               	movlw	0
 15333  016100  ECF6  F0B0         	call	_LCD_send_command
 15334  016104  0100               	movlb	0	; () banked
 15335  016106  2B7F               	incf	LCD_shift_cursor@i& (0+255),f,b
 15336  016108                     l8299:
 15337                           
 15338                           ; BSR set to: 0
 15339  016108  0100               	movlb	0	; () banked
 15340  01610A  517D               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15341  01610C  0100               	movlb	0	; () banked
 15342  01610E  5D7F               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15343  016110  B0D8               	btfsc	status,0,c
 15344  016112  0012               	return	
 15345  016114  D7E0               	goto	l8295
 15346  016116                     __end_of_LCD_shift_cursor:
 15347                           	opt stack 0
 15348                           tblptru	equ	0xFF8
 15349                           tblptrh	equ	0xFF7
 15350                           tblptrl	equ	0xFF6
 15351                           tablat	equ	0xFF5
 15352                           prodh	equ	0xFF4
 15353                           prodl	equ	0xFF3
 15354                           intcon	equ	0xFF2
 15355                           postinc0	equ	0xFEE
 15356                           wreg	equ	0xFE8
 15357                           indf1	equ	0xFE7
 15358                           plusw1	equ	0xFE3
 15359                           fsr1h	equ	0xFE2
 15360                           fsr1l	equ	0xFE1
 15361                           indf2	equ	0xFDF
 15362                           postinc2	equ	0xFDE
 15363                           plusw2	equ	0xFDB
 15364                           fsr2h	equ	0xFDA
 15365                           fsr2l	equ	0xFD9
 15366                           status	equ	0xFD8
 15367                           
 15368 ;; *************** function _LCD_Gap *****************
 15369 ;; Defined at:
 15370 ;;		line 476 in file "RemoteCan.c"
 15371 ;; Parameters:    Size  Location     Type
 15372 ;;		None
 15373 ;; Auto vars:     Size  Location     Type
 15374 ;;		None
 15375 ;; Return value:  Size  Location     Type
 15376 ;;		None               void
 15377 ;; Registers used:
 15378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15379 ;; Tracked objects:
 15380 ;;		On entry : 0/0
 15381 ;;		On exit  : 0/0
 15382 ;;		Unchanged: 0/0
 15383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15388 ;;Total ram usage:        0 bytes
 15389 ;; Hardware stack levels used:    1
 15390 ;; Hardware stack levels required when called:    9
 15391 ;; This function calls:
 15392 ;;		_LCD_clear
 15393 ;;		_LCD_goto_line
 15394 ;;		_LCD_initialize
 15395 ;;		_LCD_write_message
 15396 ;; This function is called by:
 15397 ;;		_main
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           
 15401                           	psect	text36
 15402  015F4C                     __ptext36:
 15403                           	opt stack 0
 15404  015F4C                     _LCD_Gap:
 15405                           	opt stack 21
 15406                           
 15407                           ;RemoteCan.c: 477: LCD_initialize(16);
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;incstack = 0
 15411  015F4C  0E10               	movlw	16
 15412  015F4E  EC48  F0AA         	call	_LCD_initialize
 15413                           
 15414                           ;RemoteCan.c: 478: LCD_clear();
 15415  015F52  EC9A  F0B1         	call	_LCD_clear	;wreg free
 15416                           
 15417                           ;RemoteCan.c: 479: LCD_goto_line(1);
 15418  015F56  0E01               	movlw	1
 15419  015F58  EC85  F0AB         	call	_LCD_goto_line
 15420                           
 15421                           ;RemoteCan.c: 480: LCD_write_message("= PARKING MESSAGES =");
 15422  015F5C  0E40               	movlw	low STR_16
 15423  015F5E  0100               	movlb	0	; () banked
 15424  015F60  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15425  015F62  0EFF               	movlw	high STR_16
 15426  015F64  0100               	movlb	0	; () banked
 15427  015F66  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15428  015F68  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15429                           
 15430                           ;RemoteCan.c: 481: LCD_goto_line(2);
 15431  015F6C  0E02               	movlw	2
 15432  015F6E  EC85  F0AB         	call	_LCD_goto_line
 15433                           
 15434                           ;RemoteCan.c: 482: LCD_write_message(" Parking space FOUND");
 15435  015F72  0E94               	movlw	low STR_17
 15436  015F74  0100               	movlb	0	; () banked
 15437  015F76  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15438  015F78  0EFF               	movlw	high STR_17
 15439  015F7A  0100               	movlb	0	; () banked
 15440  015F7C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15441  015F7E  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15442                           
 15443                           ;RemoteCan.c: 483: LCD_goto_line(3);
 15444  015F82  0E03               	movlw	3
 15445  015F84  EC85  F0AB         	call	_LCD_goto_line
 15446                           
 15447                           ;RemoteCan.c: 484: LCD_write_message("->  KEEP MOVING   <-");
 15448  015F88  0E01               	movlw	low STR_18
 15449  015F8A  0100               	movlb	0	; () banked
 15450  015F8C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15451  015F8E  0EFF               	movlw	high STR_18
 15452  015F90  0100               	movlb	0	; () banked
 15453  015F92  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15454  015F94  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15455                           
 15456                           ;RemoteCan.c: 485: LCD_goto_line(4);
 15457  015F98  0E04               	movlw	4
 15458  015F9A  EC85  F0AB         	call	_LCD_goto_line
 15459                           
 15460                           ;RemoteCan.c: 486: LCD_write_message(" until next message ");
 15461  015F9E  0EAD               	movlw	low STR_19
 15462  015FA0  0100               	movlb	0	; () banked
 15463  015FA2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15464  015FA4  0EFE               	movlw	high STR_19
 15465  015FA6  0100               	movlb	0	; () banked
 15466  015FA8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15467  015FAA  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15468  015FAE  0012               	return		;funcret
 15469  015FB0                     __end_of_LCD_Gap:
 15470                           	opt stack 0
 15471                           tblptru	equ	0xFF8
 15472                           tblptrh	equ	0xFF7
 15473                           tblptrl	equ	0xFF6
 15474                           tablat	equ	0xFF5
 15475                           prodh	equ	0xFF4
 15476                           prodl	equ	0xFF3
 15477                           intcon	equ	0xFF2
 15478                           postinc0	equ	0xFEE
 15479                           wreg	equ	0xFE8
 15480                           indf1	equ	0xFE7
 15481                           plusw1	equ	0xFE3
 15482                           fsr1h	equ	0xFE2
 15483                           fsr1l	equ	0xFE1
 15484                           indf2	equ	0xFDF
 15485                           postinc2	equ	0xFDE
 15486                           plusw2	equ	0xFDB
 15487                           fsr2h	equ	0xFDA
 15488                           fsr2l	equ	0xFD9
 15489                           status	equ	0xFD8
 15490                           
 15491 ;; *************** function _LCD_End *****************
 15492 ;; Defined at:
 15493 ;;		line 515 in file "RemoteCan.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;		None               void
 15500 ;; Registers used:
 15501 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15511 ;;Total ram usage:        0 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:    9
 15514 ;; This function calls:
 15515 ;;		_LCD_clear
 15516 ;;		_LCD_goto_line
 15517 ;;		_LCD_initialize
 15518 ;;		_LCD_write_message
 15519 ;; This function is called by:
 15520 ;;		_main
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text37
 15525  015FB0                     __ptext37:
 15526                           	opt stack 0
 15527  015FB0                     _LCD_End:
 15528                           	opt stack 21
 15529                           
 15530                           ;RemoteCan.c: 516: LCD_initialize(16);
 15531                           
 15532                           ;incstack = 0
 15533  015FB0  0E10               	movlw	16
 15534  015FB2  EC48  F0AA         	call	_LCD_initialize
 15535                           
 15536                           ;RemoteCan.c: 517: LCD_clear();
 15537  015FB6  EC9A  F0B1         	call	_LCD_clear	;wreg free
 15538                           
 15539                           ;RemoteCan.c: 518: LCD_goto_line(1);
 15540  015FBA  0E01               	movlw	1
 15541  015FBC  EC85  F0AB         	call	_LCD_goto_line
 15542                           
 15543                           ;RemoteCan.c: 519: LCD_write_message("= PARKING MESSAGES =");
 15544  015FC0  0E40               	movlw	low STR_16
 15545  015FC2  0100               	movlb	0	; () banked
 15546  015FC4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15547  015FC6  0EFF               	movlw	high STR_16
 15548  015FC8  0100               	movlb	0	; () banked
 15549  015FCA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15550  015FCC  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15551                           
 15552                           ;RemoteCan.c: 520: LCD_goto_line(2);
 15553  015FD0  0E02               	movlw	2
 15554  015FD2  EC85  F0AB         	call	_LCD_goto_line
 15555                           
 15556                           ;RemoteCan.c: 521: LCD_write_message(" Parking procedures ");
 15557  015FD6  0ED7               	movlw	low STR_29
 15558  015FD8  0100               	movlb	0	; () banked
 15559  015FDA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15560  015FDC  0EFE               	movlw	high STR_29
 15561  015FDE  0100               	movlb	0	; () banked
 15562  015FE0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15563  015FE2  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15564                           
 15565                           ;RemoteCan.c: 522: LCD_goto_line(3);
 15566  015FE6  0E03               	movlw	3
 15567  015FE8  EC85  F0AB         	call	_LCD_goto_line
 15568                           
 15569                           ;RemoteCan.c: 523: LCD_write_message("    SUCCESSFULLY    ");
 15570  015FEC  0E6E               	movlw	low STR_30
 15571  015FEE  0100               	movlb	0	; () banked
 15572  015FF0  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15573  015FF2  0EFE               	movlw	high STR_30
 15574  015FF4  0100               	movlb	0	; () banked
 15575  015FF6  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15576  015FF8  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15577                           
 15578                           ;RemoteCan.c: 524: LCD_goto_line(4);
 15579  015FFC  0E04               	movlw	4
 15580  015FFE  EC85  F0AB         	call	_LCD_goto_line
 15581                           
 15582                           ;RemoteCan.c: 525: LCD_write_message("     COMPLETED!     ");
 15583  016002  0E59               	movlw	low STR_31
 15584  016004  0100               	movlb	0	; () banked
 15585  016006  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 15586  016008  0EFE               	movlw	high STR_31
 15587  01600A  0100               	movlb	0	; () banked
 15588  01600C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15589  01600E  EC67  F0B1         	call	_LCD_write_message	;wreg free
 15590  016012  0012               	return		;funcret
 15591  016014                     __end_of_LCD_End:
 15592                           	opt stack 0
 15593                           tblptru	equ	0xFF8
 15594                           tblptrh	equ	0xFF7
 15595                           tblptrl	equ	0xFF6
 15596                           tablat	equ	0xFF5
 15597                           prodh	equ	0xFF4
 15598                           prodl	equ	0xFF3
 15599                           intcon	equ	0xFF2
 15600                           postinc0	equ	0xFEE
 15601                           wreg	equ	0xFE8
 15602                           indf1	equ	0xFE7
 15603                           plusw1	equ	0xFE3
 15604                           fsr1h	equ	0xFE2
 15605                           fsr1l	equ	0xFE1
 15606                           indf2	equ	0xFDF
 15607                           postinc2	equ	0xFDE
 15608                           plusw2	equ	0xFDB
 15609                           fsr2h	equ	0xFDA
 15610                           fsr2l	equ	0xFD9
 15611                           status	equ	0xFD8
 15612                           
 15613 ;; *************** function _LCD_write_message *****************
 15614 ;; Defined at:
 15615 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;  buffer          2   34[BANK0 ] PTR const unsigned char 
 15618 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 15619 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15620 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15621 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 15622 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 15623 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 15624 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15625 ;;		 -> STR_2(21), STR_1(21), 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;		None
 15628 ;; Return value:  Size  Location     Type
 15629 ;;		None               void
 15630 ;; Registers used:
 15631 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15641 ;;Total ram usage:        2 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; Hardware stack levels required when called:    8
 15644 ;; This function calls:
 15645 ;;		_LCD_write_char
 15646 ;; This function is called by:
 15647 ;;		_main
 15648 ;;		_LCD_Handler
 15649 ;;		_LCD_Gap
 15650 ;;		_LCD_Park
 15651 ;;		_LCD_Parking
 15652 ;;		_LCD_End
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text38
 15657  0162CE                     __ptext38:
 15658                           	opt stack 0
 15659  0162CE                     _LCD_write_message:
 15660                           	opt stack 22
 15661                           
 15662                           ;src\LCD_44780.c: 181: while(*buffer) {
 15663                           
 15664                           ;incstack = 0
 15665  0162CE  D00D               	goto	l8681
 15666  0162D0                     l8677:
 15667                           
 15668                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15669  0162D0  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15670  0162D4  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15671  0162D8                     	if	0	;tblptru may be non-zero
 15672  0162D8                     	endif
 15673  0162D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15674  0162D8  0E00               	movlw	low (__mediumconst shr (0+16))
 15675  0162DA  6EF8               	movwf	tblptru,c
 15676  0162DC                     	endif
 15677  0162DC  0008               	tblrd		*
 15678  0162DE  50F5               	movf	tablat,w,c
 15679  0162E0  ECBB  F0AE         	call	_LCD_write_char
 15680                           
 15681                           ;src\LCD_44780.c: 186: buffer++;
 15682  0162E4  0100               	movlb	0	; () banked
 15683  0162E6  4B82               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15684  0162E8  2B83               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15685  0162EA                     l8681:
 15686  0162EA  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15687  0162EE  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15688  0162F2                     	if	0	;tblptru may be non-zero
 15689  0162F2                     	endif
 15690  0162F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15691  0162F2  0E00               	movlw	low (__mediumconst shr (0+16))
 15692  0162F4  6EF8               	movwf	tblptru,c
 15693  0162F6                     	endif
 15694  0162F6  0008               	tblrd		*
 15695  0162F8  50F5               	movf	tablat,w,c
 15696  0162FA  0900               	iorlw	0
 15697  0162FC  B4D8               	btfsc	status,2,c
 15698  0162FE  0012               	return	
 15699  016300  D7E7               	goto	l8677
 15700  016302                     __end_of_LCD_write_message:
 15701                           	opt stack 0
 15702                           tblptru	equ	0xFF8
 15703                           tblptrh	equ	0xFF7
 15704                           tblptrl	equ	0xFF6
 15705                           tablat	equ	0xFF5
 15706                           prodh	equ	0xFF4
 15707                           prodl	equ	0xFF3
 15708                           intcon	equ	0xFF2
 15709                           postinc0	equ	0xFEE
 15710                           wreg	equ	0xFE8
 15711                           indf1	equ	0xFE7
 15712                           plusw1	equ	0xFE3
 15713                           fsr1h	equ	0xFE2
 15714                           fsr1l	equ	0xFE1
 15715                           indf2	equ	0xFDF
 15716                           postinc2	equ	0xFDE
 15717                           plusw2	equ	0xFDB
 15718                           fsr2h	equ	0xFDA
 15719                           fsr2l	equ	0xFD9
 15720                           status	equ	0xFD8
 15721                           
 15722 ;; *************** function _LCD_write_char *****************
 15723 ;; Defined at:
 15724 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;  value           1    wreg     unsigned char 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;  value           1   33[BANK0 ] unsigned char 
 15729 ;;  D0              1   32[BANK0 ] unsigned char 
 15730 ;;  D1              1   31[BANK0 ] unsigned char 
 15731 ;;  D2              1   30[BANK0 ] unsigned char 
 15732 ;;  D3              1   29[BANK0 ] unsigned char 
 15733 ;; Return value:  Size  Location     Type
 15734 ;;		None               void
 15735 ;; Registers used:
 15736 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;Total ram usage:        5 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    7
 15749 ;; This function calls:
 15750 ;;		_LCD_send_command
 15751 ;; This function is called by:
 15752 ;;		_LCD_write_message
 15753 ;;		_LCD_write_string
 15754 ;; This function uses a non-reentrant model
 15755 ;;
 15756                           
 15757                           	psect	text39
 15758  015D76                     __ptext39:
 15759                           	opt stack 0
 15760  015D76                     _LCD_write_char:
 15761                           	opt stack 22
 15762                           
 15763                           ;incstack = 0
 15764                           ;LCD_write_char@value stored from wreg
 15765  015D76  0100               	movlb	0	; () banked
 15766  015D78  6F81               	movwf	LCD_write_char@value& (0+255),b
 15767                           
 15768                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15769                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15770  015D7A  848D               	bsf	3981,2,c	;volatile
 15771                           
 15772                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15773  015D7C  0100               	movlb	0	; () banked
 15774  015D7E  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 15775  015D80  0B01               	andlw	1
 15776  015D82  0100               	movlb	0	; () banked
 15777  015D84  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 15778                           
 15779                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15780  015D86  0100               	movlb	0	; () banked
 15781  015D88  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 15782  015D8A  46E8               	rlncf	wreg,f,c
 15783  015D8C  0B03               	andlw	3
 15784  015D8E  0B01               	andlw	1
 15785  015D90  0100               	movlb	0	; () banked
 15786  015D92  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 15787                           
 15788                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15789  015D94  0100               	movlb	0	; () banked
 15790  015D96  3981               	swapf	LCD_write_char@value& (0+255),w,b
 15791  015D98  42E8               	rrncf	wreg,f,c
 15792  015D9A  0B07               	andlw	7
 15793  015D9C  0B01               	andlw	1
 15794  015D9E  0100               	movlb	0	; () banked
 15795  015DA0  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 15796                           
 15797                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15798  015DA2  0100               	movlb	0	; () banked
 15799  015DA4  3981               	swapf	LCD_write_char@value& (0+255),w,b
 15800  015DA6  0B0F               	andlw	15
 15801  015DA8  0B01               	andlw	1
 15802  015DAA  0100               	movlb	0	; () banked
 15803  015DAC  6F80               	movwf	LCD_write_char@D0& (0+255),b
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15807  015DAE  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 15808  015DB2  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 15809  015DB6  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 15810  015DBA  0100               	movlb	0	; () banked
 15811  015DBC  517D               	movf	LCD_write_char@D3& (0+255),w,b
 15812  015DBE  ECF6  F0B0         	call	_LCD_send_command
 15813                           
 15814                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15815  015DC2  0100               	movlb	0	; () banked
 15816  015DC4  3981               	swapf	LCD_write_char@value& (0+255),w,b
 15817  015DC6  46E8               	rlncf	wreg,f,c
 15818  015DC8  0B1F               	andlw	31
 15819  015DCA  0B01               	andlw	1
 15820  015DCC  0100               	movlb	0	; () banked
 15821  015DCE  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15825  015DD0  0100               	movlb	0	; () banked
 15826  015DD2  4181               	rrncf	LCD_write_char@value& (0+255),w,b
 15827  015DD4  42E8               	rrncf	wreg,f,c
 15828  015DD6  0B3F               	andlw	63
 15829  015DD8  0B01               	andlw	1
 15830  015DDA  0100               	movlb	0	; () banked
 15831  015DDC  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 15832                           
 15833                           ; BSR set to: 0
 15834                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15835  015DDE  0100               	movlb	0	; () banked
 15836  015DE0  90D8               	bcf	status,0,c
 15837  015DE2  3181               	rrcf	LCD_write_char@value& (0+255),w,b
 15838  015DE4  0B01               	andlw	1
 15839  015DE6  0100               	movlb	0	; () banked
 15840  015DE8  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15844  015DEA  0100               	movlb	0	; () banked
 15845  015DEC  5181               	movf	LCD_write_char@value& (0+255),w,b
 15846  015DEE  0B01               	andlw	1
 15847  015DF0  0100               	movlb	0	; () banked
 15848  015DF2  6F80               	movwf	LCD_write_char@D0& (0+255),b
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15852  015DF4  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 15853  015DF8  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 15854  015DFC  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 15855  015E00  0100               	movlb	0	; () banked
 15856  015E02  517D               	movf	LCD_write_char@D3& (0+255),w,b
 15857  015E04  ECF6  F0B0         	call	_LCD_send_command
 15858                           
 15859                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15860  015E08  948D               	bcf	3981,2,c	;volatile
 15861  015E0A  0012               	return		;funcret
 15862  015E0C                     __end_of_LCD_write_char:
 15863                           	opt stack 0
 15864                           tblptru	equ	0xFF8
 15865                           tblptrh	equ	0xFF7
 15866                           tblptrl	equ	0xFF6
 15867                           tablat	equ	0xFF5
 15868                           prodh	equ	0xFF4
 15869                           prodl	equ	0xFF3
 15870                           intcon	equ	0xFF2
 15871                           postinc0	equ	0xFEE
 15872                           wreg	equ	0xFE8
 15873                           indf1	equ	0xFE7
 15874                           plusw1	equ	0xFE3
 15875                           fsr1h	equ	0xFE2
 15876                           fsr1l	equ	0xFE1
 15877                           indf2	equ	0xFDF
 15878                           postinc2	equ	0xFDE
 15879                           plusw2	equ	0xFDB
 15880                           fsr2h	equ	0xFDA
 15881                           fsr2l	equ	0xFD9
 15882                           status	equ	0xFD8
 15883                           
 15884 ;; *************** function _LCD_initialize *****************
 15885 ;; Defined at:
 15886 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15887 ;; Parameters:    Size  Location     Type
 15888 ;;  quartz_frequ    1    wreg     unsigned char 
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;  quartz_frequ    1   31[BANK0 ] unsigned char 
 15891 ;; Return value:  Size  Location     Type
 15892 ;;		None               void
 15893 ;; Registers used:
 15894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15895 ;; Tracked objects:
 15896 ;;		On entry : 0/0
 15897 ;;		On exit  : 0/0
 15898 ;;		Unchanged: 0/0
 15899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15903 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15904 ;;Total ram usage:        1 bytes
 15905 ;; Hardware stack levels used:    1
 15906 ;; Hardware stack levels required when called:    8
 15907 ;; This function calls:
 15908 ;;		_LCD_clear
 15909 ;;		_LCD_cursor
 15910 ;;		_LCD_send_command
 15911 ;;		_delay_ms
 15912 ;;		_delay_set_quartz
 15913 ;; This function is called by:
 15914 ;;		_main
 15915 ;;		_LCD_Handler
 15916 ;;		_LCD_Gap
 15917 ;;		_LCD_Park
 15918 ;;		_LCD_Parking
 15919 ;;		_LCD_End
 15920 ;;		_board_initialization
 15921 ;; This function uses a non-reentrant model
 15922 ;;
 15923                           
 15924                           	psect	text40
 15925  015490                     __ptext40:
 15926                           	opt stack 0
 15927  015490                     _LCD_initialize:
 15928                           	opt stack 21
 15929                           
 15930                           ;incstack = 0
 15931                           ;LCD_initialize@quartz_frequency stored from wreg
 15932  015490  0100               	movlb	0	; () banked
 15933  015492  6F7F               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15934                           
 15935                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15936  015494  0100               	movlb	0	; () banked
 15937  015496  517F               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15938  015498  EC5B  F0B2         	call	_delay_set_quartz
 15939                           
 15940                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15941  01549C  948D               	bcf	3981,2,c	;volatile
 15942                           
 15943                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15944  01549E  928B               	bcf	3979,1,c	;volatile
 15945                           
 15946                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15947  0154A0  908B               	bcf	3979,0,c	;volatile
 15948                           
 15949                           ;src\LCD_44780.c: 291: delay_ms (100);
 15950  0154A2  0E00               	movlw	0
 15951  0154A4  0100               	movlb	0	; () banked
 15952  0154A6  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15953  0154A8  0E64               	movlw	100
 15954  0154AA  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15955  0154AC  EC13  F0B1         	call	_delay_ms	;wreg free
 15956                           
 15957                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15958  0154B0  0E00               	movlw	0
 15959  0154B2  0100               	movlb	0	; () banked
 15960  0154B4  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15961  0154B6  0E01               	movlw	1
 15962  0154B8  0100               	movlb	0	; () banked
 15963  0154BA  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15964  0154BC  0E01               	movlw	1
 15965  0154BE  0100               	movlb	0	; () banked
 15966  0154C0  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15967  0154C2  0E00               	movlw	0
 15968  0154C4  ECF6  F0B0         	call	_LCD_send_command
 15969                           
 15970                           ;src\LCD_44780.c: 293: delay_ms (100);
 15971  0154C8  0E00               	movlw	0
 15972  0154CA  0100               	movlb	0	; () banked
 15973  0154CC  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15974  0154CE  0E64               	movlw	100
 15975  0154D0  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15976  0154D2  EC13  F0B1         	call	_delay_ms	;wreg free
 15977                           
 15978                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15979  0154D6  0E00               	movlw	0
 15980  0154D8  0100               	movlb	0	; () banked
 15981  0154DA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15982  0154DC  0E01               	movlw	1
 15983  0154DE  0100               	movlb	0	; () banked
 15984  0154E0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15985  0154E2  0E01               	movlw	1
 15986  0154E4  0100               	movlb	0	; () banked
 15987  0154E6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15988  0154E8  0E00               	movlw	0
 15989  0154EA  ECF6  F0B0         	call	_LCD_send_command
 15990                           
 15991                           ;src\LCD_44780.c: 295: delay_ms (10);
 15992  0154EE  0E00               	movlw	0
 15993  0154F0  0100               	movlb	0	; () banked
 15994  0154F2  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15995  0154F4  0E0A               	movlw	10
 15996  0154F6  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15997  0154F8  EC13  F0B1         	call	_delay_ms	;wreg free
 15998                           
 15999                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 16000  0154FC  0E00               	movlw	0
 16001  0154FE  0100               	movlb	0	; () banked
 16002  015500  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16003  015502  0E01               	movlw	1
 16004  015504  0100               	movlb	0	; () banked
 16005  015506  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16006  015508  0E01               	movlw	1
 16007  01550A  0100               	movlb	0	; () banked
 16008  01550C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16009  01550E  0E00               	movlw	0
 16010  015510  ECF6  F0B0         	call	_LCD_send_command
 16011                           
 16012                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 16013  015514  0E00               	movlw	0
 16014  015516  0100               	movlb	0	; () banked
 16015  015518  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16016  01551A  0E01               	movlw	1
 16017  01551C  0100               	movlb	0	; () banked
 16018  01551E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16019  015520  0E00               	movlw	0
 16020  015522  0100               	movlb	0	; () banked
 16021  015524  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16022  015526  0E00               	movlw	0
 16023  015528  ECF6  F0B0         	call	_LCD_send_command
 16024                           
 16025                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 16026  01552C  0E00               	movlw	0
 16027  01552E  0100               	movlb	0	; () banked
 16028  015530  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16029  015532  0E01               	movlw	1
 16030  015534  0100               	movlb	0	; () banked
 16031  015536  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16032  015538  0E00               	movlw	0
 16033  01553A  0100               	movlb	0	; () banked
 16034  01553C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16035  01553E  0E00               	movlw	0
 16036  015540  ECF6  F0B0         	call	_LCD_send_command
 16037                           
 16038                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 16039  015544  0E00               	movlw	0
 16040  015546  0100               	movlb	0	; () banked
 16041  015548  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16042  01554A  0E00               	movlw	0
 16043  01554C  0100               	movlb	0	; () banked
 16044  01554E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16045  015550  0E00               	movlw	0
 16046  015552  0100               	movlb	0	; () banked
 16047  015554  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16048  015556  0E01               	movlw	1
 16049  015558  ECF6  F0B0         	call	_LCD_send_command
 16050                           
 16051                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 16052  01555C  0E00               	movlw	0
 16053  01555E  0100               	movlb	0	; () banked
 16054  015560  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16055  015562  0E00               	movlw	0
 16056  015564  0100               	movlb	0	; () banked
 16057  015566  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16058  015568  0E00               	movlw	0
 16059  01556A  0100               	movlb	0	; () banked
 16060  01556C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16061  01556E  0E00               	movlw	0
 16062  015570  ECF6  F0B0         	call	_LCD_send_command
 16063                           
 16064                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 16065  015574  0E00               	movlw	0
 16066  015576  0100               	movlb	0	; () banked
 16067  015578  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16068  01557A  0E00               	movlw	0
 16069  01557C  0100               	movlb	0	; () banked
 16070  01557E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16071  015580  0E00               	movlw	0
 16072  015582  0100               	movlb	0	; () banked
 16073  015584  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16074  015586  0E01               	movlw	1
 16075  015588  ECF6  F0B0         	call	_LCD_send_command
 16076                           
 16077                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 16078  01558C  0E00               	movlw	0
 16079  01558E  0100               	movlb	0	; () banked
 16080  015590  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16081  015592  0E00               	movlw	0
 16082  015594  0100               	movlb	0	; () banked
 16083  015596  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16084  015598  0E00               	movlw	0
 16085  01559A  0100               	movlb	0	; () banked
 16086  01559C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16087  01559E  0E00               	movlw	0
 16088  0155A0  ECF6  F0B0         	call	_LCD_send_command
 16089                           
 16090                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 16091  0155A4  0E00               	movlw	0
 16092  0155A6  0100               	movlb	0	; () banked
 16093  0155A8  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16094  0155AA  0E00               	movlw	0
 16095  0155AC  0100               	movlb	0	; () banked
 16096  0155AE  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16097  0155B0  0E01               	movlw	1
 16098  0155B2  0100               	movlb	0	; () banked
 16099  0155B4  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16100  0155B6  0E00               	movlw	0
 16101  0155B8  ECF6  F0B0         	call	_LCD_send_command
 16102                           
 16103                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 16104  0155BC  0E00               	movlw	0
 16105  0155BE  0100               	movlb	0	; () banked
 16106  0155C0  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16107  0155C2  0E00               	movlw	0
 16108  0155C4  0100               	movlb	0	; () banked
 16109  0155C6  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16110  0155C8  0E00               	movlw	0
 16111  0155CA  0100               	movlb	0	; () banked
 16112  0155CC  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16113  0155CE  0E00               	movlw	0
 16114  0155D0  ECF6  F0B0         	call	_LCD_send_command
 16115                           
 16116                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 16117  0155D4  0E01               	movlw	1
 16118  0155D6  0100               	movlb	0	; () banked
 16119  0155D8  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16120  0155DA  0E01               	movlw	1
 16121  0155DC  0100               	movlb	0	; () banked
 16122  0155DE  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16123  0155E0  0E00               	movlw	0
 16124  0155E2  0100               	movlb	0	; () banked
 16125  0155E4  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16126  0155E6  0E00               	movlw	0
 16127  0155E8  ECF6  F0B0         	call	_LCD_send_command
 16128                           
 16129                           ;src\LCD_44780.c: 312: LCD_clear ();
 16130  0155EC  EC9A  F0B1         	call	_LCD_clear	;wreg free
 16131                           
 16132                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 16133  0155F0  0E00               	movlw	0
 16134  0155F2  0100               	movlb	0	; () banked
 16135  0155F4  6F7D               	movwf	LCD_cursor@blinking& (0+255),b
 16136  0155F6  0E00               	movlw	0
 16137  0155F8  EC81  F0B1         	call	_LCD_cursor
 16138  0155FC  0012               	return		;funcret
 16139  0155FE                     __end_of_LCD_initialize:
 16140                           	opt stack 0
 16141                           tblptru	equ	0xFF8
 16142                           tblptrh	equ	0xFF7
 16143                           tblptrl	equ	0xFF6
 16144                           tablat	equ	0xFF5
 16145                           prodh	equ	0xFF4
 16146                           prodl	equ	0xFF3
 16147                           intcon	equ	0xFF2
 16148                           postinc0	equ	0xFEE
 16149                           wreg	equ	0xFE8
 16150                           indf1	equ	0xFE7
 16151                           plusw1	equ	0xFE3
 16152                           fsr1h	equ	0xFE2
 16153                           fsr1l	equ	0xFE1
 16154                           indf2	equ	0xFDF
 16155                           postinc2	equ	0xFDE
 16156                           plusw2	equ	0xFDB
 16157                           fsr2h	equ	0xFDA
 16158                           fsr2l	equ	0xFD9
 16159                           status	equ	0xFD8
 16160                           
 16161 ;; *************** function _delay_set_quartz *****************
 16162 ;; Defined at:
 16163 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16164 ;; Parameters:    Size  Location     Type
 16165 ;;  frequency       1    wreg     unsigned char 
 16166 ;; Auto vars:     Size  Location     Type
 16167 ;;  frequency       1   17[BANK0 ] unsigned char 
 16168 ;; Return value:  Size  Location     Type
 16169 ;;		None               void
 16170 ;; Registers used:
 16171 ;;		wreg
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16180 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16181 ;;Total ram usage:        1 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; Hardware stack levels required when called:    3
 16184 ;; This function calls:
 16185 ;;		Nothing
 16186 ;; This function is called by:
 16187 ;;		_LCD_initialize
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           	psect	text41
 16192  0164B6                     __ptext41:
 16193                           	opt stack 0
 16194  0164B6                     _delay_set_quartz:
 16195                           	opt stack 25
 16196                           
 16197                           ;incstack = 0
 16198                           ;delay_set_quartz@frequency stored from wreg
 16199  0164B6  0100               	movlb	0	; () banked
 16200  0164B8  6F71               	movwf	delay_set_quartz@frequency& (0+255),b
 16201                           
 16202                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 16203  0164BA  C071  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 16204  0164BE  0012               	return		;funcret
 16205  0164C0                     __end_of_delay_set_quartz:
 16206                           	opt stack 0
 16207                           tblptru	equ	0xFF8
 16208                           tblptrh	equ	0xFF7
 16209                           tblptrl	equ	0xFF6
 16210                           tablat	equ	0xFF5
 16211                           prodh	equ	0xFF4
 16212                           prodl	equ	0xFF3
 16213                           intcon	equ	0xFF2
 16214                           postinc0	equ	0xFEE
 16215                           wreg	equ	0xFE8
 16216                           indf1	equ	0xFE7
 16217                           plusw1	equ	0xFE3
 16218                           fsr1h	equ	0xFE2
 16219                           fsr1l	equ	0xFE1
 16220                           indf2	equ	0xFDF
 16221                           postinc2	equ	0xFDE
 16222                           plusw2	equ	0xFDB
 16223                           fsr2h	equ	0xFDA
 16224                           fsr2l	equ	0xFD9
 16225                           status	equ	0xFD8
 16226                           
 16227 ;; *************** function _LCD_cursor *****************
 16228 ;; Defined at:
 16229 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16230 ;; Parameters:    Size  Location     Type
 16231 ;;  active          1    wreg     unsigned char 
 16232 ;;  blinking        1   29[BANK0 ] unsigned char 
 16233 ;; Auto vars:     Size  Location     Type
 16234 ;;  active          1   30[BANK0 ] unsigned char 
 16235 ;; Return value:  Size  Location     Type
 16236 ;;		None               void
 16237 ;; Registers used:
 16238 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16239 ;; Tracked objects:
 16240 ;;		On entry : 0/0
 16241 ;;		On exit  : 0/0
 16242 ;;		Unchanged: 0/0
 16243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16244 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16247 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16248 ;;Total ram usage:        2 bytes
 16249 ;; Hardware stack levels used:    1
 16250 ;; Hardware stack levels required when called:    7
 16251 ;; This function calls:
 16252 ;;		_LCD_send_command
 16253 ;; This function is called by:
 16254 ;;		_LCD_initialize
 16255 ;; This function uses a non-reentrant model
 16256 ;;
 16257                           
 16258                           	psect	text42
 16259  016302                     __ptext42:
 16260                           	opt stack 0
 16261  016302                     _LCD_cursor:
 16262                           	opt stack 21
 16263                           
 16264                           ;incstack = 0
 16265                           ;LCD_cursor@active stored from wreg
 16266  016302  0100               	movlb	0	; () banked
 16267  016304  6F7E               	movwf	LCD_cursor@active& (0+255),b
 16268                           
 16269                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 16270  016306  0E00               	movlw	0
 16271  016308  0100               	movlb	0	; () banked
 16272  01630A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16273  01630C  0E00               	movlw	0
 16274  01630E  0100               	movlb	0	; () banked
 16275  016310  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16276  016312  0E00               	movlw	0
 16277  016314  0100               	movlb	0	; () banked
 16278  016316  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16279  016318  0E00               	movlw	0
 16280  01631A  ECF6  F0B0         	call	_LCD_send_command
 16281                           
 16282                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 16283  01631E  0E01               	movlw	1
 16284  016320  0100               	movlb	0	; () banked
 16285  016322  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16286  016324  C07E  F07A         	movff	LCD_cursor@active,LCD_send_command@D1
 16287  016328  C07D  F07B         	movff	LCD_cursor@blinking,LCD_send_command@D0
 16288  01632C  0E01               	movlw	1
 16289  01632E  ECF6  F0B0         	call	_LCD_send_command
 16290  016332  0012               	return		;funcret
 16291  016334                     __end_of_LCD_cursor:
 16292                           	opt stack 0
 16293                           tblptru	equ	0xFF8
 16294                           tblptrh	equ	0xFF7
 16295                           tblptrl	equ	0xFF6
 16296                           tablat	equ	0xFF5
 16297                           prodh	equ	0xFF4
 16298                           prodl	equ	0xFF3
 16299                           intcon	equ	0xFF2
 16300                           postinc0	equ	0xFEE
 16301                           wreg	equ	0xFE8
 16302                           indf1	equ	0xFE7
 16303                           plusw1	equ	0xFE3
 16304                           fsr1h	equ	0xFE2
 16305                           fsr1l	equ	0xFE1
 16306                           indf2	equ	0xFDF
 16307                           postinc2	equ	0xFDE
 16308                           plusw2	equ	0xFDB
 16309                           fsr2h	equ	0xFDA
 16310                           fsr2l	equ	0xFD9
 16311                           status	equ	0xFD8
 16312                           
 16313 ;; *************** function _LCD_clear *****************
 16314 ;; Defined at:
 16315 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16316 ;; Parameters:    Size  Location     Type
 16317 ;;		None
 16318 ;; Auto vars:     Size  Location     Type
 16319 ;;		None
 16320 ;; Return value:  Size  Location     Type
 16321 ;;		None               void
 16322 ;; Registers used:
 16323 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16324 ;; Tracked objects:
 16325 ;;		On entry : 0/0
 16326 ;;		On exit  : 0/0
 16327 ;;		Unchanged: 0/0
 16328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16333 ;;Total ram usage:        0 bytes
 16334 ;; Hardware stack levels used:    1
 16335 ;; Hardware stack levels required when called:    7
 16336 ;; This function calls:
 16337 ;;		_LCD_send_command
 16338 ;; This function is called by:
 16339 ;;		_LCD_initialize
 16340 ;;		_LCD_Handler
 16341 ;;		_LCD_Gap
 16342 ;;		_LCD_Park
 16343 ;;		_LCD_Parking
 16344 ;;		_LCD_End
 16345 ;;		_board_initialization
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           	psect	text43
 16350  016334                     __ptext43:
 16351                           	opt stack 0
 16352  016334                     _LCD_clear:
 16353                           	opt stack 21
 16354                           
 16355                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16356                           
 16357                           ;incstack = 0
 16358  016334  0E00               	movlw	0
 16359  016336  0100               	movlb	0	; () banked
 16360  016338  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16361  01633A  0E00               	movlw	0
 16362  01633C  0100               	movlb	0	; () banked
 16363  01633E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16364  016340  0E00               	movlw	0
 16365  016342  0100               	movlb	0	; () banked
 16366  016344  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16367  016346  0E00               	movlw	0
 16368  016348  ECF6  F0B0         	call	_LCD_send_command
 16369                           
 16370                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16371  01634C  0E00               	movlw	0
 16372  01634E  0100               	movlb	0	; () banked
 16373  016350  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16374  016352  0E00               	movlw	0
 16375  016354  0100               	movlb	0	; () banked
 16376  016356  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16377  016358  0E01               	movlw	1
 16378  01635A  0100               	movlb	0	; () banked
 16379  01635C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16380  01635E  0E00               	movlw	0
 16381  016360  ECF6  F0B0         	call	_LCD_send_command
 16382  016364  0012               	return		;funcret
 16383  016366                     __end_of_LCD_clear:
 16384                           	opt stack 0
 16385                           tblptru	equ	0xFF8
 16386                           tblptrh	equ	0xFF7
 16387                           tblptrl	equ	0xFF6
 16388                           tablat	equ	0xFF5
 16389                           prodh	equ	0xFF4
 16390                           prodl	equ	0xFF3
 16391                           intcon	equ	0xFF2
 16392                           postinc0	equ	0xFEE
 16393                           wreg	equ	0xFE8
 16394                           indf1	equ	0xFE7
 16395                           plusw1	equ	0xFE3
 16396                           fsr1h	equ	0xFE2
 16397                           fsr1l	equ	0xFE1
 16398                           indf2	equ	0xFDF
 16399                           postinc2	equ	0xFDE
 16400                           plusw2	equ	0xFDB
 16401                           fsr2h	equ	0xFDA
 16402                           fsr2l	equ	0xFD9
 16403                           status	equ	0xFD8
 16404                           
 16405 ;; *************** function _LCD_goto_line *****************
 16406 ;; Defined at:
 16407 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16408 ;; Parameters:    Size  Location     Type
 16409 ;;  line            1    wreg     unsigned char 
 16410 ;; Auto vars:     Size  Location     Type
 16411 ;;  line            1   29[BANK0 ] unsigned char 
 16412 ;; Return value:  Size  Location     Type
 16413 ;;		None               void
 16414 ;; Registers used:
 16415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16416 ;; Tracked objects:
 16417 ;;		On entry : 0/0
 16418 ;;		On exit  : 0/0
 16419 ;;		Unchanged: 0/0
 16420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;Total ram usage:        1 bytes
 16426 ;; Hardware stack levels used:    1
 16427 ;; Hardware stack levels required when called:    7
 16428 ;; This function calls:
 16429 ;;		_LCD_send_command
 16430 ;; This function is called by:
 16431 ;;		_LCD_goto_xy
 16432 ;;		_main
 16433 ;;		_LCD_Handler
 16434 ;;		_LCD_Gap
 16435 ;;		_LCD_Park
 16436 ;;		_LCD_Parking
 16437 ;;		_LCD_End
 16438 ;;		_board_initialization
 16439 ;; This function uses a non-reentrant model
 16440 ;;
 16441                           
 16442                           	psect	text44
 16443  01570A                     __ptext44:
 16444                           	opt stack 0
 16445  01570A                     _LCD_goto_line:
 16446                           	opt stack 22
 16447                           
 16448                           ;incstack = 0
 16449                           ;LCD_goto_line@line stored from wreg
 16450  01570A  0100               	movlb	0	; () banked
 16451  01570C  6F7D               	movwf	LCD_goto_line@line& (0+255),b
 16452                           
 16453                           ;src\LCD_44780.c: 113: switch(line) {
 16454  01570E  D064               	goto	l8311
 16455  015710                     l8303:
 16456  015710  0E00               	movlw	0
 16457  015712  0100               	movlb	0	; () banked
 16458  015714  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16459  015716  0E00               	movlw	0
 16460  015718  0100               	movlb	0	; () banked
 16461  01571A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16462  01571C  0E00               	movlw	0
 16463  01571E  0100               	movlb	0	; () banked
 16464  015720  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16465  015722  0E01               	movlw	1
 16466  015724  ECF6  F0B0         	call	_LCD_send_command
 16467                           
 16468                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16469  015728  0E00               	movlw	0
 16470  01572A  0100               	movlb	0	; () banked
 16471  01572C  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16472  01572E  0E00               	movlw	0
 16473  015730  0100               	movlb	0	; () banked
 16474  015732  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16475  015734  0E00               	movlw	0
 16476  015736  0100               	movlb	0	; () banked
 16477  015738  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16478  01573A  0E00               	movlw	0
 16479  01573C  ECF6  F0B0         	call	_LCD_send_command
 16480                           
 16481                           ;src\LCD_44780.c: 117: break;
 16482  015740  0012               	return	
 16483  015742                     l8305:
 16484  015742  0E01               	movlw	1
 16485  015744  0100               	movlb	0	; () banked
 16486  015746  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16487  015748  0E00               	movlw	0
 16488  01574A  0100               	movlb	0	; () banked
 16489  01574C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16490  01574E  0E00               	movlw	0
 16491  015750  0100               	movlb	0	; () banked
 16492  015752  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16493  015754  0E01               	movlw	1
 16494  015756  ECF6  F0B0         	call	_LCD_send_command
 16495                           
 16496                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16497  01575A  0E00               	movlw	0
 16498  01575C  0100               	movlb	0	; () banked
 16499  01575E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16500  015760  0E00               	movlw	0
 16501  015762  0100               	movlb	0	; () banked
 16502  015764  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16503  015766  0E00               	movlw	0
 16504  015768  0100               	movlb	0	; () banked
 16505  01576A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16506  01576C  0E00               	movlw	0
 16507  01576E  ECF6  F0B0         	call	_LCD_send_command
 16508                           
 16509                           ;src\LCD_44780.c: 121: break;
 16510  015772  0012               	return	
 16511  015774                     l8307:
 16512  015774  0E00               	movlw	0
 16513  015776  0100               	movlb	0	; () banked
 16514  015778  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16515  01577A  0E00               	movlw	0
 16516  01577C  0100               	movlb	0	; () banked
 16517  01577E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16518  015780  0E01               	movlw	1
 16519  015782  0100               	movlb	0	; () banked
 16520  015784  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16521  015786  0E01               	movlw	1
 16522  015788  ECF6  F0B0         	call	_LCD_send_command
 16523                           
 16524                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16525  01578C  0E01               	movlw	1
 16526  01578E  0100               	movlb	0	; () banked
 16527  015790  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16528  015792  0E00               	movlw	0
 16529  015794  0100               	movlb	0	; () banked
 16530  015796  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16531  015798  0E00               	movlw	0
 16532  01579A  0100               	movlb	0	; () banked
 16533  01579C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16534  01579E  0E00               	movlw	0
 16535  0157A0  ECF6  F0B0         	call	_LCD_send_command
 16536                           
 16537                           ;src\LCD_44780.c: 125: break;
 16538  0157A4  0012               	return	
 16539  0157A6                     l8309:
 16540  0157A6  0E01               	movlw	1
 16541  0157A8  0100               	movlb	0	; () banked
 16542  0157AA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16543  0157AC  0E00               	movlw	0
 16544  0157AE  0100               	movlb	0	; () banked
 16545  0157B0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16546  0157B2  0E01               	movlw	1
 16547  0157B4  0100               	movlb	0	; () banked
 16548  0157B6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16549  0157B8  0E01               	movlw	1
 16550  0157BA  ECF6  F0B0         	call	_LCD_send_command
 16551                           
 16552                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 16553  0157BE  0E01               	movlw	1
 16554  0157C0  0100               	movlb	0	; () banked
 16555  0157C2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16556  0157C4  0E00               	movlw	0
 16557  0157C6  0100               	movlb	0	; () banked
 16558  0157C8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16559  0157CA  0E00               	movlw	0
 16560  0157CC  0100               	movlb	0	; () banked
 16561  0157CE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16562  0157D0  0E00               	movlw	0
 16563  0157D2  ECF6  F0B0         	call	_LCD_send_command
 16564                           
 16565                           ;src\LCD_44780.c: 129: }
 16566  0157D6  0012               	return	
 16567  0157D8                     l8311:
 16568  0157D8  0100               	movlb	0	; () banked
 16569  0157DA  517D               	movf	LCD_goto_line@line& (0+255),w,b
 16570                           
 16571                           ; Switch size 1, requested type "space"
 16572                           ; Number of cases is 4, Range of values is 1 to 4
 16573                           ; switch strategies available:
 16574                           ; Name         Instructions Cycles
 16575                           ; simple_byte           13     7 (average)
 16576                           ;	Chosen strategy is simple_byte
 16577  0157DC  0A01               	xorlw	1	; case 1
 16578  0157DE  B4D8               	btfsc	status,2,c
 16579  0157E0  D797               	goto	l8303
 16580  0157E2  0A03               	xorlw	3	; case 2
 16581  0157E4  B4D8               	btfsc	status,2,c
 16582  0157E6  D7AD               	goto	l8305
 16583  0157E8  0A01               	xorlw	1	; case 3
 16584  0157EA  B4D8               	btfsc	status,2,c
 16585  0157EC  D7C3               	goto	l8307
 16586  0157EE  0A07               	xorlw	7	; case 4
 16587  0157F0  A4D8               	btfss	status,2,c
 16588  0157F2  0012               	return	
 16589  0157F4  D7D8               	goto	l8309
 16590  0157F6                     __end_of_LCD_goto_line:
 16591                           	opt stack 0
 16592                           tblptru	equ	0xFF8
 16593                           tblptrh	equ	0xFF7
 16594                           tblptrl	equ	0xFF6
 16595                           tablat	equ	0xFF5
 16596                           prodh	equ	0xFF4
 16597                           prodl	equ	0xFF3
 16598                           intcon	equ	0xFF2
 16599                           postinc0	equ	0xFEE
 16600                           wreg	equ	0xFE8
 16601                           indf1	equ	0xFE7
 16602                           plusw1	equ	0xFE3
 16603                           fsr1h	equ	0xFE2
 16604                           fsr1l	equ	0xFE1
 16605                           indf2	equ	0xFDF
 16606                           postinc2	equ	0xFDE
 16607                           plusw2	equ	0xFDB
 16608                           fsr2h	equ	0xFDA
 16609                           fsr2l	equ	0xFD9
 16610                           status	equ	0xFD8
 16611                           
 16612 ;; *************** function _LCD_send_command *****************
 16613 ;; Defined at:
 16614 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;  D3              1    wreg     unsigned char 
 16617 ;;  D2              1   25[BANK0 ] unsigned char 
 16618 ;;  D1              1   26[BANK0 ] unsigned char 
 16619 ;;  D0              1   27[BANK0 ] unsigned char 
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;  D3              1   28[BANK0 ] unsigned char 
 16622 ;; Return value:  Size  Location     Type
 16623 ;;		None               void
 16624 ;; Registers used:
 16625 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16631 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16634 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;Total ram usage:        4 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; Hardware stack levels required when called:    6
 16638 ;; This function calls:
 16639 ;;		_LCD_enable_pulse
 16640 ;; This function is called by:
 16641 ;;		_LCD_shift_cursor
 16642 ;;		_LCD_goto_line
 16643 ;;		_LCD_write_char
 16644 ;;		_LCD_clear
 16645 ;;		_LCD_cursor
 16646 ;;		_LCD_initialize
 16647 ;;		_LCD_home
 16648 ;;		_LCD_shift
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           	psect	text45
 16653  0161EC                     __ptext45:
 16654                           	opt stack 0
 16655  0161EC                     _LCD_send_command:
 16656                           	opt stack 22
 16657                           
 16658                           ;incstack = 0
 16659                           ;LCD_send_command@D3 stored from wreg
 16660  0161EC  0100               	movlb	0	; () banked
 16661  0161EE  6F7C               	movwf	LCD_send_command@D3& (0+255),b
 16662                           
 16663                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16664  0161F0  0100               	movlb	0	; () banked
 16665  0161F2  B17B               	btfsc	LCD_send_command@D0& (0+255),0,b
 16666  0161F4  D002               	bra	u10315
 16667  0161F6  948B               	bcf	3979,2,c	;volatile
 16668  0161F8  D001               	bra	u10316
 16669  0161FA                     u10315:
 16670  0161FA  848B               	bsf	3979,2,c	;volatile
 16671  0161FC                     u10316:
 16672                           
 16673                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16674  0161FC  0100               	movlb	0	; () banked
 16675  0161FE  B17A               	btfsc	LCD_send_command@D1& (0+255),0,b
 16676  016200  D002               	bra	u10325
 16677  016202  968B               	bcf	3979,3,c	;volatile
 16678  016204  D001               	bra	u10326
 16679  016206                     u10325:
 16680  016206  868B               	bsf	3979,3,c	;volatile
 16681  016208                     u10326:
 16682                           
 16683                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16684  016208  0100               	movlb	0	; () banked
 16685  01620A  B179               	btfsc	LCD_send_command@D2& (0+255),0,b
 16686  01620C  D002               	bra	u10335
 16687  01620E  908C               	bcf	3980,0,c	;volatile
 16688  016210  D001               	bra	u10336
 16689  016212                     u10335:
 16690  016212  808C               	bsf	3980,0,c	;volatile
 16691  016214                     u10336:
 16692                           
 16693                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16694  016214  0100               	movlb	0	; () banked
 16695  016216  B17C               	btfsc	LCD_send_command@D3& (0+255),0,b
 16696  016218  D002               	bra	u10345
 16697  01621A  928C               	bcf	3980,1,c	;volatile
 16698  01621C  D001               	bra	u10346
 16699  01621E                     u10345:
 16700  01621E  828C               	bsf	3980,1,c	;volatile
 16701  016220                     u10346:
 16702                           
 16703                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16704  016220  ECED  F0B1         	call	_LCD_enable_pulse	;wreg free
 16705  016224  0012               	return		;funcret
 16706  016226                     __end_of_LCD_send_command:
 16707                           	opt stack 0
 16708                           tblptru	equ	0xFF8
 16709                           tblptrh	equ	0xFF7
 16710                           tblptrl	equ	0xFF6
 16711                           tablat	equ	0xFF5
 16712                           prodh	equ	0xFF4
 16713                           prodl	equ	0xFF3
 16714                           intcon	equ	0xFF2
 16715                           postinc0	equ	0xFEE
 16716                           wreg	equ	0xFE8
 16717                           indf1	equ	0xFE7
 16718                           plusw1	equ	0xFE3
 16719                           fsr1h	equ	0xFE2
 16720                           fsr1l	equ	0xFE1
 16721                           indf2	equ	0xFDF
 16722                           postinc2	equ	0xFDE
 16723                           plusw2	equ	0xFDB
 16724                           fsr2h	equ	0xFDA
 16725                           fsr2l	equ	0xFD9
 16726                           status	equ	0xFD8
 16727                           
 16728 ;; *************** function _LCD_enable_pulse *****************
 16729 ;; Defined at:
 16730 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16731 ;; Parameters:    Size  Location     Type
 16732 ;;		None
 16733 ;; Auto vars:     Size  Location     Type
 16734 ;;		None
 16735 ;; Return value:  Size  Location     Type
 16736 ;;		None               void
 16737 ;; Registers used:
 16738 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16739 ;; Tracked objects:
 16740 ;;		On entry : 0/0
 16741 ;;		On exit  : 0/0
 16742 ;;		Unchanged: 0/0
 16743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16748 ;;Total ram usage:        0 bytes
 16749 ;; Hardware stack levels used:    1
 16750 ;; Hardware stack levels required when called:    5
 16751 ;; This function calls:
 16752 ;;		_delay_ms
 16753 ;; This function is called by:
 16754 ;;		_LCD_send_command
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           	psect	text46
 16759  0163DA                     __ptext46:
 16760                           	opt stack 0
 16761  0163DA                     _LCD_enable_pulse:
 16762                           	opt stack 22
 16763                           
 16764                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16765                           
 16766                           ;incstack = 0
 16767  0163DA  828B               	bsf	3979,1,c	;volatile
 16768                           
 16769                           ;src\LCD_44780.c: 52: delay_ms (1);
 16770  0163DC  0E00               	movlw	0
 16771  0163DE  0100               	movlb	0	; () banked
 16772  0163E0  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16773  0163E2  0E01               	movlw	1
 16774  0163E4  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16775  0163E6  EC13  F0B1         	call	_delay_ms	;wreg free
 16776                           
 16777                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16778  0163EA  928B               	bcf	3979,1,c	;volatile
 16779                           
 16780                           ;src\LCD_44780.c: 54: delay_ms (1);
 16781  0163EC  0E00               	movlw	0
 16782  0163EE  0100               	movlb	0	; () banked
 16783  0163F0  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16784  0163F2  0E01               	movlw	1
 16785  0163F4  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16786  0163F6  EC13  F0B1         	call	_delay_ms	;wreg free
 16787  0163FA  0012               	return		;funcret
 16788  0163FC                     __end_of_LCD_enable_pulse:
 16789                           	opt stack 0
 16790                           tblptru	equ	0xFF8
 16791                           tblptrh	equ	0xFF7
 16792                           tblptrl	equ	0xFF6
 16793                           tablat	equ	0xFF5
 16794                           prodh	equ	0xFF4
 16795                           prodl	equ	0xFF3
 16796                           intcon	equ	0xFF2
 16797                           postinc0	equ	0xFEE
 16798                           wreg	equ	0xFE8
 16799                           indf1	equ	0xFE7
 16800                           plusw1	equ	0xFE3
 16801                           fsr1h	equ	0xFE2
 16802                           fsr1l	equ	0xFE1
 16803                           indf2	equ	0xFDF
 16804                           postinc2	equ	0xFDE
 16805                           plusw2	equ	0xFDB
 16806                           fsr2h	equ	0xFDA
 16807                           fsr2l	equ	0xFD9
 16808                           status	equ	0xFD8
 16809                           
 16810 ;; *************** function _delay_ms *****************
 16811 ;; Defined at:
 16812 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16813 ;; Parameters:    Size  Location     Type
 16814 ;;  value_ms        2   23[BANK0 ] unsigned int 
 16815 ;; Auto vars:     Size  Location     Type
 16816 ;;		None
 16817 ;; Return value:  Size  Location     Type
 16818 ;;		None               void
 16819 ;; Registers used:
 16820 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16821 ;; Tracked objects:
 16822 ;;		On entry : 0/0
 16823 ;;		On exit  : 0/0
 16824 ;;		Unchanged: 0/0
 16825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;Total ram usage:        2 bytes
 16831 ;; Hardware stack levels used:    1
 16832 ;; Hardware stack levels required when called:    4
 16833 ;; This function calls:
 16834 ;;		___wmul
 16835 ;; This function is called by:
 16836 ;;		_LCD_enable_pulse
 16837 ;;		_LCD_initialize
 16838 ;;		_main
 16839 ;;		_delay_s
 16840 ;; This function uses a non-reentrant model
 16841 ;;
 16842                           
 16843                           	psect	text47
 16844  016226                     __ptext47:
 16845                           	opt stack 0
 16846  016226                     _delay_ms:
 16847                           	opt stack 26
 16848                           
 16849                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16850                           
 16851                           ;incstack = 0
 16852  016226  C0ED  F071         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16853  01622A  0100               	movlb	0	; () banked
 16854  01622C  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 16855  01622E  C077  F073         	movff	delay_ms@value_ms,___wmul@multiplicand
 16856  016232  C078  F074         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16857  016236  EC4C  F0B1         	call	___wmul	;wreg free
 16858  01623A  C071  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
 16859  01623E  C072  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16860                           
 16861                           ;src\delay.c: 75: while (clock_counter_reference) {
 16862  016242  D007               	goto	l589
 16863  016244                     l7847:
 16864                           
 16865                           ;src\delay.c: 85: _delay(240);
 16866  016244  0E50               	movlw	80
 16867  016246                     u13397:
 16868  016246  2EE8               	decfsz	wreg,f,c
 16869  016248  D7FE               	goto	u13397
 16870                           
 16871                           ;src\delay.c: 88: clock_counter_reference--;
 16872  01624A  0100               	movlb	0	; () banked
 16873  01624C  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16874  01624E  A0D8               	btfss	status,0,c
 16875  016250  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16876  016252                     l589:
 16877  016252  0100               	movlb	0	; () banked
 16878  016254  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16879  016256  0100               	movlb	0	; () banked
 16880  016258  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16881  01625A  B4D8               	btfsc	status,2,c
 16882  01625C  0012               	return	
 16883  01625E  D7F2               	goto	l7847
 16884  016260                     __end_of_delay_ms:
 16885                           	opt stack 0
 16886                           tblptru	equ	0xFF8
 16887                           tblptrh	equ	0xFF7
 16888                           tblptrl	equ	0xFF6
 16889                           tablat	equ	0xFF5
 16890                           prodh	equ	0xFF4
 16891                           prodl	equ	0xFF3
 16892                           intcon	equ	0xFF2
 16893                           postinc0	equ	0xFEE
 16894                           wreg	equ	0xFE8
 16895                           indf1	equ	0xFE7
 16896                           plusw1	equ	0xFE3
 16897                           fsr1h	equ	0xFE2
 16898                           fsr1l	equ	0xFE1
 16899                           indf2	equ	0xFDF
 16900                           postinc2	equ	0xFDE
 16901                           plusw2	equ	0xFDB
 16902                           fsr2h	equ	0xFDA
 16903                           fsr2l	equ	0xFD9
 16904                           status	equ	0xFD8
 16905                           
 16906 ;; *************** function ___wmul *****************
 16907 ;; Defined at:
 16908 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;  multiplier      2   17[BANK0 ] unsigned int 
 16911 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 16912 ;; Auto vars:     Size  Location     Type
 16913 ;;  product         2   21[BANK0 ] unsigned int 
 16914 ;; Return value:  Size  Location     Type
 16915 ;;                  2   17[BANK0 ] unsigned int 
 16916 ;; Registers used:
 16917 ;;		wreg, status,2, status,0, prodl, prodh
 16918 ;; Tracked objects:
 16919 ;;		On entry : 0/0
 16920 ;;		On exit  : 0/0
 16921 ;;		Unchanged: 0/0
 16922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16923 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16924 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16927 ;;Total ram usage:        6 bytes
 16928 ;; Hardware stack levels used:    1
 16929 ;; Hardware stack levels required when called:    3
 16930 ;; This function calls:
 16931 ;;		Nothing
 16932 ;; This function is called by:
 16933 ;;		_delay_ms
 16934 ;;		_sprintf
 16935 ;; This function uses a non-reentrant model
 16936 ;;
 16937                           
 16938                           	psect	text48
 16939  016298                     __ptext48:
 16940                           	opt stack 0
 16941  016298                     ___wmul:
 16942                           	opt stack 26
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;incstack = 0
 16946  016298  0100               	movlb	0	; () banked
 16947  01629A  5171               	movf	___wmul@multiplier& (0+255),w,b
 16948  01629C  0100               	movlb	0	; () banked
 16949  01629E  0373               	mulwf	___wmul@multiplicand& (0+255),b
 16950  0162A0  CFF3 F075          	movff	prodl,___wmul@product
 16951  0162A4  CFF4 F076          	movff	prodh,___wmul@product+1
 16952  0162A8  0100               	movlb	0	; () banked
 16953  0162AA  5171               	movf	___wmul@multiplier& (0+255),w,b
 16954  0162AC  0100               	movlb	0	; () banked
 16955  0162AE  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16956  0162B0  50F3               	movf	prodl,w,c
 16957  0162B2  0100               	movlb	0	; () banked
 16958  0162B4  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 16959  0162B6  0100               	movlb	0	; () banked
 16960  0162B8  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16961  0162BA  0100               	movlb	0	; () banked
 16962  0162BC  0373               	mulwf	___wmul@multiplicand& (0+255),b
 16963  0162BE  50F3               	movf	prodl,w,c
 16964  0162C0  0100               	movlb	0	; () banked
 16965  0162C2  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 16966                           
 16967                           ; BSR set to: 0
 16968  0162C4  C075  F071         	movff	___wmul@product,?___wmul
 16969  0162C8  C076  F072         	movff	___wmul@product+1,?___wmul+1
 16970  0162CC  0012               	return	
 16971  0162CE                     __end_of___wmul:
 16972                           	opt stack 0
 16973                           tblptru	equ	0xFF8
 16974                           tblptrh	equ	0xFF7
 16975                           tblptrl	equ	0xFF6
 16976                           tablat	equ	0xFF5
 16977                           prodh	equ	0xFF4
 16978                           prodl	equ	0xFF3
 16979                           intcon	equ	0xFF2
 16980                           postinc0	equ	0xFEE
 16981                           wreg	equ	0xFE8
 16982                           indf1	equ	0xFE7
 16983                           plusw1	equ	0xFE3
 16984                           fsr1h	equ	0xFE2
 16985                           fsr1l	equ	0xFE1
 16986                           indf2	equ	0xFDF
 16987                           postinc2	equ	0xFDE
 16988                           plusw2	equ	0xFDB
 16989                           fsr2h	equ	0xFDA
 16990                           fsr2l	equ	0xFD9
 16991                           status	equ	0xFD8
 16992                           
 16993 ;; *************** function _Joystick_Polling *****************
 16994 ;; Defined at:
 16995 ;;		line 558 in file "RemoteCan.c"
 16996 ;; Parameters:    Size  Location     Type
 16997 ;;		None
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;  i               1   18[BANK0 ] unsigned char 
 17000 ;; Return value:  Size  Location     Type
 17001 ;;		None               void
 17002 ;; Registers used:
 17003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17004 ;; Tracked objects:
 17005 ;;		On entry : 0/0
 17006 ;;		On exit  : 0/0
 17007 ;;		Unchanged: 0/0
 17008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17013 ;;Total ram usage:        2 bytes
 17014 ;; Hardware stack levels used:    1
 17015 ;; Hardware stack levels required when called:    3
 17016 ;; This function calls:
 17017 ;;		Nothing
 17018 ;; This function is called by:
 17019 ;;		_main
 17020 ;; This function uses a non-reentrant model
 17021 ;;
 17022                           
 17023                           	psect	text49
 17024  016076                     __ptext49:
 17025                           	opt stack 0
 17026  016076                     _Joystick_Polling:
 17027                           	opt stack 27
 17028                           
 17029                           ;RemoteCan.c: 559: for (unsigned char i = 0; i < 2; i++) {
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;incstack = 0
 17033  016076  0E00               	movlw	0
 17034  016078  0100               	movlb	0	; () banked
 17035  01607A  6F72               	movwf	Joystick_Polling@i& (0+255),b
 17036  01607C                     l7107:
 17037                           
 17038                           ; BSR set to: 0
 17039  01607C  0E01               	movlw	1
 17040  01607E  0100               	movlb	0	; () banked
 17041  016080  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 17042  016082  D001               	goto	l920
 17043  016084  0012               	return	
 17044  016086                     l920:
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;RemoteCan.c: 560: ADCON0bits.GO = 1;
 17048  016086  82C2               	bsf	4034,1,c	;volatile
 17049  016088                     l922:
 17050  016088  B2C2               	btfsc	4034,1,c	;volatile
 17051  01608A  D7FE               	goto	l922
 17052                           
 17053                           ;RemoteCan.c: 562: JoystickValues[i] = ADRESH;
 17054  01608C  0100               	movlb	0	; () banked
 17055  01608E  5172               	movf	Joystick_Polling@i& (0+255),w,b
 17056  016090  0D01               	mullw	1
 17057  016092  0EDD               	movlw	low _JoystickValues
 17058  016094  24F3               	addwf	prodl,w,c
 17059  016096  6ED9               	movwf	fsr2l,c
 17060  016098  0E00               	movlw	high _JoystickValues
 17061  01609A  20F4               	addwfc	prodh,w,c
 17062  01609C  6EDA               	movwf	fsr2h,c
 17063  01609E  CFC4 FFDF          	movff	4036,indf2	;volatile
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;RemoteCan.c: 563: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 17067  0160A2  A4C2               	btfss	4034,2,c	;volatile
 17068  0160A4  D002               	goto	u9090
 17069  0160A6  0E01               	movlw	1
 17070  0160A8  D001               	goto	u9096
 17071  0160AA                     u9090:
 17072  0160AA  0E00               	movlw	0
 17073  0160AC                     u9096:
 17074  0160AC  0AFF               	xorlw	255
 17075  0160AE  0100               	movlb	0	; () banked
 17076  0160B0  6F71               	movwf	??_Joystick_Polling& (0+255),b
 17077  0160B2  0100               	movlb	0	; () banked
 17078  0160B4  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 17079  0160B6  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 17080  0160B8  50C2               	movf	4034,w,c	;volatile
 17081  0160BA  0100               	movlb	0	; () banked
 17082  0160BC  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 17083  0160BE  0BFB               	andlw	-5
 17084  0160C0  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 17085  0160C2  6EC2               	movwf	4034,c	;volatile
 17086                           
 17087                           ; BSR set to: 0
 17088  0160C4  0100               	movlb	0	; () banked
 17089  0160C6  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 17090  0160C8  D7D9               	goto	l7107
 17091  0160CA                     __end_of_Joystick_Polling:
 17092                           	opt stack 0
 17093                           tblptru	equ	0xFF8
 17094                           tblptrh	equ	0xFF7
 17095                           tblptrl	equ	0xFF6
 17096                           tablat	equ	0xFF5
 17097                           prodh	equ	0xFF4
 17098                           prodl	equ	0xFF3
 17099                           intcon	equ	0xFF2
 17100                           postinc0	equ	0xFEE
 17101                           wreg	equ	0xFE8
 17102                           indf1	equ	0xFE7
 17103                           plusw1	equ	0xFE3
 17104                           fsr1h	equ	0xFE2
 17105                           fsr1l	equ	0xFE1
 17106                           indf2	equ	0xFDF
 17107                           postinc2	equ	0xFDE
 17108                           plusw2	equ	0xFDB
 17109                           fsr2h	equ	0xFDA
 17110                           fsr2l	equ	0xFD9
 17111                           status	equ	0xFD8
 17112                           
 17113 ;; *************** function _F2_Button_Polling *****************
 17114 ;; Defined at:
 17115 ;;		line 548 in file "RemoteCan.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;		None
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;		None
 17120 ;; Return value:  Size  Location     Type
 17121 ;;		None               void
 17122 ;; Registers used:
 17123 ;;		None
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17133 ;;Total ram usage:        0 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:    3
 17136 ;; This function calls:
 17137 ;;		Nothing
 17138 ;; This function is called by:
 17139 ;;		_main
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           	psect	text50
 17144  016452                     __ptext50:
 17145                           	opt stack 0
 17146  016452                     _F2_Button_Polling:
 17147                           	opt stack 27
 17148                           
 17149                           ;RemoteCan.c: 549: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 17150                           
 17151                           ; BSR set to: 0
 17152                           ;incstack = 0
 17153  016452  A281               	btfss	3969,1,c	;volatile
 17154  016454  D002               	goto	l915
 17155  016456  B04D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17156  016458  0012               	return	
 17157  01645A                     l915:
 17158                           
 17159                           ;RemoteCan.c: 550: wait_low_3 = 0;
 17160  01645A  904D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17161                           
 17162                           ;RemoteCan.c: 551: if (PORTBbits.RB1 == 1) {
 17163  01645C  A281               	btfss	3969,1,c	;volatile
 17164  01645E  0012               	return	
 17165                           
 17166                           ;RemoteCan.c: 552: F2_switch = ~F2_switch;
 17167  016460  B64B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17168  016462  D002               	goto	u9020
 17169  016464  864B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17170  016466  D001               	goto	u9035
 17171  016468                     u9020:
 17172  016468  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17173  01646A                     u9035:
 17174                           
 17175                           ;RemoteCan.c: 553: wait_low_3 = 1;
 17176  01646A  804D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17177  01646C  0012               	return	
 17178  01646E                     __end_of_F2_Button_Polling:
 17179                           	opt stack 0
 17180                           tblptru	equ	0xFF8
 17181                           tblptrh	equ	0xFF7
 17182                           tblptrl	equ	0xFF6
 17183                           tablat	equ	0xFF5
 17184                           prodh	equ	0xFF4
 17185                           prodl	equ	0xFF3
 17186                           intcon	equ	0xFF2
 17187                           postinc0	equ	0xFEE
 17188                           wreg	equ	0xFE8
 17189                           indf1	equ	0xFE7
 17190                           plusw1	equ	0xFE3
 17191                           fsr1h	equ	0xFE2
 17192                           fsr1l	equ	0xFE1
 17193                           indf2	equ	0xFDF
 17194                           postinc2	equ	0xFDE
 17195                           plusw2	equ	0xFDB
 17196                           fsr2h	equ	0xFDA
 17197                           fsr2l	equ	0xFD9
 17198                           status	equ	0xFD8
 17199                           
 17200 ;; *************** function _F1_Button_Polling *****************
 17201 ;; Defined at:
 17202 ;;		line 538 in file "RemoteCan.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;		None
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;		None
 17207 ;; Return value:  Size  Location     Type
 17208 ;;		None               void
 17209 ;; Registers used:
 17210 ;;		None
 17211 ;; Tracked objects:
 17212 ;;		On entry : 0/0
 17213 ;;		On exit  : 0/0
 17214 ;;		Unchanged: 0/0
 17215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17220 ;;Total ram usage:        0 bytes
 17221 ;; Hardware stack levels used:    1
 17222 ;; Hardware stack levels required when called:    3
 17223 ;; This function calls:
 17224 ;;		Nothing
 17225 ;; This function is called by:
 17226 ;;		_main
 17227 ;; This function uses a non-reentrant model
 17228 ;;
 17229                           
 17230                           	psect	text51
 17231  01646E                     __ptext51:
 17232                           	opt stack 0
 17233  01646E                     _F1_Button_Polling:
 17234                           	opt stack 27
 17235                           
 17236                           ;RemoteCan.c: 539: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 17237                           
 17238                           ;incstack = 0
 17239  01646E  A881               	btfss	3969,4,c	;volatile
 17240  016470  D002               	goto	l908
 17241  016472  BE4C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17242  016474  0012               	return	
 17243  016476                     l908:
 17244                           
 17245                           ;RemoteCan.c: 540: wait_low_2 = 0;
 17246  016476  9E4C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17247                           
 17248                           ;RemoteCan.c: 541: if (PORTBbits.RB4 == 1) {
 17249  016478  A881               	btfss	3969,4,c	;volatile
 17250  01647A  0012               	return	
 17251                           
 17252                           ;RemoteCan.c: 542: F1_switch = ~F1_switch;
 17253  01647C  B44B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17254  01647E  D002               	goto	u8970
 17255  016480  844B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17256  016482  D001               	goto	u8985
 17257  016484                     u8970:
 17258  016484  944B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17259  016486                     u8985:
 17260                           
 17261                           ;RemoteCan.c: 543: wait_low_2 = 1;
 17262  016486  8E4C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17263  016488  0012               	return	
 17264  01648A                     __end_of_F1_Button_Polling:
 17265                           	opt stack 0
 17266                           tblptru	equ	0xFF8
 17267                           tblptrh	equ	0xFF7
 17268                           tblptrl	equ	0xFF6
 17269                           tablat	equ	0xFF5
 17270                           prodh	equ	0xFF4
 17271                           prodl	equ	0xFF3
 17272                           intcon	equ	0xFF2
 17273                           postinc0	equ	0xFEE
 17274                           wreg	equ	0xFE8
 17275                           indf1	equ	0xFE7
 17276                           plusw1	equ	0xFE3
 17277                           fsr1h	equ	0xFE2
 17278                           fsr1l	equ	0xFE1
 17279                           indf2	equ	0xFDF
 17280                           postinc2	equ	0xFDE
 17281                           plusw2	equ	0xFDB
 17282                           fsr2h	equ	0xFDA
 17283                           fsr2l	equ	0xFD9
 17284                           status	equ	0xFD8
 17285                           
 17286 ;; *************** function _CAN_Tx *****************
 17287 ;; Defined at:
 17288 ;;		line 567 in file "RemoteCan.c"
 17289 ;; Parameters:    Size  Location     Type
 17290 ;;		None
 17291 ;; Auto vars:     Size  Location     Type
 17292 ;;		None
 17293 ;; Return value:  Size  Location     Type
 17294 ;;		None               void
 17295 ;; Registers used:
 17296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17297 ;; Tracked objects:
 17298 ;;		On entry : 0/0
 17299 ;;		On exit  : 0/0
 17300 ;;		Unchanged: 0/0
 17301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17306 ;;Total ram usage:        0 bytes
 17307 ;; Hardware stack levels used:    1
 17308 ;; Hardware stack levels required when called:    4
 17309 ;; This function calls:
 17310 ;;		_CANisTxReady
 17311 ;;		_CANsendMessage
 17312 ;; This function is called by:
 17313 ;;		_main
 17314 ;; This function uses a non-reentrant model
 17315 ;;
 17316                           
 17317                           	psect	text52
 17318  015A2E                     __ptext52:
 17319                           	opt stack 0
 17320  015A2E                     _CAN_Tx:
 17321                           	opt stack 26
 17322  015A2E                     l7087:
 17323  015A2E  ECDB  F0B1         	call	_CANisTxReady	;wreg free
 17324  015A32  06E8               	decf	wreg,f,c
 17325  015A34  A4D8               	btfss	status,2,c
 17326  015A36  D7FB               	goto	l7087
 17327                           
 17328                           ;RemoteCan.c: 570: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17329  015A38  0E05               	movlw	5
 17330  015A3A  0100               	movlb	0	; () banked
 17331  015A3C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17332  015A3E  0E00               	movlw	0
 17333  015A40  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17334  015A42  0E00               	movlw	0
 17335  015A44  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17336  015A46  0E00               	movlw	0
 17337  015A48  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17338  015A4A  0EEC               	movlw	low _data_steering
 17339  015A4C  0100               	movlb	0	; () banked
 17340  015A4E  6F75               	movwf	CANsendMessage@data& (0+255),b
 17341  015A50  0E00               	movlw	high _data_steering
 17342  015A52  0100               	movlb	0	; () banked
 17343  015A54  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17344  015A56  0E08               	movlw	8
 17345  015A58  0100               	movlb	0	; () banked
 17346  015A5A  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17347  015A5C  0EBC               	movlw	188
 17348  015A5E  0100               	movlb	0	; () banked
 17349  015A60  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17350  015A62  ECCD  F089         	call	_CANsendMessage	;wreg free
 17351                           
 17352                           ;RemoteCan.c: 573: data_speed[0] = set_speed;
 17353  015A66  C0E3  F0EB         	movff	_set_speed,_data_speed	;volatile
 17354                           
 17355                           ;RemoteCan.c: 574: data_speed[1] = (set_speed >> 8);
 17356  015A6A  0100               	movlb	0	; () banked
 17357  015A6C  51E4               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17358  015A6E  0100               	movlb	0	; () banked
 17359  015A70  6FEC               	movwf	(_data_speed+1)& (0+255),b
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;RemoteCan.c: 575: data_speed[2] = dir;
 17363  015A72  C0E5  F0ED         	movff	_dir,_data_speed+2	;volatile
 17364  015A76                     l7097:
 17365  015A76  ECDB  F0B1         	call	_CANisTxReady	;wreg free
 17366  015A7A  06E8               	decf	wreg,f,c
 17367  015A7C  A4D8               	btfss	status,2,c
 17368  015A7E  D7FB               	goto	l7097
 17369                           
 17370                           ;RemoteCan.c: 577: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17371  015A80  0E03               	movlw	3
 17372  015A82  0100               	movlb	0	; () banked
 17373  015A84  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17374  015A86  0E00               	movlw	0
 17375  015A88  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17376  015A8A  0E00               	movlw	0
 17377  015A8C  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17378  015A8E  0E00               	movlw	0
 17379  015A90  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17380  015A92  0EEB               	movlw	low _data_speed
 17381  015A94  0100               	movlb	0	; () banked
 17382  015A96  6F75               	movwf	CANsendMessage@data& (0+255),b
 17383  015A98  0E00               	movlw	high _data_speed
 17384  015A9A  0100               	movlb	0	; () banked
 17385  015A9C  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17386  015A9E  0E08               	movlw	8
 17387  015AA0  0100               	movlb	0	; () banked
 17388  015AA2  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17389  015AA4  0EBC               	movlw	188
 17390  015AA6  0100               	movlb	0	; () banked
 17391  015AA8  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17392  015AAA  ECCD  F089         	call	_CANsendMessage	;wreg free
 17393  015AAE                     l7101:
 17394  015AAE  ECDB  F0B1         	call	_CANisTxReady	;wreg free
 17395  015AB2  06E8               	decf	wreg,f,c
 17396  015AB4  A4D8               	btfss	status,2,c
 17397  015AB6  D7FB               	goto	l7101
 17398                           
 17399                           ;RemoteCan.c: 581: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 17400  015AB8  0E04               	movlw	4
 17401  015ABA  0100               	movlb	0	; () banked
 17402  015ABC  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 17403  015ABE  0E00               	movlw	0
 17404  015AC0  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17405  015AC2  0E00               	movlw	0
 17406  015AC4  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17407  015AC6  0E00               	movlw	0
 17408  015AC8  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17409  015ACA  0EEA               	movlw	low _data_brake
 17410  015ACC  0100               	movlb	0	; () banked
 17411  015ACE  6F75               	movwf	CANsendMessage@data& (0+255),b
 17412  015AD0  0E00               	movlw	high _data_brake
 17413  015AD2  0100               	movlb	0	; () banked
 17414  015AD4  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 17415  015AD6  0E08               	movlw	8
 17416  015AD8  0100               	movlb	0	; () banked
 17417  015ADA  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 17418  015ADC  0EBD               	movlw	189
 17419  015ADE  0100               	movlb	0	; () banked
 17420  015AE0  6F78               	movwf	CANsendMessage@flags& (0+255),b
 17421  015AE2  ECCD  F089         	call	_CANsendMessage	;wreg free
 17422  015AE6  0012               	return		;funcret
 17423  015AE8                     __end_of_CAN_Tx:
 17424                           	opt stack 0
 17425                           tblptru	equ	0xFF8
 17426                           tblptrh	equ	0xFF7
 17427                           tblptrl	equ	0xFF6
 17428                           tablat	equ	0xFF5
 17429                           prodh	equ	0xFF4
 17430                           prodl	equ	0xFF3
 17431                           intcon	equ	0xFF2
 17432                           postinc0	equ	0xFEE
 17433                           wreg	equ	0xFE8
 17434                           indf1	equ	0xFE7
 17435                           plusw1	equ	0xFE3
 17436                           fsr1h	equ	0xFE2
 17437                           fsr1l	equ	0xFE1
 17438                           indf2	equ	0xFDF
 17439                           postinc2	equ	0xFDE
 17440                           plusw2	equ	0xFDB
 17441                           fsr2h	equ	0xFDA
 17442                           fsr2l	equ	0xFD9
 17443                           status	equ	0xFD8
 17444                           
 17445 ;; *************** function _CANsendMessage *****************
 17446 ;; Defined at:
 17447 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17448 ;; Parameters:    Size  Location     Type
 17449 ;;  identifier      4   17[BANK0 ] unsigned long 
 17450 ;;  data            2   21[BANK0 ] PTR unsigned char 
 17451 ;;		 -> data_speed(1), park_assist_state(8), data_steering(1), data_brake(1), 
 17452 ;;		 -> data(1), 
 17453 ;;  dataLength      1   23[BANK0 ] unsigned char 
 17454 ;;  flags           1   24[BANK0 ] enum E16909
 17455 ;; Auto vars:     Size  Location     Type
 17456 ;;  tamp            4   29[BANK0 ] unsigned long 
 17457 ;; Return value:  Size  Location     Type
 17458 ;;		None               void
 17459 ;; Registers used:
 17460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17461 ;; Tracked objects:
 17462 ;;		On entry : 0/0
 17463 ;;		On exit  : 0/0
 17464 ;;		Unchanged: 0/0
 17465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17466 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17469 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17470 ;;Total ram usage:       16 bytes
 17471 ;; Hardware stack levels used:    1
 17472 ;; Hardware stack levels required when called:    3
 17473 ;; This function calls:
 17474 ;;		Nothing
 17475 ;; This function is called by:
 17476 ;;		_main
 17477 ;;		_LCD_Handler
 17478 ;;		_CAN_Tx
 17479 ;; This function uses a non-reentrant model
 17480 ;;
 17481                           
 17482                           	psect	text53
 17483  01139A                     __ptext53:
 17484                           	opt stack 0
 17485  01139A                     _CANsendMessage:
 17486                           	opt stack 26
 17487                           
 17488                           ;inc\CANlib.h: 296: unsigned long tamp;
 17489                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17490                           
 17491                           ;incstack = 0
 17492  01139A  010F               	movlb	15	; () banked
 17493  01139C  B740               	btfsc	64,3,b	;volatile
 17494  01139E  D13F               	goto	l383
 17495                           
 17496                           ; BSR set to: 15
 17497                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17498  0113A0  C077  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17499                           
 17500                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17501  0113A4  0100               	movlb	0	; () banked
 17502  0113A6  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 17503  0113A8  D003               	goto	l384
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17507  0113AA  010F               	movlb	15	; () banked
 17508  0113AC  8D45               	bsf	69,6,b	;volatile
 17509  0113AE  D002               	goto	l385
 17510  0113B0                     l384:
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;inc\CANlib.h: 302: else
 17514                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17515  0113B0  010F               	movlb	15	; () banked
 17516  0113B2  9D45               	bcf	69,6,b	;volatile
 17517  0113B4                     l385:
 17518                           
 17519                           ; BSR set to: 15
 17520                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17521  0113B4  0100               	movlb	0	; () banked
 17522  0113B6  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 17523  0113B8  D079               	goto	l386
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;inc\CANlib.h: 306: {
 17527                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17528  0113BA  0100               	movlb	0	; () banked
 17529  0113BC  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 17530  0113BE  0100               	movlb	0	; () banked
 17531  0113C0  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17532  0113C2  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17533  0113C4  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17534  0113C6  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17538  0113C8  C07D  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17542  0113CC  0E00               	movlw	0
 17543  0113CE  0100               	movlb	0	; () banked
 17544  0113D0  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17545  0113D2  0100               	movlb	0	; () banked
 17546  0113D4  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17547  0113D6  0EFF               	movlw	255
 17548  0113D8  0100               	movlb	0	; () banked
 17549  0113DA  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17550  0113DC  0100               	movlb	0	; () banked
 17551  0113DE  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17552  0113E0  0E00               	movlw	0
 17553  0113E2  0100               	movlb	0	; () banked
 17554  0113E4  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17555  0113E6  0100               	movlb	0	; () banked
 17556  0113E8  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17557  0113EA  0E00               	movlw	0
 17558  0113EC  0100               	movlb	0	; () banked
 17559  0113EE  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17560  0113F0  0100               	movlb	0	; () banked
 17561  0113F2  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17562                           
 17563                           ; BSR set to: 0
 17564                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17565  0113F4  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17566  0113F8  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17567  0113FC  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17568  011400  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17569  011404  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 17570  011408  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17571  01140C  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17572  011410  0100               	movlb	0	; () banked
 17573  011412  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 17574  011414  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17575  011418  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17576  01141C  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17577  011420  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17578                           
 17579                           ; BSR set to: 0
 17580                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17581  011424  C07D  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17582                           
 17583                           ; BSR set to: 0
 17584                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17585  011428  0E00               	movlw	0
 17586  01142A  010F               	movlb	15	; () banked
 17587  01142C  6F42               	movwf	66,b	;volatile
 17588                           
 17589                           ; BSR set to: 15
 17590                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17591  01142E  010F               	movlb	15	; () banked
 17592  011430  8742               	bsf	66,3,b	;volatile
 17593                           
 17594                           ; BSR set to: 15
 17595                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17596  011432  0100               	movlb	0	; () banked
 17597  011434  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17598  011436  D002               	goto	l387
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17602  011438  010F               	movlb	15	; () banked
 17603  01143A  8142               	bsf	66,0,b	;volatile
 17604  01143C                     l387:
 17605                           
 17606                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17607  01143C  0100               	movlb	0	; () banked
 17608  01143E  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17609  011440  D002               	goto	l388
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17613  011442  010F               	movlb	15	; () banked
 17614  011444  8342               	bsf	66,1,b	;volatile
 17615  011446                     l388:
 17616                           
 17617                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17618  011446  0100               	movlb	0	; () banked
 17619  011448  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17620  01144A  D002               	goto	l389
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17624  01144C  010F               	movlb	15	; () banked
 17625  01144E  8B42               	bsf	66,5,b	;volatile
 17626  011450                     l389:
 17627                           
 17628                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17629  011450  0100               	movlb	0	; () banked
 17630  011452  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17631  011454  D002               	goto	l390
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17635  011456  010F               	movlb	15	; () banked
 17636  011458  8D42               	bsf	66,6,b	;volatile
 17637  01145A                     l390:
 17638                           
 17639                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17640  01145A  0100               	movlb	0	; () banked
 17641  01145C  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17642  01145E  D002               	goto	l6215
 17643                           
 17644                           ; BSR set to: 0
 17645                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17646  011460  010F               	movlb	15	; () banked
 17647  011462  8F42               	bsf	66,7,b	;volatile
 17648  011464                     l6215:
 17649                           
 17650                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17651  011464  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17652  011468  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17653  01146C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17654  011470  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17655  011474  0E16               	movlw	22
 17656  011476  D006               	goto	u7660
 17657  011478                     u7665:
 17658  011478  0100               	movlb	0	; () banked
 17659  01147A  90D8               	bcf	status,0,c
 17660  01147C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17661  01147E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17662  011480  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17663  011482  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17664  011484                     u7660:
 17665  011484  2EE8               	decfsz	wreg,f,c
 17666  011486  D7F8               	goto	u7665
 17667  011488  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17668  01148C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17669  011490  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17670  011494  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17674  011498  0100               	movlb	0	; () banked
 17675  01149A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17676  01149C  0100               	movlb	0	; () banked
 17677  01149E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17678  0114A0  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17679  0114A2  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17680  0114A4  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17684  0114A6  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17685                           
 17686                           ;inc\CANlib.h: 332: }
 17687  0114AA  D059               	goto	l6235
 17688  0114AC                     l386:
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;inc\CANlib.h: 334: else
 17692                           ;inc\CANlib.h: 336: {
 17693                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17694  0114AC  010F               	movlb	15	; () banked
 17695  0114AE  9742               	bcf	66,3,b	;volatile
 17696                           
 17697                           ; BSR set to: 15
 17698                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17699  0114B0  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17700  0114B4  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17701  0114B8  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17702  0114BC  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17703  0114C0  0E04               	movlw	4
 17704  0114C2  D006               	goto	u7670
 17705  0114C4                     u7675:
 17706  0114C4  0100               	movlb	0	; () banked
 17707  0114C6  90D8               	bcf	status,0,c
 17708  0114C8  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17709  0114CA  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17710  0114CC  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17711  0114CE  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17712  0114D0                     u7670:
 17713  0114D0  2EE8               	decfsz	wreg,f,c
 17714  0114D2  D7F8               	goto	u7675
 17715  0114D4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17716  0114D8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17717  0114DC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17718  0114E0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17719                           
 17720                           ; BSR set to: 0
 17721                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17722  0114E4  0100               	movlb	0	; () banked
 17723  0114E6  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17724  0114E8  0100               	movlb	0	; () banked
 17725  0114EA  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17726  0114EC  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17727  0114EE  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17728  0114F0  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17732  0114F2  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17733                           
 17734                           ; BSR set to: 0
 17735                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17736  0114F6  0E07               	movlw	7
 17737  0114F8  0100               	movlb	0	; () banked
 17738  0114FA  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17739  0114FC  0100               	movlb	0	; () banked
 17740  0114FE  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17741  011500  0E00               	movlw	0
 17742  011502  0100               	movlb	0	; () banked
 17743  011504  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17744  011506  0100               	movlb	0	; () banked
 17745  011508  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17746  01150A  0E00               	movlw	0
 17747  01150C  0100               	movlb	0	; () banked
 17748  01150E  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17749  011510  0100               	movlb	0	; () banked
 17750  011512  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17751  011514  0E00               	movlw	0
 17752  011516  0100               	movlb	0	; () banked
 17753  011518  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17754  01151A  0100               	movlb	0	; () banked
 17755  01151C  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17756                           
 17757                           ; BSR set to: 0
 17758                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17759  01151E  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17760  011522  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17761  011526  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17762  01152A  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17763  01152E  0E05               	movlw	5
 17764  011530                     u7685:
 17765  011530  90D8               	bcf	status,0,c
 17766  011532  0100               	movlb	0	; () banked
 17767  011534  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 17768  011536  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17769  011538  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17770  01153A  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17771  01153C  2EE8               	decfsz	wreg,f,c
 17772  01153E  D7F8               	goto	u7685
 17773  011540  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17774  011544  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17775  011548  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17776  01154C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17780  011550  010F               	movlb	15	; () banked
 17781  011552  5142               	movf	66,w,b	;volatile
 17782  011554  0B1F               	andlw	31
 17783  011556  010F               	movlb	15	; () banked
 17784  011558  6F42               	movwf	66,b	;volatile
 17785                           
 17786                           ; BSR set to: 15
 17787                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17788  01155A  C07D  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17789  01155E                     l6235:
 17790                           
 17791                           ;inc\CANlib.h: 347: }
 17792                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17793  01155E  0100               	movlb	0	; () banked
 17794  011560  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 17795  011562  D003               	goto	l393
 17796                           
 17797                           ; BSR set to: 0
 17798                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17799  011564  010F               	movlb	15	; () banked
 17800  011566  8140               	bsf	64,0,b	;volatile
 17801  011568  D002               	goto	l394
 17802  01156A                     l393:
 17803                           
 17804                           ; BSR set to: 0
 17805                           ;inc\CANlib.h: 351: else
 17806                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17807  01156A  010F               	movlb	15	; () banked
 17808  01156C  9140               	bcf	64,0,b	;volatile
 17809  01156E                     l394:
 17810                           
 17811                           ; BSR set to: 15
 17812                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17813  01156E  0100               	movlb	0	; () banked
 17814  011570  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 17815  011572  D003               	goto	l395
 17816                           
 17817                           ; BSR set to: 0
 17818                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17819  011574  010F               	movlb	15	; () banked
 17820  011576  8340               	bsf	64,1,b	;volatile
 17821  011578  D002               	goto	l6241
 17822  01157A                     l395:
 17823                           
 17824                           ; BSR set to: 0
 17825                           ;inc\CANlib.h: 355: else
 17826                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17827  01157A  010F               	movlb	15	; () banked
 17828  01157C  9340               	bcf	64,1,b	;volatile
 17829  01157E                     l6241:
 17830                           
 17831                           ; BSR set to: 15
 17832                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17833  01157E  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 17834  011582  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17835  011586  50DF               	movf	indf2,w,c
 17836  011588  010F               	movlb	15	; () banked
 17837  01158A  6F46               	movwf	70,b	;volatile
 17838                           
 17839                           ; BSR set to: 15
 17840                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17841  01158C  0100               	movlb	0	; () banked
 17842  01158E  EE20 F001          	lfsr	2,1
 17843  011592  5175               	movf	CANsendMessage@data& (0+255),w,b
 17844  011594  26D9               	addwf	fsr2l,f,c
 17845  011596  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17846  011598  22DA               	addwfc	fsr2h,f,c
 17847  01159A  50DF               	movf	indf2,w,c
 17848  01159C  010F               	movlb	15	; () banked
 17849  01159E  6F47               	movwf	71,b	;volatile
 17850                           
 17851                           ; BSR set to: 15
 17852                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17853  0115A0  0100               	movlb	0	; () banked
 17854  0115A2  EE20 F002          	lfsr	2,2
 17855  0115A6  5175               	movf	CANsendMessage@data& (0+255),w,b
 17856  0115A8  26D9               	addwf	fsr2l,f,c
 17857  0115AA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17858  0115AC  22DA               	addwfc	fsr2h,f,c
 17859  0115AE  50DF               	movf	indf2,w,c
 17860  0115B0  010F               	movlb	15	; () banked
 17861  0115B2  6F48               	movwf	72,b	;volatile
 17862                           
 17863                           ; BSR set to: 15
 17864                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17865  0115B4  0100               	movlb	0	; () banked
 17866  0115B6  EE20 F003          	lfsr	2,3
 17867  0115BA  5175               	movf	CANsendMessage@data& (0+255),w,b
 17868  0115BC  26D9               	addwf	fsr2l,f,c
 17869  0115BE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17870  0115C0  22DA               	addwfc	fsr2h,f,c
 17871  0115C2  50DF               	movf	indf2,w,c
 17872  0115C4  010F               	movlb	15	; () banked
 17873  0115C6  6F49               	movwf	73,b	;volatile
 17874                           
 17875                           ; BSR set to: 15
 17876                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17877  0115C8  0100               	movlb	0	; () banked
 17878  0115CA  EE20 F004          	lfsr	2,4
 17879  0115CE  5175               	movf	CANsendMessage@data& (0+255),w,b
 17880  0115D0  26D9               	addwf	fsr2l,f,c
 17881  0115D2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17882  0115D4  22DA               	addwfc	fsr2h,f,c
 17883  0115D6  50DF               	movf	indf2,w,c
 17884  0115D8  010F               	movlb	15	; () banked
 17885  0115DA  6F4A               	movwf	74,b	;volatile
 17886                           
 17887                           ; BSR set to: 15
 17888                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17889  0115DC  0100               	movlb	0	; () banked
 17890  0115DE  EE20 F005          	lfsr	2,5
 17891  0115E2  5175               	movf	CANsendMessage@data& (0+255),w,b
 17892  0115E4  26D9               	addwf	fsr2l,f,c
 17893  0115E6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17894  0115E8  22DA               	addwfc	fsr2h,f,c
 17895  0115EA  50DF               	movf	indf2,w,c
 17896  0115EC  010F               	movlb	15	; () banked
 17897  0115EE  6F4B               	movwf	75,b	;volatile
 17898                           
 17899                           ; BSR set to: 15
 17900                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17901  0115F0  0100               	movlb	0	; () banked
 17902  0115F2  EE20 F006          	lfsr	2,6
 17903  0115F6  5175               	movf	CANsendMessage@data& (0+255),w,b
 17904  0115F8  26D9               	addwf	fsr2l,f,c
 17905  0115FA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17906  0115FC  22DA               	addwfc	fsr2h,f,c
 17907  0115FE  50DF               	movf	indf2,w,c
 17908  011600  010F               	movlb	15	; () banked
 17909  011602  6F4C               	movwf	76,b	;volatile
 17910                           
 17911                           ; BSR set to: 15
 17912                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17913  011604  0100               	movlb	0	; () banked
 17914  011606  EE20 F007          	lfsr	2,7
 17915  01160A  5175               	movf	CANsendMessage@data& (0+255),w,b
 17916  01160C  26D9               	addwf	fsr2l,f,c
 17917  01160E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17918  011610  22DA               	addwfc	fsr2h,f,c
 17919  011612  50DF               	movf	indf2,w,c
 17920  011614  010F               	movlb	15	; () banked
 17921  011616  6F4D               	movwf	77,b	;volatile
 17922                           
 17923                           ; BSR set to: 15
 17924                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17925  011618  010F               	movlb	15	; () banked
 17926  01161A  8740               	bsf	64,3,b	;volatile
 17927                           
 17928                           ; BSR set to: 15
 17929                           ;inc\CANlib.h: 368: return;
 17930  01161C  0012               	return	
 17931  01161E                     l383:
 17932                           
 17933                           ; BSR set to: 15
 17934                           ;inc\CANlib.h: 369: }
 17935                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17936  01161E  010F               	movlb	15	; () banked
 17937  011620  B730               	btfsc	48,3,b	;volatile
 17938  011622  D13F               	goto	l398
 17939                           
 17940                           ; BSR set to: 15
 17941                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17942  011624  C077  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17943                           
 17944                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17945  011628  0100               	movlb	0	; () banked
 17946  01162A  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 17947  01162C  D003               	goto	l399
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17951  01162E  010F               	movlb	15	; () banked
 17952  011630  8D35               	bsf	53,6,b	;volatile
 17953  011632  D002               	goto	l400
 17954  011634                     l399:
 17955                           
 17956                           ; BSR set to: 0
 17957                           ;inc\CANlib.h: 378: else
 17958                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17959  011634  010F               	movlb	15	; () banked
 17960  011636  9D35               	bcf	53,6,b	;volatile
 17961  011638                     l400:
 17962                           
 17963                           ; BSR set to: 15
 17964                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17965  011638  0100               	movlb	0	; () banked
 17966  01163A  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 17967  01163C  D079               	goto	l401
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;inc\CANlib.h: 382: {
 17971                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17972  01163E  0100               	movlb	0	; () banked
 17973  011640  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 17974  011642  0100               	movlb	0	; () banked
 17975  011644  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17976  011646  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17977  011648  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17978  01164A  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17979                           
 17980                           ; BSR set to: 0
 17981                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17982  01164C  C07D  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17983                           
 17984                           ; BSR set to: 0
 17985                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17986  011650  0E00               	movlw	0
 17987  011652  0100               	movlb	0	; () banked
 17988  011654  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17989  011656  0100               	movlb	0	; () banked
 17990  011658  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17991  01165A  0EFF               	movlw	255
 17992  01165C  0100               	movlb	0	; () banked
 17993  01165E  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17994  011660  0100               	movlb	0	; () banked
 17995  011662  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17996  011664  0E00               	movlw	0
 17997  011666  0100               	movlb	0	; () banked
 17998  011668  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17999  01166A  0100               	movlb	0	; () banked
 18000  01166C  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18001  01166E  0E00               	movlw	0
 18002  011670  0100               	movlb	0	; () banked
 18003  011672  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18004  011674  0100               	movlb	0	; () banked
 18005  011676  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18006                           
 18007                           ; BSR set to: 0
 18008                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 18009  011678  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18010  01167C  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18011  011680  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18012  011684  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18013  011688  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18014  01168C  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18015  011690  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18016  011694  0100               	movlb	0	; () banked
 18017  011696  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18018  011698  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18019  01169C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18020  0116A0  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18021  0116A4  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18022                           
 18023                           ; BSR set to: 0
 18024                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 18025  0116A8  C07D  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 18026                           
 18027                           ; BSR set to: 0
 18028                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 18029  0116AC  0E00               	movlw	0
 18030  0116AE  010F               	movlb	15	; () banked
 18031  0116B0  6F32               	movwf	50,b	;volatile
 18032                           
 18033                           ; BSR set to: 15
 18034                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 18035  0116B2  010F               	movlb	15	; () banked
 18036  0116B4  8732               	bsf	50,3,b	;volatile
 18037                           
 18038                           ; BSR set to: 15
 18039                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18040  0116B6  0100               	movlb	0	; () banked
 18041  0116B8  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18042  0116BA  D002               	goto	l402
 18043                           
 18044                           ; BSR set to: 0
 18045                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18046  0116BC  010F               	movlb	15	; () banked
 18047  0116BE  8132               	bsf	50,0,b	;volatile
 18048  0116C0                     l402:
 18049                           
 18050                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18051  0116C0  0100               	movlb	0	; () banked
 18052  0116C2  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18053  0116C4  D002               	goto	l403
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18057  0116C6  010F               	movlb	15	; () banked
 18058  0116C8  8332               	bsf	50,1,b	;volatile
 18059  0116CA                     l403:
 18060                           
 18061                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18062  0116CA  0100               	movlb	0	; () banked
 18063  0116CC  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18064  0116CE  D002               	goto	l404
 18065                           
 18066                           ; BSR set to: 0
 18067                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18068  0116D0  010F               	movlb	15	; () banked
 18069  0116D2  8B32               	bsf	50,5,b	;volatile
 18070  0116D4                     l404:
 18071                           
 18072                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18073  0116D4  0100               	movlb	0	; () banked
 18074  0116D6  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18075  0116D8  D002               	goto	l405
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18079  0116DA  010F               	movlb	15	; () banked
 18080  0116DC  8D32               	bsf	50,6,b	;volatile
 18081  0116DE                     l405:
 18082                           
 18083                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18084  0116DE  0100               	movlb	0	; () banked
 18085  0116E0  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18086  0116E2  D002               	goto	l6291
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18090  0116E4  010F               	movlb	15	; () banked
 18091  0116E6  8F32               	bsf	50,7,b	;volatile
 18092  0116E8                     l6291:
 18093                           
 18094                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18095  0116E8  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18096  0116EC  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18097  0116F0  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18098  0116F4  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18099  0116F8  0E16               	movlw	22
 18100  0116FA  D006               	goto	u7790
 18101  0116FC                     u7795:
 18102  0116FC  0100               	movlb	0	; () banked
 18103  0116FE  90D8               	bcf	status,0,c
 18104  011700  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18105  011702  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18106  011704  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18107  011706  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18108  011708                     u7790:
 18109  011708  2EE8               	decfsz	wreg,f,c
 18110  01170A  D7F8               	goto	u7795
 18111  01170C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18112  011710  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18113  011714  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18114  011718  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18118  01171C  0100               	movlb	0	; () banked
 18119  01171E  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18120  011720  0100               	movlb	0	; () banked
 18121  011722  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18122  011724  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18123  011726  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18124  011728  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18125                           
 18126                           ; BSR set to: 0
 18127                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18128  01172A  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18129                           
 18130                           ;inc\CANlib.h: 407: }
 18131  01172E  D059               	goto	l6311
 18132  011730                     l401:
 18133                           
 18134                           ; BSR set to: 0
 18135                           ;inc\CANlib.h: 409: else
 18136                           ;inc\CANlib.h: 411: {
 18137                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18138  011730  010F               	movlb	15	; () banked
 18139  011732  9732               	bcf	50,3,b	;volatile
 18140                           
 18141                           ; BSR set to: 15
 18142                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18143  011734  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18144  011738  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18145  01173C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18146  011740  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18147  011744  0E04               	movlw	4
 18148  011746  D006               	goto	u7800
 18149  011748                     u7805:
 18150  011748  0100               	movlb	0	; () banked
 18151  01174A  90D8               	bcf	status,0,c
 18152  01174C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18153  01174E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18154  011750  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18155  011752  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18156  011754                     u7800:
 18157  011754  2EE8               	decfsz	wreg,f,c
 18158  011756  D7F8               	goto	u7805
 18159  011758  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18160  01175C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18161  011760  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18162  011764  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18163                           
 18164                           ; BSR set to: 0
 18165                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18166  011768  0100               	movlb	0	; () banked
 18167  01176A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18168  01176C  0100               	movlb	0	; () banked
 18169  01176E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18170  011770  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18171  011772  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18172  011774  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18176  011776  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18180  01177A  0E07               	movlw	7
 18181  01177C  0100               	movlb	0	; () banked
 18182  01177E  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18183  011780  0100               	movlb	0	; () banked
 18184  011782  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18185  011784  0E00               	movlw	0
 18186  011786  0100               	movlb	0	; () banked
 18187  011788  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18188  01178A  0100               	movlb	0	; () banked
 18189  01178C  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18190  01178E  0E00               	movlw	0
 18191  011790  0100               	movlb	0	; () banked
 18192  011792  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18193  011794  0100               	movlb	0	; () banked
 18194  011796  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18195  011798  0E00               	movlw	0
 18196  01179A  0100               	movlb	0	; () banked
 18197  01179C  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18198  01179E  0100               	movlb	0	; () banked
 18199  0117A0  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18203  0117A2  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18204  0117A6  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18205  0117AA  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18206  0117AE  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18207  0117B2  0E05               	movlw	5
 18208  0117B4                     u7815:
 18209  0117B4  90D8               	bcf	status,0,c
 18210  0117B6  0100               	movlb	0	; () banked
 18211  0117B8  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18212  0117BA  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18213  0117BC  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18214  0117BE  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18215  0117C0  2EE8               	decfsz	wreg,f,c
 18216  0117C2  D7F8               	goto	u7815
 18217  0117C4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18218  0117C8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18219  0117CC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18220  0117D0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18224  0117D4  010F               	movlb	15	; () banked
 18225  0117D6  5132               	movf	50,w,b	;volatile
 18226  0117D8  0B1F               	andlw	31
 18227  0117DA  010F               	movlb	15	; () banked
 18228  0117DC  6F32               	movwf	50,b	;volatile
 18229                           
 18230                           ; BSR set to: 15
 18231                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18232  0117DE  C07D  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 18233  0117E2                     l6311:
 18234                           
 18235                           ;inc\CANlib.h: 422: }
 18236                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18237  0117E2  0100               	movlb	0	; () banked
 18238  0117E4  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18239  0117E6  D003               	goto	l408
 18240                           
 18241                           ; BSR set to: 0
 18242                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18243  0117E8  010F               	movlb	15	; () banked
 18244  0117EA  8130               	bsf	48,0,b	;volatile
 18245  0117EC  D002               	goto	l409
 18246  0117EE                     l408:
 18247                           
 18248                           ; BSR set to: 0
 18249                           ;inc\CANlib.h: 426: else
 18250                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18251  0117EE  010F               	movlb	15	; () banked
 18252  0117F0  9130               	bcf	48,0,b	;volatile
 18253  0117F2                     l409:
 18254                           
 18255                           ; BSR set to: 15
 18256                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18257  0117F2  0100               	movlb	0	; () banked
 18258  0117F4  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18259  0117F6  D003               	goto	l410
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18263  0117F8  010F               	movlb	15	; () banked
 18264  0117FA  8330               	bsf	48,1,b	;volatile
 18265  0117FC  D002               	goto	l6317
 18266  0117FE                     l410:
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;inc\CANlib.h: 430: else
 18270                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18271  0117FE  010F               	movlb	15	; () banked
 18272  011800  9330               	bcf	48,1,b	;volatile
 18273  011802                     l6317:
 18274                           
 18275                           ; BSR set to: 15
 18276                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18277  011802  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18278  011806  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18279  01180A  50DF               	movf	indf2,w,c
 18280  01180C  010F               	movlb	15	; () banked
 18281  01180E  6F36               	movwf	54,b	;volatile
 18282                           
 18283                           ; BSR set to: 15
 18284                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18285  011810  0100               	movlb	0	; () banked
 18286  011812  EE20 F001          	lfsr	2,1
 18287  011816  5175               	movf	CANsendMessage@data& (0+255),w,b
 18288  011818  26D9               	addwf	fsr2l,f,c
 18289  01181A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18290  01181C  22DA               	addwfc	fsr2h,f,c
 18291  01181E  50DF               	movf	indf2,w,c
 18292  011820  010F               	movlb	15	; () banked
 18293  011822  6F37               	movwf	55,b	;volatile
 18294                           
 18295                           ; BSR set to: 15
 18296                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18297  011824  0100               	movlb	0	; () banked
 18298  011826  EE20 F002          	lfsr	2,2
 18299  01182A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18300  01182C  26D9               	addwf	fsr2l,f,c
 18301  01182E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18302  011830  22DA               	addwfc	fsr2h,f,c
 18303  011832  50DF               	movf	indf2,w,c
 18304  011834  010F               	movlb	15	; () banked
 18305  011836  6F38               	movwf	56,b	;volatile
 18306                           
 18307                           ; BSR set to: 15
 18308                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18309  011838  0100               	movlb	0	; () banked
 18310  01183A  EE20 F003          	lfsr	2,3
 18311  01183E  5175               	movf	CANsendMessage@data& (0+255),w,b
 18312  011840  26D9               	addwf	fsr2l,f,c
 18313  011842  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18314  011844  22DA               	addwfc	fsr2h,f,c
 18315  011846  50DF               	movf	indf2,w,c
 18316  011848  010F               	movlb	15	; () banked
 18317  01184A  6F39               	movwf	57,b	;volatile
 18318                           
 18319                           ; BSR set to: 15
 18320                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18321  01184C  0100               	movlb	0	; () banked
 18322  01184E  EE20 F004          	lfsr	2,4
 18323  011852  5175               	movf	CANsendMessage@data& (0+255),w,b
 18324  011854  26D9               	addwf	fsr2l,f,c
 18325  011856  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18326  011858  22DA               	addwfc	fsr2h,f,c
 18327  01185A  50DF               	movf	indf2,w,c
 18328  01185C  010F               	movlb	15	; () banked
 18329  01185E  6F3A               	movwf	58,b	;volatile
 18330                           
 18331                           ; BSR set to: 15
 18332                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18333  011860  0100               	movlb	0	; () banked
 18334  011862  EE20 F005          	lfsr	2,5
 18335  011866  5175               	movf	CANsendMessage@data& (0+255),w,b
 18336  011868  26D9               	addwf	fsr2l,f,c
 18337  01186A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18338  01186C  22DA               	addwfc	fsr2h,f,c
 18339  01186E  50DF               	movf	indf2,w,c
 18340  011870  010F               	movlb	15	; () banked
 18341  011872  6F3B               	movwf	59,b	;volatile
 18342                           
 18343                           ; BSR set to: 15
 18344                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18345  011874  0100               	movlb	0	; () banked
 18346  011876  EE20 F006          	lfsr	2,6
 18347  01187A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18348  01187C  26D9               	addwf	fsr2l,f,c
 18349  01187E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18350  011880  22DA               	addwfc	fsr2h,f,c
 18351  011882  50DF               	movf	indf2,w,c
 18352  011884  010F               	movlb	15	; () banked
 18353  011886  6F3C               	movwf	60,b	;volatile
 18354                           
 18355                           ; BSR set to: 15
 18356                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18357  011888  0100               	movlb	0	; () banked
 18358  01188A  EE20 F007          	lfsr	2,7
 18359  01188E  5175               	movf	CANsendMessage@data& (0+255),w,b
 18360  011890  26D9               	addwf	fsr2l,f,c
 18361  011892  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18362  011894  22DA               	addwfc	fsr2h,f,c
 18363  011896  50DF               	movf	indf2,w,c
 18364  011898  010F               	movlb	15	; () banked
 18365  01189A  6F3D               	movwf	61,b	;volatile
 18366                           
 18367                           ; BSR set to: 15
 18368                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18369  01189C  010F               	movlb	15	; () banked
 18370  01189E  8730               	bsf	48,3,b	;volatile
 18371                           
 18372                           ; BSR set to: 15
 18373                           ;inc\CANlib.h: 444: return;
 18374  0118A0  0012               	return	
 18375  0118A2                     l398:
 18376                           
 18377                           ; BSR set to: 15
 18378                           ;inc\CANlib.h: 445: }
 18379                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18380  0118A2  010F               	movlb	15	; () banked
 18381  0118A4  B720               	btfsc	32,3,b	;volatile
 18382  0118A6  0012               	return	
 18383                           
 18384                           ; BSR set to: 15
 18385                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18386  0118A8  C077  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18387                           
 18388                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18389  0118AC  0100               	movlb	0	; () banked
 18390  0118AE  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 18391  0118B0  D003               	goto	l413
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18395  0118B2  010F               	movlb	15	; () banked
 18396  0118B4  8D25               	bsf	37,6,b	;volatile
 18397  0118B6  D002               	goto	l414
 18398  0118B8                     l413:
 18399                           
 18400                           ; BSR set to: 0
 18401                           ;inc\CANlib.h: 454: else
 18402                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18403  0118B8  010F               	movlb	15	; () banked
 18404  0118BA  9D25               	bcf	37,6,b	;volatile
 18405  0118BC                     l414:
 18406                           
 18407                           ; BSR set to: 15
 18408                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18409  0118BC  0100               	movlb	0	; () banked
 18410  0118BE  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 18411  0118C0  D079               	goto	l415
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;inc\CANlib.h: 458: {
 18415                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18416  0118C2  0100               	movlb	0	; () banked
 18417  0118C4  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 18418  0118C6  0100               	movlb	0	; () banked
 18419  0118C8  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18420  0118CA  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18421  0118CC  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18422  0118CE  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18423                           
 18424                           ; BSR set to: 0
 18425                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18426  0118D0  C07D  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18430  0118D4  0E00               	movlw	0
 18431  0118D6  0100               	movlb	0	; () banked
 18432  0118D8  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18433  0118DA  0100               	movlb	0	; () banked
 18434  0118DC  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18435  0118DE  0EFF               	movlw	255
 18436  0118E0  0100               	movlb	0	; () banked
 18437  0118E2  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18438  0118E4  0100               	movlb	0	; () banked
 18439  0118E6  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18440  0118E8  0E00               	movlw	0
 18441  0118EA  0100               	movlb	0	; () banked
 18442  0118EC  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18443  0118EE  0100               	movlb	0	; () banked
 18444  0118F0  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18445  0118F2  0E00               	movlw	0
 18446  0118F4  0100               	movlb	0	; () banked
 18447  0118F6  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18448  0118F8  0100               	movlb	0	; () banked
 18449  0118FA  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18453  0118FC  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18454  011900  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18455  011904  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18456  011908  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18457  01190C  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18458  011910  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18459  011914  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18460  011918  0100               	movlb	0	; () banked
 18461  01191A  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18462  01191C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18463  011920  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18464  011924  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18465  011928  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18466                           
 18467                           ; BSR set to: 0
 18468                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18469  01192C  C07D  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18473  011930  0E00               	movlw	0
 18474  011932  010F               	movlb	15	; () banked
 18475  011934  6F22               	movwf	34,b	;volatile
 18476                           
 18477                           ; BSR set to: 15
 18478                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18479  011936  010F               	movlb	15	; () banked
 18480  011938  8722               	bsf	34,3,b	;volatile
 18481                           
 18482                           ; BSR set to: 15
 18483                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18484  01193A  0100               	movlb	0	; () banked
 18485  01193C  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18486  01193E  D002               	goto	l416
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18490  011940  010F               	movlb	15	; () banked
 18491  011942  8122               	bsf	34,0,b	;volatile
 18492  011944                     l416:
 18493                           
 18494                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18495  011944  0100               	movlb	0	; () banked
 18496  011946  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18497  011948  D002               	goto	l417
 18498                           
 18499                           ; BSR set to: 0
 18500                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18501  01194A  010F               	movlb	15	; () banked
 18502  01194C  8322               	bsf	34,1,b	;volatile
 18503  01194E                     l417:
 18504                           
 18505                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18506  01194E  0100               	movlb	0	; () banked
 18507  011950  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18508  011952  D002               	goto	l418
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18512  011954  010F               	movlb	15	; () banked
 18513  011956  8B22               	bsf	34,5,b	;volatile
 18514  011958                     l418:
 18515                           
 18516                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18517  011958  0100               	movlb	0	; () banked
 18518  01195A  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18519  01195C  D002               	goto	l419
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18523  01195E  010F               	movlb	15	; () banked
 18524  011960  8D22               	bsf	34,6,b	;volatile
 18525  011962                     l419:
 18526                           
 18527                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18528  011962  0100               	movlb	0	; () banked
 18529  011964  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18530  011966  D002               	goto	l6367
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18534  011968  010F               	movlb	15	; () banked
 18535  01196A  8F22               	bsf	34,7,b	;volatile
 18536  01196C                     l6367:
 18537                           
 18538                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18539  01196C  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18540  011970  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18541  011974  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18542  011978  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18543  01197C  0E16               	movlw	22
 18544  01197E  D006               	goto	u7920
 18545  011980                     u7925:
 18546  011980  0100               	movlb	0	; () banked
 18547  011982  90D8               	bcf	status,0,c
 18548  011984  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18549  011986  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18550  011988  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18551  01198A  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18552  01198C                     u7920:
 18553  01198C  2EE8               	decfsz	wreg,f,c
 18554  01198E  D7F8               	goto	u7925
 18555  011990  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18556  011994  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18557  011998  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18558  01199C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18562  0119A0  0100               	movlb	0	; () banked
 18563  0119A2  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18564  0119A4  0100               	movlb	0	; () banked
 18565  0119A6  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18566  0119A8  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18567  0119AA  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18568  0119AC  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18572  0119AE  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18573                           
 18574                           ;inc\CANlib.h: 483: }
 18575  0119B2  D059               	goto	l6387
 18576  0119B4                     l415:
 18577                           
 18578                           ; BSR set to: 0
 18579                           ;inc\CANlib.h: 485: else
 18580                           ;inc\CANlib.h: 487: {
 18581                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18582  0119B4  010F               	movlb	15	; () banked
 18583  0119B6  9722               	bcf	34,3,b	;volatile
 18584                           
 18585                           ; BSR set to: 15
 18586                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18587  0119B8  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18588  0119BC  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18589  0119C0  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18590  0119C4  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18591  0119C8  0E04               	movlw	4
 18592  0119CA  D006               	goto	u7930
 18593  0119CC                     u7935:
 18594  0119CC  0100               	movlb	0	; () banked
 18595  0119CE  90D8               	bcf	status,0,c
 18596  0119D0  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18597  0119D2  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18598  0119D4  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18599  0119D6  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18600  0119D8                     u7930:
 18601  0119D8  2EE8               	decfsz	wreg,f,c
 18602  0119DA  D7F8               	goto	u7935
 18603  0119DC  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18604  0119E0  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18605  0119E4  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18606  0119E8  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18610  0119EC  0100               	movlb	0	; () banked
 18611  0119EE  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18612  0119F0  0100               	movlb	0	; () banked
 18613  0119F2  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18614  0119F4  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18615  0119F6  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18616  0119F8  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18617                           
 18618                           ; BSR set to: 0
 18619                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18620  0119FA  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18624  0119FE  0E07               	movlw	7
 18625  011A00  0100               	movlb	0	; () banked
 18626  011A02  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18627  011A04  0100               	movlb	0	; () banked
 18628  011A06  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18629  011A08  0E00               	movlw	0
 18630  011A0A  0100               	movlb	0	; () banked
 18631  011A0C  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18632  011A0E  0100               	movlb	0	; () banked
 18633  011A10  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18634  011A12  0E00               	movlw	0
 18635  011A14  0100               	movlb	0	; () banked
 18636  011A16  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18637  011A18  0100               	movlb	0	; () banked
 18638  011A1A  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18639  011A1C  0E00               	movlw	0
 18640  011A1E  0100               	movlb	0	; () banked
 18641  011A20  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18642  011A22  0100               	movlb	0	; () banked
 18643  011A24  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18647  011A26  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18648  011A2A  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18649  011A2E  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18650  011A32  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18651  011A36  0E05               	movlw	5
 18652  011A38                     u7945:
 18653  011A38  90D8               	bcf	status,0,c
 18654  011A3A  0100               	movlb	0	; () banked
 18655  011A3C  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18656  011A3E  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18657  011A40  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18658  011A42  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18659  011A44  2EE8               	decfsz	wreg,f,c
 18660  011A46  D7F8               	goto	u7945
 18661  011A48  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18662  011A4C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18663  011A50  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18664  011A54  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18668  011A58  010F               	movlb	15	; () banked
 18669  011A5A  5122               	movf	34,w,b	;volatile
 18670  011A5C  0B1F               	andlw	31
 18671  011A5E  010F               	movlb	15	; () banked
 18672  011A60  6F22               	movwf	34,b	;volatile
 18673                           
 18674                           ; BSR set to: 15
 18675                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18676  011A62  C07D  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18677  011A66                     l6387:
 18678                           
 18679                           ;inc\CANlib.h: 498: }
 18680                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18681  011A66  0100               	movlb	0	; () banked
 18682  011A68  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18683  011A6A  D003               	goto	l422
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18687  011A6C  010F               	movlb	15	; () banked
 18688  011A6E  8120               	bsf	32,0,b	;volatile
 18689  011A70  D002               	goto	l423
 18690  011A72                     l422:
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;inc\CANlib.h: 502: else
 18694                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18695  011A72  010F               	movlb	15	; () banked
 18696  011A74  9120               	bcf	32,0,b	;volatile
 18697  011A76                     l423:
 18698                           
 18699                           ; BSR set to: 15
 18700                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18701  011A76  0100               	movlb	0	; () banked
 18702  011A78  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18703  011A7A  D003               	goto	l424
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18707  011A7C  010F               	movlb	15	; () banked
 18708  011A7E  8320               	bsf	32,1,b	;volatile
 18709  011A80  D002               	goto	l6393
 18710  011A82                     l424:
 18711                           
 18712                           ; BSR set to: 0
 18713                           ;inc\CANlib.h: 506: else
 18714                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18715  011A82  010F               	movlb	15	; () banked
 18716  011A84  9320               	bcf	32,1,b	;volatile
 18717  011A86                     l6393:
 18718                           
 18719                           ; BSR set to: 15
 18720                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18721  011A86  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18722  011A8A  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18723  011A8E  50DF               	movf	indf2,w,c
 18724  011A90  010F               	movlb	15	; () banked
 18725  011A92  6F26               	movwf	38,b	;volatile
 18726                           
 18727                           ; BSR set to: 15
 18728                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18729  011A94  0100               	movlb	0	; () banked
 18730  011A96  EE20 F001          	lfsr	2,1
 18731  011A9A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18732  011A9C  26D9               	addwf	fsr2l,f,c
 18733  011A9E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18734  011AA0  22DA               	addwfc	fsr2h,f,c
 18735  011AA2  50DF               	movf	indf2,w,c
 18736  011AA4  010F               	movlb	15	; () banked
 18737  011AA6  6F27               	movwf	39,b	;volatile
 18738                           
 18739                           ; BSR set to: 15
 18740                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18741  011AA8  0100               	movlb	0	; () banked
 18742  011AAA  EE20 F002          	lfsr	2,2
 18743  011AAE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18744  011AB0  26D9               	addwf	fsr2l,f,c
 18745  011AB2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18746  011AB4  22DA               	addwfc	fsr2h,f,c
 18747  011AB6  50DF               	movf	indf2,w,c
 18748  011AB8  010F               	movlb	15	; () banked
 18749  011ABA  6F28               	movwf	40,b	;volatile
 18750                           
 18751                           ; BSR set to: 15
 18752                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18753  011ABC  0100               	movlb	0	; () banked
 18754  011ABE  EE20 F003          	lfsr	2,3
 18755  011AC2  5175               	movf	CANsendMessage@data& (0+255),w,b
 18756  011AC4  26D9               	addwf	fsr2l,f,c
 18757  011AC6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18758  011AC8  22DA               	addwfc	fsr2h,f,c
 18759  011ACA  50DF               	movf	indf2,w,c
 18760  011ACC  010F               	movlb	15	; () banked
 18761  011ACE  6F29               	movwf	41,b	;volatile
 18762                           
 18763                           ; BSR set to: 15
 18764                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18765  011AD0  0100               	movlb	0	; () banked
 18766  011AD2  EE20 F004          	lfsr	2,4
 18767  011AD6  5175               	movf	CANsendMessage@data& (0+255),w,b
 18768  011AD8  26D9               	addwf	fsr2l,f,c
 18769  011ADA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18770  011ADC  22DA               	addwfc	fsr2h,f,c
 18771  011ADE  50DF               	movf	indf2,w,c
 18772  011AE0  010F               	movlb	15	; () banked
 18773  011AE2  6F2A               	movwf	42,b	;volatile
 18774                           
 18775                           ; BSR set to: 15
 18776                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18777  011AE4  0100               	movlb	0	; () banked
 18778  011AE6  EE20 F005          	lfsr	2,5
 18779  011AEA  5175               	movf	CANsendMessage@data& (0+255),w,b
 18780  011AEC  26D9               	addwf	fsr2l,f,c
 18781  011AEE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18782  011AF0  22DA               	addwfc	fsr2h,f,c
 18783  011AF2  50DF               	movf	indf2,w,c
 18784  011AF4  010F               	movlb	15	; () banked
 18785  011AF6  6F2B               	movwf	43,b	;volatile
 18786                           
 18787                           ; BSR set to: 15
 18788                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18789  011AF8  0100               	movlb	0	; () banked
 18790  011AFA  EE20 F006          	lfsr	2,6
 18791  011AFE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18792  011B00  26D9               	addwf	fsr2l,f,c
 18793  011B02  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18794  011B04  22DA               	addwfc	fsr2h,f,c
 18795  011B06  50DF               	movf	indf2,w,c
 18796  011B08  010F               	movlb	15	; () banked
 18797  011B0A  6F2C               	movwf	44,b	;volatile
 18798                           
 18799                           ; BSR set to: 15
 18800                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18801  011B0C  0100               	movlb	0	; () banked
 18802  011B0E  EE20 F007          	lfsr	2,7
 18803  011B12  5175               	movf	CANsendMessage@data& (0+255),w,b
 18804  011B14  26D9               	addwf	fsr2l,f,c
 18805  011B16  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18806  011B18  22DA               	addwfc	fsr2h,f,c
 18807  011B1A  50DF               	movf	indf2,w,c
 18808  011B1C  010F               	movlb	15	; () banked
 18809  011B1E  6F2D               	movwf	45,b	;volatile
 18810                           
 18811                           ; BSR set to: 15
 18812                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18813  011B20  010F               	movlb	15	; () banked
 18814  011B22  8720               	bsf	32,3,b	;volatile
 18815                           
 18816                           ; BSR set to: 15
 18817                           ;inc\CANlib.h: 520: return;
 18818  011B24  0012               	return	
 18819  011B26                     __end_of_CANsendMessage:
 18820                           	opt stack 0
 18821                           tblptru	equ	0xFF8
 18822                           tblptrh	equ	0xFF7
 18823                           tblptrl	equ	0xFF6
 18824                           tablat	equ	0xFF5
 18825                           prodh	equ	0xFF4
 18826                           prodl	equ	0xFF3
 18827                           intcon	equ	0xFF2
 18828                           postinc0	equ	0xFEE
 18829                           wreg	equ	0xFE8
 18830                           indf1	equ	0xFE7
 18831                           plusw1	equ	0xFE3
 18832                           fsr1h	equ	0xFE2
 18833                           fsr1l	equ	0xFE1
 18834                           indf2	equ	0xFDF
 18835                           postinc2	equ	0xFDE
 18836                           plusw2	equ	0xFDB
 18837                           fsr2h	equ	0xFDA
 18838                           fsr2l	equ	0xFD9
 18839                           status	equ	0xFD8
 18840                           
 18841 ;; *************** function _CANisTxReady *****************
 18842 ;; Defined at:
 18843 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18844 ;; Parameters:    Size  Location     Type
 18845 ;;		None
 18846 ;; Auto vars:     Size  Location     Type
 18847 ;;		None
 18848 ;; Return value:  Size  Location     Type
 18849 ;;                  1    wreg      unsigned char 
 18850 ;; Registers used:
 18851 ;;		wreg, status,2
 18852 ;; Tracked objects:
 18853 ;;		On entry : 0/0
 18854 ;;		On exit  : 0/0
 18855 ;;		Unchanged: 0/0
 18856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18860 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18861 ;;Total ram usage:        1 bytes
 18862 ;; Hardware stack levels used:    1
 18863 ;; Hardware stack levels required when called:    3
 18864 ;; This function calls:
 18865 ;;		Nothing
 18866 ;; This function is called by:
 18867 ;;		_main
 18868 ;;		_LCD_Handler
 18869 ;;		_CAN_Tx
 18870 ;; This function uses a non-reentrant model
 18871 ;;
 18872                           
 18873                           	psect	text54
 18874  0163B6                     __ptext54:
 18875                           	opt stack 0
 18876  0163B6                     _CANisTxReady:
 18877                           	opt stack 26
 18878                           
 18879                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18880                           
 18881                           ; BSR set to: 15
 18882                           ;incstack = 0
 18883  0163B6  0E01               	movlw	1
 18884  0163B8  0100               	movlb	0	; () banked
 18885  0163BA  6F71               	movwf	_CANisTxReady$3251& (0+255),b
 18886                           
 18887                           ; BSR set to: 0
 18888  0163BC  010F               	movlb	15	; () banked
 18889  0163BE  A740               	btfss	64,3,b	;volatile
 18890  0163C0  D009               	goto	l576
 18891                           
 18892                           ; BSR set to: 15
 18893  0163C2  010F               	movlb	15	; () banked
 18894  0163C4  A730               	btfss	48,3,b	;volatile
 18895  0163C6  D006               	goto	l576
 18896                           
 18897                           ; BSR set to: 15
 18898  0163C8  010F               	movlb	15	; () banked
 18899  0163CA  A720               	btfss	32,3,b	;volatile
 18900  0163CC  D003               	goto	l576
 18901                           
 18902                           ; BSR set to: 15
 18903  0163CE  0E00               	movlw	0
 18904  0163D0  0100               	movlb	0	; () banked
 18905  0163D2  6F71               	movwf	_CANisTxReady$3251& (0+255),b
 18906  0163D4                     l576:
 18907  0163D4  0100               	movlb	0	; () banked
 18908  0163D6  5171               	movf	_CANisTxReady$3251& (0+255),w,b
 18909  0163D8  0012               	return	
 18910  0163DA                     __end_of_CANisTxReady:
 18911                           	opt stack 0
 18912                           tblptru	equ	0xFF8
 18913                           tblptrh	equ	0xFF7
 18914                           tblptrl	equ	0xFF6
 18915                           tablat	equ	0xFF5
 18916                           prodh	equ	0xFF4
 18917                           prodl	equ	0xFF3
 18918                           intcon	equ	0xFF2
 18919                           postinc0	equ	0xFEE
 18920                           wreg	equ	0xFE8
 18921                           indf1	equ	0xFE7
 18922                           plusw1	equ	0xFE3
 18923                           fsr1h	equ	0xFE2
 18924                           fsr1l	equ	0xFE1
 18925                           indf2	equ	0xFDF
 18926                           postinc2	equ	0xFDE
 18927                           plusw2	equ	0xFDB
 18928                           fsr2h	equ	0xFDA
 18929                           fsr2l	equ	0xFD9
 18930                           status	equ	0xFD8
 18931                           
 18932 ;; *************** function _CAN_Rx *****************
 18933 ;; Defined at:
 18934 ;;		line 585 in file "RemoteCan.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;		None
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;		None
 18939 ;; Return value:  Size  Location     Type
 18940 ;;		None               void
 18941 ;; Registers used:
 18942 ;;		wreg, status,2, status,0
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18950 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18951 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18952 ;;Total ram usage:        4 bytes
 18953 ;; Hardware stack levels used:    1
 18954 ;; Hardware stack levels required when called:    3
 18955 ;; This function calls:
 18956 ;;		Nothing
 18957 ;; This function is called by:
 18958 ;;		_main
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           	psect	text55
 18963  015AE8                     __ptext55:
 18964                           	opt stack 0
 18965  015AE8                     _CAN_Rx:
 18966                           	opt stack 27
 18967                           
 18968                           ;RemoteCan.c: 586: if (id == 0b00000000010) {
 18969                           
 18970                           ; BSR set to: 0
 18971                           ;incstack = 0
 18972  015AE8  0E02               	movlw	2
 18973  015AEA  1805               	xorwf	_id,w,c	;volatile
 18974  015AEC  1006               	iorwf	_id+1,w,c	;volatile
 18975  015AEE  1007               	iorwf	_id+2,w,c	;volatile
 18976  015AF0  1008               	iorwf	_id+3,w,c	;volatile
 18977  015AF2  A4D8               	btfss	status,2,c
 18978  015AF4  D015               	goto	l7135
 18979                           
 18980                           ;RemoteCan.c: 587: if (RTR_Flag == 1) {
 18981  015AF6  AA4B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18982  015AF8  D00C               	goto	l7125
 18983                           
 18984                           ;RemoteCan.c: 588: pr_time_4 = time_counter;
 18985  015AFA  C01D  F011         	movff	_time_counter,_pr_time_4	;volatile
 18986  015AFE  C01E  F012         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18987  015B02  C01F  F013         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18988  015B06  C020  F014         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18989                           
 18990                           ;RemoteCan.c: 589: MotoreFlag = 1;
 18991  015B0A  884B               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 18992                           
 18993                           ;RemoteCan.c: 590: AbsFlag = 0;
 18994  015B0C  904B               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18995                           
 18996                           ;RemoteCan.c: 591: SterzoFlag = 0;
 18997  015B0E  9C4B               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18998                           
 18999                           ;RemoteCan.c: 592: } else {
 19000  015B10  D007               	goto	l7135
 19001  015B12                     l7125:
 19002                           
 19003                           ;RemoteCan.c: 593: if (data[0] == 0x01) {
 19004  015B12  0429               	decf	_data,w,c
 19005  015B14  B4D8               	btfsc	status,2,c
 19006                           
 19007                           ;RemoteCan.c: 594: AbsFlag = 1;
 19008  015B16  804B               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 19009                           
 19010                           ;RemoteCan.c: 595: }
 19011                           ;RemoteCan.c: 596: if (data[0] == 0x02) {
 19012  015B18  0E02               	movlw	2
 19013  015B1A  1829               	xorwf	_data,w,c
 19014  015B1C  B4D8               	btfsc	status,2,c
 19015                           
 19016                           ;RemoteCan.c: 597: SterzoFlag = 1;
 19017  015B1E  8C4B               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 19018  015B20                     l7135:
 19019                           
 19020                           ;RemoteCan.c: 604: }
 19021                           ;RemoteCan.c: 606: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 19022  015B20  0E06               	movlw	6
 19023  015B22  1805               	xorwf	_id,w,c	;volatile
 19024  015B24  1006               	iorwf	_id+1,w,c	;volatile
 19025  015B26  1007               	iorwf	_id+2,w,c	;volatile
 19026  015B28  1008               	iorwf	_id+3,w,c	;volatile
 19027  015B2A  B4D8               	btfsc	status,2,c
 19028  015B2C  BA4B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19029  015B2E  D029               	goto	l7147
 19030                           
 19031                           ;RemoteCan.c: 607: left_speed = data_speed_rx[1];
 19032  015B30  C101  F021         	movff	_data_speed_rx+1,_left_speed	;volatile
 19033  015B34  6A22               	clrf	_left_speed+1,c	;volatile
 19034                           
 19035                           ;RemoteCan.c: 608: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 19036  015B36  5021               	movf	_left_speed,w,c	;volatile
 19037  015B38  0100               	movlb	0	; () banked
 19038  015B3A  6F71               	movwf	??_CAN_Rx& (0+255),b
 19039  015B3C  0101               	movlb	1	; () banked
 19040  015B3E  5100               	movf	_data_speed_rx& (0+255),w,b
 19041  015B40  6E21               	movwf	_left_speed,c	;volatile
 19042  015B42  C071  F022         	movff	??_CAN_Rx,_left_speed+1	;volatile
 19043                           
 19044                           ; BSR set to: 1
 19045                           ;RemoteCan.c: 609: right_speed = data_speed_rx[3];
 19046  015B46  C103  F023         	movff	_data_speed_rx+3,_right_speed	;volatile
 19047  015B4A  6A24               	clrf	_right_speed+1,c	;volatile
 19048                           
 19049                           ;RemoteCan.c: 610: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 19050  015B4C  5023               	movf	_right_speed,w,c	;volatile
 19051  015B4E  0100               	movlb	0	; () banked
 19052  015B50  6F71               	movwf	??_CAN_Rx& (0+255),b
 19053  015B52  0101               	movlb	1	; () banked
 19054  015B54  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 19055  015B56  6E23               	movwf	_right_speed,c	;volatile
 19056  015B58  C071  F024         	movff	??_CAN_Rx,_right_speed+1	;volatile
 19057                           
 19058                           ; BSR set to: 1
 19059                           ;RemoteCan.c: 611: actual_speed = (right_speed + left_speed) / 2;
 19060  015B5C  5021               	movf	_left_speed,w,c	;volatile
 19061  015B5E  2423               	addwf	_right_speed,w,c	;volatile
 19062  015B60  0100               	movlb	0	; () banked
 19063  015B62  6F71               	movwf	??_CAN_Rx& (0+255),b
 19064  015B64  5022               	movf	_left_speed+1,w,c	;volatile
 19065  015B66  2024               	addwfc	_right_speed+1,w,c	;volatile
 19066  015B68  0100               	movlb	0	; () banked
 19067  015B6A  6F72               	movwf	(??_CAN_Rx+1)& (0+255),b
 19068  015B6C  90D8               	bcf	status,0,c
 19069  015B6E  0100               	movlb	0	; () banked
 19070  015B70  3172               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 19071  015B72  0100               	movlb	0	; () banked
 19072  015B74  6F73               	movwf	(??_CAN_Rx+2)& (0+255),b
 19073  015B76  0100               	movlb	0	; () banked
 19074  015B78  3171               	rrcf	??_CAN_Rx& (0+255),w,b
 19075  015B7A  0100               	movlb	0	; () banked
 19076  015B7C  6FDF               	movwf	_actual_speed& (0+255),b	;volatile
 19077  015B7E  C073  F0E0         	movff	??_CAN_Rx+2,_actual_speed+1	;volatile
 19078  015B82                     l7147:
 19079                           
 19080                           ;RemoteCan.c: 612: }
 19081                           ;RemoteCan.c: 614: if (id == 0b00000001001) {
 19082  015B82  0E09               	movlw	9
 19083  015B84  1805               	xorwf	_id,w,c	;volatile
 19084  015B86  1006               	iorwf	_id+1,w,c	;volatile
 19085  015B88  1007               	iorwf	_id+2,w,c	;volatile
 19086  015B8A  1008               	iorwf	_id+3,w,c	;volatile
 19087  015B8C  A4D8               	btfss	status,2,c
 19088  015B8E  0012               	return	
 19089                           
 19090                           ;RemoteCan.c: 615: battery = data[0];
 19091  015B90  C029  F027         	movff	_data,_battery	;volatile
 19092  015B94  0012               	return	
 19093  015B96                     __end_of_CAN_Rx:
 19094                           	opt stack 0
 19095                           tblptru	equ	0xFF8
 19096                           tblptrh	equ	0xFF7
 19097                           tblptrl	equ	0xFF6
 19098                           tablat	equ	0xFF5
 19099                           prodh	equ	0xFF4
 19100                           prodl	equ	0xFF3
 19101                           intcon	equ	0xFF2
 19102                           postinc0	equ	0xFEE
 19103                           wreg	equ	0xFE8
 19104                           indf1	equ	0xFE7
 19105                           plusw1	equ	0xFE3
 19106                           fsr1h	equ	0xFE2
 19107                           fsr1l	equ	0xFE1
 19108                           indf2	equ	0xFDF
 19109                           postinc2	equ	0xFDE
 19110                           plusw2	equ	0xFDB
 19111                           fsr2h	equ	0xFDA
 19112                           fsr2l	equ	0xFD9
 19113                           status	equ	0xFD8
 19114                           
 19115 ;; *************** function _ISR_bassa *****************
 19116 ;; Defined at:
 19117 ;;		line 187 in file "RemoteCan.c"
 19118 ;; Parameters:    Size  Location     Type
 19119 ;;		None
 19120 ;; Auto vars:     Size  Location     Type
 19121 ;;		None
 19122 ;; Return value:  Size  Location     Type
 19123 ;;		None               void
 19124 ;; Registers used:
 19125 ;;		wreg, status,2, status,0
 19126 ;; Tracked objects:
 19127 ;;		On entry : 0/0
 19128 ;;		On exit  : 0/0
 19129 ;;		Unchanged: 0/0
 19130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19133 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19134 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19135 ;;Total ram usage:       17 bytes
 19136 ;; Hardware stack levels used:    1
 19137 ;; Hardware stack levels required when called:    2
 19138 ;; This function calls:
 19139 ;;		Nothing
 19140 ;; This function is called by:
 19141 ;;		Interrupt level 1
 19142 ;; This function uses a non-reentrant model
 19143 ;;
 19144                           
 19145                           	psect	intcodelo
 19146  000018                     __pintcodelo:
 19147                           	opt stack 0
 19148  000018                     _ISR_bassa:
 19149                           	opt stack 20
 19150                           
 19151                           ;incstack = 0
 19152  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19153  00001A  CFD8 F02A          	movff	status,??_ISR_bassa
 19154  00001E  CFE8 F02B          	movff	wreg,??_ISR_bassa+1
 19155  000022  CFE0 F02C          	movff	bsr,??_ISR_bassa+2
 19156  000026  CFFA F02D          	movff	pclath,??_ISR_bassa+3
 19157  00002A  CFFB F02E          	movff	pclatu,??_ISR_bassa+4
 19158  00002E  CFE9 F02F          	movff	fsr0l,??_ISR_bassa+5
 19159  000032  CFEA F030          	movff	fsr0h,??_ISR_bassa+6
 19160  000036  CFE1 F031          	movff	fsr1l,??_ISR_bassa+7
 19161  00003A  CFE2 F032          	movff	fsr1h,??_ISR_bassa+8
 19162  00003E  CFD9 F033          	movff	fsr2l,??_ISR_bassa+9
 19163  000042  CFDA F034          	movff	fsr2h,??_ISR_bassa+10
 19164  000046  CFF3 F035          	movff	prodl,??_ISR_bassa+11
 19165  00004A  CFF4 F036          	movff	prodh,??_ISR_bassa+12
 19166  00004E  CFF6 F037          	movff	tblptrl,??_ISR_bassa+13
 19167  000052  CFF7 F038          	movff	tblptrh,??_ISR_bassa+14
 19168  000056  CFF8 F039          	movff	tblptru,??_ISR_bassa+15
 19169  00005A  CFF5 F03A          	movff	tablat,??_ISR_bassa+16
 19170                           
 19171                           ;RemoteCan.c: 188: if (PIR2bits.TMR3IF == 1) {
 19172  00005E  A2A1               	btfss	4001,1,c	;volatile
 19173  000060  D00B               	goto	i1l800
 19174                           
 19175                           ;RemoteCan.c: 189: time_counter++;
 19176  000062  0E01               	movlw	1
 19177  000064  261D               	addwf	_time_counter,f,c	;volatile
 19178  000066  0E00               	movlw	0
 19179  000068  221E               	addwfc	_time_counter+1,f,c	;volatile
 19180  00006A  221F               	addwfc	_time_counter+2,f,c	;volatile
 19181  00006C  2220               	addwfc	_time_counter+3,f,c	;volatile
 19182                           
 19183                           ;RemoteCan.c: 190: TMR3H = 0x63;
 19184  00006E  0E63               	movlw	99
 19185  000070  6EB3               	movwf	4019,c	;volatile
 19186                           
 19187                           ;RemoteCan.c: 191: TMR3L = 0xC0;
 19188  000072  0EC0               	movlw	192
 19189  000074  6EB2               	movwf	4018,c	;volatile
 19190                           
 19191                           ;RemoteCan.c: 192: PIR2bits.TMR3IF = 0;
 19192  000076  92A1               	bcf	4001,1,c	;volatile
 19193  000078                     i1l800:
 19194  000078  C03A  FFF5         	movff	??_ISR_bassa+16,tablat
 19195  00007C  C039  FFF8         	movff	??_ISR_bassa+15,tblptru
 19196  000080  C038  FFF7         	movff	??_ISR_bassa+14,tblptrh
 19197  000084  C037  FFF6         	movff	??_ISR_bassa+13,tblptrl
 19198  000088  C036  FFF4         	movff	??_ISR_bassa+12,prodh
 19199  00008C  C035  FFF3         	movff	??_ISR_bassa+11,prodl
 19200  000090  C034  FFDA         	movff	??_ISR_bassa+10,fsr2h
 19201  000094  C033  FFD9         	movff	??_ISR_bassa+9,fsr2l
 19202  000098  C032  FFE2         	movff	??_ISR_bassa+8,fsr1h
 19203  00009C  C031  FFE1         	movff	??_ISR_bassa+7,fsr1l
 19204  0000A0  C030  FFEA         	movff	??_ISR_bassa+6,fsr0h
 19205  0000A4  C02F  FFE9         	movff	??_ISR_bassa+5,fsr0l
 19206  0000A8  C02E  FFFB         	movff	??_ISR_bassa+4,pclatu
 19207  0000AC  C02D  FFFA         	movff	??_ISR_bassa+3,pclath
 19208  0000B0  C02C  FFE0         	movff	??_ISR_bassa+2,bsr
 19209  0000B4  C02B  FFE8         	movff	??_ISR_bassa+1,wreg
 19210  0000B8  C02A  FFD8         	movff	??_ISR_bassa,status
 19211  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19212  0000BE  0010               	retfie	
 19213  0000C0                     __end_of_ISR_bassa:
 19214                           	opt stack 0
 19215                           pclatu	equ	0xFFB
 19216                           pclath	equ	0xFFA
 19217                           tblptru	equ	0xFF8
 19218                           tblptrh	equ	0xFF7
 19219                           tblptrl	equ	0xFF6
 19220                           tablat	equ	0xFF5
 19221                           prodh	equ	0xFF4
 19222                           prodl	equ	0xFF3
 19223                           intcon	equ	0xFF2
 19224                           postinc0	equ	0xFEE
 19225                           fsr0h	equ	0xFEA
 19226                           fsr0l	equ	0xFE9
 19227                           wreg	equ	0xFE8
 19228                           indf1	equ	0xFE7
 19229                           plusw1	equ	0xFE3
 19230                           fsr1h	equ	0xFE2
 19231                           fsr1l	equ	0xFE1
 19232                           bsr	equ	0xFE0
 19233                           indf2	equ	0xFDF
 19234                           postinc2	equ	0xFDE
 19235                           plusw2	equ	0xFDB
 19236                           fsr2h	equ	0xFDA
 19237                           fsr2l	equ	0xFD9
 19238                           status	equ	0xFD8
 19239                           
 19240 ;; *************** function _ISR_alta *****************
 19241 ;; Defined at:
 19242 ;;		line 119 in file "RemoteCan.c"
 19243 ;; Parameters:    Size  Location     Type
 19244 ;;		None
 19245 ;; Auto vars:     Size  Location     Type
 19246 ;;  i               1   16[BANK0 ] unsigned char 
 19247 ;; Return value:  Size  Location     Type
 19248 ;;		None               void
 19249 ;; Registers used:
 19250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19251 ;; Tracked objects:
 19252 ;;		On entry : 0/0
 19253 ;;		On exit  : 0/0
 19254 ;;		Unchanged: 0/0
 19255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19258 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19259 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19260 ;;Total ram usage:       17 bytes
 19261 ;; Hardware stack levels used:    1
 19262 ;; Hardware stack levels required when called:    1
 19263 ;; This function calls:
 19264 ;;		_CANisRxReady
 19265 ;;		_CANreceiveMessage
 19266 ;;		i2_CANisTxReady
 19267 ;;		i2_CANsendMessage
 19268 ;; This function is called by:
 19269 ;;		Interrupt level 2
 19270 ;; This function uses a non-reentrant model
 19271 ;;
 19272                           
 19273                           	psect	intcode
 19274  000008                     __pintcode:
 19275                           	opt stack 0
 19276  000008                     _ISR_alta:
 19277                           	opt stack 20
 19278                           
 19279                           ;incstack = 0
 19280  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19281  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 19282  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 19283  000012  EF6E  F0A3         	goto	int_func
 19284                           pclatu	equ	0xFFB
 19285                           pclath	equ	0xFFA
 19286                           tblptru	equ	0xFF8
 19287                           tblptrh	equ	0xFF7
 19288                           tblptrl	equ	0xFF6
 19289                           tablat	equ	0xFF5
 19290                           prodh	equ	0xFF4
 19291                           prodl	equ	0xFF3
 19292                           intcon	equ	0xFF2
 19293                           postinc0	equ	0xFEE
 19294                           fsr0h	equ	0xFEA
 19295                           fsr0l	equ	0xFE9
 19296                           wreg	equ	0xFE8
 19297                           indf1	equ	0xFE7
 19298                           plusw1	equ	0xFE3
 19299                           fsr1h	equ	0xFE2
 19300                           fsr1l	equ	0xFE1
 19301                           bsr	equ	0xFE0
 19302                           indf2	equ	0xFDF
 19303                           postinc2	equ	0xFDE
 19304                           plusw2	equ	0xFDB
 19305                           fsr2h	equ	0xFDA
 19306                           fsr2l	equ	0xFD9
 19307                           status	equ	0xFD8
 19308                           
 19309                           	psect	intcode_body
 19310  0146DC                     __pintcode_body:
 19311                           	opt stack 20
 19312  0146DC                     int_func:
 19313                           	opt stack 20
 19314  0146DC  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 19315  0146E0  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 19316  0146E4  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 19317  0146E8  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 19318  0146EC  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 19319  0146F0  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 19320  0146F4  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 19321  0146F8  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 19322  0146FC  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 19323  014700  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 19324  014704  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 19325  014708  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 19326                           
 19327                           ;RemoteCan.c: 120: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 19328  01470C  A2A4               	btfss	4004,1,c	;volatile
 19329  01470E  B0A4               	btfsc	4004,0,c	;volatile
 19330  014710  D001               	goto	i2l9549
 19331  014712  D0C4               	goto	i2l796
 19332  014714                     i2l9549:
 19333                           
 19334                           ;RemoteCan.c: 121: if (CANisRxReady()) {
 19335  014714  EC50  F0B2         	call	_CANisRxReady	;wreg free
 19336  014718  0900               	iorlw	0
 19337  01471A  B4D8               	btfsc	status,2,c
 19338  01471C  D0BD               	goto	i2l9619
 19339                           
 19340                           ;RemoteCan.c: 122: CANreceiveMessage(&msg);
 19341  01471E  0E0D               	movlw	low _msg
 19342  014720  6E3B               	movwf	CANreceiveMessage@msg,c
 19343  014722  0E01               	movlw	high _msg
 19344  014724  6E3C               	movwf	CANreceiveMessage@msg+1,c
 19345  014726  EC17  F097         	call	_CANreceiveMessage	;wreg free
 19346                           
 19347                           ;RemoteCan.c: 123: RTR_Flag = msg.RTR;
 19348  01472A  0101               	movlb	1	; () banked
 19349  01472C  A11B               	btfss	(_msg+14)& (0+255),0,b
 19350  01472E  D002               	goto	i2u1279_40
 19351  014730  8A4B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19352  014732  D001               	goto	i2l9555
 19353  014734                     i2u1279_40:
 19354  014734  9A4B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19355  014736                     i2l9555:
 19356                           
 19357                           ;RemoteCan.c: 124: id = msg.identifier;
 19358  014736  C10D  F005         	movff	_msg,_id	;volatile
 19359  01473A  C10E  F006         	movff	_msg+1,_id+1	;volatile
 19360  01473E  C10F  F007         	movff	_msg+2,_id+2	;volatile
 19361  014742  C110  F008         	movff	_msg+3,_id+3	;volatile
 19362                           
 19363                           ;RemoteCan.c: 125: newMessageCan = 1;
 19364  014746  804C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 19365                           
 19366                           ;RemoteCan.c: 126: if (id == 0b00000000110) {
 19367  014748  0E06               	movlw	6
 19368  01474A  1805               	xorwf	_id,w,c	;volatile
 19369  01474C  1006               	iorwf	_id+1,w,c	;volatile
 19370  01474E  1007               	iorwf	_id+2,w,c	;volatile
 19371  014750  1008               	iorwf	_id+3,w,c	;volatile
 19372  014752  A4D8               	btfss	status,2,c
 19373  014754  D01F               	goto	i2l9573
 19374                           
 19375                           ;RemoteCan.c: 127: for (unsigned char i = 0; i < 8; i++) {
 19376  014756  0E00               	movlw	0
 19377  014758  0100               	movlb	0	; () banked
 19378  01475A  6F70               	movwf	ISR_alta@i& (0+255),b
 19379  01475C                     i2l9563:
 19380                           
 19381                           ; BSR set to: 0
 19382  01475C  0E07               	movlw	7
 19383  01475E  0100               	movlb	0	; () banked
 19384  014760  6570               	cpfsgt	ISR_alta@i& (0+255),b
 19385  014762  D001               	goto	i2l9567
 19386  014764  D017               	goto	i2l9573
 19387  014766                     i2l9567:
 19388                           
 19389                           ; BSR set to: 0
 19390                           ;RemoteCan.c: 128: data_speed_rx[i] = msg.data[i];
 19391  014766  0100               	movlb	0	; () banked
 19392  014768  5170               	movf	ISR_alta@i& (0+255),w,b
 19393  01476A  0D01               	mullw	1
 19394  01476C  0E11               	movlw	low (_msg+4)
 19395  01476E  24F3               	addwf	prodl,w,c
 19396  014770  6ED9               	movwf	fsr2l,c
 19397  014772  0E01               	movlw	high (_msg+4)
 19398  014774  20F4               	addwfc	prodh,w,c
 19399  014776  6EDA               	movwf	fsr2h,c
 19400  014778  0100               	movlb	0	; () banked
 19401  01477A  5170               	movf	ISR_alta@i& (0+255),w,b
 19402  01477C  0D01               	mullw	1
 19403  01477E  0E00               	movlw	low _data_speed_rx
 19404  014780  24F3               	addwf	prodl,w,c
 19405  014782  6EE1               	movwf	fsr1l,c
 19406  014784  0E01               	movlw	high _data_speed_rx
 19407  014786  20F4               	addwfc	prodh,w,c
 19408  014788  6EE2               	movwf	fsr1h,c
 19409  01478A  CFDF FFE7          	movff	indf2,indf1
 19410                           
 19411                           ; BSR set to: 0
 19412  01478E  0100               	movlb	0	; () banked
 19413  014790  2B70               	incf	ISR_alta@i& (0+255),f,b
 19414  014792  D7E4               	goto	i2l9563
 19415  014794                     i2l9573:
 19416                           
 19417                           ;RemoteCan.c: 129: }
 19418                           ;RemoteCan.c: 130: }
 19419                           ;RemoteCan.c: 132: if (id == 0b00000001011) {
 19420  014794  0E0B               	movlw	11
 19421  014796  1805               	xorwf	_id,w,c	;volatile
 19422  014798  1006               	iorwf	_id+1,w,c	;volatile
 19423  01479A  1007               	iorwf	_id+2,w,c	;volatile
 19424  01479C  1008               	iorwf	_id+3,w,c	;volatile
 19425  01479E  A4D8               	btfss	status,2,c
 19426  0147A0  D02D               	goto	i2l9595
 19427                           
 19428                           ;RemoteCan.c: 133: if (msg.data[0] == 1) {
 19429  0147A2  0101               	movlb	1	; () banked
 19430  0147A4  0511               	decf	(_msg+4)& (0+255),w,b
 19431  0147A6  A4D8               	btfss	status,2,c
 19432  0147A8  D008               	goto	i2l9581
 19433                           
 19434                           ; BSR set to: 1
 19435                           ;RemoteCan.c: 134: LATDbits.LATD2 = 1;
 19436  0147AA  848C               	bsf	3980,2,c	;volatile
 19437                           
 19438                           ;RemoteCan.c: 135: space_available = 1;
 19439  0147AC  864C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19440                           
 19441                           ;RemoteCan.c: 136: space_gap_reached = 0;
 19442  0147AE  984C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19443                           
 19444                           ;RemoteCan.c: 137: F2_switch = 0;
 19445  0147B0  964B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 19446                           
 19447                           ;RemoteCan.c: 138: parking_message_E = 1;
 19448  0147B2  824C               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 19449                           
 19450                           ; BSR set to: 1
 19451                           ;RemoteCan.c: 139: parking_message_ID = 0;
 19452  0147B4  0E00               	movlw	0
 19453  0147B6  0100               	movlb	0	; () banked
 19454  0147B8  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
 19455  0147BA                     i2l9581:
 19456                           
 19457                           ;RemoteCan.c: 140: }
 19458                           ;RemoteCan.c: 142: if (msg.data[0] == 2) {
 19459  0147BA  0E02               	movlw	2
 19460  0147BC  0101               	movlb	1	; () banked
 19461  0147BE  1911               	xorwf	(_msg+4)& (0+255),w,b
 19462  0147C0  A4D8               	btfss	status,2,c
 19463  0147C2  D007               	goto	i2l9587
 19464                           
 19465                           ; BSR set to: 1
 19466                           ;RemoteCan.c: 143: LATDbits.LATD3 = 1;
 19467  0147C4  868C               	bsf	3980,3,c	;volatile
 19468                           
 19469                           ;RemoteCan.c: 144: space_available = 1;
 19470  0147C6  864C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19471                           
 19472                           ;RemoteCan.c: 145: space_gap_reached = 1;
 19473  0147C8  884C               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19474                           
 19475                           ;RemoteCan.c: 146: Can_Tx_Force = 1;
 19476  0147CA  824B               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 19477                           
 19478                           ; BSR set to: 1
 19479                           ;RemoteCan.c: 147: parking_message_ID = 2;
 19480  0147CC  0E02               	movlw	2
 19481  0147CE  0100               	movlb	0	; () banked
 19482  0147D0  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
 19483  0147D2                     i2l9587:
 19484                           
 19485                           ;RemoteCan.c: 148: }
 19486                           ;RemoteCan.c: 150: if (msg.data[0] == 3) {
 19487  0147D2  0E03               	movlw	3
 19488  0147D4  0101               	movlb	1	; () banked
 19489  0147D6  1911               	xorwf	(_msg+4)& (0+255),w,b
 19490  0147D8  A4D8               	btfss	status,2,c
 19491  0147DA  D010               	goto	i2l9595
 19492                           
 19493                           ; BSR set to: 1
 19494                           ;RemoteCan.c: 151: parking_message_ID = 6;
 19495  0147DC  0E06               	movlw	6
 19496  0147DE  0100               	movlb	0	; () banked
 19497  0147E0  6FE6               	movwf	_parking_message_ID& (0+255),b	;volatile
 19498                           
 19499                           ; BSR set to: 0
 19500                           ;RemoteCan.c: 152: F1_switch = 0;
 19501  0147E2  944B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19502                           
 19503                           ; BSR set to: 0
 19504                           ;RemoteCan.c: 153: pr_time_6 = time_counter + (2000 / 10);
 19505  0147E4  0EC8               	movlw	200
 19506  0147E6  241D               	addwf	_time_counter,w,c	;volatile
 19507  0147E8  6E19               	movwf	_pr_time_6,c	;volatile
 19508  0147EA  0E00               	movlw	0
 19509  0147EC  201E               	addwfc	_time_counter+1,w,c	;volatile
 19510  0147EE  6E1A               	movwf	_pr_time_6+1,c	;volatile
 19511  0147F0  0E00               	movlw	0
 19512  0147F2  201F               	addwfc	_time_counter+2,w,c	;volatile
 19513  0147F4  6E1B               	movwf	_pr_time_6+2,c	;volatile
 19514  0147F6  0E00               	movlw	0
 19515  0147F8  2020               	addwfc	_time_counter+3,w,c	;volatile
 19516  0147FA  6E1C               	movwf	_pr_time_6+3,c	;volatile
 19517  0147FC                     i2l9595:
 19518                           
 19519                           ;RemoteCan.c: 154: }
 19520                           ;RemoteCan.c: 155: }
 19521                           ;RemoteCan.c: 157: if (id == 0b00000001110) {
 19522  0147FC  0E0E               	movlw	14
 19523  0147FE  1805               	xorwf	_id,w,c	;volatile
 19524  014800  1006               	iorwf	_id+1,w,c	;volatile
 19525  014802  1007               	iorwf	_id+2,w,c	;volatile
 19526  014804  1008               	iorwf	_id+3,w,c	;volatile
 19527  014806  A4D8               	btfss	status,2,c
 19528  014808  D008               	goto	i2l9599
 19529                           
 19530                           ;RemoteCan.c: 158: steering_correction_dir = msg.data[1];
 19531  01480A  0101               	movlb	1	; () banked
 19532  01480C  A112               	btfss	(_msg+5)& (0+255),0,b
 19533  01480E  D002               	goto	i2u1289_40
 19534  014810  8A4C               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19535  014812  D001               	goto	i2u1290_45
 19536  014814                     i2u1289_40:
 19537  014814  9A4C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19538  014816                     i2u1290_45:
 19539                           
 19540                           ;RemoteCan.c: 159: steering_correction = msg.data[0];
 19541  014816  C111  F0E8         	movff	_msg+4,_steering_correction	;volatile
 19542  01481A                     i2l9599:
 19543                           
 19544                           ;RemoteCan.c: 160: }
 19545                           ;RemoteCan.c: 162: if (id == 0xAA) {
 19546  01481A  0EAA               	movlw	170
 19547  01481C  1805               	xorwf	_id,w,c	;volatile
 19548  01481E  1006               	iorwf	_id+1,w,c	;volatile
 19549  014820  1007               	iorwf	_id+2,w,c	;volatile
 19550  014822  1008               	iorwf	_id+3,w,c	;volatile
 19551  014824  A4D8               	btfss	status,2,c
 19552  014826  D00B               	goto	i2l9605
 19553                           
 19554                           ;RemoteCan.c: 163: user_data = msg.data[1];
 19555  014828  C112  F025         	movff	_msg+5,_user_data	;volatile
 19556  01482C  6A26               	clrf	_user_data+1,c	;volatile
 19557                           
 19558                           ;RemoteCan.c: 164: user_data = ((user_data << 8) | msg.data[0]);
 19559  01482E  5025               	movf	_user_data,w,c	;volatile
 19560  014830  0100               	movlb	0	; () banked
 19561  014832  6F60               	movwf	??_ISR_alta& (0+255),b
 19562  014834  0101               	movlb	1	; () banked
 19563  014836  5111               	movf	(_msg+4)& (0+255),w,b
 19564  014838  6E25               	movwf	_user_data,c	;volatile
 19565  01483A  C060  F026         	movff	??_ISR_alta,_user_data+1	;volatile
 19566  01483E                     i2l9605:
 19567                           
 19568                           ;RemoteCan.c: 165: }
 19569                           ;RemoteCan.c: 167: if (id == 0b00000000010) {
 19570  01483E  0E02               	movlw	2
 19571  014840  1805               	xorwf	_id,w,c	;volatile
 19572  014842  1006               	iorwf	_id+1,w,c	;volatile
 19573  014844  1007               	iorwf	_id+2,w,c	;volatile
 19574  014846  1008               	iorwf	_id+3,w,c	;volatile
 19575  014848  B4D8               	btfsc	status,2,c
 19576                           
 19577                           ;RemoteCan.c: 168: if (RTR_Flag == 1) {
 19578  01484A  AA4B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19579  01484C  D025               	goto	i2l9619
 19580                           
 19581                           ;RemoteCan.c: 169: pr_time_4 = time_counter;
 19582  01484E  C01D  F011         	movff	_time_counter,_pr_time_4	;volatile
 19583  014852  C01E  F012         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19584  014856  C01F  F013         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19585  01485A  C020  F014         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19586                           
 19587                           ;RemoteCan.c: 170: data[0] = 0x03;
 19588  01485E  0E03               	movlw	3
 19589  014860  6E29               	movwf	_data,c
 19590                           
 19591                           ;RemoteCan.c: 171: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19592  014862  0E0D               	movlw	13
 19593  014864                     i2u1340_47:
 19594  014864  2EE8               	decfsz	wreg,f,c
 19595  014866  D7FE               	goto	i2u1340_47
 19596  014868  F000               	nop	
 19597  01486A                     i2l9615:
 19598  01486A  ECFE  F0B1         	call	i2_CANisTxReady	;wreg free
 19599  01486E  06E8               	decf	wreg,f,c
 19600  014870  A4D8               	btfss	status,2,c
 19601  014872  D7FB               	goto	i2l9615
 19602                           
 19603                           ;RemoteCan.c: 173: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19604  014874  0E02               	movlw	2
 19605  014876  6E3B               	movwf	i2CANsendMessage@identifier,c
 19606  014878  0E00               	movlw	0
 19607  01487A  6E3C               	movwf	i2CANsendMessage@identifier+1,c
 19608  01487C  0E00               	movlw	0
 19609  01487E  6E3D               	movwf	i2CANsendMessage@identifier+2,c
 19610  014880  0E00               	movlw	0
 19611  014882  6E3E               	movwf	i2CANsendMessage@identifier+3,c
 19612  014884  0E29               	movlw	low _data
 19613  014886  6E3F               	movwf	i2CANsendMessage@data,c
 19614  014888  0E00               	movlw	high _data
 19615  01488A  6E40               	movwf	i2CANsendMessage@data+1,c
 19616  01488C  0E08               	movlw	8
 19617  01488E  6E41               	movwf	i2CANsendMessage@dataLength,c
 19618  014890  0EBC               	movlw	188
 19619  014892  6E42               	movwf	i2CANsendMessage@flags,c
 19620  014894  EC42  F091         	call	i2_CANsendMessage	;wreg free
 19621  014898                     i2l9619:
 19622                           
 19623                           ;RemoteCan.c: 179: }
 19624                           ;RemoteCan.c: 180: }
 19625                           ;RemoteCan.c: 181: }
 19626                           ;RemoteCan.c: 182: PIR3bits.RXB1IF = 0;
 19627  014898  92A4               	bcf	4004,1,c	;volatile
 19628                           
 19629                           ;RemoteCan.c: 183: PIR3bits.RXB0IF = 0;
 19630  01489A  90A4               	bcf	4004,0,c	;volatile
 19631  01489C                     i2l796:
 19632  01489C  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 19633  0148A0  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 19634  0148A4  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 19635  0148A8  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 19636  0148AC  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 19637  0148B0  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 19638  0148B4  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 19639  0148B8  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 19640  0148BC  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 19641  0148C0  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 19642  0148C4  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 19643  0148C8  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 19644  0148CC  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 19645  0148D0  C062  FFFA         	movff	??_ISR_alta+2,pclath
 19646  0148D4  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19647  0148D6  0011               	retfie		f
 19648  0148D8                     __end_of_ISR_alta:
 19649                           	opt stack 0
 19650                           pclatu	equ	0xFFB
 19651                           pclath	equ	0xFFA
 19652                           tblptru	equ	0xFF8
 19653                           tblptrh	equ	0xFF7
 19654                           tblptrl	equ	0xFF6
 19655                           tablat	equ	0xFF5
 19656                           prodh	equ	0xFF4
 19657                           prodl	equ	0xFF3
 19658                           intcon	equ	0xFF2
 19659                           postinc0	equ	0xFEE
 19660                           fsr0h	equ	0xFEA
 19661                           fsr0l	equ	0xFE9
 19662                           wreg	equ	0xFE8
 19663                           indf1	equ	0xFE7
 19664                           plusw1	equ	0xFE3
 19665                           fsr1h	equ	0xFE2
 19666                           fsr1l	equ	0xFE1
 19667                           bsr	equ	0xFE0
 19668                           indf2	equ	0xFDF
 19669                           postinc2	equ	0xFDE
 19670                           plusw2	equ	0xFDB
 19671                           fsr2h	equ	0xFDA
 19672                           fsr2l	equ	0xFD9
 19673                           status	equ	0xFD8
 19674                           
 19675 ;; *************** function i2_CANsendMessage *****************
 19676 ;; Defined at:
 19677 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;  identifier      4   17[COMRAM] unsigned long 
 19680 ;;  data            2   21[COMRAM] PTR unsigned char 
 19681 ;;		 -> data_speed(1), park_assist_state(8), data_steering(1), data_brake(1), 
 19682 ;;		 -> data(1), 
 19683 ;;  dataLength      1   23[COMRAM] unsigned char 
 19684 ;;  flags           1   24[COMRAM] enum E16909
 19685 ;; Auto vars:     Size  Location     Type
 19686 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19687 ;; Return value:  Size  Location     Type
 19688 ;;		None               void
 19689 ;; Registers used:
 19690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19691 ;; Tracked objects:
 19692 ;;		On entry : 0/0
 19693 ;;		On exit  : 0/0
 19694 ;;		Unchanged: 0/0
 19695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19696 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19697 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19698 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19699 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19700 ;;Total ram usage:       16 bytes
 19701 ;; Hardware stack levels used:    1
 19702 ;; This function calls:
 19703 ;;		Nothing
 19704 ;; This function is called by:
 19705 ;;		_ISR_alta
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           	psect	text58
 19710  012284                     __ptext58:
 19711                           	opt stack 0
 19712  012284                     i2_CANsendMessage:
 19713                           	opt stack 20
 19714                           
 19715                           ;inc\CANlib.h: 296: unsigned long tamp;
 19716                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19717                           
 19718                           ;incstack = 0
 19719  012284  010F               	movlb	15	; () banked
 19720  012286  B740               	btfsc	64,3,b	;volatile
 19721  012288  D115               	goto	i2l383
 19722                           
 19723                           ; BSR set to: 15
 19724                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19725  01228A  C041  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19726                           
 19727                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19728  01228E  AC42               	btfss	i2CANsendMessage@flags,6,c
 19729  012290  D003               	goto	i2l384
 19730                           
 19731                           ; BSR set to: 15
 19732                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19733  012292  010F               	movlb	15	; () banked
 19734  012294  8D45               	bsf	69,6,b	;volatile
 19735  012296  D002               	goto	i2l385
 19736  012298                     i2l384:
 19737                           
 19738                           ; BSR set to: 15
 19739                           ;inc\CANlib.h: 302: else
 19740                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19741  012298  010F               	movlb	15	; () banked
 19742  01229A  9D45               	bcf	69,6,b	;volatile
 19743  01229C                     i2l385:
 19744                           
 19745                           ; BSR set to: 15
 19746                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19747  01229C  A642               	btfss	i2CANsendMessage@flags,3,c
 19748  01229E  D066               	goto	i2l386
 19749                           
 19750                           ; BSR set to: 15
 19751                           ;inc\CANlib.h: 306: {
 19752                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19753  0122A0  503B               	movf	i2CANsendMessage@identifier,w,c
 19754  0122A2  6E47               	movwf	i2CANsendMessage@tamp,c
 19755  0122A4  6A48               	clrf	i2CANsendMessage@tamp+1,c
 19756  0122A6  6A49               	clrf	i2CANsendMessage@tamp+2,c
 19757  0122A8  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 19758                           
 19759                           ; BSR set to: 15
 19760                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19761  0122AA  C047  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19762                           
 19763                           ; BSR set to: 15
 19764                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19765  0122AE  0E00               	movlw	0
 19766  0122B0  143B               	andwf	i2CANsendMessage@identifier,w,c
 19767  0122B2  6E47               	movwf	i2CANsendMessage@tamp,c
 19768  0122B4  0EFF               	movlw	255
 19769  0122B6  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 19770  0122B8  6E48               	movwf	i2CANsendMessage@tamp+1,c
 19771  0122BA  0E00               	movlw	0
 19772  0122BC  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 19773  0122BE  6E49               	movwf	i2CANsendMessage@tamp+2,c
 19774  0122C0  0E00               	movlw	0
 19775  0122C2  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 19776  0122C4  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 19777                           
 19778                           ; BSR set to: 15
 19779                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19780  0122C6  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19781  0122CA  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19782  0122CE  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19783  0122D2  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19784  0122D6  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19785  0122DA  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19786  0122DE  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19787  0122E2  6A46               	clrf	??i2_CANsendMessage+3,c
 19788  0122E4  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19789  0122E8  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19790  0122EC  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19791  0122F0  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19792                           
 19793                           ; BSR set to: 15
 19794                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19795  0122F4  C047  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19796                           
 19797                           ; BSR set to: 15
 19798                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19799  0122F8  0E00               	movlw	0
 19800  0122FA  010F               	movlb	15	; () banked
 19801  0122FC  6F42               	movwf	66,b	;volatile
 19802                           
 19803                           ; BSR set to: 15
 19804                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19805  0122FE  010F               	movlb	15	; () banked
 19806  012300  8742               	bsf	66,3,b	;volatile
 19807                           
 19808                           ; BSR set to: 15
 19809                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19810  012302  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 19811  012304  D002               	goto	i2l387
 19812                           
 19813                           ; BSR set to: 15
 19814                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19815  012306  010F               	movlb	15	; () banked
 19816  012308  8142               	bsf	66,0,b	;volatile
 19817  01230A                     i2l387:
 19818                           
 19819                           ; BSR set to: 15
 19820                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19821  01230A  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 19822  01230C  D002               	goto	i2l388
 19823                           
 19824                           ; BSR set to: 15
 19825                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19826  01230E  010F               	movlb	15	; () banked
 19827  012310  8342               	bsf	66,1,b	;volatile
 19828  012312                     i2l388:
 19829                           
 19830                           ; BSR set to: 15
 19831                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19832  012312  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 19833  012314  D002               	goto	i2l389
 19834                           
 19835                           ; BSR set to: 15
 19836                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19837  012316  010F               	movlb	15	; () banked
 19838  012318  8B42               	bsf	66,5,b	;volatile
 19839  01231A                     i2l389:
 19840                           
 19841                           ; BSR set to: 15
 19842                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19843  01231A  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 19844  01231C  D002               	goto	i2l390
 19845                           
 19846                           ; BSR set to: 15
 19847                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19848  01231E  010F               	movlb	15	; () banked
 19849  012320  8D42               	bsf	66,6,b	;volatile
 19850  012322                     i2l390:
 19851                           
 19852                           ; BSR set to: 15
 19853                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19854  012322  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 19855  012324  D002               	goto	i2l9317
 19856                           
 19857                           ; BSR set to: 15
 19858                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19859  012326  010F               	movlb	15	; () banked
 19860  012328  8F42               	bsf	66,7,b	;volatile
 19861  01232A                     i2l9317:
 19862                           
 19863                           ; BSR set to: 15
 19864                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19865  01232A  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19866  01232E  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19867  012332  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19868  012336  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19869  01233A  0E16               	movlw	22
 19870  01233C  D005               	goto	i2u1240_40
 19871  01233E                     i2u1240_45:
 19872  01233E  90D8               	bcf	status,0,c
 19873  012340  3246               	rrcf	??i2_CANsendMessage+3,f,c
 19874  012342  3245               	rrcf	??i2_CANsendMessage+2,f,c
 19875  012344  3244               	rrcf	??i2_CANsendMessage+1,f,c
 19876  012346  3243               	rrcf	??i2_CANsendMessage,f,c
 19877  012348                     i2u1240_40:
 19878  012348  2EE8               	decfsz	wreg,f,c
 19879  01234A  D7F9               	goto	i2u1240_45
 19880  01234C  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19881  012350  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19882  012354  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19883  012358  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19884                           
 19885                           ; BSR set to: 15
 19886                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19887  01235C  5047               	movf	i2CANsendMessage@tamp,w,c
 19888  01235E  6E47               	movwf	i2CANsendMessage@tamp,c
 19889  012360  6A48               	clrf	i2CANsendMessage@tamp+1,c
 19890  012362  6A49               	clrf	i2CANsendMessage@tamp+2,c
 19891  012364  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 19892                           
 19893                           ; BSR set to: 15
 19894                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19895  012366  C047  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19896                           
 19897                           ;inc\CANlib.h: 332: }
 19898  01236A  D04D               	goto	i2l9337
 19899  01236C                     i2l386:
 19900                           
 19901                           ; BSR set to: 15
 19902                           ;inc\CANlib.h: 334: else
 19903                           ;inc\CANlib.h: 336: {
 19904                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19905  01236C  010F               	movlb	15	; () banked
 19906  01236E  9742               	bcf	66,3,b	;volatile
 19907                           
 19908                           ; BSR set to: 15
 19909                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19910  012370  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19911  012374  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19912  012378  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19913  01237C  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19914  012380  0E04               	movlw	4
 19915  012382  D005               	goto	i2u1241_40
 19916  012384                     i2u1241_45:
 19917  012384  90D8               	bcf	status,0,c
 19918  012386  3246               	rrcf	??i2_CANsendMessage+3,f,c
 19919  012388  3245               	rrcf	??i2_CANsendMessage+2,f,c
 19920  01238A  3244               	rrcf	??i2_CANsendMessage+1,f,c
 19921  01238C  3243               	rrcf	??i2_CANsendMessage,f,c
 19922  01238E                     i2u1241_40:
 19923  01238E  2EE8               	decfsz	wreg,f,c
 19924  012390  D7F9               	goto	i2u1241_45
 19925  012392  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19926  012396  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19927  01239A  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19928  01239E  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19929                           
 19930                           ; BSR set to: 15
 19931                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19932  0123A2  5047               	movf	i2CANsendMessage@tamp,w,c
 19933  0123A4  6E47               	movwf	i2CANsendMessage@tamp,c
 19934  0123A6  6A48               	clrf	i2CANsendMessage@tamp+1,c
 19935  0123A8  6A49               	clrf	i2CANsendMessage@tamp+2,c
 19936  0123AA  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 19937                           
 19938                           ; BSR set to: 15
 19939                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19940  0123AC  C047  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19941                           
 19942                           ; BSR set to: 15
 19943                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19944  0123B0  0E07               	movlw	7
 19945  0123B2  143B               	andwf	i2CANsendMessage@identifier,w,c
 19946  0123B4  6E47               	movwf	i2CANsendMessage@tamp,c
 19947  0123B6  0E00               	movlw	0
 19948  0123B8  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 19949  0123BA  6E48               	movwf	i2CANsendMessage@tamp+1,c
 19950  0123BC  0E00               	movlw	0
 19951  0123BE  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 19952  0123C0  6E49               	movwf	i2CANsendMessage@tamp+2,c
 19953  0123C2  0E00               	movlw	0
 19954  0123C4  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 19955  0123C6  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 19956                           
 19957                           ; BSR set to: 15
 19958                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19959  0123C8  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19960  0123CC  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19961  0123D0  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19962  0123D4  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19963  0123D8  0E05               	movlw	5
 19964  0123DA                     i2u1242_45:
 19965  0123DA  90D8               	bcf	status,0,c
 19966  0123DC  3643               	rlcf	??i2_CANsendMessage,f,c
 19967  0123DE  3644               	rlcf	??i2_CANsendMessage+1,f,c
 19968  0123E0  3645               	rlcf	??i2_CANsendMessage+2,f,c
 19969  0123E2  3646               	rlcf	??i2_CANsendMessage+3,f,c
 19970  0123E4  2EE8               	decfsz	wreg,f,c
 19971  0123E6  D7F9               	goto	i2u1242_45
 19972  0123E8  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19973  0123EC  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19974  0123F0  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19975  0123F4  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19976                           
 19977                           ; BSR set to: 15
 19978                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19979  0123F8  010F               	movlb	15	; () banked
 19980  0123FA  5142               	movf	66,w,b	;volatile
 19981  0123FC  0B1F               	andlw	31
 19982  0123FE  010F               	movlb	15	; () banked
 19983  012400  6F42               	movwf	66,b	;volatile
 19984                           
 19985                           ; BSR set to: 15
 19986                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19987  012402  C047  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19988  012406                     i2l9337:
 19989                           
 19990                           ; BSR set to: 15
 19991                           ;inc\CANlib.h: 347: }
 19992                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19993  012406  A042               	btfss	i2CANsendMessage@flags,0,c
 19994  012408  D003               	goto	i2l393
 19995                           
 19996                           ; BSR set to: 15
 19997                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19998  01240A  010F               	movlb	15	; () banked
 19999  01240C  8140               	bsf	64,0,b	;volatile
 20000  01240E  D002               	goto	i2l394
 20001  012410                     i2l393:
 20002                           
 20003                           ; BSR set to: 15
 20004                           ;inc\CANlib.h: 351: else
 20005                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 20006  012410  010F               	movlb	15	; () banked
 20007  012412  9140               	bcf	64,0,b	;volatile
 20008  012414                     i2l394:
 20009                           
 20010                           ; BSR set to: 15
 20011                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 20012  012414  A242               	btfss	i2CANsendMessage@flags,1,c
 20013  012416  D003               	goto	i2l395
 20014                           
 20015                           ; BSR set to: 15
 20016                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 20017  012418  010F               	movlb	15	; () banked
 20018  01241A  8340               	bsf	64,1,b	;volatile
 20019  01241C  D002               	goto	i2l9343
 20020  01241E                     i2l395:
 20021                           
 20022                           ; BSR set to: 15
 20023                           ;inc\CANlib.h: 355: else
 20024                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 20025  01241E  010F               	movlb	15	; () banked
 20026  012420  9340               	bcf	64,1,b	;volatile
 20027  012422                     i2l9343:
 20028                           
 20029                           ; BSR set to: 15
 20030                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 20031  012422  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20032  012426  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20033  01242A  50DF               	movf	indf2,w,c
 20034  01242C  010F               	movlb	15	; () banked
 20035  01242E  6F46               	movwf	70,b	;volatile
 20036                           
 20037                           ; BSR set to: 15
 20038                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 20039  012430  EE20 F001          	lfsr	2,1
 20040  012434  503F               	movf	i2CANsendMessage@data,w,c
 20041  012436  26D9               	addwf	fsr2l,f,c
 20042  012438  5040               	movf	i2CANsendMessage@data+1,w,c
 20043  01243A  22DA               	addwfc	fsr2h,f,c
 20044  01243C  50DF               	movf	indf2,w,c
 20045  01243E  010F               	movlb	15	; () banked
 20046  012440  6F47               	movwf	71,b	;volatile
 20047                           
 20048                           ; BSR set to: 15
 20049                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 20050  012442  EE20 F002          	lfsr	2,2
 20051  012446  503F               	movf	i2CANsendMessage@data,w,c
 20052  012448  26D9               	addwf	fsr2l,f,c
 20053  01244A  5040               	movf	i2CANsendMessage@data+1,w,c
 20054  01244C  22DA               	addwfc	fsr2h,f,c
 20055  01244E  50DF               	movf	indf2,w,c
 20056  012450  010F               	movlb	15	; () banked
 20057  012452  6F48               	movwf	72,b	;volatile
 20058                           
 20059                           ; BSR set to: 15
 20060                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 20061  012454  EE20 F003          	lfsr	2,3
 20062  012458  503F               	movf	i2CANsendMessage@data,w,c
 20063  01245A  26D9               	addwf	fsr2l,f,c
 20064  01245C  5040               	movf	i2CANsendMessage@data+1,w,c
 20065  01245E  22DA               	addwfc	fsr2h,f,c
 20066  012460  50DF               	movf	indf2,w,c
 20067  012462  010F               	movlb	15	; () banked
 20068  012464  6F49               	movwf	73,b	;volatile
 20069                           
 20070                           ; BSR set to: 15
 20071                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 20072  012466  EE20 F004          	lfsr	2,4
 20073  01246A  503F               	movf	i2CANsendMessage@data,w,c
 20074  01246C  26D9               	addwf	fsr2l,f,c
 20075  01246E  5040               	movf	i2CANsendMessage@data+1,w,c
 20076  012470  22DA               	addwfc	fsr2h,f,c
 20077  012472  50DF               	movf	indf2,w,c
 20078  012474  010F               	movlb	15	; () banked
 20079  012476  6F4A               	movwf	74,b	;volatile
 20080                           
 20081                           ; BSR set to: 15
 20082                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 20083  012478  EE20 F005          	lfsr	2,5
 20084  01247C  503F               	movf	i2CANsendMessage@data,w,c
 20085  01247E  26D9               	addwf	fsr2l,f,c
 20086  012480  5040               	movf	i2CANsendMessage@data+1,w,c
 20087  012482  22DA               	addwfc	fsr2h,f,c
 20088  012484  50DF               	movf	indf2,w,c
 20089  012486  010F               	movlb	15	; () banked
 20090  012488  6F4B               	movwf	75,b	;volatile
 20091                           
 20092                           ; BSR set to: 15
 20093                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 20094  01248A  EE20 F006          	lfsr	2,6
 20095  01248E  503F               	movf	i2CANsendMessage@data,w,c
 20096  012490  26D9               	addwf	fsr2l,f,c
 20097  012492  5040               	movf	i2CANsendMessage@data+1,w,c
 20098  012494  22DA               	addwfc	fsr2h,f,c
 20099  012496  50DF               	movf	indf2,w,c
 20100  012498  010F               	movlb	15	; () banked
 20101  01249A  6F4C               	movwf	76,b	;volatile
 20102                           
 20103                           ; BSR set to: 15
 20104                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 20105  01249C  EE20 F007          	lfsr	2,7
 20106  0124A0  503F               	movf	i2CANsendMessage@data,w,c
 20107  0124A2  26D9               	addwf	fsr2l,f,c
 20108  0124A4  5040               	movf	i2CANsendMessage@data+1,w,c
 20109  0124A6  22DA               	addwfc	fsr2h,f,c
 20110  0124A8  50DF               	movf	indf2,w,c
 20111  0124AA  010F               	movlb	15	; () banked
 20112  0124AC  6F4D               	movwf	77,b	;volatile
 20113                           
 20114                           ; BSR set to: 15
 20115                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 20116  0124AE  010F               	movlb	15	; () banked
 20117  0124B0  8740               	bsf	64,3,b	;volatile
 20118                           
 20119                           ; BSR set to: 15
 20120                           ;inc\CANlib.h: 368: return;
 20121  0124B2  0012               	return	
 20122  0124B4                     i2l383:
 20123                           
 20124                           ; BSR set to: 15
 20125                           ;inc\CANlib.h: 369: }
 20126                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 20127  0124B4  010F               	movlb	15	; () banked
 20128  0124B6  B730               	btfsc	48,3,b	;volatile
 20129  0124B8  D115               	goto	i2l398
 20130                           
 20131                           ; BSR set to: 15
 20132                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 20133  0124BA  C041  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 20134                           
 20135                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 20136  0124BE  AC42               	btfss	i2CANsendMessage@flags,6,c
 20137  0124C0  D003               	goto	i2l399
 20138                           
 20139                           ; BSR set to: 15
 20140                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 20141  0124C2  010F               	movlb	15	; () banked
 20142  0124C4  8D35               	bsf	53,6,b	;volatile
 20143  0124C6  D002               	goto	i2l400
 20144  0124C8                     i2l399:
 20145                           
 20146                           ; BSR set to: 15
 20147                           ;inc\CANlib.h: 378: else
 20148                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 20149  0124C8  010F               	movlb	15	; () banked
 20150  0124CA  9D35               	bcf	53,6,b	;volatile
 20151  0124CC                     i2l400:
 20152                           
 20153                           ; BSR set to: 15
 20154                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 20155  0124CC  A642               	btfss	i2CANsendMessage@flags,3,c
 20156  0124CE  D066               	goto	i2l401
 20157                           
 20158                           ; BSR set to: 15
 20159                           ;inc\CANlib.h: 382: {
 20160                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 20161  0124D0  503B               	movf	i2CANsendMessage@identifier,w,c
 20162  0124D2  6E47               	movwf	i2CANsendMessage@tamp,c
 20163  0124D4  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20164  0124D6  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20165  0124D8  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20166                           
 20167                           ; BSR set to: 15
 20168                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 20169  0124DA  C047  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 20170                           
 20171                           ; BSR set to: 15
 20172                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 20173  0124DE  0E00               	movlw	0
 20174  0124E0  143B               	andwf	i2CANsendMessage@identifier,w,c
 20175  0124E2  6E47               	movwf	i2CANsendMessage@tamp,c
 20176  0124E4  0EFF               	movlw	255
 20177  0124E6  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20178  0124E8  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20179  0124EA  0E00               	movlw	0
 20180  0124EC  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20181  0124EE  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20182  0124F0  0E00               	movlw	0
 20183  0124F2  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20184  0124F4  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20185                           
 20186                           ; BSR set to: 15
 20187                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 20188  0124F6  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20189  0124FA  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20190  0124FE  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20191  012502  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20192  012506  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20193  01250A  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20194  01250E  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20195  012512  6A46               	clrf	??i2_CANsendMessage+3,c
 20196  012514  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20197  012518  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20198  01251C  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20199  012520  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20200                           
 20201                           ; BSR set to: 15
 20202                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 20203  012524  C047  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 20204                           
 20205                           ; BSR set to: 15
 20206                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 20207  012528  0E00               	movlw	0
 20208  01252A  010F               	movlb	15	; () banked
 20209  01252C  6F32               	movwf	50,b	;volatile
 20210                           
 20211                           ; BSR set to: 15
 20212                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 20213  01252E  010F               	movlb	15	; () banked
 20214  012530  8732               	bsf	50,3,b	;volatile
 20215                           
 20216                           ; BSR set to: 15
 20217                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 20218  012532  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 20219  012534  D002               	goto	i2l402
 20220                           
 20221                           ; BSR set to: 15
 20222                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 20223  012536  010F               	movlb	15	; () banked
 20224  012538  8132               	bsf	50,0,b	;volatile
 20225  01253A                     i2l402:
 20226                           
 20227                           ; BSR set to: 15
 20228                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 20229  01253A  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 20230  01253C  D002               	goto	i2l403
 20231                           
 20232                           ; BSR set to: 15
 20233                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 20234  01253E  010F               	movlb	15	; () banked
 20235  012540  8332               	bsf	50,1,b	;volatile
 20236  012542                     i2l403:
 20237                           
 20238                           ; BSR set to: 15
 20239                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 20240  012542  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 20241  012544  D002               	goto	i2l404
 20242                           
 20243                           ; BSR set to: 15
 20244                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 20245  012546  010F               	movlb	15	; () banked
 20246  012548  8B32               	bsf	50,5,b	;volatile
 20247  01254A                     i2l404:
 20248                           
 20249                           ; BSR set to: 15
 20250                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 20251  01254A  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 20252  01254C  D002               	goto	i2l405
 20253                           
 20254                           ; BSR set to: 15
 20255                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 20256  01254E  010F               	movlb	15	; () banked
 20257  012550  8D32               	bsf	50,6,b	;volatile
 20258  012552                     i2l405:
 20259                           
 20260                           ; BSR set to: 15
 20261                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 20262  012552  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 20263  012554  D002               	goto	i2l9393
 20264                           
 20265                           ; BSR set to: 15
 20266                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 20267  012556  010F               	movlb	15	; () banked
 20268  012558  8F32               	bsf	50,7,b	;volatile
 20269  01255A                     i2l9393:
 20270                           
 20271                           ; BSR set to: 15
 20272                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 20273  01255A  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20274  01255E  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20275  012562  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20276  012566  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20277  01256A  0E16               	movlw	22
 20278  01256C  D005               	goto	i2u1253_40
 20279  01256E                     i2u1253_45:
 20280  01256E  90D8               	bcf	status,0,c
 20281  012570  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20282  012572  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20283  012574  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20284  012576  3243               	rrcf	??i2_CANsendMessage,f,c
 20285  012578                     i2u1253_40:
 20286  012578  2EE8               	decfsz	wreg,f,c
 20287  01257A  D7F9               	goto	i2u1253_45
 20288  01257C  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20289  012580  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20290  012584  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20291  012588  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20292                           
 20293                           ; BSR set to: 15
 20294                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20295  01258C  5047               	movf	i2CANsendMessage@tamp,w,c
 20296  01258E  6E47               	movwf	i2CANsendMessage@tamp,c
 20297  012590  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20298  012592  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20299  012594  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20300                           
 20301                           ; BSR set to: 15
 20302                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20303  012596  C047  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20304                           
 20305                           ;inc\CANlib.h: 407: }
 20306  01259A  D04D               	goto	i2l9413
 20307  01259C                     i2l401:
 20308                           
 20309                           ; BSR set to: 15
 20310                           ;inc\CANlib.h: 409: else
 20311                           ;inc\CANlib.h: 411: {
 20312                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20313  01259C  010F               	movlb	15	; () banked
 20314  01259E  9732               	bcf	50,3,b	;volatile
 20315                           
 20316                           ; BSR set to: 15
 20317                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20318  0125A0  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20319  0125A4  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20320  0125A8  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20321  0125AC  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20322  0125B0  0E04               	movlw	4
 20323  0125B2  D005               	goto	i2u1254_40
 20324  0125B4                     i2u1254_45:
 20325  0125B4  90D8               	bcf	status,0,c
 20326  0125B6  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20327  0125B8  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20328  0125BA  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20329  0125BC  3243               	rrcf	??i2_CANsendMessage,f,c
 20330  0125BE                     i2u1254_40:
 20331  0125BE  2EE8               	decfsz	wreg,f,c
 20332  0125C0  D7F9               	goto	i2u1254_45
 20333  0125C2  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20334  0125C6  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20335  0125CA  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20336  0125CE  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20337                           
 20338                           ; BSR set to: 15
 20339                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20340  0125D2  5047               	movf	i2CANsendMessage@tamp,w,c
 20341  0125D4  6E47               	movwf	i2CANsendMessage@tamp,c
 20342  0125D6  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20343  0125D8  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20344  0125DA  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20345                           
 20346                           ; BSR set to: 15
 20347                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20348  0125DC  C047  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20349                           
 20350                           ; BSR set to: 15
 20351                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20352  0125E0  0E07               	movlw	7
 20353  0125E2  143B               	andwf	i2CANsendMessage@identifier,w,c
 20354  0125E4  6E47               	movwf	i2CANsendMessage@tamp,c
 20355  0125E6  0E00               	movlw	0
 20356  0125E8  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20357  0125EA  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20358  0125EC  0E00               	movlw	0
 20359  0125EE  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20360  0125F0  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20361  0125F2  0E00               	movlw	0
 20362  0125F4  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20363  0125F6  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20364                           
 20365                           ; BSR set to: 15
 20366                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20367  0125F8  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20368  0125FC  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20369  012600  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20370  012604  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20371  012608  0E05               	movlw	5
 20372  01260A                     i2u1255_45:
 20373  01260A  90D8               	bcf	status,0,c
 20374  01260C  3643               	rlcf	??i2_CANsendMessage,f,c
 20375  01260E  3644               	rlcf	??i2_CANsendMessage+1,f,c
 20376  012610  3645               	rlcf	??i2_CANsendMessage+2,f,c
 20377  012612  3646               	rlcf	??i2_CANsendMessage+3,f,c
 20378  012614  2EE8               	decfsz	wreg,f,c
 20379  012616  D7F9               	goto	i2u1255_45
 20380  012618  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20381  01261C  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20382  012620  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20383  012624  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20384                           
 20385                           ; BSR set to: 15
 20386                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20387  012628  010F               	movlb	15	; () banked
 20388  01262A  5132               	movf	50,w,b	;volatile
 20389  01262C  0B1F               	andlw	31
 20390  01262E  010F               	movlb	15	; () banked
 20391  012630  6F32               	movwf	50,b	;volatile
 20392                           
 20393                           ; BSR set to: 15
 20394                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20395  012632  C047  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20396  012636                     i2l9413:
 20397                           
 20398                           ; BSR set to: 15
 20399                           ;inc\CANlib.h: 422: }
 20400                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20401  012636  A042               	btfss	i2CANsendMessage@flags,0,c
 20402  012638  D003               	goto	i2l408
 20403                           
 20404                           ; BSR set to: 15
 20405                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20406  01263A  010F               	movlb	15	; () banked
 20407  01263C  8130               	bsf	48,0,b	;volatile
 20408  01263E  D002               	goto	i2l409
 20409  012640                     i2l408:
 20410                           
 20411                           ; BSR set to: 15
 20412                           ;inc\CANlib.h: 426: else
 20413                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20414  012640  010F               	movlb	15	; () banked
 20415  012642  9130               	bcf	48,0,b	;volatile
 20416  012644                     i2l409:
 20417                           
 20418                           ; BSR set to: 15
 20419                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20420  012644  A242               	btfss	i2CANsendMessage@flags,1,c
 20421  012646  D003               	goto	i2l410
 20422                           
 20423                           ; BSR set to: 15
 20424                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20425  012648  010F               	movlb	15	; () banked
 20426  01264A  8330               	bsf	48,1,b	;volatile
 20427  01264C  D002               	goto	i2l9419
 20428  01264E                     i2l410:
 20429                           
 20430                           ; BSR set to: 15
 20431                           ;inc\CANlib.h: 430: else
 20432                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20433  01264E  010F               	movlb	15	; () banked
 20434  012650  9330               	bcf	48,1,b	;volatile
 20435  012652                     i2l9419:
 20436                           
 20437                           ; BSR set to: 15
 20438                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20439  012652  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20440  012656  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20441  01265A  50DF               	movf	indf2,w,c
 20442  01265C  010F               	movlb	15	; () banked
 20443  01265E  6F36               	movwf	54,b	;volatile
 20444                           
 20445                           ; BSR set to: 15
 20446                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20447  012660  EE20 F001          	lfsr	2,1
 20448  012664  503F               	movf	i2CANsendMessage@data,w,c
 20449  012666  26D9               	addwf	fsr2l,f,c
 20450  012668  5040               	movf	i2CANsendMessage@data+1,w,c
 20451  01266A  22DA               	addwfc	fsr2h,f,c
 20452  01266C  50DF               	movf	indf2,w,c
 20453  01266E  010F               	movlb	15	; () banked
 20454  012670  6F37               	movwf	55,b	;volatile
 20455                           
 20456                           ; BSR set to: 15
 20457                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20458  012672  EE20 F002          	lfsr	2,2
 20459  012676  503F               	movf	i2CANsendMessage@data,w,c
 20460  012678  26D9               	addwf	fsr2l,f,c
 20461  01267A  5040               	movf	i2CANsendMessage@data+1,w,c
 20462  01267C  22DA               	addwfc	fsr2h,f,c
 20463  01267E  50DF               	movf	indf2,w,c
 20464  012680  010F               	movlb	15	; () banked
 20465  012682  6F38               	movwf	56,b	;volatile
 20466                           
 20467                           ; BSR set to: 15
 20468                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20469  012684  EE20 F003          	lfsr	2,3
 20470  012688  503F               	movf	i2CANsendMessage@data,w,c
 20471  01268A  26D9               	addwf	fsr2l,f,c
 20472  01268C  5040               	movf	i2CANsendMessage@data+1,w,c
 20473  01268E  22DA               	addwfc	fsr2h,f,c
 20474  012690  50DF               	movf	indf2,w,c
 20475  012692  010F               	movlb	15	; () banked
 20476  012694  6F39               	movwf	57,b	;volatile
 20477                           
 20478                           ; BSR set to: 15
 20479                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20480  012696  EE20 F004          	lfsr	2,4
 20481  01269A  503F               	movf	i2CANsendMessage@data,w,c
 20482  01269C  26D9               	addwf	fsr2l,f,c
 20483  01269E  5040               	movf	i2CANsendMessage@data+1,w,c
 20484  0126A0  22DA               	addwfc	fsr2h,f,c
 20485  0126A2  50DF               	movf	indf2,w,c
 20486  0126A4  010F               	movlb	15	; () banked
 20487  0126A6  6F3A               	movwf	58,b	;volatile
 20488                           
 20489                           ; BSR set to: 15
 20490                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20491  0126A8  EE20 F005          	lfsr	2,5
 20492  0126AC  503F               	movf	i2CANsendMessage@data,w,c
 20493  0126AE  26D9               	addwf	fsr2l,f,c
 20494  0126B0  5040               	movf	i2CANsendMessage@data+1,w,c
 20495  0126B2  22DA               	addwfc	fsr2h,f,c
 20496  0126B4  50DF               	movf	indf2,w,c
 20497  0126B6  010F               	movlb	15	; () banked
 20498  0126B8  6F3B               	movwf	59,b	;volatile
 20499                           
 20500                           ; BSR set to: 15
 20501                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20502  0126BA  EE20 F006          	lfsr	2,6
 20503  0126BE  503F               	movf	i2CANsendMessage@data,w,c
 20504  0126C0  26D9               	addwf	fsr2l,f,c
 20505  0126C2  5040               	movf	i2CANsendMessage@data+1,w,c
 20506  0126C4  22DA               	addwfc	fsr2h,f,c
 20507  0126C6  50DF               	movf	indf2,w,c
 20508  0126C8  010F               	movlb	15	; () banked
 20509  0126CA  6F3C               	movwf	60,b	;volatile
 20510                           
 20511                           ; BSR set to: 15
 20512                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20513  0126CC  EE20 F007          	lfsr	2,7
 20514  0126D0  503F               	movf	i2CANsendMessage@data,w,c
 20515  0126D2  26D9               	addwf	fsr2l,f,c
 20516  0126D4  5040               	movf	i2CANsendMessage@data+1,w,c
 20517  0126D6  22DA               	addwfc	fsr2h,f,c
 20518  0126D8  50DF               	movf	indf2,w,c
 20519  0126DA  010F               	movlb	15	; () banked
 20520  0126DC  6F3D               	movwf	61,b	;volatile
 20521                           
 20522                           ; BSR set to: 15
 20523                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20524  0126DE  010F               	movlb	15	; () banked
 20525  0126E0  8730               	bsf	48,3,b	;volatile
 20526                           
 20527                           ; BSR set to: 15
 20528                           ;inc\CANlib.h: 444: return;
 20529  0126E2  0012               	return	
 20530  0126E4                     i2l398:
 20531                           
 20532                           ; BSR set to: 15
 20533                           ;inc\CANlib.h: 445: }
 20534                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20535  0126E4  010F               	movlb	15	; () banked
 20536  0126E6  B720               	btfsc	32,3,b	;volatile
 20537  0126E8  0012               	return	
 20538                           
 20539                           ; BSR set to: 15
 20540                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20541  0126EA  C041  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20542                           
 20543                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20544  0126EE  AC42               	btfss	i2CANsendMessage@flags,6,c
 20545  0126F0  D003               	goto	i2l413
 20546                           
 20547                           ; BSR set to: 15
 20548                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20549  0126F2  010F               	movlb	15	; () banked
 20550  0126F4  8D25               	bsf	37,6,b	;volatile
 20551  0126F6  D002               	goto	i2l414
 20552  0126F8                     i2l413:
 20553                           
 20554                           ; BSR set to: 15
 20555                           ;inc\CANlib.h: 454: else
 20556                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20557  0126F8  010F               	movlb	15	; () banked
 20558  0126FA  9D25               	bcf	37,6,b	;volatile
 20559  0126FC                     i2l414:
 20560                           
 20561                           ; BSR set to: 15
 20562                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20563  0126FC  A642               	btfss	i2CANsendMessage@flags,3,c
 20564  0126FE  D066               	goto	i2l415
 20565                           
 20566                           ; BSR set to: 15
 20567                           ;inc\CANlib.h: 458: {
 20568                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20569  012700  503B               	movf	i2CANsendMessage@identifier,w,c
 20570  012702  6E47               	movwf	i2CANsendMessage@tamp,c
 20571  012704  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20572  012706  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20573  012708  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20574                           
 20575                           ; BSR set to: 15
 20576                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20577  01270A  C047  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20578                           
 20579                           ; BSR set to: 15
 20580                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20581  01270E  0E00               	movlw	0
 20582  012710  143B               	andwf	i2CANsendMessage@identifier,w,c
 20583  012712  6E47               	movwf	i2CANsendMessage@tamp,c
 20584  012714  0EFF               	movlw	255
 20585  012716  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20586  012718  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20587  01271A  0E00               	movlw	0
 20588  01271C  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20589  01271E  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20590  012720  0E00               	movlw	0
 20591  012722  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20592  012724  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20593                           
 20594                           ; BSR set to: 15
 20595                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20596  012726  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20597  01272A  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20598  01272E  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20599  012732  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20600  012736  C044  F043         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20601  01273A  C045  F044         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20602  01273E  C046  F045         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20603  012742  6A46               	clrf	??i2_CANsendMessage+3,c
 20604  012744  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20605  012748  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20606  01274C  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20607  012750  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20608                           
 20609                           ; BSR set to: 15
 20610                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20611  012754  C047  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20612                           
 20613                           ; BSR set to: 15
 20614                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20615  012758  0E00               	movlw	0
 20616  01275A  010F               	movlb	15	; () banked
 20617  01275C  6F22               	movwf	34,b	;volatile
 20618                           
 20619                           ; BSR set to: 15
 20620                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20621  01275E  010F               	movlb	15	; () banked
 20622  012760  8722               	bsf	34,3,b	;volatile
 20623                           
 20624                           ; BSR set to: 15
 20625                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20626  012762  A03D               	btfss	i2CANsendMessage@identifier+2,0,c
 20627  012764  D002               	goto	i2l416
 20628                           
 20629                           ; BSR set to: 15
 20630                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20631  012766  010F               	movlb	15	; () banked
 20632  012768  8122               	bsf	34,0,b	;volatile
 20633  01276A                     i2l416:
 20634                           
 20635                           ; BSR set to: 15
 20636                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20637  01276A  A23D               	btfss	i2CANsendMessage@identifier+2,1,c
 20638  01276C  D002               	goto	i2l417
 20639                           
 20640                           ; BSR set to: 15
 20641                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20642  01276E  010F               	movlb	15	; () banked
 20643  012770  8322               	bsf	34,1,b	;volatile
 20644  012772                     i2l417:
 20645                           
 20646                           ; BSR set to: 15
 20647                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20648  012772  A43D               	btfss	i2CANsendMessage@identifier+2,2,c
 20649  012774  D002               	goto	i2l418
 20650                           
 20651                           ; BSR set to: 15
 20652                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20653  012776  010F               	movlb	15	; () banked
 20654  012778  8B22               	bsf	34,5,b	;volatile
 20655  01277A                     i2l418:
 20656                           
 20657                           ; BSR set to: 15
 20658                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20659  01277A  A63D               	btfss	i2CANsendMessage@identifier+2,3,c
 20660  01277C  D002               	goto	i2l419
 20661                           
 20662                           ; BSR set to: 15
 20663                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20664  01277E  010F               	movlb	15	; () banked
 20665  012780  8D22               	bsf	34,6,b	;volatile
 20666  012782                     i2l419:
 20667                           
 20668                           ; BSR set to: 15
 20669                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20670  012782  A83D               	btfss	i2CANsendMessage@identifier+2,4,c
 20671  012784  D002               	goto	i2l9469
 20672                           
 20673                           ; BSR set to: 15
 20674                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20675  012786  010F               	movlb	15	; () banked
 20676  012788  8F22               	bsf	34,7,b	;volatile
 20677  01278A                     i2l9469:
 20678                           
 20679                           ; BSR set to: 15
 20680                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20681  01278A  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20682  01278E  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20683  012792  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20684  012796  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20685  01279A  0E16               	movlw	22
 20686  01279C  D005               	goto	i2u1266_40
 20687  01279E                     i2u1266_45:
 20688  01279E  90D8               	bcf	status,0,c
 20689  0127A0  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20690  0127A2  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20691  0127A4  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20692  0127A6  3243               	rrcf	??i2_CANsendMessage,f,c
 20693  0127A8                     i2u1266_40:
 20694  0127A8  2EE8               	decfsz	wreg,f,c
 20695  0127AA  D7F9               	goto	i2u1266_45
 20696  0127AC  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20697  0127B0  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20698  0127B4  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20699  0127B8  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20700                           
 20701                           ; BSR set to: 15
 20702                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20703  0127BC  5047               	movf	i2CANsendMessage@tamp,w,c
 20704  0127BE  6E47               	movwf	i2CANsendMessage@tamp,c
 20705  0127C0  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20706  0127C2  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20707  0127C4  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20708                           
 20709                           ; BSR set to: 15
 20710                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20711  0127C6  C047  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20712                           
 20713                           ;inc\CANlib.h: 483: }
 20714  0127CA  D04D               	goto	i2l9489
 20715  0127CC                     i2l415:
 20716                           
 20717                           ; BSR set to: 15
 20718                           ;inc\CANlib.h: 485: else
 20719                           ;inc\CANlib.h: 487: {
 20720                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20721  0127CC  010F               	movlb	15	; () banked
 20722  0127CE  9722               	bcf	34,3,b	;volatile
 20723                           
 20724                           ; BSR set to: 15
 20725                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20726  0127D0  C03B  F043         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20727  0127D4  C03C  F044         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20728  0127D8  C03D  F045         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20729  0127DC  C03E  F046         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20730  0127E0  0E04               	movlw	4
 20731  0127E2  D005               	goto	i2u1267_40
 20732  0127E4                     i2u1267_45:
 20733  0127E4  90D8               	bcf	status,0,c
 20734  0127E6  3246               	rrcf	??i2_CANsendMessage+3,f,c
 20735  0127E8  3245               	rrcf	??i2_CANsendMessage+2,f,c
 20736  0127EA  3244               	rrcf	??i2_CANsendMessage+1,f,c
 20737  0127EC  3243               	rrcf	??i2_CANsendMessage,f,c
 20738  0127EE                     i2u1267_40:
 20739  0127EE  2EE8               	decfsz	wreg,f,c
 20740  0127F0  D7F9               	goto	i2u1267_45
 20741  0127F2  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20742  0127F6  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20743  0127FA  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20744  0127FE  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20745                           
 20746                           ; BSR set to: 15
 20747                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20748  012802  5047               	movf	i2CANsendMessage@tamp,w,c
 20749  012804  6E47               	movwf	i2CANsendMessage@tamp,c
 20750  012806  6A48               	clrf	i2CANsendMessage@tamp+1,c
 20751  012808  6A49               	clrf	i2CANsendMessage@tamp+2,c
 20752  01280A  6A4A               	clrf	i2CANsendMessage@tamp+3,c
 20753                           
 20754                           ; BSR set to: 15
 20755                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20756  01280C  C047  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20757                           
 20758                           ; BSR set to: 15
 20759                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20760  012810  0E07               	movlw	7
 20761  012812  143B               	andwf	i2CANsendMessage@identifier,w,c
 20762  012814  6E47               	movwf	i2CANsendMessage@tamp,c
 20763  012816  0E00               	movlw	0
 20764  012818  143C               	andwf	i2CANsendMessage@identifier+1,w,c
 20765  01281A  6E48               	movwf	i2CANsendMessage@tamp+1,c
 20766  01281C  0E00               	movlw	0
 20767  01281E  143D               	andwf	i2CANsendMessage@identifier+2,w,c
 20768  012820  6E49               	movwf	i2CANsendMessage@tamp+2,c
 20769  012822  0E00               	movlw	0
 20770  012824  143E               	andwf	i2CANsendMessage@identifier+3,w,c
 20771  012826  6E4A               	movwf	i2CANsendMessage@tamp+3,c
 20772                           
 20773                           ; BSR set to: 15
 20774                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20775  012828  C047  F043         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20776  01282C  C048  F044         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20777  012830  C049  F045         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20778  012834  C04A  F046         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20779  012838  0E05               	movlw	5
 20780  01283A                     i2u1268_45:
 20781  01283A  90D8               	bcf	status,0,c
 20782  01283C  3643               	rlcf	??i2_CANsendMessage,f,c
 20783  01283E  3644               	rlcf	??i2_CANsendMessage+1,f,c
 20784  012840  3645               	rlcf	??i2_CANsendMessage+2,f,c
 20785  012842  3646               	rlcf	??i2_CANsendMessage+3,f,c
 20786  012844  2EE8               	decfsz	wreg,f,c
 20787  012846  D7F9               	goto	i2u1268_45
 20788  012848  C043  F047         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20789  01284C  C044  F048         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20790  012850  C045  F049         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20791  012854  C046  F04A         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20792                           
 20793                           ; BSR set to: 15
 20794                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20795  012858  010F               	movlb	15	; () banked
 20796  01285A  5122               	movf	34,w,b	;volatile
 20797  01285C  0B1F               	andlw	31
 20798  01285E  010F               	movlb	15	; () banked
 20799  012860  6F22               	movwf	34,b	;volatile
 20800                           
 20801                           ; BSR set to: 15
 20802                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20803  012862  C047  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20804  012866                     i2l9489:
 20805                           
 20806                           ; BSR set to: 15
 20807                           ;inc\CANlib.h: 498: }
 20808                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20809  012866  A042               	btfss	i2CANsendMessage@flags,0,c
 20810  012868  D003               	goto	i2l422
 20811                           
 20812                           ; BSR set to: 15
 20813                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20814  01286A  010F               	movlb	15	; () banked
 20815  01286C  8120               	bsf	32,0,b	;volatile
 20816  01286E  D002               	goto	i2l423
 20817  012870                     i2l422:
 20818                           
 20819                           ; BSR set to: 15
 20820                           ;inc\CANlib.h: 502: else
 20821                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20822  012870  010F               	movlb	15	; () banked
 20823  012872  9120               	bcf	32,0,b	;volatile
 20824  012874                     i2l423:
 20825                           
 20826                           ; BSR set to: 15
 20827                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20828  012874  A242               	btfss	i2CANsendMessage@flags,1,c
 20829  012876  D003               	goto	i2l424
 20830                           
 20831                           ; BSR set to: 15
 20832                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20833  012878  010F               	movlb	15	; () banked
 20834  01287A  8320               	bsf	32,1,b	;volatile
 20835  01287C  D002               	goto	i2l9495
 20836  01287E                     i2l424:
 20837                           
 20838                           ; BSR set to: 15
 20839                           ;inc\CANlib.h: 506: else
 20840                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20841  01287E  010F               	movlb	15	; () banked
 20842  012880  9320               	bcf	32,1,b	;volatile
 20843  012882                     i2l9495:
 20844                           
 20845                           ; BSR set to: 15
 20846                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20847  012882  C03F  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20848  012886  C040  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20849  01288A  50DF               	movf	indf2,w,c
 20850  01288C  010F               	movlb	15	; () banked
 20851  01288E  6F26               	movwf	38,b	;volatile
 20852                           
 20853                           ; BSR set to: 15
 20854                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20855  012890  EE20 F001          	lfsr	2,1
 20856  012894  503F               	movf	i2CANsendMessage@data,w,c
 20857  012896  26D9               	addwf	fsr2l,f,c
 20858  012898  5040               	movf	i2CANsendMessage@data+1,w,c
 20859  01289A  22DA               	addwfc	fsr2h,f,c
 20860  01289C  50DF               	movf	indf2,w,c
 20861  01289E  010F               	movlb	15	; () banked
 20862  0128A0  6F27               	movwf	39,b	;volatile
 20863                           
 20864                           ; BSR set to: 15
 20865                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20866  0128A2  EE20 F002          	lfsr	2,2
 20867  0128A6  503F               	movf	i2CANsendMessage@data,w,c
 20868  0128A8  26D9               	addwf	fsr2l,f,c
 20869  0128AA  5040               	movf	i2CANsendMessage@data+1,w,c
 20870  0128AC  22DA               	addwfc	fsr2h,f,c
 20871  0128AE  50DF               	movf	indf2,w,c
 20872  0128B0  010F               	movlb	15	; () banked
 20873  0128B2  6F28               	movwf	40,b	;volatile
 20874                           
 20875                           ; BSR set to: 15
 20876                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20877  0128B4  EE20 F003          	lfsr	2,3
 20878  0128B8  503F               	movf	i2CANsendMessage@data,w,c
 20879  0128BA  26D9               	addwf	fsr2l,f,c
 20880  0128BC  5040               	movf	i2CANsendMessage@data+1,w,c
 20881  0128BE  22DA               	addwfc	fsr2h,f,c
 20882  0128C0  50DF               	movf	indf2,w,c
 20883  0128C2  010F               	movlb	15	; () banked
 20884  0128C4  6F29               	movwf	41,b	;volatile
 20885                           
 20886                           ; BSR set to: 15
 20887                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20888  0128C6  EE20 F004          	lfsr	2,4
 20889  0128CA  503F               	movf	i2CANsendMessage@data,w,c
 20890  0128CC  26D9               	addwf	fsr2l,f,c
 20891  0128CE  5040               	movf	i2CANsendMessage@data+1,w,c
 20892  0128D0  22DA               	addwfc	fsr2h,f,c
 20893  0128D2  50DF               	movf	indf2,w,c
 20894  0128D4  010F               	movlb	15	; () banked
 20895  0128D6  6F2A               	movwf	42,b	;volatile
 20896                           
 20897                           ; BSR set to: 15
 20898                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20899  0128D8  EE20 F005          	lfsr	2,5
 20900  0128DC  503F               	movf	i2CANsendMessage@data,w,c
 20901  0128DE  26D9               	addwf	fsr2l,f,c
 20902  0128E0  5040               	movf	i2CANsendMessage@data+1,w,c
 20903  0128E2  22DA               	addwfc	fsr2h,f,c
 20904  0128E4  50DF               	movf	indf2,w,c
 20905  0128E6  010F               	movlb	15	; () banked
 20906  0128E8  6F2B               	movwf	43,b	;volatile
 20907                           
 20908                           ; BSR set to: 15
 20909                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20910  0128EA  EE20 F006          	lfsr	2,6
 20911  0128EE  503F               	movf	i2CANsendMessage@data,w,c
 20912  0128F0  26D9               	addwf	fsr2l,f,c
 20913  0128F2  5040               	movf	i2CANsendMessage@data+1,w,c
 20914  0128F4  22DA               	addwfc	fsr2h,f,c
 20915  0128F6  50DF               	movf	indf2,w,c
 20916  0128F8  010F               	movlb	15	; () banked
 20917  0128FA  6F2C               	movwf	44,b	;volatile
 20918                           
 20919                           ; BSR set to: 15
 20920                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20921  0128FC  EE20 F007          	lfsr	2,7
 20922  012900  503F               	movf	i2CANsendMessage@data,w,c
 20923  012902  26D9               	addwf	fsr2l,f,c
 20924  012904  5040               	movf	i2CANsendMessage@data+1,w,c
 20925  012906  22DA               	addwfc	fsr2h,f,c
 20926  012908  50DF               	movf	indf2,w,c
 20927  01290A  010F               	movlb	15	; () banked
 20928  01290C  6F2D               	movwf	45,b	;volatile
 20929                           
 20930                           ; BSR set to: 15
 20931                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20932  01290E  010F               	movlb	15	; () banked
 20933  012910  8720               	bsf	32,3,b	;volatile
 20934                           
 20935                           ; BSR set to: 15
 20936                           ;inc\CANlib.h: 520: return;
 20937  012912  0012               	return	
 20938  012914                     __end_ofi2_CANsendMessage:
 20939                           	opt stack 0
 20940                           pclatu	equ	0xFFB
 20941                           pclath	equ	0xFFA
 20942                           tblptru	equ	0xFF8
 20943                           tblptrh	equ	0xFF7
 20944                           tblptrl	equ	0xFF6
 20945                           tablat	equ	0xFF5
 20946                           prodh	equ	0xFF4
 20947                           prodl	equ	0xFF3
 20948                           intcon	equ	0xFF2
 20949                           postinc0	equ	0xFEE
 20950                           fsr0h	equ	0xFEA
 20951                           fsr0l	equ	0xFE9
 20952                           wreg	equ	0xFE8
 20953                           indf1	equ	0xFE7
 20954                           plusw1	equ	0xFE3
 20955                           fsr1h	equ	0xFE2
 20956                           fsr1l	equ	0xFE1
 20957                           bsr	equ	0xFE0
 20958                           indf2	equ	0xFDF
 20959                           postinc2	equ	0xFDE
 20960                           plusw2	equ	0xFDB
 20961                           fsr2h	equ	0xFDA
 20962                           fsr2l	equ	0xFD9
 20963                           status	equ	0xFD8
 20964                           
 20965 ;; *************** function i2_CANisTxReady *****************
 20966 ;; Defined at:
 20967 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;		None
 20970 ;; Auto vars:     Size  Location     Type
 20971 ;;		None
 20972 ;; Return value:  Size  Location     Type
 20973 ;;                  1    wreg      unsigned char 
 20974 ;; Registers used:
 20975 ;;		wreg, status,2
 20976 ;; Tracked objects:
 20977 ;;		On entry : 0/0
 20978 ;;		On exit  : 0/0
 20979 ;;		Unchanged: 0/0
 20980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20985 ;;Total ram usage:        1 bytes
 20986 ;; Hardware stack levels used:    1
 20987 ;; This function calls:
 20988 ;;		Nothing
 20989 ;; This function is called by:
 20990 ;;		_ISR_alta
 20991 ;; This function uses a non-reentrant model
 20992 ;;
 20993                           
 20994                           	psect	text59
 20995  0163FC                     __ptext59:
 20996                           	opt stack 0
 20997  0163FC                     i2_CANisTxReady:
 20998                           	opt stack 20
 20999                           
 21000                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 21001                           
 21002                           ; BSR set to: 15
 21003                           ;incstack = 0
 21004  0163FC  0E01               	movlw	1
 21005  0163FE  6E3B               	movwf	i2_CANisTxReady$3251,c
 21006  016400  010F               	movlb	15	; () banked
 21007  016402  A740               	btfss	64,3,b	;volatile
 21008  016404  D008               	goto	i2l576
 21009                           
 21010                           ; BSR set to: 15
 21011  016406  010F               	movlb	15	; () banked
 21012  016408  A730               	btfss	48,3,b	;volatile
 21013  01640A  D005               	goto	i2l576
 21014                           
 21015                           ; BSR set to: 15
 21016  01640C  010F               	movlb	15	; () banked
 21017  01640E  A720               	btfss	32,3,b	;volatile
 21018  016410  D002               	goto	i2l576
 21019                           
 21020                           ; BSR set to: 15
 21021  016412  0E00               	movlw	0
 21022  016414  6E3B               	movwf	i2_CANisTxReady$3251,c
 21023  016416                     i2l576:
 21024                           
 21025                           ; BSR set to: 15
 21026  016416  503B               	movf	i2_CANisTxReady$3251,w,c
 21027  016418  0012               	return	
 21028  01641A                     __end_ofi2_CANisTxReady:
 21029                           	opt stack 0
 21030                           pclatu	equ	0xFFB
 21031                           pclath	equ	0xFFA
 21032                           tblptru	equ	0xFF8
 21033                           tblptrh	equ	0xFF7
 21034                           tblptrl	equ	0xFF6
 21035                           tablat	equ	0xFF5
 21036                           prodh	equ	0xFF4
 21037                           prodl	equ	0xFF3
 21038                           intcon	equ	0xFF2
 21039                           postinc0	equ	0xFEE
 21040                           fsr0h	equ	0xFEA
 21041                           fsr0l	equ	0xFE9
 21042                           wreg	equ	0xFE8
 21043                           indf1	equ	0xFE7
 21044                           plusw1	equ	0xFE3
 21045                           fsr1h	equ	0xFE2
 21046                           fsr1l	equ	0xFE1
 21047                           bsr	equ	0xFE0
 21048                           indf2	equ	0xFDF
 21049                           postinc2	equ	0xFDE
 21050                           plusw2	equ	0xFDB
 21051                           fsr2h	equ	0xFDA
 21052                           fsr2l	equ	0xFD9
 21053                           status	equ	0xFD8
 21054                           
 21055 ;; *************** function _CANreceiveMessage *****************
 21056 ;; Defined at:
 21057 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;  msg             2   17[COMRAM] PTR struct .
 21060 ;;		 -> msg(15), 
 21061 ;; Auto vars:     Size  Location     Type
 21062 ;;  tamp            1   28[COMRAM] unsigned char 
 21063 ;;  error           1   27[COMRAM] unsigned char 
 21064 ;; Return value:  Size  Location     Type
 21065 ;;                  1    wreg      unsigned char 
 21066 ;; Registers used:
 21067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21068 ;; Tracked objects:
 21069 ;;		On entry : 0/0
 21070 ;;		On exit  : 0/0
 21071 ;;		Unchanged: 0/0
 21072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21075 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21076 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21077 ;;Total ram usage:       12 bytes
 21078 ;; Hardware stack levels used:    1
 21079 ;; This function calls:
 21080 ;;		Nothing
 21081 ;; This function is called by:
 21082 ;;		_ISR_alta
 21083 ;; This function uses a non-reentrant model
 21084 ;;
 21085                           
 21086                           	psect	text60
 21087  012E2E                     __ptext60:
 21088                           	opt stack 0
 21089  012E2E                     _CANreceiveMessage:
 21090                           	opt stack 20
 21091                           
 21092                           ;inc\CANlib.h: 530: BYTE tamp;
 21093                           ;inc\CANlib.h: 531: BYTE error = 0;
 21094                           
 21095                           ; BSR set to: 15
 21096                           ;incstack = 0
 21097  012E2E  0E00               	movlw	0
 21098  012E30  6E45               	movwf	CANreceiveMessage@error,c
 21099                           
 21100                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 21101  012E32  BE74               	btfsc	3956,7,c	;volatile
 21102                           
 21103                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 21104  012E34  8045               	bsf	CANreceiveMessage@error,0,c
 21105                           
 21106                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 21107  012E36  BC74               	btfsc	3956,6,c	;volatile
 21108                           
 21109                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 21110  012E38  8245               	bsf	CANreceiveMessage@error,1,c
 21111                           
 21112                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 21113  012E3A  010F               	movlb	15	; () banked
 21114  012E3C  AF50               	btfss	80,7,b	;volatile
 21115  012E3E  D143               	goto	i2l430
 21116                           
 21117                           ; BSR set to: 15
 21118                           ;inc\CANlib.h: 541: {
 21119                           ;inc\CANlib.h: 542: msg->identifier = 0;
 21120  012E40  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21121  012E44  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21122  012E48  6ADE               	clrf	postinc2,c
 21123  012E4A  6ADE               	clrf	postinc2,c
 21124  012E4C  6ADE               	clrf	postinc2,c
 21125  012E4E  6ADD               	clrf	postdec2,c
 21126                           
 21127                           ; BSR set to: 15
 21128                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 21129  012E50  EE20 F004          	lfsr	2,4
 21130  012E54  503B               	movf	CANreceiveMessage@msg,w,c
 21131  012E56  26D9               	addwf	fsr2l,f,c
 21132  012E58  503C               	movf	CANreceiveMessage@msg+1,w,c
 21133  012E5A  22DA               	addwfc	fsr2h,f,c
 21134  012E5C  CF56 FFDF          	movff	3926,indf2	;volatile
 21135                           
 21136                           ; BSR set to: 15
 21137                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 21138  012E60  EE20 F005          	lfsr	2,5
 21139  012E64  503B               	movf	CANreceiveMessage@msg,w,c
 21140  012E66  26D9               	addwf	fsr2l,f,c
 21141  012E68  503C               	movf	CANreceiveMessage@msg+1,w,c
 21142  012E6A  22DA               	addwfc	fsr2h,f,c
 21143  012E6C  CF57 FFDF          	movff	3927,indf2	;volatile
 21144                           
 21145                           ; BSR set to: 15
 21146                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 21147  012E70  EE20 F006          	lfsr	2,6
 21148  012E74  503B               	movf	CANreceiveMessage@msg,w,c
 21149  012E76  26D9               	addwf	fsr2l,f,c
 21150  012E78  503C               	movf	CANreceiveMessage@msg+1,w,c
 21151  012E7A  22DA               	addwfc	fsr2h,f,c
 21152  012E7C  CF58 FFDF          	movff	3928,indf2	;volatile
 21153                           
 21154                           ; BSR set to: 15
 21155                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 21156  012E80  EE20 F007          	lfsr	2,7
 21157  012E84  503B               	movf	CANreceiveMessage@msg,w,c
 21158  012E86  26D9               	addwf	fsr2l,f,c
 21159  012E88  503C               	movf	CANreceiveMessage@msg+1,w,c
 21160  012E8A  22DA               	addwfc	fsr2h,f,c
 21161  012E8C  CF59 FFDF          	movff	3929,indf2	;volatile
 21162                           
 21163                           ; BSR set to: 15
 21164                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 21165  012E90  EE20 F008          	lfsr	2,8
 21166  012E94  503B               	movf	CANreceiveMessage@msg,w,c
 21167  012E96  26D9               	addwf	fsr2l,f,c
 21168  012E98  503C               	movf	CANreceiveMessage@msg+1,w,c
 21169  012E9A  22DA               	addwfc	fsr2h,f,c
 21170  012E9C  CF5A FFDF          	movff	3930,indf2	;volatile
 21171                           
 21172                           ; BSR set to: 15
 21173                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 21174  012EA0  EE20 F009          	lfsr	2,9
 21175  012EA4  503B               	movf	CANreceiveMessage@msg,w,c
 21176  012EA6  26D9               	addwf	fsr2l,f,c
 21177  012EA8  503C               	movf	CANreceiveMessage@msg+1,w,c
 21178  012EAA  22DA               	addwfc	fsr2h,f,c
 21179  012EAC  CF5B FFDF          	movff	3931,indf2	;volatile
 21180                           
 21181                           ; BSR set to: 15
 21182                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 21183  012EB0  EE20 F00A          	lfsr	2,10
 21184  012EB4  503B               	movf	CANreceiveMessage@msg,w,c
 21185  012EB6  26D9               	addwf	fsr2l,f,c
 21186  012EB8  503C               	movf	CANreceiveMessage@msg+1,w,c
 21187  012EBA  22DA               	addwfc	fsr2h,f,c
 21188  012EBC  CF5C FFDF          	movff	3932,indf2	;volatile
 21189                           
 21190                           ; BSR set to: 15
 21191                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 21192  012EC0  EE20 F00B          	lfsr	2,11
 21193  012EC4  503B               	movf	CANreceiveMessage@msg,w,c
 21194  012EC6  26D9               	addwf	fsr2l,f,c
 21195  012EC8  503C               	movf	CANreceiveMessage@msg+1,w,c
 21196  012ECA  22DA               	addwfc	fsr2h,f,c
 21197  012ECC  CF5D FFDF          	movff	3933,indf2	;volatile
 21198                           
 21199                           ; BSR set to: 15
 21200                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 21201  012ED0  EE20 F00E          	lfsr	2,14
 21202  012ED4  503B               	movf	CANreceiveMessage@msg,w,c
 21203  012ED6  26D9               	addwf	fsr2l,f,c
 21204  012ED8  503C               	movf	CANreceiveMessage@msg+1,w,c
 21205  012EDA  22DA               	addwfc	fsr2h,f,c
 21206  012EDC  010F               	movlb	15	; () banked
 21207  012EDE  AD55               	btfss	85,6,b	;volatile
 21208  012EE0  D002               	goto	i2u1204_40
 21209  012EE2  0E01               	movlw	1
 21210  012EE4  D001               	goto	i2u1204_46
 21211  012EE6                     i2u1204_40:
 21212  012EE6  0E00               	movlw	0
 21213  012EE8                     i2u1204_46:
 21214  012EE8  6EDF               	movwf	indf2,c
 21215                           
 21216                           ; BSR set to: 15
 21217                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 21218  012EEA  EE20 F00D          	lfsr	2,13
 21219  012EEE  503B               	movf	CANreceiveMessage@msg,w,c
 21220  012EF0  26D9               	addwf	fsr2l,f,c
 21221  012EF2  503C               	movf	CANreceiveMessage@msg+1,w,c
 21222  012EF4  22DA               	addwfc	fsr2h,f,c
 21223  012EF6  010F               	movlb	15	; () banked
 21224  012EF8  5155               	movf	85,w,b	;volatile
 21225  012EFA  0B0F               	andlw	15
 21226  012EFC  6EDF               	movwf	indf2,c
 21227                           
 21228                           ; BSR set to: 15
 21229                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 21230  012EFE  EE20 F00C          	lfsr	2,12
 21231  012F02  503B               	movf	CANreceiveMessage@msg,w,c
 21232  012F04  26D9               	addwf	fsr2l,f,c
 21233  012F06  503C               	movf	CANreceiveMessage@msg+1,w,c
 21234  012F08  22DA               	addwfc	fsr2h,f,c
 21235  012F0A  010F               	movlb	15	; () banked
 21236  012F0C  A752               	btfss	82,3,b	;volatile
 21237  012F0E  D002               	goto	i2u1205_40
 21238  012F10  0E01               	movlw	1
 21239  012F12  D001               	goto	i2u1205_46
 21240  012F14                     i2u1205_40:
 21241  012F14  0E00               	movlw	0
 21242  012F16                     i2u1205_46:
 21243  012F16  6EDF               	movwf	indf2,c
 21244                           
 21245                           ; BSR set to: 15
 21246                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 21247  012F18  010F               	movlb	15	; () banked
 21248  012F1A  B752               	btfsc	82,3,b	;volatile
 21249  012F1C  D044               	goto	i2l9007
 21250                           
 21251                           ; BSR set to: 15
 21252                           ;inc\CANlib.h: 559: {
 21253                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 21254  012F1E  CF51 F03D          	movff	3921,??_CANreceiveMessage	;volatile
 21255  012F22  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21256  012F24  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21257  012F26  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21258  012F28  0E03               	movlw	3
 21259  012F2A                     i2u1207_45:
 21260  012F2A  90D8               	bcf	status,0,c
 21261  012F2C  363D               	rlcf	??_CANreceiveMessage,f,c
 21262  012F2E  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21263  012F30  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21264  012F32  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21265  012F34  2EE8               	decfsz	wreg,f,c
 21266  012F36  D7F9               	goto	i2u1207_45
 21267  012F38  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21268  012F3C  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21269  012F40  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21270  012F44  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21271  012F48  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21272  012F4C  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21273                           
 21274                           ; BSR set to: 15
 21275                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 21276  012F50  010F               	movlb	15	; () banked
 21277  012F52  3952               	swapf	82,w,b	;volatile
 21278  012F54  42E8               	rrncf	wreg,f,c
 21279  012F56  0B07               	andlw	7
 21280  012F58  0B07               	andlw	7
 21281  012F5A  6E46               	movwf	CANreceiveMessage@tamp,c
 21282                           
 21283                           ; BSR set to: 15
 21284                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 21285  012F5C  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21286  012F60  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21287  012F64  CFDE F03D          	movff	postinc2,??_CANreceiveMessage
 21288  012F68  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+1
 21289  012F6C  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+2
 21290  012F70  CFDE F040          	movff	postinc2,??_CANreceiveMessage+3
 21291  012F74  5046               	movf	CANreceiveMessage@tamp,w,c
 21292  012F76  243D               	addwf	??_CANreceiveMessage,w,c
 21293  012F78  6E41               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21294  012F7A  0E00               	movlw	0
 21295  012F7C  203E               	addwfc	??_CANreceiveMessage+1,w,c
 21296  012F7E  6E42               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21297  012F80  0E00               	movlw	0
 21298  012F82  203F               	addwfc	??_CANreceiveMessage+2,w,c
 21299  012F84  6E43               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21300  012F86  0E00               	movlw	0
 21301  012F88  2040               	addwfc	??_CANreceiveMessage+3,w,c
 21302  012F8A  6E44               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21303  012F8C  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21304  012F90  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21305  012F94  C041  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21306  012F98  C042  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21307  012F9C  C043  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21308  012FA0  C044  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21309                           
 21310                           ;inc\CANlib.h: 563: }
 21311  012FA4  D08D               	goto	i2l9033
 21312  012FA6                     i2l9007:
 21313                           
 21314                           ; BSR set to: 15
 21315                           ;inc\CANlib.h: 564: else
 21316                           ;inc\CANlib.h: 565: {
 21317                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 21318  012FA6  CF54 F03D          	movff	3924,??_CANreceiveMessage	;volatile
 21319  012FAA  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21320  012FAC  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21321  012FAE  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21322  012FB0  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21323  012FB4  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21324  012FB8  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21325  012FBC  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21326  012FC0  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21327  012FC4  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21328                           
 21329                           ; BSR set to: 15
 21330                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 21331  012FC8  CF53 F03D          	movff	3923,??_CANreceiveMessage	;volatile
 21332  012FCC  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21333  012FCE  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21334  012FD0  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21335  012FD2  C03F  F040         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21336  012FD6  C03E  F03F         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21337  012FDA  C03D  F03E         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21338  012FDE  6A3D               	clrf	??_CANreceiveMessage,c
 21339  012FE0  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21340  012FE4  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21341  012FE8  503D               	movf	??_CANreceiveMessage,w,c
 21342  012FEA  26DE               	addwf	postinc2,f,c
 21343  012FEC  503E               	movf	??_CANreceiveMessage+1,w,c
 21344  012FEE  22DE               	addwfc	postinc2,f,c
 21345  012FF0  503F               	movf	??_CANreceiveMessage+2,w,c
 21346  012FF2  22DE               	addwfc	postinc2,f,c
 21347  012FF4  5040               	movf	??_CANreceiveMessage+3,w,c
 21348  012FF6  22DE               	addwfc	postinc2,f,c
 21349                           
 21350                           ; BSR set to: 15
 21351                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 21352  012FF8  010F               	movlb	15	; () banked
 21353  012FFA  A152               	btfss	82,0,b	;volatile
 21354  012FFC  D00C               	goto	i2l9015
 21355                           
 21356                           ; BSR set to: 15
 21357                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 21358  012FFE  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21359  013002  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21360  013006  0E00               	movlw	0
 21361  013008  12DE               	iorwf	postinc2,f,c
 21362  01300A  0E00               	movlw	0
 21363  01300C  12DE               	iorwf	postinc2,f,c
 21364  01300E  0E01               	movlw	1
 21365  013010  12DE               	iorwf	postinc2,f,c
 21366  013012  0E00               	movlw	0
 21367  013014  12DE               	iorwf	postinc2,f,c
 21368  013016                     i2l9015:
 21369                           
 21370                           ; BSR set to: 15
 21371                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 21372  013016  010F               	movlb	15	; () banked
 21373  013018  A352               	btfss	82,1,b	;volatile
 21374  01301A  D00C               	goto	i2l9019
 21375                           
 21376                           ; BSR set to: 15
 21377                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 21378  01301C  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21379  013020  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21380  013024  0E00               	movlw	0
 21381  013026  12DE               	iorwf	postinc2,f,c
 21382  013028  0E00               	movlw	0
 21383  01302A  12DE               	iorwf	postinc2,f,c
 21384  01302C  0E02               	movlw	2
 21385  01302E  12DE               	iorwf	postinc2,f,c
 21386  013030  0E00               	movlw	0
 21387  013032  12DE               	iorwf	postinc2,f,c
 21388  013034                     i2l9019:
 21389                           
 21390                           ; BSR set to: 15
 21391                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 21392  013034  010F               	movlb	15	; () banked
 21393  013036  AB52               	btfss	82,5,b	;volatile
 21394  013038  D00C               	goto	i2l9023
 21395                           
 21396                           ; BSR set to: 15
 21397                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21398  01303A  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21399  01303E  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21400  013042  0E00               	movlw	0
 21401  013044  12DE               	iorwf	postinc2,f,c
 21402  013046  0E00               	movlw	0
 21403  013048  12DE               	iorwf	postinc2,f,c
 21404  01304A  0E04               	movlw	4
 21405  01304C  12DE               	iorwf	postinc2,f,c
 21406  01304E  0E00               	movlw	0
 21407  013050  12DE               	iorwf	postinc2,f,c
 21408  013052                     i2l9023:
 21409                           
 21410                           ; BSR set to: 15
 21411                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21412  013052  010F               	movlb	15	; () banked
 21413  013054  AD52               	btfss	82,6,b	;volatile
 21414  013056  D00C               	goto	i2l9027
 21415                           
 21416                           ; BSR set to: 15
 21417                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21418  013058  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21419  01305C  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21420  013060  0E00               	movlw	0
 21421  013062  12DE               	iorwf	postinc2,f,c
 21422  013064  0E00               	movlw	0
 21423  013066  12DE               	iorwf	postinc2,f,c
 21424  013068  0E08               	movlw	8
 21425  01306A  12DE               	iorwf	postinc2,f,c
 21426  01306C  0E00               	movlw	0
 21427  01306E  12DE               	iorwf	postinc2,f,c
 21428  013070                     i2l9027:
 21429                           
 21430                           ; BSR set to: 15
 21431                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21432  013070  010F               	movlb	15	; () banked
 21433  013072  AF52               	btfss	82,7,b	;volatile
 21434  013074  D00C               	goto	i2l9031
 21435                           
 21436                           ; BSR set to: 15
 21437                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21438  013076  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21439  01307A  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21440  01307E  0E00               	movlw	0
 21441  013080  12DE               	iorwf	postinc2,f,c
 21442  013082  0E00               	movlw	0
 21443  013084  12DE               	iorwf	postinc2,f,c
 21444  013086  0E10               	movlw	16
 21445  013088  12DE               	iorwf	postinc2,f,c
 21446  01308A  0E00               	movlw	0
 21447  01308C  12DE               	iorwf	postinc2,f,c
 21448  01308E                     i2l9031:
 21449                           
 21450                           ; BSR set to: 15
 21451                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21452  01308E  CF51 F03D          	movff	3921,??_CANreceiveMessage	;volatile
 21453  013092  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21454  013094  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21455  013096  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21456  013098  0E15               	movlw	21
 21457  01309A                     i2u1213_45:
 21458  01309A  90D8               	bcf	status,0,c
 21459  01309C  363D               	rlcf	??_CANreceiveMessage,f,c
 21460  01309E  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21461  0130A0  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21462  0130A2  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21463  0130A4  2EE8               	decfsz	wreg,f,c
 21464  0130A6  D7F9               	goto	i2u1213_45
 21465  0130A8  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21466  0130AC  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21467  0130B0  503D               	movf	??_CANreceiveMessage,w,c
 21468  0130B2  12DE               	iorwf	postinc2,f,c
 21469  0130B4  503E               	movf	??_CANreceiveMessage+1,w,c
 21470  0130B6  12DE               	iorwf	postinc2,f,c
 21471  0130B8  503F               	movf	??_CANreceiveMessage+2,w,c
 21472  0130BA  12DE               	iorwf	postinc2,f,c
 21473  0130BC  5040               	movf	??_CANreceiveMessage+3,w,c
 21474  0130BE  12DE               	iorwf	postinc2,f,c
 21475  0130C0                     i2l9033:
 21476                           
 21477                           ; BSR set to: 15
 21478                           ;inc\CANlib.h: 581: }
 21479                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21480  0130C0  010F               	movlb	15	; () banked
 21481  0130C2  9F50               	bcf	80,7,b	;volatile
 21482                           
 21483                           ; BSR set to: 15
 21484                           ;inc\CANlib.h: 584: return (error);
 21485                           ;	Return value of _CANreceiveMessage is never used
 21486  0130C4  0012               	return	
 21487  0130C6                     i2l430:
 21488                           
 21489                           ; BSR set to: 15
 21490                           ;inc\CANlib.h: 585: }
 21491                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21492  0130C6  AE60               	btfss	3936,7,c	;volatile
 21493  0130C8  0012               	return	
 21494                           
 21495                           ; BSR set to: 15
 21496                           ;inc\CANlib.h: 588: {
 21497                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21498  0130CA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21499  0130CE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21500  0130D2  6ADE               	clrf	postinc2,c
 21501  0130D4  6ADE               	clrf	postinc2,c
 21502  0130D6  6ADE               	clrf	postinc2,c
 21503  0130D8  6ADD               	clrf	postdec2,c
 21504                           
 21505                           ; BSR set to: 15
 21506                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21507  0130DA  EE20 F004          	lfsr	2,4
 21508  0130DE  503B               	movf	CANreceiveMessage@msg,w,c
 21509  0130E0  26D9               	addwf	fsr2l,f,c
 21510  0130E2  503C               	movf	CANreceiveMessage@msg+1,w,c
 21511  0130E4  22DA               	addwfc	fsr2h,f,c
 21512  0130E6  CF66 FFDF          	movff	3942,indf2	;volatile
 21513                           
 21514                           ; BSR set to: 15
 21515                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21516  0130EA  EE20 F005          	lfsr	2,5
 21517  0130EE  503B               	movf	CANreceiveMessage@msg,w,c
 21518  0130F0  26D9               	addwf	fsr2l,f,c
 21519  0130F2  503C               	movf	CANreceiveMessage@msg+1,w,c
 21520  0130F4  22DA               	addwfc	fsr2h,f,c
 21521  0130F6  CF67 FFDF          	movff	3943,indf2	;volatile
 21522                           
 21523                           ; BSR set to: 15
 21524                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21525  0130FA  EE20 F006          	lfsr	2,6
 21526  0130FE  503B               	movf	CANreceiveMessage@msg,w,c
 21527  013100  26D9               	addwf	fsr2l,f,c
 21528  013102  503C               	movf	CANreceiveMessage@msg+1,w,c
 21529  013104  22DA               	addwfc	fsr2h,f,c
 21530  013106  CF68 FFDF          	movff	3944,indf2	;volatile
 21531                           
 21532                           ; BSR set to: 15
 21533                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21534  01310A  EE20 F007          	lfsr	2,7
 21535  01310E  503B               	movf	CANreceiveMessage@msg,w,c
 21536  013110  26D9               	addwf	fsr2l,f,c
 21537  013112  503C               	movf	CANreceiveMessage@msg+1,w,c
 21538  013114  22DA               	addwfc	fsr2h,f,c
 21539  013116  CF69 FFDF          	movff	3945,indf2	;volatile
 21540                           
 21541                           ; BSR set to: 15
 21542                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21543  01311A  EE20 F008          	lfsr	2,8
 21544  01311E  503B               	movf	CANreceiveMessage@msg,w,c
 21545  013120  26D9               	addwf	fsr2l,f,c
 21546  013122  503C               	movf	CANreceiveMessage@msg+1,w,c
 21547  013124  22DA               	addwfc	fsr2h,f,c
 21548  013126  CF6A FFDF          	movff	3946,indf2	;volatile
 21549                           
 21550                           ; BSR set to: 15
 21551                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21552  01312A  EE20 F009          	lfsr	2,9
 21553  01312E  503B               	movf	CANreceiveMessage@msg,w,c
 21554  013130  26D9               	addwf	fsr2l,f,c
 21555  013132  503C               	movf	CANreceiveMessage@msg+1,w,c
 21556  013134  22DA               	addwfc	fsr2h,f,c
 21557  013136  CF6B FFDF          	movff	3947,indf2	;volatile
 21558                           
 21559                           ; BSR set to: 15
 21560                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21561  01313A  EE20 F00A          	lfsr	2,10
 21562  01313E  503B               	movf	CANreceiveMessage@msg,w,c
 21563  013140  26D9               	addwf	fsr2l,f,c
 21564  013142  503C               	movf	CANreceiveMessage@msg+1,w,c
 21565  013144  22DA               	addwfc	fsr2h,f,c
 21566  013146  CF6C FFDF          	movff	3948,indf2	;volatile
 21567                           
 21568                           ; BSR set to: 15
 21569                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21570  01314A  EE20 F00B          	lfsr	2,11
 21571  01314E  503B               	movf	CANreceiveMessage@msg,w,c
 21572  013150  26D9               	addwf	fsr2l,f,c
 21573  013152  503C               	movf	CANreceiveMessage@msg+1,w,c
 21574  013154  22DA               	addwfc	fsr2h,f,c
 21575  013156  CF6D FFDF          	movff	3949,indf2	;volatile
 21576                           
 21577                           ; BSR set to: 15
 21578                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21579  01315A  EE20 F00E          	lfsr	2,14
 21580  01315E  503B               	movf	CANreceiveMessage@msg,w,c
 21581  013160  26D9               	addwf	fsr2l,f,c
 21582  013162  503C               	movf	CANreceiveMessage@msg+1,w,c
 21583  013164  22DA               	addwfc	fsr2h,f,c
 21584  013166  AC65               	btfss	3941,6,c	;volatile
 21585  013168  D002               	goto	i2u1215_40
 21586  01316A  0E01               	movlw	1
 21587  01316C  D001               	goto	i2u1215_46
 21588  01316E                     i2u1215_40:
 21589  01316E  0E00               	movlw	0
 21590  013170                     i2u1215_46:
 21591  013170  6EDF               	movwf	indf2,c
 21592                           
 21593                           ; BSR set to: 15
 21594                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21595  013172  EE20 F00D          	lfsr	2,13
 21596  013176  503B               	movf	CANreceiveMessage@msg,w,c
 21597  013178  26D9               	addwf	fsr2l,f,c
 21598  01317A  503C               	movf	CANreceiveMessage@msg+1,w,c
 21599  01317C  22DA               	addwfc	fsr2h,f,c
 21600  01317E  5065               	movf	3941,w,c	;volatile
 21601  013180  0B0F               	andlw	15
 21602  013182  6EDF               	movwf	indf2,c
 21603                           
 21604                           ; BSR set to: 15
 21605                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21606  013184  EE20 F00C          	lfsr	2,12
 21607  013188  503B               	movf	CANreceiveMessage@msg,w,c
 21608  01318A  26D9               	addwf	fsr2l,f,c
 21609  01318C  503C               	movf	CANreceiveMessage@msg+1,w,c
 21610  01318E  22DA               	addwfc	fsr2h,f,c
 21611  013190  A662               	btfss	3938,3,c	;volatile
 21612  013192  D002               	goto	i2u1216_40
 21613  013194  0E01               	movlw	1
 21614  013196  D001               	goto	i2u1216_46
 21615  013198                     i2u1216_40:
 21616  013198  0E00               	movlw	0
 21617  01319A                     i2u1216_46:
 21618  01319A  6EDF               	movwf	indf2,c
 21619                           
 21620                           ; BSR set to: 15
 21621                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21622  01319C  B662               	btfsc	3938,3,c	;volatile
 21623  01319E  D043               	goto	i2l9069
 21624                           
 21625                           ; BSR set to: 15
 21626                           ;inc\CANlib.h: 606: {
 21627                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21628  0131A0  CF61 F03D          	movff	3937,??_CANreceiveMessage	;volatile
 21629  0131A4  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21630  0131A6  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21631  0131A8  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21632  0131AA  0E03               	movlw	3
 21633  0131AC                     i2u1218_45:
 21634  0131AC  90D8               	bcf	status,0,c
 21635  0131AE  363D               	rlcf	??_CANreceiveMessage,f,c
 21636  0131B0  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21637  0131B2  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21638  0131B4  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21639  0131B6  2EE8               	decfsz	wreg,f,c
 21640  0131B8  D7F9               	goto	i2u1218_45
 21641  0131BA  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21642  0131BE  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21643  0131C2  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21644  0131C6  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21645  0131CA  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21646  0131CE  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21647                           
 21648                           ; BSR set to: 15
 21649                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21650  0131D2  3862               	swapf	3938,w,c	;volatile
 21651  0131D4  42E8               	rrncf	wreg,f,c
 21652  0131D6  0B07               	andlw	7
 21653  0131D8  0B07               	andlw	7
 21654  0131DA  6E46               	movwf	CANreceiveMessage@tamp,c
 21655                           
 21656                           ; BSR set to: 15
 21657                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21658  0131DC  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21659  0131E0  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21660  0131E4  CFDE F03D          	movff	postinc2,??_CANreceiveMessage
 21661  0131E8  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+1
 21662  0131EC  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+2
 21663  0131F0  CFDE F040          	movff	postinc2,??_CANreceiveMessage+3
 21664  0131F4  5046               	movf	CANreceiveMessage@tamp,w,c
 21665  0131F6  243D               	addwf	??_CANreceiveMessage,w,c
 21666  0131F8  6E41               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21667  0131FA  0E00               	movlw	0
 21668  0131FC  203E               	addwfc	??_CANreceiveMessage+1,w,c
 21669  0131FE  6E42               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21670  013200  0E00               	movlw	0
 21671  013202  203F               	addwfc	??_CANreceiveMessage+2,w,c
 21672  013204  6E43               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21673  013206  0E00               	movlw	0
 21674  013208  2040               	addwfc	??_CANreceiveMessage+3,w,c
 21675  01320A  6E44               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21676  01320C  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21677  013210  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21678  013214  C041  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21679  013218  C042  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21680  01321C  C043  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21681  013220  C044  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21682                           
 21683                           ;inc\CANlib.h: 610: }
 21684  013224  D088               	goto	i2l9095
 21685  013226                     i2l9069:
 21686                           
 21687                           ; BSR set to: 15
 21688                           ;inc\CANlib.h: 611: else
 21689                           ;inc\CANlib.h: 612: {
 21690                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21691  013226  CF64 F03D          	movff	3940,??_CANreceiveMessage	;volatile
 21692  01322A  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21693  01322C  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21694  01322E  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21695  013230  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21696  013234  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21697  013238  C03D  FFDE         	movff	??_CANreceiveMessage,postinc2
 21698  01323C  C03E  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21699  013240  C03F  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21700  013244  C040  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21701                           
 21702                           ; BSR set to: 15
 21703                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21704  013248  CF63 F03D          	movff	3939,??_CANreceiveMessage	;volatile
 21705  01324C  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21706  01324E  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21707  013250  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21708  013252  C03F  F040         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21709  013256  C03E  F03F         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21710  01325A  C03D  F03E         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21711  01325E  6A3D               	clrf	??_CANreceiveMessage,c
 21712  013260  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21713  013264  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21714  013268  503D               	movf	??_CANreceiveMessage,w,c
 21715  01326A  26DE               	addwf	postinc2,f,c
 21716  01326C  503E               	movf	??_CANreceiveMessage+1,w,c
 21717  01326E  22DE               	addwfc	postinc2,f,c
 21718  013270  503F               	movf	??_CANreceiveMessage+2,w,c
 21719  013272  22DE               	addwfc	postinc2,f,c
 21720  013274  5040               	movf	??_CANreceiveMessage+3,w,c
 21721  013276  22DE               	addwfc	postinc2,f,c
 21722                           
 21723                           ; BSR set to: 15
 21724                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21725  013278  A062               	btfss	3938,0,c	;volatile
 21726  01327A  D00C               	goto	i2l9077
 21727                           
 21728                           ; BSR set to: 15
 21729                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21730  01327C  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21731  013280  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21732  013284  0E00               	movlw	0
 21733  013286  12DE               	iorwf	postinc2,f,c
 21734  013288  0E00               	movlw	0
 21735  01328A  12DE               	iorwf	postinc2,f,c
 21736  01328C  0E01               	movlw	1
 21737  01328E  12DE               	iorwf	postinc2,f,c
 21738  013290  0E00               	movlw	0
 21739  013292  12DE               	iorwf	postinc2,f,c
 21740  013294                     i2l9077:
 21741                           
 21742                           ; BSR set to: 15
 21743                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21744  013294  A262               	btfss	3938,1,c	;volatile
 21745  013296  D00C               	goto	i2l9081
 21746                           
 21747                           ; BSR set to: 15
 21748                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21749  013298  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21750  01329C  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21751  0132A0  0E00               	movlw	0
 21752  0132A2  12DE               	iorwf	postinc2,f,c
 21753  0132A4  0E00               	movlw	0
 21754  0132A6  12DE               	iorwf	postinc2,f,c
 21755  0132A8  0E02               	movlw	2
 21756  0132AA  12DE               	iorwf	postinc2,f,c
 21757  0132AC  0E00               	movlw	0
 21758  0132AE  12DE               	iorwf	postinc2,f,c
 21759  0132B0                     i2l9081:
 21760                           
 21761                           ; BSR set to: 15
 21762                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21763  0132B0  AA62               	btfss	3938,5,c	;volatile
 21764  0132B2  D00C               	goto	i2l9085
 21765                           
 21766                           ; BSR set to: 15
 21767                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21768  0132B4  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21769  0132B8  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21770  0132BC  0E00               	movlw	0
 21771  0132BE  12DE               	iorwf	postinc2,f,c
 21772  0132C0  0E00               	movlw	0
 21773  0132C2  12DE               	iorwf	postinc2,f,c
 21774  0132C4  0E04               	movlw	4
 21775  0132C6  12DE               	iorwf	postinc2,f,c
 21776  0132C8  0E00               	movlw	0
 21777  0132CA  12DE               	iorwf	postinc2,f,c
 21778  0132CC                     i2l9085:
 21779                           
 21780                           ; BSR set to: 15
 21781                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21782  0132CC  AC62               	btfss	3938,6,c	;volatile
 21783  0132CE  D00C               	goto	i2l9089
 21784                           
 21785                           ; BSR set to: 15
 21786                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21787  0132D0  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21788  0132D4  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21789  0132D8  0E00               	movlw	0
 21790  0132DA  12DE               	iorwf	postinc2,f,c
 21791  0132DC  0E00               	movlw	0
 21792  0132DE  12DE               	iorwf	postinc2,f,c
 21793  0132E0  0E08               	movlw	8
 21794  0132E2  12DE               	iorwf	postinc2,f,c
 21795  0132E4  0E00               	movlw	0
 21796  0132E6  12DE               	iorwf	postinc2,f,c
 21797  0132E8                     i2l9089:
 21798                           
 21799                           ; BSR set to: 15
 21800                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21801  0132E8  AE62               	btfss	3938,7,c	;volatile
 21802  0132EA  D00C               	goto	i2l9093
 21803                           
 21804                           ; BSR set to: 15
 21805                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21806  0132EC  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21807  0132F0  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21808  0132F4  0E00               	movlw	0
 21809  0132F6  12DE               	iorwf	postinc2,f,c
 21810  0132F8  0E00               	movlw	0
 21811  0132FA  12DE               	iorwf	postinc2,f,c
 21812  0132FC  0E10               	movlw	16
 21813  0132FE  12DE               	iorwf	postinc2,f,c
 21814  013300  0E00               	movlw	0
 21815  013302  12DE               	iorwf	postinc2,f,c
 21816  013304                     i2l9093:
 21817                           
 21818                           ; BSR set to: 15
 21819                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21820  013304  CF61 F03D          	movff	3937,??_CANreceiveMessage	;volatile
 21821  013308  6A3E               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21822  01330A  6A3F               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21823  01330C  6A40               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21824  01330E  0E15               	movlw	21
 21825  013310                     i2u1224_45:
 21826  013310  90D8               	bcf	status,0,c
 21827  013312  363D               	rlcf	??_CANreceiveMessage,f,c
 21828  013314  363E               	rlcf	??_CANreceiveMessage+1,f,c
 21829  013316  363F               	rlcf	??_CANreceiveMessage+2,f,c
 21830  013318  3640               	rlcf	??_CANreceiveMessage+3,f,c
 21831  01331A  2EE8               	decfsz	wreg,f,c
 21832  01331C  D7F9               	goto	i2u1224_45
 21833  01331E  C03B  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21834  013322  C03C  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21835  013326  503D               	movf	??_CANreceiveMessage,w,c
 21836  013328  12DE               	iorwf	postinc2,f,c
 21837  01332A  503E               	movf	??_CANreceiveMessage+1,w,c
 21838  01332C  12DE               	iorwf	postinc2,f,c
 21839  01332E  503F               	movf	??_CANreceiveMessage+2,w,c
 21840  013330  12DE               	iorwf	postinc2,f,c
 21841  013332  5040               	movf	??_CANreceiveMessage+3,w,c
 21842  013334  12DE               	iorwf	postinc2,f,c
 21843  013336                     i2l9095:
 21844                           
 21845                           ; BSR set to: 15
 21846                           ;inc\CANlib.h: 629: }
 21847                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21848  013336  9E60               	bcf	3936,7,c	;volatile
 21849                           
 21850                           ; BSR set to: 15
 21851                           ;inc\CANlib.h: 632: return (error);
 21852                           ;	Return value of _CANreceiveMessage is never used
 21853  013338  0012               	return	
 21854  01333A                     __end_of_CANreceiveMessage:
 21855                           	opt stack 0
 21856                           pclatu	equ	0xFFB
 21857                           pclath	equ	0xFFA
 21858                           tblptru	equ	0xFF8
 21859                           tblptrh	equ	0xFF7
 21860                           tblptrl	equ	0xFF6
 21861                           tablat	equ	0xFF5
 21862                           prodh	equ	0xFF4
 21863                           prodl	equ	0xFF3
 21864                           intcon	equ	0xFF2
 21865                           postinc0	equ	0xFEE
 21866                           fsr0h	equ	0xFEA
 21867                           fsr0l	equ	0xFE9
 21868                           wreg	equ	0xFE8
 21869                           indf1	equ	0xFE7
 21870                           plusw1	equ	0xFE3
 21871                           fsr1h	equ	0xFE2
 21872                           fsr1l	equ	0xFE1
 21873                           bsr	equ	0xFE0
 21874                           indf2	equ	0xFDF
 21875                           postinc2	equ	0xFDE
 21876                           postdec2	equ	0xFDD
 21877                           plusw2	equ	0xFDB
 21878                           fsr2h	equ	0xFDA
 21879                           fsr2l	equ	0xFD9
 21880                           status	equ	0xFD8
 21881                           
 21882 ;; *************** function _CANisRxReady *****************
 21883 ;; Defined at:
 21884 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21885 ;; Parameters:    Size  Location     Type
 21886 ;;		None
 21887 ;; Auto vars:     Size  Location     Type
 21888 ;;		None
 21889 ;; Return value:  Size  Location     Type
 21890 ;;                  1    wreg      unsigned char 
 21891 ;; Registers used:
 21892 ;;		wreg, status,2
 21893 ;; Tracked objects:
 21894 ;;		On entry : 0/0
 21895 ;;		On exit  : 0/0
 21896 ;;		Unchanged: 0/0
 21897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21902 ;;Total ram usage:        1 bytes
 21903 ;; Hardware stack levels used:    1
 21904 ;; This function calls:
 21905 ;;		Nothing
 21906 ;; This function is called by:
 21907 ;;		_ISR_alta
 21908 ;; This function uses a non-reentrant model
 21909 ;;
 21910                           
 21911                           	psect	text61
 21912  0164A0                     __ptext61:
 21913                           	opt stack 0
 21914  0164A0                     _CANisRxReady:
 21915                           	opt stack 20
 21916                           
 21917                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21918                           
 21919                           ; BSR set to: 15
 21920                           ;incstack = 0
 21921  0164A0  0E01               	movlw	1
 21922  0164A2  6E3B               	movwf	_CANisRxReady$3253,c
 21923  0164A4  BE60               	btfsc	3936,7,c	;volatile
 21924  0164A6  D005               	goto	i2l581
 21925  0164A8  010F               	movlb	15	; () banked
 21926  0164AA  BF50               	btfsc	80,7,b	;volatile
 21927  0164AC  D002               	goto	i2l581
 21928                           
 21929                           ; BSR set to: 15
 21930  0164AE  0E00               	movlw	0
 21931  0164B0  6E3B               	movwf	_CANisRxReady$3253,c
 21932  0164B2                     i2l581:
 21933  0164B2  503B               	movf	_CANisRxReady$3253,w,c
 21934  0164B4  0012               	return	
 21935  0164B6                     __end_of_CANisRxReady:
 21936                           	opt stack 0
 21937                           pclatu	equ	0xFFB
 21938                           pclath	equ	0xFFA
 21939                           tblptru	equ	0xFF8
 21940                           tblptrh	equ	0xFF7
 21941                           tblptrl	equ	0xFF6
 21942                           tablat	equ	0xFF5
 21943                           prodh	equ	0xFF4
 21944                           prodl	equ	0xFF3
 21945                           intcon	equ	0xFF2
 21946                           postinc0	equ	0xFEE
 21947                           fsr0h	equ	0xFEA
 21948                           fsr0l	equ	0xFE9
 21949                           wreg	equ	0xFE8
 21950                           indf1	equ	0xFE7
 21951                           plusw1	equ	0xFE3
 21952                           fsr1h	equ	0xFE2
 21953                           fsr1l	equ	0xFE1
 21954                           bsr	equ	0xFE0
 21955                           indf2	equ	0xFDF
 21956                           postinc2	equ	0xFDE
 21957                           postdec2	equ	0xFDD
 21958                           plusw2	equ	0xFDB
 21959                           fsr2h	equ	0xFDA
 21960                           fsr2l	equ	0xFD9
 21961                           status	equ	0xFD8
 21962                           pclatu	equ	0xFFB
 21963                           pclath	equ	0xFFA
 21964                           tblptru	equ	0xFF8
 21965                           tblptrh	equ	0xFF7
 21966                           tblptrl	equ	0xFF6
 21967                           tablat	equ	0xFF5
 21968                           prodh	equ	0xFF4
 21969                           prodl	equ	0xFF3
 21970                           intcon	equ	0xFF2
 21971                           postinc0	equ	0xFEE
 21972                           fsr0h	equ	0xFEA
 21973                           fsr0l	equ	0xFE9
 21974                           wreg	equ	0xFE8
 21975                           indf1	equ	0xFE7
 21976                           plusw1	equ	0xFE3
 21977                           fsr1h	equ	0xFE2
 21978                           fsr1l	equ	0xFE1
 21979                           bsr	equ	0xFE0
 21980                           indf2	equ	0xFDF
 21981                           postinc2	equ	0xFDE
 21982                           postdec2	equ	0xFDD
 21983                           plusw2	equ	0xFDB
 21984                           fsr2h	equ	0xFDA
 21985                           fsr2l	equ	0xFD9
 21986                           status	equ	0xFD8
 21987                           
 21988                           	psect	rparam
 21989  0000                     pclatu	equ	0xFFB
 21990                           pclath	equ	0xFFA
 21991                           tblptru	equ	0xFF8
 21992                           tblptrh	equ	0xFF7
 21993                           tblptrl	equ	0xFF6
 21994                           tablat	equ	0xFF5
 21995                           prodh	equ	0xFF4
 21996                           prodl	equ	0xFF3
 21997                           intcon	equ	0xFF2
 21998                           postinc0	equ	0xFEE
 21999                           fsr0h	equ	0xFEA
 22000                           fsr0l	equ	0xFE9
 22001                           wreg	equ	0xFE8
 22002                           indf1	equ	0xFE7
 22003                           plusw1	equ	0xFE3
 22004                           fsr1h	equ	0xFE2
 22005                           fsr1l	equ	0xFE1
 22006                           bsr	equ	0xFE0
 22007                           indf2	equ	0xFDF
 22008                           postinc2	equ	0xFDE
 22009                           postdec2	equ	0xFDD
 22010                           plusw2	equ	0xFDB
 22011                           fsr2h	equ	0xFDA
 22012                           fsr2l	equ	0xFD9
 22013                           status	equ	0xFD8
 22014                           
 22015                           	psect	temp
 22016  00004E                     btemp:
 22017                           	opt stack 0
 22018  00004E                     	ds	1
 22019  0000                     int$flags	set	btemp
 22020                           pclatu	equ	0xFFB
 22021                           pclath	equ	0xFFA
 22022                           tblptru	equ	0xFF8
 22023                           tblptrh	equ	0xFF7
 22024                           tblptrl	equ	0xFF6
 22025                           tablat	equ	0xFF5
 22026                           prodh	equ	0xFF4
 22027                           prodl	equ	0xFF3
 22028                           intcon	equ	0xFF2
 22029                           postinc0	equ	0xFEE
 22030                           fsr0h	equ	0xFEA
 22031                           fsr0l	equ	0xFE9
 22032                           wreg	equ	0xFE8
 22033                           indf1	equ	0xFE7
 22034                           plusw1	equ	0xFE3
 22035                           fsr1h	equ	0xFE2
 22036                           fsr1l	equ	0xFE1
 22037                           bsr	equ	0xFE0
 22038                           indf2	equ	0xFDF
 22039                           postinc2	equ	0xFDE
 22040                           postdec2	equ	0xFDD
 22041                           plusw2	equ	0xFDB
 22042                           fsr2h	equ	0xFDA
 22043                           fsr2l	equ	0xFD9
 22044                           status	equ	0xFD8


Data Sizes:
    Strings     422
    Constant    144
    Data        1
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      77
    BANK0           160    109     142
    BANK1           256     33      81
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_steering(BANK0[1]), data_brake(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  491385
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             31 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  143974
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41008
                                             99 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             56 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             56 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             31 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             23 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             17 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             17 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             17 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             17 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             89 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             89 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             69 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             56 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             31 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             41 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             24 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             32 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             29 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   11675
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             29 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             31 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             29 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             29 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             25 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             23 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             17 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    4995
                                              0 BANK0     17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1594
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      51       7       31.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      8E       5       88.8%
BITCOMRAM           5E      0       3       0        3.2%
COMRAM              5E     21      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      20        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 07 16:31:37 2016

                     ___fldiv@aexp 0097                       ___fldiv@bexp 0096  
                                _x 0269                                  _y 026A  
                                _z 026B          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 002A  
                     ___fldiv@sign 008B                       ___awdiv@sign 007C  
                               _id 0005                                 bsr 000FE0  
              ___wmul@multiplicand 0073                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       ?_LCD_Parking 002A  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                              l400 1638                                l401 1730  
                              l410 17FE                                l402 16C0  
                              l403 16CA                                l404 16D4  
                              l500 063A                                l413 18B8  
                              l405 16DE                                l501 063E  
                              l422 1A72                                l414 18BC  
                              l510 074A                                l502 064A  
                              l423 1A76                                l415 19B4  
                              l511 0756                                l424 1A82  
                              l416 1944                                l408 17EE  
                              l520 0862                                l512 075A  
                              l417 194E                                l409 17F2  
                              l521 0866                                l513 0766  
                              l505 0726                                l418 1958  
                              l530 0972                                l522 0872  
                              l506 072A                                l419 1962  
                              l531 097E                                l523 0876  
                              l507 0736                                l540 0A8A  
                              l532 0982                                l524 0882  
                              l516 0842                                l508 073A  
                              l460 4282                                l452 4242  
                              l541 0A8E                                l533 098E  
                              l517 0846                                l509 0746  
                              l453 4246                                l390 145A  
                              l542 0A9A                                l534 0992  
                              l518 0852                                l470 438E  
                              l454 4252                                l383 161E  
                              l543 0A9E                                l535 099E  
                              l527 095E                                l519 0856  
                              l471 439A                                l463 435A  
                              l455 4256                                l384 13B0  
                              l544 0AAA                                l528 0962  
                              l464 435E                                l456 4262  
                              l393 156A                                l385 13B4  
                              l545 0AAE                                l529 096E  
                              l465 436A                                l457 4266  
                              l394 156E                                l386 14AC  
                              l546 0ABA                                l538 0A7A  
                              l490 0524                                l466 436E  
                              l458 4272                                l378 4B62  
                              l395 157A                                l387 143C  
                              l539 0A7E                                l491 0530  
                              l483 04F0                                l467 437A  
                              l459 4276                                l379 4B6C  
                              l388 1446                                l484 04F4  
                              l468 437E                                l804 1C98  
                              l389 1450                                l901 6422  
                              l485 0500                                l469 438A  
                              l813 1E4A                                l398 18A2  
                              l494 060A                                l486 0504  
                              l399 1634                                l495 060E  
                              l487 0510                                l576 63D4  
                              l920 6086                                l496 061A  
                              l488 0514                                l497 061E  
                              l489 0520                                l841 2014  
                              l825 1E1C                                l809 1CA4  
                              l922 6088                                l498 062A  
                              l834 200C                                l818 1D7C  
                              l915 645A                                l499 062E  
                              l827 1E46                                l908 6476  
                              l852 2166                                l589 6252  
                              l854 2162               ??_PWR_Button_Polling 0071  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007D                                _dir 00E5  
                              _msg 010D                                _str 011C  
                     ___awmod@sign 0076                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 008C  
                     ___flmul@bexp 0091                       ___flmul@sign 008B  
                     ___flmul@temp 0096                       ___flmul@prod 0092  
                  __end_of_LCD_Gap 5FB0                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 6014             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C2                       __CFG_WDT$OFF 000000  
                             l1029 10FA                               l1500 5E7A  
                             l1421 5944                               l1510 606C  
                             l1254 547E                               l1351 50A2  
                             l1600 3E5E                               l1264 52B8  
                             l1352 50E6                               l1541 351A  
                             l1606 3EEE                               l1542 350E  
                             l1358 5166                               l1543 34DA  
                             l1447 5A1C                               l1608 3F5C  
                             l1457 5D64                               l1634 3B32  
                             l1627 3896                               l1644 3C44  
                             l1636 3BA0                               l1558 368E  
                             l1567 3722                               l1663 4A2A  
                             l1664 4A42                               l1656 49CE  
                             l1649 4922                               l1597 3EB6  
                             l5307 58FE                               l7101 5AAE  
                             l6311 17E2                               l6215 1464  
                             l5327 6492                               l6241 157E  
                             l8001 358C                               l5601 0694  
                             l5361 41B6                               l5345 4100  
                             l6235 155E                               l7107 607C  
                             l5515 03A4                               l5443 00BE  
                             l5419 439E                               l6171 4B70  
                             l7125 5B12                               l6317 1802  
                             l8005 359E                               l5533 045E  
                             l5461 0176                               l7135 5B20  
                             l8023 36C0                               l8015 366E  
                             l5703 09E8                               l6175 4B78  
                             l4833 5E2A                               l5297 58BC  
                             l8033 36E2                               l8041 36FC  
                             l8113 387E                               l5561 0534  
                             l5393 42CC                               l6177 4BBC  
                             l6169 4B5A                               l7147 5B82  
                             l6291 16E8                               l4835 5E36  
                             l8123 38BE                               l8115 3884  
                             l8107 385A                               l5731 0ABE  
                             l5635 07B0                               l5387 4286  
                             l4845 5E6C                               l4837 5E3C  
                             l4861 605E                               l4853 6028  
                             l8029 36D6                               l8221 5812  
                             l8205 3C64                               l5629 076A  
                             l6367 196C                               l7087 5A2E  
                             l8303 5710                               l8311 57D8  
                             l4855 6034                               l8071 37B8  
                             l8063 378A                               l8039 36F6  
                             l8207 3C6E                               l8119 38AA  
                             l5663 0886                               l5567 057A  
                             l5479 0230                               l6393 1A86  
                             l7097 5A76                               l8305 5742  
                             l4857 603A                               l6801 3ED8  
                             l6721 3CA6                               l8073 37BC  
                             l8049 371C                               l8233 5846  
                             l5497 02EA                               l6387 1A66  
                             l8307 5774                               l8315 6392  
                             l6731 3CD4                               l8067 37AC  
                             l8059 3778                               l8403 5014  
                             l8235 5852                               l8227 5828  
                             l8171 3B46                               l5595 064E  
                             l8309 57A6                               l6741 3D04  
                             l8253 58AA                               l8245 5888  
                             l8237 5858                               l8181 3B9A  
                             l8165 3B1C                               l5669 08CC  
                             l8319 63A6                               l5775 6188  
                             l6831 3FDA                               l6807 3F02  
                             l6751 3D32                               l6727 3CCA  
                             l8079 37D0                               l8511 5474  
                             l8503 5448                               l8191 3BF0  
                             l8095 3824                               l8343 4684  
                             l8335 458C                               l6841 4020  
                             l6833 3FEE                               l6817 3F56  
                             l8601 59B0                               l8409 504E  
                             l8249 5896                               l8281 5CB0  
                             l8273 5C7A                               l8265 5C56  
                             l8097 382A                               l8089 3800  
                             l9217 4E2C                               l5697 09A2  
                             l6843 4024                               l6835 4010  
                             l6827 3FAC                               l6771 3DB4  
                             l6763 3D86                               l6747 3D28  
                             l8531 5266                               l8523 51C6  
                             l8611 5A0A                               l8603 59B6  
                             l8451 515C                               l8443 5130  
                             l8275 5C86                               l8195 3C16  
                             l8099 383C                               l8363 2B76  
                             l6781 3E32                               l8621 5D08  
                             l8509 5464                               l8277 5C8C  
                             l8285 5CBE                               l8269 5C66  
                             l8197 3C2A                               l8381 2DFC  
                             l8357 2AA4                               l9253 4F76  
                             l9245 4F48                               l8295 60D6  
                             l8703 4D62                               l8527 5214  
                             l7911 33C6                               l8623 5D0E  
                             l8439 511C                               l8375 2D2A  
                             l8367 2BA8                               l9255 4F88  
                             l8713 4E1A                               l8537 5304  
                             l8545 6286                               l7921 33F4  
                             l7905 33B2                               l8465 5354  
                             l8449 514C                               l8289 5CD2  
                             l8393 6386                               l9257 4F98  
                             l8299 6108                               l6795 3EB2  
                             l8571 5692                               l8555 5624  
                             l8627 5D52                               l8619 5CF8  
                             l8643 495A                               l8459 532E  
                             l8709 4DA2                               l6789 3E6A  
                             l7917 33EA                               l8581 56C2  
                             l8645 4962                               l8637 4932  
                             l8901 10DC                               l8821 0CFA  
                             l8805 0C76                               l9701 1D24  
                             l7847 6244                               l8583 56D2  
                             l8575 56A6                               l8655 4A0C  
                             l8647 4972                               l8487 53FC  
                             l8479 53A8                               l9711 1D3E  
                             l9631 1B54                               l8681 62EA  
                             l7929 341E                               l8585 56DC  
                             l8657 4A1C                               l8649 49B0  
                             l8913 112E                               l8905 10FE  
                             l8833 0DB0                               l8691 4CC2  
                             l7971 34EE                               l8499 5434  
                             l8835 0DC6                               l9803 218E  
                             l9731 1E76                               l8677 62D0  
                             l8693 4CCA                               l7973 34F4  
                             l7893 337C                               l8589 56F8  
                             l8669 4A94                               l8917 1190  
                             l8845 0E6A                               l8837 0E02  
                             l8829 0D7E                               l8773 0B66  
                             l8765 0B30                               l9821 2240  
                             l9741 1EB8                               l7959 345A  
                             l7887 3358                               l8599 59A0  
                             l8951 1338                               l8943 12E0  
                             l8935 12AC                               l8927 1284  
                             l8863 0F7E                               l8839 0E18  
                             l8783 0BDA                               l8759 0B16  
                             l9807 21A2                               l9743 1EBA  
                             l9719 1D7E                               l9671 1C7E  
                             l7977 34FE                               l7897 3386  
                             l8929 1292                               l8881 0FFC  
                             l8865 0F84                               l8849 0E9C  
                             l8937 12BA                               l8777 0BB0  
                             l9833 2266                               l9753 1F76  
                             l9681 1CB2                               l9665 1BE8  
                             l7995 357C                               l7987 353E  
                             l8955 1364                               l8947 1308  
                             l8883 1004                               l8891 10A0  
                             l8859 0F06                               l8795 0C24  
                             l8787 0BE0                               l8779 0BCA  
                             l9827 2252                               l9835 226C  
                             l9763 2004                               l9739 1EB6  
                             l9683 1CBE                               l9675 1C90  
                             l7997 3582                               l8893 10AE  
                             l8877 0FD0                               l8789 0C0A  
                             l8957 136A                               l9773 20A8  
                             l9757 1FDC                               l9693 1CE4  
                             l8959 138C                               l9783 20CE  
                             l9759 1FE2                               STR_1 FF7F  
                             STR_2 FF55                               STR_3 FE98  
                             STR_4 FF7F                               l8899 10C8  
                             l9795 20F6                               l9779 20C0  
                             l9787 20DE                               STR_5 FFFA  
                             STR_6 FF6A                               l9789 20EC  
                             STR_7 FFC8                               STR_8 FFA9  
                             STR_9 FFBA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u6030 407C                               u6035 4070  
                             u6045 40DC                               u6310 00F2  
                             u6070 4132                               u6240 43BE  
                             u6160 42A6                               u6315 00E6  
                             u6075 4126                               u6405 02C6  
                             u6325 0152                               u6245 43B2  
                             u6165 429A                               u6085 4192  
                             u6430 0320                               u6350 01AC  
                             u6270 003A                               u6435 0314  
                             u6355 01A0                               u6275 002E  
                             u9020 6468                  _F2_Button_Polling 6452  
                             u6445 0380                               u6365 020C  
                             u6285 009A                               u6470 03DA  
                             u6390 0266                               u6800 08A6  
                             u6720 078A                               u6640 066E  
                             u6560 0554                               u9035 646A  
                             u6475 03CE                               u6395 025A  
                             u6805 089A                               u6725 077E  
                             u6645 0662                               u6565 0548  
                             u6485 043A                               u7800 1754  
                             u8600 3FC0                               u9090 60AA  
                             u7660 1484                               u7805 1748  
                             u7670 14D0                               u7815 17B4  
                             u7920 198C                               u9096 60AC  
                             u6960 0ADE                               u6880 09C2  
                             u7665 1478                               u7930 19D8  
                             u7675 14C4                               u7925 1980  
                             u7685 1530                               u6965 0AD2  
                             u6885 09B6                               u7790 1708  
                             u7935 19CC                               u8920 6430  
                             u7945 1A38                               u7795 16FC  
                             u8935 6432                               u8970 6484  
                             u8985 6486                __size_of_CANSetMask 039E  
                     ?_LCD_goto_xy 0080                               _data 0029  
                             _main 1B26                               _itoa 615E  
               ?_F2_Button_Polling 002A          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 004E                               _utoa 58B4  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0090  
               __size_of_LCD_clear 0032                       _sprintf$4257 0130  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0071           __end_of_LCD_enable_pulse 63FC  
                 _CANOperationMode 648A                       _Can_Tx_Force 0259  
                 __end_of_LCD_Park 5F4C                    _space_available 0263  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C1                    __end_of___fladd 37E2  
                            ?_main 002A                    __end_of___fldiv 4048  
                            ?_itoa 0081                    __end_of___awdiv 58B4  
                  __end_of___flneg 6298                              STR_10 FFE4  
                            STR_11 FFF0                              STR_20 FF40  
                            STR_12 FFF5                              STR_13 FFEB  
                            STR_21 FEEC                              STR_14 FFD4  
                            STR_22 FEC2                              STR_30 FE6E  
                            STR_15 FFDC                              STR_23 FE83  
                            STR_31 FE59                              STR_24 FF40  
                            STR_16 FF40                              STR_17 FF94  
                            STR_25 FF16                              STR_26 FF2B  
                            STR_18 FF01                              STR_27 FF7F  
                            STR_19 FEAD                              STR_28 FF40  
                  __end_of___awmod 5CDC                              STR_29 FED7  
                  __end_of___flmul 3C88                    __end_of___flsub 615E  
                  __end_of___fltol 570A                    __end_of___lldiv 5A2E  
                            ?_utoa 0078                              u10315 61FA  
                            u10316 61FC                              u10325 6206  
                            u10326 6208                              u10335 6212  
                            u10336 6214                              u10440 34A4  
                            u10345 621E                              u11161 4FF0  
                            u10346 6220                              u10450 34BC  
                            u10460 34BE                              u13100 1DE2  
                  ___awdiv@divisor 0079                              u11181 502A  
                            u13120 1DFE                    __end_of___llmod 5D76  
                            u13210 2000                              u10900 3C04  
                            u10820 3ABE                              u13140 1E2A  
                            u11621 4C76                              u11390 5644  
                            u13126 1E00                              u10825 3AB2  
                            u13330 221A                              u13146 1E2C  
                            u11395 5638                              u11910 10F2  
                            u13280 215A                              _T3CON 000FB1  
                            u13397 6246                              u12960 1C4C  
                            u12970 1C64                              u12976 1C66  
                  __end_of___lwdiv 5E84                    __end_of___lwmod 6076  
                            i2l400 24CC                              i1l800 0078  
                            i2l401 259C                              i2l410 264E  
                            i2l402 253A                              i2l403 2542  
                            i2l404 254A                              i2l413 26F8  
                            i2l405 2552                              i2l430 30C6  
                            i2l422 2870                              i2l414 26FC  
                            i2l423 2874                              i2l415 27CC  
                            i2l424 287E                              i2l416 276A  
                            i2l408 2640                              i2l417 2772  
                            i2l409 2644                              i2l418 277A  
                            i2l419 2782                              i2l390 2322  
                            i2l383 24B4                              i2l384 2298  
                            i2l393 2410                              i2l385 229C  
                            i2l394 2414                              i2l386 236C  
                            i2l395 241E                              i2l387 230A  
                            i2l388 2312                              i2l581 64B2  
                            i2l389 231A                              i2l398 26E4  
                            i2l399 24C8                              i2l576 6416  
                            i2l796 489C                    ___awdiv@counter 007B  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3253 003B                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A8                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0083  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                   __end_of_ISR_alta 48D8  
                   __CFG_EBTR5$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                            _check 00D5                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 646E                    __end_of_dpowers FE59  
                            _scale 2914                    __end_of_isdigit 6390  
        __size_of_LCD_shift_cursor 004C                     __pbitbssCOMRAM 0258  
             __end_of_CANisRxReady 64B6                              tablat 000FF5  
             __end_of_CANisTxReady 63DA                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 0080  
                            utoa@v 007E                              status 000FD8  
                  __end_of_sprintf 139A                __size_of_LCD_cursor 0032  
                  __initialization 61A6                       __end_of_main 2284  
                     __end_of_itoa 61A6      __size_of_board_initialization 00A4  
                    _LCD_goto_line 570A                       __end_of_utoa 5972  
                ?_Joystick_Polling 002A                 ??_Joystick_Polling 0071  
                ?_LCD_write_string 0082                             ??_main 0149  
                           ??_itoa 0087                             ??_utoa 007E  
        __size_ofi2_CANsendMessage 0690                      __activetblptr 000003  
                        ??_LCD_Gap 0084                          ??_LCD_End 0084  
                   _JoystickValues 00DD                 ??_LCD_write_string 0084  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3251 0071  
                __end_of_LCD_clear 6366              i2CANsendMessage@flags 0042  
           LCD_write_string@buffer 0082                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0071  
                           ?_scale 0098                             _ADRESH 000FC4  
                 ___awdiv@dividend 0077                             _CAN_Rx 5AE8  
                           _CAN_Tx 5A2E                    __CFG_BBSIZ$1024 000000  
                           i2l9031 308E                             i2l9023 3052  
                           i2l9015 3016                             i2l9007 2FA6  
                           i2l9033 30C0                             i2l9027 3070  
                           i2l9019 3034                             i2l9081 32B0  
                           i2l9093 3304                             i2l9085 32CC  
                           i2l9077 3294                             i2l9069 3226  
                           i2l9413 2636                             i2l9317 232A  
                           i2l9095 3336                             i2l9343 2422  
                           i2l9089 32E8                             i2l9337 2406  
                           i2l9419 2652                             i2l9605 483E  
                           i2l9615 486A                             i2l9393 255A  
                           i2l9563 475C                             i2l9555 4736  
                           i2l9619 4898                             i2l9469 278A  
                           i2l9581 47BA                             i2l9573 4794  
                           i2l9549 4714                             i2l9495 2882  
                           i2l9567 4766                             i2l9489 2866  
                           i2l9587 47D2                             i2l9595 47FC  
                           i2l9599 481A                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0075  
               CANsendMessage@tamp 007D                   __end_of___xxtofl 4AA6  
                  _switch_position 00E9                   __end_of_delay_ms 6260  
            __size_of_CANSetFilter 0B06                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00C0                   __end_of__powers_ FE31  
                       _MotoreFlag 025C                     ?_LCD_goto_line 002A  
                           ___flge 5178                          ??___fladd 00AD  
                 _delay_set_quartz 64B6                             ___wmul 6298  
                        ??___fldiv 0087                          ??___awdiv 007B  
                        ??___flneg 009C                     __CFG_STVREN$ON 000000  
                        ??___awmod 0075                          ??___flmul 0087  
                        ??___flsub 00C1                          ??___fltol 00BD  
                        ??___lldiv 0079                          ??___llmod 0079  
                        ??___lwdiv 0075                       ??_CANSetMask 0076  
                        ??___lwmod 0075            __size_of_LCD_write_char 0096  
                           _fround 43E6     LCD_initialize@quartz_frequency 007F  
                           clear_0 61AC                             clear_1 61B8  
                           clear_2 61CA                   ___awdiv@quotient 007D  
                  ___awmod@divisor 0073               __size_of_LCD_Handler 01AE  
                  ___awmod@counter 0075                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00CD                             itoa@cp 0087  
                        ??_isdigit 0071               __size_of_LCD_Parking 0064  
                     __mediumconst FDC8                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00CB  
                     _CANSetFilter 0000                         ___flge@ff1 0071  
                       ___flge@ff2 0075                       ___xxtofl@arg 007B  
                     ___xxtofl@exp 007A                       ___xxtofl@val 0071  
                       __accesstop 0060            __end_of__initialization 61E2  
               __end_of_CANSetMask 43E6                          ?_LCD_Park 002A  
                  __CFG_PBADEN$OFF 000000                         _SterzoFlag 025E  
                       ___flneg@f1 0098                   _LCD_send_command 61EC  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 008B  
                       ___fltol@f1 00B9               __size_of_LCD_goto_xy 001C  
                   __pcstackCOMRAM 002A                       __pidataBANK0 64C0  
                        ?_ISR_alta 002A                       LCD_goto_xy@x 0081  
                     LCD_goto_xy@y 0080                      __end_of_scale 2E2E  
                   _LCD_initialize 5490                  _LCD_write_integer 4C6C  
                _LCD_write_message 62CE              CANSetFilter@numBuffer 007A  
               ?_LCD_write_integer 0089             LCD_write_integer@index 0098  
               ?_LCD_write_message 0082                         __div_to_l_ 5308  
                     ??_LCD_cursor 007E             LCD_write_integer@value 0089  
    LCD_write_integer@convertedInt 0092                  _space_gap_reached 0264  
                    _newMessageCan 0260                       _actual_speed 00DF  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
              ??_LCD_write_integer 008D                    __div_to_l_@exp1 007E  
              ??_LCD_write_message 0084                    __div_to_l_@cntr 007D  
                          ??_scale 009C                   _LCD_shift_cursor 60CA  
                  __div_to_l_@quot 0079           __end_of_CANOperationMode 64A0  
                          ?_CAN_Rx 002A                            ?_CAN_Tx 002A  
                       __pbssBANK0 00CD                         __pbssBANK1 0100  
                       _data_brake 00EA                         ??_LCD_Park 0084  
          __size_of_CANsendMessage 078C                         _data_speed 00EB  
                    __div_to_l_@f1 0071                      __div_to_l_@f2 0075  
                  ??_LCD_goto_line 007D                 __end_of_LCD_cursor 6334  
           __end_of_LCD_initialize 55FE                            ?___flge 0071  
                          ?___wmul 0071                         ??_ISR_alta 0060  
        __end_of_LCD_write_integer 4E2C          __end_of_LCD_write_message 6302  
                ?_LCD_enable_pulse 002A                            ?_fround 0098  
                     _CANisRxReady 64A0                            _CANSTAT 000F6E  
               ??_LCD_enable_pulse 0079                       _CANisTxReady 63B6  
                        ISR_alta@i 0070                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 2284        __size_of_PWR_Button_Polling 001C  
                          _LCD_Gap 5F4C                            _LCD_End 5FB0  
                        ?___xxtofl 0071            __size_ofi2_CANisTxReady 001E  
           __size_of_CANInitialize 01C6                   LCD_cursor@active 007E  
                        ?_delay_ms 0077                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0078                            _AbsFlag 0258  
                _parking_message_E 0261                    __size_of_CAN_Rx 00AE  
                  __size_of_CAN_Tx 00BA                  __end_of__npowers_ FDFD  
                          __Hparam 0000                         _left_speed 0021  
                       _scale$4256 009C                            __Lparam 0000  
                 delay_ms@value_ms 0077                    ?_LCD_initialize 002A  
                  __size_of___flge 0190                            ___fladd 333A  
                          ___fldiv 3C88                            ___awdiv 57F6  
                          ___flneg 6260                            ___awmod 5C3A  
                          ___flmul 37E2                            ___flsub 6116  
                          ___fltol 55FE                            ___lldiv 5972  
                  __size_of___wmul 0036                     _LCD_write_char 5D76  
                          ___llmod 5CDC                            ___lwdiv 5E0C  
                          ___lwmod 6014               CANInitialize@propSeg 0088  
                          __pcinit 61A6                            _battery 0027  
                  __size_of_fround 02F6                            __ramtop 0D00  
              LCD_write_char@value 0081                            __ptext0 1B26  
                          __ptext1 5B96                            __ptext2 4AA6  
                          __ptext3 4048                            __ptext4 0000  
                          __ptext5 648A                            __ptext6 641A  
                          __ptext7 5E84                            __ptext8 5EE8  
                          __ptext9 4E2C                        ?__div_to_l_ 0071  
                 LCD_write_char@D0 0080                   LCD_write_char@D1 007F  
                 LCD_write_char@D2 007E                   LCD_write_char@D3 007D  
                        _F1_switch 025A                            _dpowers FE31  
                        _F2_switch 025B                            _isdigit 6366  
                       ??___xxtofl 0075                   ___awmod@dividend 0071  
                       ??_delay_ms 0079             CANreceiveMessage@error 0045  
     __end_of_board_initialization 5C3A          __size_of_Joystick_Polling 0054  
         __end_of_delay_set_quartz 64C0                            _sprintf 0B06  
                   __pintcode_body 46DC                          _LCD_clear 6334  
             end_of_initialization 61E2          __size_of_LCD_write_string 0026  
                          itoa@buf 0081                            itoa@val 0083  
                          int_func 46DC                          i2u1204_40 2EE6  
                        i2u1204_46 2EE8                          i2u1205_40 2F14  
                        i2u1213_45 309A                          i2u1205_46 2F16  
                        i2u1215_40 316E                          i2u1207_45 2F2A  
                        i2u1215_46 3170                          i2u1216_40 3198  
                        i2u1240_40 2348                          i2u1224_45 3310  
                        i2u1240_45 233E                          i2u1216_46 319A  
                        i2u1241_40 238E                          i2u1241_45 2384  
                        i2u1218_45 31AC                          i2u1242_45 23DA  
                        i2u1340_47 4864                          i2u1253_40 2578  
                        i2u1253_45 256E                          i2u1254_40 25BE  
                        i2u1254_45 25B4                          i2u1255_45 260A  
                        i2u1266_40 27A8                          i2u1266_45 279E  
                        i2u1290_45 4816                          i2u1267_40 27EE  
                        i2u1267_45 27E4                          i2u1268_45 283A  
                        i2u1279_40 4734                          i2u1289_40 4814  
                    _CANInitialize 4AA6                    ___lldiv@divisor 0075  
               LCD_cursor@blinking 007D                      _parking_state 00E7  
                  ___lldiv@counter 007D             __end_of_LCD_write_char 5E0C  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0078  
                   __tdiv_to_l_@f1 0071                     __tdiv_to_l_@f2 0075  
                          utoa@val 007A                         _wait_low_1 0266  
                       _wait_low_2 0267                         _wait_low_3 0268  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0079  
          _steering_correction_dir 0265                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0071  
                        _PORTDbits 000F83                     CANSetMask@tamp 007B  
         __end_of_LCD_send_command 6226                     CANSetMask@type 0075  
                      ___fladd@grs 00B8                      ___xxtofl@sign 0079  
                      ___fldiv@grs 0092                        ___fldiv@rem 008C  
                _F1_Button_Polling 646E                         ?_LCD_clear 002A  
               ?_F1_Button_Polling 002A                     __end_of_CAN_Rx 5B96  
                   __end_of_CAN_Tx 5AE8            _clock_counter_reference 00E1  
                      ___flmul@grs 008D                     _CANsendMessage 139A  
                 CANInitialize@BRP 0082                   CANInitialize@SJW 0081  
                   ?_CANInitialize 007F                ??_F1_Button_Polling 0071  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0107                    ?_LCD_write_char 002A  
                    ??_LCD_Handler 00CD           __end_of_LCD_shift_cursor 6116  
                   __end_of___flge 5308                         ?_ISR_bassa 002A  
                   __end_of___wmul 62CE                  __size_of_ISR_alta 48D0  
                    ??_LCD_Parking 0084                  LCD_shift_cursor@i 007F  
                   __end_of_fround 46DC                     i2_CANisTxReady 63FC  
        __end_of_F1_Button_Polling 648A                start_initialization 61A6  
              __end_of__tdiv_to_l_ 5178                CANSetMask@numBuffer 007A  
                    _data_speed_rx 0100             __end_of_CANsendMessage 1B26  
                         ??_CAN_Rx 0071                           ??_CAN_Tx 0081  
                ?_CANOperationMode 002A                      _data_steering 00EC  
                    ??_LCD_goto_xy 0081         i2CANsendMessage@dataLength 0041  
             i2CANsendMessage@data 003F                 ??_CANOperationMode 0071  
             i2CANsendMessage@tamp 0047                    ___llmod@divisor 0075  
         __end_ofi2_CANsendMessage 2914         CANInitialize@FilterConfig1 0089  
       CANInitialize@FilterConfig2 008A                    ___llmod@counter 0079  
              _steering_correction 00E8                           ??___flge 0079  
             _board_initialization 5B96                           ??___wmul 0075  
                      __pdataBANK0 00ED                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009C             __end_ofi2_CANisTxReady 641A  
                    sprintf@tmpval 013E                          ___fladd@a 00A9  
                        ___fladd@b 00A5             CANInitialize@phaseSeg1 007F  
           CANInitialize@phaseSeg2 0080                         fround@prec 00A4  
              __end_of_LCD_Handler 4FDA                           ?_LCD_Gap 002A  
                         ?_LCD_End 002A                          ___fldiv@a 0083  
                        ___fldiv@b 007F                          ___flmul@a 0083  
                        ___flmul@b 007F                        __pbssCOMRAM 0001  
                        ___flsub@a 00BD                          ___flsub@b 00B9  
                    __pcstackBANK0 0060                      __pcstackBANK1 0130  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 5EE8  
                      _BRGCON3bits 000F72                   _Joystick_Polling 6076  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3840 0072         i2CANsendMessage@identifier 003B  
                _park_assist_state 0128                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007D                    ?_CANsendMessage 0071  
          LCD_write_message@buffer 0082                   _LCD_write_string 6390  
                  ??_CANInitialize 0084                        sprintf@flag 0136  
                      sprintf@fval 0144                        sprintf@prec 0142  
                 ??_LCD_initialize 007F                 CANSetFilter@filter 0071  
        delay_set_quartz@frequency 0071                   ___lwdiv@dividend 0071  
               LCD_send_command@D0 007B                 LCD_send_command@D1 007A  
               LCD_send_command@D2 0079                 LCD_send_command@D3 007C  
              __end_of_LCD_goto_xy 6452              __end_of_LCD_goto_line 57F6  
            ?_board_initialization 002A                          __pintcode 0008  
                    __pmediumconst FDC8                           ?___fladd 00A5  
                         ?___fldiv 007F                           ?___awdiv 0077  
                         ?___flneg 0098                           ?___awmod 0071  
                         ?___flmul 007F                           ?___flsub 00B9  
                         ?___fltol 00B9                           ?___lldiv 0071  
                         ?___llmod 0071                          __npowers_ FDC9  
                         ?___lwdiv 0071                           ?___lwmod 0071  
                      ??_ISR_bassa 002A                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 6436                    ?i2_CANisTxReady 002A  
                      __tdiv_to_l_ 4FDA                       ??__div_to_l_ 0079  
                      _COMSTATbits 000F74                           ?_isdigit 002A  
       __size_of_F1_Button_Polling 001C                   ___lwdiv@quotient 0075  
                         ?_sprintf 00C3                     __size_of_scale 051A  
                ?_delay_set_quartz 002A              CANreceiveMessage@tamp 0046  
               ??_delay_set_quartz 0071                           _LCD_Park 5EE8  
                   ___wmul@product 0075                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00ED  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 5490  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         _RXB1EIDH 000F53                          _pr_time_1 00D9  
                        _pr_time_2 0009                           _RXB1EIDL 000F54  
                        _pr_time_3 000D                          _pr_time_4 0011  
                        _pr_time_5 0015                          _pr_time_6 0019  
                        _set_speed 00E3                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 4E2C                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008C                 _parking_message_ID 00E6  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                      _LCD_Parking 5E84                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0071                           _RTR_Flag 025D  
                ?_LCD_send_command 0079                   _actual_speed_kmh 0001  
                        _user_data 0025                   __size_of_LCD_Gap 0064  
                 __size_of_LCD_End 0064                 ??_LCD_send_command 007C  
                    ?_CANSetFilter 0071                         _CANCONbits 000F6F  
                      _LCD_goto_xy 6436                   ??_LCD_write_char 007D  
                LCD_goto_line@line 007D                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008B  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 04A8                         _CANSetMask 4048  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007D  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4254 00A0                        _fround$4255 009C  
               ??_LCD_shift_cursor 007E                         sprintf@exp 013C  
                       sprintf@val 0138                           ___xxtofl 48D8  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 6226                    ___lwdiv@divisor 0073  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0077  
                   ??_CANSetFilter 0076                   _LCD_enable_pulse 63DA  
                         __ptext10 0B06                           __ptext11 2914  
                         __ptext20 5CDC                           __ptext12 6366  
                         __ptext21 5972                           __ptext13 43E6  
                         __ptext30 58B4                           __ptext22 55FE  
                         __ptext14 37E2                           __ptext31 6014  
                         __ptext23 6116                           __ptext15 5C3A  
                         __ptext40 5490                           __ptext32 5E0C  
                         __ptext24 333A                           __ptext16 57F6  
                         __ptext41 64B6                           __ptext33 6390  
                         __ptext25 6260                           __ptext17 4FDA  
                         __ptext50 6452                           __ptext42 6302  
                         __ptext34 6436                           __ptext26 5178  
                         __ptext18 5308                           __ptext51 646E  
                         __ptext43 6334                           __ptext35 60CA  
                         __ptext27 3C88                           __ptext19 48D8  
                         __ptext60 2E2E                           __ptext52 5A2E  
                         __ptext44 570A                           __ptext36 5F4C  
                         __ptext28 4C6C                           __ptext61 64A0  
                         __ptext53 139A                           __ptext45 61EC  
                         __ptext37 5FB0                           __ptext29 615E  
                         __ptext54 63B6                           __ptext46 63DA  
                         __ptext38 62CE                           __ptext55 5AE8  
                         __ptext47 6226                           __ptext39 5D76  
                         __ptext48 6298                           __ptext49 6076  
                         __ptext58 2284                           __ptext59 63FC  
                     _RXF2SIDLbits 000F09                           __powers_ FDFD  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 0894  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0077                      __size_of_main 075E  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                ?i2_CANsendMessage 003B               CANreceiveMessage@msg 003B  
            LCD_shift_cursor@shift 007E                i2_CANisTxReady$3251 003B  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 0072  
               ??i2_CANsendMessage 0043                       _TXB1SIDLbits 000F32  
         __end_of_Joystick_Polling 60CA                       _TXB2SIDLbits 000F22  
                         int$flags 004E          __size_of_CANOperationMode 0016  
                    ?_CANisRxReady 002A                      ?_CANisTxReady 002A  
         __end_of_LCD_write_string 63B6                        _RXB0DLCbits 000F65  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 6302  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 2E2E  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 0028                   ??_CANsendMessage 0079  
               ?_CANreceiveMessage 003B                           itoa@base 0085  
                         isdigit@c 0073                           scale@scl 00A0  
         CANsendMessage@identifier 0071                       _time_counter 001D  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0134                   __tdiv_to_l_@exp1 0081  
                        sprintf@sp 00C3                   __tdiv_to_l_@cntr 0080  
                 CANSetFilter@tamp 007B                   __tdiv_to_l_@quot 007C  
                 CANSetFilter@type 0075                ??_CANreceiveMessage 003D  
                 ___lwmod@dividend 0071                   ___lldiv@dividend 0071  
                      _TXB0DLCbits 000F45                        _right_speed 0023  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 025F  
                 ??i2_CANisTxReady 003B               CANOperationMode@mode 0071  
                   ??_CANisRxReady 003B                        ?_CANSetMask 0071  
                   ??_CANisTxReady 0071                       ?__tdiv_to_l_ 0071  
        __end_of_CANreceiveMessage 333A                           utoa@base 007C  
                         sprintf@c 0148                           sprintf@f 00C5  
                 ___lldiv@quotient 0079                    ___lwmod@divisor 0073  
  LCD_shift_cursor@number_of_shift 007D                    ___lwmod@counter 0075  
                    ___fladd@signs 00B5                 _PWR_Button_Polling 641A  
                     ___fladd@aexp 00B6                       ___fladd@bexp 00B7  
            __end_of_CANInitialize 4C6C                ?_PWR_Button_Polling 002A  
                     _power_switch 0262  
